/**
\defgroup	OCIRQ OCIRQ (Interrupt ReQuest)
@{
\n			This module manage External Interrupt.
\n          It was implemented in order to manage Zero Crossing Voltage.
\n          The user must provide a callback function that will be called at interrupt event
\n          This module requires a configuration file "IRQ_cfg.h" that must be included inside Config.h.
\n          You can find this file inside "\Drivers\OCIRQ\Sample", in the same folder you can find an example
\n          for managing this module.
\n
\version 01.00
\n
\par    Configuration:
\n
\n\li   \b IRQ_ON_EDGE_ONLY
\n      IRQ event on falling edges or rising edges only
\n\li   \b IRQ_ON_EDGE_AND_LEVEL
\n      IRQ event on falling edges and low levels or on rising edges and high levels
\n\li   \b IRQ_FILTER
\n      filter
\n
\par Exported Functions (Platform Level):
\li   OCIRQ_InitSync()
\li   OCIRQ_SetEdgeSync()
\li   OCIRQ_IntrptEnableSync()
\li   OCIRQ_GetEdgeSync()
\li   OCIRQ_ChangeEdgeSync()
\li   OCIRQ_DeInitSync()
\li   IRQ_ISR()
\li   IRQ_IsValid()



\n
\par Architecture Requirements ID:
\li SARS_WMMT_MN_DrvIRQ_1
\li SARS_WMMT_MN_DrvIRQ_2


@}
\ingroup   	Drivers
*/