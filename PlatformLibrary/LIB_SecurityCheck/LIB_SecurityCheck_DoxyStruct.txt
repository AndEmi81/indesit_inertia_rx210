/**
\defgroup	LIB_SecurityCheck Security Checks
@{

@}
\ingroup   	PlatformLibrary
*/

/**
\defgroup	LIB_TaskMonitor Task Monitoring
@{
\n          Monitors Tasks's activation, in TaskMonitor_Cfg.h you must define
\n          numbers of tasks to monitor, task ID and task timeout in terms of
\n          multiple of periodic task.
\n
\version 01.00
\n
\par    Configuration:
\n
\n\li   \b NUM_TASKS_TO_MONITOR
\n      numbers of tasks or functions to monitor
\n\li   \b <>_TASK_ID
\n      task or function id
\n\li   \b TOUT_<>_TASK
\n      task's activation timeout expressed in GP periods (typically 10 msec)
\n
\par Exported Functions (Application Level):
\li LIB_TaskMonitoringConfig()
\li LIB_SetTask()
\li LIB_TaskStartActivity()
\li LIB_TaskEndActivity()
\li LIB_HelloTaskMonitor()

\par Exported Functions (Platform Level):
\li LIB_TaskMonitor()
\li LIB_TaskMonitorInit()
\li LIB_IRQMonitor_Init()
\li LIB_IRQMonitor_Enter()
\li LIB_IRQMonitor_Exit()
\li LIB_IRQMonitor()


\par  Safety Functions:
\li   LIB_TaskMonitor()
\li   LIB_HelloTaskMonitor()
\li   LIB_SetTask()
\li   CheckActTask()

\par Safety Variables:
\li N.A.


\par Architecture Requirements ID:
\li	MEAS_CLASS_B_13

@}
\ingroup   	LIB_SecurityCheck
*/

/**
\defgroup   LIB_ProductSafety Product Safety
@{
\n      This module contains Safety Supervisor and Safety Actions Mgr,
\n      standard modules for Product Safety monitor.
\n 
\n      These modules are used with specific Product Safety Modules and
\n      Safety Actions required and need proper configuration to know
\n      which ones are available. 
\n
\version	01.00
\n
\par    Configuration:
\todo
\n
\par 	Exported Functions (Application Level):
\li 	LIB_SFT_SafetyActionRequest()
\li 	LIB_SFT_SafetyFlagsRequest()
\li		LIB_SFT_GetPendingSafetyActionBmp()
\li		LIB_SFT_GetRequestSafetyActionBmp()
\li		LIB_SFT_GetSafetyActionExecBmp()
\li		LIB_SFT_GetSafetyActionDoneBmp()
\li		LIB_SFT_ResetStatusChangeNotification()
\li		LIB_SFT_GetSafetyModFaultStatus()
\li		LIB_SFT_GetAllSafetyFaultStatus()
\li		LIB_SFT_GetOverallFaultStatus()
\li		LIB_SFT_GetResetChangedFaultStatus()
\li		LIB_SFT_GetSafetyModStatus()
\li		LIB_SFT_GetSafetyFaultCode()
\li		LIB_SFT_GetFaultSourceStatus()

\par Exported Functions (Platform Level):
\li		LIB_SFT_SafetySupervisorCommonCfgInit()
\li		LIB_SFT_SafetySupervisorInit()
\li		LIB_SFT_SafetySupervisor()
\li		LIB_SFT_SafetyActionMgr()
\li		LIB_SFT_SafetyActionBmpReset()

\par    Safety Functions:
\li		LIB_SFT_SafetySupervisor()
\li		LIB_SFT_SafetyActionMgr()
\n
\par 	Safety Variables:
\li		sft_supervisor_status_t SafetySupervisorStatus
\li 	sft_safetyAction_status_t SafetyActionStatus

\n
\n
\par Architecture Requirements ID:
\li	SARS_WMMT_MN_SSV_1
\li SARS_WMMT_MN_SSV_2
\li SARS_WMMT_MN_SSV_3

@}
\ingroup    LIB_SecurityCheck
*/

/**
\defgroup   LIB_ClassB Class B Checks
@{
\n      This module implements most of functions that execute tests on the 
\n      hardware of the microcontroller.
\n 
\n      Tests provided are:
\li     Flash test 
\n\li   RAM test   
\n\li	CPU registers test
\n\li	Watchdog test
\n\li	ADC test
\n
\version 01.00
\n
\par Safety Functions:
\li InitMemoryCheck()
\li RegCheck()
\li LIB_ClassB_RAM_BIST()
\li LIB_ClassB_Keywords_BIST()
\li CheckFlash_Init()
\li CheckFlash_Manager()
\li CheckClock_Manager()
\li LIB_ClassB_WDTCheckInit()
\li ADC_Check()



\par Safety Variables:
\li N.A.

\n
\n
\par Architecture Requirements ID:
\li	MEAS_CLASS_B_11
\li	MEAS_CLASS_B_3
\li	MEAS_CLASS_B_41
\li MEAS_CLASS_B_42
\li MEAS_CLASS_B_43
\li MEAS_CLASS_B_721
\li MEAS_CLASS_B_722

@}
\ingroup    LIB_SecurityCheck
*/


/**
\defgroup	grpDataCare Data Care 
@{
\n         
\n
\version 01.00
\n
\par    Configuration:
\n

\n
\par  Safety Functions:
\li Sec_CheckExtVar()
\li Sec_UpdateExtVar()



\par Safety Variables:
\li N.A.


\par Architecture Requirements ID:
\li	SARS_WMMT_MN_SDC_1
\li SARS_WMMT_MN_SDC_2
\li SARS_WMMT_MN_SDC_3

@}
\ingroup LIB_SecurityCheck
*/