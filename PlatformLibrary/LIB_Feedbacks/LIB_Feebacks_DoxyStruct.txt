/**
\defgroup	LIB_Feedbacks Feedbacks
@{
			This module implements all necessary functions for feedbacks acquisitions.
\n          It supports feedbacks linked to non partialized loads that must be read after x uSec
\n          from Zero Crossing Voltage and feedbacks linked to partialized loads that must be read
\n          after y uSec from Zero Crossing Voltage, with x < y
\n          Eg. x=1000 uSec and y=8000 uSec.
\n          N.B.: x and y depends from nominal grid frequency.
\n          The Kernel of the module is LIB_FDB_Manager.
\n          The function's prototypes useful to the Application are defined in FeedbackExp.h
\n          The user must provide an header file named FeedbackConfig.h in order to setup the module
\n
\version 01.00
\n
\par        Configuration:
\li       \b N_FEEDBACK  Numbers of Supported Feedbacks
\li       \b FEEDBACK_SAMPLES  Number of readings in order to establish feedback's state
\li       \b FDB_NO_ZC_LIMIT_FOR_FREQ Check LIB_FDB_Manager() doc.
\li       \b FDB_NO_ZC_LIMIT_FOR_LEVEL Check LIB_FDB_Manager() doc.
\li       \b FDB_ZC_LIMIT_FOR_FREQ  Check LIB_FDB_Manager() doc.
\li       \b FDB_ZC_LIMIT_FOR_LEVEL Check LIB_FDB_Manager() doc.
\n
\par   	Exported Functions (Platform Level):
\li       LIB_FDB_InitSync()
\li       LIB_FDB_RegisterFeedback()
\li       LIB_FDB_Manager()
\li       LIB_FDB_FeedbackInitMeasure()
\n
\par	Exported Functions (Application Level):
\li		LIB_FDB_AreFeedbackReady()
\li     LIB_FDB_GetFeedbackInput()
\li     LIB_FDB_GetFeedbackVal()
\li     LIB_FDB_IsFeedbackReady()
\li     LIB_FDB_IsFeedbackWritableReady()
\li     LIB_FDB_GetFeedbackWritableBitMap()
\n
\par Exported Variables:
\li #Feedback[N_FEEDBACK]
\li #FeedbackInputDisable
\n
\par Architecture Requirements ID:
\li SARS_WMMT_MN_FBM_1
\li SARS_WMMT_MN_FBM_2

@}
\ingroup   	PlatformLibrary
*/