   1                             		.file	"PM_EnergyMeterSw.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.global	___floatunsisf
   5                             		.global	___divsf3
   6                             		.global	___fixunssfsi
   7                             		.section	.text.VoltAvgMeasuresUpdate.constprop.1,"ax",@progbits
   9                             	_VoltAvgMeasuresUpdate.constprop.1:
  10                             	.LFB33:
  11                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw/PM_EnergyMeterSw.c
   1:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Copyright (c) 2004-2011, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  */
   5:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
   7:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
   8:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \Par    Software Energy Meter
   9:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  10:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  11:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \file     ${PM_EnergyMeterSw.c}
  12:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \ingroup  PM_EnergyMeterSw
  13:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     13-06-2011
  14:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  Platform2_00.00.12 (project baseline related to creation of this module)
  15:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
  16:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  17:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  18:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \Par\b  History:
  19:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  20:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    00.00.12
  21:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    13-06-2011
  22:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    developer Intecs
  23:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    changes First revision
  24:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  25:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  26:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    01.03.00 <baseline di progetto relativa alla versione precedente la corrente>
  27:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    gg/mm/aaaa <data in cui ï¿½ stata realizzata >
  28:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    developer <progettista autore della modifica>
  29:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    changes <principali modifiche apportate>
  30:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    - change 1
  31:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n    - change 2
  32:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  33:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  34:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \n
  35:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
  36:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ********** */
  37:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Includes   */
  38:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ********** */
  39:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  40:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  41:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(OS_EmbOS)
  42:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "RTOS.h"
  43:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #else
  44:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "OSEK.h" 
  45:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "SkeletonGlobal.h" 
  46:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
  47:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  48:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  49:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  50:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  51:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  52:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*lint -e537*/
  53:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "Config.h"
  54:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "callback.h"
  55:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "LIB_Utilities.h"
  56:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "PM_EnergyMeterSw.h"
  57:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "PM_EnergyMeterSwTable.h"
  58:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include "OutputManagerExp.h"
  59:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*lint +e537*/
  60:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(CONFIG_PM_ENERGY_METER_SW)
  61:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  62:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  63:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  64:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if (EMS_V_PEAK_AVERAGE == 0)
  65:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #include <math.h>
  66:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
  67:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  68:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  69:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
  70:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Defines and Macros */
  71:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
  72:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  73:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Indexes for loads */
  74:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_ui8RLoadIndex           (m_sLoadIndex.resistor)
  75:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_ui8MLoadIndex           (m_sLoadIndex.motor)
  76:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_ui8TLoadIndex           (m_sLoadIndex.table)
  77:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Flags */
  78:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_bAccuEnabled            (m_sFlags.accuEnabled)
  79:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_bOneShot                (m_sFlags.oneShot)
  80:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_ui8EnergyUpdateCnt      (m_sFlags.energyUpdateCnt)
  81:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  82:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if (EMS_BUFFER_DOUBLE_USE == 0)
  83:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_psVMeasAccCurr          (&m_sVMeasAcc)
  84:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define m_psVMeasAccHold          (&m_sVMeasAcc)
  85:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
  86:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  87:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Energy Meter Data: Algorithm Parameters */
  88:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define ALGO_PARAMS_NOT_VALID()   ((m_sAlgoParams.Data == NULL) || (m_sAlgoParams.DataLenght < ALGO
  89:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define g_ui16ALGO_PMAX           (*((uint16_t*)&(m_sAlgoParams.Data[ALGO_PARAMS_OFFSET_PMAX])))
  90:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define g_ui16ALGO_EMAX           (*((uint16_t*)&(m_sAlgoParams.Data[ALGO_PARAMS_OFFSET_EMAX])))
  91:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define g_ui16ALGO_KENERGY_MANT   (*((uint16_t*)&(m_sAlgoParams.Data[ALGO_PARAMS_OFFSET_KENERGY_MAN
  92:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define g_i8ALGO_KENERGY_EXP      (*((int8_t*)&(m_sAlgoParams.Data[ALGO_PARAMS_OFFSET_KENERGY_EXP])
  93:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define g_ui8ALGO_TS              (*((uint8_t*)&(m_sAlgoParams.Data[ALGO_PARAMS_OFFSET_TS])))
  94:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define g_ui16ALGO_VMAX10         (*((uint16_t*)&(m_sAlgoParams.Data[ALGO_PARAMS_OFFSET_VMAX10])))
  95:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #define g_ui16ALGO_NORM_RTN       (*((uint16_t*)&(m_sAlgoParams.Data[ALGO_PARAMS_OFFSET_NORM_RTN]))
  96:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  97:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
  98:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* *************************** */
  99:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Typedef, Structs and Unions */
 100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* *************************** */
 101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** typedef struct
 104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if (EMS_V_PEAK_AVERAGE || EMS_V_RMS_AVERAGE)
 106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* accumulator for normalized Vpeak values */
 107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t  ui32VPeakAcc;
 108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* accumulator for normalized Vpeak^2 values */
 111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t  ui32VPeak2Acc;
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t   ui8NSamples;
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** } sVMeasAcc_t;
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** typedef struct
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t   ui8Mask;      /* mask to perform control on active load */
 120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t*  pui8Status;   /* active load variable pointer: NULL = always active */
 121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t  ui16Gmant;    /* 1/R' (mantissa) */
 122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   int8_t    i8Gexp;       /* 1/R' (exponent) */
 123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** } sRLoadParam_t;
 124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** typedef struct
 127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t   ui8Mask;      /* mask to perform control on active load */
 129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t*  pui8Status;   /* active load variable pointer: NULL = always active */
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t* pui16PVal;    /* pointer were retrieve the current value of power */
 131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t* pui32EVal;    /* pointer were retrieve the current value of energy */
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** } sMLoadParam_t;
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** typedef struct
 137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t   ui8Mask;      /* mask to perform control on active load */
 139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t*  pui8Status;   /* active load variable pointer: NULL = always active */
 140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   stTable_t sTable;       /* load data table */
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** } sTLoadParam_t;
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** typedef struct
 145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t accuEnabled     : 1;  /* energy meter store and measurement activation */
 147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t oneShot         : 1;  /* one shot or continuous store and measurement */
 148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t energyUpdateCnt : 6;  /* counter for update energy period elapsed */
 149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** } sFlags_t;
 150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** typedef struct
 153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t resistor      : 2;  /* index for resistive load */
 155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t motor         : 2;  /* index for motor load */
 156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t table         : 4;  /* index for table load */
 157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** } sLoadIndex_t;
 158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Exported variables */
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Energy counter from start of life in [Wh] = [J]*3600 */
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*static*/ uint32_t b_ui32EnergyCounterWh;          /* SI Backup */
 168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Accumulator for energy in a second = [Ws] = [J] */
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*static*/ uint16_t b_ui16EnergyCounterWhAcc;       /* SI Backup */
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_USE_ELAPSED_TIMER
 173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Time in seconds elapsed from start of life */
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static uint32_t b_ui32TimeElapsedSinceStart;    /* NO Backup */
 175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Local variables    */
 179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(CONFIG_LIB_EXTERNAL_BOARD_SUPPORT) && defined(CONFIG_EMS_MLOAD_ITEMS_MAX)
 181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** sEMS_ExtInfo_t EMSInfoBuffer[CONFIG_EMS_MLOAD_ITEMS_MAX];
 182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Debug variables    */
 185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* PLOS */
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Pointer to DSPInfoBuffer */
 191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(CONFIG_LIB_EXTERNAL_BOARD_SUPPORT)
 192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint8_t * pDSPInfoBuffer;
 193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Normalization algorithm parameters */
 196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC Loader_Struct m_sAlgoParams = { /*lint -epp*/ NULL /*lint -epp*/, 0 };
 198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if CONFIG_EMS_RLOAD_ITEMS_MAX
 201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Array for resistive loads parameters collection */
 202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC sRLoadParam_t m_asRLoadParam[CONFIG_EMS_RLOAD_ITEMS_MAX];
 203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if CONFIG_EMS_MLOAD_ITEMS_MAX
 206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Array for motor loads parameters collection */
 207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC sMLoadParam_t m_asMLoadParam[CONFIG_EMS_MLOAD_ITEMS_MAX];
 208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if CONFIG_EMS_TLOAD_ITEMS_MAX
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Array for Table loads parameters collection */
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC sTLoadParam_t m_asTLoadParam[CONFIG_EMS_TLOAD_ITEMS_MAX];
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC sLoadIndex_t m_sLoadIndex = { 0, 0, 0 };
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* flag to activate energy meter store and measurement */
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC sFlags_t m_sFlags = { 1, 0, 0 };
 219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* last normalized peak voltage measured */
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_V_PEAK_HOLD
 222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC uint16_t m_ui16VPeak = 0;
 223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_V_PEAK_THRESHOLD
 226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  /* last max normalized peak voltage measured */
 227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC uint16_t m_ui16VPeakThreshold = 0;
 228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_V_RMS_AVERAGE
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  /* Average physical/normalized Vrms on last N samples */
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC uint16_t m_ui16VrmsAvg = 0;
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* double buffer management data structure */
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_BUFFER_DOUBLE_USE
 237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC sVMeasAcc_t  m_asVMeasAcc[2];
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC sVMeasAcc_t* m_psVMeasAccCurr = &m_asVMeasAcc[0];
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC sVMeasAcc_t* m_psVMeasAccHold = &m_asVMeasAcc[1];
 240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #else
 241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC sVMeasAcc_t  m_sVMeasAcc;
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Power in the last period */
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint16_t m_ui16PowerPeriod = 0;
 246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Normalized Energy accumulator for Resistors and Tables */
 248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint32_t m_ui32EnergyRTAcc = 0;
 249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*(Phisical) Energy */
 251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint32_t m_ui32EnergyOffset = 0;
 252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* #define DONT_MANAGE_OVERFLOW  1 */
 254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* #define DONT_MANAGE_OVERFLOW_MAINK  1 */
 255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* #define DONT_MANAGE_OVERFLOW_DSP  1 */
 256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #ifndef DONT_MANAGE_OVERFLOW
 257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #ifndef DONT_MANAGE_OVERFLOW_MAINK
 258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint32_t m_ui32EnergyMainK_1 = 0;
 259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint32_t m_ui32EnergyMainOffset = 0;
 261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #ifndef DONT_MANAGE_OVERFLOW_DSP
 262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint32_t m_ui32EnergyDspK_1 = 0;
 263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint32_t m_ui32EnergyDspOffset = 0;
 264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static uint32_t m_ui32EnergyMotOld = 0;
 268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_ENERGY_COUNTERS_MAX
 270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  STATIC stEnergyCounters_t m_asCounters[EMS_ENERGY_COUNTERS_MAX];
 271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if (CONFIG_EMS_TLOAD_ITEMS_MAX && EMS_USE_TABLE_PARAMD)
 275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Pointer to current D param required to calculate power consumption with Tables */
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint16_t* m_pui16TableParamD = NULL;
 277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ******************* */
 281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Function prototypes */
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ******************* */
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static uint16_t VoltAvgMeasuresUpdate (sVMeasAcc_t* psVMeasAcc);
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_BUFFER_DOUBLE_USE
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void VMeasBufferHold       (void);
 286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void VMeasBufferReset      (void);
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void EnergyMeterUpdate     (uint32_t ui32EnergyPeriod);
 289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void EnergyCountersUpdate  (void);
 290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC eEMS_Err EM_LoadRegister (const Loader_Struct* psEMDataStruct, const Loader_Struct* psResCal
 293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                  const Loader_Struct* psOutputsMap);
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint8_t* EM_LoadResCalib (uint8_t ui8LoadTablePositionRes, const Loader_Struct* psResCalibDa
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                  const Loader_Struct* psOutputsMap, uint8_t numLoad,const sEMS_ResC
 297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Exported functions */
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ****************** */
 303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
 305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \n This function is called by the application to get the pointer
 306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \n to the motor's energy buffer in platform
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \n
 308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \param [in] posMotor: position of the motor according to the order in Setting File
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \n		(i.e. the first motor has posMotor = 0, the second posMotor = 1 and so on)
 310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \n
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \return  pointer to sEMS_ExtInfo_t*
 312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \n
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \author 	Salvatore Fimiani
 314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \date		08/11/2012
 315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  * \version
 316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  */
 317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(CONFIG_LIB_EXTERNAL_BOARD_SUPPORT) && CONFIG_EMS_MLOAD_ITEMS_MAX
 318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** sEMS_ExtInfo_t* EMS_GetPtrToDSPInfoBuffer(uint8_t posMotor)
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	if(posMotor < m_ui8MLoadIndex)
 321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	{
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 		return (&EMSInfoBuffer[posMotor]);
 323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	}
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	else
 325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	{
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 		return NULL;
 327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	}
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
 332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Perform module initialization for
 333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  a cold reset
 334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_HWReset (void)
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*------------------------------------
 343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Set set the parameters used for
 344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  power consumption calculation.
 345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  09/11/2012: Added initialization for EMSInfoBuffer[CONFIG_EMS_MLOAD_ITEMS_MAX]
 347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_InitConfig(Loader_Struct* psEnergyAlgoDataStruct
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_USE_TABLE_PARAMD
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                , uint16_t* pui16TableParamD
 351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                               )
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #ifdef CHECK_PARAM
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (psEnergyAlgoDataStruct == NULL)
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (psEnergyAlgoDataStruct->Data == NULL)
 362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || (psEnergyAlgoDataStruct->DataLenght < ALGO_PARAMS_WLEN))
 363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Set normalization algorithm parameters */
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_sAlgoParams = *psEnergyAlgoDataStruct;
 370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if (CONFIG_EMS_TLOAD_ITEMS_MAX && EMS_USE_TABLE_PARAMD)
 372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Set the D param address required to calculate power consumption with Tables. */
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_pui16TableParamD = pui16TableParamD;
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(CONFIG_LIB_EXTERNAL_BOARD_SUPPORT) && CONFIG_EMS_MLOAD_ITEMS_MAX
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t i;
 378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   for(i = 0; i<CONFIG_EMS_MLOAD_ITEMS_MAX;i++)
 379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  EMSInfoBuffer[i].ui16PVal = 0;
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  EMSInfoBuffer[i].ui32EVal = 0;
 382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
 385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
 392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Perform module initialization for
 393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  a warm reset
 394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_InitSw ()
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_PEAK_HOLD
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui16VPeak = 0;
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_PEAK_THRESHOLD
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui16VPeakThreshold = 0;
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_RMS_AVERAGE
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui16VrmsAvg = 0;
 410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_bAccuEnabled = TRUE;
 413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_bOneShot = FALSE;
 414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui16PowerPeriod      = 0;
 416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui8EnergyUpdateCnt   = 0;
 418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyRTAcc      = 0;
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyOffset     = 0;
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifndef DONT_MANAGE_OVERFLOW
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifndef DONT_MANAGE_OVERFLOW_MAINK
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyMainK_1 = 0;
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyMainOffset = 0;
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifndef DONT_MANAGE_OVERFLOW_DSP
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyDspK_1     = 0;
 432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyDspOffset  = 0;
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Setting done successfully */
 438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
 444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Not implemented
 445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_StartCal (void)
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-------------------------------------
 454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Store information to get load status
 455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  anytime is required to calculate power
 456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  consumption
 457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  --------------------------------------*/
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_LoadRegister (sLoadRegister_t* psLoadRegister)
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Parameter control */
 462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (psLoadRegister == NULL)
 464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if ((psLoadRegister->eType < LOAD_FIRST_ITEM) && (psLoadRegister->eType > LOAD_LAST_ITEM))
 469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   int16_t compValue;
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   int16_t diffToOvflw;
 475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   int32_t tempVal1;
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /*
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    * Setting new load's parameters
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    */
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   switch (psLoadRegister->eType)
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     case RESISTOR:
 482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #if CONFIG_EMS_RLOAD_ITEMS_MAX
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (   (psLoadRegister->params.res.pui16GMant == NULL)
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           || (psLoadRegister->params.res.pi8Gexp == NULL))
 485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         return EMS_E_INVALID_VALUE;
 487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_ui8RLoadIndex >= CONFIG_EMS_RLOAD_ITEMS_MAX)
 489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         return EMS_E_PARAM_IGNORED;
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* Setting load parameters for resistor */
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].ui8Mask       = psLoadRegister->ui8Mask;
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].pui8Status    = psLoadRegister->pui8Status;
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant     = *(psLoadRegister->params.res.pui16GMant);
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].i8Gexp        = *(psLoadRegister->params.res.pi8Gexp);
 498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* Check for RESISTOR calibration */
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (psLoadRegister->params.res.pui8Calib != NULL)
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if (   (*(psLoadRegister->params.res.pui8Calib) != RESISTOR_CALIB_NO_CALIB)
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             && (*(psLoadRegister->params.res.pui8Calib) != RESISTOR_CALIB_DEF_VALUE))
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         	/* Calibrate RESISTOR */
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			diffToOvflw = 0xFFFF - m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant;
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			tempVal1 = (((((int32_t)(RESISTOR_CALIB_DEF_VALUE - *(psLoadRegister->params.res.pui8Calib))) <<
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			compValue = (uint16_t)((  m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant * tempVal1)>>15);
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			if(compValue <= diffToOvflw)
 511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			{
 512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant += compValue;
 513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			}
 514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			else
 515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			{
 516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				if(tempVal1 >= 0)
 518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				{
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 					m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant = (m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant >> 1) +
 520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 						(compValue >> 1);
 521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 					m_asRLoadParam[m_ui8RLoadIndex].i8Gexp += 1;
 523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				}
 524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				else
 525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				{
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 					m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant += compValue;
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				}
 528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			}
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       ++m_ui8RLoadIndex;
 535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #endif  /* CONFIG_EMS_RLOAD_ITEMS_MAX */
 536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
 537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     case MOTOR:
 539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #if CONFIG_EMS_MLOAD_ITEMS_MAX
 540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (   (psLoadRegister->params.mot.pui16PVal == NULL)
 541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           || (psLoadRegister->params.mot.pui32EVal == NULL))
 542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
 543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         return EMS_E_INVALID_VALUE;
 544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
 545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_ui8MLoadIndex >= CONFIG_EMS_MLOAD_ITEMS_MAX)
 546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
 547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         return EMS_E_PARAM_IGNORED;
 548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
 549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* Setting energy load parameters for motor energy */
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].ui8Mask       = psLoadRegister->ui8Mask;
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].pui8Status    = psLoadRegister->pui8Status;
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].pui16PVal     = psLoadRegister->params.mot.pui16PVal;
 556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].pui32EVal     = psLoadRegister->params.mot.pui32EVal;
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_ui8MLoadIndex++;
 560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #endif /* CONFIG_EMS_MLOAD_ITEMS_MAX */
 561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
 562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     case TABLEP:
 564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #if CONFIG_EMS_TLOAD_ITEMS_MAX
 565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_ui8TLoadIndex >= CONFIG_EMS_TLOAD_ITEMS_MAX)
 566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
 567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         return EMS_E_PARAM_IGNORED;
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
 569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* Setting load parameters for table */
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (EMS_E_OK == TableInit(psLoadRegister->params.tab.pui8Table, psLoadRegister->params.tab.ui
 574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                 &m_asTLoadParam[m_ui8TLoadIndex].sTable))
 575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_asTLoadParam[m_ui8TLoadIndex].ui8Mask     = psLoadRegister->ui8Mask;
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_asTLoadParam[m_ui8TLoadIndex].pui8Status  = psLoadRegister->pui8Status;
 578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ++m_ui8TLoadIndex;
 580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
 581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #endif  /* CONFIG_EMS_TLOAD_ITEMS_MAX */
 582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     default:
 585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       return EMS_E_INVALID_VALUE;
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Setting done successfully */
 589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*------------------------------------
 595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Sends Start measure command according
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  to parameter passed.
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  -------------------------------------*/
 598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_StartMeasure (eConvertion_t C_Conv, bool_t bResetCounters)
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (bResetCounters == TRUE)
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     b_ui32EnergyCounterWh = 0;
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     b_ui16EnergyCounterWhAcc = 0;
 606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    #if EMS_USE_ELAPSED_TIMER
 607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     b_ui32TimeElapsedSinceStart = 0;
 608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    #endif
 609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_bAccuEnabled = TRUE;
 612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (C_Conv == SINGLE_CONV)
 614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_bOneShot = TRUE;
 616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else
 618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_bOneShot = FALSE;
 620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*---------------------------------
 628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Reset flag to disable accumulation
 629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ----------------------------------*/
 630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_StopMeasure (void)
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_bAccuEnabled = FALSE;
 633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
 640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Not implemented
 641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_GetInstant_I (uint8_t* pui8I)
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
 645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-----------------------------------------------
 650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Returns the value of the last peak Voltage measured
 651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ------------------------------------------------*/
 652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_GetInstant_V (uint16_t* pui16V)
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_PEAK_HOLD
 655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (pui16V == NULL)
 657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || VLINE_PARAMS_NOT_VALID())
 658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Normalized to physical conversion */
 664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16V = (uint16_t)((((uint32_t)m_ui16VPeak * g_ui16ALGO_VMAX10) / 10) >> 16);
 665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else /* EMS_V_PEAK_HOLD */
 668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
 669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif /* EMS_V_PEAK_HOLD */
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-----------------------------------------------
 674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Set the value of the current absolute V peak measured
 675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ------------------------------------------------*/
 676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_SetAbsInstant_V (uint16_t ui16VADabs)
 677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	uint32_t tmpVAbs;
 679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	/* Convert to normalized value */
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	tmpVAbs = (((uint32_t) ui16VADabs * 10) << 16) / (g_ui16ALGO_VMAX10);
 682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return PowerMeter_SetNormInst_V(tmpVAbs);
 684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-----------------------------------------------
 688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Set the value of the current normalized V peak measured
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ------------------------------------------------*/
 690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_SetInstant_V (uint32_t ui32VADcalib)
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (m_psVMeasAccCurr == NULL)
 694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || VLINE_PARAMS_NOT_VALID())
 695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* ui32VADcalib is on at most 11 bits,
 701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    * extend (multiply by 2^6) on at most 17 bits ... */
 702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui32VADcalib <<= 6;
 703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* ... if necessary, saturate on 16 bits ... */
 704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui32VADcalib > 65535)
 705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui32VADcalib = 65535;
 707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* ... and, subtract normalized RTN */
 709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui32VADcalib -= (uint32_t)g_ui16ALGO_NORM_RTN;
 710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return PowerMeter_SetNormInst_V(ui32VADcalib);
 712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-----------------------------------------------
 715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Set the already normalized value of the current normalized V peak measured
 716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ------------------------------------------------*/
 717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   eEMS_Err PowerMeter_SetNormInst_V (uint32_t ui32VADcalib)
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* here ui32VADcalib contains the normalized V peak (at most 16 bits) */
 721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_PEAK_HOLD
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui16VPeak = (uint16_t)ui32VADcalib;
 724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_PEAK_THRESHOLD
 727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui32VADcalib > m_ui16VPeakThreshold)
 728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_ui16VPeakThreshold = (uint16_t)ui32VADcalib;
 730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if (EMS_V_PEAK_AVERAGE || EMS_V_RMS_AVERAGE)
 734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Add to V peak accumulator */
 735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeakAcc += ui32VADcalib;
 736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* The voltage samples counter is increased */
 739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui8NSamples++;
 740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* check if energy meter store and measurement is active */
 742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (m_bAccuEnabled == TRUE)
 743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* energy meter store and measurement is active */
 745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* Perform the squared values ... */
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui32VADcalib *= ui32VADcalib;
 748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* ... and the division by 2^16, in order to distribuite the computation of the normalized powe
 749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui32VADcalib >>= 16;
 750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* The new value (at most 16 bits) is added to the accumulator in order to perform the average 
 752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_psVMeasAccCurr->ui32VPeak2Acc += ui32VADcalib;
 753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else if (m_psVMeasAccCurr->ui8NSamples > EMS_V_AVERAGE_N_SAMPLES)
 755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* energy meter store and measurement is not active */
 757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* updates avg Vpeak and Vrms each second */
 759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     VoltAvgMeasuresUpdate(m_psVMeasAccCurr);
 760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     VMeasBufferReset();
 761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-----------------------------------------------
 769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Returns the value of last measured instant power
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ------------------------------------------------*/
 771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_GetInstant_P (uint16_t* pui16P)
 772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (pui16P == NULL)
 775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16P = m_ui16PowerPeriod;
 781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-------------------------------------------
 788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Return the value of average power calculated
 789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  on last N samples (tip. 1 sec).
 790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  --------------------------------------------*/
 791:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_GetAvgLastCycle_P (uint16_t* pui16P)
 792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 793:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 794:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (pui16P == NULL)
 795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || ALGO_PARAMS_NOT_VALID())
 796:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 797:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16P = m_ui16PowerPeriod;
 802:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-----------------------------------------------------
 809:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Return the value of average power calculated
 810:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  on last N samples (tip. 1 sec) in hundredths of a watt.
 811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ------------------------------------------------------*/
 812:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_GetAvgLastCycle_P_100mW (uint16_t* pui16P)
 813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 814:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (pui16P == NULL)
 816:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || ALGO_PARAMS_NOT_VALID())
 817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 818:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 819:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 820:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16P = m_ui16PowerPeriod * 10;
 823:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 824:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 826:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 829:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
 830:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Not implemented
 831:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 832:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_Get_I_RMS (uint8_t* pui8I)
 833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 834:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
 835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 836:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 839:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
 840:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Not implemented
 841:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_Get_I_RMS_100mA (uint32_t* pui32I)
 843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 844:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
 845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 846:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 847:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 848:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
 850:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Return the last rms volt measured
 851:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ---------------------------------*/
 852:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_Get_V_RMS (uint16_t* pui16V)
 853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 854:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 855:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (pui16V == NULL)
 856:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 858:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 859:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_RMS_AVERAGE
 862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 863:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (VLINE_PARAMS_NOT_VALID())
 864:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 865:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 867:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 868:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_RMS_AVERAGE_PHY
 870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16V = m_ui16VrmsAvg;
 871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else
 872:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Normalized to physical conversion */
 873:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16V = (uint16_t)((((uint32_t)m_ui16VrmsAvg * g_ui16ALGO_VMAX10) / 10) >> 16);
 874:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 875:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 876:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 877:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else /* EMS_V_RMS_AVERAGE */
 878:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
 879:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif /* EMS_V_RMS_AVERAGE */
 880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 881:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*----------------------------------------------------------
 885:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Return the last rms volt measured in hundredths of a volts.
 886:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  -----------------------------------------------------------*/
 887:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_Get_V_RMS_100mV (uint32_t* pui32V)
 888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 889:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 890:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (pui32V == NULL)
 891:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 892:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 893:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 894:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 895:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_RMS_AVERAGE
 897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (VLINE_PARAMS_NOT_VALID())
 899:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 900:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 901:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 902:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 903:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 904:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_V_RMS_AVERAGE_PHY
 905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui32V = (uint32_t)m_ui16VrmsAvg * 10;
 906:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else
 907:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Normalized to physical conversion */
 908:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui32V = ((uint32_t)m_ui16VrmsAvg * g_ui16ALGO_VMAX10) >> 16;
 909:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 910:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 911:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 912:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else /* EMS_V_RMS_AVERAGE */
 913:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
 914:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif /* EMS_V_RMS_AVERAGE */
 915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 916:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 917:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 918:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 919:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*---------------------------------------------------------------
 920:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Returns the value of energy in Wh since the last start measure.
 921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ----------------------------------------------------------------*/
 922:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_GetAvgSinceStart_E_Wh (uint32_t* pui32EWh, uint32_t* pui32TimeElapsed)
 923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 925:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (pui32EWh == NULL)
 926:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 928:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 930:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_USE_ELAPSED_TIMER
 931:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (pui32TimeElapsed == NULL)
 932:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 933:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 934:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 935:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 938:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_USE_ELAPSED_TIMER
 939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Returning current timer value */
 940:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui32TimeElapsed = b_ui32TimeElapsedSinceStart;
 941:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 942:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui32EWh = b_ui32EnergyCounterWh;
 944:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 945:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 949:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*---------------------------------------------
 951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  Called every second to perform counters update
 952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  ----------------------------------------------*/
 953:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_Accum (void)
 954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 955:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t   ui8Index;                   /* index used for accessing load data structure */
 956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t  ui16Vpeak2Avg_Norm;         /* average of normalized Vpeak squared: used to calculate p
 957:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if CONFIG_EMS_TLOAD_ITEMS_MAX
 958:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t  ui16VinTab_Norm;            /* average normalized Vpeak: used to calculate power with T
 959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 960:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if (CONFIG_EMS_TLOAD_ITEMS_MAX | CONFIG_EMS_RLOAD_ITEMS_MAX)
 961:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t  ui16PowerInstant_Norm;      /* normalized power instant for a load */
 962:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 963:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t  ui32PowerInstantRT_Norm;    /* normalized power instant for RESISTOR and TABLE load */
 964:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t  ui16PowerInstantMot;        /* (phisical) power instant for power section of MOTOR load
 965:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t  ui32Energy;                 /* (phisical) energy in the update period */
 966:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t  ui32EnergyMot;              /* calculated difference between the current and the previo
 967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                          * time period (tip. 1 sec) with energy section of MOTOR lo
 968:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifndef DONT_MANAGE_OVERFLOW
 969:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t  ui32DeltaEnergyRTAcc;       /* Energia normalizzata del ciclo corrente per RESISTOR, TA
 970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef DONT_MANAGE_OVERFLOW_MAINK
 971:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t  ui32MaxDeltaEnergyRTAcc;
 972:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 974:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   bool_t    bLoadIsActive;              /* TRUE if load is active */
 975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 976:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 977:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #ifdef CHECK_PARAM
 978:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ALGO_PARAMS_NOT_VALID())
 979:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 980:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
 981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 982:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
 983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 984:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* initialize automatic variables */
 985:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui32PowerInstantRT_Norm = 0;
 986:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui16PowerInstantMot     = 0;
 987:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui32EnergyMot           = 0;
 988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 989:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* initialize global variables */
 990:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 991:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* function body */
 992:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* check if energy meter store and measurement is active */
 994:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (m_bAccuEnabled == TRUE)
 995:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 996:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* energy meter store and measurement is active */
 997:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
 998:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* check if energy update period is elapsed */
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_ui8EnergyUpdateCnt++;
1000:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* if (m_ui8EnergyUpdateCnt >= (1000/EMS_PW_UPDATE_PERIOD)) */
1001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     if (m_ui8EnergyUpdateCnt >= g_ui8ALGO_TS)
1002:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     {
1003:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* energy update period is elapsed */
1004:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1005:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #if EMS_BUFFER_DOUBLE_USE
1006:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* hold the data that are going to use */
1007:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       VMeasBufferHold();
1008:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #endif
1009:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1010:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_psVMeasAccHold->ui8NSamples > 0)
1011:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1012:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /*  calculate average of collected Vpeak squared */
1013:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui16Vpeak2Avg_Norm = (uint16_t)(m_psVMeasAccHold->ui32VPeak2Acc / m_psVMeasAccHold->ui8NSam
1014:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       else
1016:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1017:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui16Vpeak2Avg_Norm = 0;
1018:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1019:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1020:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1021:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* set tension value for table load */
1022:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       #if CONFIG_EMS_TLOAD_ITEMS_MAX
1023:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #if (EMS_V_PEAK_AVERAGE || EMS_V_RMS_AVERAGE)
1024:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui16VinTab_Norm =                                           /* average Vpeak */
1025:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #else
1026:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui16VinTab_Norm = ((uint16_t)sqrt(ui16Vpeak2Avg_Norm));    /* square root of average Vpeak 
1027:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif
1028:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       #endif
1029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1030:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* updates avg Vpeak and Vrms */
1031:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         VoltAvgMeasuresUpdate(m_psVMeasAccHold);
1032:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1033:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #if (EMS_BUFFER_DOUBLE_USE == 0)
1034:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* reset data just used */
1035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         VMeasBufferReset();
1036:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif
1037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1038:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* --------- Calculating power ---------- */
1039:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #if CONFIG_EMS_RLOAD_ITEMS_MAX
1041:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Check on active RESISTOR loads */
1042:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1043:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1044:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8RLoadIndex; ui8Index++)
1046:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1047:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1048:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1049:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1050:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           bLoadIsActive = FALSE;
1051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (m_asRLoadParam[ui8Index].pui8Status == NULL)
1052:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1053:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             bLoadIsActive = TRUE;
1054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1055:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****          /* FIXME: ?
1056:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           else if (   (*m_asRLoadParam[ui8Index].pui8Status & m_asRLoadParam[ui8Index].ui8Mask)
1057:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                    == m_asRLoadParam[ui8Index].ui8Mask)
1058:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           */
1059:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           else if ((*m_asRLoadParam[ui8Index].pui8Status & m_asRLoadParam[ui8Index].ui8Mask) != 0)
1060:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1061:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             bLoadIsActive = TRUE;
1062:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1063:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1064:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (bLoadIsActive)
1065:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1066:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             /* calculate normalized power ... */
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstant_Norm = (uint16_t)(((uint32_t)ui16Vpeak2Avg_Norm * m_asRLoadParam[ui8In
1068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                                >> (16 - m_asRLoadParam[ui8Index].i8Gexp));
1069:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1070:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1071:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             /* ... and add to the accumulator */
1073:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui32PowerInstantRT_Norm += ui16PowerInstant_Norm;
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1075:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif /* CONFIG_EMS_RLOAD_ITEMS_MAX */
1077:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1078:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #if CONFIG_EMS_MLOAD_ITEMS_MAX
1079:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Check on active MOTOR loads */
1080:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1081:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1082:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8MLoadIndex; ui8Index++)
1084:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1085:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1086:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1087:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1088:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           bLoadIsActive = FALSE;
1089:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (m_asMLoadParam[ui8Index].pui8Status == NULL)
1090:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1091:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             bLoadIsActive = TRUE;
1092:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1093:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           /* FIXME: ?
1094:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****            else if (   (*m_asMLoadParam[ui8Index].pui8Status & m_asMLoadParam[ui8Index].ui8Mask)
1095:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                     == m_asMLoadParam[ui8Index].ui8Mask)
1096:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****            */
1097:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           else if ((*m_asMLoadParam[ui8Index].pui8Status & m_asMLoadParam[ui8Index].ui8Mask) != 0)
1098:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1099:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             bLoadIsActive = TRUE;
1100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (bLoadIsActive)
1103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             /* add the (physical) power to a separate accumulator */
1108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstantMot += *m_asMLoadParam[ui8Index].pui16PVal;
1109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           /* get energy from energy loads: energy loads use cumulative energy so we have to take in
1112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****            * difference between the current and the previous energy values. */
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           ui32EnergyMot += *m_asMLoadParam[ui8Index].pui32EVal;
1115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif /* CONFIG_EMS_MLOAD_ITEMS_MAX */
1117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #if CONFIG_EMS_TLOAD_ITEMS_MAX
1119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Check on active loads (table)*/
1120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8TLoadIndex; ui8Index++)
1124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           bLoadIsActive = FALSE;
1129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (m_asTLoadParam[ui8Index].pui8Status == NULL)
1130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             bLoadIsActive = TRUE;
1132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           /* FIXME: ?
1134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****            else if (   (*m_asTLoadParam[ui8Index].pui8Status & m_asTLoadParam[ui8Index].ui8Mask)
1135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                     == m_asTLoadParam[ui8Index].ui8Mask)
1136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****            */
1137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           else if ((*m_asTLoadParam[ui8Index].pui8Status & m_asTLoadParam[ui8Index].ui8Mask) != 0)
1138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             bLoadIsActive = TRUE;
1140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (bLoadIsActive)
1143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           {
1144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             /* calculate normalized power for Table load ... */
1145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstant_Norm = 0;
1146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             if (EMS_E_OK == TablePower(&m_asTLoadParam[ui8Index].sTable, (
1147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****            #if (CONFIG_EMS_TLOAD_ITEMS_MAX && EMS_USE_TABLE_PARAMD)
1148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                        m_pui16TableParamD ? *m_pui16TableParamD :
1149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****            #endif
1150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                        EMS_TABLE_PARAM_D_DEFAULT),
1151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                        ui16VinTab_Norm,
1152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                        &ui16PowerInstant_Norm))
1153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             {
1154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****               /* ... and add to accumulator */
1158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****               ui32PowerInstantRT_Norm += (uint32_t)ui16PowerInstant_Norm;
1159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             }
1160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           }
1161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif /* CONFIG_EMS_TLOAD_ITEMS_MAX */
1163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* update global variable for user query */
1165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui16PowerPeriod =   (uint16_t)((ui32PowerInstantRT_Norm * g_ui16ALGO_PMAX) >> 16)   /* ph
1166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                             + ui16PowerInstantMot;                                            /* ..
1167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* --------- Calculating energy ---------- */
1169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #ifndef DONT_MANAGE_OVERFLOW
1171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Begin Overflow Energy Acc Management */
1172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Energia normalizzata del ciclo corrente per RESISTOR, TABLE*/
1174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32DeltaEnergyRTAcc = (((ui32PowerInstantRT_Norm * g_ui16ALGO_KENERGY_MANT) / 10) >> (16 -
1175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #ifndef DONT_MANAGE_OVERFLOW_MAINK
1177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyRTAcc += ui32DeltaEnergyRTAcc;
1179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* ui32Energy = (m_ui32EnergyRTAcc * g_ui16ALGO_EMAX) >> 16; */
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy =   (((m_ui32EnergyRTAcc & 0xFFFF0000) >> 16) * g_ui16ALGO_EMAX)   /* 32 bit */
1182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                      + (((m_ui32EnergyRTAcc & 0x0000FFFF) * g_ui16ALGO_EMAX) >> 16);  /* 32 bit */
1183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* update energy with m_ui32EnergyPeriod */
1185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if (ui32Energy < (m_ui32EnergyMainK_1 - m_ui32EnergyMainOffset)) /* Reset Overflow Energy M
1187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_ui32EnergyMainOffset = m_ui32EnergyMainK_1;
1189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy += m_ui32EnergyMainOffset;
1192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyMainK_1 = ui32Energy;
1193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #else
1195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Controllo se c'ï¿½ l'overflow del contatore globale normalizzato */
1197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32MaxDeltaEnergyRTAcc = 0xFFFFFFFF - m_ui32EnergyRTAcc;
1198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if ( ui32MaxDeltaEnergyRTAcc < ui32DeltaEnergyRTAcc)
1199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           /* C'ï¿½ l'overflow del contatore normalizzato: aggiungo all'offset il valore fisico corr
1201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_ui32EnergyMainOffset +=  g_ui16ALGO_EMAX << 16;
1202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Sommp al contatore globale normalizzato l'energia normalizzata del ciclo corrente:
1205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****          * eventualmente ci sarï¿½ l'overflow */
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyRTAcc += ui32DeltaEnergyRTAcc;
1207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* calcolo l'energia fisica associata al contatore globale normalizzato */
1209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         //ui32Energy = (m_ui32EnergyRTAcc * g_ui16ALGO_EMAX) >> 16;
1210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy =   (((m_ui32EnergyRTAcc & 0xFFFF0000) >> 16) * g_ui16ALGO_EMAX)   // 32 bit
1211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                      + (((m_ui32EnergyRTAcc & 0x0000FFFF) * g_ui16ALGO_EMAX) >> 16);  // 32 bit
1212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Aggiungo l'offset che tiene conto degli overflow */
1214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy += m_ui32EnergyMainOffset;
1215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif
1217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* PATCH: Chiusura porta */
1219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if ( ui32EnergyMot == 0 )
1220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           ui32EnergyMot = m_ui32EnergyMotOld;
1222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         else
1224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_ui32EnergyMotOld = ui32EnergyMot;
1226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* END PATCH */
1228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #ifndef DONT_MANAGE_OVERFLOW_DSP
1230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if (ui32EnergyMot < (m_ui32EnergyDspK_1 - m_ui32EnergyDspOffset)) /* Reset Overflow Energy 
1231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_ui32EnergyDspOffset = m_ui32EnergyDspK_1;
1233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32EnergyMot += m_ui32EnergyDspOffset;
1236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyDspK_1 = ui32EnergyMot;
1237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif
1238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* End Overflow Energy Acc management */
1239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #else
1240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyRTAcc += (((ui32PowerInstantRT_Norm * g_ui16ALGO_KENERGY_MANT) / 10) >> (16 - g
1241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* physical energy for RESISTOR, TABLE */
1243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         //ui32Energy = (m_ui32EnergyRTAcc * g_ui16ALGO_EMAX) >> 16;
1244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy =   (((m_ui32EnergyRTAcc & 0xFFFF0000) >> 16) * g_ui16ALGO_EMAX)   // 32 bit
1245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                      + (((m_ui32EnergyRTAcc & 0x0000FFFF) * g_ui16ALGO_EMAX) >> 16);  // 32 bit
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif
1247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* update energy with m_ui32EnergyPeriod */
1249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         EnergyMeterUpdate(ui32Energy + ui32EnergyMot);
1250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* update partial counters */
1252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         EnergyCountersUpdate();
1253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #if EMS_USE_ELAPSED_TIMER
1255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Incrementing local vitality counter */
1256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         b_ui32TimeElapsedSinceStart++;
1257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif
1258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       } /* (m_psVMeasAccHold->ui8NSamples > 0) */
1259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_bOneShot == TRUE)
1261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_bAccuEnabled = FALSE;
1263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_ui8EnergyUpdateCnt = 0;
1266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     } /* (m_ui8EnergyUpdateCnt >= g_ui8ALGO_TS) */
1267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   } /* (m_bAccuEnabled == TRUE) */
1268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
1274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   Starts the given Energy counter
1275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   --------------------------------*/
1276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_StartEnergyCount (uint8_t ui8CounterId, stEnergyCounters_t* pstCounterData)
1277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_ENERGY_COUNTERS_MAX
1279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (  (ui8CounterId < EMS_ENERGY_COUNTERS_MAX)
1280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       &&(pstCounterData != NULL))
1281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* copy pstCounterData content to m_asCounters[ui8CounterId] */
1283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId]=(*pstCounterData);
1284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* reset some m_asCounters[ui8CounterId] field (all except ui16EnergyTreshold and ui16TimePerio
1285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui8Flags               = EM_COUNT_STAT_MASK;
1286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui16EnergyCons         = 0;
1287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui16TimeElapsed        = 0;
1288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui16MaxEnergy10sec     = 0;
1289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui32RawAccum           = 0;
1290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui32Raw10secAcc        = 0;
1291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui32RawMaxEnergy10sec  = 0;
1292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_OK;
1294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else
1296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
1298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else
1300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
1301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*-----------------------------------------------------------------
1307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   Returns energy consumption data about the given Energy counter id
1308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   -----------------------------------------------------------------*/
1309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_GetEnergyCount (uint8_t ui8CounterId, stEnergyCounters_t* pstCounterData)
1310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_ENERGY_COUNTERS_MAX
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t ui32Tmp;
1313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (ui8CounterId < EMS_ENERGY_COUNTERS_MAX)
1315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       && (pstCounterData != NULL))
1316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* calculate Energy in Wh */
1318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui32Tmp = m_asCounters[ui8CounterId].ui32RawAccum / 3600;
1320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui16EnergyCons = ui32Tmp & 0x0000FFFF;
1321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui32Tmp = m_asCounters[ui8CounterId].ui32RawMaxEnergy10sec / 3600;
1323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui16MaxEnergy10sec = ui32Tmp & 0x0000FFFF;
1324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     pstCounterData->ui8Flags            = m_asCounters[ui8CounterId].ui8Flags;
1326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     pstCounterData->ui16EnergyCons      = m_asCounters[ui8CounterId].ui16EnergyCons;
1327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     pstCounterData->ui16TimeElapsed     = m_asCounters[ui8CounterId].ui16TimeElapsed;
1328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     pstCounterData->ui16MaxEnergy10sec  = m_asCounters[ui8CounterId].ui16MaxEnergy10sec;
1329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_OK;
1331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else
1333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
1335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else
1337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
1338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /*--------------------------------
1344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   Stops the given Energy counter
1345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   --------------------------------*/
1346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** eEMS_Err PowerMeter_StopEnergyCount (uint8_t ui8CounterId)
1347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_ENERGY_COUNTERS_MAX
1349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui8CounterId < EMS_ENERGY_COUNTERS_MAX)
1350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_asCounters[ui8CounterId].ui8Flags &= ~EM_COUNT_STAT_MASK;
1352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_OK;
1354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else
1356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return EMS_E_INVALID_VALUE;
1358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #else
1360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_UNKNOWN_MODE;
1361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ******************* */
1367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* Local function      */
1368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* ******************* */
1369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_BUFFER_DOUBLE_USE
1372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
1374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** Swap the double data structures used to decuple the Vrms accumulator measured and
1375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** Vrms used to calculate power
1376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      void
1378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [out]     void
1379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in,out]  none
1380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \attention \b
1382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \return   void
1384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \retval   [none]
1386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \warning  [none]
1388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
1390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     30-05-2011
1391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  1.0.0
1392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \bug    [none]
1394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \note   \par \b Nota 1:
1398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       documentation by ${Intecs}
1399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
1401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void VMeasBufferHold (void)
1402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   sVMeasAcc_t*  psVMeasAccTmp;
1404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if INTERRUPT_MANAGE
1406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /*  Disabling Interrupt */
1407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   SUSPEND_ALL_INTERRUPTS
1408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Switching accumulator */
1411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   psVMeasAccTmp  = m_psVMeasAccCurr;
1412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr = m_psVMeasAccHold;
1413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccHold = psVMeasAccTmp;
1414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* reset the data structure that will be used */
1416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   VMeasBufferReset();
1417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if INTERRUPT_MANAGE
1419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Enabling Interrupt */
1420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   RESUME_ALL_INTERRUPTS
1421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif /*EMS_BUFFER_DOUBLE_USE*/
1425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
1428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** Reset the current structure used to manage Voltage: peack, rms, rms2
1429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      void
1431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [out]     void
1432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in,out]  none
1433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \attention \b
1435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \return   void
1437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \retval   [none]
1439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \warning  [none]
1441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
1443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     30-05-2011
1444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  1.0.0
1445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \bug    [none]
1447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \note   \par \b Nota 1:
1451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       documentation by ${Intecs}
1452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
1454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void VMeasBufferReset (void)
1455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Reset structure for next measure session */
1457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if (EMS_V_PEAK_AVERAGE || EMS_V_RMS_AVERAGE)
1458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeakAcc  = 0;
1459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeak2Acc  = 0;
1462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui8NSamples   = 0;
1463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
1467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** Perform the average calculation of Vpeak accumulator (if enabled) or Vrms2 accumulator
1468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** (if enabled) than reset accumulator/s
1469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      void
1471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [out]     void
1472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in,out]  none
1473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \attention \b
1475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \return   Average normalized VPeak on last N samples
1477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \retval   [none]
1479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \warning  [none]
1481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
1483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     30-05-2011
1484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  1.0.0
1485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \bug    [none]
1487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \note   \par \b Nota 1:
1491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       documentation by ${Intecs}
1492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
1494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static uint16_t VoltAvgMeasuresUpdate (sVMeasAcc_t* psVMeasAcc)
  12                             		.loc 1 1494 0
  13 0000 7E A7                   		push.l	r7
  14                             	.LCFI0:
  15                             	.LVL0:
1495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t  ui16VPeakAvg = 0;
1497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if ( psVMeasAcc == NULL )
1499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return ui16VPeakAvg;
1501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* the psVMeasAcc->ui8NSamples value cannot be 0 */
1504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if (EMS_V_PEAK_AVERAGE || EMS_V_RMS_AVERAGE)
1506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (psVMeasAcc->ui8NSamples > 0)
  16                             		.loc 1 1506 0
  17 0002 FB E2 00 00 00 00       		mov.L	#_m_sVMeasAcc, r14
  18 0008 59 E4 08                		movu.B	8[r14], r4
  19 000b 61 04                   		cmp	#0, r4
  20 000d 11                      		beq	.L2
1507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     psVMeasAcc->ui32VPeakAcc /= psVMeasAcc->ui8NSamples;
  21                             		.loc 1 1508 0
  22 000e EC E3                   		mov.L	[r14], r3
  23 0010 FC 27 43                		divu	r4, r3
  24 0013 E3 E3                   		mov.L	r3, [r14]
  25 0015 0B                      		bra	.L3
  26                             	.L2:
1509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else
1511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     psVMeasAcc->ui32VPeakAcc = 0;
  27                             		.loc 1 1512 0
  28 0016 E3 E4                   		mov.L	r4, [r14]
  29                             		.balign 2,3,1
  30                             	.L3:
1513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui16VPeakAvg = (uint16_t)psVMeasAcc->ui32VPeakAcc;
  31                             		.loc 1 1516 0
  32 0018 EC E7                   		mov.L	[r14], r7
  33                             	.LVL1:
1517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    #if EMS_V_RMS_AVERAGE
1519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_ui16VrmsAvg = (uint16_t)((psVMeasAcc->ui32VPeakAcc * 1000) / (SQUARE_ROOT_2 * 1000));
  34                             		.loc 1 1519 0
  35 001a EF 71                   		mov.L	r7, r1
  36 001c 76 11 E8 03             		mul	#0x3e8, r1
  37 0020 05 00 00 00             		bsr	___floatunsisf
  38                             	.LVL2:
  39 0024 FB 22 00 C0 B0 44       		mov.L	#0x44b0c000, r2
  40 002a 05 00 00 00             		bsr	___divsf3
  41                             	.LVL3:
  42 002e 05 00 00 00             		bsr	___fixunssfsi
  43                             	.LVL4:
1520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    #if EMS_V_RMS_AVERAGE_PHY
1522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* Normalized to physical conversion */
1523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_ui16VrmsAvg = (uint16_t)((((uint32_t)m_ui16VrmsAvg * g_ui16ALGO_VMAX10) / 10) >> 16);
  44                             		.loc 1 1523 0
  45 0032 5F 11                   		movu.W	r1, r1
  46 0034 FB E2 00 00 00 00       		mov.L	#_m_sAlgoParams, r14
  47 003a EC EE                   		mov.L	[r14], r14
  48 003c 5D EE 04                		movu.W	8[r14], r14
  49 003f 4F 1E                   		mul	r1, r14
  50 0041 FD 74 9E 0A             		divu	#10, r14
  51 0045 69 0E                   		shlr	#16, r14
  52 0047 FB 42 00 00 00 00       		mov.L	#_m_ui16VrmsAvg, r4
  53 004d D3 4E                   		mov.W	r14, [r4]
1524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    #endif /* EMS_V_RMS_AVERAGE_PHY */
1525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    #endif /* EMS_V_RMS_AVERAGE */
1527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return ui16VPeakAvg;
1531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
  54                             		.loc 1 1531 0
  55 004f 5F 71                   		movu.W	r7, r1
  56 0051 3F 77 01                		rtsd	#4, r7-r7
  57                             	.LFE33:
  59                             		.section	.text.EMS_GetPtrToDSPInfoBuffer,"ax",@progbits
  60                             		.global	_EMS_GetPtrToDSPInfoBuffer
  62                             	_EMS_GetPtrToDSPInfoBuffer:
  63                             	.LFB0:
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
  64                             		.loc 1 319 0
  65                             	.LVL5:
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	if(posMotor < m_ui8MLoadIndex)
  66                             		.loc 1 320 0
  67 0000 5B 11                   		movu.B	r1, r1
  68 0002 FB E2 00 00 00 00       		mov.L	#_m_sLoadIndex, r14
  69 0008 58 EE                   		movu.B	[r14], r14
  70 000a 68 4E                   		shlr	#4, r14
  71 000c 64 3E                   		and #3, r14
  72 000e 47 E1                   		cmp	r14, r1
  73 0010 28 0B                   		bge	.L7
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 		return (&EMSInfoBuffer[posMotor]);
  74                             		.loc 1 322 0
  75 0012 6C 31                   		shll	#3, r1
  76                             	.LVL6:
  77 0014 70 11 00 00 00 00       		add	#_EMSInfoBuffer, r1
  78 001a 02                      		rts
  79                             	.L7:
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 		return NULL;
  80                             		.loc 1 326 0
  81 001b 66 01                   		mov.L	#0, r1
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
  82                             		.loc 1 328 0
  83 001d 02                      		rts
  84                             	.LFE0:
  86                             		.section	.text.PowerMeter_HWReset,"ax",@progbits
  87                             		.global	_PowerMeter_HWReset
  89                             	_PowerMeter_HWReset:
  90                             	.LFB1:
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
  91                             		.loc 1 336 0
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
  92                             		.loc 1 338 0
  93 0000 66 01                   		mov.L	#0, r1
  94 0002 02                      		rts
  95                             	.LFE1:
  97                             		.section	.text.PowerMeter_InitConfig,"ax",@progbits
  98                             		.global	_PowerMeter_InitConfig
 100                             	_PowerMeter_InitConfig:
 101                             	.LFB2:
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 102                             		.loc 1 353 0
 103                             	.LVL7:
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_sAlgoParams = *psEnergyAlgoDataStruct;
 104                             		.loc 1 369 0
 105 0000 FB E2 00 00 00 00       		mov.L	#_m_sAlgoParams, r14
 106 0006 E0 1E                   		mov.L	[r1], [r14]
 107 0008 E5 1E 01 01             		mov.L	4[r1], 4[r14]
 108                             	.LVL8:
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  EMSInfoBuffer[i].ui16PVal = 0;
 109                             		.loc 1 380 0
 110 000c FB E2 00 00 00 00       		mov.L	#_EMSInfoBuffer, r14
 111 0012 F8 E5 00                		mov.W	#0, [r14]
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  EMSInfoBuffer[i].ui32EVal = 0;
 112                             		.loc 1 381 0
 113 0015 F9 E6 01 00             		mov.L	#0, 4[r14]
 114                             	.LVL9:
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  EMSInfoBuffer[i].ui16PVal = 0;
 115                             		.loc 1 380 0
 116 0019 F9 E5 04 00             		mov.W	#0, 8[r14]
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  EMSInfoBuffer[i].ui32EVal = 0;
 117                             		.loc 1 381 0
 118 001d F9 E6 03 00             		mov.L	#0, 12[r14]
 119                             	.LVL10:
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 120                             		.loc 1 387 0
 121 0021 66 01                   		mov.L	#0, r1
 122                             	.LVL11:
 123 0023 02                      		rts
 124                             	.LFE2:
 126                             		.section	.text.PowerMeter_InitSw,"ax",@progbits
 127                             		.global	_PowerMeter_InitSw
 129                             	_PowerMeter_InitSw:
 130                             	.LFB3:
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 131                             		.loc 1 396 0
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui16VrmsAvg = 0;
 132                             		.loc 1 409 0
 133 0000 FB E2 00 00 00 00       		mov.L	#_m_ui16VrmsAvg, r14
 134 0006 F8 E5 00                		mov.W	#0, [r14]
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui16PowerPeriod      = 0;
 135                             		.loc 1 415 0
 136 0009 FB E2 00 00 00 00       		mov.L	#_m_ui16PowerPeriod, r14
 137 000f F8 E5 00                		mov.W	#0, [r14]
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui8EnergyUpdateCnt   = 0;
 138                             		.loc 1 417 0
 139 0012 FB E2 00 00 00 00       		mov.L	#_m_sFlags, r14
 140 0018 F8 E4 80                		mov.B	#0xffffff80, [r14]
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyRTAcc      = 0;
 141                             		.loc 1 419 0
 142 001b FB E2 00 00 00 00       		mov.L	#_m_ui32EnergyRTAcc, r14
 143 0021 F8 E6 00                		mov.L	#0, [r14]
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyOffset     = 0;
 144                             		.loc 1 421 0
 145 0024 FB E2 00 00 00 00       		mov.L	#_m_ui32EnergyOffset, r14
 146 002a F8 E6 00                		mov.L	#0, [r14]
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyMainK_1 = 0;
 147                             		.loc 1 425 0
 148 002d FB E2 00 00 00 00       		mov.L	#_m_ui32EnergyMainK_1, r14
 149 0033 F8 E6 00                		mov.L	#0, [r14]
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyMainOffset = 0;
 150                             		.loc 1 428 0
 151 0036 FB E2 00 00 00 00       		mov.L	#_m_ui32EnergyMainOffset, r14
 152 003c F8 E6 00                		mov.L	#0, [r14]
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyDspK_1     = 0;
 153                             		.loc 1 431 0
 154 003f FB E2 00 00 00 00       		mov.L	#_m_ui32EnergyDspK_1, r14
 155 0045 F8 E6 00                		mov.L	#0, [r14]
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_ui32EnergyDspOffset  = 0;
 156                             		.loc 1 433 0
 157 0048 FB E2 00 00 00 00       		mov.L	#_m_ui32EnergyDspOffset, r14
 158 004e F8 E6 00                		mov.L	#0, [r14]
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 159                             		.loc 1 439 0
 160 0051 66 01                   		mov.L	#0, r1
 161 0053 02                      		rts
 162                             	.LFE3:
 164                             		.section	.text.PowerMeter_StartCal,"ax",@progbits
 165                             		.global	_PowerMeter_StartCal
 167                             	_PowerMeter_StartCal:
 168                             	.LFB4:
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 169                             		.loc 1 447 0
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 170                             		.loc 1 449 0
 171 0000 66 11                   		mov.L	#1, r1
 172 0002 02                      		rts
 173                             	.LFE4:
 175                             		.section	.text.PowerMeter_LoadRegister,"ax",@progbits
 176                             		.global	_PowerMeter_LoadRegister
 178                             	_PowerMeter_LoadRegister:
 179                             	.LFB5:
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 180                             		.loc 1 460 0
 181                             	.LVL12:
 182 0000 6E 7A                   		pushm	r7-r10
 183                             	.LCFI1:
 184 0002 EF 17                   		mov.L	r1, r7
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   switch (psLoadRegister->eType)
 185                             		.loc 1 479 0
 186 0004 A8 91                   		mov.L	8[r1], r1
 187                             	.LVL13:
 188 0006 61 21                   		cmp	#2, r1
 189 0008 3A C7 00                		beq	.L15
 190 000b 61 31                   		cmp	#3, r1
 191 000d 3A 0B 01                		beq	.L16
 192 0010 61 11                   		cmp	#1, r1
 193 0012 3B 4D 01                		bne	.L25
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (   (psLoadRegister->params.res.pui16GMant == NULL)
 194                             		.loc 1 483 0
 195 0015 ED 7A 03                		mov.L	12[r7], r10
 196 0018 61 0A                   		cmp	#0, r10
 197 001a 3A 45 01                		beq	.L25
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           || (psLoadRegister->params.res.pi8Gexp == NULL))
 198                             		.loc 1 484 0
 199 001d ED 7A 04                		mov.L	16[r7], r10
 200 0020 61 0A                   		cmp	#0, r10
 201 0022 3A 3D 01                		beq	.L25
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_ui8RLoadIndex >= CONFIG_EMS_RLOAD_ITEMS_MAX)
 202                             		.loc 1 488 0
 203 0025 FB A2 00 00 00 00       		mov.L	#_m_sLoadIndex, r10
 204 002b 58 A3                   		movu.B	[r10], r3
 205 002d 68 63                   		shlr	#6, r3
 206 002f EF 3A                   		mov.L	r3, r10
 207 0031 61 33                   		cmp	#3, r3
 208 0033 3A 2F 01                		beq	.L27
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].ui8Mask       = psLoadRegister->ui8Mask;
 209                             		.loc 1 494 0
 210 0036 63 CA                   		mul	#12, r10
 211 0038 70 A4 00 00 00 00       		add	#_m_asRLoadParam, r10, r4
 212 003e C0 74                   		mov.B	[r7], [r4]
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].pui8Status    = psLoadRegister->pui8Status;
 213                             		.loc 1 495 0
 214 0040 E5 74 01 01             		mov.L	4[r7], 4[r4]
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant     = *(psLoadRegister->params.res.pui16GMant);
 215                             		.loc 1 496 0
 216 0044 ED 7E 03                		mov.L	12[r7], r14
 217 0047 DC EE                   		mov.W	[r14], r14
 218 0049 D7 4E 04                		mov.W	r14, 8[r4]
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asRLoadParam[m_ui8RLoadIndex].i8Gexp        = *(psLoadRegister->params.res.pi8Gexp);
 219                             		.loc 1 497 0
 220 004c A9 72                   		mov.L	16[r7], r2
 221 004e C4 24 0A                		mov.B	[r2], 10[r4]
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (psLoadRegister->params.res.pui8Calib != NULL)
 222                             		.loc 1 501 0
 223 0051 A9 7F                   		mov.L	20[r7], r7
 224                             	.LVL14:
 225 0053 61 07                   		cmp	#0, r7
 226 0055 20 61                   		beq	.L17
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if (   (*(psLoadRegister->params.res.pui8Calib) != RESISTOR_CALIB_NO_CALIB)
 227                             		.loc 1 503 0
 228 0057 58 74                   		movu.B	[r7], r4
 229 0059 75 54 FF                		cmp	#0xff, r4
 230 005c 20 5A                   		beq	.L17
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             && (*(psLoadRegister->params.res.pui8Calib) != RESISTOR_CALIB_DEF_VALUE))
 231                             		.loc 1 504 0
 232 005e 75 54 80                		cmp	#0x80, r4
 233 0061 20 55                   		beq	.L17
 234                             	.LVL15:
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			tempVal1 = (((((int32_t)(RESISTOR_CALIB_DEF_VALUE - *(psLoadRegister->params.res.pui8Calib))) <<
 235                             		.loc 1 508 0
 236 0063 75 47 80                		mov.L	#0x80, r7
 237 0066 FF 04 47                		sub	r4, r7, r4
 238 0069 6C 84                   		shll	#8, r4
 239 006b 76 14 9A 19             		mul	#0x199a, r4
 240 006f 6B 04                   		shar	#16, r4
 241                             	.LVL16:
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			compValue = (uint16_t)((  m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant * tempVal1)>>15);
 242                             		.loc 1 509 0
 243 0071 5F E7                   		movu.W	r14, r7
 244 0073 4F 47                   		mul	r4, r7
 245 0075 6A F7                   		shar	#15, r7
 246                             	.LVL17:
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			diffToOvflw = 0xFFFF - m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant;
 247                             		.loc 1 507 0
 248 0077 FC 3B E1                		not	r14, r1
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 			if(compValue <= diffToOvflw)
 249                             		.loc 1 510 0
 250 007a DF 72                   		mov.W	r7, r2
 251 007c DF 11                   		mov.W	r1, r1
 252 007e 47 17                   		cmp	r1, r7
 253 0080 2A 04                   		bgt	.L18
 254 0082 2E 29                   		bra	.L19
 255                             	.L18:
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 				if(tempVal1 >= 0)
 256                             		.loc 1 517 0
 257 0084 61 04                   		cmp	#0, r4
 258 0086 29 25                   		blt	.L19
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 					m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant = (m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant >> 1) +
 259                             		.loc 1 519 0
 260 0088 70 A7 00 00 00 00       		add	#_m_asRLoadParam+8, r10, r7
 261                             	.LVL18:
 262 008e 70 AA 00 00 00 00       		add	#_m_asRLoadParam, r10
 263 0094 DF 24                   		mov.W	r2, r4
 264                             	.LVL19:
 265 0096 6A 14                   		shar	#1, r4
 266 0098 5F EE                   		movu.W	r14, r14
 267                             	.LVL20:
 268 009a 68 1E                   		shlr	#1, r14
 269 009c 4B 4E                   		add	r4, r14
 270 009e D7 AE 04                		mov.W	r14, 8[r10]
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 					m_asRLoadParam[m_ui8RLoadIndex].i8Gexp += 1;
 271                             		.loc 1 522 0
 272 00a1 CD AA 0A                		mov.B	10[r10], r10
 273                             	.LVL21:
 274 00a4 62 1A                   		add	#1, r10
 275 00a6 C7 7A 02                		mov.B	r10, 2[r7]
 276 00a9 2E 0D                   		bra	.L17
 277                             	.LVL22:
 278                             	.L19:
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 					m_asRLoadParam[m_ui8RLoadIndex].ui16Gmant += compValue;
 279                             		.loc 1 526 0
 280 00ab 70 AA 00 00 00 00       		add	#_m_asRLoadParam, r10
 281 00b1 4B 7E                   		add	r7, r14
 282                             	.LVL23:
 283 00b3 D7 AE 04                		mov.W	r14, 8[r10]
 284                             	.LVL24:
 285                             		.balign 2,3,5
 286                             	.L17:
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       ++m_ui8RLoadIndex;
 287                             		.loc 1 534 0
 288 00b6 FB A2 00 00 00 00       		mov.L	#_m_sLoadIndex, r10
 289 00bc 71 37 01                		add	#1, r3, r7
 290 00bf 64 37                   		and #3, r7
 291 00c1 6C 67                   		shll	#6, r7
 292 00c3 CC AE                   		mov.B	[r10], r14
 293 00c5 75 2E 3F                		and #63, r14
 294 00c8 57 E7                   		or	r14, r7
 295 00ca C3 A7                   		mov.B	r7, [r10]
 296 00cc 38 99 00                		bra	.L28
 297                             	.LVL25:
 298                             	.L15:
 540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (   (psLoadRegister->params.mot.pui16PVal == NULL)
 299                             		.loc 1 540 0
 300 00cf ED 7A 03                		mov.L	12[r7], r10
 301 00d2 61 0A                   		cmp	#0, r10
 302 00d4 3A 8B 00                		beq	.L25
 541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           || (psLoadRegister->params.mot.pui32EVal == NULL))
 303                             		.loc 1 541 0
 304 00d7 ED 7A 04                		mov.L	16[r7], r10
 305 00da 61 0A                   		cmp	#0, r10
 306 00dc 3A 83 00                		beq	.L25
 545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_ui8MLoadIndex >= CONFIG_EMS_MLOAD_ITEMS_MAX)
 307                             		.loc 1 545 0
 308 00df FB A2 00 00 00 00       		mov.L	#_m_sLoadIndex, r10
 309 00e5 58 AE                   		movu.B	[r10], r14
 310 00e7 68 4E                   		shlr	#4, r14
 311 00e9 64 3E                   		and #3, r14
 312 00eb EF E4                   		mov.L	r14, r4
 313 00ed 61 1E                   		cmp	#1, r14
 314 00ef 2A 79                   		bgt	.L13
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].ui8Mask       = psLoadRegister->ui8Mask;
 315                             		.loc 1 553 0
 316 00f1 6C 44                   		shll	#4, r4
 317 00f3 70 44 00 00 00 00       		add	#_m_asMLoadParam, r4
 318 00f9 C0 74                   		mov.B	[r7], [r4]
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].pui8Status    = psLoadRegister->pui8Status;
 319                             		.loc 1 554 0
 320 00fb E5 74 01 01             		mov.L	4[r7], 4[r4]
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].pui16PVal     = psLoadRegister->params.mot.pui16PVal;
 321                             		.loc 1 555 0
 322 00ff E5 74 03 02             		mov.L	12[r7], 8[r4]
 556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asMLoadParam[m_ui8MLoadIndex].pui32EVal     = psLoadRegister->params.mot.pui32EVal;
 323                             		.loc 1 556 0
 324 0103 E5 74 04 03             		mov.L	16[r7], 12[r4]
 559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_ui8MLoadIndex++;
 325                             		.loc 1 559 0
 326 0107 62 1E                   		add	#1, r14
 327 0109 64 3E                   		and #3, r14
 328 010b 6C 4E                   		shll	#4, r14
 329 010d CC A7                   		mov.B	[r10], r7
 330                             	.LVL26:
 331 010f 75 27 CF                		and #-49, r7
 332 0112 57 7E                   		or	r7, r14
 333 0114 C3 AE                   		mov.B	r14, [r10]
 334 0116 2E 4F                   		bra	.L28
 335                             	.LVL27:
 336                             	.L16:
 565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_ui8TLoadIndex >= CONFIG_EMS_TLOAD_ITEMS_MAX)
 337                             		.loc 1 565 0
 338 0118 FB A2 00 00 00 00       		mov.L	#_m_sLoadIndex, r10
 339 011e CC A3                   		mov.B	[r10], r3
 340 0120 64 F3                   		and #15, r3
 341 0122 61 73                   		cmp	#7, r3
 342 0124 2A 3E                   		bgt	.L27
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (EMS_E_OK == TableInit(psLoadRegister->params.tab.pui8Table, psLoadRegister->params.tab.ui
 343                             		.loc 1 573 0
 344 0126 75 13 14                		mul	#20, r3
 345 0129 A8 F9                   		mov.L	12[r7], r1
 346 012b 8C 72                   		mov.B	16[r7], r2
 347 012d 70 33 00 00 00 00       		add	#_m_asTLoadParam+8, r3
 348 0133 05 00 00 00             		bsr	_TableInit
 349                             	.LVL28:
 350 0137 61 01                   		cmp	#0, r1
 351 0139 21 2C                   		bne	.L28
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_asTLoadParam[m_ui8TLoadIndex].ui8Mask     = psLoadRegister->ui8Mask;
 352                             		.loc 1 576 0
 353 013b CC AE                   		mov.B	[r10], r14
 354 013d EF E4                   		mov.L	r14, r4
 355 013f 64 F4                   		and #15, r4
 356 0141 EF 43                   		mov.L	r4, r3
 357 0143 75 13 14                		mul	#20, r3
 358 0146 70 33 00 00 00 00       		add	#_m_asTLoadParam, r3
 359 014c C0 73                   		mov.B	[r7], [r3]
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_asTLoadParam[m_ui8TLoadIndex].pui8Status  = psLoadRegister->pui8Status;
 360                             		.loc 1 577 0
 361 014e E5 73 01 01             		mov.L	4[r7], 4[r3]
 579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ++m_ui8TLoadIndex;
 362                             		.loc 1 579 0
 363 0152 71 47 01                		add	#1, r4, r7
 364                             	.LVL29:
 365 0155 64 F7                   		and #15, r7
 366 0157 75 2E F0                		and #-16, r14
 367 015a 57 E7                   		or	r14, r7
 368 015c C3 A7                   		mov.B	r7, [r10]
 369 015e 0A                      		bra	.L13
 370                             	.LVL30:
 371                             	.L25:
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         return EMS_E_INVALID_VALUE;
 372                             		.loc 1 486 0
 373 015f 66 31                   		mov.L	#3, r1
 374 0161 0F                      		bra	.L13
 375                             	.L27:
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         return EMS_E_PARAM_IGNORED;
 376                             		.loc 1 490 0
 377 0162 66 21                   		mov.L	#2, r1
 378 0164 0C                      		bra	.L13
 379                             	.LVL31:
 380                             	.L28:
 589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
 381                             		.loc 1 589 0
 382 0165 66 01                   		mov.L	#0, r1
 383 0167 03                      		.balign 2,3,2
 384                             	.L13:
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 385                             		.loc 1 590 0
 386 0168 3F 7A 04                		rtsd	#16, r7-r10
 387                             	.LFE5:
 389 016b 03                      		.section	.text.PowerMeter_StartMeasure,"ax",@progbits
 390                             		.global	_PowerMeter_StartMeasure
 392                             	_PowerMeter_StartMeasure:
 393                             	.LFB6:
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 394                             		.loc 1 599 0
 395                             	.LVL32:
 600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (bResetCounters == TRUE)
 396                             		.loc 1 600 0
 397 0000 61 12                   		cmp	#1, r2
 398 0002 21 14                   		bne	.L41
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     b_ui32EnergyCounterWh = 0;
 399                             		.loc 1 604 0
 400 0004 FB E2 00 00 00 00       		mov.L	#_b_ui32EnergyCounterWh, r14
 401 000a F8 E6 00                		mov.L	#0, [r14]
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     b_ui16EnergyCounterWhAcc = 0;
 402                             		.loc 1 605 0
 403 000d FB E2 00 00 00 00       		mov.L	#_b_ui16EnergyCounterWhAcc, r14
 404 0013 F8 E5 00                		mov.W	#0, [r14]
 405                             		.balign 2,3,5
 406                             	.L41:
 611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_bAccuEnabled = TRUE;
 407                             		.loc 1 611 0
 408 0016 FB E2 00 00 00 00       		mov.L	#_m_sFlags, r14
 409 001c CC E4                   		mov.B	[r14], r4
 410 001e 78 74                   		bset	#7, r4
 613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (C_Conv == SINGLE_CONV)
 411                             		.loc 1 613 0
 412 0020 61 01                   		cmp	#0, r1
 413 0022 1C                      		bne	.L42
 615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_bOneShot = TRUE;
 414                             		.loc 1 615 0
 415 0023 78 64                   		bset	#6, r4
 416 0025 0B                      		bra	.L44
 417                             	.L42:
 619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_bOneShot = FALSE;
 418                             		.loc 1 619 0
 419 0026 7A 64                   		bclr	#6, r4
 420                             		.balign 2,3,1
 421                             	.L44:
 422 0028 C3 E4                   		mov.B	r4, [r14]
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 423                             		.loc 1 623 0
 424 002a 66 01                   		mov.L	#0, r1
 425                             	.LVL33:
 426 002c 02                      		rts
 427                             	.LFE6:
 429 002d 03                      		.section	.text.PowerMeter_StopMeasure,"ax",@progbits
 430                             		.global	_PowerMeter_StopMeasure
 432                             	_PowerMeter_StopMeasure:
 433                             	.LFB7:
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 434                             		.loc 1 631 0
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_bAccuEnabled = FALSE;
 435                             		.loc 1 632 0
 436 0000 FB E2 00 00 00 00       		mov.L	#_m_sFlags, r14
 437 0006 CC E4                   		mov.B	[r14], r4
 438 0008 7A 74                   		bclr	#7, r4
 439 000a C3 E4                   		mov.B	r4, [r14]
 635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 440                             		.loc 1 635 0
 441 000c 66 01                   		mov.L	#0, r1
 442 000e 02                      		rts
 443                             	.LFE7:
 445                             		.section	.text.PowerMeter_GetInstant_I,"ax",@progbits
 446                             		.global	_PowerMeter_GetInstant_I
 448                             	_PowerMeter_GetInstant_I:
 449                             	.LFB8:
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 450                             		.loc 1 643 0
 451                             	.LVL34:
 645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 452                             		.loc 1 645 0
 453 0000 66 11                   		mov.L	#1, r1
 454                             	.LVL35:
 455 0002 02                      		rts
 456                             	.LFE8:
 458                             		.section	.text.PowerMeter_GetInstant_V,"ax",@progbits
 459                             		.global	_PowerMeter_GetInstant_V
 461                             	_PowerMeter_GetInstant_V:
 462                             	.LFB9:
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 463                             		.loc 1 653 0
 464                             	.LVL36:
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 465                             		.loc 1 670 0
 466 0000 66 11                   		mov.L	#1, r1
 467                             	.LVL37:
 468 0002 02                      		rts
 469                             	.LFE9:
 471                             		.section	.text.PowerMeter_SetNormInst_V,"ax",@progbits
 472                             		.global	_PowerMeter_SetNormInst_V
 474                             	_PowerMeter_SetNormInst_V:
 475                             	.LFB12:
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
 476                             		.loc 1 718 0
 477                             	.LVL38:
 478 0000 6E 7B                   		pushm	r7-r11
 479                             	.LCFI2:
 735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeakAcc += ui32VADcalib;
 480                             		.loc 1 735 0
 481 0002 FB 72 00 00 00 00       		mov.L	#_m_sVMeasAcc, r7
 482 0008 EF 1A                   		mov.L	r1, r10
 483 000a 06 88 7A                		add	[r7].L, r10
 484 000d E3 7A                   		mov.L	r10, [r7]
 739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui8NSamples++;
 485                             		.loc 1 739 0
 486 000f CD 7A 08                		mov.B	8[r7], r10
 487 0012 62 1A                   		add	#1, r10
 488 0014 CF AE                   		mov.B	r10, r14
 489 0016 C7 7A 08                		mov.B	r10, 8[r7]
 742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (m_bAccuEnabled == TRUE)
 490                             		.loc 1 742 0
 491 0019 FB A2 00 00 00 00       		mov.L	#_m_sFlags, r10
 492 001f CC AB                   		mov.B	[r10], r11
 493 0021 75 2B 80                		and #0xffffff80, r11
 494 0024 EF BA                   		mov.L	r11, r10
 495 0026 76 2A 80 00             		and	#0x80, r10
 496 002a 20 0E                   		beq	.L49
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui32VADcalib *= ui32VADcalib;
 497                             		.loc 1 747 0
 498 002c 4F 11                   		mul	r1, r1
 499                             	.LVL39:
 749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     ui32VADcalib >>= 16;
 500                             		.loc 1 749 0
 501 002e 69 01                   		shlr	#16, r1
 502                             	.LVL40:
 752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_psVMeasAccCurr->ui32VPeak2Acc += ui32VADcalib;
 503                             		.loc 1 752 0
 504 0030 06 89 71 01             		add	4[r7].L, r1
 505                             	.LVL41:
 506 0034 A0 79                   		mov.L	r1, 4[r7]
 507 0036 2E 16                   		bra	.L50
 508                             	.LVL42:
 509                             	.L49:
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else if (m_psVMeasAccCurr->ui8NSamples > EMS_V_AVERAGE_N_SAMPLES)
 510                             		.loc 1 754 0
 511 0038 5B EE                   		movu.B	r14, r14
 512 003a 75 5E 64                		cmp	#0x64, r14
 513 003d 25 0F                   		bleu	.L50
 514                             	.LBB8:
 515                             	.LBB9:
 759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     VoltAvgMeasuresUpdate(m_psVMeasAccCurr);
 516                             		.loc 1 759 0
 517 003f 05 00 00 00             		bsr	_VoltAvgMeasuresUpdate.constprop.1
 518                             	.LVL43:
 519                             	.LBB10:
 520                             	.LBB11:
1458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeakAcc  = 0;
 521                             		.loc 1 1458 0
 522 0043 E3 7A                   		mov.L	r10, [r7]
1461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeak2Acc  = 0;
 523                             		.loc 1 1461 0
 524 0045 E7 7A 01                		mov.L	r10, 4[r7]
1462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui8NSamples   = 0;
 525                             		.loc 1 1462 0
 526 0048 C7 7B 08                		mov.B	r11, 8[r7]
 527                             	.LVL44:
 528 004b 03                      		.balign 2,3,1
 529                             	.L50:
 530                             	.LBE11:
 531                             	.LBE10:
 532                             	.LBE9:
 533                             	.LBE8:
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 534                             		.loc 1 764 0
 535 004c 66 01                   		mov.L	#0, r1
 536 004e 3F 7B 05                		rtsd	#20, r7-r11
 537                             	.LFE12:
 539 0051 03                      		.section	.text.PowerMeter_SetInstant_V,"ax",@progbits
 540                             		.global	_PowerMeter_SetInstant_V
 542                             	_PowerMeter_SetInstant_V:
 543                             	.LFB11:
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 544                             		.loc 1 691 0
 545                             	.LVL45:
 546 0000 6C 61                   		shll	#6, r1
 547                             	.LVL46:
 548 0002 77 01 FF FF 00          		cmp	#0xffff, r1
 549 0007 25 07                   		bleu	.L53
 550 0009 FB 1E FF FF 00          		mov.L	#0xffff, r1
 551                             	.LVL47:
 552                             		.balign 2,3,5
 553                             	.L53:
 709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui32VADcalib -= (uint32_t)g_ui16ALGO_NORM_RTN;
 554                             		.loc 1 709 0
 555 000e FB E2 00 00 00 00       		mov.L	#_m_sAlgoParams, r14
 556                             	.LVL48:
 557 0014 EC EE                   		mov.L	[r14], r14
 558                             	.LVL49:
 711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return PowerMeter_SetNormInst_V(ui32VADcalib);
 559                             		.loc 1 711 0
 560 0016 06 C1 E1 05             		sub	10[r14].UW, r1
 561                             	.LVL50:
 562 001a 04 00 00 00             		bra	_PowerMeter_SetNormInst_V
 563                             	.LVL51:
 564                             	.LFE11:
 566                             		.section	.text.PowerMeter_SetAbsInstant_V,"ax",@progbits
 567                             		.global	_PowerMeter_SetAbsInstant_V
 569                             	_PowerMeter_SetAbsInstant_V:
 570                             	.LFB10:
 677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 571                             		.loc 1 677 0
 572                             	.LVL52:
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	tmpVAbs = (((uint32_t) ui16VADabs * 10) << 16) / (g_ui16ALGO_VMAX10);
 573                             		.loc 1 681 0
 574 0000 63 A1                   		mul	#10, r1
 575                             	.LVL53:
 576 0002 6D 01                   		shll	#16, r1
 577 0004 FB E2 00 00 00 00       		mov.L	#_m_sAlgoParams, r14
 578                             	.LVL54:
 579 000a EC EE                   		mov.L	[r14], r14
 580                             	.LVL55:
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return PowerMeter_SetNormInst_V(tmpVAbs);
 581                             		.loc 1 683 0
 582 000c 06 E1 09 E1 04          		divu	8[r14].UW, r1
 583 0011 04 00 00 00             		bra	_PowerMeter_SetNormInst_V
 584                             	.LVL56:
 585                             	.LFE10:
 587                             		.section	.text.PowerMeter_GetInstant_P,"ax",@progbits
 588                             		.global	_PowerMeter_GetInstant_P
 590                             	_PowerMeter_GetInstant_P:
 591                             	.LFB13:
 772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 592                             		.loc 1 772 0
 593                             	.LVL57:
 780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16P = m_ui16PowerPeriod;
 594                             		.loc 1 780 0
 595 0000 FB E2 00 00 00 00       		mov.L	#_m_ui16PowerPeriod, r14
 596 0006 D0 E1                   		mov.W	[r14], [r1]
 783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 597                             		.loc 1 783 0
 598 0008 66 01                   		mov.L	#0, r1
 599                             	.LVL58:
 600 000a 02                      		rts
 601                             	.LFE13:
 603                             		.section	.text.PowerMeter_GetAvgLastCycle_P,"ax",@progbits
 604                             		.global	_PowerMeter_GetAvgLastCycle_P
 606                             	_PowerMeter_GetAvgLastCycle_P:
 607                             	.LFB14:
 792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 608                             		.loc 1 792 0
 609                             	.LVL59:
 801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16P = m_ui16PowerPeriod;
 610                             		.loc 1 801 0
 611 0000 FB E2 00 00 00 00       		mov.L	#_m_ui16PowerPeriod, r14
 612 0006 D0 E1                   		mov.W	[r14], [r1]
 804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 613                             		.loc 1 804 0
 614 0008 66 01                   		mov.L	#0, r1
 615                             	.LVL60:
 616 000a 02                      		rts
 617                             	.LFE14:
 619                             		.section	.text.PowerMeter_GetAvgLastCycle_P_100mW,"ax",@progbits
 620                             		.global	_PowerMeter_GetAvgLastCycle_P_100mW
 622                             	_PowerMeter_GetAvgLastCycle_P_100mW:
 623                             	.LFB15:
 813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 624                             		.loc 1 813 0
 625                             	.LVL61:
 822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16P = m_ui16PowerPeriod * 10;
 626                             		.loc 1 822 0
 627 0000 FB E2 00 00 00 00       		mov.L	#_m_ui16PowerPeriod, r14
 628 0006 DC EE                   		mov.W	[r14], r14
 629 0008 63 AE                   		mul	#10, r14
 630 000a D3 1E                   		mov.W	r14, [r1]
 825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 631                             		.loc 1 825 0
 632 000c 66 01                   		mov.L	#0, r1
 633                             	.LVL62:
 634 000e 02                      		rts
 635                             	.LFE15:
 637                             		.section	.text.PowerMeter_Get_I_RMS,"ax",@progbits
 638                             		.global	_PowerMeter_Get_I_RMS
 640                             	_PowerMeter_Get_I_RMS:
 641                             	.LFB16:
 833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 642                             		.loc 1 833 0
 643                             	.LVL63:
 835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 644                             		.loc 1 835 0
 645 0000 66 11                   		mov.L	#1, r1
 646                             	.LVL64:
 647 0002 02                      		rts
 648                             	.LFE16:
 650                             		.section	.text.PowerMeter_Get_I_RMS_100mA,"ax",@progbits
 651                             		.global	_PowerMeter_Get_I_RMS_100mA
 653                             	_PowerMeter_Get_I_RMS_100mA:
 654                             	.LFB17:
 843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 655                             		.loc 1 843 0
 656                             	.LVL65:
 845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 657                             		.loc 1 845 0
 658 0000 66 11                   		mov.L	#1, r1
 659                             	.LVL66:
 660 0002 02                      		rts
 661                             	.LFE17:
 663                             		.section	.text.PowerMeter_Get_V_RMS,"ax",@progbits
 664                             		.global	_PowerMeter_Get_V_RMS
 666                             	_PowerMeter_Get_V_RMS:
 667                             	.LFB18:
 853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 668                             		.loc 1 853 0
 669                             	.LVL67:
 870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui16V = m_ui16VrmsAvg;
 670                             		.loc 1 870 0
 671 0000 FB E2 00 00 00 00       		mov.L	#_m_ui16VrmsAvg, r14
 672 0006 D0 E1                   		mov.W	[r14], [r1]
 880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 673                             		.loc 1 880 0
 674 0008 66 01                   		mov.L	#0, r1
 675                             	.LVL68:
 676 000a 02                      		rts
 677                             	.LFE18:
 679                             		.section	.text.PowerMeter_Get_V_RMS_100mV,"ax",@progbits
 680                             		.global	_PowerMeter_Get_V_RMS_100mV
 682                             	_PowerMeter_Get_V_RMS_100mV:
 683                             	.LFB19:
 888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 684                             		.loc 1 888 0
 685                             	.LVL69:
 905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui32V = (uint32_t)m_ui16VrmsAvg * 10;
 686                             		.loc 1 905 0
 687 0000 FB E2 00 00 00 00       		mov.L	#_m_ui16VrmsAvg, r14
 688 0006 5C EE                   		movu.W	[r14], r14
 689 0008 63 AE                   		mul	#10, r14
 690 000a E3 1E                   		mov.L	r14, [r1]
 915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 691                             		.loc 1 915 0
 692 000c 66 01                   		mov.L	#0, r1
 693                             	.LVL70:
 694 000e 02                      		rts
 695                             	.LFE19:
 697                             		.section	.text.PowerMeter_GetAvgSinceStart_E_Wh,"ax",@progbits
 698                             		.global	_PowerMeter_GetAvgSinceStart_E_Wh
 700                             	_PowerMeter_GetAvgSinceStart_E_Wh:
 701                             	.LFB20:
 923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 702                             		.loc 1 923 0
 703                             	.LVL71:
 943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   *pui32EWh = b_ui32EnergyCounterWh;
 704                             		.loc 1 943 0
 705 0000 FB E2 00 00 00 00       		mov.L	#_b_ui32EnergyCounterWh, r14
 706 0006 E0 E1                   		mov.L	[r14], [r1]
 946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 707                             		.loc 1 946 0
 708 0008 66 01                   		mov.L	#0, r1
 709                             	.LVL72:
 710 000a 02                      		rts
 711                             	.LFE20:
 713                             		.section	.text.PowerMeter_Accum,"ax",@progbits
 714                             		.global	_PowerMeter_Accum
 716                             	_PowerMeter_Accum:
 717                             	.LFB21:
 954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 718                             		.loc 1 954 0
 719 0000 6E 7D                   		pushm	r7-r13
 720                             	.LCFI3:
 721 0002 60 40                   		sub	#4, r0
 722                             	.LCFI4:
 723                             	.LVL73:
 994:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (m_bAccuEnabled == TRUE)
 724                             		.loc 1 994 0
 725 0004 FB B2 00 00 00 00       		mov.L	#_m_sFlags, r11
 726 000a CC BA                   		mov.B	[r11], r10
 727 000c EF A7                   		mov.L	r10, r7
 728 000e 76 27 80 00             		and #0x80, r7
 729 0012 3A 52 02                		beq	.L96
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_ui8EnergyUpdateCnt++;
 730                             		.loc 1 999 0
 731 0015 71 A7 01                		add	#1, r10, r7
 732 0018 75 27 3F                		and #63, r7
 733 001b 75 2A C0                		and #-64, r10
 734 001e 57 7A                   		or	r7, r10
 735 0020 C3 BA                   		mov.B	r10, [r11]
1001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     if (m_ui8EnergyUpdateCnt >= g_ui8ALGO_TS)
 736                             		.loc 1 1001 0
 737 0022 FB A2 00 00 00 00       		mov.L	#_m_sAlgoParams, r10
 738 0028 EC AA                   		mov.L	[r10], r10
 739 002a 45 A7 07                		cmp	7[r10].UB, r7
 740 002d 28 05 38 35 02          		blt	.L96
1010:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_psVMeasAccHold->ui8NSamples > 0)
 741                             		.loc 1 1010 0
 742 0032 FB A2 00 00 00 00       		mov.L	#_m_sVMeasAcc, r10
 743 0038 59 A7 08                		movu.B	8[r10], r7
 744 003b 61 07                   		cmp	#0, r7
 745 003d 10                      		beq	.L87
1013:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui16Vpeak2Avg_Norm = (uint16_t)(m_psVMeasAccHold->ui32VPeak2Acc / m_psVMeasAccHold->ui8NSam
 746                             		.loc 1 1013 0
 747 003e ED AC 01                		mov.L	4[r10], r12
 748 0041 FC 27 7C                		divu	r7, r12
 749                             	.LVL74:
 750 0044 0C                      		bra	.L67
 751                             	.LVL75:
 752                             	.L87:
1017:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui16Vpeak2Avg_Norm = 0;
 753                             		.loc 1 1017 0
 754 0045 DF 7C                   		mov.W	r7, r12
 755 0047 03                      		.balign 2,3,3
 756                             	.L67:
 757                             	.LVL76:
1024:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui16VinTab_Norm =                                           /* average Vpeak */
 758                             		.loc 1 1024 0
 759 0048 05 00 00 00             		bsr	_VoltAvgMeasuresUpdate.constprop.1
 760                             	.LVL77:
 761 004c DF 1D                   		mov.W	r1, r13
 762                             	.LVL78:
 763                             	.LBB16:
 764                             	.LBB17:
1458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeakAcc  = 0;
 765                             		.loc 1 1458 0
 766 004e FB 72 00 00 00 00       		mov.L	#_m_sVMeasAcc, r7
 767 0054 3E 70 00                		mov.L	#0, [r7]
1461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui32VPeak2Acc  = 0;
 768                             		.loc 1 1461 0
 769 0057 3E 71 00                		mov.L	#0, 4[r7]
1462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   m_psVMeasAccCurr->ui8NSamples   = 0;
 770                             		.loc 1 1462 0
 771 005a 3C 78 00                		mov.B	#0, 8[r7]
 772                             	.LBE17:
 773                             	.LBE16:
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8RLoadIndex; ui8Index++)
 774                             		.loc 1 1045 0
 775 005d FB 72 00 00 00 00       		mov.L	#_m_sLoadIndex, r7
 776 0063 58 72                   		movu.B	[r7], r2
 777 0065 68 62                   		shlr	#6, r2
 985:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui32PowerInstantRT_Norm = 0;
 778                             		.loc 1 985 0
 779 0067 66 0A                   		mov.L	#0, r10
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8RLoadIndex; ui8Index++)
 780                             		.loc 1 1045 0
 781 0069 CF AB                   		mov.B	r10, r11
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstant_Norm = (uint16_t)(((uint32_t)ui16Vpeak2Avg_Norm * m_asRLoadParam[ui8In
 782                             		.loc 1 1067 0
 783 006b 5F CC                   		movu.W	r12, r12
1068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                                >> (16 - m_asRLoadParam[ui8Index].i8Gexp));
 784                             		.loc 1 1068 0
 785 006d 75 43 10                		mov.L	#16, r3
 786 0070 2E 24                   		bra	.L68
 787                             	.LVL79:
 788                             	.L70:
1051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (m_asRLoadParam[ui8Index].pui8Status == NULL)
 789                             		.loc 1 1051 0
 790 0072 EF 7E                   		mov.L	r7, r14
 791 0074 63 CE                   		mul	#12, r14
 792 0076 70 EE 00 00 00 00       		add	#_m_asRLoadParam, r14
 793 007c ED E4 01                		mov.L	4[r14], r4
 794 007f 61 04                   		cmp	#0, r4
 795 0081 3A 90 01                		beq	.L69
1059:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           else if ((*m_asRLoadParam[ui8Index].pui8Status & m_asRLoadParam[ui8Index].ui8Mask) != 0)
 796                             		.loc 1 1059 0
 797 0084 CC 44                   		mov.B	[r4], r4
 798 0086 CC EE                   		mov.B	[r14], r14
 799 0088 53 4E                   		and	r4, r14
 800 008a 76 2E FF 00             		and #0xff, r14
 801 008e 3B 83 01                		bne	.L69
 802                             	.LVL80:
 803 0091 03                      		.balign 2,3,1
 804                             	.L84:
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8RLoadIndex; ui8Index++)
 805                             		.loc 1 1045 0
 806 0092 62 1B                   		add	#1, r11
 807                             	.LVL81:
 808                             		.balign 2,3,1
 809                             	.L68:
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8RLoadIndex; ui8Index++)
 810                             		.loc 1 1045 0 is_stmt 0 discriminator 1
 811 0094 5B B7                   		movu.B	r11, r7
 812 0096 47 27                   		cmp	r2, r7
 813 0098 29 DA                   		blt	.L70
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8MLoadIndex; ui8Index++)
 814                             		.loc 1 1083 0 is_stmt 1
 815 009a FB 72 00 00 00 00       		mov.L	#_m_sLoadIndex, r7
 816 00a0 58 74                   		movu.B	[r7], r4
 817 00a2 68 44                   		shlr	#4, r4
 818 00a4 64 34                   		and #3, r4
 819 00a6 66 07                   		mov.L	#0, r7
 820 00a8 DF 7B                   		mov.W	r7, r11
 821                             	.LVL82:
 822 00aa CF 7C                   		mov.B	r7, r12
 823                             	.LVL83:
 824 00ac 2E 30                   		bra	.L71
 825                             	.LVL84:
 826                             	.L73:
1089:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (m_asMLoadParam[ui8Index].pui8Status == NULL)
 827                             		.loc 1 1089 0
 828 00ae FD C4 E3                		shll	#4, r14, r3
 829 00b1 70 33 00 00 00 00       		add	#_m_asMLoadParam, r3
 830 00b7 A8 3A                   		mov.L	4[r3], r2
 831 00b9 61 02                   		cmp	#0, r2
 832 00bb 3A 78 01                		beq	.L72
1097:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           else if ((*m_asMLoadParam[ui8Index].pui8Status & m_asMLoadParam[ui8Index].ui8Mask) != 0)
 833                             		.loc 1 1097 0
 834 00be CC 22                   		mov.B	[r2], r2
 835 00c0 CC 33                   		mov.B	[r3], r3
 836 00c2 53 23                   		and	r2, r3
 837 00c4 76 23 FF 00             		and #0xff, r3
 838 00c8 3B 6B 01                		bne	.L72
 839                             	.LVL85:
 840 00cb 03                      		.balign 2,3,1
 841                             	.L85:
1114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           ui32EnergyMot += *m_asMLoadParam[ui8Index].pui32EVal;
 842                             		.loc 1 1114 0
 843 00cc 6C 4E                   		shll	#4, r14
 844 00ce 70 EE 00 00 00 00       		add	#_m_asMLoadParam, r14
 845 00d4 ED EE 03                		mov.L	12[r14], r14
 846 00d7 06 88 E7                		add	[r14].L, r7
 847                             	.LVL86:
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8MLoadIndex; ui8Index++)
 848                             		.loc 1 1083 0
 849 00da 62 1C                   		add	#1, r12
 850                             	.LVL87:
 851                             		.balign 2,3,1
 852                             	.L71:
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8MLoadIndex; ui8Index++)
 853                             		.loc 1 1083 0 is_stmt 0 discriminator 1
 854 00dc 5B CE                   		movu.B	r12, r14
 855 00de 47 4E                   		cmp	r4, r14
 856 00e0 29 CE                   		blt	.L73
 857 00e2 66 0C                   		mov	#0, r12
 858                             	.LVL88:
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8TLoadIndex; ui8Index++)
 859                             		.loc 1 1123 0 is_stmt 1 discriminator 1
 860 00e4 FB 92 00 00 00 00       		mov.L	#_m_sLoadIndex, r9
 861 00ea 2E 28                   		bra	.L74
 862                             	.LVL89:
 863                             	.L77:
1129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           if (m_asTLoadParam[ui8Index].pui8Status == NULL)
 864                             		.loc 1 1129 0
 865 00ec EF E4                   		mov.L	r14, r4
 866 00ee 75 14 14                		mul	#20, r4
 867 00f1 70 44 00 00 00 00       		add	#_m_asTLoadParam, r4
 868 00f7 A8 4B                   		mov.L	4[r4], r3
 869 00f9 61 03                   		cmp	#0, r3
 870 00fb 3A 49 01                		beq	.L75
1137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           else if ((*m_asTLoadParam[ui8Index].pui8Status & m_asTLoadParam[ui8Index].ui8Mask) != 0)
 871                             		.loc 1 1137 0
 872 00fe CC 33                   		mov.B	[r3], r3
 873 0100 CC 44                   		mov.B	[r4], r4
 874 0102 53 34                   		and	r3, r4
 875 0104 76 24 FF 00             		and #0xff, r4
 876 0108 3B 3C 01                		bne	.L75
 877 010b 0D                      		bra	.L76
 878                             	.LVL90:
 879                             	.L86:
1158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****               ui32PowerInstantRT_Norm += (uint32_t)ui16PowerInstant_Norm;
 880                             		.loc 1 1158 0
 881 010c 06 C8 0A                		add	[r0].UW, r10
 882                             	.LVL91:
 883 010f 03                      		.balign 2,3,1
 884                             	.L76:
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8TLoadIndex; ui8Index++)
 885                             		.loc 1 1123 0
 886 0110 62 1C                   		add	#1, r12
 887                             	.LVL92:
 888                             		.balign 2,3,1
 889                             	.L74:
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         for (ui8Index = 0; ui8Index < m_ui8TLoadIndex; ui8Index++)
 890                             		.loc 1 1123 0 is_stmt 0 discriminator 1
 891 0112 5B CE                   		movu.B	r12, r14
 892 0114 CC 94                   		mov.B	[r9], r4
 893 0116 64 F4                   		and #15, r4
 894 0118 47 4E                   		cmp	r4, r14
 895 011a 29 D2                   		blt	.L77
1165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui16PowerPeriod =   (uint16_t)((ui32PowerInstantRT_Norm * g_ui16ALGO_PMAX) >> 16)   /* ph
 896                             		.loc 1 1165 0 is_stmt 1
 897 011c FB C2 00 00 00 00       		mov.L	#_m_sAlgoParams, r12
 898                             	.LVL93:
 899 0122 EC C4                   		mov.L	[r12], r4
 900 0124 5C 4C                   		movu.W	[r4], r12
 901 0126 4F AC                   		mul	r10, r12
 902 0128 69 0C                   		shlr	#16, r12
 903 012a 4B CB                   		add	r12, r11
 904                             	.LVL94:
 905 012c FB C2 00 00 00 00       		mov.L	#_m_ui16PowerPeriod, r12
 906 0132 D3 CB                   		mov.W	r11, [r12]
 907                             	.LVL95:
1174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32DeltaEnergyRTAcc = (((ui32PowerInstantRT_Norm * g_ui16ALGO_KENERGY_MANT) / 10) >> (16 -
 908                             		.loc 1 1174 0
 909 0134 5D 4E 02                		movu.W	4[r4], r14
 910                             	.LVL96:
 911 0137 4F AE                   		mul	r10, r14
 912 0139 FD 74 9E 0A             		divu	#10, r14
 913 013d 75 4A 10                		mov.L	#16, r10
 914                             	.LVL97:
 915 0140 06 01 4A 06             		sub	6[r4].B, r10
 916 0144 FD 60 AE                		shlr	r10, r14
1178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyRTAcc += ui32DeltaEnergyRTAcc;
 917                             		.loc 1 1178 0
 918 0147 FB A2 00 00 00 00       		mov.L	#_m_ui32EnergyRTAcc, r10
 919 014d 06 88 AE                		add	[r10].L, r14
 920 0150 E3 AE                   		mov.L	r14, [r10]
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy =   (((m_ui32EnergyRTAcc & 0xFFFF0000) >> 16) * g_ui16ALGO_EMAX)   /* 32 bit */
 921                             		.loc 1 1181 0
 922 0152 5D 4A 01                		movu.W	2[r4], r10
1182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                      + (((m_ui32EnergyRTAcc & 0x0000FFFF) * g_ui16ALGO_EMAX) >> 16);  /* 32 bit */
 923                             		.loc 1 1182 0
 924 0155 EF EB                   		mov.L	r14, r11
 925 0157 77 2B FF FF 00          		and #0xffff, r11
 926 015c 4F AB                   		mul	r10, r11
 927 015e 69 0B                   		shlr	#16, r11
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy =   (((m_ui32EnergyRTAcc & 0xFFFF0000) >> 16) * g_ui16ALGO_EMAX)   /* 32 bit */
 928                             		.loc 1 1181 0
 929 0160 69 0E                   		shlr	#16, r14
 930 0162 4F EA                   		mul	r14, r10
 931 0164 FF 2E AB                		add	r10, r11, r14
 932                             	.LVL98:
1186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if (ui32Energy < (m_ui32EnergyMainK_1 - m_ui32EnergyMainOffset)) /* Reset Overflow Energy M
 933                             		.loc 1 1186 0
 934 0167 FB C2 00 00 00 00       		mov.L	#_m_ui32EnergyMainK_1, r12
 935 016d EC CB                   		mov.L	[r12], r11
 936 016f FB A2 00 00 00 00       		mov.L	#_m_ui32EnergyMainOffset, r10
 937 0175 EF BD                   		mov.L	r11, r13
 938                             	.LVL99:
 939 0177 06 80 AD                		sub	[r10].L, r13
 940 017a 47 DE                   		cmp	r13, r14
 941 017c 22 04                   		bgeu	.L78
1188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_ui32EnergyMainOffset = m_ui32EnergyMainK_1;
 942                             		.loc 1 1188 0
 943 017e E3 AB                   		mov.L	r11, [r10]
 944                             		.balign 2,3,4
 945                             	.L78:
1191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32Energy += m_ui32EnergyMainOffset;
 946                             		.loc 1 1191 0
 947 0180 06 88 AE                		add	[r10].L, r14
 948                             	.LVL100:
1192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyMainK_1 = ui32Energy;
 949                             		.loc 1 1192 0
 950 0183 E3 CE                   		mov.L	r14, [r12]
 951 0185 FB A2 00 00 00 00       		mov.L	#_m_ui32EnergyMotOld, r10
1219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if ( ui32EnergyMot == 0 )
 952                             		.loc 1 1219 0
 953 018b 61 07                   		cmp	#0, r7
 954 018d 1C                      		bne	.L79
1221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           ui32EnergyMot = m_ui32EnergyMotOld;
 955                             		.loc 1 1221 0
 956 018e EC A7                   		mov.L	[r10], r7
 957                             	.LVL101:
 958 0190 0C                      		bra	.L80
 959                             	.L79:
1225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_ui32EnergyMotOld = ui32EnergyMot;
 960                             		.loc 1 1225 0
 961 0191 E3 A7                   		mov.L	r7, [r10]
 962 0193 03                      		.balign 2,3,5
 963                             	.L80:
1230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if (ui32EnergyMot < (m_ui32EnergyDspK_1 - m_ui32EnergyDspOffset)) /* Reset Overflow Energy 
 964                             		.loc 1 1230 0
 965 0194 FB C2 00 00 00 00       		mov.L	#_m_ui32EnergyDspK_1, r12
 966 019a EC CB                   		mov.L	[r12], r11
 967 019c FB A2 00 00 00 00       		mov.L	#_m_ui32EnergyDspOffset, r10
 968 01a2 EF BD                   		mov.L	r11, r13
 969 01a4 06 80 AD                		sub	[r10].L, r13
 970 01a7 47 D7                   		cmp	r13, r7
 971 01a9 22 05                   		bgeu	.L81
1232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_ui32EnergyDspOffset = m_ui32EnergyDspK_1;
 972                             		.loc 1 1232 0
 973 01ab E3 AB                   		mov.L	r11, [r10]
 974 01ad 03                      		.balign 2,3,4
 975                             	.L81:
1235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         ui32EnergyMot += m_ui32EnergyDspOffset;
 976                             		.loc 1 1235 0
 977 01ae 06 88 A7                		add	[r10].L, r7
 978                             	.LVL102:
1236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_ui32EnergyDspK_1 = ui32EnergyMot;
 979                             		.loc 1 1236 0
 980 01b1 E3 C7                   		mov.L	r7, [r12]
1249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         EnergyMeterUpdate(ui32Energy + ui32EnergyMot);
 981                             		.loc 1 1249 0
 982 01b3 4B E7                   		add	r14, r7
 983                             	.LVL103:
 984                             	.LBB18:
 985                             	.LBB19:
1532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
1536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** Perform update of the energy meter counter from start of life
1537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      void
1539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [out]     void
1540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in,out]  none
1541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \attention \b
1543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \return   void
1545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \retval   [none]
1547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \warning  [none]
1549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
1551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     30-05-2011
1552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  1.0.0
1553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \bug    [none]
1555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \note   \par \b Nota 1:
1559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       documentation by ${Intecs}
1560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
1562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void EnergyMeterUpdate (uint32_t ui32EnergyPeriod)
1563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint32_t ui32Energy = ((b_ui32EnergyCounterWh * 3600) + b_ui16EnergyCounterWhAcc);
 986                             		.loc 1 1564 0
 987 01b5 FB A2 00 00 00 00       		mov.L	#_b_ui16EnergyCounterWhAcc, r10
 988 01bb 5C AB                   		movu.W	[r10], r11
 989 01bd FB C2 00 00 00 00       		mov.L	#_b_ui32EnergyCounterWh, r12
 990 01c3 EC CA                   		mov.L	[r12], r10
 991 01c5 76 1A 10 0E             		mul	#0xe10, r10
 992 01c9 4B BA                   		add	r11, r10
 993                             	.LVL104:
1565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* update the energy meter counter */
1567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui32EnergyPeriod < (ui32Energy - m_ui32EnergyOffset))
 994                             		.loc 1 1567 0
 995 01cb FB B2 00 00 00 00       		mov.L	#_m_ui32EnergyOffset, r11
 996 01d1 EF AD                   		mov.L	r10, r13
 997 01d3 06 80 BD                		sub	[r11].L, r13
 998 01d6 47 D7                   		cmp	r13, r7
 999 01d8 22 04                   		bgeu	.L82
1568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     m_ui32EnergyOffset = ui32Energy;
 1000                             		.loc 1 1569 0
 1001 01da E3 BA                   		mov.L	r10, [r11]
 1002                             		.balign 2,3,4
 1003                             	.L82:
1570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui32Energy  = ui32EnergyPeriod + m_ui32EnergyOffset;
 1004                             		.loc 1 1572 0
 1005 01dc 06 88 B7                		add	[r11].L, r7
 1006                             	.LVL105:
1573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   b_ui32EnergyCounterWh     = ui32Energy / 3600;
 1007                             		.loc 1 1574 0
 1008 01df EF 7A                   		mov.L	r7, r10
 1009 01e1 FD 78 9A 10 0E          		divu	#0xe10, r10
 1010 01e6 E3 CA                   		mov.L	r10, [r12]
1575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   b_ui16EnergyCounterWhAcc  = (uint16_t)(ui32Energy % 3600);
 1011                             		.loc 1 1575 0
 1012 01e8 76 1A 10 0E             		mul	#0xe10, r10
 1013 01ec 43 A7                   		sub	r10, r7
 1014                             	.LVL106:
 1015 01ee FB B2 00 00 00 00       		mov.L	#_b_ui16EnergyCounterWhAcc, r11
 1016                             	.LVL107:
 1017 01f4 D3 B7                   		mov.W	r7, [r11]
 1018                             	.LBE19:
 1019                             	.LBE18:
1260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (m_bOneShot == TRUE)
 1020                             		.loc 1 1260 0
 1021 01f6 FB 72 00 00 00 00       		mov.L	#_m_sFlags, r7
 1022 01fc CC 7A                   		mov.B	[r7], r10
 1023 01fe EF AB                   		mov.L	r10, r11
 1024 0200 75 2B 40                		and #64, r11
 1025 0203 15                      		beq	.L83
1262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_bAccuEnabled = FALSE;
 1026                             		.loc 1 1262 0
 1027 0204 7A 7A                   		bclr	#7, r10
 1028 0206 C3 7A                   		mov.B	r10, [r7]
 1029                             		.balign 2,3,5
 1030                             	.L83:
1265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_ui8EnergyUpdateCnt = 0;
 1031                             		.loc 1 1265 0
 1032 0208 CC 7A                   		mov.B	[r7], r10
 1033 020a 75 2A C0                		and #-64, r10
 1034 020d C3 7A                   		mov.B	r10, [r7]
 1035 020f 2E 55                   		bra	.L96
 1036                             	.LVL108:
 1037                             	.L69:
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstant_Norm = (uint16_t)(((uint32_t)ui16Vpeak2Avg_Norm * m_asRLoadParam[ui8In
 1038                             		.loc 1 1067 0
 1039 0211 63 C7                   		mul	#12, r7
 1040 0213 70 7E 00 00 00 00       		add	#_m_asRLoadParam, r7, r14
 1041 0219 5D E7 04                		movu.W	8[r14], r7
 1042 021c 4F C7                   		mul	r12, r7
1068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                                >> (16 - m_asRLoadParam[ui8Index].i8Gexp));
 1043                             		.loc 1 1068 0
 1044 021e EF 34                   		mov.L	r3, r4
 1045 0220 06 01 E4 0A             		sub	10[r14].B, r4
 1046 0224 FD 60 47                		shlr	r4, r7
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstant_Norm = (uint16_t)(((uint32_t)ui16Vpeak2Avg_Norm * m_asRLoadParam[ui8In
 1047                             		.loc 1 1067 0
 1048 0227 D3 07                   		mov.W	r7, [r0]
1073:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui32PowerInstantRT_Norm += ui16PowerInstant_Norm;
 1049                             		.loc 1 1073 0
 1050 0229 77 27 FF FF 00          		and #0xffff, r7
 1051 022e 4B 7A                   		add	r7, r10
 1052                             	.LVL109:
 1053 0230 38 62 FE                		bra	.L84
 1054                             	.LVL110:
 1055                             	.L72:
1108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstantMot += *m_asMLoadParam[ui8Index].pui16PVal;
 1056                             		.loc 1 1108 0
 1057 0233 FD C4 E3                		shll	#4, r14, r3
 1058 0236 70 33 00 00 00 00       		add	#_m_asMLoadParam, r3
 1059 023c A8 B3                   		mov.L	8[r3], r3
 1060 023e 06 48 3B                		add	[r3].W, r11
 1061                             	.LVL111:
 1062 0241 38 8B FE                		bra	.L85
 1063                             	.LVL112:
 1064                             	.L75:
1145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             ui16PowerInstant_Norm = 0;
 1065                             		.loc 1 1145 0
 1066 0244 3D 00 00                		mov.W	#0, [r0]
1146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****             if (EMS_E_OK == TablePower(&m_asTLoadParam[ui8Index].sTable, (
 1067                             		.loc 1 1146 0
 1068 0247 EF E1                   		mov.L	r14, r1
 1069 0249 75 11 14                		mul	#20, r1
 1070 024c 70 11 00 00 00 00       		add	#_m_asTLoadParam+8, r1
 1071 0252 66 02                   		mov	#0, r2
 1072 0254 DF D3                   		mov.W	r13, r3
 1073 0256 EF 04                   		mov.L	r0, r4
 1074 0258 05 00 00 00             		bsr	_TablePower
 1075                             	.LVL113:
 1076 025c 61 01                   		cmp	#0, r1
 1077 025e 3A AE FE                		beq	.L86
 1078 0261 38 AF FE                		bra	.L76
 1079                             	.LVL114:
 1080                             	.L96:
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 1081                             		.loc 1 1270 0
 1082 0264 66 01                   		mov.L	#0, r1
 1083 0266 3F 7D 08                		rtsd	#32, r7-r13
 1084                             	.LFE21:
 1086 0269 03                      		.section	.text.PowerMeter_StartEnergyCount,"ax",@progbits
 1087                             		.global	_PowerMeter_StartEnergyCount
 1089                             	_PowerMeter_StartEnergyCount:
 1090                             	.LFB22:
1277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 1091                             		.loc 1 1277 0
 1092                             	.LVL115:
1302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 1093                             		.loc 1 1302 0
 1094 0000 66 11                   		mov.L	#1, r1
 1095                             	.LVL116:
 1096 0002 02                      		rts
 1097                             	.LFE22:
 1099                             		.section	.text.PowerMeter_GetEnergyCount,"ax",@progbits
 1100                             		.global	_PowerMeter_GetEnergyCount
 1102                             	_PowerMeter_GetEnergyCount:
 1103                             	.LFB23:
1310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 1104                             		.loc 1 1310 0
 1105                             	.LVL117:
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 1106                             		.loc 1 1339 0
 1107 0000 66 11                   		mov.L	#1, r1
 1108                             	.LVL118:
 1109 0002 02                      		rts
 1110                             	.LFE23:
 1112                             		.section	.text.PowerMeter_StopEnergyCount,"ax",@progbits
 1113                             		.global	_PowerMeter_StopEnergyCount
 1115                             	_PowerMeter_StopEnergyCount:
 1116                             	.LFB24:
1347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 1117                             		.loc 1 1347 0
 1118                             	.LVL119:
1362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 1119                             		.loc 1 1362 0
 1120 0000 66 11                   		mov.L	#1, r1
 1121                             	.LVL120:
 1122 0002 02                      		rts
 1123                             	.LFE24:
 1125                             		.section	.text.EM_LoadResCalib,"ax",@progbits
 1126                             		.global	_EM_LoadResCalib
 1128                             	_EM_LoadResCalib:
 1129                             	.LFB29:
1576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
1581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** Perform update of the energy partial counters
1582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      void
1584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [out]     void
1585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in,out]  none
1586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \attention \b
1588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \return   void
1590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \retval   [none]
1592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \warning  [none]
1594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
1596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     30-05-2011
1597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  1.0.0
1598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \bug    [none]
1600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \note   \par \b Nota 1:
1604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       documentation by ${Intecs}
1605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
1607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** static void EnergyCountersUpdate (void)
1608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
1609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if EMS_ENERGY_COUNTERS_MAX
1610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t ui8Index;
1611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   for (ui8Index = 0; ui8Index < EMS_ENERGY_COUNTERS_MAX; ui8Index++)
1613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* if counter enabled*/
1615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     if ((m_asCounters[ui8Index].ui8Flags & EM_COUNT_STAT_MASK) !=0)
1616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     {
1617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* accumulate energy and time */
1618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asCounters[ui8Index].ui32RawAccum     += m_ui16PowerPeriod;
1619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asCounters[ui8Index].ui32Raw10secAcc  += m_ui16PowerPeriod;
1620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       m_asCounters[ui8Index].ui16TimeElapsed++;
1621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (((m_asCounters[ui8Index].ui16TimeElapsed) % 10) == 0)
1623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /*
1625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           save the max in 10 secs as raw
1626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         */
1627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if(m_asCounters[ui8Index].ui32Raw10secAcc > m_asCounters[ui8Index].ui32RawMaxEnergy10sec)
1628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_asCounters[ui8Index].ui32RawMaxEnergy10sec = m_asCounters[ui8Index].ui32Raw10secAcc;
1630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_asCounters[ui8Index].ui32Raw10secAcc = 0;
1632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* if time period not yet elapsed but current time > time period ... */
1635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (  (m_asCounters[ui8Index].ui16TimeElapsed >= m_asCounters[ui8Index].ui16TimePeriod)
1636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           &&((m_asCounters[ui8Index].ui8Flags & EM_T_ELAPSED_MASK) == 0))
1637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* detect transition */
1639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_asCounters[ui8Index].ui8Flags |= EM_T_ELAPSED_MASK;
1640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* calculate energy consumed so far in Wh...*/
1642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         m_asCounters[ui8Index].ui16EnergyCons = (uint16_t) (m_asCounters[ui8Index].ui32RawAccum / 3
1643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /*... if it is grater then energy threshold */
1644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         if(m_asCounters[ui8Index].ui16EnergyCons > m_asCounters[ui8Index].ui16EnergyTreshold)
1645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         {
1646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           /* set the overrun flag*/
1647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****           m_asCounters[ui8Index].ui8Flags |= EM_E_OVERRUN_MASK;
1648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         }
1649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     }
1651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
1654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* #ifdef POWER_METER_SW */
1656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if (CONFIG_RES_CALIBRATION_ENABLE == 1)
1657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
1658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   This function get a pointer to Resistor calibration factor
1659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      uint8_t         ui8LoadTablePositionRes   ["Load Table Position" field for Resist
1661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      Loader_Struct*  psResCalibDataStruct      [pointer to struct containing the Indes
1662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      Loader_Struct*  psOutputsMap              [pointer to struct containing the Outpu
1663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [out]     none
1664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in,out]  none
1665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \attention \b
1667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \return           uint8_t* - pointer to Resistor calibration factor
1669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \retval   [none]
1671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \warning  [none]
1673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
1675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     08-09-2011
1676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  1.0.0
1677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \bug    [none]
1679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \note   \par \b Nota 1:
1681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       documentation by ${Intecs}
1682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
1683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC uint8_t* EM_LoadResCalib (uint8_t ui8LoadTablePositionRes, const Loader_Struct* psResCalibDa
1684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                  const Loader_Struct* psOutputsMap, uint8_t numLoad, const sEMS_Res
1685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 1130                             		.loc 1 1685 0
 1131                             	.LVL121:
 1132 0000 7E A7                   		push.l	r7
 1133                             	.LCFI5:
 1134 0002 60 40                   		sub	#4, r0
 1135                             	.LCFI6:
 1136 0004 A8 8F                   		mov.L	12[r0], r7
1686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	uint8_t i;
1688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t ui16LoadIdOffset = (ui8LoadTablePositionRes * IO_MANAGER_LOAD_TABLE_ITEM_SIZE * 2) + LOA
 1137                             		.loc 1 1688 0
 1138 0006 5B 11                   		movu.B	r1, r1
 1139 0008 FD C3 1F                		shll	#3, r1, r15
 1140                             	.LVL122:
1689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if CHECK_TABLE
1692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (psResCalibDataStruct == NULL)
 1141                             		.loc 1 1692 0
 1142 000b 61 02                   		cmp	#0, r2
 1143 000d 20 52                   		beq	.L114
1693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || (psOutputsMap == NULL))
 1144                             		.loc 1 1693 0
 1145 000f 61 03                   		cmp	#0, r3
 1146 0011 20 47                   		beq	.L111
1694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return NULL;
1696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (psResCalibDataStruct->Data == NULL)
 1147                             		.loc 1 1697 0
 1148 0013 EC 25                   		mov.L	[r2], r5
 1149 0015 61 05                   		cmp	#0, r5
 1150 0017 20 45                   		beq	.L112
1698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || (psResCalibDataStruct->DataLenght < INDESIT_PLANT_CALI_WLEN))
 1151                             		.loc 1 1698 0
 1152 0019 B8 A1                   		movu.W	4[r2], r1
 1153                             	.LVL123:
 1154 001b 61 01                   		cmp	#0, r1
 1155 001d 20 4B                   		beq	.L106
1699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return NULL;
1701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (   (psOutputsMap->Data == NULL)
 1156                             		.loc 1 1702 0
 1157 001f EC 32                   		mov.L	[r3], r2
 1158                             	.LVL124:
 1159 0021 61 02                   		cmp	#0, r2
 1160 0023 20 3C                   		beq	.L114
1703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       || (psOutputsMap->DataLenght == 0))
 1161                             		.loc 1 1703 0
 1162 0025 5D 3E 02                		movu.W	4[r3], r14
 1163 0028 61 0E                   		cmp	#0, r14
 1164 002a 20 38                   		beq	.L115
1704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return NULL;
1706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui16LoadIdOffset >= (2 * psOutputsMap->DataLenght))
 1165                             		.loc 1 1708 0
 1166 002c 5F FF                   		movu.W	r15, r15
 1167 002e 4B EE                   		add	r14, r14
 1168 0030 47 EF                   		cmp	r14, r15
 1169 0032 28 33                   		bge	.L116
 1170 0034 EF 73                   		mov.L	r7, r3
 1171                             	.LVL125:
 1172 0036 66 0E                   		mov	#0, r14
1709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return NULL;
1711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   for(i = 0; i<numLoad; i++ )
 1173                             		.loc 1 1715 0
 1174 0038 5B 44                   		movu.B	r4, r4
1716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  if(pResCalTab[i].resLoadID == psOutputsMap->Data[ui16LoadIdOffset])
 1175                             		.loc 1 1717 0
 1176 003a 4B F2                   		add	r15, r2
 1177 003c 2E 14                   		bra	.L107
 1178                             	.LVL126:
 1179                             	.L109:
 1180 003e EF 3F                   		mov.L	r3, r15
 1181 0040 62 23                   		add	#2, r3
 1182 0042 58 F1                   		movu.B	[r15], r1
 1183 0044 44 21                   		cmp	[r2].UB, r1
 1184 0046 18                      		bne	.L108
1718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  {
1719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 		  return &(psResCalibDataStruct->Data[pResCalTab[i].resCalOffset]);
 1185                             		.loc 1 1719 0
 1186 0047 59 F1 01                		movu.B	1[r15], r1
 1187 004a 4B 51                   		add	r5, r1
 1188 004c 2E 1C                   		bra	.L106
 1189                             	.L108:
1715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   for(i = 0; i<numLoad; i++ )
 1190                             		.loc 1 1715 0
 1191 004e 62 1E                   		add	#1, r14
 1192                             	.LVL127:
 1193                             		.balign 2,3,1
 1194                             	.L107:
1715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   for(i = 0; i<numLoad; i++ )
 1195                             		.loc 1 1715 0 is_stmt 0 discriminator 1
 1196 0050 5B E7                   		movu.B	r14, r7
 1197 0052 47 47                   		cmp	r4, r7
 1198 0054 21 EA                   		bne	.L109
 1199 0056 2E 0F                   		bra	.L116
 1200                             	.LVL128:
 1201                             	.L111:
1695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return NULL;
 1202                             		.loc 1 1695 0 is_stmt 1
 1203 0058 EF 31                   		mov.L	r3, r1
 1204 005a 2E 0E                   		bra	.L106
 1205                             	.L112:
 1206 005c EF 51                   		mov.L	r5, r1
 1207 005e 0A                      		bra	.L106
 1208                             	.LVL129:
 1209                             	.L114:
 1210 005f EF 21                   		mov.L	r2, r1
 1211 0061 0F                      		bra	.L106
 1212                             	.L115:
 1213 0062 EF E1                   		mov.L	r14, r1
 1214 0064 0C                      		bra	.L106
 1215                             	.LVL130:
 1216                             	.L116:
 1217 0065 66 01                   		mov.L	#0, r1
 1218 0067 03                      		.balign 2,3,2
 1219                             	.L106:
1720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	  }
1721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return NULL;
1725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 1220                             		.loc 1 1726 0
 1221 0068 3F 77 02                		rtsd	#8, r7-r7
 1222                             	.LFE29:
 1224 006b 03                      		.section	.text.EM_LoadRegister,"ax",@progbits
 1225                             		.global	_EM_LoadRegister
 1227                             	_EM_LoadRegister:
 1228                             	.LFB30:
1727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif /*(CONFIG_RES_CALIBRATION_ENABLE == 1) */
1728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /**
1730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   This function register a load
1731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      Loader_Struct*  psEMDataStruct            [pointer to struct containing the curre
1733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      Loader_Struct*  psResCalibDataStruct      [pointer to struct containing the Indes
1734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in]      Loader_Struct*  psOutputsMap              [pointer to struct containing the Outpu
1735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [out]     none
1736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \param  [in,out]  none
1737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \attention \b
1739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \return   eEMS_Err - error code
1741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \retval   [none]
1743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \warning  [none]
1745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \author   Intecs
1747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \date     08-09-2011
1748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \version  1.0.0
1749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \bug    [none]
1751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** \note   \par \b Nota 1:
1753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       documentation by ${Intecs}
1754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** */
1755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** STATIC eEMS_Err EM_LoadRegister (const Loader_Struct* psEMDataStruct, const Loader_Struct* psResCal
1756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                  const Loader_Struct* psOutputsMap) 
1757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 1229                             		.loc 1 1757 0
1758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t ui8EnergyLoadType;    /* Valore del campo "Energy Load Type" nella tabella energetica cor
1759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t ui8LoadTablePosition; /* Valore del campo "Load Table Position" nella tabella energetica 
1760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t ui8TableWLen;         /* Dimensione (word) della tabella energetica corrente */
1761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t ui8Result;
1762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   sLoadRegister_t sLoadRegister;
1763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   static uint8_t ui8IdxInfoBuffer = 0; /*Indice identificativo del carico esterno (Motore) */
1765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if CHECK_TABLE
1767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (psEMDataStruct == NULL)
 1230                             		.loc 1 1767 0
 1231 0000 61 01                   		cmp	#0, r1
 1232 0002 3A A6 00                		beq	.L128
1757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 1233                             		.loc 1 1757 0
 1234 0005 7E A7                   		push.l	r7
 1235                             	.LCFI7:
 1236 0007 71 00 E4                		add	#-28, r0
 1237                             	.LCFI8:
1768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	/*lint -e64*/
1770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return S_FALSE_PLAT;
1771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /*lint +e64*/
1772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Recupera la dimensione della tabella energetica corrente */
1776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui8TableWLen = psEMDataStruct->DataLenght;
 1238                             		.loc 1 1776 0
 1239 000a 89 1C                   		mov.B	5[r1], r4
1777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if CHECK_TABLE
1779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Verifica la dimensione minima della tabella */
1780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui8TableWLen < EM_DATA_HEADER_COMMON_WLEN)
 1240                             		.loc 1 1780 0
 1241 000c 5B 47                   		movu.B	r4, r7
 1242 000e 61 17                   		cmp	#1, r7
 1243 0010 24 05 38 99 00          		bleu	.L131
1781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* Dimensione non corretta della tabella corrente */
1783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /*lint -e64*/
1784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return S_FALSE_PLAT;
1785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /*lint +e64*/
1786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /*
1790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    * Usa la tabella per registrare i carichi
1791:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    */
1792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1793:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Recupera il campo "Load Table Position" nella tabella energetica corrente */
1794:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui8LoadTablePosition = psEMDataStruct->Data[EM_DATA_LOAD_TYPE_POSITION];
 1244                             		.loc 1 1794 0
 1245 0015 EC 17                   		mov.L	[r1], r7
 1246 0017 88 79                   		mov.B	1[r7], r1
1795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui8LoadTablePosition != LOAD_STS_ALWAYS_ON)
 1247                             		.loc 1 1795 0
 1248 0019 5B 1E                   		movu.B	r1, r14
 1249 001b 75 5E FF                		cmp	#0xff, r14
 1250 001e 20 0C                   		beq	.L120
1796:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1797:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     sLoadRegister.pui8Status                  = &LoadsStatus[ui8LoadTablePosition];
 1251                             		.loc 1 1797 0
 1252 0020 70 EE 00 00 00 00       		add	#_LoadsStatus, r14
 1253 0026 E7 0E 02                		mov.L	r14, 8[r0]
 1254 0029 0D                      		bra	.L121
 1255                             	.L120:
1798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   else
1800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	/*lint -epp*/
1802:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     sLoadRegister.pui8Status                  = NULL;
 1256                             		.loc 1 1802 0
 1257 002a 3E 02 00                		mov.L	#0, 8[r0]
 1258 002d 03                      		.balign 2,3,3
 1259                             	.L121:
1803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /*lint +epp*/
1804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Recupera il campo "Energy Load Type" nella tabella energetica corrente */
1807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui8EnergyLoadType = psEMDataStruct->Data[EM_DATA_ENERGY_LOAD_TYPE];
1808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /*lint -e64*/
1809:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /*Questo messaggio puÃ² essere disabilitato in quanto in questo caso non Ã¨ violata la regola MIS
1810:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    * La regola 29 (5.4 in MISRA-C:2004)recita:
1811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    * "Where the type definition is made in a header file and that header file is included in multip
1812:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    * source files, this rule is not violated."
1813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****    */
1814:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   sLoadRegister.eType = ui8EnergyLoadType;
 1260                             		.loc 1 1814 0
 1261 002e 58 7E                   		movu.B	[r7], r14
 1262 0030 E7 0E 03                		mov.L	r14, 12[r0]
1815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /*lint +e64*/
1816:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Registra il carico */
1818:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   switch (ui8EnergyLoadType)
 1263                             		.loc 1 1818 0
 1264 0033 61 2E                   		cmp	#2, r14
 1265 0035 20 2D                   		beq	.L123
 1266 0037 61 3E                   		cmp	#3, r14
 1267 0039 20 53                   		beq	.L124
 1268 003b 61 1E                   		cmp	#1, r14
 1269 003d 21 6E                   		bne	.L131
1819:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1820:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     case RESISTOR:
1821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #if CHECK_TABLE
1822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* Verifica la dimensione minima di una tabella Resistive */
1823:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (ui8TableWLen >= EM_DATA_RESISTIVE_WLEN)
 1270                             		.loc 1 1823 0
 1271 003f 5B 44                   		movu.B	r4, r4
 1272 0041 61 34                   		cmp	#3, r4
 1273 0043 25 55                   		bleu	.L126
1824:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #endif
1825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1826:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Registra un carico Resistive */
1827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #if (CONFIG_RES_CALIBRATION_ENABLE == 1)
1828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.params.res.pui8Calib    = EM_LoadResCalib(ui8LoadTablePosition, psResCalibDat
 1274                             		.loc 1 1828 0
 1275 0045 F8 02 00 00 00 00       		mov.L	#_resCalTab, [r0]
 1276 004b 66 24                   		mov	#2, r4
 1277 004d 05 00 00 00             		bsr	_EM_LoadResCalib
 1278 0051 A1 81                   		mov.L	r1, 24[r0]
1829:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #else
1830:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.params.res.pui8Calib    = NULL;
1831:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****        #endif
1832:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.ui8Mask                 = 0x0F;                                              
 1279                             		.loc 1 1832 0
 1280 0053 3C 04 0F                		mov.B	#15, 4[r0]
1833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.params.res.pui16GMant   = (uint16_t*)&(psEMDataStruct->Data[EM_DATA_RESISTIVE
 1281                             		.loc 1 1833 0
 1282 0056 71 7E 04                		add	#4, r7, r14
 1283 0059 E7 0E 04                		mov.L	r14, 16[r0]
1834:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.params.res.pi8Gexp      = (int8_t*)&(psEMDataStruct->Data[EM_DATA_RESISTIVE_E
 1284                             		.loc 1 1834 0
 1285 005c 62 67                   		add	#6, r7
 1286 005e A1 0F                   		mov.L	r7, 20[r0]
 1287 0060 2E 38                   		bra	.L126
 1288                             	.L123:
1835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1836:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
1837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(CONFIG_LIB_EXTERNAL_BOARD_SUPPORT)
1838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     case MOTOR:
1839:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* Registra i carichi Motor associati a EMSInfoBuffer[ui8IdxInfoBuffer]  */
1840:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1841:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       sLoadRegister.ui8Mask                   = 0x0F;                                              
 1289                             		.loc 1 1841 0
 1290 0062 3C 04 0F                		mov.B	#15, 4[r0]
1842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       sLoadRegister.params.mot.pui16PVal      = &EMSInfoBuffer[ui8IdxInfoBuffer].ui16PVal;
 1291                             		.loc 1 1842 0
 1292 0065 FB 72 00 00 00 00       		mov.L	#_ui8IdxInfoBuffer.9762, r7
 1293 006b CC 7E                   		mov.B	[r7], r14
 1294 006d 5B E4                   		movu.B	r14, r4
 1295 006f FD C3 43                		shll	#3, r4, r3
 1296 0072 70 32 00 00 00 00       		add	#_EMSInfoBuffer, r3, r2
 1297 0078 A1 02                   		mov.L	r2, 16[r0]
1843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       sLoadRegister.params.mot.pui32EVal      = &EMSInfoBuffer[ui8IdxInfoBuffer].ui32EVal;
 1298                             		.loc 1 1843 0
 1299 007a 70 33 00 00 00 00       		add	#_EMSInfoBuffer+4, r3
 1300 0080 A1 0B                   		mov.L	r3, 20[r0]
1844:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (ui8IdxInfoBuffer < CONFIG_EMS_MLOAD_ITEMS_MAX )
 1301                             		.loc 1 1844 0
 1302 0082 61 14                   		cmp	#1, r4
 1303 0084 24 14                   		bgtu	.L126
1845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1846:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     	  ui8IdxInfoBuffer++;
 1304                             		.loc 1 1846 0
 1305 0086 62 1E                   		add	#1, r14
 1306 0088 C3 7E                   		mov.B	r14, [r7]
 1307 008a 2E 0E                   		bra	.L126
 1308                             	.L124:
1847:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1848:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       else
1849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1850:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     	  /*Do nothing*/
1851:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1852:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
1854:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif /*CONFIG_LIB_EXTERNAL_BOARD_SUPPORT*/
1855:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     case TABLEP:
1856:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #if CHECK_TABLE
1857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* Verifica la dimensione minima di una tabella TABLE */
1858:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       if (ui8TableWLen >= EM_DATA_HEADER_COMMON_WLEN)
1859:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****      #endif
1860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       {
1861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         /* Registra un carico Table */
1862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.ui8Mask                 = 0x0F;                                              
 1309                             		.loc 1 1862 0
 1310 008c 3C 04 0F                		mov.B	#15, 4[r0]
1863:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.params.tab.pui8Table    = &(psEMDataStruct->Data[2 * EM_DATA_HEADER_COMMON_WL
 1311                             		.loc 1 1863 0
 1312 008f 62 47                   		add	#4, r7
 1313 0091 A1 07                   		mov.L	r7, 16[r0]
1864:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****         sLoadRegister.params.tab.ui8TableLen  = (ui8TableWLen - EM_DATA_HEADER_COMMON_WLEN);
 1314                             		.loc 1 1864 0
 1315 0093 60 24                   		sub	#2, r4
 1316 0095 85 04                   		mov.B	r4, 20[r0]
 1317 0097 03                      		.balign 2,3,1
 1318                             	.L126:
1865:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       }
1866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
1867:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1868:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     default:
1869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /*lint -e64*/
1870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       return S_FALSE_PLAT;
1871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /*lint +e64*/
1872:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /*    break;*/
1873:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1874:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   ui8Result = PowerMeter_LoadRegister(&sLoadRegister);
 1319                             		.loc 1 1874 0
 1320 0098 66 41                   		mov.L	#4, r1
 1321 009a 4B 01                   		add	r0, r1
 1322 009c 05 00 00 00             		bsr	_PowerMeter_LoadRegister
1770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return S_FALSE_PLAT;
 1323                             		.loc 1 1770 0
 1324 00a0 76 21 FF 00             		and #0xff, r1
 1325 00a4 FC DB 11                		scne.L	r1
 1326 00a7 0F                      		bra	.L119
 1327                             	.L128:
 1328                             	.LCFI9:
 1329 00a8 66 11                   		mov.L	#1, r1
1875:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1876:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #if CHECK_TABLE
1877:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (ui8Result != EMS_E_OK)
1878:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1879:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* PowerMeter_LoadRegister: errore */
1880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 	/*lint -e64*/
1881:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return S_FALSE_PLAT;
1882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /*lint -e64*/
1883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****  #endif
1885:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1886:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   return EMS_E_OK;
1887:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 1330                             		.loc 1 1887 0
 1331 00aa 02                      		rts
 1332                             	.L131:
 1333                             	.LCFI10:
1870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       return S_FALSE_PLAT;
 1334                             		.loc 1 1870 0
 1335 00ab 66 11                   		mov.L	#1, r1
 1336 00ad 03                      		.balign 2,3,2
 1337                             	.L119:
 1338                             		.loc 1 1887 0
 1339 00ae 3F 77 08                		rtsd	#32, r7-r7
 1340                             	.LFE30:
 1342 00b1 03                      		.section	.text.EM_LoadConfigRead,"ax",@progbits
 1343                             		.global	_EM_LoadConfigRead
 1345                             	_EM_LoadConfigRead:
 1346                             	.LFB31:
1888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1889:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** void EM_LoadConfigRead(void)
1890:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** {
 1347                             		.loc 1 1890 0
 1348 0000 6E 7B                   		pushm	r7-r11
 1349                             	.LCFI11:
 1350 0002 71 00 E8                		add	#-24, r0
 1351                             	.LCFI12:
1891:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   Loader_Struct sResCalibDataStruct = {0, 0};     /* Struct containing the Indesit Plant Cali-Box d
 1352                             		.loc 1 1891 0
 1353 0005 3E 04 00                		mov.L	#0, 16[r0]
 1354 0008 3D 0A 00                		mov.W	#0, 20[r0]
1892:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   Loader_Struct sOutputsMap = {0, 0};             /* Struct containing the Outputs Map */
 1355                             		.loc 1 1892 0
 1356 000b 3E 02 00                		mov.L	#0, 8[r0]
 1357 000e 3D 06 00                		mov.W	#0, 12[r0]
1893:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   Loader_Struct sEnergyDataStruct;                /* Struct containing the Energy Meter data */
1894:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint8_t       ui8IdxDisplacement;               /* Displacement (that is an index) to access the 
1895:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                                    *    0 -> Energy Load 0
1896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                                    *    1 -> Energy Load 1
1897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                                    *    ï¿½
1898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                                                    */
1899:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_USE_TABLE_PARAMD
1900:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   uint16_t TableParamD = 50; /* PLOS */
1901:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
1902:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** /* uint16_t SValveAddPower = 50; */
1903:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1904:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1906:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1907:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Inizializza il modulo Power Meter */
1908:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   PowerMeter_InitSw();
 1358                             		.loc 1 1908 0
 1359 0011 05 00 00 00             		bsr	_PowerMeter_InitSw
 1360                             	.LVL131:
1909:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1910:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Recupera gli estremi degli Algorithm Parameters */
1911:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (S_OK_PLAT != BasicLoader(SF_PTR_ENERGY_METER, ALGO_PARAMS_DISPLACEMENT, &sEnergyDataStruct))
 1361                             		.loc 1 1911 0
 1362 0015 75 41 37                		mov	#55, r1
 1363 0018 66 02                   		mov	#0, r2
 1364 001a EF 03                   		mov.L	r0, r3
 1365 001c 05 00 00 00             		bsr	_BasicLoader
 1366                             	.LVL132:
 1367 0020 76 21 FF 00             		and #0xff, r1
 1368 0024 21 46                   		bne	.L133
1912:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1913:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     return;
1914:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1916:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Inizializza i parametri di configurazione del modulo Power Meter */
1917:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   PowerMeter_InitConfig(&sEnergyDataStruct
 1369                             		.loc 1 1917 0
 1370 0026 EF 01                   		mov.L	r0, r1
 1371 0028 05 00 00 00             		bsr	_PowerMeter_InitConfig
 1372                             	.LVL133:
1918:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if EMS_USE_TABLE_PARAMD
1919:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                         , &TableParamD                       
1920:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
1921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****                        );
1922:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #if defined(CONFIG_LIB_ADC_CALIBRATION) /* NEW_CALIBRATION_LOADER */
1925:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1926:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   if (S_OK_PLAT != LIB_CAL_GetCalibData(ID_CAL_PNTR_FACTORY, &sResCalibDataStruct))
 1373                             		.loc 1 1926 0
 1374 002c 71 0B 10                		add	#16, r0, r11
 1375 002f 66 11                   		mov	#1, r1
 1376 0031 EF B2                   		mov.L	r11, r2
 1377 0033 05 00 00 00             		bsr	_LIB_CAL_GetCalibData
 1378                             	.LVL134:
1927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1928:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1930:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** #endif
1931:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1932:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Recupera gli estremi dell'Outputs Map */
1933:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     if (S_OK_PLAT != BasicLoader(SF_PTR_IO_CONFIG, DSPL_IO_OUTPUT_MAP_PM, &sOutputsMap))
 1379                             		.loc 1 1933 0
 1380 0037 71 0A 08                		add	#8, r0, r10
 1381 003a 75 41 20                		mov	#32, r1
 1382 003d 66 32                   		mov	#3, r2
 1383 003f EF A3                   		mov.L	r10, r3
 1384 0041 05 00 00 00             		bsr	_BasicLoader
 1385                             	.LVL135:
1934:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1935:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* return; */
1936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
1937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1938:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   /* Ciclo di accesso a tutte le tabelle energetiche per la registrazione dei carichi */
1939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   for (ui8IdxDisplacement = (ALGO_PARAMS_DISPLACEMENT + 1); ; ++ui8IdxDisplacement)
 1386                             		.loc 1 1939 0
 1387 0045 66 17                   		mov	#1, r7
 1388                             	.LVL136:
 1389 0047 03                      		.balign 2,3,1
 1390                             	.L136:
1940:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   {
1941:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* Recupera gli estremi della tabella energetica al displacement 'ui8IdxDisplacement' */
1942:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     if (S_OK_PLAT != BasicLoader(SF_PTR_ENERGY_METER, ui8IdxDisplacement, &sEnergyDataStruct))
 1391                             		.loc 1 1942 0
 1392 0048 5B 72                   		movu.B	r7, r2
 1393 004a 75 41 37                		mov	#55, r1
 1394 004d EF 03                   		mov.L	r0, r3
 1395 004f 05 00 00 00             		bsr	_BasicLoader
 1396                             	.LVL137:
 1397 0053 76 21 FF 00             		and #0xff, r1
 1398 0057 21 13                   		bne	.L133
1943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     {
1944:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* BasicLoader: non ci sono piï¿½ carichi oppure errore */
1945:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
1946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     }
1947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1949:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     /* Registra il carico associato alla tabella energetica */
1951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     if (S_OK_PLAT != EM_LoadRegister(&sEnergyDataStruct, &sResCalibDataStruct, &sOutputsMap))
 1399                             		.loc 1 1951 0
 1400 0059 EF 01                   		mov.L	r0, r1
 1401 005b EF B2                   		mov.L	r11, r2
 1402 005d EF A3                   		mov.L	r10, r3
 1403 005f 05 00 00 00             		bsr	_EM_LoadRegister
 1404                             	.LVL138:
 1405 0063 61 01                   		cmp	#0, r1
 1406 0065 1D                      		bne	.L133
1939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   for (ui8IdxDisplacement = (ALGO_PARAMS_DISPLACEMENT + 1); ; ++ui8IdxDisplacement)
 1407                             		.loc 1 1939 0
 1408 0066 62 17                   		add	#1, r7
 1409                             	.LVL139:
1952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     {  
1953:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       /* EM_LoadRegister: errore */
1954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****       break;
1955:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****     }
1956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1957:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1958:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c ****   }
 1410                             		.loc 1 1958 0
 1411 0068 2E E0                   		bra	.L136
 1412                             	.LVL140:
 1413                             	.L133:
1959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** 
1960:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw\PM_EnergyMeterSw.c **** }
 1414                             		.loc 1 1960 0
 1415 006a 3F 7B 0B                		rtsd	#44, r7-r11
 1416                             	.LFE31:
 1418                             		.global	_m_ui32EnergyDspOffset
 1419 006d 03                      		.section	.bss.m_ui32EnergyDspOffset,"aw",@nobits
 1420                             		.balign 4
 1423                             	_m_ui32EnergyDspOffset:
 1424 0000 00 00 00 00             		.zero	4
 1425                             		.global	_m_ui32EnergyDspK_1
 1426                             		.section	.bss.m_ui32EnergyDspK_1,"aw",@nobits
 1427                             		.balign 4
 1430                             	_m_ui32EnergyDspK_1:
 1431 0000 00 00 00 00             		.zero	4
 1432                             		.global	_m_ui32EnergyMainOffset
 1433                             		.section	.bss.m_ui32EnergyMainOffset,"aw",@nobits
 1434                             		.balign 4
 1437                             	_m_ui32EnergyMainOffset:
 1438 0000 00 00 00 00             		.zero	4
 1439                             		.global	_m_ui32EnergyMainK_1
 1440                             		.section	.bss.m_ui32EnergyMainK_1,"aw",@nobits
 1441                             		.balign 4
 1444                             	_m_ui32EnergyMainK_1:
 1445 0000 00 00 00 00             		.zero	4
 1446                             		.global	_m_ui32EnergyOffset
 1447                             		.section	.bss.m_ui32EnergyOffset,"aw",@nobits
 1448                             		.balign 4
 1451                             	_m_ui32EnergyOffset:
 1452 0000 00 00 00 00             		.zero	4
 1453                             		.global	_m_ui32EnergyRTAcc
 1454                             		.section	.bss.m_ui32EnergyRTAcc,"aw",@nobits
 1455                             		.balign 4
 1458                             	_m_ui32EnergyRTAcc:
 1459 0000 00 00 00 00             		.zero	4
 1460                             		.global	_m_ui16PowerPeriod
 1461                             		.section	.bss.m_ui16PowerPeriod,"aw",@nobits
 1462                             		.balign 2
 1465                             	_m_ui16PowerPeriod:
 1466 0000 00 00                   		.zero	2
 1467                             		.comm	_m_sVMeasAcc,12,4
 1468                             		.global	_m_ui16VrmsAvg
 1469                             		.section	.bss.m_ui16VrmsAvg,"aw",@nobits
 1470                             		.balign 2
 1473                             	_m_ui16VrmsAvg:
 1474 0000 00 00                   		.zero	2
 1475                             		.global	_m_sFlags
 1476                             		.section	.data.m_sFlags,"aw",@progbits
 1479                             	_m_sFlags:
 1480 0000 80                      		.byte	0x80
 1481                             		.global	_m_sLoadIndex
 1482                             		.section	.bss.m_sLoadIndex,"aw",@nobits
 1485                             	_m_sLoadIndex:
 1486 0000 00                      		.zero	1
 1487                             		.comm	_m_asTLoadParam,160,4
 1488                             		.comm	_m_asMLoadParam,32,4
 1489                             		.comm	_m_asRLoadParam,36,4
 1490                             		.global	_m_sAlgoParams
 1491                             		.section	.bss.m_sAlgoParams,"aw",@nobits
 1492                             		.balign 4
 1495                             	_m_sAlgoParams:
 1496 0000 00 00 00 00 00 00 00 00 		.zero	8
 1497                             		.comm	_pDSPInfoBuffer,4,4
 1498                             		.comm	_EMSInfoBuffer,16,4
 1499                             		.comm	_b_ui16EnergyCounterWhAcc,2,2
 1500                             		.comm	_b_ui32EnergyCounterWh,4,4
 1501                             		.section	.bss.m_ui32EnergyMotOld,"aw",@nobits
 1502                             		.balign 4
 1505                             	_m_ui32EnergyMotOld:
 1506 0000 00 00 00 00             		.zero	4
 1507                             		.section	.bss.ui8IdxInfoBuffer.9762,"aw",@nobits
 1510                             	_ui8IdxInfoBuffer.9762:
 1511 0000 00                      		.zero	1
 1865                             	.Letext0:
 1866                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 1867                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_EnergyMeterSw/PM_EnergyMete
 1868                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 1869                             		.file 5 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw/PM_EnergyMeterSw.h
 1870                             		.file 6 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_EnergyMeterSw/PM_EnergyMeterSwTa
 1871                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/OutputManagerEx
DEFINED SYMBOLS
                            *ABS*:00000000 PM_EnergyMeterSw.c
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:9      .text.VoltAvgMeasuresUpdate.constprop.1:00000000 _VoltAvgMeasuresUpdate.constprop.1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:13     .text.VoltAvgMeasuresUpdate.constprop.1:00000000 L0
                            *COM*:0000000c _m_sVMeasAcc
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1495   .bss.m_sAlgoParams:00000000 _m_sAlgoParams
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1473   .bss.m_ui16VrmsAvg:00000000 _m_ui16VrmsAvg
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:62     .text.EMS_GetPtrToDSPInfoBuffer:00000000 _EMS_GetPtrToDSPInfoBuffer
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:67     .text.EMS_GetPtrToDSPInfoBuffer:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1485   .bss.m_sLoadIndex:00000000 _m_sLoadIndex
                            *COM*:00000010 _EMSInfoBuffer
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:89     .text.PowerMeter_HWReset:00000000 _PowerMeter_HWReset
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:93     .text.PowerMeter_HWReset:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:100    .text.PowerMeter_InitConfig:00000000 _PowerMeter_InitConfig
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:105    .text.PowerMeter_InitConfig:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:129    .text.PowerMeter_InitSw:00000000 _PowerMeter_InitSw
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:133    .text.PowerMeter_InitSw:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1465   .bss.m_ui16PowerPeriod:00000000 _m_ui16PowerPeriod
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1479   .data.m_sFlags:00000000 _m_sFlags
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1458   .bss.m_ui32EnergyRTAcc:00000000 _m_ui32EnergyRTAcc
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1451   .bss.m_ui32EnergyOffset:00000000 _m_ui32EnergyOffset
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1444   .bss.m_ui32EnergyMainK_1:00000000 _m_ui32EnergyMainK_1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1437   .bss.m_ui32EnergyMainOffset:00000000 _m_ui32EnergyMainOffset
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1430   .bss.m_ui32EnergyDspK_1:00000000 _m_ui32EnergyDspK_1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1423   .bss.m_ui32EnergyDspOffset:00000000 _m_ui32EnergyDspOffset
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:167    .text.PowerMeter_StartCal:00000000 _PowerMeter_StartCal
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:171    .text.PowerMeter_StartCal:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:178    .text.PowerMeter_LoadRegister:00000000 _PowerMeter_LoadRegister
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:182    .text.PowerMeter_LoadRegister:00000000 L0
                            *COM*:00000024 _m_asRLoadParam
                            *COM*:00000020 _m_asMLoadParam
                            *COM*:000000a0 _m_asTLoadParam
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:392    .text.PowerMeter_StartMeasure:00000000 _PowerMeter_StartMeasure
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:397    .text.PowerMeter_StartMeasure:00000000 L0
                            *COM*:00000004 _b_ui32EnergyCounterWh
                            *COM*:00000002 _b_ui16EnergyCounterWhAcc
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:432    .text.PowerMeter_StopMeasure:00000000 _PowerMeter_StopMeasure
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:436    .text.PowerMeter_StopMeasure:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:448    .text.PowerMeter_GetInstant_I:00000000 _PowerMeter_GetInstant_I
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:453    .text.PowerMeter_GetInstant_I:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:461    .text.PowerMeter_GetInstant_V:00000000 _PowerMeter_GetInstant_V
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:466    .text.PowerMeter_GetInstant_V:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:474    .text.PowerMeter_SetNormInst_V:00000000 _PowerMeter_SetNormInst_V
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:478    .text.PowerMeter_SetNormInst_V:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:542    .text.PowerMeter_SetInstant_V:00000000 _PowerMeter_SetInstant_V
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:546    .text.PowerMeter_SetInstant_V:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:569    .text.PowerMeter_SetAbsInstant_V:00000000 _PowerMeter_SetAbsInstant_V
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:574    .text.PowerMeter_SetAbsInstant_V:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:590    .text.PowerMeter_GetInstant_P:00000000 _PowerMeter_GetInstant_P
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:595    .text.PowerMeter_GetInstant_P:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:606    .text.PowerMeter_GetAvgLastCycle_P:00000000 _PowerMeter_GetAvgLastCycle_P
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:611    .text.PowerMeter_GetAvgLastCycle_P:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:622    .text.PowerMeter_GetAvgLastCycle_P_100mW:00000000 _PowerMeter_GetAvgLastCycle_P_100mW
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:627    .text.PowerMeter_GetAvgLastCycle_P_100mW:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:640    .text.PowerMeter_Get_I_RMS:00000000 _PowerMeter_Get_I_RMS
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:645    .text.PowerMeter_Get_I_RMS:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:653    .text.PowerMeter_Get_I_RMS_100mA:00000000 _PowerMeter_Get_I_RMS_100mA
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:658    .text.PowerMeter_Get_I_RMS_100mA:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:666    .text.PowerMeter_Get_V_RMS:00000000 _PowerMeter_Get_V_RMS
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:671    .text.PowerMeter_Get_V_RMS:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:682    .text.PowerMeter_Get_V_RMS_100mV:00000000 _PowerMeter_Get_V_RMS_100mV
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:687    .text.PowerMeter_Get_V_RMS_100mV:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:700    .text.PowerMeter_GetAvgSinceStart_E_Wh:00000000 _PowerMeter_GetAvgSinceStart_E_Wh
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:705    .text.PowerMeter_GetAvgSinceStart_E_Wh:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:716    .text.PowerMeter_Accum:00000000 _PowerMeter_Accum
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:719    .text.PowerMeter_Accum:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1505   .bss.m_ui32EnergyMotOld:00000000 _m_ui32EnergyMotOld
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1089   .text.PowerMeter_StartEnergyCount:00000000 _PowerMeter_StartEnergyCount
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1094   .text.PowerMeter_StartEnergyCount:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1102   .text.PowerMeter_GetEnergyCount:00000000 _PowerMeter_GetEnergyCount
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1107   .text.PowerMeter_GetEnergyCount:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1115   .text.PowerMeter_StopEnergyCount:00000000 _PowerMeter_StopEnergyCount
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1120   .text.PowerMeter_StopEnergyCount:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1128   .text.EM_LoadResCalib:00000000 _EM_LoadResCalib
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1132   .text.EM_LoadResCalib:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1227   .text.EM_LoadRegister:00000000 _EM_LoadRegister
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1231   .text.EM_LoadRegister:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1510   .bss.ui8IdxInfoBuffer.9762:00000000 _ui8IdxInfoBuffer.9762
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1345   .text.EM_LoadConfigRead:00000000 _EM_LoadConfigRead
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1348   .text.EM_LoadConfigRead:00000000 L0
                            *COM*:00000004 _pDSPInfoBuffer
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1513   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:10     .text.VoltAvgMeasuresUpdate.constprop.1:00000000 .LFB33
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:63     .text.EMS_GetPtrToDSPInfoBuffer:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:90     .text.PowerMeter_HWReset:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:101    .text.PowerMeter_InitConfig:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:130    .text.PowerMeter_InitSw:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:168    .text.PowerMeter_StartCal:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:179    .text.PowerMeter_LoadRegister:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:393    .text.PowerMeter_StartMeasure:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:433    .text.PowerMeter_StopMeasure:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:449    .text.PowerMeter_GetInstant_I:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:462    .text.PowerMeter_GetInstant_V:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:475    .text.PowerMeter_SetNormInst_V:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:543    .text.PowerMeter_SetInstant_V:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:570    .text.PowerMeter_SetAbsInstant_V:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:591    .text.PowerMeter_GetInstant_P:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:607    .text.PowerMeter_GetAvgLastCycle_P:00000000 .LFB14
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:623    .text.PowerMeter_GetAvgLastCycle_P_100mW:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:641    .text.PowerMeter_Get_I_RMS:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:654    .text.PowerMeter_Get_I_RMS_100mA:00000000 .LFB17
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:667    .text.PowerMeter_Get_V_RMS:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:683    .text.PowerMeter_Get_V_RMS_100mV:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:701    .text.PowerMeter_GetAvgSinceStart_E_Wh:00000000 .LFB20
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:717    .text.PowerMeter_Accum:00000000 .LFB21
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1090   .text.PowerMeter_StartEnergyCount:00000000 .LFB22
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1103   .text.PowerMeter_GetEnergyCount:00000000 .LFB23
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1116   .text.PowerMeter_StopEnergyCount:00000000 .LFB24
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1129   .text.EM_LoadResCalib:00000000 .LFB29
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1228   .text.EM_LoadRegister:00000000 .LFB30
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1346   .text.EM_LoadConfigRead:00000000 .LFB31
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4040   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6377   .debug_str:00000367 .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6601   .debug_str:00000a4c .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6187   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6249   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6549   .debug_str:000008d9 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6397   .debug_str:00000436 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6507   .debug_str:0000079e .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6545   .debug_str:000008c3 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6329   .debug_str:000001f8 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6571   .debug_str:00000978 .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6307   .debug_str:00000168 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6341   .debug_str:00000255 .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6345   .debug_str:00000273 .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6585   .debug_str:000009e0 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6505   .debug_str:00000796 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6283   .debug_str:000000db .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6311   .debug_str:00000182 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6605   .debug_str:00000ac9 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6579   .debug_str:000009c1 .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6313   .debug_str:00000190 .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6303   .debug_str:0000015a .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6305   .debug_str:00000161 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6607   .debug_str:00000ad1 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6437   .debug_str:0000057d .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6611   .debug_str:00000ae0 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6449   .debug_str:000005c4 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6513   .debug_str:000007c4 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6277   .debug_str:000000b9 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6503   .debug_str:00000787 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6335   .debug_str:0000022d .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6321   .debug_str:000001c3 .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6445   .debug_str:000005a8 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6343   .debug_str:0000025f .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6287   .debug_str:00000100 .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6369   .debug_str:0000032e .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6381   .debug_str:0000039d .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6433   .debug_str:00000553 .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6573   .debug_str:0000098b .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6359   .debug_str:000002e3 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6557   .debug_str:00000909 .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6453   .debug_str:000005e4 .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6361   .debug_str:000002f3 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6527   .debug_str:00000816 .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6591   .debug_str:00000a08 .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6521   .debug_str:000007e9 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6439   .debug_str:00000588 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6443   .debug_str:0000059e .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6473   .debug_str:00000692 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6609   .debug_str:00000ad6 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6403   .debug_str:00000472 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6415   .debug_str:000004bc .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6565   .debug_str:00000948 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6413   .debug_str:000004b1 .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6543   .debug_str:000008bd .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6551   .debug_str:000008e6 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6279   .debug_str:000000c2 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6511   .debug_str:000007b8 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6637   .debug_str:00000b9d .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6315   .debug_str:0000019c .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6615   .debug_str:00000b02 .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6641   .debug_str:00000bb4 .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6371   .debug_str:00000338 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6533   .debug_str:0000084d .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6273   .debug_str:0000009c .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6517   .debug_str:000007d3 .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6455   .debug_str:000005ea .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6333   .debug_str:00000217 .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6281   .debug_str:000000d2 .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6539   .debug_str:00000893 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6291   .debug_str:00000118 .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6353   .debug_str:000002b6 .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6423   .debug_str:000004fd .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6301   .debug_str:00000150 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6617   .debug_str:00000b11 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6491   .debug_str:0000070f .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6355   .debug_str:000002c1 .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6483   .debug_str:000006dd .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6319   .debug_str:000001b9 .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6639   .debug_str:00000bad .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6257   .debug_str:00000026 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6441   .debug_str:00000590 .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6581   .debug_str:000009c8 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6421   .debug_str:000004ef .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6251   .debug_str:00000000 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6299   .debug_str:00000148 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6379   .debug_str:0000038d .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6427   .debug_str:0000051d .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6407   .debug_str:0000048c .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6487   .debug_str:000006fe .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6515   .debug_str:000007cd .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6293   .debug_str:00000123 .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6261   .debug_str:00000040 .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6349   .debug_str:0000028f .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6417   .debug_str:000004c8 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6499   .debug_str:00000764 .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6633   .debug_str:00000b80 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6389   .debug_str:000003ec .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:57     .text.VoltAvgMeasuresUpdate.constprop.1:00000054 .LFE33
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4840   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4853   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6385   .debug_str:000003bf .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:84     .text.EMS_GetPtrToDSPInfoBuffer:0000001e .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6375   .debug_str:0000035e .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4865   .debug_loc:0000003f .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6387   .debug_str:000003d9 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:95     .text.PowerMeter_HWReset:00000003 .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6495   .debug_str:00000736 .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:124    .text.PowerMeter_InitConfig:00000024 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6541   .debug_str:000008a6 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4879   .debug_loc:00000060 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4893   .debug_loc:00000081 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6563   .debug_str:00000936 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:162    .text.PowerMeter_InitSw:00000054 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6625   .debug_str:00000b41 .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:173    .text.PowerMeter_StartCal:00000003 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6497   .debug_str:0000074c .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:387    .text.PowerMeter_LoadRegister:0000016b .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4911   .debug_loc:000000ad .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6559   .debug_str:00000912 .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4924   .debug_loc:000000cd .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6339   .debug_str:0000024b .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:4975   .debug_loc:00000144 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6509   .debug_str:000007ac .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5108   .debug_loc:00000202 .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6363   .debug_str:000002fa .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5157   .debug_loc:0000025e .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:349    .text.PowerMeter_LoadRegister:00000137 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6271   .debug_str:00000084 .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:427    .text.PowerMeter_StartMeasure:0000002d .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6481   .debug_str:000006d6 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5193   .debug_loc:0000029d .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6365   .debug_str:00000303 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6451   .debug_str:000005cd .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:443    .text.PowerMeter_StopMeasure:0000000f .LFE7
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6467   .debug_str:00000653 .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:456    .text.PowerMeter_GetInstant_I:00000003 .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6265   .debug_str:00000063 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5207   .debug_loc:000002be .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6479   .debug_str:000006be .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:469    .text.PowerMeter_GetInstant_V:00000003 .LFE9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6531   .debug_str:00000846 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5221   .debug_loc:000002df .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6623   .debug_str:00000b30 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:537    .text.PowerMeter_SetNormInst_V:00000051 .LFE12
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5235   .debug_loc:00000300 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5248   .debug_loc:00000320 .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:514    .text.PowerMeter_SetNormInst_V:0000003f .LBB8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:533    .text.PowerMeter_SetNormInst_V:0000004c .LBE8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:515    .text.PowerMeter_SetNormInst_V:0000003f .LBB9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:532    .text.PowerMeter_SetNormInst_V:0000004c .LBE9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:519    .text.PowerMeter_SetNormInst_V:00000043 .LBB10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:531    .text.PowerMeter_SetNormInst_V:0000004c .LBE10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:518    .text.PowerMeter_SetNormInst_V:00000043 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6391   .debug_str:000003f9 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:564    .text.PowerMeter_SetInstant_V:0000001e .LFE11
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5291   .debug_loc:0000037a .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:563    .text.PowerMeter_SetInstant_V:0000001e .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6431   .debug_str:00000538 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:585    .text.PowerMeter_SetAbsInstant_V:00000015 .LFE10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6589   .debug_str:000009fd .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5358   .debug_loc:000003f5 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6447   .debug_str:000005bc .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5372   .debug_loc:00000416 .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:584    .text.PowerMeter_SetAbsInstant_V:00000015 .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6469   .debug_str:0000066b .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:601    .text.PowerMeter_GetInstant_P:0000000b .LFE13
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6525   .debug_str:0000080f .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5495   .debug_loc:000004c3 .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6399   .debug_str:00000448 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:617    .text.PowerMeter_GetAvgLastCycle_P:0000000b .LFE14
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5509   .debug_loc:000004e4 .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6603   .debug_str:00000aa6 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:635    .text.PowerMeter_GetAvgLastCycle_P_100mW:0000000f .LFE15
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5523   .debug_loc:00000505 .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6561   .debug_str:00000921 .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:648    .text.PowerMeter_Get_I_RMS:00000003 .LFE16
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5537   .debug_loc:00000526 .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6567   .debug_str:00000950 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:661    .text.PowerMeter_Get_I_RMS_100mA:00000003 .LFE17
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6297   .debug_str:00000141 .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5551   .debug_loc:00000547 .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6577   .debug_str:000009ac .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:677    .text.PowerMeter_Get_V_RMS:0000000b .LFE18
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5565   .debug_loc:00000568 .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6523   .debug_str:000007f4 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:695    .text.PowerMeter_Get_V_RMS_100mV:0000000f .LFE19
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6325   .debug_str:000001e6 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5579   .debug_loc:00000589 .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6529   .debug_str:00000825 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:711    .text.PowerMeter_GetAvgSinceStart_E_Wh:0000000b .LFE20
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6619   .debug_str:00000b1e .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5593   .debug_loc:000005aa .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6583   .debug_str:000009cf .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6425   .debug_str:0000050b .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6599   .debug_str:00000a3b .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6597   .debug_str:00000a30 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6547   .debug_str:000008c8 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1084   .text.PowerMeter_Accum:00000269 .LFE21
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5607   .debug_loc:000005cb .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6621   .debug_str:00000b27 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5625   .debug_loc:000005f7 .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6575   .debug_str:00000999 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5656   .debug_loc:0000064c .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6405   .debug_str:0000047c .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5671   .debug_loc:00000675 .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6357   .debug_str:000002cd .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6537   .debug_str:0000087b .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5690   .debug_loc:000006a9 .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6459   .debug_str:00000610 .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5706   .debug_loc:000006d3 .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5727   .debug_loc:00000709 .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6555   .debug_str:000008fb .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5734   .debug_loc:0000071c .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6337   .debug_str:00000236 .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5760   .debug_loc:00000761 .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6285   .debug_str:000000f2 .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5796   .debug_loc:00000792 .LLST35
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:763    .text.PowerMeter_Accum:0000004e .LBB16
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:773    .text.PowerMeter_Accum:0000005d .LBE16
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:984    .text.PowerMeter_Accum:000001b5 .LBB18
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1019   .text.PowerMeter_Accum:000001f6 .LBE18
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5824   .debug_loc:000007d6 .LLST36
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:985    .text.PowerMeter_Accum:000001b5 .LBB19
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1018   .text.PowerMeter_Accum:000001f6 .LBE19
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5841   .debug_loc:000007fd .LLST37
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:760    .text.PowerMeter_Accum:0000004c .LVL77
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1075   .text.PowerMeter_Accum:0000025c .LVL113
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6367   .debug_str:00000312 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1097   .text.PowerMeter_StartEnergyCount:00000003 .LFE22
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6569   .debug_str:0000096b .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5880   .debug_loc:00000851 .LLST38
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6289   .debug_str:00000109 .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6351   .debug_str:0000029c .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1110   .text.PowerMeter_GetEnergyCount:00000003 .LFE23
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5894   .debug_loc:00000872 .LLST39
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6535   .debug_str:00000860 .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1123   .text.PowerMeter_StopEnergyCount:00000003 .LFE24
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5908   .debug_loc:00000893 .LLST40
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6409   .debug_str:00000495 .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1222   .text.EM_LoadResCalib:0000006b .LFE29
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5922   .debug_loc:000008b4 .LLST41
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6395   .debug_str:0000041e .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5940   .debug_loc:000008e0 .LLST42
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6485   .debug_str:000006e9 .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5954   .debug_loc:00000901 .LLST43
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6501   .debug_str:0000077a .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:5979   .debug_loc:0000093b .LLST44
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6269   .debug_str:0000007c .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6004   .debug_loc:00000975 .LLST45
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6327   .debug_str:000001ed .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6018   .debug_loc:00000996 .LLST46
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6593   .debug_str:00000a10 .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6025   .debug_loc:000009a9 .LLST47
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6323   .debug_str:000001d6 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1340   .text.EM_LoadRegister:000000b1 .LFE30
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6060   .debug_loc:000009ed .LLST48
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6595   .debug_str:00000a21 .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6429   .debug_str:00000526 .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6383   .debug_str:000003aa .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6393   .debug_str:00000411 .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6631   .debug_str:00000b76 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6461   .debug_str:00000624 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6295   .debug_str:00000130 .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6463   .debug_str:00000632 .LASF195
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1416   .text.EM_LoadConfigRead:0000006d .LFE31
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6088   .debug_loc:00000a31 .LLST49
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6613   .debug_str:00000aee .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6253   .debug_str:0000000c .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6309   .debug_str:00000170 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6347   .debug_str:0000027c .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6106   .debug_loc:00000a5d .LLST50
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1360   .text.EM_LoadConfigRead:00000015 .LVL131
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1366   .text.EM_LoadConfigRead:00000020 .LVL132
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1372   .text.EM_LoadConfigRead:0000002c .LVL133
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1378   .text.EM_LoadConfigRead:00000037 .LVL134
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1385   .text.EM_LoadConfigRead:00000045 .LVL135
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1396   .text.EM_LoadConfigRead:00000053 .LVL137
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1404   .text.EM_LoadConfigRead:00000063 .LVL138
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6475   .debug_str:0000069c .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6457   .debug_str:000005fa .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6493   .debug_str:0000071d .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6627   .debug_str:00000b55 .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6259   .debug_str:00000034 .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6255   .debug_str:00000018 .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6317   .debug_str:000001aa .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6275   .debug_str:000000ab .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6471   .debug_str:00000683 .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6465   .debug_str:00000644 .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6477   .debug_str:000006af .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6401   .debug_str:00000465 .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6519   .debug_str:000007e0 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6553   .debug_str:000008ed .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6411   .debug_str:000004a5 .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6635   .debug_str:00000b8b .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6419   .debug_str:000004dd .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6267   .debug_str:00000069 .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6587   .debug_str:000009e9 .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6629   .debug_str:00000b5f .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6373   .debug_str:0000034b .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6331   .debug_str:00000201 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6263   .debug_str:00000059 .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6489   .debug_str:00000704 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6643   .debug_str:00000bc4 .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:6435   .debug_str:00000568 .LASF196
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:14     .text.VoltAvgMeasuresUpdate.constprop.1:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:15     .text.VoltAvgMeasuresUpdate.constprop.1:00000002 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:33     .text.VoltAvgMeasuresUpdate.constprop.1:0000001a .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:65     .text.EMS_GetPtrToDSPInfoBuffer:00000000 .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:76     .text.EMS_GetPtrToDSPInfoBuffer:00000014 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:103    .text.PowerMeter_InitConfig:00000000 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:122    .text.PowerMeter_InitConfig:00000023 .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:108    .text.PowerMeter_InitConfig:0000000c .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:114    .text.PowerMeter_InitConfig:00000019 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:119    .text.PowerMeter_InitConfig:00000021 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:183    .text.PowerMeter_LoadRegister:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:181    .text.PowerMeter_LoadRegister:00000000 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:187    .text.PowerMeter_LoadRegister:00000006 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:224    .text.PowerMeter_LoadRegister:00000053 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:297    .text.PowerMeter_LoadRegister:000000cf .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:330    .text.PowerMeter_LoadRegister:0000010f .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:335    .text.PowerMeter_LoadRegister:00000118 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:364    .text.PowerMeter_LoadRegister:00000155 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:370    .text.PowerMeter_LoadRegister:0000015f .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:379    .text.PowerMeter_LoadRegister:00000165 .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:246    .text.PowerMeter_LoadRegister:00000077 .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:261    .text.PowerMeter_LoadRegister:0000008e .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:264    .text.PowerMeter_LoadRegister:00000096 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:267    .text.PowerMeter_LoadRegister:0000009a .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:273    .text.PowerMeter_LoadRegister:000000a4 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:277    .text.PowerMeter_LoadRegister:000000ab .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:284    .text.PowerMeter_LoadRegister:000000b6 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:234    .text.PowerMeter_LoadRegister:00000063 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:282    .text.PowerMeter_LoadRegister:000000b3 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:241    .text.PowerMeter_LoadRegister:00000071 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:395    .text.PowerMeter_StartMeasure:00000000 .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:425    .text.PowerMeter_StartMeasure:0000002c .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:451    .text.PowerMeter_GetInstant_I:00000000 .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:454    .text.PowerMeter_GetInstant_I:00000002 .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:464    .text.PowerMeter_GetInstant_V:00000000 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:467    .text.PowerMeter_GetInstant_V:00000002 .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:479    .text.PowerMeter_SetNormInst_V:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:477    .text.PowerMeter_SetNormInst_V:00000000 .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:499    .text.PowerMeter_SetNormInst_V:0000002e .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:502    .text.PowerMeter_SetNormInst_V:00000030 .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:505    .text.PowerMeter_SetNormInst_V:00000034 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:508    .text.PowerMeter_SetNormInst_V:00000038 .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:527    .text.PowerMeter_SetNormInst_V:0000004b .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:545    .text.PowerMeter_SetInstant_V:00000000 .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:547    .text.PowerMeter_SetInstant_V:00000002 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:551    .text.PowerMeter_SetInstant_V:0000000e .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:556    .text.PowerMeter_SetInstant_V:00000014 .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:558    .text.PowerMeter_SetInstant_V:00000016 .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:561    .text.PowerMeter_SetInstant_V:0000001a .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:572    .text.PowerMeter_SetAbsInstant_V:00000000 .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:575    .text.PowerMeter_SetAbsInstant_V:00000002 .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:578    .text.PowerMeter_SetAbsInstant_V:0000000a .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:580    .text.PowerMeter_SetAbsInstant_V:0000000c .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:593    .text.PowerMeter_GetInstant_P:00000000 .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:599    .text.PowerMeter_GetInstant_P:0000000a .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:609    .text.PowerMeter_GetAvgLastCycle_P:00000000 .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:615    .text.PowerMeter_GetAvgLastCycle_P:0000000a .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:625    .text.PowerMeter_GetAvgLastCycle_P_100mW:00000000 .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:633    .text.PowerMeter_GetAvgLastCycle_P_100mW:0000000e .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:643    .text.PowerMeter_Get_I_RMS:00000000 .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:646    .text.PowerMeter_Get_I_RMS:00000002 .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:656    .text.PowerMeter_Get_I_RMS_100mA:00000000 .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:659    .text.PowerMeter_Get_I_RMS_100mA:00000002 .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:669    .text.PowerMeter_Get_V_RMS:00000000 .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:675    .text.PowerMeter_Get_V_RMS:0000000a .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:685    .text.PowerMeter_Get_V_RMS_100mV:00000000 .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:693    .text.PowerMeter_Get_V_RMS_100mV:0000000e .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:703    .text.PowerMeter_GetAvgSinceStart_E_Wh:00000000 .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:709    .text.PowerMeter_GetAvgSinceStart_E_Wh:0000000a .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:720    .text.PowerMeter_Accum:00000002 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:722    .text.PowerMeter_Accum:00000004 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:787    .text.PowerMeter_Accum:00000072 .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:821    .text.PowerMeter_Accum:000000aa .LVL82
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:825    .text.PowerMeter_Accum:000000ae .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:858    .text.PowerMeter_Accum:000000e4 .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:862    .text.PowerMeter_Accum:000000ec .LVL89
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:898    .text.PowerMeter_Accum:00000122 .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:910    .text.PowerMeter_Accum:00000137 .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1036   .text.PowerMeter_Accum:00000211 .LVL108
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1054   .text.PowerMeter_Accum:00000233 .LVL110
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1079   .text.PowerMeter_Accum:00000264 .LVL114
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:749    .text.PowerMeter_Accum:00000044 .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:751    .text.PowerMeter_Accum:00000045 .LVL75
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:757    .text.PowerMeter_Accum:00000048 .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:823    .text.PowerMeter_Accum:000000ac .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:762    .text.PowerMeter_Accum:0000004e .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:938    .text.PowerMeter_Accum:00000177 .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1063   .text.PowerMeter_Accum:00000244 .LVL112
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:723    .text.PowerMeter_Accum:00000004 .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:914    .text.PowerMeter_Accum:00000140 .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:904    .text.PowerMeter_Accum:0000012c .LVL94
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:932    .text.PowerMeter_Accum:00000167 .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:983    .text.PowerMeter_Accum:000001b5 .LVL103
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:907    .text.PowerMeter_Accum:00000134 .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:802    .text.PowerMeter_Accum:00000091 .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:839    .text.PowerMeter_Accum:000000cb .LVL85
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:878    .text.PowerMeter_Accum:0000010c .LVL90
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:882    .text.PowerMeter_Accum:0000010f .LVL91
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1006   .text.PowerMeter_Accum:000001df .LVL105
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:993    .text.PowerMeter_Accum:000001cb .LVL104
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1014   .text.PowerMeter_Accum:000001ee .LVL106
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1016   .text.PowerMeter_Accum:000001f4 .LVL107
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1092   .text.PowerMeter_StartEnergyCount:00000000 .LVL115
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1095   .text.PowerMeter_StartEnergyCount:00000002 .LVL116
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1105   .text.PowerMeter_GetEnergyCount:00000000 .LVL117
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1108   .text.PowerMeter_GetEnergyCount:00000002 .LVL118
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1118   .text.PowerMeter_StopEnergyCount:00000000 .LVL119
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1121   .text.PowerMeter_StopEnergyCount:00000002 .LVL120
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1133   .text.EM_LoadResCalib:00000002 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1135   .text.EM_LoadResCalib:00000004 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1131   .text.EM_LoadResCalib:00000000 .LVL121
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1153   .text.EM_LoadResCalib:0000001b .LVL123
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1158   .text.EM_LoadResCalib:00000021 .LVL124
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1200   .text.EM_LoadResCalib:00000058 .LVL128
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1208   .text.EM_LoadResCalib:0000005f .LVL129
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1171   .text.EM_LoadResCalib:00000036 .LVL125
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1215   .text.EM_LoadResCalib:00000065 .LVL130
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1178   .text.EM_LoadResCalib:0000003e .LVL126
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1140   .text.EM_LoadResCalib:0000000b .LVL122
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1235   .text.EM_LoadRegister:00000007 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1237   .text.EM_LoadRegister:0000000a .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1328   .text.EM_LoadRegister:000000a8 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1333   .text.EM_LoadRegister:000000ab .LCFI10
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1349   .text.EM_LoadConfigRead:00000002 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1351   .text.EM_LoadConfigRead:00000005 .LCFI12
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1388   .text.EM_LoadConfigRead:00000047 .LVL136
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1412   .text.EM_LoadConfigRead:0000006a .LVL140
C:\Users\Andrea\AppData\Local\Temp\ccQrvEvP.s:1873   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
___floatunsisf
___divsf3
___fixunssfsi
_TableInit
_TablePower
_LoadsStatus
_resCalTab
_BasicLoader
_LIB_CAL_GetCalibData
