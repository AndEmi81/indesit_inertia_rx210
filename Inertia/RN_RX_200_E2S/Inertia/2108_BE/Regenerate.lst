   1                             		.file	"Regenerate.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.RGN_checkCondReg,"ax",@progbits
   5                             		.global	_RGN_checkCondReg
   7                             	_RGN_checkCondReg:
   8                             	.LFB1:
   9                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules/Regenerate.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /**
   2:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** Source File 
   3:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
   4:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \file    Regenerate.c
   5:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \ingroup Regenerate
   6:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \date    26/06/2008
   7:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \author  Valeria Catani
   8:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \version 1.0.0
   9:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** */
  10:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  11:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /*
  12:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** Copyright (c) 2004-2008, Indesit Company, IDD.
  13:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** Tutti i diritti sono riservati. All rights reserved.
  14:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** */
  15:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  16:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Old Versions
  17:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \version 
  18:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \date    
  19:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \author  
  20:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** */
  21:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  22:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  23:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ******** */
  24:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Includes */
  25:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ******** */
  26:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  27:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** #include "CstmHeaders.h"
  28:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** #include "PM_PulseCounterExp.h"
  29:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  30:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ****************** */
  31:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Defines and Macros */
  32:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ****************** */
  33:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  34:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* *************************** */
  35:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Typedef, Structs and Unions */
  36:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* *************************** */
  37:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  38:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* **************************** */
  39:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Prototype of local functions */
  40:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* **************************** */
  41:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** uint8_t RGN_checkCondReg (void);
  42:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  43:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ****************** */
  44:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Exported variables */
  45:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ****************** */
  46:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  47:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* **************** */
  48:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Global variables */
  49:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* **************** */
  50:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  51:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ***************** */
  52:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Exported function */
  53:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ***************** */
  54:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  55:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  56:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /**
  57:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** Gestisce l'esecuzione del microprogramma Regenerate.
  58:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
  59:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  60:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  61:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
  62:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \return S_OK se la condizione di avanzamento passo per il microprogramma � verificata (rigenera c
  63:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \return S_FALSE se non � ancora verificata(rigenera non ancora completata),
  64:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \return codice di errore in altri casi
  65:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
  66:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \version		1.0.0
  67:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \date 			26/06/2008
  68:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \author			Valeria Catani
  69:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  70:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** */
  71:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** uint8_t RGN_uP_Regenerate_Exe (uint8_t HighStatement,uint8_t LowStatement)
  72:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** {
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	Loader_Struct uPRegenerate_setting_data;
  74:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  75:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  76:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE)
  77:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{	/* Prima iterazione del passo */
  78:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
  79:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_INIT;
  80:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
  81:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}
  82:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
  83:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (uPDoorStatus == UP_DOOR_WAIT)
  84:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{/* porta aperta -> il uP va sospeso */
  85:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
  86:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     
  87:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     	(void)SWTC_Stop((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);;
  88:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     
  89:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		return S_FALSE;
  90:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			    
  91:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}
  92:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
  93:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
  94:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_INIT )
  95:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{/* Init uP */
  96:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
  97:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  /* caricamento dati dalla flash */
  98:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
  99:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( BasicLoader( PTR_UP_REGENERATE, LowStatement, &uPRegenerate_setting_data ) != S_OK )
 100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		{
 101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			return S_OK;	/*non eseguo il uP, ma abilito avanzamento passo*/
 102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		}
 103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		/* inizializzazione dati uP */
 105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseRegReq = OFFS_B(uPRegenerate_setting_data.Data,1); /*acqua da impieg
 107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		                                                                               espressa in impuls
 108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.resetAfterRegReq = FALSE;
 110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( TESTBIT ( OFFS_B(uPRegenerate_setting_data.Data,0), 7 ) )
 112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		{ 
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.resetAfterRegReq = TRUE;
 114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		}
 115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		/* init var conteggio impulsi per rigenera */
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = 0;
 118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  /* verifica condizioni per eseguire o meno rigenera */	
 120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( uP_Regenerate_Data.resetAfterRegReq == FALSE)
 122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		{ /* non richiesto reset after reg -> primo passaggio di rigenera */
 123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  
 124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			if ( RGN_checkCondReg() == TRUE )
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			{/* la rigenera va eseguita */
 126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			  SETBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  /* per il passaggio di rigenera successivo */
 128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			  /*uP_Regenerate_Data.status = REGENERATE_EXE_0;*/
 130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			}
 132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    else
 133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    {/* la rigenera non va eseguita */
 134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      uP_Regenerate_Data.status = REGENERATE_TRUE;
 136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      
 137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      return S_OK;   
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    }
 140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		}
 142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		else
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		{ /* richiesto reset after reg -> secondo passaggio di rigenera */
 144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		 
 145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  if ( TESTBIT(Flags_2,FLAG2_REGENERATE_ON_POS) == 0 )
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  {/*in base al test effettuato al passaggio precedente la rigenera non va eseguita */
 147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				uP_Regenerate_Data.status = REGENERATE_TRUE;
 149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				return S_OK;
 151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		      
 152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  }
 153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  
 154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  CLRBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  
 155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		}
 156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		/*init counter per delay attivazione EVR - attivazione EVC*/
 158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( HWC_Flags.bit.vs_wash_presence != 0)
 161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		{ /* l'unit� di misura in setting � 500 ms*/
 162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			uP_Regenerate_Data.tout_cnt =(uint16_t)(OFFS_B(uPRegenerate_setting_data.Data,0) & 0x7F )* 5;
 163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		}
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_EXE_0;
 166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		return S_FALSE;	/* nella prima iterazione non vengono pilotati i carichi */
 169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}/*REGENERATE_INIT END*/
 171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_EXE_0 )
 173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	{/* conteggio ritardo EVR ON - EVC ON concluso */
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    /*Set Timeout di sicurezza caricamento acqua per rigenera */
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.waterPulseRegReq != 0)
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    {/* richiesta quantità  acqua per rigenera non nulla */
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      
 181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			    if ( HWC_Flags.bit.vs_wash_presence == 0)				
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				{
 183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				  /* init timeout di attivazione EV in base a portata storica, impulsi da caricare e margine di
 184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 					uP_Regenerate_Data.tout_cnt =  ((uP_Regenerate_Data.waterPulseRegReq - uP_Regenerate_Data.wate
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 								                    (FlowMeterDivider * (FULL_REF_LEVEL)) ;
 187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				}
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				if ( (PM_PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_P
 190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				{ /*Pulse counter OK && non bloccata*/
 191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	         		uP_Regenerate_Data.tout_cnt += MARGIN; 		/* aggiungo margine di sicurezza al tout di ca
 193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		      	}
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  		if ( HWC_Flags.bit.vs_wash_presence != 0)	
 195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				{
 196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      			PulseLoaded=0;
 197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				}
 198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  		PM_PulseCounter_SetCount(uP_Regenerate_Data.waterPulseReg);/* init Pulse Counter */
 200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		      	PM_PulseCounter_Reset_Warning(PULSECOUNTER_RESET_HIGH_WARNING); /* reset warning alta freq
 203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		                                                                      potrebbe dipendere dall'att
 204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      
 205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      		uP_Regenerate_Data.status = REGENERATE_EXE_1;
 206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	       						
 207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    	}
 208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    else
 209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    {/* non deve essere caricata acqua */
 210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****       
 211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		      	/*init counter per delay disattivazione EVC - disattivazione EVR*/
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			  	(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerTyp
 213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			    
 214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		      	uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    }
 217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    
 218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	}
 219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  
 220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	/* in ogni caso */	   
 221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	(void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	   
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}/* REGENERATE_EXE_0 END*/
 226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_1)
 228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{		
 229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		/* aggiornamento impulsi caricati */
 230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = (uint8_t)PulseLoaded;
 232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		/* aggiornamento timeout di sicurezza */
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.tout_cnt--;
 237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  /* controllo termine caricamento */
 239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  if ( (uP_Regenerate_Data.waterPulseReg >= uP_Regenerate_Data.waterPulseRegReq) || 
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	       (uP_Regenerate_Data.tout_cnt == 0) )
 242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  {
 243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    /*init counter per delay disattivazione EVC - disattivazione EVR*/
 244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	     uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	    
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  }
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  
 250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  /* pilotaggio EVR - EVC */
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON;
 253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}/* REGENERATE_EXE_1 END*/
 255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_2)
 257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{
 258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  {/* conteggio ritardo EVC OFF - EVR OFF concluso */
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  if ( uP_Regenerate_Data.resetAfterRegReq == TRUE)
 263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  {/* richiesto reset quantità acqua : processo di rigenera in 2 step concluso */
 264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		     
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    /* aggiornamento numero di rigenere eseguite */
 266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    RGN_updateRegNumber();
 267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    		    		  
 268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    /* Flag rigenera eseguita (anche per JumpIF)*/
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    SETBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS);
 270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.forceReg_cnt != 0)
 272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    {
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				Reg_WaterLoaded.l = WaterForRegenerate;
 274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				uP_Regenerate_Data.forceReg_cnt --;
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    }
 278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  }
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  
 281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.status = REGENERATE_TRUE;
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  }
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  
 284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  /* in ogni caso */	   
 285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	 (void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}/*REGENERATE_EXE_2 END*/
 290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_TRUE )
 292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{
 293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	   return S_OK;
 294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}/*REGENERATE_TRUE END*/
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	return S_FALSE;
 298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  
 299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** }
 300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ************** */
 306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* Local Function */
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* ************** */
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /**
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** Controlla le condizioni per effettuare la rigenera
 311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
 313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \return S_OK se la condizione per la rigenera � verificata 
 314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \return S_FALSE se non � verificata
 315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \return codice di errore in altri casi
 316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
 317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \version		1.0.0
 318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \date 			27/06/2008
 319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \author			Valeria Catani
 320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** */
 322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** uint8_t RGN_checkCondReg (void)
 323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** {
  10                             		.loc 1 323 0
 324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** uint16_t waterForReg;
 325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   if (uP_Regenerate_Data.forceReg_cnt != 0)
  11                             		.loc 1 326 0
  12 0000 FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
  13 0006 59 E1 06                		movu.B	6[r14], r1
  14 0009 61 01                   		cmp	#0, r1
  15 000b 21 2B                   		bne	.L3
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   {/* rigenera forzata (con contatore) */
 328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     return TRUE; 
 330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   }
 331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   if ( WaterForRegenerate == 0xFF )
  16                             		.loc 1 332 0
  17 000d FB E2 00 00 00 00       		mov.L	#_WaterForRegenerate, r14
  18 0013 58 E4                   		movu.B	[r14], r4
  19 0015 75 54 FF                		cmp	#0xff, r4
  20 0018 20 20                   		beq	.L2
  21                             	.LVL0:
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{/* Non ho dato di confronto per stabilire se eseguire rigenera */  /*CASO REALE?????*/
 334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		return FALSE;
 336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}
 337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /* rigenera abilitata anche dopo segnalazione sale assente */
 339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /*	
 340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if ( TESTBIT(ApplicationFlags, AF_NO_SALT_BIT) )	
 341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	{// E' stata comunicata mancanza sale alla UI
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	
 343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  return FALSE; 
 344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	}
 345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** */	
 346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   waterForReg = ( (uint16_t)Reg_WaterLoaded.l + (WaterInDW/10) );
  22                             		.loc 1 347 0
  23 001a FB E2 00 00 00 00       		mov.L	#_WaterInDW, r14
  24                             	.LVL1:
  25 0020 58 EE                   		movu.B	[r14], r14
  26                             	.LVL2:
  27 0022 FD 74 9E 0A             		divu	#10, r14
  28 0026 FB 32 00 00 00 00       		mov.L	#_Reg_WaterLoaded, r3
  29                             	.LVL3:
  30 002c 58 31                   		movu.B	[r3], r1
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   if ( waterForReg >= WaterForRegenerate  )
  31                             		.loc 1 349 0
  32 002e 4B E1                   		add	r14, r1
  33 0030 47 14                   		cmp	r1, r4
  34 0032 FC DB 15                		scleu.L	r1
  35 0035 0B                      		bra	.L2
  36                             	.LVL4:
  37                             	.L3:
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     return TRUE; 
  38                             		.loc 1 329 0
  39 0036 66 11                   		mov	#1, r1
  40                             		.balign 2,3,1
  41                             	.L2:
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   {
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     return TRUE;  
 352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   }
 353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   return FALSE;
 355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** }
  42                             		.loc 1 356 0
  43 0038 5B 11                   		movu.B	r1, r1
  44 003a 02                      		rts
  45                             	.LFE1:
  47 003b 03                      		.section	.text.RGN_updateRegNumber,"ax",@progbits
  48                             		.global	_RGN_updateRegNumber
  50                             	_RGN_updateRegNumber:
  51                             	.LFB2:
 357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** /**
 359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** Aggiorna il numero di rigenere eseguite
 360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
 361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****  
 362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \return 
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \version		1.0.0
 365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \date 			30/06/2008
 366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** \author			Valeria Catani
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** */
 369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** void RGN_updateRegNumber (void)
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** {
  52                             		.loc 1 370 0
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** uint8_t nMaxReg;
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   nMaxReg = OFFS_B(Tab_HWCRegenerateData.Data,2);
  53                             		.loc 1 374 0
  54 0000 FB E2 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r14
  55 0006 EC EE                   		mov.L	[r14], r14
  56 0008 CD E4 02                		mov.B	2[r14], r4
  57                             	.LVL5:
 375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 
 376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   if (HWC_Flags.bit.saltreed)
  58                             		.loc 1 376 0
  59 000b FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
  60 0011 DC EE                   		mov.W	[r14], r14
  61 0013 64 2E                   		and #2, r14
  62 0015 5F EE                   		movu.W	r14, r14
  63 0017 61 0E                   		cmp	#0, r14
  64 0019 20 21                   		beq	.L6
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   {/* reed sale presente */
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     if ( NoSalt_Reg == TRUE )
  65                             		.loc 1 379 0
  66 001b FB E2 00 00 00 00       		mov.L	#_NoSalt_Reg, r14
  67 0021 58 EE                   		movu.B	[r14], r14
  68 0023 61 1E                   		cmp	#1, r14
  69 0025 21 1E                   		bne	.L5
 380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     {/* richiesto aggiornamento num rigenere poich� sale assente */
 381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     
 382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****             if ( uP_Regenerate_Data.nReg < 0xFF )
  70                             		.loc 1 382 0
  71 0027 FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
  72 002d CD E4 07                		mov.B	7[r14], r4
  73                             	.LVL6:
  74 0030 5B 43                   		movu.B	r4, r3
  75 0032 75 53 FF                		cmp	#0xff, r3
  76 0035 20 0E                   		beq	.L5
 383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			{				
 384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				uP_Regenerate_Data.nReg++;
  77                             		.loc 1 384 0
  78 0037 62 14                   		add	#1, r4
  79 0039 0F                      		bra	.L11
  80                             	.LVL7:
  81                             	.L6:
 385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			}
 386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****       
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     }
 388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   }
 389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   else
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   {/* reed sale assente */
 391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****   
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     /* per compatibilit� con vecchia piattaforma, forse inutile! */
 393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     
 394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     uP_Regenerate_Data.nReg = nMaxReg;   
  82                             		.loc 1 394 0
  83 003a FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
  84                             	.LVL8:
  85                             		.balign 2,3,5
  86                             	.L11:
  87 0040 C7 E4 07                		mov.B	r4, 7[r14]
  88                             	.L5:
  89 0043 02                      		rts
  90                             	.LFE2:
  92                             		.section	.text.RGN_uP_Regenerate_Exe,"ax",@progbits
  93                             		.global	_RGN_uP_Regenerate_Exe
  95                             	_RGN_uP_Regenerate_Exe:
  96                             	.LFB0:
  72:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** {
  97                             		.loc 1 72 0
  98                             	.LVL9:
  99 0000 6E 7B                   		pushm	r7-r11
 100                             	.LCFI0:
 101 0002 60 80                   		sub	#8, r0
 102                             	.LCFI1:
  76:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE)
 103                             		.loc 1 76 0
 104 0004 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 105 000a 89 77                   		mov.B	4[r7], r7
 106 000c 64 27                   		and	#2, r7
 107 000e 1A                      		bne	.L13
  79:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_INIT;
 108                             		.loc 1 79 0
 109 000f FB A2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r10
 110 0015 C7 A7 05                		mov.B	r7, 5[r10]
 111                             		.balign 2,3,5
 112                             	.L13:
  83:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (uPDoorStatus == UP_DOOR_WAIT)
 113                             		.loc 1 83 0
 114 0018 FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
 115 001e 58 77                   		movu.B	[r7], r7
 116 0020 61 07                   		cmp	#0, r7
 117 0022 21 0C                   		bne	.L14
  87:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c ****     	(void)SWTC_Stop((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);;
 118                             		.loc 1 87 0
 119 0024 75 41 17                		mov	#23, r1
 120                             	.LVL10:
 121 0027 05 00 00 00             		bsr	_SWTC_Stop
 122                             	.LVL11:
 123 002b 38 CB 00                		bra	.L54
 124                             	.LVL12:
 125                             	.L14:
  94:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_INIT )
 126                             		.loc 1 94 0
 127 002e FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 128 0034 59 7A 05                		movu.B	5[r7], r10
 129 0037 61 0A                   		cmp	#0, r10
 130 0039 3B C2 00                		bne	.L16
  99:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( BasicLoader( PTR_UP_REGENERATE, LowStatement, &uPRegenerate_setting_data ) != S_OK )
 131                             		.loc 1 99 0
 132 003c 5B 22                   		movu.B	r2, r2
 133 003e 75 41 1D                		mov	#29, r1
 134                             	.LVL13:
 135 0041 EF 03                   		mov.L	r0, r3
 136 0043 05 00 00 00             		bsr	_BasicLoader
 137                             	.LVL14:
 138 0047 76 21 FF 00             		and #0xff, r1
 139 004b 3B 75 02                		bne	.L37
 106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseRegReq = OFFS_B(uPRegenerate_setting_data.Data,1); /*acqua da impieg
 140                             		.loc 1 106 0
 141 004e EC 0E                   		mov.L	[r0], r14
 142 0050 CD E4 01                		mov.B	1[r14], r4
 143 0053 75 24 7F                		and #0x7f, r4
 144 0056 CD 7A 08                		mov.B	8[r7], r10
 145 0059 75 2A 80                		and #0xffffff80, r10
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.resetAfterRegReq = FALSE;
 146                             		.loc 1 109 0
 147 005c 57 4A                   		or	r4, r10
 148 005e 7A 7A                   		bclr	#7, r10
 149 0060 C7 7A 08                		mov.B	r10, 8[r7]
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( TESTBIT ( OFFS_B(uPRegenerate_setting_data.Data,0), 7 ) )
 150                             		.loc 1 111 0
 151 0063 CC EE                   		mov.B	[r14], r14
 152 0065 61 0E                   		cmp	#0, r14
 153 0067 28 07                   		bge	.L17
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.resetAfterRegReq = TRUE;
 154                             		.loc 1 113 0
 155 0069 78 7A                   		bset	#7, r10
 156 006b C7 7A 08                		mov.B	r10, 8[r7]
 157                             		.balign 2,3,5
 158                             	.L17:
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = 0;
 159                             		.loc 1 117 0
 160 006e FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 161 0074 3C 74 00                		mov.B	#0, 4[r7]
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( uP_Regenerate_Data.resetAfterRegReq == FALSE)
 162                             		.loc 1 121 0
 163 0077 CD 7A 08                		mov.B 8[r7], r10
 164 007a 76 2A 80 00             		and #0x80, r10
 165 007e 21 1C                   		bne	.L18
 124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			if ( RGN_checkCondReg() == TRUE )
 166                             		.loc 1 124 0
 167 0080 05 00 00 00             		bsr	_RGN_checkCondReg
 168                             	.LVL15:
 169 0084 5B 11                   		movu.B	r1, r1
 170 0086 61 11                   		cmp	#1, r1
 171 0088 21 0C                   		bne	.L19
 127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			  SETBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  /* per il passaggio di rigenera successivo */
 172                             		.loc 1 127 0
 173 008a FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 174 0090 F0 72                   		bset #2, [r7].B
 175 0092 2E 20                   		bra	.L20
 176                             	.L19:
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      uP_Regenerate_Data.status = REGENERATE_TRUE;
 177                             		.loc 1 135 0
 178 0094 3C 75 04                		mov.B	#4, 5[r7]
 179 0097 38 29 02                		bra	.L37
 180                             	.L18:
 145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  if ( TESTBIT(Flags_2,FLAG2_REGENERATE_ON_POS) == 0 )
 181                             		.loc 1 145 0
 182 009a FB A2 00 00 00 00       		mov.L	#_Flags_2, r10
 183 00a0 CC AE                   		mov.B	[r10], r14
 184 00a2 EF E1                   		mov.L	r14, r1
 185 00a4 64 41                   		and #4, r1
 186 00a6 1F                      		bne	.L21
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				uP_Regenerate_Data.status = REGENERATE_TRUE;
 187                             		.loc 1 148 0
 188 00a7 3C 75 04                		mov.B	#4, 5[r7]
 189 00aa 38 18 02                		bra	.L15
 190                             	.L21:
 154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  CLRBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  
 191                             		.loc 1 154 0
 192 00ad 7A 2E                   		bclr #2, r14
 193 00af C3 AE                   		mov.B	r14, [r10]
 194 00b1 03                      		.balign 2,3,5
 195                             	.L20:
 158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 196                             		.loc 1 158 0
 197 00b2 FB 72 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r7
 198 00b8 EC 77                   		mov.L	[r7], r7
 199 00ba CC 73                   		mov.B	[r7], r3
 200 00bc 75 41 17                		mov	#23, r1
 201 00bf 66 22                   		mov	#2, r2
 202 00c1 75 23 7F                		and #0x7f, r3
 203 00c4 05 00 00 00             		bsr	_Set_SmallCounter
 204                             	.LVL16:
 160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		if ( HWC_Flags.bit.vs_wash_presence != 0)
 205                             		.loc 1 160 0
 206 00c8 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 207 00ce DC 77                   		mov.W	[r7], r7
 208 00d0 75 27 10                		and #16, r7
 209 00d3 5F 77                   		movu.W	r7, r7
 210 00d5 61 07                   		cmp	#0, r7
 211 00d7 20 15                   		beq	.L22
 162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			uP_Regenerate_Data.tout_cnt =(uint16_t)(OFFS_B(uPRegenerate_setting_data.Data,0) & 0x7F )* 5;
 212                             		.loc 1 162 0
 213 00d9 EC 07                   		mov.L	[r0], r7
 214 00db CC 77                   		mov.B	[r7], r7
 215 00dd 75 27 7F                		and #0x7f, r7
 216 00e0 63 57                   		mul	#5, r7
 217 00e2 FB A2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r10
 218 00e8 D7 A7 01                		mov.W	r7, 2[r10]
 219 00eb 03                      		.balign 2,3,5
 220                             	.L22:
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_EXE_0;
 221                             		.loc 1 165 0
 222 00ec FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 223 00f2 3C 75 01                		mov.B	#1, 5[r7]
 224 00f5 03                      		.balign 2,3,1
 225                             	.L54:
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		return S_FALSE;	/* nella prima iterazione non vengono pilotati i carichi */
 226                             		.loc 1 168 0
 227 00f6 66 11                   		mov	#1, r1
 228 00f8 38 CA 01                		bra	.L15
 229                             	.LVL17:
 230                             	.L16:
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_EXE_0 )
 231                             		.loc 1 172 0
 232 00fb 61 1A                   		cmp	#1, r10
 233 00fd 3B DB 00                		bne	.L23
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 234                             		.loc 1 174 0
 235 0100 75 41 17                		mov	#23, r1
 236                             	.LVL18:
 237 0103 05 00 00 00             		bsr	_SWTC_IsExpired
 238                             	.LVL19:
 239 0107 61 01                   		cmp	#0, r1
 240 0109 3A B5 00                		beq	.L24
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.waterPulseRegReq != 0)
 241                             		.loc 1 178 0
 242 010c CD 7E 08                		mov.B	8[r7], r14
 243 010f 75 2E 7F                		and	#0x7f, r14
 244 0112 3A 91 00                		beq	.L25
 181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			    if ( HWC_Flags.bit.vs_wash_presence == 0)				
 245                             		.loc 1 181 0
 246 0115 FB A2 00 00 00 00       		mov.L	#_HWC_Flags, r10
 247 011b DC AA                   		mov.W	[r10], r10
 248 011d 75 2A 10                		and #16, r10
 249 0120 5F AA                   		movu.W	r10, r10
 250 0122 61 0A                   		cmp	#0, r10
 251 0124 21 2A                   		bne	.L26
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 					uP_Regenerate_Data.tout_cnt =  ((uP_Regenerate_Data.waterPulseRegReq - uP_Regenerate_Data.wate
 252                             		.loc 1 185 0
 253 0126 41 7E 04                		sub	4[r7].UB, r14
 254 0129 FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 255 012f 4C AE                   		mul	[r10].UB, r14
 256 0131 63 5E                   		mul	#5, r14
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 								                    (FlowMeterDivider * (FULL_REF_LEVEL)) ;
 257                             		.loc 1 186 0
 258 0133 FB A2 00 00 00 00       		mov.L	#_FlowMeterDivider, r10
 259 0139 58 A4                   		movu.B	[r10], r4
 260 013b FB A2 00 00 00 00       		mov.L	#_Tab_HWCPressSensorData, r10
 261 0141 EC AA                   		mov.L	[r10], r10
 262 0143 59 AA 05                		movu.B	5[r10], r10
 263 0146 4F 4A                   		mul	r4, r10
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 					uP_Regenerate_Data.tout_cnt =  ((uP_Regenerate_Data.waterPulseRegReq - uP_Regenerate_Data.wate
 264                             		.loc 1 185 0
 265 0148 FC 23 AE                		div	r10, r14
 266 014b D7 7E 01                		mov.W	r14, 2[r7]
 267                             		.balign 2,3,3
 268                             	.L26:
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				if ( (PM_PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_P
 269                             		.loc 1 189 0
 270 014e 05 00 00 00             		bsr	_PM_PulseCounter_GetWarning
 271                             	.LVL20:
 272 0152 76 21 FF 00             		and #0xff, r1
 273 0156 21 1C                   		bne	.L27
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				if ( (PM_PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_P
 274                             		.loc 1 189 0 is_stmt 0 discriminator 1
 275 0158 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 276 015e CC 77                   		mov.B [r7], r7
 277 0160 64 47                   		and #4, r7
 278 0162 21 10                   		bne	.L27
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	         		uP_Regenerate_Data.tout_cnt += MARGIN; 		/* aggiungo margine di sicurezza al tout di ca
 279                             		.loc 1 192 0 is_stmt 1
 280 0164 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 281 016a DD 7A 01                		mov.W	2[r7], r10
 282 016d 62 AA                   		add	#10, r10
 283 016f D7 7A 01                		mov.W	r10, 2[r7]
 284                             		.balign 2,3,5
 285                             	.L27:
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  		if ( HWC_Flags.bit.vs_wash_presence != 0)	
 286                             		.loc 1 194 0
 287 0172 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 288 0178 DC 77                   		mov.W	[r7], r7
 289 017a 75 27 10                		and #16, r7
 290 017d 5F 77                   		movu.W	r7, r7
 291 017f 61 07                   		cmp	#0, r7
 292 0181 20 0B                   		beq	.L28
 196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      			PulseLoaded=0;
 293                             		.loc 1 196 0
 294 0183 FB 72 00 00 00 00       		mov.L	#_PulseLoaded, r7
 295 0189 3D 70 00                		mov.W	#0, [r7]
 296                             		.balign 2,3,5
 297                             	.L28:
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  		PM_PulseCounter_SetCount(uP_Regenerate_Data.waterPulseReg);/* init Pulse Counter */
 298                             		.loc 1 199 0
 299 018c FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 300 0192 B1 71                   		movu.B	4[r7], r1
 301 0194 05 00 00 00             		bsr	_PM_PulseCounter_SetCount
 302                             	.LVL21:
 202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		      	PM_PulseCounter_Reset_Warning(PULSECOUNTER_RESET_HIGH_WARNING); /* reset warning alta freq
 303                             		.loc 1 202 0
 304 0198 66 11                   		mov	#1, r1
 305 019a 05 00 00 00             		bsr	_PM_PulseCounter_Reset_Warning
 306                             	.LVL22:
 205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	      		uP_Regenerate_Data.status = REGENERATE_EXE_1;
 307                             		.loc 1 205 0
 308 019e 3C 75 02                		mov.B	#2, 5[r7]
 309 01a1 2E 1D                   		bra	.L24
 310                             	.L25:
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			  	(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerTyp
 311                             		.loc 1 212 0
 312 01a3 FB A2 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r10
 313 01a9 EC AA                   		mov.L	[r10], r10
 314 01ab CD A3 01                		mov.B	1[r10], r3
 315 01ae 75 41 17                		mov	#23, r1
 316 01b1 66 22                   		mov	#2, r2
 317 01b3 75 23 7F                		and #0x7f, r3
 318 01b6 05 00 00 00             		bsr	_Set_SmallCounter
 319                             	.LVL23:
 215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		      	uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 320                             		.loc 1 215 0
 321 01ba 3C 75 03                		mov.B	#3, 5[r7]
 322 01bd 03                      		.balign 2,3,2
 323                             	.L24:
 221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	(void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 324                             		.loc 1 221 0
 325 01be 75 41 17                		mov	#23, r1
 326 01c1 05 00 00 00             		bsr	_SWTC_Run
 327                             	.LVL24:
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  	LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 328                             		.loc 1 223 0
 329 01c5 FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 330 01cb B0 7F                   		movu.B	1[r7], r7
 331 01cd FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 332 01d3 66 1B                   		mov	#1, r11
 333 01d5 FE 07 AB                		mov.B	r11, [r7,r10]
 334                             		.balign 2,3,5
 335                             	.L23:
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_1)
 336                             		.loc 1 227 0
 337 01d8 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 338 01de 59 7A 05                		movu.B	5[r7], r10
 339 01e1 61 2A                   		cmp	#2, r10
 340 01e3 21 61                   		bne	.L29
 231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = (uint8_t)PulseLoaded;
 341                             		.loc 1 231 0
 342 01e5 FB A2 00 00 00 00       		mov.L	#_PulseLoaded, r10
 343 01eb DC AA                   		mov.W	[r10], r10
 344 01ed C7 7A 04                		mov.B	r10, 4[r7]
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.tout_cnt--;
 345                             		.loc 1 236 0
 346 01f0 DD 7E 01                		mov.W	2[r7], r14
 347 01f3 60 1E                   		sub	#1, r14
 348 01f5 D7 7E 01                		mov.W	r14, 2[r7]
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  if ( (uP_Regenerate_Data.waterPulseReg >= uP_Regenerate_Data.waterPulseRegReq) || 
 349                             		.loc 1 240 0
 350 01f8 5B AA                   		movu.B	r10, r10
 351 01fa 8A 77                   		mov.B	8[r7], r7
 352 01fc 75 27 7F                		and #0x7f, r7
 353 01ff 47 7A                   		cmp	r7, r10
 354 0201 28 09                   		bge	.L30
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  if ( (uP_Regenerate_Data.waterPulseReg >= uP_Regenerate_Data.waterPulseRegReq) || 
 355                             		.loc 1 240 0 is_stmt 0 discriminator 1
 356 0203 5F E7                   		movu.W	r14, r7
 357 0205 61 07                   		cmp	#0, r7
 358 0207 21 23                   		bne	.L31
 359 0209 03                      		.balign 2,3,5
 360                             	.L30:
 244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 361                             		.loc 1 244 0 is_stmt 1
 362 020a FB 72 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r7
 363 0210 EC 77                   		mov.L	[r7], r7
 364 0212 88 7B                   		mov.B	1[r7], r3
 365 0214 75 41 17                		mov	#23, r1
 366 0217 66 22                   		mov	#2, r2
 367 0219 75 23 7F                		and #0x7f, r3
 368 021c 05 00 00 00             		bsr	_Set_SmallCounter
 369                             	.LVL25:
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	     uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 370                             		.loc 1 246 0
 371 0220 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 372 0226 3C 75 03                		mov.B	#3, 5[r7]
 373 0229 03                      		.balign 2,3,5
 374                             	.L31:
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 375                             		.loc 1 251 0
 376 022a FB 72 00 00 00 00       		mov.L	#_LoadsReq_New, r7
 377 0230 FB A2 00 00 00 00       		mov.L	#_EV_Pos, r10
 378 0236 59 AE 01                		movu.B	1[r10], r14
 379 0239 66 1B                   		mov	#1, r11
 380 023b FE 0E 7B                		mov.B	r11, [r14,r7]
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON;
 381                             		.loc 1 252 0
 382 023e 58 AA                   		movu.B	[r10], r10
 383 0240 FE 0A 7B                		mov.B	r11, [r10,r7]
 384 0243 03                      		.balign 2,3,5
 385                             	.L29:
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_2)
 386                             		.loc 1 256 0
 387 0244 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 388 024a 59 7A 05                		movu.B	5[r7], r10
 389 024d 61 3A                   		cmp	#3, r10
 390 024f 21 63                   		bne	.L32
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 391                             		.loc 1 259 0
 392 0251 75 41 17                		mov	#23, r1
 393 0254 05 00 00 00             		bsr	_SWTC_IsExpired
 394                             	.LVL26:
 395 0258 61 01                   		cmp	#0, r1
 396 025a 20 3E                   		beq	.L33
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  if ( uP_Regenerate_Data.resetAfterRegReq == TRUE)
 397                             		.loc 1 262 0
 398 025c CD 7A 08                		mov.B 8[r7], r10
 399 025f 76 2A 80 00             		and #0x80, r10
 400 0263 20 2B                   		beq	.L35
 266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    RGN_updateRegNumber();
 401                             		.loc 1 266 0
 402 0265 05 00 00 00             		bsr	_RGN_updateRegNumber
 403                             	.LVL27:
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    SETBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS);
 404                             		.loc 1 269 0
 405 0269 FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 406 026f F0 A1                   		bset #1, [r10].B
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.forceReg_cnt != 0)
 407                             		.loc 1 271 0
 408 0271 CD 7A 06                		mov.B	6[r7], r10
 409 0274 5B AE                   		movu.B	r10, r14
 410 0276 61 0E                   		cmp	#0, r14
 411 0278 20 16                   		beq	.L35
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				Reg_WaterLoaded.l = WaterForRegenerate;
 412                             		.loc 1 273 0
 413 027a FB 42 00 00 00 00       		mov.L	#_WaterForRegenerate, r4
 414 0280 FB E2 00 00 00 00       		mov.L	#_Reg_WaterLoaded, r14
 415 0286 C0 4E                   		mov.B	[r4], [r14]
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 				uP_Regenerate_Data.forceReg_cnt --;
 416                             		.loc 1 275 0
 417 0288 60 1A                   		sub	#1, r10
 418 028a C7 7A 06                		mov.B	r10, 6[r7]
 419 028d 03                      		.balign 2,3,5
 420                             	.L35:
 281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.status = REGENERATE_TRUE;
 421                             		.loc 1 281 0
 422 028e FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 423 0294 3C 75 04                		mov.B	#4, 5[r7]
 424 0297 03                      		.balign 2,3,2
 425                             	.L33:
 285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	 (void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 426                             		.loc 1 285 0
 427 0298 75 41 17                		mov	#23, r1
 428 029b 05 00 00 00             		bsr	_SWTC_Run
 429                             	.LVL28:
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 430                             		.loc 1 287 0
 431 029f FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 432 02a5 B0 7F                   		movu.B	1[r7], r7
 433 02a7 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 434 02ad 66 1B                   		mov	#1, r11
 435 02af FE 07 AB                		mov.B	r11, [r7,r10]
 436                             		.balign 2,3,5
 437                             	.L32:
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_TRUE )
 438                             		.loc 1 291 0
 439 02b2 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 440 02b8 B1 79                   		movu.B	5[r7], r1
 441 02ba 61 41                   		cmp	#4, r1
 442 02bc FC DB 11                		scne.L	r1
 443 02bf 0B                      		bra	.L15
 444                             	.L37:
 101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** 			return S_OK;	/*non eseguo il uP, ma abilito avanzamento passo*/
 445                             		.loc 1 101 0
 446 02c0 CF A1                   		mov.B	r10, r1
 447                             		.balign 2,3,1
 448                             	.L15:
 299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\Regenerate.c **** }
 449                             		.loc 1 299 0
 450 02c2 5B 11                   		movu.B	r1, r1
 451 02c4 3F 7B 07                		rtsd	#28, r7-r11
 452                             	.LFE0:
 514                             	.Letext0:
 515                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 516                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_SwTimersCounters/SwTimersCo
 517                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 518                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Types.h"
 519                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_General.h"
 520                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmTypes.h"
 521                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/OutputManagerEx
 522                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmDefines.h"
 523                             		.file 10 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmGlobal.h"
 524                             		.file 11 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_BusCommMng.h"
 525                             		.file 12 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Global.h"
 526                             		.file 13 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_FuncLib.h"
 527                             		.file 14 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_PulseCounter/PM_PulseCount
DEFINED SYMBOLS
                            *ABS*:00000000 Regenerate.c
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:7      .text.RGN_checkCondReg:00000000 _RGN_checkCondReg
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:12     .text.RGN_checkCondReg:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:50     .text.RGN_updateRegNumber:00000000 _RGN_updateRegNumber
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:54     .text.RGN_updateRegNumber:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:95     .text.RGN_uP_Regenerate_Exe:00000000 _RGN_uP_Regenerate_Exe
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:99     .text.RGN_uP_Regenerate_Exe:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:455    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:8      .text.RGN_checkCondReg:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:51     .text.RGN_updateRegNumber:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:96     .text.RGN_uP_Regenerate_Exe:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2059   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3028   .debug_str:00000483 .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3232   .debug_str:00000b4a .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2886   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2896   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3132   .debug_str:000007dd .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2992   .debug_str:00000352 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2948   .debug_str:000001d9 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3140   .debug_str:00000826 .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3000   .debug_str:000003a0 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3056   .debug_str:0000059b .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3222   .debug_str:00000b00 .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3046   .debug_str:00000535 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2982   .debug_str:000002fa .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2926   .debug_str:0000012b .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2952   .debug_str:000001f5 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3152   .debug_str:00000887 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3212   .debug_str:00000a9a .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2954   .debug_str:00000203 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2942   .debug_str:000001ba .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2946   .debug_str:000001d2 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3104   .debug_str:000006f0 .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3082   .debug_str:00000663 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3210   .debug_str:00000a8c .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3090   .debug_str:00000690 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3180   .debug_str:00000979 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3030   .debug_str:000004a9 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3262   .debug_str:00000c81 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3148   .debug_str:0000085f .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3142   .debug_str:00000830 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3066   .debug_str:000005dc .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3144   .debug_str:00000838 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3208   .debug_str:00000a7e .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2962   .debug_str:0000022c .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3160   .debug_str:000008ba .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3130   .debug_str:000007c7 .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3012   .debug_str:000003f2 .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3026   .debug_str:0000046e .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2976   .debug_str:000002c6 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3164   .debug_str:000008d8 .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3124   .debug_str:00000786 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3038   .debug_str:000004f6 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2974   .debug_str:000002b7 .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3154   .debug_str:0000088f .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3078   .debug_str:0000063a .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3048   .debug_str:00000547 .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3084   .debug_str:0000066e .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3174   .debug_str:00000941 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3070   .debug_str:0000060d .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2950   .debug_str:000001e1 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3016   .debug_str:00000423 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3224   .debug_str:00000b09 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2978   .debug_str:000002db .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3242   .debug_str:00000bda .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3102   .debug_str:000006e4 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3138   .debug_str:00000810 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2902   .debug_str:00000025 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2990   .debug_str:00000340 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3192   .debug_str:000009ca .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3264   .debug_str:00000c93 .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3094   .debug_str:0000069e .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3184   .debug_str:00000985 .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2970   .debug_str:00000293 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2898   .debug_str:00000000 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3218   .debug_str:00000ad3 .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2940   .debug_str:000001ad .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2968   .debug_str:00000285 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3004   .debug_str:000003ba .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2956   .debug_str:0000020f .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2938   .debug_str:000001a8 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3074   .debug_str:0000061e .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3162   .debug_str:000008cf .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3146   .debug_str:00000856 .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2916   .debug_str:000000ae .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3150   .debug_str:00000872 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2980   .debug_str:000002e1 .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3194   .debug_str:000009e2 .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2972   .debug_str:000002a6 .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3238   .debug_str:00000bbb .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3050   .debug_str:00000558 .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2944   .debug_str:000001c1 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3206   .debug_str:00000a69 .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3110   .debug_str:00000715 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3018   .debug_str:00000431 .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3248   .debug_str:00000c15 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3168   .debug_str:00000901 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2928   .debug_str:00000142 .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3098   .debug_str:000006bc .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2958   .debug_str:00000216 .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3236   .debug_str:00000bad .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2998   .debug_str:00000393 .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2906   .debug_str:0000004d .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3116   .debug_str:00000749 .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3002   .debug_str:000003a9 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3032   .debug_str:000004bc .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3100   .debug_str:000006cc .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3068   .debug_str:000005f6 .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3044   .debug_str:00000530 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2986   .debug_str:00000316 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3092   .debug_str:00000699 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3088   .debug_str:00000686 .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3060   .debug_str:000005b7 .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3260   .debug_str:00000c73 .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3006   .debug_str:000003c2 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3216   .debug_str:00000ac1 .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3010   .debug_str:000003e1 .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3106   .debug_str:000006f5 .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3256   .debug_str:00000c52 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3096   .debug_str:000006b3 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3058   .debug_str:000005ae .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3228   .debug_str:00000b28 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3246   .debug_str:00000c0f .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3178   .debug_str:00000968 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3182   .debug_str:0000097e .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3188   .debug_str:000009aa .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3128   .debug_str:000007b9 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3136   .debug_str:000007fa .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2918   .debug_str:000000b3 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2920   .debug_str:000000cd .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2984   .debug_str:00000303 .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2988   .debug_str:0000031c .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2900   .debug_str:00000011 .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3230   .debug_str:00000b35 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2924   .debug_str:00000109 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3186   .debug_str:0000098e .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3266   .debug_str:00000ca3 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3196   .debug_str:000009f6 .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2932   .debug_str:0000016f .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3014   .debug_str:00000408 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2936   .debug_str:0000018e .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3220   .debug_str:00000ae3 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3040   .debug_str:0000050c .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3244   .debug_str:00000bea .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2930   .debug_str:00000155 .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3172   .debug_str:00000928 .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3214   .debug_str:00000aa1 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3202   .debug_str:00000a40 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3272   .debug_str:00000cd9 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2912   .debug_str:00000079 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3200   .debug_str:00000a28 .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2910   .debug_str:00000069 .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3190   .debug_str:000009b2 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3112   .debug_str:0000071a .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3036   .debug_str:000004de .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3198   .debug_str:00000a11 .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3234   .debug_str:00000b8e .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2904   .debug_str:00000031 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3250   .debug_str:00000c24 .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3108   .debug_str:000006ff .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3158   .debug_str:000008a5 .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3054   .debug_str:00000584 .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2966   .debug_str:00000261 .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2922   .debug_str:000000e7 .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2964   .debug_str:0000023e .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3176   .debug_str:0000094a .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2914   .debug_str:00000091 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3226   .debug_str:00000b0f .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2996   .debug_str:0000036c .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3022   .debug_str:0000044f .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:45     .text.RGN_checkCondReg:0000003b .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3270   .debug_str:00000ccd .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2746   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3008   .debug_str:000003cd .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:90     .text.RGN_updateRegNumber:00000044 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3122   .debug_str:0000077e .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2768   .debug_loc:00000022 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3020   .debug_str:00000439 .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:452    .text.RGN_uP_Regenerate_Exe:000002c7 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2779   .debug_loc:00000040 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3024   .debug_str:00000460 .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2797   .debug_loc:0000006c .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3034   .debug_str:000004d1 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2833   .debug_loc:000000bf .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3080   .debug_str:00000649 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:122    .text.RGN_uP_Regenerate_Exe:0000002b .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:137    .text.RGN_uP_Regenerate_Exe:00000047 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:168    .text.RGN_uP_Regenerate_Exe:00000084 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:204    .text.RGN_uP_Regenerate_Exe:000000c8 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:238    .text.RGN_uP_Regenerate_Exe:00000107 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:271    .text.RGN_uP_Regenerate_Exe:00000152 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:302    .text.RGN_uP_Regenerate_Exe:00000198 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:306    .text.RGN_uP_Regenerate_Exe:0000019e .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:319    .text.RGN_uP_Regenerate_Exe:000001ba .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:327    .text.RGN_uP_Regenerate_Exe:000001c5 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:369    .text.RGN_uP_Regenerate_Exe:00000220 .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:394    .text.RGN_uP_Regenerate_Exe:00000258 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:403    .text.RGN_uP_Regenerate_Exe:00000269 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:429    .text.RGN_uP_Regenerate_Exe:0000029f .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3156   .debug_str:0000089d .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3064   .debug_str:000005cb .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3166   .debug_str:000008ee .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3072   .debug_str:00000613 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3252   .debug_str:00000c3a .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3086   .debug_str:0000067a .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3170   .debug_str:00000917 .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2934   .debug_str:00000187 .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3240   .debug_str:00000bcd .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2908   .debug_str:00000052 .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3052   .debug_str:0000056e .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3042   .debug_str:00000526 .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2994   .debug_str:0000035f .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3258   .debug_str:00000c60 .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3204   .debug_str:00000a5f .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:2960   .debug_str:0000021f .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3254   .debug_str:00000c4a .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3062   .debug_str:000005c3 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3268   .debug_str:00000cc3 .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3274   .debug_str:00000cf7 .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3076   .debug_str:00000629 .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3134   .debug_str:000007eb .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3118   .debug_str:0000075a .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3114   .debug_str:00000730 .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3126   .debug_str:0000079b .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:3120   .debug_str:00000775 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:24     .text.RGN_checkCondReg:00000020 .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:26     .text.RGN_checkCondReg:00000022 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:57     .text.RGN_updateRegNumber:0000000b .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:73     .text.RGN_updateRegNumber:00000030 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:80     .text.RGN_updateRegNumber:0000003a .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:84     .text.RGN_updateRegNumber:00000040 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:100    .text.RGN_uP_Regenerate_Exe:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:102    .text.RGN_uP_Regenerate_Exe:00000004 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:98     .text.RGN_uP_Regenerate_Exe:00000000 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:120    .text.RGN_uP_Regenerate_Exe:00000027 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:124    .text.RGN_uP_Regenerate_Exe:0000002e .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:134    .text.RGN_uP_Regenerate_Exe:00000041 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:229    .text.RGN_uP_Regenerate_Exe:000000fb .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:236    .text.RGN_uP_Regenerate_Exe:00000103 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccdPwMcm.s:529    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_uP_Regenerate_Data
_WaterForRegenerate
_WaterInDW
_Reg_WaterLoaded
_Tab_HWCRegenerateData
_HWC_Flags
_NoSalt_Reg
_Interpreter_Data
_uPDoorStatus
_SWTC_Stop
_BasicLoader
_Flags_2
_Set_SmallCounter
_SWTC_IsExpired
_uP_Load_Data
_FlowMeterDivider
_Tab_HWCPressSensorData
_PM_PulseCounter_GetWarning
_Flags_1
_PulseLoaded
_PM_PulseCounter_SetCount
_PM_PulseCounter_Reset_Warning
_SWTC_Run
_EV_Pos
_LoadsReq_New
