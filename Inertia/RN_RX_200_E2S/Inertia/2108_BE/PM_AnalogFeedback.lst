   1                             		.file	"PM_AnalogFeedback.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.PM_AnalogFeedback_Init,"ax",@progbits
   5                             		.global	_PM_AnalogFeedback_Init
   7                             	_PM_AnalogFeedback_Init:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks/PM_AnalogFeedbac
   1:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Copyright (c) 2004-2005, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
   7:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n
   8:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \par		PM_AnalogFeedback.c
   9:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n			Implementation of all functions necessary to achieve the aim.
  10:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n
  11:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \file		PM_AnalogFeedback.c
  12:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \ingroup	PM_AnalogFeedbacks
  13:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		Jul 19, 2010
  14:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	01.00.00
  15:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author		stefano.ughi
  16:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n
  17:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n
  18:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \par\b	History:
  19:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n
  20:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n 		01.00.00
  21:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n		Jul 19, 2010
  22:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n		stefano.ughi
  23:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n		changes
  24:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n 		- creation
  25:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n
  26:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
  27:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  28:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #define	MODULE_BODY_PM_ANALOGFEEDBACK
  29:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ******** */
  30:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Includes */
  31:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ******** */
  32:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #include "Config.h"
  33:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #if  defined(CONFIG_PM_ANALOG_FEEDBACKS_SUPPORT)
  34:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #include "Analog.h"
  35:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #include "PM_AnalogFeedback.h"
  36:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  37:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ****************** */
  38:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Defines and Macros */
  39:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ****************** */
  40:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** maschera relativa alla soglia A/D sulla word contenente soglia \n
  41:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** e valore dell'analog feedback corrispondente */
  42:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #define ANALOG_FEEDBACK_FIELD_THRESHOLD_MASK    0x03FFu
  43:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** maschera relativa al valore dell'analog feedback sulla word contenente soglia \n
  44:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** e valore dell'analog feedback corrispondente */
  45:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #define ANALOG_FEEDBACK_FIELD_VALUE_MASK        (0xFFFFu^ANALOG_FEEDBACK_FIELD_THRESHOLD_MASK)
  46:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  47:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  48:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* *************************** */
  49:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Typedef, Structs and Unions */
  50:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* *************************** */
  51:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Analog Feedback channel config. Setting file params */
  52:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** typedef union analogFeedbackLLIparams_tag
  53:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
  54:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint16_t wrd;
  55:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	struct
  56:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	{
  57:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #if defined(__BIT_ORDER_MSB_FIRST__)
  58:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		/* High Byte */
  59:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t automatic:  1;  /* Automatic Readings */
  60:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t unused_0:   4;
  61:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t nRead:      3;  /* Real number of samples is 2^nRead */
  62:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		/* Low Byte */
  63:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t unused_1:   2;  /* the channel is tagged as V line */
  64:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t comp:       1;  /* if '1' measure must be compesated with V ref measure */
  65:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t chDisch:    1;  /* if '1' read V line channel before reading the channel */
  66:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t fal:        4;  /* Filter validation of reading (real number is 2^fal) */
  67:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #else
  68:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		/* High Byte */
  69:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t nRead:      3;  /* Real number of samples is 2^nRead */
  70:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t unused_0:   4;
  71:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t automatic:  1;  /* Automatic Readings */
  72:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		/* Low Byte */
  73:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t fal:        4;  /* Filter validation of reading (real number is 2^fal) */
  74:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t chDisch:    1;  /* if '1' read V line channel before reading the channel */
  75:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t comp:       1;  /* if '1' measure must be compesated with V ref measure */
  76:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		uint8_t unused_1:   2;
  77:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** #endif
  78:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	} bit;
  79:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  80:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** } analogFeedbackLLIparams_t;
  81:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  82:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** dim counter for new analog read */
  83:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** typedef uint8_t AnalogFeedbackCntr_t;
  84:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  85:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** struttura a bit per gestire il feedback analogico i-esimo */
  86:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** typedef struct
  87:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
  88:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	/** se '1' feedback analogico abilitato */
  89:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t analogFeedbackEn:1;
  90:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	/** se '1' reinizializzare misura analog feedback per transizione stato carico */
  91:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t restartMeasure:1;
  92:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
  93:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** } AnalogFeedbackStruct_t;
  94:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** accesso a byte o a bit per variabili di tipo AnalogFeedbackStruct_t  */
  95:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** typedef union
  96:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
  97:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t all;
  98:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedbackStruct_t bit;
  99:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** } AnalogFeedbackUnion_t;
 101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** struttura complessiva per gestire il feedback analogico i-esimo */
 103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** typedef struct
 104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	/** data pointer to analog feedback */
 106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	pAnalogFeedbackData_t pAnalogFeedbackData;
 107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	/** flags */
 108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedbackUnion_t flags;
 109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	/** counter delay for a new read when load change state */
 110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedbackCntr_t analogFeedbackCntr;
 111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	/** ADC channel linked to Analog Feedback */
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t adCh;
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** } AnalogFeedback_t;
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ********* */
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Variables */
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ********* */
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Global */
 121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** Valore dell'analog feedback */
 122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** analogFeedbackValue_t AnalogFeedbackValue[CONFIG_PM_ANALOG_FEEDBACKS_NUM];
 123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** If '1' Analog Feedback in position pos is ready */
 124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** analogFeedbackInfoCmd_t AnalogFeedbackReady;
 125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** If '1' Analog Feedback in position pos is disabled */
 126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** analogFeedbackInfoCmd_t AnalogFeedbackDisable;
 127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** Vettore gestione modulo */
 129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** static AnalogFeedback_t AnalogFeedbackVars[CONFIG_PM_ANALOG_FEEDBACKS_NUM];
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** bitmap indicante gli analog feedback inizializzati (position dependent) */
 131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** static analogFeedbackInfoCmd_t AnalogFeedbackInitializedMask;
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /** bitmap stato dei feedback */
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** analogFeedbackInfoCmd_t InternalAnalogFeedbackReady;
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Static */
 135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ******************* */
 137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Functions Prototype */
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* ******************* */
 139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Exported function */
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Local Function */
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** static analogFeedbackValue_t AnalogFeedbackSearchValue( uint8_t posAnalogFeedback, ADC_ValueType an
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* *************** */
 146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Function Bodies */
 147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* *************** */
 148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Exported function */
 150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n Module's initialization, call this function regardless reset type
 152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \n if SystemMode = SYSTEM_NORMAL_MODE.
 153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackValue[] used as I/O
 155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackReady used as I/O
 156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackDisable used as I/O by External Tools
 157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		03/03/2008
 161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.1
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			\par \b Nota 2:
 166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			13/10/2008 added init. of AnalogFeedbackInitializedMask var.
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** void PM_AnalogFeedback_Init( void )
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
  10                             		.loc 1 171 0
  11 0000 7E A7                   		push.l	r7
  12                             	.LCFI0:
  13                             	.LVL0:
  14 0002 FB 42 00 00 00 00       		mov.L	#_AnalogFeedbackValue, r4
  15 0008 FB E2 04 00 00 00       		mov.L	#_AnalogFeedbackVars+4, r14
  16                             	.LVL1:
  17                             		.balign 2,3,2
  18                             	.L2:
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t i;
 173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	for ( i = 0; i < N_ANALOG_FEEDBACK; i++ )
 175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	{
 176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		AnalogFeedbackValue[i] = (analogFeedbackValue_t)ANALOG_FEEDBACK_INC;
  19                             		.loc 1 176 0 discriminator 2
  20 000e FB 76 FF                		mov	#-1, r7
  21 0011 FD 20 47                		mov.B	r7, [r4+]
 177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		AnalogFeedbackVars[i].flags.all = 0;
  22                             		.loc 1 177 0 discriminator 2
  23 0014 F8 E4 00                		mov.B	#0, [r14]
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		AnalogFeedbackVars[i].analogFeedbackCntr = 0;
  24                             		.loc 1 178 0 discriminator 2
  25 0017 F9 E4 01 00             		mov.B	#0, 1[r14]
 179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		AnalogFeedbackVars[i].adCh = ANALOG_FEEDBACK_NO_ADC_DEFINED;
  26                             		.loc 1 179 0 discriminator 2
  27 001b C7 E7 02                		mov.B	r7, 2[r14]
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** void PM_AnalogFeedback_Init( void )
  28                             		.loc 1 170 0 discriminator 2
  29 001e 71 E3 FC                		add	#-4, r14, r3
 180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		AnalogFeedbackVars[i].pAnalogFeedbackData = NULL;
  30                             		.loc 1 180 0 discriminator 2
  31 0021 3E 30 00                		mov.L	#0, [r3]
  32 0024 62 8E                   		add	#8, r14
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	for ( i = 0; i < N_ANALOG_FEEDBACK; i++ )
  33                             		.loc 1 174 0 discriminator 2
  34 0026 74 04 00 00 00 00       		cmp	#_AnalogFeedbackValue+8, r4
  35 002c 21 E2                   		bne	.L2
 181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	}
 182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedbackReady = (analogFeedbackInfoCmd_t)ANALOG_FEEDBACK_NOT_READY;
  36                             		.loc 1 182 0
  37 002e FB E2 00 00 00 00       		mov.L	#_AnalogFeedbackReady, r14
  38 0034 F8 E4 00                		mov.B	#0, [r14]
 183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	InternalAnalogFeedbackReady = AnalogFeedbackReady;
  39                             		.loc 1 183 0
  40 0037 FB E2 00 00 00 00       		mov.L	#_InternalAnalogFeedbackReady, r14
  41 003d F8 E4 00                		mov.B	#0, [r14]
 184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedbackDisable = (analogFeedbackInfoCmd_t)ANALOG_FEEDBACK_ENABLED;
  42                             		.loc 1 184 0
  43 0040 FB E2 00 00 00 00       		mov.L	#_AnalogFeedbackDisable, r14
  44 0046 F8 E4 00                		mov.B	#0, [r14]
 185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedbackInitializedMask = (analogFeedbackInfoCmd_t)ALL_ANALOG_FEEDBACK_NOT_INIT;
  45                             		.loc 1 185 0
  46 0049 FB E2 00 00 00 00       		mov.L	#_AnalogFeedbackInitializedMask, r14
  47 004f F8 E4 00                		mov.B	#0, [r14]
 186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
  48                             		.loc 1 186 0
  49 0052 3F 77 01                		rtsd	#4, r7-r7
  50                             	.LFE0:
  52 0055 03                      		.section	.text.PM_AnalogFeedback_Setup,"ax",@progbits
  53                             		.global	_PM_AnalogFeedback_Setup
  55                             	_PM_AnalogFeedback_Setup:
  56                             	.LFB1:
 187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Analog feedbacks setup, called inside LIB_IOM_InputInitialization() regardless \n
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** reset's type.
 191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]	chADC_AF A/D channel linked to the analog feedback.
 193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]	pAnalogFeedbackData pointer to Low Level Parameters inside Setting File
 194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackVars used as W
 196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \return 	error enum AnalogFeedbackErr_Tag
 198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		AN_FEEDBACK_E_OK
 200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		AN_FEEDBACK_CH_ADC_NOT_COMPLIANT
 201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval     AN_FEEDBACK_POS_NOT_COMPLIANT
 202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		19/07/2010
 206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.2
 207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		    \par \b Nota 2:
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		    13/10/2008 added management of AnalogFeedbackInitializedMask var.
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		    \par \b Nota 3:
 214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		    19/07/2010 modified data structures to support new micro.
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** enum AnalogFeedbackErr_Tag PM_AnalogFeedback_Setup( uint8_t chADC_AF, pAnalogFeedbackData_t pAnalog
 219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
  57                             		.loc 1 219 0
  58                             	.LVL2:
  59 0000 6E 7C                   		pushm	r7-r12
  60                             	.LCFI1:
  61 0002 CF 1A                   		mov.B	r1, r10
  62 0004 EF 2B                   		mov.L	r2, r11
  63                             	.LVL3:
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedback_t *pAnalogFeedbackVars;
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	enum AnalogFeedbackErr_Tag error = AN_FEEDBACK_E_OK;
 222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t posAnalogFeedback;
 223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		/* posizione all'interno del vettore AnalogInput[] su cui trover� il valore
 225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		   A/D linkato all'analog feedback */
 226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		posAnalogFeedback = LIB_ADC_AnalogChRamPos(chADC_AF);
  64                             		.loc 1 226 0
  65 0006 05 00 00 00             		bsr	_LIB_ADC_AnalogChRamPos
  66                             	.LVL4:
 227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		if (posAnalogFeedback < N_ANALOG_FEEDBACK)
  67                             		.loc 1 227 0
  68 000a 5B 17                   		movu.B	r1, r7
  69 000c 61 77                   		cmp	#7, r7
  70 000e 24 3E                   		bgtu	.L8
 228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		{
 229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			pAnalogFeedbackVars = &AnalogFeedbackVars[posAnalogFeedback];
  71                             		.loc 1 229 0
  72 0010 FD C3 7E                		shll	#3, r7, r14
  73 0013 70 EE 00 00 00 00       		add	#_AnalogFeedbackVars, r14
  74                             	.LVL5:
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			/* Save pointer to the configuration params */
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			pAnalogFeedbackVars->pAnalogFeedbackData = pAnalogFeedbackData;
  75                             		.loc 1 231 0
  76 0019 E3 EB                   		mov.L	r11, [r14]
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			/* Save ADC channel linked to Analog Feedback */
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			pAnalogFeedbackVars->adCh = chADC_AF;
  77                             		.loc 1 233 0
  78 001b C7 EA 06                		mov.B	r10, 6[r14]
 234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			/* check se lettura auto */
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			if ( ((analogFeedbackLLIparams_t*)pAnalogFeedbackData)->bit.automatic)
  79                             		.loc 1 235 0
  80 001e DC BB                   		mov.W	[r11], r11
  81                             	.LVL6:
  82 0020 77 2B 00 80 00          		and #0x8000, r11
  83 0025 5F BB                   		movu.W	r11, r11
  84 0027 61 0B                   		cmp	#0, r11
  85 0029 20 11                   		beq	.L7
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			{
 237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				pAnalogFeedbackVars->flags.bit.analogFeedbackEn = 1;
  86                             		.loc 1 237 0
  87 002b CD EB 04                		mov.B	4[r14], r11
  88 002e 78 7B                   		bset	#7, r11
  89 0030 C7 EB 04                		mov.B	r11, 4[r14]
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				/* Inizializzazione della misura per l'analogico linkato */
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				LIB_ADC_InitMeasureForCh ( chADC_AF );
  90                             		.loc 1 239 0
  91 0033 CF A1                   		mov.B	r10, r1
  92                             	.LVL7:
  93 0035 05 00 00 00             		bsr	_LIB_ADC_InitMeasureForCh
  94                             	.LVL8:
  95 0039 03                      		.balign 2,3,5
  96                             	.L7:
 240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			}
 241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			AnalogFeedbackInitializedMask |= (analogFeedbackInfoCmd_t)(1u<<posAnalogFeedback);
  97                             		.loc 1 241 0
  98 003a FB A2 00 00 00 00       		mov.L	#_AnalogFeedbackInitializedMask, r10
  99                             	.LVL9:
 100 0040 CC AB                   		mov.B	[r10], r11
 101 0042 EF BC                   		mov.L	r11, r12
 102 0044 FC 63 C7                		bset	r7, r12
 103 0047 C3 AC                   		mov.B	r12, [r10]
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	enum AnalogFeedbackErr_Tag error = AN_FEEDBACK_E_OK;
 104                             		.loc 1 221 0
 105 0049 66 01                   		mov.L	#0, r1
 106 004b 0B                      		bra	.L6
 107                             	.LVL10:
 108                             	.L8:
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		}
 243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		else
 244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		{
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			error = AN_FEEDBACK_POS_NOT_COMPLIANT;
 109                             		.loc 1 245 0
 110 004c 66 21                   		mov.L	#2, r1
 111                             	.LVL11:
 112                             		.balign 2,3,2
 113                             	.L6:
 246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		}
 247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	
 248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return error;
 249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 114                             		.loc 1 249 0
 115 004e 3F 7C 06                		rtsd	#24, r7-r12
 116                             	.LFE1:
 118 0051 03                      		.section	.text.PM_AnalogFeedbackManager,"ax",@progbits
 119                             		.global	_PM_AnalogFeedbackManager
 121                             	_PM_AnalogFeedbackManager:
 122                             	.LFB2:
 250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Per tutti gli analogfeedback abilitati controlla se la misura analogica corrispondente \n
 252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** � pronta ed in caso affermativo esegue la conversione in base ad una tabella presente \n
 253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** nel file di setting.\n
 254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Chiamata in Task_AnalogChannels.
 255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** For all analogfeedbacks enabled, controls whether analog measurement corresponding \ n
 256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** is ready and if so, does the conversion on the basis of a table in the settings file. \ n
 257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Called inside Task AnalogChannels.
 258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackVars used as I
 261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackDisable used as I
 262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackValue[] used as I/O
 263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackReady used as I/O
 264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b InternalAnalogFeedbackReady used as I/O
 265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		18/09/2008
 269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.1
 270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** void PM_AnalogFeedbackManager( void )
 277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 123                             		.loc 1 277 0
 124 0000 6E 7D                   		pushm	r7-r13
 125                             	.LCFI2:
 126                             	.LVL12:
 127 0002 FB 72 05 00 00 00       		mov.L	#_AnalogFeedbackVars+5, r7
 128                             		.loc 1 277 0
 129 0008 66 0A                   		mov.L	#0, r10
 278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t posAnalogFeedback;
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	ADC_ValueType analogMeasure;
 280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	AnalogFeedback_t *pAnalogFeedbackVars = &AnalogFeedbackVars[0];
 281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	for ( posAnalogFeedback = 0; posAnalogFeedback < N_ANALOG_FEEDBACK; posAnalogFeedback ++ )
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	{
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		if ( pAnalogFeedbackVars->flags.bit.analogFeedbackEn )
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		{
 286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			/* feedback analogico abilitato */
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			if ( pAnalogFeedbackVars->analogFeedbackCntr != 0 )
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			{
 289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				/* c'� stata una richiesta di restart della misura dopo lo scadere
 290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				   di analogFeedbackCntr */
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				pAnalogFeedbackVars->analogFeedbackCntr--;
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				pAnalogFeedbackVars->flags.bit.restartMeasure = 1;
 293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			}
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			else
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			{
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				if ( pAnalogFeedbackVars->flags.bit.restartMeasure == 1 )
 297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				{
 298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					/* Reinizializza misura sul canale ADC linkato */
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					LIB_ADC_InitMeasureForCh ( pAnalogFeedbackVars->adCh );
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					pAnalogFeedbackVars->flags.bit.restartMeasure = 0;
 301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				}
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				if ( LIB_ADC_IsNoAutoMeasureReady( pAnalogFeedbackVars->adCh ) )
 303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				{
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					if ( !( AnalogFeedbackDisable & (1u<<(posAnalogFeedback)) ) )
 130                             		.loc 1 304 0
 131 000a FB D2 00 00 00 00       		mov.L	#_AnalogFeedbackDisable, r13
 305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					{
 306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 						/* aggiorna valore solo se abilitato da tools esterni */
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 						analogMeasure = LIB_ADC_GetAnalogValue(posAnalogFeedback);
 308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 						AnalogFeedbackValue[posAnalogFeedback] = AnalogFeedbackSearchValue(posAnalogFeedback,analogMe
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 						AnalogFeedbackReady |= (analogFeedbackInfoCmd_t)(1u<<posAnalogFeedback);
 310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					}
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					InternalAnalogFeedbackReady |= (analogFeedbackInfoCmd_t)(1u<<posAnalogFeedback);
 132                             		.loc 1 311 0
 133 0010 FB C2 00 00 00 00       		mov.L	#_InternalAnalogFeedbackReady, r12
 134                             	.LVL13:
 135                             		.balign 2,3,1
 136                             	.L21:
 137 0016 CF A9                   		mov.B	r10, r9
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** void PM_AnalogFeedbackManager( void )
 138                             		.loc 1 276 0
 139 0018 71 7B FB                		add	#-5, r7, r11
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		if ( pAnalogFeedbackVars->flags.bit.analogFeedbackEn )
 140                             		.loc 1 284 0
 141 001b ED BE 01                		mov.L	4[r11], r14
 142 001e 61 0E                   		cmp	#0, r14
 143 0020 29 05 38 84 00          		bge	.L15
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			if ( pAnalogFeedbackVars->analogFeedbackCntr != 0 )
 144                             		.loc 1 287 0
 145 0025 CC 74                   		mov.B	[r7], r4
 146 0027 5B 43                   		movu.B	r4, r3
 147 0029 61 03                   		cmp	#0, r3
 148 002b 20 10                   		beq	.L16
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				pAnalogFeedbackVars->analogFeedbackCntr--;
 149                             		.loc 1 291 0
 150 002d 60 14                   		sub	#1, r4
 151 002f C3 74                   		mov.B	r4, [r7]
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				pAnalogFeedbackVars->flags.bit.restartMeasure = 1;
 152                             		.loc 1 292 0
 153 0031 CD BE 04                		mov.B	4[r11], r14
 154 0034 78 6E                   		bset	#6, r14
 155 0036 C7 BE 04                		mov.B	r14, 4[r11]
 156 0039 2E 6D                   		bra	.L15
 157                             	.L16:
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				if ( pAnalogFeedbackVars->flags.bit.restartMeasure == 1 )
 158                             		.loc 1 296 0
 159 003b 7D EE                   		btst #30, r14
 160 003d 20 11                   		beq	.L17
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					LIB_ADC_InitMeasureForCh ( pAnalogFeedbackVars->adCh );
 161                             		.loc 1 299 0
 162 003f 88 79                   		mov.B	1[r7], r1
 163 0041 05 00 00 00             		bsr	_LIB_ADC_InitMeasureForCh
 164                             	.LVL14:
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					pAnalogFeedbackVars->flags.bit.restartMeasure = 0;
 165                             		.loc 1 300 0
 166 0045 CD BE 04                		mov.B	4[r11], r14
 167 0048 7A 6E                   		bclr	#6, r14
 168 004a C7 BE 04                		mov.B	r14, 4[r11]
 169 004d 03                      		.balign 2,3,5
 170                             	.L17:
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				if ( LIB_ADC_IsNoAutoMeasureReady( pAnalogFeedbackVars->adCh ) )
 171                             		.loc 1 302 0
 172 004e 88 79                   		mov.B	1[r7], r1
 173 0050 05 00 00 00             		bsr	_LIB_ADC_IsNoAutoMeasureReady
 174                             	.LVL15:
 175 0054 61 01                   		cmp	#0, r1
 176 0056 20 50                   		beq	.L15
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					if ( !( AnalogFeedbackDisable & (1u<<(posAnalogFeedback)) ) )
 177                             		.loc 1 304 0
 178 0058 58 DB                   		movu.B	[r13], r11
 179 005a FC 6B BA                		btst	r10, r11
 180 005d 21 3F                   		bne	.L19
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 						analogMeasure = LIB_ADC_GetAnalogValue(posAnalogFeedback);
 181                             		.loc 1 307 0
 182 005f CF 91                   		mov.B	r9, r1
 183 0061 05 00 00 00             		bsr	_LIB_ADC_GetAnalogValue
 184                             	.LVL16:
 185                             	.LBB6:
 186                             	.LBB7:
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** void PM_AnalogFeedbackManager( void )
 187                             		.loc 1 276 0
 188 0065 71 7B FB                		add	#-5, r7, r11
 189                             	.LBE7:
 190                             	.LBE6:
 191 0068 EC BB                   		mov.L	[r11], r11
 192 006a 62 4B                   		add	#4, r11
 193                             	.LBB9:
 194                             	.LBB8:
 312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					LIB_ADC_InitMeasureForCh ( pAnalogFeedbackVars->adCh );
 314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				}
 315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			}
 316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		}
 317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		pAnalogFeedbackVars++;
 318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	}
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Returns TRUE if the analog feedback in position "posAnalogFeedback" was acquired
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** at least once.
 323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]		posAnalogFeedback analog feedback position
 325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackReady used as I
 327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \return 	bool_t
 329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		TRUE -> analog feedback ready
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		FALSE -> analog feedback not ready
 332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		04/03/2008
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.0
 337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			\par \b Nota 2:
 343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		    This function is for the exclusive use of the application
 344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** bool_t PM_AnalogFeedbackValueReady( uint8_t posAnalogFeedback )
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(bool_t)( ( ( AnalogFeedbackReady & ( 1u << posAnalogFeedback ) )?TRUE:FALSE) );
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Returns TRUE if the analog feedback in position "posAnalogFeedback" was acquired.
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]	posAnalogFeedback analog feedback position
 355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b InternalAnalogFeedbackReady used as I
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \return 	bool_t
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		TRUE -> analog feedback ready
 361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		FALSE -> analog feedback not ready
 362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		07/03/2008
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.0
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** bool_t PM_AnalogFeedbackIsReady( uint8_t posAnalogFeedback )
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(bool_t)( ( ( InternalAnalogFeedbackReady & ( 1 << posAnalogFeedback ) )?TRUE:FALSE) );
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Returns TRUE if all analog feedbacks enabled were acquired at least once.
 378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackVars[] used as I
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \return 	bool_t
 382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		TRUE -> all analog feedback ready
 384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		FALSE -> at least one analog feedback is not ready
 385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		07/03/2008
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.0
 390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** bool_t PM_AnalogFeedbackAllValuesReady ( void )
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	uint8_t posAnalogFeedback;
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	for ( posAnalogFeedback = 0; posAnalogFeedback < N_ANALOG_FEEDBACK; posAnalogFeedback ++ )
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	{
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		if ( AnalogFeedbackVars[posAnalogFeedback].flags.bit.analogFeedbackEn )
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		{
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			if ( PM_AnalogFeedbackValueReady(posAnalogFeedback) == FALSE )
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			{
 407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 				return FALSE;
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			}
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		}
 410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	}
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return TRUE;
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Returns the analog feedback value in position "posAnalogFeedback".
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]	posAnalogFeedback analog feedback position
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackValue[] used as I
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \return 	analogFeedbackValue_t
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		04/03/2008
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.0
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** analogFeedbackValue_t PM_AnalogFeedbackGetValue( uint8_t posAnalogFeedback )
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(AnalogFeedbackValue[posAnalogFeedback]);
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** The function is called by the module consistency  each time the load state, \n
 438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** which is linked to the analog feedback, varies. \n
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Is sought, within the parameters associated with the module, the timeout value
 440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** before retry consistency. \n
 441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]	posAnalogFeedback positionl of the analog feedback linked to the load
 443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackVars[] used as I/O
 445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		10/03/2008
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.0
 450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** void PM_AnalogFeedbackResetMeasure( uint8_t posAnalogFeedback )
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	if ( posAnalogFeedback < N_ANALOG_FEEDBACK )
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	{
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		AnalogFeedbackVars[posAnalogFeedback].analogFeedbackCntr = *((uint8_t*)(AnalogFeedbackVars[posAna
 462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		/* Inibisce a Consistency di processare il feedback */
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		InternalAnalogFeedbackReady &= (analogFeedbackInfoCmd_t)(~( 1u << posAnalogFeedback ));
 464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	}
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Returns, as bit mask, the used elements inside AnalogFeedbackValue[] vector\n
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** E.g.:\n
 469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Bit Position                     7,6,5,4,3,2,1,0 \n
 470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** AnalogFeedbackInitializedMask = [0,0,1,1,0,1,0,0]\n
 471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** AnalogFeedbackValue[2],AnalogFeedbackValue[4],AnalogFeedbackValue[5] used.
 472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackInitializedMask used as R
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \return 	analogFeedbackInfoCmd_t
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		AnalogFeedbackInitializedMask
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		13/10/2008
 482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.0
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** analogFeedbackInfoCmd_t AnalogFeedbackGetMaskAnalogF_Enabled( void )
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return (AnalogFeedbackInitializedMask);
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /* Local Function */
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** /**
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** Fixed L.L.I parameters and the A/D measure of the channel linked to the feedback\n
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** decides the analog feedback value.
 498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]		ch A/D channel linked to the feedback
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \param  [in]		analogMeasure A/D measure
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \attention \b AnalogFeedbackVars used as I
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \return 	analogFeedbackValue_t
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \retval		dipendente da tabella
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \author 	Stefano Ughi
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \date		04/03/2008
 511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \version	1.0.0
 512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \warning    vale solo per risoluzione dell'A/D converter pari a 10
 514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** \note		\par \b Nota 1:
 516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			documentation by Stefano Ughi
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** */
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** static analogFeedbackValue_t AnalogFeedbackSearchValue( uint8_t posAnalogFeedback, ADC_ValueType an
 521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	static uint16_t *pSoglia;
 523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	analogFeedbackValue_t analogFeedbackValue;
 524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	pSoglia = (uint16_t*)AnalogFeedbackVars[posAnalogFeedback].pAnalogFeedbackData+1;
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	do
 528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	{
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		pSoglia++;
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	}
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	while( analogMeasure > (*pSoglia&ANALOG_FEEDBACK_FIELD_THRESHOLD_MASK) );
 195                             		.loc 1 532 0
 196 006c 5F 11                   		movu.W	r1, r1
 197                             		.balign 2,3,1
 198                             	.L20:
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		pSoglia++;
 199                             		.loc 1 529 0
 200 006e EF B4                   		mov.L	r11, r4
 201                             		.loc 1 532 0
 202 0070 FD 29 BE                		mov.W	[r11+], r14
 203 0073 EF E3                   		mov.L	r14, r3
 204 0075 76 23 FF 03             		and #0x3ff, r3
 205 0079 47 31                   		cmp	r3, r1
 206 007b 24 F3                   		bgtu	.L20
 207 007d FB B2 00 00 00 00       		mov.L	#_pSoglia.10099, r11
 208 0083 E3 B4                   		mov.L	r4, [r11]
 209                             	.LVL17:
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	analogFeedbackValue = (analogFeedbackValue_t)((*(pSoglia)&ANALOG_FEEDBACK_FIELD_VALUE_MASK)>>10);
 210                             		.loc 1 534 0
 211 0085 5F EE                   		movu.W	r14, r14
 212 0087 68 AE                   		shlr	#10, r14
 213                             	.LVL18:
 214 0089 FB B2 00 00 00 00       		mov.L	#_AnalogFeedbackValue, r11
 215 008f FE 0A BE                		mov.B	r14, [r10,r11]
 216                             	.LBE8:
 217                             	.LBE9:
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 						AnalogFeedbackReady |= (analogFeedbackInfoCmd_t)(1u<<posAnalogFeedback);
 218                             		.loc 1 309 0
 219 0092 FB B2 00 00 00 00       		mov.L	#_AnalogFeedbackReady, r11
 220 0098 FC 60 BA                		bset	r10, [r11].B
 221                             	.LVL19:
 222 009b 03                      		.balign 2,3,2
 223                             	.L19:
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					InternalAnalogFeedbackReady |= (analogFeedbackInfoCmd_t)(1u<<posAnalogFeedback);
 224                             		.loc 1 311 0
 225 009c FC 60 CA                		bset	r10, [r12].B
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 					LIB_ADC_InitMeasureForCh ( pAnalogFeedbackVars->adCh );
 226                             		.loc 1 313 0
 227 009f 88 79                   		mov.B	1[r7], r1
 228 00a1 05 00 00 00             		bsr	_LIB_ADC_InitMeasureForCh
 229                             	.LVL20:
 230 00a5 03                      		.balign 2,3,1
 231                             	.L15:
 232 00a6 62 1A                   		add	#1, r10
 233 00a8 62 87                   		add	#8, r7
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	for ( posAnalogFeedback = 0; posAnalogFeedback < N_ANALOG_FEEDBACK; posAnalogFeedback ++ )
 234                             		.loc 1 282 0
 235 00aa 61 8A                   		cmp	#8, r10
 236 00ac 3B 6A FF                		bne	.L21
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 237                             		.loc 1 319 0
 238 00af 3F 7D 07                		rtsd	#28, r7-r13
 239                             	.LFE2:
 241                             		.section	.text.PM_AnalogFeedbackValueReady,"ax",@progbits
 242                             		.global	_PM_AnalogFeedbackValueReady
 244                             	_PM_AnalogFeedbackValueReady:
 245                             	.LFB3:
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 246                             		.loc 1 348 0
 247                             	.LVL21:
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(bool_t)( ( ( AnalogFeedbackReady & ( 1u << posAnalogFeedback ) )?TRUE:FALSE) );
 248                             		.loc 1 349 0
 249 0000 FB E2 00 00 00 00       		mov.L	#_AnalogFeedbackReady, r14
 250 0006 58 EE                   		movu.B	[r14], r14
 251 0008 5B 11                   		movu.B	r1, r1
 252 000a FD 60 1E                		shlr	r1, r14
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 253                             		.loc 1 350 0
 254 000d EF E1                   		mov.L	r14, r1
 255                             	.LVL22:
 256 000f 64 11                   		and #1, r1
 257 0011 02                      		rts
 258                             	.LFE3:
 260                             		.section	.text.PM_AnalogFeedbackIsReady,"ax",@progbits
 261                             		.global	_PM_AnalogFeedbackIsReady
 263                             	_PM_AnalogFeedbackIsReady:
 264                             	.LFB4:
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 265                             		.loc 1 373 0
 266                             	.LVL23:
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(bool_t)( ( ( InternalAnalogFeedbackReady & ( 1 << posAnalogFeedback ) )?TRUE:FALSE) );
 267                             		.loc 1 374 0
 268 0000 FB E2 00 00 00 00       		mov.L	#_InternalAnalogFeedbackReady, r14
 269 0006 58 EE                   		movu.B	[r14], r14
 270 0008 5B 11                   		movu.B	r1, r1
 271 000a FD 61 1E                		shar	r1, r14
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 272                             		.loc 1 375 0
 273 000d EF E1                   		mov.L	r14, r1
 274                             	.LVL24:
 275 000f 64 11                   		and #1, r1
 276 0011 02                      		rts
 277                             	.LFE4:
 279                             		.section	.text.PM_AnalogFeedbackAllValuesReady,"ax",@progbits
 280                             		.global	_PM_AnalogFeedbackAllValuesReady
 282                             	_PM_AnalogFeedbackAllValuesReady:
 283                             	.LFB5:
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 284                             		.loc 1 398 0
 285                             	.LVL25:
 286                             	.LBB10:
 287                             	.LBB11:
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(bool_t)( ( ( AnalogFeedbackReady & ( 1u << posAnalogFeedback ) )?TRUE:FALSE) );
 288                             		.loc 1 349 0
 289 0000 FB E2 00 00 00 00       		mov.L	#_AnalogFeedbackReady, r14
 290 0006 58 E4                   		movu.B	[r14], r4
 291 0008 66 0E                   		mov.L	#0, r14
 292                             	.LVL26:
 293                             		.balign 2,3,2
 294                             	.L36:
 295                             	.LBE11:
 296                             	.LBE10:
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		if ( AnalogFeedbackVars[posAnalogFeedback].flags.bit.analogFeedbackEn )
 297                             		.loc 1 403 0
 298 000a FD C3 E3                		shll	#3, r14, r3
 299 000d 70 33 00 00 00 00       		add	#_AnalogFeedbackVars, r3
 300 0013 A8 3B                   		mov.L	4[r3], r3
 301 0015 61 03                   		cmp	#0, r3
 302 0017 28 0B                   		bge	.L34
 303                             	.LBB13:
 304                             	.LBB12:
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(bool_t)( ( ( AnalogFeedbackReady & ( 1u << posAnalogFeedback ) )?TRUE:FALSE) );
 305                             		.loc 1 349 0
 306 0019 EF 41                   		mov.L	r4, r1
 307 001b FD 60 E1                		shlr	r14, r1
 308 001e 64 11                   		and	#1, r1
 309                             	.LBE12:
 310                             	.LBE13:
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 			if ( PM_AnalogFeedbackValueReady(posAnalogFeedback) == FALSE )
 311                             		.loc 1 405 0
 312 0020 12                      		beq	.L35
 313 0021 03                      		.balign 2,3,1
 314                             	.L34:
 315 0022 62 1E                   		add	#1, r14
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	for ( posAnalogFeedback = 0; posAnalogFeedback < N_ANALOG_FEEDBACK; posAnalogFeedback ++ )
 316                             		.loc 1 401 0
 317 0024 61 8E                   		cmp	#8, r14
 318 0026 21 E4                   		bne	.L36
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return TRUE;
 319                             		.loc 1 411 0
 320 0028 66 11                   		mov.L	#1, r1
 321                             	.L35:
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 322                             		.loc 1 412 0
 323 002a 02                      		rts
 324                             	.LFE5:
 326 002b 03                      		.section	.text.PM_AnalogFeedbackGetValue,"ax",@progbits
 327                             		.global	_PM_AnalogFeedbackGetValue
 329                             	_PM_AnalogFeedbackGetValue:
 330                             	.LFB6:
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 331                             		.loc 1 433 0
 332                             	.LVL27:
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	return(AnalogFeedbackValue[posAnalogFeedback]);
 333                             		.loc 1 434 0
 334 0000 5B 11                   		movu.B	r1, r1
 335 0002 70 11 00 00 00 00       		add	#_AnalogFeedbackValue, r1
 336                             	.LVL28:
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 337                             		.loc 1 435 0
 338 0008 58 11                   		movu.B	[r1], r1
 339                             	.LVL29:
 340 000a 02                      		rts
 341                             	.LFE6:
 343                             		.section	.text.PM_AnalogFeedbackResetMeasure,"ax",@progbits
 344                             		.global	_PM_AnalogFeedbackResetMeasure
 346                             	_PM_AnalogFeedbackResetMeasure:
 347                             	.LFB7:
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 348                             		.loc 1 458 0
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 	if ( posAnalogFeedback < N_ANALOG_FEEDBACK )
 349                             		.loc 1 459 0
 350 0000 5B 11                   		movu.B	r1, r1
 351 0002 61 71                   		cmp	#7, r1
 352 0004 24 20                   		bgtu	.L46
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 353                             		.loc 1 458 0
 354 0006 7E A7                   		push.l	r7
 355                             	.LCFI3:
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		AnalogFeedbackVars[posAnalogFeedback].analogFeedbackCntr = *((uint8_t*)(AnalogFeedbackVars[posAna
 356                             		.loc 1 461 0
 357 0008 FD C3 1E                		shll	#3, r1, r14
 358 000b 70 EE 00 00 00 00       		add	#_AnalogFeedbackVars, r14
 359 0011 FD 2A E4                		mov.L	[r14+], r4
 360 0014 C5 4E 02 01             		mov.B	2[r4], 1[r14]
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** 		InternalAnalogFeedbackReady &= (analogFeedbackInfoCmd_t)(~( 1u << posAnalogFeedback ));
 361                             		.loc 1 463 0
 362 0018 FB 42 00 00 00 00       		mov.L	#_InternalAnalogFeedbackReady, r4
 363 001e FC 64 41                		bclr	r1, [r4].B
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 364                             		.loc 1 465 0
 365 0021 3F 77 01                		rtsd	#4, r7-r7
 366                             	.L46:
 367                             	.LCFI4:
 368 0024 02                      		rts
 369                             	.LFE7:
 371                             		.section	.text.AnalogFeedbackGetMaskAnalogF_Enabled,"ax",@progbits
 372                             		.global	_AnalogFeedbackGetMaskAnalogF_Enabled
 374                             	_AnalogFeedbackGetMaskAnalogF_Enabled:
 375                             	.LFB8:
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** {
 376                             		.loc 1 490 0
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks\PM_AnalogFeedback.c **** }
 377                             		.loc 1 492 0
 378 0000 FB E2 00 00 00 00       		mov.L	#_AnalogFeedbackInitializedMask, r14
 379 0006 58 E1                   		movu.B	[r14], r1
 380 0008 02                      		rts
 381                             	.LFE8:
 383                             		.comm	_InternalAnalogFeedbackReady,1,1
 384                             		.comm	_AnalogFeedbackDisable,1,1
 385                             		.comm	_AnalogFeedbackReady,1,1
 386                             		.comm	_AnalogFeedbackValue,8,1
 387                             		.section	.bss.AnalogFeedbackVars,"aw",@nobits
 388                             		.balign 4
 391                             	_AnalogFeedbackVars:
 392 0000 00 00 00 00 00 00 00 00 		.zero	64
 392      00 00 00 00 00 00 00 00 
 392      00 00 00 00 00 00 00 00 
 392      00 00 00 00 00 00 00 00 
 392      00 00 00 00 00 00 00 00 
 393                             		.section	.bss.AnalogFeedbackInitializedMask,"aw",@nobits
 396                             	_AnalogFeedbackInitializedMask:
 397 0000 00                      		.zero	1
 398                             		.section	.bss.pSoglia.10099,"aw",@nobits
 399                             		.balign 4
 402                             	_pSoglia.10099:
 403 0000 00 00 00 00             		.zero	4
 545                             	.Letext0:
 546                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 547                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers\\OCADC/OCADC_drv.h"
 548                             		.file 4 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks/PM_AnalogFeedbac
 549                             		.file 5 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_AnalogFeedbacks/PM_AnalogFeedbac
 550                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Analog/Analog.h"
 551                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Analog/AnalogExp.h"
DEFINED SYMBOLS
                            *ABS*:00000000 PM_AnalogFeedback.c
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:7      .text.PM_AnalogFeedback_Init:00000000 _PM_AnalogFeedback_Init
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:11     .text.PM_AnalogFeedback_Init:00000000 L0
                            *COM*:00000008 _AnalogFeedbackValue
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:391    .bss.AnalogFeedbackVars:00000000 _AnalogFeedbackVars
                            *COM*:00000001 _AnalogFeedbackReady
                            *COM*:00000001 _InternalAnalogFeedbackReady
                            *COM*:00000001 _AnalogFeedbackDisable
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:396    .bss.AnalogFeedbackInitializedMask:00000000 _AnalogFeedbackInitializedMask
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:55     .text.PM_AnalogFeedback_Setup:00000000 _PM_AnalogFeedback_Setup
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:59     .text.PM_AnalogFeedback_Setup:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:121    .text.PM_AnalogFeedbackManager:00000000 _PM_AnalogFeedbackManager
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:124    .text.PM_AnalogFeedbackManager:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:402    .bss.pSoglia.10099:00000000 _pSoglia.10099
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:244    .text.PM_AnalogFeedbackValueReady:00000000 _PM_AnalogFeedbackValueReady
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:249    .text.PM_AnalogFeedbackValueReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:263    .text.PM_AnalogFeedbackIsReady:00000000 _PM_AnalogFeedbackIsReady
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:268    .text.PM_AnalogFeedbackIsReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:282    .text.PM_AnalogFeedbackAllValuesReady:00000000 _PM_AnalogFeedbackAllValuesReady
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:289    .text.PM_AnalogFeedbackAllValuesReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:329    .text.PM_AnalogFeedbackGetValue:00000000 _PM_AnalogFeedbackGetValue
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:334    .text.PM_AnalogFeedbackGetValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:346    .text.PM_AnalogFeedbackResetMeasure:00000000 _PM_AnalogFeedbackResetMeasure
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:350    .text.PM_AnalogFeedbackResetMeasure:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:374    .text.AnalogFeedbackGetMaskAnalogF_Enabled:00000000 _AnalogFeedbackGetMaskAnalogF_Enabled
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:378    .text.AnalogFeedbackGetMaskAnalogF_Enabled:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:405    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:8      .text.PM_AnalogFeedback_Init:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:56     .text.PM_AnalogFeedback_Setup:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:122    .text.PM_AnalogFeedbackManager:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:245    .text.PM_AnalogFeedbackValueReady:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:264    .text.PM_AnalogFeedbackIsReady:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:283    .text.PM_AnalogFeedbackAllValuesReady:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:330    .text.PM_AnalogFeedbackGetValue:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:347    .text.PM_AnalogFeedbackResetMeasure:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:375    .text.AnalogFeedbackGetMaskAnalogF_Enabled:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:1312   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2409   .debug_str:00000000 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2507   .debug_str:0000035d .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2367   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2407   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2423   .debug_str:00000099 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2479   .debug_str:0000024f .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2487   .debug_str:00000299 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2513   .debug_str:000003d8 .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2453   .debug_str:00000177 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2473   .debug_str:00000211 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2449   .debug_str:0000015f .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2439   .debug_str:0000012a .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2463   .debug_str:000001c4 .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2469   .debug_str:000001ff .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2495   .debug_str:000002e4 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2477   .debug_str:00000242 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2531   .debug_str:000004aa .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2491   .debug_str:000002c8 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2501   .debug_str:0000031a .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2499   .debug_str:00000302 .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2527   .debug_str:00000483 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2509   .debug_str:000003ba .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2529   .debug_str:00000499 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2521   .debug_str:0000042b .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2515   .debug_str:000003ea .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2545   .debug_str:0000053b .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2451   .debug_str:0000016d .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2441   .debug_str:00000132 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2457   .debug_str:0000018e .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2443   .debug_str:0000013b .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2411   .debug_str:00000026 .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2427   .debug_str:000000b4 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2489   .debug_str:000002ac .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2475   .debug_str:00000228 .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2467   .debug_str:000001ea .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2425   .debug_str:000000a3 .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2517   .debug_str:00000408 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2523   .debug_str:0000044c .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2459   .debug_str:00000194 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2483   .debug_str:0000026c .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2471   .debug_str:0000020b .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2533   .debug_str:000004b3 .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2445   .debug_str:00000144 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2435   .debug_str:000000ff .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2419   .debug_str:00000066 .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2433   .debug_str:000000ed .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2421   .debug_str:00000082 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:50     .text.PM_AnalogFeedback_Init:00000055 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2050   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2063   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2465   .debug_str:000001d2 .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:116    .text.PM_AnalogFeedback_Setup:00000051 .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2071   .debug_loc:00000034 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2415   .debug_str:0000003f .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2084   .debug_loc:00000054 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2113   .debug_loc:00000099 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2519   .debug_str:00000417 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2147   .debug_loc:000000ea .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2535   .debug_str:000004c6 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2165   .debug_loc:00000112 .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2177   .debug_loc:00000131 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:66     .text.PM_AnalogFeedback_Setup:0000000a .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:94     .text.PM_AnalogFeedback_Setup:00000039 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2437   .debug_str:00000110 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2455   .debug_str:00000180 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2511   .debug_str:000003d0 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2429   .debug_str:000000bc .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2505   .debug_str:00000344 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:239    .text.PM_AnalogFeedbackManager:000000b2 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2196   .debug_loc:00000165 .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2209   .debug_loc:00000185 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2217   .debug_loc:00000199 .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2224   .debug_loc:000001ac .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:185    .text.PM_AnalogFeedbackManager:00000065 .LBB6
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2233   .debug_loc:000001c4 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2240   .debug_loc:000001d7 .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:164    .text.PM_AnalogFeedbackManager:00000045 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:174    .text.PM_AnalogFeedbackManager:00000054 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:184    .text.PM_AnalogFeedbackManager:00000065 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:229    .text.PM_AnalogFeedbackManager:000000a5 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:258    .text.PM_AnalogFeedbackValueReady:00000012 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2261   .debug_loc:000001ff .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2485   .debug_str:00000280 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:277    .text.PM_AnalogFeedbackIsReady:00000012 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2275   .debug_loc:00000220 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2525   .debug_str:00000463 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:324    .text.PM_AnalogFeedbackAllValuesReady:0000002b .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2289   .debug_loc:00000241 .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:286    .text.PM_AnalogFeedbackAllValuesReady:00000000 .LBB10
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2461   .debug_str:000001aa .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:341    .text.PM_AnalogFeedbackGetValue:0000000b .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2297   .debug_loc:00000255 .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2539   .debug_str:000004df .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:369    .text.PM_AnalogFeedbackResetMeasure:00000025 .LFE7
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2320   .debug_loc:00000289 .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2543   .debug_str:00000516 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:381    .text.AnalogFeedbackGetMaskAnalogF_Enabled:00000009 .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2537   .debug_str:000004cc .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2417   .debug_str:00000048 .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2481   .debug_str:00000258 .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2413   .debug_str:0000002b .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2447   .debug_str:00000149 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2503   .debug_str:00000328 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2493   .debug_str:000002cd .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2541   .debug_str:000004fd .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2431   .debug_str:000000d0 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:2497   .debug_str:000002eb .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:12     .text.PM_AnalogFeedback_Init:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:13     .text.PM_AnalogFeedback_Init:00000002 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:16     .text.PM_AnalogFeedback_Init:0000000e .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:60     .text.PM_AnalogFeedback_Setup:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:58     .text.PM_AnalogFeedback_Setup:00000000 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:99     .text.PM_AnalogFeedback_Setup:00000040 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:107    .text.PM_AnalogFeedback_Setup:0000004c .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:111    .text.PM_AnalogFeedback_Setup:0000004e .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:81     .text.PM_AnalogFeedback_Setup:00000020 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:74     .text.PM_AnalogFeedback_Setup:00000019 .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:63     .text.PM_AnalogFeedback_Setup:00000006 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:92     .text.PM_AnalogFeedback_Setup:00000035 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:125    .text.PM_AnalogFeedbackManager:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:126    .text.PM_AnalogFeedbackManager:00000002 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:134    .text.PM_AnalogFeedbackManager:00000016 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:221    .text.PM_AnalogFeedbackManager:0000009b .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:209    .text.PM_AnalogFeedbackManager:00000085 .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:213    .text.PM_AnalogFeedbackManager:00000089 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:247    .text.PM_AnalogFeedbackValueReady:00000000 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:255    .text.PM_AnalogFeedbackValueReady:0000000f .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:266    .text.PM_AnalogFeedbackIsReady:00000000 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:274    .text.PM_AnalogFeedbackIsReady:0000000f .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:285    .text.PM_AnalogFeedbackAllValuesReady:00000000 .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:292    .text.PM_AnalogFeedbackAllValuesReady:0000000a .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:332    .text.PM_AnalogFeedbackGetValue:00000000 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:336    .text.PM_AnalogFeedbackGetValue:00000008 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:339    .text.PM_AnalogFeedbackGetValue:0000000a .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:355    .text.PM_AnalogFeedbackResetMeasure:00000008 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:367    .text.PM_AnalogFeedbackResetMeasure:00000024 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:553    .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:190    .text.PM_AnalogFeedbackManager:00000068 .LBE6
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:193    .text.PM_AnalogFeedbackManager:0000006c .LBB9
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:217    .text.PM_AnalogFeedbackManager:00000092 .LBE9
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:186    .text.PM_AnalogFeedbackManager:00000065 .LBB7
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:189    .text.PM_AnalogFeedbackManager:00000068 .LBE7
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:194    .text.PM_AnalogFeedbackManager:0000006c .LBB8
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:216    .text.PM_AnalogFeedbackManager:00000092 .LBE8
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:296    .text.PM_AnalogFeedbackAllValuesReady:0000000a .LBE10
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:303    .text.PM_AnalogFeedbackAllValuesReady:00000019 .LBB13
C:\Users\Andrea\AppData\Local\Temp\ccrzAzhw.s:310    .text.PM_AnalogFeedbackAllValuesReady:00000020 .LBE13

UNDEFINED SYMBOLS
_LIB_ADC_AnalogChRamPos
_LIB_ADC_InitMeasureForCh
_LIB_ADC_IsNoAutoMeasureReady
_LIB_ADC_GetAnalogValue
