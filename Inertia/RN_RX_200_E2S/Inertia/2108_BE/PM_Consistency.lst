   1                             		.file	"PM_Consistency.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.PM_Consistency_ConfigureOutputArray,"ax",@progbits
   5                             		.global	_PM_Consistency_ConfigureOutputArray
   7                             	_PM_Consistency_ConfigureOutputArray:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency/PM_Consistency.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Copyright (c) 2004-2005, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
   6:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****  * \page pageConsistency
   7:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****  * \ingroup	PM_Consistency
   8:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****  */
   9:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  10:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
  11:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \par		PM_Consistency.c
  12:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n			Implementation of all functions necessary to achieve the aim.
  13:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n
  14:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \file		PM_Consistency.c
  15:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \ingroup	PM_Consistency
  16:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		July 13, 2005
  17:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	01.00.00
  18:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author		Camerin ALberto
  19:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n
  20:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n
  21:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \par	History:
  22:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n
  23:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n 		01.00.00
  24:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n		July 13, 2005
  25:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n		Camerin ALberto
  26:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n		changes
  27:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n 			Creation
  28:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n
  29:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n 		01.00.01
  30:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n		Dec 15, 2010
  31:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n		Stefano Ughi
  32:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n		changes
  33:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n 			heavy modifications  check on V.C.S.
  34:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
  35:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  36:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* */
  37:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define MODULE_BODY_CONSISTENCY
  38:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ******** */
  39:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Includes */
  40:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ******** */
  41:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "Config.h"
  42:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "LIB_Error.h"
  43:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_CONSISTENCY)
  44:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  45:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include <string.h>
  46:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_Consistency.h"
  47:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  48:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "Lib_utilities.h"
  49:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "IO_driver.h"
  50:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  51:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "OutputManager.h"
  52:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "InputManagerExp.h"
  53:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  54:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "Feedbacks.h"
  55:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "DigitalInputsExp.h"
  56:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  57:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_ANALOG_FEEDBACKS_SUPPORT)
  58:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_AnalogFeedback.h"
  59:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif  /* CONFIG_PM_ANALOG_FEEDBACK*/
  60:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  61:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT)
  62:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_FrequencyFeedbacks.h"
  63:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
  64:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  65:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FIXEDSPEEDMOTOR)
  66:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "FixedSpeedMotor.h"
  67:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
  68:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  69:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if  defined(CONFIG_PM_LINKED_LOADS_SUPPORT)
  70:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_LinkedLoads.h"
  71:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS__RELAY_LOAD_SUPPORT)
  72:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_LinkedLoads_RelayLoadExp.h"
  73:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* defined(CONFIG_PM_LINKED_LOADS__RELAY_LOAD_SUPPORT)*/
  74:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
  75:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  76:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_MOTORGATE)
  77:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_UM_UniversalMotorExp.h"
  78:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
  79:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  80:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /*#include "ProductModules_Cfg.h"*/
  81:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "LIB_ZeroCrossingExp.h"
  82:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  83:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef  CONFIG_PM_DOORLOCK
  84:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_DoorLockExp.h"
  85:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif  /* CONFIG_PM_DOORLOCK*/
  86:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  87:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef  CONFIG_PM_DRUMLOCK
  88:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "PM_DrumLockExp.h"
  89:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif  /* CONFIG_PM_DRUMLOCK*/
  90:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  91:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __MULTI_H
  92:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "Trash1000.h"  /* remove a.s.a.p.*/
  93:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
  94:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
  95:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "LIB_ClassBVar.h"
  96:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_LIB_LOADSREQUEST_SUPPORT)
  97:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #include "LoadsRequestExp.h"
  98:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
  99:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ****************** */
 101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Defines and Macros */
 102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ****************** */
 103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Load's state modified for consistency, state off  */
 104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CS_LOAD_NOT_ACTIVE					0
 105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Load's state modified for consistency, state on  */
 106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CS_LOAD_ACTIVE						1
 107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Load's state modified for consistency, only relay switched to the load but Triac is off */
 108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CS_LOAD_FFC_ONLY_RELAY_ACTIVE		2
 109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Load's state modified for consistency, relay not switched to the load
 110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** This define is used also to distinguish the OFF state of fan */
 111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define	CS_LOAD_FFC_NOT_ACTIVE				3
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Load's state modified for consistency, High Speed fan */
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define	CS_LOAD_FAN_HIGH_SPEED				4
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Diplacement vs consistency's table: load's state on */
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CS_LOAD_STATUS_DISPLACEMENT_PILOT			0
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Diplacement vs consistency's table: load's state off */
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CS_LOAD_STATUS_DISPLACEMENT_NOT_PILOT		4
 120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Diplacement vs consistency's table: relay not switched to the load */
 121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CS_LOAD_STATUS_DISPLACEMENT_FFC_NOT_PILOT   8
 122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Set CONFIG_CS_LINKEDLOADS_EXTRA_DELAY to original default 25 if not defined */
 124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if !defined(CONFIG_CS_LINKEDLOADS_EXTRA_DELAY)
 125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CONFIG_CS_LINKEDLOADS_EXTRA_DELAY       25
 126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Set CONFIG_CS_DOORLOCK_POWERON_DELAY to original default 500 if not defined */
 129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if !defined(CONFIG_CS_DOORLOCK_POWERON_DELAY)
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define CONFIG_CS_DOORLOCK_POWERON_DELAY       500
 131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __DAMPER_ONOFF_H
 135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Non ci sono problemi sul pilotaggio del Damper On Off */
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define DAMPER_ONOFF_FEEDBACK_IS_OK   0
 137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Ci sono problemi sul pilotaggio del Damper On Off */
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define DAMPER_ONOFF_FEEDBACK_IS_KO   1
 139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __DAMPER_ONOFF_H */
 140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __STEPPER_H
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Non ci sono problemi sullo Stepper */
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define STEPPER_FEEDBACK_IS_OK   0
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Ci sono problemi sullo Stepper */
 145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #define STEPPER_FEEDBACK_IS_KO   1
 146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __STEPPER_H */
 147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* *************************** */
 150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Typedef, Structs and Unions */
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* *************************** */
 152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Struttura di ritorno da CS_ManageLoad e in input a CS_ManageRes */
 153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** typedef struct LoadStatusRes
 154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** status of the load */
 156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t load_status;
 157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** code for the status */
 158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t cs_code;
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** } LoadStatusRes_t;
 160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __DAMPER_ONOFF_H
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Struttura di stato per il Damper ON OFF accesso a bit */
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** typedef struct
 164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** se '0' e' la prima volta che entro nel case Damper Pilotato */
 166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t firstTimeDamperPylot    :1;
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** se '0' e' la prima volta che entro nel case Damper Non Pilotato */
 168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t firstTimeDamperNotPylot :1;
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** se '1' posizione damper e feedback O.K.  */
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t cameFromInputOK         :1;
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** se '1' stop monitoring su damper pilotato */
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t stopMonitoring          :1;
 173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** } DamperOnOffState_s;
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /** Struttura di stato per il Damper ON OFF accesso a byte e bit */
 176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /*lint -esym(754,all)*/
 177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** typedef union
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t all;
 180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	DamperOnOffState_s bit;
 181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** } DamperOnOffState_t;
 182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* #ifdef __DAMPER_ONOFF_H */
 184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ********* */
 187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Variables */
 188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ********* */
 189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Global */
 191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Static */
 193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**  Variables used to manage the module */
 195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static struct
 196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined (CONFIG_PM_CONSISTENCY_APPL_BUFFER)
 198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** Pointer to the buffer, passed by Application, where the module will inserts consistency values
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t  *pCS_Resource;
 200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** Status of the Consistency module */
 201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t  Status;
 202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** vettore contatori con base tempi pari alla chiamata del manager */
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t  CS_LoadCnt[N_MAXLOADS];
 205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** Time to wait until next evaluation of the feedback for Digital Delayed and Triac+Rele' */
 206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t  CS_MaxDelay;
 207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __DAMPER_ONOFF_H
 208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** variabile utilizzata per l'inizializzazione dei timeouts \n
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	che servono a controllare il corretto comportamento del dispositivo */
 210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	DamperOnOffState_t damperOnOffState;
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/** contatore per ottenere 1 sec */
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t damperOnOffcntrOneSec;
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	damperONOFFPosition_t damperCurrentPos;
 214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t damperFeedbackValue;
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** } CS_Status_Var;
 217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Pointer used just to support Data Care operation */
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static uint8_t PLT_Consistency[N_MAXLOADS];
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ******************* */
 223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Functions Prototype */
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* ******************* */
 225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Exported function */
 227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Local Function */
 229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static uint8_t CS_GetValue(uint8_t *pFeedbackData);
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static void CS_ManageLoad( uint8_t load_status, uint8_t feedback_val, LoadStatusRes_t *res);
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static void CS_ManageRes( LoadStatusRes_t res, uint8_t *pFeedBackData, uint8_t loadPos );
 234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static void CS_ElemNewConsistency( uint8_t array_ind, uint8_t new_CS_value );
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* *************** */
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Function Bodies */
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* *************** */
 240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Exported function */
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
 243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n The function is called from the application and performs initialization of a vector
 244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n containing the output of the module.
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]	pLLConsistency pointer to the array where will be inserted the outputs of the module.
 247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b We assume that vector's size passed through pLLConsistency is equal to N_MAXLOADS.
 249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	Stefano Ughi
 251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		18/02/2008
 252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
 253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
 256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
 257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			\par \b Nota 2:
 258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			the function has been written in this way to maintain compatibility with the past
 259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
 261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** void PM_Consistency_ConfigureOutputArray(uint8_t *pLLConsistency)
 263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
  10                             		.loc 1 263 0
  11                             	.LVL0:
  12 0000 02                      		rts
  13                             	.LFE0:
  15                             		.section	.text.PM_Consistency_Init,"ax",@progbits
  16                             		.global	_PM_Consistency_Init
  18                             	_PM_Consistency_Init:
  19                             	.LFB1:
 264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined (CONFIG_PM_CONSISTENCY_APPL_BUFFER)
 265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	CS_Status_Var.pCS_Resource = pLLConsistency;
 266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	CS_Status_Var.Status |= (PM_CS_STATUS_INIT);
 267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
 269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
 271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Module's initialization, called if reset is cold and if SystemMode == SYSTEM_NORMAL_MODE.
 272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b CS_Status_Var used as I/O
 274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b CS_Status_Var.OutputTablePtr used as I/O type Loader
 275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	Stefano Ughi
 278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		18/02/2008
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
 280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
 286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** void PM_Consistency_Init(void)
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
  20                             		.loc 1 288 0
 289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t i;
 290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	SAFETY_REGION_START();
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	
 293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	(void)memset(&CS_Status_Var,0,sizeof(CS_Status_Var));
  21                             		.loc 1 293 0
  22 0000 FB 12 00 00 00 00       		mov.L	#_CS_Status_Var, r1
  23 0006 75 43 11                		mov.L	#17, r3
  24 0009 66 02                   		mov	#0, r2
  25 000b 7F 88                   		sstr.b
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	(void)memset(PLT_Consistency, PM_CS_NOT_VALID_CODE, N_MAXLOADS);
  26                             		.loc 1 294 0
  27 000d FB 12 00 00 00 00       		mov.L	#_PLT_Consistency, r1
  28 0013 75 43 10                		mov.L	#16, r3
  29 0016 FB 26 FF                		mov	#-1, r2
  30 0019 7F 88                   		sstr.b
  31                             	.LVL1:
  32 001b 02                      		rts
  33                             	.LFE1:
  35                             		.section	.text.PM_Consistency_Manager,"ax",@progbits
  36                             		.global	_PM_Consistency_Manager
  38                             	_PM_Consistency_Manager:
  39                             	.LFB2:
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	for ( i=0; i<N_MAXLOADS; i++)
 297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
 298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		SAFETY_DATA_ELEM_UPDATE( PLT_Consistency, i );
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	
 301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	SAFETY_REGION_END();
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined (CONFIG_PM_CONSISTENCY_APPL_BUFFER)
 303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	CS_Status_Var.Status |= (PM_CS_STATUS_CONFIGURED);
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Called inside periodic task if SystemMode == SYSTEM_NORMAL_MODE. \n
 310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** For all the loads present in the Output Map checks if there are feedbacks associated \n
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** with, if so check if there are data for Consistency and processes them.
 312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b CS_Status_Var used as I/O
 314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	xyz
 317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		gg/mm/aaaa
 318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.1
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \todo		CS_Status_Var.CS_MaxDelay deve essere un vettore !!
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \todo       il valore di ritorno di CS_GetValue() dovrebbe essere testato e sollevata \n
 323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             un'eccezione se maggiore di 3
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
 327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			\par \b Nota 2:
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			version 1.0.1 extension to loads with more feedbacks linked
 329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** void PM_Consistency_Manager(void)
 332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
  40                             		.loc 1 332 0
  41 0000 6E 6D                   		pushm	r6-r13
  42                             	.LCFI0:
  43 0002 71 00 EC                		add	#-20, r0
  44                             	.LCFI1:
 333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	struct Loader feedbackData;
 334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t *pByte;
 335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	LoadStatusRes_t res;
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t loadPos;
 337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t nLoads = LIB_IOM_NumberOfLoads();
  45                             		.loc 1 337 0
  46 0005 05 00 00 00             		bsr	_LIB_IOM_NumberOfLoads
  47                             	.LVL2:
  48 0009 FB A2 00 00 00 00       		mov.L	#_PLT_Consistency, r10
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t pilotType;
 339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t readType = 0;
 340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t feedbackPos;
 341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t load_status;
 342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t feedback_value;
 343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t numOfFeedbacksLinkedToLoad;
 344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	bool_t feedbacksReady;
 345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t i;
 346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t tmpNewMaxDelay = 0;
 347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_DOORLOCK)
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****         if( PM_DoorLock_isInstableCondition() )
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****         {
 351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****           for(i=0; i<N_MAXLOADS; i++) /* invalida tutti i consistency*/
 352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****           {
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             CS_ElemNewConsistency( i, PM_CS_NOT_VALID_CODE );
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****           }
 355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****           return;
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****         }
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* defined(CONFIG_PM_DOORLOCK) */
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/* per tutti i carichi presenti nell'output map */
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	for ( loadPos = 0; loadPos < nLoads; loadPos++)
  49                             		.loc 1 360 0
  50 000f 66 07                   		mov.L	#0, r7
  51 0011 5B 18                   		movu.B	r1, r8
  52 0013 38 CF 01                		bra	.L4
  53                             	.LVL3:
  54                             	.L39:
  55                             	.LBB26:
 361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
 362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS__RELAY_TRIAC_SUPPORT) || defined(CONFIG_PM_LINKED_LOADS__RELAY_L
 363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		uint8_t TRL_Status = 0; /*Variable to Chk the status of the R+T module*/
 364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT )
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		uint8_t plpStatus = 0;  /*Variable to Chk the status of the PLP module*/
 367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_DOORLOCK)
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****         static uint16_t PowON_Delay = CONFIG_CS_DOORLOCK_POWERON_DELAY;
 370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_DOORLOCK */
 371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		(void) LIB_IOM_FindLoad(loadPos, &pByte);
  56                             		.loc 1 372 0
  57 0016 CF 71                   		mov.B	r7, r1
  58 0018 71 02 08                		add	#8, r0, r2
  59 001b 05 00 00 00             		bsr	_LIB_IOM_FindLoad
  60                             	.LVL4:
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/* Tipo di pilotaggio del carico */
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		pilotType = LIB_IOM_GetPilotType(PILOT_TYPE_FIELD(pByte));
  61                             		.loc 1 375 0
  62 001f ED 0B 02                		mov.L	8[r0], r11
  63 0022 CD B1 02                		mov.B	2[r11], r1
  64 0025 05 00 00 00             		bsr	_LIB_IOM_GetPilotType
  65                             	.LVL5:
  66 0029 CF 1D                   		mov.B	r1, r13
  67                             	.LVL6:
 376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/* Per il carico in oggetto punto al campo iniziale dei parametri feedback linkati al carico stes
 378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		if ( BSLDR_OK != BasicLoader( SF_PTR_IO_DEVICE, LOAD_FEEDBACKS_OFFSET(pByte), &feedbackData))
  68                             		.loc 1 378 0
  69 002b ED 0B 02                		mov.L	8[r0], r11
  70 002e 59 B2 01                		movu.B	1[r11], r2
  71 0031 75 41 21                		mov	#33, r1
  72                             	.LVL7:
  73 0034 EF 03                   		mov.L	r0, r3
  74 0036 05 00 00 00             		bsr	_BasicLoader
  75                             	.LVL8:
  76 003a 5B 11                   		movu.B	r1, r1
  77 003c 61 01                   		cmp	#0, r1
  78 003e 3B A0 01                		bne	.L5
 379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Parametri feedback non presenti */
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
 382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
 383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/*lint +e826 Suspicious pointer-to-pointer */
 384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		numOfFeedbacksLinkedToLoad = NUM_FEEDBACKS_LINKED(feedbackData.Data);
  79                             		.loc 1 386 0
  80 0041 EC 0C                   		mov.L	[r0], r12
  81 0043 CD CE 01                		mov.B	1[r12], r14
  82                             	.LVL9:
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		if ( feedbackData.DataLenght <= ( 1+numOfFeedbacksLinkedToLoad ) )
  83                             		.loc 1 389 0
  84 0046 B8 84                   		movu.W	4[r0], r4
  85 0048 64 FE                   		and #15, r14
  86                             	.LVL10:
  87 004a 71 EC 01                		add	#1, r14, r12
  88                             	.LVL11:
  89 004d 47 C4                   		cmp	r12, r4
  90 004f 2A 05 38 8D 01          		ble	.L5
  91 0054 66 2C                   		mov.L	#2, r12
  92 0056 CF 1B                   		mov.B	r1, r11
 390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
 391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* There's no data for consistency chk !!! -> Skip this load !!! */
 392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
 393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
 394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		feedbacksReady = TRUE;
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/*lint -e960 side effects on right hand of logical operator || */
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		for ( i = 0; (feedbacksReady == TRUE) && (i < numOfFeedbacksLinkedToLoad); i++ )
  93                             		.loc 1 397 0
  94 0058 E7 0E 04                		mov.L	r14, 16[r0]
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Tipologia del feedback */
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			readType = FEEDBACK_READ_TYPE_VALUE(feedbackData.Data,i);
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Posizione all'interno della variabile o vettore che ne contiene il risultato */
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			feedbackPos = FEEDBACK_POSITION_VALUE(feedbackData.Data,i);
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Controlla se tutti i feedbacks linkati al carico sono pronti */
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			switch(readType)
  95                             		.loc 1 404 0
  96 005b FB 62 00 00 00 00       		mov.L	#.L12, r6
  97 0061 2E 3D                   		bra	.L6
  98                             	.LVL12:
  99                             	.L14:
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			readType = FEEDBACK_READ_TYPE_VALUE(feedbackData.Data,i);
 100                             		.loc 1 400 0
 101 0063 EC 0E                   		mov.L	[r0], r14
 102                             	.LVL13:
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			feedbackPos = FEEDBACK_POSITION_VALUE(feedbackData.Data,i);
 103                             		.loc 1 402 0
 104 0065 4B CE                   		add	r12, r14
 105                             	.LVL14:
 106 0067 CD E1 01                		mov.B	1[r14], r1
 107                             	.LVL15:
 108                             		.loc 1 404 0
 109 006a 58 EE                   		movu.B	[r14], r14
 110                             	.LVL16:
 111 006c 75 5E 12                		cmp	#18, r14
 112 006f 24 23                   		bgtu	.L42
 113 0071 FE 6E 6E                		mov.L	[r14,r6], r14
 114                             		
 115 0074 7F 0E                   	1:jmp	r14
 116                             		.section	.rodata.PM_Consistency_Manager,"a",@progbits
 117                             		.balign 4
 118                             		.balign 4
 119                             	.L12:
 120 0000 00 00 00 7C             		.long .L8
 121 0004 00 00 00 92             		.long .L42
 122 0008 00 00 00 76             		.long .L9
 123 000c 00 00 00 92             		.long .L42
 124 0010 00 00 00 92             		.long .L42
 125 0014 00 00 00 92             		.long .L42
 126 0018 00 00 00 92             		.long .L42
 127 001c 00 00 00 82             		.long .L10
 128 0020 00 00 00 92             		.long .L42
 129 0024 00 00 00 92             		.long .L42
 130 0028 00 00 00 92             		.long .L42
 131 002c 00 00 00 92             		.long .L42
 132 0030 00 00 00 92             		.long .L42
 133 0034 00 00 00 87             		.long .L11
 134 0038 00 00 00 92             		.long .L42
 135 003c 00 00 00 92             		.long .L42
 136 0040 00 00 00 7C             		.long .L8
 137 0044 00 00 00 92             		.long .L42
 138 0048 00 00 00 76             		.long .L9
 139                             		.section	.text.PM_Consistency_Manager
 140                             	.L9:
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case FEEDBACK_I:
 407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case FEEDMULT_I:
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( FALSE == LIB_FDB_IsFeedbackWritableReady( feedbackPos ) )
 141                             		.loc 1 409 0
 142 0076 05 00 00 00             		bsr	_LIB_FDB_IsFeedbackWritableReady
 143                             	.LVL17:
 144 007a 2E 12                   		bra	.L82
 145                             	.LVL18:
 146                             	.L8:
 410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedbacksReady = FALSE;
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case DIGITAL_I:
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case DIGMULT_I:
 418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if (FALSE == LIB_DIO_IsDigitalReady( feedbackPos ))
 147                             		.loc 1 419 0
 148 007c 05 00 00 00             		bsr	_LIB_DIO_IsDigitalReady
 149                             	.LVL19:
 150 0080 2E 0C                   		bra	.L82
 151                             	.LVL20:
 152                             	.L10:
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedbacksReady = FALSE;
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if (defined(CONFIG_CS_ZEROCROSSING_DELAY) && (CONFIG_CS_ZEROCROSSING_DELAY > 0))
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case ZEROCROSSING_I:
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				tmpNewMaxDelay = CONFIG_CS_ZEROCROSSING_DELAY;
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT)
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case FREQFEEDBACK_I:
 436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( FALSE == PM_FrequencyFeedbacks_GetReadyByPosition(feedbackPos) )
 153                             		.loc 1 437 0
 154 0082 05 00 00 00             		bsr	_PM_FrequencyFeedbacks_GetReadyByPosition
 155                             	.LVL21:
 156 0086 0E                      		bra	.L82
 157                             	.LVL22:
 158                             	.L11:
 438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedbacksReady = FALSE;
 440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_ANALOG_FEEDBACKS_SUPPORT)
 446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case ANALOGFEEDBACK_I:
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if (FALSE == PM_AnalogFeedbackIsReady( feedbackPos ))
 159                             		.loc 1 448 0
 160 0087 05 00 00 00             		bsr	_PM_AnalogFeedbackIsReady
 161                             	.LVL23:
 162 008b 03                      		.balign 2,3,1
 163                             	.L82:
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedbacksReady = FALSE;
 164                             		.loc 1 411 0
 165 008c 61 01                   		cmp	#0, r1
 166 008e FC DB 11                		scne.L	r1
 167 0091 0B                      		bra	.L7
 168                             	.LVL24:
 169                             	.L42:
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			switch(readType)
 170                             		.loc 1 404 0
 171 0092 66 11                   		mov.L	#1, r1
 172                             	.LVL25:
 173                             		.balign 2,3,1
 174                             	.L7:
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		for ( i = 0; (feedbacksReady == TRUE) && (i < numOfFeedbacksLinkedToLoad); i++ )
 175                             		.loc 1 397 0
 176 0094 62 1B                   		add	#1, r11
 177                             	.LVL26:
 178 0096 62 2C                   		add	#2, r12
 179 0098 61 11                   		cmp	#1, r1
 180 009a 3B 55 01                		bne	.L13
 181                             	.LVL27:
 182 009d 03                      		.balign 2,3,1
 183                             	.L6:
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		for ( i = 0; (feedbacksReady == TRUE) && (i < numOfFeedbacksLinkedToLoad); i++ )
 184                             		.loc 1 397 0 is_stmt 0 discriminator 2
 185 009e 5B BE                   		movu.B	r11, r14
 186 00a0 A9 04                   		mov.L	16[r0], r4
 187 00a2 47 4E                   		cmp	r4, r14
 188 00a4 21 BF                   		bne	.L14
 189 00a6 38 4E 01                		bra	.L77
 190                             	.LVL28:
 191                             	.L80:
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		uint8_t plpStatus = 0;  /*Variable to Chk the status of the PLP module*/
 192                             		.loc 1 366 0 is_stmt 1
 193 00a9 66 09                   		mov	#0, r9
 194 00ab 0B                      		bra	.L40
 195                             	.L49:
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedbacksReady = FALSE;
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			default:
 457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
 462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		if ( FALSE == feedbacksReady )
 464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* per il carico in oggetto i feedbacks ad esso linkati non sono pronti */
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue; /* Process next load */
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
 469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/* Stato del carico (solo reg no config)
 471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		   attenzione questa variabile indica solo il valore delle regolazione
 472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		   applicata al carico ma non dice se il carico e' pilotato o meno in questo istante */
 473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		load_status = (uint8_t)(LIB_IOM_GetLoadStatus(loadPos)&LOAD_REG_MASK);
 196                             		.loc 1 474 0
 197 00ac CF 19                   		mov.B	r1, r9
 198                             		.balign 2,3,5
 199                             	.L40:
 200                             	.LVL29:
 475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT )
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		if (pilotType == PLP_L)
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Store the state of PLP loads */
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			plpStatus = load_status;
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
 482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT ) */
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/* Time to wait until next evaluation of the feedback */
 485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		CS_Status_Var.CS_MaxDelay = tmpNewMaxDelay;
 201                             		.loc 1 485 0
 202 00ae FB E2 00 00 00 00       		mov.L	#_CS_Status_Var, r14
 203 00b4 F9 E4 10 00             		mov.B	#0, 16[r14]
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/* A seconda del tipo di pilotaggio del carico */
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		switch (pilotType)
 204                             		.loc 1 488 0
 205 00b8 61 8B                   		cmp	#8, r11
 206 00ba 3A 24 01                		beq	.L5
 207 00bd 24 11                   		bgtu	.L18
 208 00bf 61 0B                   		cmp	#0, r11
 209 00c1 20 27                   		beq	.L17
 210 00c3 60 4B                   		sub	#4, r11
 211 00c5 61 1B                   		cmp	#1, r11
 212 00c7 25 05 38 0E 01          		bgtu	.L16
 213 00cc 2E 1C                   		bra	.L17
 214                             	.L18:
 215 00ce 75 5B 13                		cmp	#19, r11
 216 00d1 20 17                   		beq	.L17
 217 00d3 24 0A                   		bgtu	.L19
 218 00d5 61 BB                   		cmp	#11, r11
 219 00d7 3B 00 01                		bne	.L16
 220 00da 38 04 01                		bra	.L5
 221                             	.L19:
 222 00dd 75 5B 1D                		cmp	#29, r11
 223 00e0 10                      		beq	.L17
 224 00e1 75 5B 29                		cmp	#41, r11
 225 00e4 3B F3 00                		bne	.L16
 226 00e7 03                      		.balign 2,3,1
 227                             	.L17:
 489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*========================================*/
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Carichi con un solo feedback associato */
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*========================================*/
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS_SUPPORT)
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DIGITALDELAYED_L:
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case TRIACRELAY_L:
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_Status_Var.CS_MaxDelay = PM_LinkedLoads_GetTiming(loadPos, load_status) + (uint8_t)CONFIG_CS_
 499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* -fallthrough */
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case RELAY_TRIAC_L:
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS__RELAY_LOAD_SUPPORT)
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case RELAY_LOAD_L:
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif  /* #if (CONFIG_PM_LINKED_LOADS__RELAY_LOAD_SUPPORT == 1) */
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __TRIAC_RELAY_MULTI_H */
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DIGITAL_L:
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(__TRIAC_RELAY_H)
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case COMPTR_L:
 511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __TRIAC_RELAY_H */
 512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case ZC_L:
 514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case RELEZC_L:
 515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_MOTORGATE)
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case COLLECTORMOTOR_L:
 518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ((pilotType == COLLECTORMOTOR_L) && (load_status != PM_UM_RelaysInRunningState()))
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				PM_Consistency_LoadChangedStatus(loadPos, load_status, !load_status, pByte, pilotType);
 521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* -fallthrough */
 523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT )
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case PLP_L:
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*#if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT ) */
 528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_DIGITAL_OUTPUT_MULTI)
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DIGITAL_OUTPUT_MULTI_L:
 531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DIGITALDELAYED_MULTI_L:
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __HOOD_MOTOR_4RELAY_H
 535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case HOODMOTOR_4RELAY_L:
 536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FIXEDSPEEDMOTOR)
 539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             case FIXED_SPEED_MOTOR_L:
 540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             
 541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 if ( pilotType == FIXED_SPEED_MOTOR_L )
 542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 {
 543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	              	/* Delay before next evaluation */
 544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	              	CS_Status_Var.CS_MaxDelay = CONFIG_CS_FIXEDSPEEDMOTOR_DELAY;
 545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 }
 546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Valore del feedback */
 549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			feedback_value = CS_GetValue(FEEDBACK_READ_TYPE_PNTR(feedbackData.Data,0));
 228                             		.loc 1 549 0
 229 00e8 EC 0B                   		mov.L	[r0], r11
 230                             	.LVL30:
 231                             	.LBB27:
 232                             	.LBB28:
 550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( CS_Status_Var.CS_LoadCnt[loadPos] < CS_Status_Var.CS_MaxDelay )
 552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_Status_Var.CS_LoadCnt[loadPos]++;
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				continue;
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( (load_status & LOAD_REG_MASK) != LOAD_REG_OFF )
 558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				load_status = CS_LOAD_ACTIVE;
 560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_LIB_LOADSREQUEST_SUPPORT) && defined(CONFIG_NUM_SR_LOADS)
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Load is OFF and consistency table is for 3 load states */
 565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( ((load_status & LOAD_REG_MASK) == LOAD_REG_OFF) &&
 566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					(feedbackData.DataLenght == (1 + 4*numOfFeedbacksLinkedToLoad)) )
 567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				uint8_t tmpFindLoadOnSR = LIB_IOM_FindLoadOnSwitchRelay(loadPos);
 569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* Check if load is on a switch relay */
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if (tmpFindLoadOnSR & LOAD_SR_FOUND)
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if (tmpFindLoadOnSR & LOAD_SR_SAME_POS)
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						 /* If switch relay status is selecting it, treat like it's a Relay-only relay+triac linked l
 575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						load_status = CS_LOAD_FFC_ONLY_RELAY_ACTIVE;
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					else
 578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						 /* If switch relay status is not selecting it, treat like it's an OFF relay+triac linked loa
 580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						load_status = CS_LOAD_FFC_NOT_ACTIVE;
 581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FIXEDSPEEDMOTOR)
 589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( pilotType == FIXED_SPEED_MOTOR_L )
 591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 {
 592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                     /* During relays transition, Consistency shall not be considered valid */
 593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                     if( FSM_GetCntStatus() )
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                     {
 595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                        CS_Status_Var.CS_LoadCnt[loadPos]=0;
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                        CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                        continue;
 598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                     }
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 }
 600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif  /* defined(CONFIG_PM_FIXEDSPEEDMOTOR) */
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS__RELAY_TRIAC_SUPPORT) || defined(CONFIG_PM_LINKED_LOADS__RELAY_L
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( ( pilotType == RELAY_TRIAC_L )
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS__RELAY_LOAD_SUPPORT)
 606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			        || ( pilotType == RELAY_LOAD_L )
 607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif  /* defined(CONFIG_PM_LINKED_LOADS__RELAY_LOAD_SUPPORT) */
 608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			   )
 609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/*Chk if i'm piloting the Relay or Triac or both o none */
 612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				uint8_t tmpLLState = PM_LinkedLoads_GetLoadState(loadPos);
 613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if (tmpLLState == LL_1ON)
 615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					TRL_Status = CS_LOAD_FFC_ONLY_RELAY_ACTIVE;
 617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else if (tmpLLState == (LL_1ON | LL_2ON))
 619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					TRL_Status = CS_LOAD_ACTIVE;
 621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				SAFETY_REGION_START();
 624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				SAFETY_DATA_ELEM_CHECK( PLT_Consistency, loadPos );
 625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				SAFETY_REGION_END();
 626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ((PLT_Consistency[loadPos] != PM_CS_NOT_VALID_CODE) && (TRL_Status != ((PLT_Consistency[load
 628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT)
 630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( FEEDBACK_READ_TYPE_VALUE(feedbackData.Data,0) == FREQFEEDBACK_I )
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					    PM_FrequencyFeedbacks_RestartFeedbackByPosition(FEEDBACK_POSITION_VALUE(feedbackData.Data,
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					else
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT */
 638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						LIB_FDB_FeedbackInitMeasure(FEEDBACK_POSITION_VALUE(feedbackData.Data,0));
 640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT)
 642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif/* CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT */
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					continue;
 647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if (TRL_Status == LL_2ON) /*Relay ON*/
 650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_FFC_ONLY_RELAY_ACTIVE; /*Assert that only the relay is ON */
 652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else if (TRL_Status == LL_ALL_OFF)
 654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_FFC_NOT_ACTIVE;
 656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else if (TRL_Status & LL_1ON)
 658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_ACTIVE;
 660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else
 662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/*All other cases*/
 664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __TRIAC_RELAY_MULTI_H */
 667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT )
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( pilotType == PLP_L )
 671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* During ZC synchronization, Consistency shall not be considered valid */
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if( !goodZCSignal() && IsZCSyncOngoing() )
 674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					continue;
 677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if (plpStatus == 0) /* OFF State */
 680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_FFC_NOT_ACTIVE;
 682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else if (plpStatus == 3) /* High Speed */
 684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_FAN_HIGH_SPEED;
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else /* Low Speed */
 688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_ACTIVE;
 690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT ) */
 694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageLoad(load_status,feedback_value, &res);
 697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageRes(res,feedbackData.Data,loadPos);
 699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef  __STEPPER_H
 704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case STEPPER_L:
 706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*===============================================*/
 707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Dai feedbacks reali ricavo il feedback logico */
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*===============================================*/
 709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( TRUE == PM_StepperIsMoving() )
 710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* Stepper in movimento non posso prendere decisioni */
 712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_Status_Var.CS_LoadCnt[loadPos] = 0;
 713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_ANALOG_FEEDBACKS_SUPPORT
 716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			else if( FEEDBACK_READ_TYPE_VALUE(feedbackData.Data,0) == ANALOGFEEDBACK_I )
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( CS_Status_Var.CS_LoadCnt[loadPos] >= 100 )
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_NOT_ACTIVE;
 722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedback_value = STEPPER_FEEDBACK_IS_OK;
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* L'unico caso distinto e' quello di carico scablato, che viene    */
 725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* identificato col valore 0 nella tabella L.L.I. del Setting File */
 726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if( CS_GetValue(FEEDBACK_READ_TYPE_PNTR(feedbackData.Data,0)) == 0 )
 728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						feedback_value = STEPPER_FEEDBACK_IS_KO;
 730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ManageLoad(load_status, feedback_value, &res);
 733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ManageRes(res, feedbackData.Data, loadPos);
 734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else
 736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* attendo che il feedback sia consistente */
 738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.CS_LoadCnt[loadPos]++;
 739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_ANALOG_FEEDBACK */
 743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			else /* Digital Feedback */
 744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( numOfFeedbacksLinkedToLoad == 4 )
 746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( CS_Status_Var.CS_LoadCnt[loadPos] > (2*FEEDBACK_SAMPLES) )
 748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						load_status = CS_LOAD_NOT_ACTIVE;
 750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						feedback_value = 0;
 751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						for ( i = 0; i < 4; i++ )
 752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						{
 753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 							feedback_value <<= 1;
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 							feedback_value |= (CS_GetValue(FEEDBACK_READ_TYPE_PNTR(feedbackData.Data,i))?1:0);
 756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						}
 757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						if ( PM_Stepper_GetLastSeqApplied() == feedback_value )
 758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						{
 759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 							feedback_value = STEPPER_FEEDBACK_IS_OK;
 760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						}
 761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						else
 762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						{
 763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 							feedback_value = STEPPER_FEEDBACK_IS_KO;
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						}
 765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_ManageLoad(load_status, feedback_value, &res);
 766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_ManageRes(res, feedbackData.Data, loadPos);
 767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					else
 769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* attendo che il feedback sia consistente */
 771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.CS_LoadCnt[loadPos]++;
 772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else if(numOfFeedbacksLinkedToLoad == 1)
 776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( CS_Status_Var.CS_LoadCnt[loadPos] > (2*FEEDBACK_SAMPLES) )
 778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						load_status = CS_LOAD_NOT_ACTIVE;
 780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						feedback_value = STEPPER_FEEDBACK_IS_OK;
 781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* L'unico caso distinto e' quello di carico scablato */
 783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* che fornisce un valore di feedback digitale alto  */
 784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						if( CS_GetValue(FEEDBACK_READ_TYPE_PNTR(feedbackData.Data,0)) )
 786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						{
 787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 							feedback_value = STEPPER_FEEDBACK_IS_KO;
 788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						}
 789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_ManageLoad(load_status, feedback_value, &res);
 791:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_ManageRes(res, feedbackData.Data, loadPos);
 792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 793:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					else
 794:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* attendo che il feedback sia consistente */
 796:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.CS_LoadCnt[loadPos]++;
 797:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else
 801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 802:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Non e' previsto un numero di feedback digitali diverso da 1 e 4 */
 803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*__STEPPER_H */
 808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 809:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 810:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __PROFILER_H
 811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*========================================*/
 812:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Carichi con un solo feedback associato */
 813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*========================================*/
 814:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case PROFILE_L:
 816:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Valore del feedback */
 818:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			feedback_value = CS_GetValue(FEEDBACK_READ_TYPE_PNTR(feedbackData.Data,0));
 819:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 820:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Per il carico contraddistinto da loadPos
 821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			   controlla se e' un profilo in esecuzione.
 822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			   N.B.: la durata massima di un profilo e' di 320 msec a 50 Hz
 823:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			   Cfr. Loads Profile Data in Platform Setting doc
 824:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			   quindi avro' il primo dato utile per consistency dopo
 825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			   320 + 2*FEEDBACK_SAMPLES = 520 msec con FEEDBACK_SAMPLES=20 */
 826:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( TRUE == PM_IsProfileActiveInPos(loadPos) )
 828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 829:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* profilo in esecuzione non posso prendere decisioni */
 830:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 831:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 832:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			else
 833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 834:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* profilo non in esecuzione.
 835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				 N.B.:CS_Status_Var.CS_LoadCnt[loadPos] viene azzerato ogni
 836:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				 volta che c'e' un cambiamento di profilo  */
 837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( CS_Status_Var.CS_LoadCnt[loadPos] > (2*FEEDBACK_SAMPLES) )
 838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 839:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* il feedback e' consistente */
 840:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ManageLoad(CS_LOAD_NOT_ACTIVE, feedback_value, &res);
 841:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ManageRes(res, feedbackData.Data, loadPos);
 843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 844:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else
 846:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 847:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* attendo che il feedback sia consistente */
 848:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.CS_LoadCnt[loadPos]++;
 849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
 850:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 851:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 852:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
 853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 854:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*__PROFILER_H*/
 855:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 856:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __BUZZER_H
 857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case BUZZER_L:
 858:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 859:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* To be complete ... */
 860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
 861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __BUZZER_H */
 862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 863:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __MULTI_H
 864:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case CHIPSEL_L:
 865:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* [To be complete ...] */
 867:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
 868:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*__MULTI_H*/
 871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 872:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 873:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __MULTI2_H
 874:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case CHIPSEL2_L:
 875:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 876:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* [To be complete ...] */
 877:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
 878:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 879:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*__MULTI2_H*/
 881:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __MULTI_OUT_H
 883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****         case CHIPSEL_OUT_L:
 884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 885:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             /* [To be completed ...] */
 886:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             continue;
 887:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 889:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*__MULTI_OUT_H*/
 890:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 891:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case ACQUACARE_L:
 892:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 893:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* To be complete ...*/
 894:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
 895:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __DAMPER_ONOFF_H
 897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DUMPEROO_L:
 899:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*=========================*/
 900:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Feedback di tipo logico */
 901:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*=========================*/
 902:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( TRUE == PM_Damper_ONOFF_IsDriven() )
 903:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 904:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/*=============================*/
 905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* caso damper on off pilotato */
 906:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/*=============================*/
 907:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* per quando il Damper risultera' non pilotato */
 908:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_Status_Var.damperOnOffState.bit.firstTimeDamperNotPylot = 0;
 909:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				load_status = CS_LOAD_ACTIVE;
 910:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 911:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( CS_Status_Var.damperOnOffState.bit.firstTimeDamperPylot == 0 )
 912:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 913:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* first time -> init */
 914:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.CS_LoadCnt[loadPos] = 0;
 915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperOnOffcntrOneSec = 0;
 916:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperOnOffState.bit.stopMonitoring = 0;
 917:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperOnOffState.bit.firstTimeDamperPylot = 1;
 918:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 919:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( CS_Status_Var.damperOnOffState.bit.stopMonitoring == 1 )
 920:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Posizionamento non raggiunto entro il timeout */
 922:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedback_value = DAMPER_ONOFF_FEEDBACK_IS_KO;
 923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else
 925:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 926:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					feedback_value = DAMPER_ONOFF_FEEDBACK_IS_OK;
 927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.CS_LoadCnt[loadPos] ++;
 928:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( CS_Status_Var.CS_LoadCnt[loadPos] >= 100 )
 929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 930:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* one second elapsed */
 931:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.CS_LoadCnt[loadPos] = 0;
 932:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 933:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						if ( CS_Status_Var.damperOnOffcntrOneSec >= PM_Damper_ONOFF_GetTmaxReachPos() )
 934:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						{
 935:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 							CS_Status_Var.damperOnOffState.bit.stopMonitoring = 1;
 936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						}
 937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						else
 938:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						{
 939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 							CS_Status_Var.damperOnOffcntrOneSec ++;
 940:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						}
 941:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 942:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
 944:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			else
 945:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
 946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/*=================================*/
 947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* caso damper on off NON pilotato */
 948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/*=================================*/
 949:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* per quando il Damper risultera' pilotato */
 950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_Status_Var.damperOnOffState.bit.firstTimeDamperPylot = 0;
 951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				load_status = CS_LOAD_NOT_ACTIVE;
 952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( CS_Status_Var.damperOnOffState.bit.firstTimeDamperNotPylot == 0 )
 953:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* first time -> init */
 955:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Campiona la posizione corrente del damper */
 957:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperCurrentPos = PM_Damper_ONOFF_GetReedVal();
 958:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Clear filter for monitoring */
 959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.CS_LoadCnt[loadPos] = 0;
 960:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Flag condizione corretta */
 961:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperOnOffState.bit.cameFromInputOK = 1;
 962:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Stato del feedback O.K. fino a quando non avra' eseguito il nuovo campionamento */
 963:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperFeedbackValue = DAMPER_ONOFF_FEEDBACK_IS_OK;
 964:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Inizializzazione eseguita */
 965:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperOnOffState.bit.firstTimeDamperNotPylot = 1;
 966:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 968:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if ( CS_Status_Var.damperCurrentPos != PM_Damper_ONOFF_GetReedVal() )
 969:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Controlla se la lettura precedente era O.K. */
 971:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( CS_Status_Var.damperOnOffState.bit.cameFromInputOK == 1 )
 972:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* No -> Clear filter for monitoring */
 974:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.CS_LoadCnt[loadPos] = 0;
 975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 976:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Flag condizione non corretta */
 977:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperOnOffState.bit.cameFromInputOK = 0;
 978:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
 979:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* filtro per eventuali disturbi */
 980:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( CS_Status_Var.CS_LoadCnt[loadPos] < 50 )
 981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 982:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* non prendo decisioni sul valore del feedback -> rimango con il vecchio valore */
 983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.CS_LoadCnt[loadPos] ++;
 984:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 985:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					else
 986:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 987:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* il damper NON è pilotato e la posizione e' cambiata */
 988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.damperFeedbackValue = DAMPER_ONOFF_FEEDBACK_IS_KO;
 989:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 990:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
 991:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else
 992:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				{
 993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Controlla se la lettura precedente era O.K. */
 994:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( CS_Status_Var.damperOnOffState.bit.cameFromInputOK == 0 )
 995:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
 996:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* Clear filter for monitoring */
 997:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.CS_LoadCnt[loadPos] = 0;
 998:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* Flag condizione corretta */
1000:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					CS_Status_Var.damperOnOffState.bit.cameFromInputOK = 1;
1001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1002:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					/* filtro per eventuali disturbi */
1003:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					if ( CS_Status_Var.CS_LoadCnt[loadPos] < 50 )
1004:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
1005:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						/* non prendo decisioni sul valore del feedback -> rimango con il vecchio valore */
1006:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.CS_LoadCnt[loadPos] ++;
1007:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
1008:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					else
1009:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					{
1010:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 						CS_Status_Var.damperFeedbackValue = DAMPER_ONOFF_FEEDBACK_IS_OK;
1011:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					}
1012:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				}
1013:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				feedback_value = CS_Status_Var.damperFeedbackValue;
1014:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
1015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1016:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageLoad(load_status, feedback_value, &res);
1017:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1018:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageRes(res, feedbackData.Data, loadPos);
1019:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1020:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
1021:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1022:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*__DAMPER_ONOFF_H*/
1023:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1024:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_DOORLOCK
1025:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1026:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case BLOCCO_PORTA_IMPULSI:
1027:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case BLOCCO_PORTA_CERA:
1028:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case BLOCCO_PORTA_CERA_2PIN:
1029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1030:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( PM_DoorLock_GetStatus() == BPGEN_DEVICE_RUNNING )
1031:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
1032:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
1033:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				continue; /* Exit From switch(pilotType) process next Load */
1034:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
1035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1036:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Filtraggio degli impulsi spuri e del Fault F6.01: allo   */
1037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* startup si aspettano 5s prima di valutare il Consistency */
1038:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( PowON_Delay )
1039:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
1040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				PowON_Delay--;
1041:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
1042:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				continue;
1043:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
1044:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*The mask to avoid the control of the config field*/
1046:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1047:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*NB:
1048:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			  When the define BLOCCOPORTA_ENABLE_ZC_FEEDBACK_CONTROL == 1 the
1049:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			  the fields of the Consistency table that must be filled are
1050:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			  0 (NOT SYNC) 1 (SYNC)
1051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			*/
1052:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Valore del feedback */
1053:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			feedback_value = CS_GetValue(FEEDBACK_READ_TYPE_PNTR(feedbackData.Data,0));
1054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1055:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageLoad(load_status, feedback_value, &res);
1056:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1057:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*gets consistency value from PM_DoorLock module */
1058:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_CS_RES_PLUS_STATUS)
1059:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 CS_ElemNewConsistency( loadPos, (uint8_t)(PM_DoorLock_InternalConsistency() | (uint
1060:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #else
1061:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 CS_ElemNewConsistency( loadPos, PM_DoorLock_InternalConsistency() );
1062:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1063:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
1064:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1065:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_DOORLOCK */
1066:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_DRUMLOCK
1068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1069:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DRUM_LOCK_L:
1070:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1071:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( PM_DrumLock_DriverStatus() == DMLGEN_DEVICE_RUNNING )
1072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
1073:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				continue; /* Exit From switch(pilotType) process next Load */
1075:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1077:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* Valore del feedback */
1078:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			feedback_value = CS_GetValue(FEEDBACK_READ_TYPE_PNTR(feedbackData.Data,0));
1079:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1080:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageLoad(load_status, feedback_value, &res);
1081:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1082:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageRes(res,feedbackData.Data,loadPos);
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1084:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
1085:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1086:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_DRUMLOCK */
1087:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1088:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(PWM_LOAD_ENABLE) && (PWM_LOAD_ENABLE == 1)
1089:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case PWM_L:
1090:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1091:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/* [To be complete ...] */
1092:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
1093:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1094:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*(PWM_LOAD_ENABLE == 1)*/
1095:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1096:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case I2C_L:
1097:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1098:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
1099:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		default:
1101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			PLT_ERROR_WARNING(PLT_ERROR_CONSISTENCY_NOT_SUPPORTED);
1102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue;
1103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
1104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined (CONFIG_PM_CONSISTENCY_APPL_BUFFER)
1108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if ( CS_Status_Var.pCS_Resource != NULL )
1109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		PM_Consistency_GetAllCsValues(CS_Status_Var.pCS_Resource);
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Enables/Disables Consistency's work.
1117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]		status
1119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	xyz
1121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		gg/mm/aaaa
1122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
1128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** void PM_Consistency_SetModuleStatus(uint8_t status)
1132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined (CONFIG_PM_CONSISTENCY_APPL_BUFFER)
1134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if (status == PM_CS_STATUS_ENABLE)
1136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		CS_Status_Var.Status |= PM_CS_STATUS_ENABLE;
1138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	else
1140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		CS_Status_Var.Status &= ~(PM_CS_STATUS_ENABLE);
1142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Returns CS_Status_Var.Status.
1148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b CS_Status_Var.Status used as I
1151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \return 	uint8_t
1153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	xyz
1156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		gg/mm/aaaa
1157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
1162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** uint8_t PM_Consistency_GetModuleStatus(void)
1165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined (CONFIG_PM_CONSISTENCY_APPL_BUFFER)
1167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	return (CS_Status_Var.Status);
1168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #else
1169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	return 0;
1170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Returns consistency's value for the load identified by loadID.
1174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]	loadPos load's position inside Output Map
1176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [out]	*pCS_Value consistency's value
1177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b CS_Status_Var used as I
1179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \return 	uint8_t
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \retval	    PM_CS_ERROR load not found
1183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \retval     PM_CS_NO_ERROR load found and consistency's value in *pCS_Value
1184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	Alberto Camerin
1186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		gg/mm/aaaa
1187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
1191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			\par \b Nota 2:
1192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			*pCS_Value=PM_CS_NOT_VALID_CODE -> consistency not ready or load not found
1193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** uint8_t PM_Consistency_IsValueReady( uint8_t loadPos, uint8_t *pCS_Value )
1197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t loadIndex;
1200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t *pByte;
1201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/* defaul value */
1203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	*pCS_Value = PM_CS_NOT_VALID_CODE;
1204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	loadIndex = LIB_IOM_FindLoad(loadPos,&pByte);
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if ( loadIndex == 0xFF )
1207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		return PM_CS_ERROR;
1209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	
1211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	SAFETY_REGION_START();
1212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	SAFETY_DATA_ELEM_CHECK( PLT_Consistency, loadIndex );
1213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	*pCS_Value = PLT_Consistency[loadIndex];
1214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	SAFETY_REGION_END();	
1215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	return PM_CS_NO_ERROR;
1217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** The function when find a change in the state of the load, resets reading of \n
1221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** feedback coupled to the load and raises the value of consistency to undefined.
1222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Not for all types of loads!.
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]	loadPos load's position inside Output Map
1225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]    oldloadstatus current load's state.
1226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]    newloadstatus new load's state
1227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]	pWord pointer to the beginning of the field that describes the load
1228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]	pilottype type of pilot load
1229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b CS_Status_Var used as I/O
1231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	xyz
1234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		gg/mm/aaaa
1235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \todo		questa funzione ha troppi parametri in input, parametri che potrebbero essere\n
1239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             ricavati internamente.
1240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
1244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			\par \b Nota 2:
1245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             Non e' stato possibile rinominare questa funzione perche' utilizzata da prodotti ibridi
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             come Dryer e DEA700
1247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** void PM_Consistency_LoadChangedStatus( uint8_t loadPos, uint8_t oldloadstatus, uint8_t newloadstatu
1250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if (oldloadstatus != newloadstatus)
1254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		struct Loader RamData;
1257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		CS_Status_Var.CS_LoadCnt[loadPos] = 0;
1259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		switch (pilottype)
1261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
1262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS_SUPPORT)
1264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case RELAY_TRIAC_L:
1265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_LINKED_LOADS__RELAY_LOAD_SUPPORT)
1266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case RELAY_LOAD_L:
1267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
1269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case TRIACRELAY_L:
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DIGITALDELAYED_L:
1271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __TRIAC_RELAY_MULTI_H */
1273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DIGITAL_L:
1274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __TRIAC_RELAY_H
1276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case COMPTR_L:
1277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /*__TRIAC_RELAY_H */
1278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case ZC_L:
1280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case RELEZC_L:
1281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_MOTORGATE) /* ex  __UNIVERSAL_MOTOR_H */
1283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case COLLECTORMOTOR_L:
1284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_DIGITAL_OUTPUT_MULTI
1286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case DIGITAL_OUTPUT_MULTI_L:
1287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_DIGITAL_OUTPUT_MULTI */
1288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef __PROFILER_H
1289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case PROFILE_L:
1290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* __PROFILER_H */
1291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT )
1293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case PLP_L:
1294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* #if defined( CONFIG_PM_PROFILE_LOADS_PARTIALIZATION_SUPPORT ) */
1295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_FIXEDSPEEDMOTOR)
1298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case FIXED_SPEED_MOTOR_L:
1299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			/*
1301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			    get puntatore ai parametri consistency
1302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			    -*(RamData.Data+2) = Feedback ReadType
1303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			    -*(RamData.Data+3) = Feedback Position all'interno del proprio vettore d'appartenenza
1304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			*/
1305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( BSLDR_OK != BasicLoader( SF_PTR_IO_DEVICE, LOAD_FEEDBACKS_OFFSET(pByte), &RamData) )
1307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
1308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				/* No Consistency configuration present */
1309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				return;
1310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
1311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			switch ( FEEDBACK_READ_TYPE_VALUE(RamData.Data,0) )
1313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			{
1314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case FEEDBACK_I:
1315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case FEEDMULT_I:
1316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				LIB_FDB_FeedbackInitMeasure( FEEDBACK_POSITION_VALUE(RamData.Data,0) );
1317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				break;
1318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT
1320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case FREQFEEDBACK_I:
1321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				PM_FrequencyFeedbacks_RestartFeedbackByPosition( FEEDBACK_POSITION_VALUE(RamData.Data,0) );
1322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				break;
1323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_ANALOG_FEEDBACKS_SUPPORT
1325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			case ANALOGFEEDBACK_I:
1326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				PM_AnalogFeedbackResetMeasure( FEEDBACK_POSITION_VALUE(RamData.Data,0) );
1327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				break;
1328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_ANALOG_FEEDBACK */
1329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			default:
1330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				break;
1331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			}
1332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ElemNewConsistency( loadPos, PM_CS_NOT_VALID_CODE );
1334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
1336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		default:
1337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			break;
1338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /* Local Function */
1345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Depending on the type of feedback and its position within the variables
1347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** that contain its value returns the value of the feedback itself.
1348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]    pFeedbackData pointer to the word that describes the Feedback's ReadType \n
1350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****                 and its position within the variables that contain the read value. \n
1351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \return 	uint8_t
1353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \retval		feedback's value
1355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	Stefano Ughi
1357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		28/02/2008
1358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \todo		nel caso di feedback non contemplato la funzione dovrebbe ritornare un valore \n
1362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             superiore al valore massimo consentito per il feedback che, per come e' \n
1363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             strutturata la tabella del consistency e' 3 e tale valore deve essere testato dalla \n
1364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****             chiamante per individuare eventuali condizioni errate.
1365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
1368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static uint8_t CS_GetValue(uint8_t *pFeedbackData)
1373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t feedbackType;
1375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t feedbackPos;
1376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t retVal = PM_CS_NOT_VALID_CODE;
1377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	feedbackType = *pFeedbackData;
1379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	feedbackPos = *(pFeedbackData + 1);
 233                             		.loc 1 1379 0
 234 00ea CD B1 03                		mov.B	3[r11], r1
 235                             	.LVL31:
1380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	switch (feedbackType){
 236                             		.loc 1 1381 0
 237 00ed 59 BB 02                		movu.B	2[r11], r11
 238                             	.LVL32:
 239 00f0 75 5B 12                		cmp	#18, r11
 240 00f3 24 41                   		bgtu	.L20
 241 00f5 FB E2 4C 00 00 00       		mov.L	#.L27, r14
 242 00fb FE 6B EB                		mov.L	[r11,r14], r11
 243                             		
 244 00fe 7F 0B                   	1:jmp	r11
 245                             		.section	.rodata.PM_Consistency_Manager
 246                             		.balign 4
 247                             		.balign 4
 248                             	.L27:
 249 004c 00 00 01 00             		.long .L21
 250 0050 00 00 01 3C             		.long .L43
 251 0054 00 00 01 11             		.long .L23
 252 0058 00 00 01 34             		.long .L20
 253 005c 00 00 01 34             		.long .L20
 254 0060 00 00 01 34             		.long .L20
 255 0064 00 00 01 34             		.long .L20
 256 0068 00 00 01 17             		.long .L24
 257 006c 00 00 01 34             		.long .L20
 258 0070 00 00 01 34             		.long .L20
 259 0074 00 00 01 2C             		.long .L25
 260 0078 00 00 01 34             		.long .L20
 261 007c 00 00 01 34             		.long .L20
 262 0080 00 00 01 27             		.long .L26
 263 0084 00 00 01 34             		.long .L20
 264 0088 00 00 01 34             		.long .L20
 265 008c 00 00 01 00             		.long .L21
 266 0090 00 00 01 34             		.long .L20
 267 0094 00 00 01 11             		.long .L23
 268                             		.section	.text.PM_Consistency_Manager
 269                             	.L21:
1382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	case DIGITAL_I:
1383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	case DIGMULT_I:
1384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		retVal = (uint8_t) ((DigInputs & ((dig_input_t) 1 << feedbackPos)) ? 1 : 0);
 270                             		.loc 1 1384 0
 271 0100 FB B2 00 00 00 00       		mov.L	#_DigInputs, r11
 272 0106 58 BB                   		movu.B	[r11], r11
 273 0108 5B 11                   		movu.B	r1, r1
 274 010a FD 61 1B                		shar	r1, r11
 275 010d 64 1B                   		and #1, r11
 276                             	.LVL33:
 277 010f 2E 31                   		bra	.L22
 278                             	.LVL34:
 279                             	.L23:
1385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		break;
1386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	case ANALOG_I:
1388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		/*TODO: da implementare !! */
1389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		retVal = PM_CS_NOT_VALID_CODE;
1390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		break;
1391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	case FEEDBACK_I:
1393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	case FEEDMULT_I:
1394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		retVal = (LIB_FDB_GetFeedbackVal(feedbackPos));
 280                             		.loc 1 1394 0
 281 0111 05 00 00 00             		bsr	_LIB_FDB_GetFeedbackVal
 282                             	.LVL35:
 283 0115 2E 1B                   		bra	.L83
 284                             	.LVL36:
 285                             	.L24:
 286                             	.LBB29:
1395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		break;
1396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT
1398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	case FREQFEEDBACK_I:
1399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		PM_FrequencyFeedbacks_ValueType feedbackVal;
1401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		if (PM_FrequencyFeedbacks_GetValueByPosition(feedbackPos, &feedbackVal) == FREQFB_OK)
 287                             		.loc 1 1401 0
 288 0117 71 02 0C                		add	#12, r0, r2
 289 011a 05 00 00 00             		bsr	_PM_FrequencyFeedbacks_GetValueByPosition
 290                             	.LVL37:
 291 011e 61 01                   		cmp	#0, r1
 292 0120 21 1C                   		bne	.L43
1402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		{
1403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			return feedbackVal;
 293                             		.loc 1 1403 0
 294 0122 CD 0B 0C                		mov.B	12[r0], r11
 295 0125 2E 1B                   		bra	.L22
 296                             	.LVL38:
 297                             	.L26:
 298                             	.LBE29:
1404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		}
1405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		break;
1407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_FREQUENCY_FEEDBACKS_SUPPORT */
1408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #ifdef CONFIG_PM_ANALOG_FEEDBACKS_SUPPORT
1410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		case ANALOGFEEDBACK_I:
1411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		retVal = ( PM_AnalogFeedbackGetValue( feedbackPos ) );
 299                             		.loc 1 1411 0
 300 0127 05 00 00 00             		bsr	_PM_AnalogFeedbackGetValue
 301                             	.LVL39:
 302 012b 0D                      		bra	.L83
 303                             	.LVL40:
 304                             	.L25:
1412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		break;
1413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif /* CONFIG_PM_ANALOG_FEEDBACK */
1414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	case ZEROCROSSING_I:
1416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		retVal = goodZCSignal();
 305                             		.loc 1 1416 0
 306 012c 05 00 00 00             		bsr	_goodZCSignal
 307                             	.LVL41:
 308                             		.balign 2,3,1
 309                             	.L83:
 310 0130 CF 1B                   		mov.B	r1, r11
 311                             	.LVL42:
 312 0132 2E 0E                   		bra	.L22
 313                             	.LVL43:
 314                             	.L20:
1417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		break;
1418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	default:
1420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		PLT_ERROR_FATAL(PLT_ERROR_CONSISTENCY_NOT_SUPPORTED);
 315                             		.loc 1 1420 0
 316 0134 75 41 39                		mov.L	#57, r1
 317                             	.LVL44:
 318 0137 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 319                             	.LVL45:
 320 013b 03                      		.balign 2,3,2
 321                             	.L43:
1389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		retVal = PM_CS_NOT_VALID_CODE;
 322                             		.loc 1 1389 0
 323 013c FB B6 FF                		mov	#-1, r11
 324                             	.LVL46:
 325 013f 03                      		.balign 2,3,5
 326                             	.L22:
 327                             	.LBE28:
 328                             	.LBE27:
 551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( CS_Status_Var.CS_LoadCnt[loadPos] < CS_Status_Var.CS_MaxDelay )
 329                             		.loc 1 551 0
 330 0140 FB E2 00 00 00 00       		mov.L	#_CS_Status_Var, r14
 331 0146 FE 47 E4                		mov.B	[r7,r14], r4
 332 0149 5B 42                   		movu.B	r4, r2
 333 014b 45 E2 10                		cmp	16[r14].UB, r2
 334 014e 22 0A                   		bgeu	.L29
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				CS_Status_Var.CS_LoadCnt[loadPos]++;
 335                             		.loc 1 553 0
 336 0150 62 14                   		add	#1, r4
 337 0152 FE 07 E4                		mov.B	r4, [r7,r14]
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				continue;
 338                             		.loc 1 554 0
 339 0155 38 89 00                		bra	.L5
 340                             	.L29:
 341                             	.LVL47:
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( pilotType == PLP_L )
 342                             		.loc 1 670 0
 343 0158 5B DD                   		movu.B	r13, r13
 344 015a 75 5D 13                		cmp	#19, r13
 345 015d 20 11                   		beq	.L30
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( (load_status & LOAD_REG_MASK) != LOAD_REG_OFF )
 346                             		.loc 1 557 0
 347 015f 76 2C FF 00             		and #0xff, r12
 348                             	.LVL48:
 349 0163 FC DB C1                		scne.L	r12
 350                             	.LVL49:
 351                             	.LBB30:
 352                             	.LBB31:
1421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		break;
1422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	return retVal;
1425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Depending on the load status and feedback's value prepares the "res" variable \n
1430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** in order to access to consistency's table.
1431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]		load_status modified load's status
1433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]		feedback_val feedback's value (max. value is 3)
1434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \return 	LoadStatusRes_t
1437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	xyz
1440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		gg/mm/aaaa
1441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Stefano Ughi
1445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static void CS_ManageLoad( uint8_t load_status, uint8_t feedback_val, LoadStatusRes_t *res )
1450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	res->load_status = load_status;
1453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if (load_status == CS_LOAD_ACTIVE)
 353                             		.loc 1 1454 0
 354 0166 5B CD                   		movu.B	r12, r13
 355                             	.LVL50:
 356 0168 61 1D                   		cmp	#1, r13
 357 016a 21 24                   		bne	.L78
 358 016c 2E 32                   		bra	.L31
 359                             	.LVL51:
 360                             	.L30:
 361                             	.LBE31:
 362                             	.LBE30:
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if( !goodZCSignal() && IsZCSyncOngoing() )
 363                             		.loc 1 673 0
 364 016e 05 00 00 00             		bsr	_goodZCSignal
 365                             	.LVL52:
 366 0172 61 01                   		cmp	#0, r1
 367 0174 1A                      		bne	.L33
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if( !goodZCSignal() && IsZCSyncOngoing() )
 368                             		.loc 1 673 0 is_stmt 0 discriminator 1
 369 0175 05 00 00 00             		bsr	_IsZCSyncOngoing
 370                             	.LVL53:
 371 0179 61 01                   		cmp	#0, r1
 372 017b 13                      		beq	.L33
 373                             	.LVL54:
 374 017c 2E 73                   		bra	.L13
 375                             	.LVL55:
 376                             	.L33:
 679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				if (plpStatus == 0) /* OFF State */
 377                             		.loc 1 679 0 is_stmt 1
 378 017e 5B 99                   		movu.B	r9, r9
 379 0180 61 09                   		cmp	#0, r9
 380 0182 3A 87 00                		beq	.L45
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				else if (plpStatus == 3) /* High Speed */
 381                             		.loc 1 683 0
 382 0185 61 39                   		cmp	#3, r9
 383 0187 3A 86 00                		beq	.L46
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_ACTIVE;
 384                             		.loc 1 689 0
 385 018a 66 1C                   		mov	#1, r12
 386                             	.LVL56:
 387 018c 2E 12                   		bra	.L31
 388                             	.LVL57:
 389                             	.L78:
 390                             	.LBB33:
 391                             	.LBB32:
1455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		res->cs_code = (uint8_t)(CS_LOAD_STATUS_DISPLACEMENT_PILOT+feedback_val);
1457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	else if ( ( load_status == CS_LOAD_NOT_ACTIVE ) || ( load_status == CS_LOAD_FFC_ONLY_RELAY_ACTIVE)
 392                             		.loc 1 1458 0
 393 018e 61 0D                   		cmp	#0, r13
 394 0190 10                      		beq	.L35
 395 0191 61 2D                   		cmp	#2, r13
 396 0193 15                      		beq	.L35
 397 0194 61 4D                   		cmp	#4, r13
 398 0196 1D                      		bne	.L36
 399                             	.LVL58:
 400 0197 03                      		.balign 2,3,1
 401                             	.L35:
1459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		res->cs_code = (uint8_t)(CS_LOAD_STATUS_DISPLACEMENT_NOT_PILOT+feedback_val);
 402                             		.loc 1 1460 0
 403 0198 62 4B                   		add	#4, r11
 404                             	.LVL59:
 405 019a 0C                      		bra	.L31
 406                             	.LVL60:
 407                             	.L36:
1461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	else
1463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		res->cs_code = (uint8_t)(CS_LOAD_STATUS_DISPLACEMENT_FFC_NOT_PILOT+feedback_val);
 408                             		.loc 1 1464 0
 409 019b 62 8B                   		add	#8, r11
 410                             	.LVL61:
 411 019d 03                      		.balign 2,3,1
 412                             	.L31:
 413                             	.LBE32:
 414                             	.LBE33:
 698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			CS_ManageRes(res,feedbackData.Data,loadPos);
 415                             		.loc 1 698 0
 416 019e EC 0E                   		mov.L	[r0], r14
 417                             	.LVL62:
 418                             	.LBB34:
 419                             	.LBB35:
1465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Depending from load's status and feedback's value returns a code inside consistency's table.
1471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n\n\n
1472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** case CONFIG_PM_CS_RES_PLUS_STATUS = TRUE
1474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** <TABLE>
1475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<TR>
1477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 15  	</th>
1478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 14-12  </th>
1479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 11   	</th>
1480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 10-8 	</th>
1481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 7  	</th>
1482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 6-4 	</th>
1483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 3 		</th>
1484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 2-0 	</th>
1485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</TR>
1486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<TR>
1488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<TD> 0 			</TD>
1489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<TD> P_CODE_1	</TD>
1490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0  		</td>
1491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> P_CODE_2	</td>
1492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0  		</td>
1493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> P_CODE_3 	</td>
1494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0  		</td>
1495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> P_CODE_4   </td>
1496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</TR>
1497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<TR>
1499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0 			</td>
1500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_1 	</td>
1501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0 			</td>
1502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_2	</td>
1503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0 			</td>
1504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_3	</td>
1505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0 			</td>
1506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_4	</td>
1507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</TR>
1508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<tr>
1509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> -	</td>
1510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0 	</td>
1511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> -	</td>
1512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 1	</td>
1513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> -	</td>
1514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 2 	</td>
1515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> -	</td>
1516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 3 	</td>
1517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</tr>
1518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** </TABLE>
1519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n\n\n\n
1520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** case CONFIG_PM_CS_RES_PLUS_STATUS undefined
1521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** <TABLE>
1523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<tr>
1524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 15-12 </th>
1525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 11-8 </th>
1526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 7-4 </th>
1527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<th> 3-0 </th>
1528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</tr>
1529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<tr>
1530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> P_CODE_1 </td>
1531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> P_CODE_2 </td>
1532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> P_CODE_3 </td>
1533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> P_CODE_4 </td>
1534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</tr>
1535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<tr>
1536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_1 </td>
1537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_2 </td>
1538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_3 </td>
1539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> NP_CODE_4 </td>
1540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</tr>
1541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	<tr>
1542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 0	</td>
1543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 1	</td>
1544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 2	</td>
1545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		<td> 3	</td>
1546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	</tr>
1547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** </TABLE>
1548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n P_CODE_X:  table for the load piloted
1551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \n NP_CODE_X: table for the load not piloted
1552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]		res structure of LoadStatusRes_t type
1554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]		pFeedBackData pointer to consistency's table
1555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]	    loadPos load's position inside output map
1556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \attention \b CS_Status_Var.pCS_Resource used as I/O
1558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static void CS_ManageRes( LoadStatusRes_t res, uint8_t *pFeedBackData, uint8_t loadPos )
1563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t retcode;
1565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	uint8_t *auxptr;
1566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/* Punto all'inizio della struttura NP_CODE_X */
1568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	auxptr = (uint8_t*)((uint16_t*)((void*)pFeedBackData) + *(pFeedBackData+1) + 1);
 420                             		.loc 1 1568 0
 421 01a0 59 ED 01                		movu.B	1[r14], r13
 422 01a3 62 1D                   		add	#1, r13
 423 01a5 4B DD                   		add	r13, r13
 424 01a7 FF 24 DE                		add	r13, r14, r4
 425                             	.LVL63:
1569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/* A seconda dello stato carico: CS_LOAD_ACTIVE,CS_LOAD_NOT_ACTIVE or CS_LOAD_FFC_NOT_ACTIVE
1570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	   punto alla word contenente i codici di ritorno per i diversi valori di feedback */
1571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	auxptr += 2*((res.cs_code>>2)&0x03);
 426                             		.loc 1 1571 0
 427 01aa 5B BE                   		movu.B	r11, r14
 428                             	.LVL64:
 429 01ac FD 82 ED                		shlr	#2, r14, r13
 430 01af 64 3D                   		and #3, r13
 431 01b1 4B DD                   		add	r13, r13
 432 01b3 4B 4D                   		add	r4, r13
 433                             	.LVL65:
1572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/* A seconda del valore del feedback 0,1,2,3 punto al byte alto o al byte basso */
1573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	auxptr += ((res.cs_code>>1) & 0x01);
 434                             		.loc 1 1573 0
 435 01b5 68 1E                   		shlr	#1, r14
 436 01b7 64 1E                   		and #1, r14
1574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/* A seconda del valore del feedback 0,1,2,3 ricavo il nibble contenente il codice operativo
1575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	   da ritornare */
1576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/*lint -e504 shift verificato */
1577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	retcode = (uint8_t)(((*(auxptr)) >> (4*((res.cs_code&0x01)^1))) & 0x0F);
 437                             		.loc 1 1577 0
 438 01b9 FE CE DD                		movu.B	[r14,r13], r13
 439                             	.LVL66:
 440 01bc 64 1B                   		and	#1, r11
 441                             	.LVL67:
 442 01be FC DB B0                		sceq.L	r11
 443 01c1 6C 2B                   		shll	#2, r11
 444 01c3 FD 61 BD                		shar	r11, r13
 445                             	.LBE35:
 446 01c6 64 FD                   		and #15, r13
 447                             	.LVL68:
 448                             	.LBB38:
1578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	/*lint +e504 */
1579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #if defined(CONFIG_PM_CS_RES_PLUS_STATUS)
1581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if (res.load_status == CS_LOAD_FFC_NOT_ACTIVE)
 449                             		.loc 1 1582 0
 450 01c8 5B CB                   		movu.B	r12, r11
 451 01ca 61 3B                   		cmp	#3, r11
 452 01cc 1C                      		bne	.L38
1583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	{
1584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		res.load_status = CS_LOAD_NOT_ACTIVE;
 453                             		.loc 1 1584 0
 454 01cd 66 0C                   		mov	#0, r12
 455                             	.LVL69:
 456 01cf 03                      		.balign 2,3,1
 457                             	.L38:
1585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	}
1586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	CS_ElemNewConsistency( loadPos, (uint8_t)(retcode | (uint8_t)(res.load_status<<3)) );
 458                             		.loc 1 1586 0
 459 01d0 6C 3C                   		shll	#3, r12
 460                             	.LVL70:
 461 01d2 57 CD                   		or	r12, r13
 462                             	.LVL71:
 463                             	.LBB36:
 464                             	.LBB37:
1587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #else
1589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	CS_ElemNewConsistency( loadPos, retcode );
1591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** #endif
1593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Store the new consistency value of the selected load in the related element \n
1598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** of pCS_Resource array
1599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]		array_ind: index of element into pCS_Resource array
1601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [in]		new_CS_value: new consistency value of array_ind-th element
1602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \return 	none
1605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	xyz
1608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		gg/mm/aaaa
1609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by xyz
1613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** static void CS_ElemNewConsistency( uint8_t array_ind, uint8_t new_CS_value )
1618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
1619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****   SAFETY_REGION_START();
1620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****   SAFETY_DATA_ELEM_CHECK( PLT_Consistency, array_ind );
1621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****   PLT_Consistency[array_ind] = new_CS_value;
 465                             		.loc 1 1622 0
 466 01d4 C3 AD                   		mov.B	r13, [r10]
 467 01d6 08                      		bra	.L5
 468                             	.LVL72:
 469                             	.L16:
 470                             	.LBE37:
 471                             	.LBE36:
 472                             	.LBE38:
 473                             	.LBE34:
1101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			PLT_ERROR_WARNING(PLT_ERROR_CONSISTENCY_NOT_SUPPORTED);
 474                             		.loc 1 1101 0
 475 01d7 75 41 39                		mov.L	#57, r1
 476                             	.LVL73:
 477 01da 05 00 00 00             		bsr	_LIB_Error_Warning_Handler
 478                             	.LVL74:
 479                             		.balign 2,3,1
 480                             	.L5:
 481 01de 62 17                   		add	#1, r7
 482 01e0 62 1A                   		add	#1, r10
 483                             		.balign 2,3,1
 484                             	.L4:
 485 01e2 CF 79                   		mov.B	r7, r9
 486                             	.LVL75:
 487                             	.LBE26:
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	for ( loadPos = 0; loadPos < nLoads; loadPos++)
 488                             		.loc 1 360 0 discriminator 1
 489 01e4 5B 7B                   		movu.B	r7, r11
 490 01e6 47 8B                   		cmp	r8, r11
 491 01e8 22 05 38 2C FE          		bltu	.L39
 492 01ed 2E 24                   		bra	.L79
 493                             	.L13:
 494                             	.LVL76:
 495                             	.LBB41:
 496                             	.LBB39:
 497                             	.LBB40:
 498                             		.loc 1 1622 0
 499 01ef F8 A4 FF                		mov.B	#-1, [r10]
 500                             	.LBE40:
 501                             	.LBE39:
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			continue; /* Process next load */
 502                             		.loc 1 467 0
 503 01f2 2E EC                   		bra	.L5
 504                             	.LVL77:
 505                             	.L77:
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		load_status = (uint8_t)(LIB_IOM_GetLoadStatus(loadPos)&LOAD_REG_MASK);
 506                             		.loc 1 474 0
 507 01f4 CF 91                   		mov.B	r9, r1
 508 01f6 05 00 00 00             		bsr	_LIB_IOM_GetLoadStatus
 509                             	.LVL78:
 510 01fa 64 F1                   		and #15, r1
 511 01fc CF 1C                   		mov.B	r1, r12
 512                             	.LVL79:
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		if (pilotType == PLP_L)
 513                             		.loc 1 477 0
 514 01fe 5B DB                   		movu.B	r13, r11
 515 0200 75 5B 13                		cmp	#19, r11
 516 0203 3B A6 FE                		bne	.L80
 517 0206 38 A6 FE                		bra	.L49
 518                             	.LVL80:
 519                             	.L45:
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_FFC_NOT_ACTIVE;
 520                             		.loc 1 681 0
 521 0209 66 3C                   		mov	#3, r12
 522                             	.LVL81:
 523 020b 2E 90                   		bra	.L36
 524                             	.LVL82:
 525                             	.L46:
 685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 					load_status = CS_LOAD_FAN_HIGH_SPEED;
 526                             		.loc 1 685 0
 527 020d 66 4C                   		mov	#4, r12
 528                             	.LVL83:
 529 020f 2E 89                   		bra	.L35
 530                             	.LVL84:
 531                             	.L79:
 532                             	.LBE41:
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
 533                             		.loc 1 1113 0
 534 0211 3F 6D 0D                		rtsd	#52, r6-r13
 535                             	.LFE2:
 537                             		.section	.text.PM_Consistency_SetModuleStatus,"ax",@progbits
 538                             		.global	_PM_Consistency_SetModuleStatus
 540                             	_PM_Consistency_SetModuleStatus:
 541                             	.LFB3:
1132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 542                             		.loc 1 1132 0
 543                             	.LVL85:
 544 0000 02                      		rts
 545                             	.LFE3:
 547                             		.section	.text.PM_Consistency_GetModuleStatus,"ax",@progbits
 548                             		.global	_PM_Consistency_GetModuleStatus
 550                             	_PM_Consistency_GetModuleStatus:
 551                             	.LFB4:
1165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 552                             		.loc 1 1165 0
1171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
 553                             		.loc 1 1171 0
 554 0000 66 01                   		mov.L	#0, r1
 555 0002 02                      		rts
 556                             	.LFE4:
 558                             		.section	.text.PM_Consistency_IsValueReady,"ax",@progbits
 559                             		.global	_PM_Consistency_IsValueReady
 561                             	_PM_Consistency_IsValueReady:
 562                             	.LFB5:
1197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 563                             		.loc 1 1197 0
 564                             	.LVL86:
 565 0000 7E A7                   		push.l	r7
 566                             	.LCFI2:
 567 0002 60 40                   		sub	#4, r0
 568                             	.LCFI3:
 569 0004 EF 27                   		mov.L	r2, r7
1203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	*pCS_Value = PM_CS_NOT_VALID_CODE;
 570                             		.loc 1 1203 0
 571 0006 F8 24 FF                		mov.B	#-1, [r2]
1205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	loadIndex = LIB_IOM_FindLoad(loadPos,&pByte);
 572                             		.loc 1 1205 0
 573 0009 EF 02                   		mov.L	r0, r2
 574                             	.LVL87:
 575 000b 05 00 00 00             		bsr	_LIB_IOM_FindLoad
 576                             	.LVL88:
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if ( loadIndex == 0xFF )
 577                             		.loc 1 1206 0
 578 000f 5B 11                   		movu.B	r1, r1
 579 0011 75 51 FF                		cmp	#0xff, r1
 580 0014 20 10                   		beq	.L88
1213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	*pCS_Value = PLT_Consistency[loadIndex];
 581                             		.loc 1 1213 0
 582 0016 FB E2 00 00 00 00       		mov.L	#_PLT_Consistency, r14
 583 001c FE 41 EE                		mov.B	[r1,r14], r14
 584 001f C3 7E                   		mov.B	r14, [r7]
1216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	return PM_CS_NO_ERROR;
 585                             		.loc 1 1216 0
 586 0021 66 01                   		mov	#0, r1
 587                             	.LVL89:
 588 0023 0B                      		bra	.L87
 589                             	.LVL90:
 590                             	.L88:
1208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		return PM_CS_ERROR;
 591                             		.loc 1 1208 0
 592 0024 66 11                   		mov	#1, r1
 593                             	.LVL91:
 594                             		.balign 2,3,1
 595                             	.L87:
1218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
 596                             		.loc 1 1218 0
 597 0026 64 11                   		and #1, r1
 598 0028 3F 77 02                		rtsd	#8, r7-r7
 599                             	.LFE5:
 601 002b 03                      		.section	.text.PM_Consistency_LoadChangedStatus,"ax",@progbits
 602                             		.global	_PM_Consistency_LoadChangedStatus
 604                             	_PM_Consistency_LoadChangedStatus:
 605                             	.LFB6:
1250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 606                             		.loc 1 1250 0
 607                             	.LVL92:
 608 0000 6E 7A                   		pushm	r7-r10
 609                             	.LCFI4:
 610 0002 60 C0                   		sub	#12, r0
 611                             	.LCFI5:
 612 0004 CD 0E 20                		mov.B	32[r0], r14
1253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	if (oldloadstatus != newloadstatus)
 613                             		.loc 1 1253 0
 614 0007 5B 22                   		movu.B	r2, r2
 615 0009 5B 33                   		movu.B	r3, r3
 616 000b 47 32                   		cmp	r3, r2
 617 000d 20 6F                   		beq	.L90
 618                             	.LBB42:
1258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		CS_Status_Var.CS_LoadCnt[loadPos] = 0;
 619                             		.loc 1 1258 0
 620 000f 5B 17                   		movu.B	r1, r7
 621 0011 FB 32 00 00 00 00       		mov.L	#_CS_Status_Var, r3
 622                             	.LVL93:
 623 0017 66 0A                   		mov	#0, r10
 624 0019 FE 07 3A                		mov.B	r10, [r7,r3]
1260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 		switch (pilottype)
 625                             		.loc 1 1260 0
 626 001c 5B E3                   		movu.B	r14, r3
 627 001e 75 53 1D                		cmp	#29, r3
 628 0021 24 5B                   		bgtu	.L90
 629 0023 CF E3                   		mov.B	r14, r3
 630 0025 66 1E                   		mov.L	#1, r14
 631 0027 FD 62 3E                		shll	r3, r14
 632 002a FD 70 CE 31 00 08 20    		tst	#0x20080031, r14
 633 0031 20 4B                   		beq	.L90
1306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			if ( BSLDR_OK != BasicLoader( SF_PTR_IO_DEVICE, LOAD_FEEDBACKS_OFFSET(pByte), &RamData) )
 634                             		.loc 1 1306 0
 635 0033 B0 4A                   		movu.B	1[r4], r2
 636                             	.LVL94:
 637 0035 75 41 21                		mov	#33, r1
 638                             	.LVL95:
 639 0038 EF 03                   		mov.L	r0, r3
 640 003a 05 00 00 00             		bsr	_BasicLoader
 641                             	.LVL96:
 642 003e 76 21 FF 00             		and #0xff, r1
 643 0042 21 3A                   		bne	.L90
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			switch ( FEEDBACK_READ_TYPE_VALUE(RamData.Data,0) )
 644                             		.loc 1 1312 0
 645 0044 EC 04                   		mov.L	[r0], r4
 646 0046 59 4E 02                		movu.B	2[r4], r14
 647 0049 61 7E                   		cmp	#7, r14
 648 004b 20 18                   		beq	.L97
 649 004d 24 05                   		bgtu	.L99
 650 004f 61 2E                   		cmp	#2, r14
 651 0051 08                      		bra	.L108
 652                             	.L99:
 653 0052 61 DE                   		cmp	#13, r14
 654 0054 20 16                   		beq	.L98
 655 0056 75 5E 12                		cmp	#18, r14
 656                             	.L108:
 657 0059 21 17                   		bne	.L95
1316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				LIB_FDB_FeedbackInitMeasure( FEEDBACK_POSITION_VALUE(RamData.Data,0) );
 658                             		.loc 1 1316 0
 659 005b 88 C9                   		mov.B	3[r4], r1
 660 005d 05 00 00 00             		bsr	_LIB_FDB_FeedbackInitMeasure
 661                             	.LVL97:
1317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				break;
 662                             		.loc 1 1317 0
 663 0061 2E 0F                   		bra	.L95
 664                             	.L97:
1321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				PM_FrequencyFeedbacks_RestartFeedbackByPosition( FEEDBACK_POSITION_VALUE(RamData.Data,0) );
 665                             		.loc 1 1321 0
 666 0063 88 C9                   		mov.B	3[r4], r1
 667 0065 05 00 00 00             		bsr	_PM_FrequencyFeedbacks_RestartFeedbackByPosition
 668                             	.LVL98:
1322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				break;
 669                             		.loc 1 1322 0
 670 0069 0F                      		bra	.L95
 671                             	.L98:
1326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 				PM_AnalogFeedbackResetMeasure( FEEDBACK_POSITION_VALUE(RamData.Data,0) );
 672                             		.loc 1 1326 0
 673 006a 88 C9                   		mov.B	3[r4], r1
 674 006c 05 00 00 00             		bsr	_PM_AnalogFeedbackResetMeasure
 675                             	.LVL99:
 676                             		.balign 2,3,5
 677                             	.L95:
 678                             	.LBB43:
 679                             	.LBB44:
 680                             		.loc 1 1622 0
 681 0070 FB E2 00 00 00 00       		mov.L	#_PLT_Consistency, r14
 682 0076 FB A6 FF                		mov	#-1, r10
 683 0079 FE 07 EA                		mov.B	r10, [r7,r14]
 684                             	.LVL100:
 685                             		.balign 2,3,2
 686                             	.L90:
 687                             	.LBE44:
 688                             	.LBE43:
 689                             	.LBE42:
1340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
 690                             		.loc 1 1340 0
 691 007c 3F 7A 07                		rtsd	#28, r7-r10
 692                             	.LFE6:
 694 007f 03                      		.section	.text.PM_Consistency_GetAllCsValues,"ax",@progbits
 695                             		.global	_PM_Consistency_GetAllCsValues
 697                             	_PM_Consistency_GetAllCsValues:
 698                             	.LFB11:
1623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****   SAFETY_DATA_ELEM_UPDATE( PLT_Consistency, array_ind );
1625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c ****   SAFETY_REGION_END();
1626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** }
1627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** /**
1629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** Returns all consistency values in pConsistency array
1630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \param  [out]		pConsistency: array to store consistency value, its size has to be N_MAXLOADS bytes.
1632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \return 	none
1634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \author 	Alessandro Sabbatini
1637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \date		07/03/2013
1638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \version	1.0.0
1639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** \note		\par \b Nota 1:
1641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 			documentation by Alessandro Sabbatini
1642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** */
1644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 
1645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** void PM_Consistency_GetAllCsValues(uint8_t *pConsistency)
1646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** {
 699                             		.loc 1 1646 0
 700                             	.LVL101:
1647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Consistency\PM_Consistency.c **** 	memcpy(pConsistency, PLT_Consistency, sizeof(PLT_Consistency));
 701                             		.loc 1 1647 0
 702 0000 FB 22 00 00 00 00       		mov.L	#_PLT_Consistency, r2
 703 0006 75 43 10                		mov.L	#16, r3
 704 0009 7F 8F                   		smovf
 705                             	.LVL102:
 706 000b 02                      		rts
 707                             	.LFE11:
 709                             		.section	.bss.CS_Status_Var,"aw",@nobits
 712                             	_CS_Status_Var:
 713 0000 00 00 00 00 00 00 00 00 		.zero	17
 713      00 00 00 00 00 00 00 00 
 713      00 
 714                             		.section	.bss.PLT_Consistency,"aw",@nobits
 717                             	_PLT_Consistency:
 718 0000 00 00 00 00 00 00 00 00 		.zero	16
 718      00 00 00 00 00 00 00 00 
 851                             	.Letext0:
 852                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 853                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/DIO_cfg.h"
 854                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Error/LIB_Error.h"
 855                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/Lib_utilities.h"
 856                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers/IO_driver.h"
 857                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_AnalogFeedbacks/PM_AnalogFe
 858                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_FreqFeedbacks/PM_FrequencyF
 859                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Feedbacks/FeedbacksExp.h"
 860                             		.file 10 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/OutputManager.
 861                             		.file 11 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_DigitalIO/DigitalInputsE
 862                             		.file 12 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_AnalogFeedbacks/PM_AnalogF
 863                             		.file 13 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_ZeroCrossing/LIB_ZeroCro
 864                             		.file 14 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/OutputManagerE
 865                             		.file 15 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Feedbacks/Feedbacks.h"
 866                             		.file 16 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_FreqFeedbacks/PM_Frequency
DEFINED SYMBOLS
                            *ABS*:00000000 PM_Consistency.c
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:7      .text.PM_Consistency_ConfigureOutputArray:00000000 _PM_Consistency_ConfigureOutputArray
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:12     .text.PM_Consistency_ConfigureOutputArray:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:18     .text.PM_Consistency_Init:00000000 _PM_Consistency_Init
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:22     .text.PM_Consistency_Init:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:712    .bss.CS_Status_Var:00000000 _CS_Status_Var
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:717    .bss.PLT_Consistency:00000000 _PLT_Consistency
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:38     .text.PM_Consistency_Manager:00000000 _PM_Consistency_Manager
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:41     .text.PM_Consistency_Manager:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:540    .text.PM_Consistency_SetModuleStatus:00000000 _PM_Consistency_SetModuleStatus
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:544    .text.PM_Consistency_SetModuleStatus:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:550    .text.PM_Consistency_GetModuleStatus:00000000 _PM_Consistency_GetModuleStatus
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:554    .text.PM_Consistency_GetModuleStatus:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:561    .text.PM_Consistency_IsValueReady:00000000 _PM_Consistency_IsValueReady
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:565    .text.PM_Consistency_IsValueReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:604    .text.PM_Consistency_LoadChangedStatus:00000000 _PM_Consistency_LoadChangedStatus
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:608    .text.PM_Consistency_LoadChangedStatus:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:697    .text.PM_Consistency_GetAllCsValues:00000000 _PM_Consistency_GetAllCsValues
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:702    .text.PM_Consistency_GetAllCsValues:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:119    .rodata.PM_Consistency_Manager:00000000 .L12
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:248    .rodata.PM_Consistency_Manager:0000004c .L27
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:146    .text.PM_Consistency_Manager:0000007c .L8
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:169    .text.PM_Consistency_Manager:00000092 .L42
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:140    .text.PM_Consistency_Manager:00000076 .L9
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:152    .text.PM_Consistency_Manager:00000082 .L10
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:158    .text.PM_Consistency_Manager:00000087 .L11
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:269    .text.PM_Consistency_Manager:00000100 .L21
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:321    .text.PM_Consistency_Manager:0000013c .L43
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:279    .text.PM_Consistency_Manager:00000111 .L23
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:314    .text.PM_Consistency_Manager:00000134 .L20
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:285    .text.PM_Consistency_Manager:00000117 .L24
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:304    .text.PM_Consistency_Manager:0000012c .L25
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:297    .text.PM_Consistency_Manager:00000127 .L26
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:720    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:8      .text.PM_Consistency_ConfigureOutputArray:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:19     .text.PM_Consistency_Init:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:39     .text.PM_Consistency_Manager:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:541    .text.PM_Consistency_SetModuleStatus:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:551    .text.PM_Consistency_GetModuleStatus:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:562    .text.PM_Consistency_IsValueReady:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:605    .text.PM_Consistency_LoadChangedStatus:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:698    .text.PM_Consistency_GetAllCsValues:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:2304   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4078   .debug_str:000004c5 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4230   .debug_str:00000c08 .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3922   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3960   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4224   .debug_str:00000bdc .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4056   .debug_str:000003bf .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4284   .debug_str:00000ecf .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4106   .debug_str:0000065b .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3994   .debug_str:0000016a .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4110   .debug_str:00000691 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4022   .debug_str:00000271 .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4266   .debug_str:00000dd8 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4214   .debug_str:00000b83 .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3980   .debug_str:000000c4 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4028   .debug_str:000002c2 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4260   .debug_str:00000da4 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4018   .debug_str:0000025c .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4316   .debug_str:00001053 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4148   .debug_str:0000088a .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4322   .debug_str:00001087 .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4154   .debug_str:000008cf .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4252   .debug_str:00000d5e .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4168   .debug_str:0000096a .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3998   .debug_str:00000182 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4244   .debug_str:00000d06 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4246   .debug_str:00000d19 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3986   .debug_str:00000105 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3988   .debug_str:00000118 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4320   .debug_str:00001074 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4076   .debug_str:000004b1 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4206   .debug_str:00000b2c .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4208   .debug_str:00000b41 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4130   .debug_str:00000764 .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4096   .debug_str:000005af .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4236   .debug_str:00000c7d .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4172   .debug_str:00000991 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4288   .debug_str:00000eed .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4136   .debug_str:000007c3 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4268   .debug_str:00000de0 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4326   .debug_str:000010ba .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4238   .debug_str:00000cb2 .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4082   .debug_str:0000050a .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4084   .debug_str:00000521 .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4086   .debug_str:00000538 .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4088   .debug_str:0000054f .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4344   .debug_str:000011c5 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4092   .debug_str:00000573 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4350   .debug_str:000011f8 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3962   .debug_str:00000000 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4332   .debug_str:0000113e .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4114   .debug_str:000006b5 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4156   .debug_str:000008d8 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4158   .debug_str:000008f0 .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4160   .debug_str:00000908 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4336   .debug_str:00001160 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4164   .debug_str:0000093a .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4166   .debug_str:00000952 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4016   .debug_str:00000243 .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4118   .debug_str:000006d7 .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4120   .debug_str:000006f0 .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4122   .debug_str:00000709 .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4124   .debug_str:00000722 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4340   .debug_str:00001185 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4306   .debug_str:00000fea .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4128   .debug_str:0000074b .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4210   .debug_str:00000b56 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4294   .debug_str:00000f56 .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4292   .debug_str:00000f31 .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4144   .debug_str:00000855 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3976   .debug_str:0000009f .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4234   .debug_str:00000c6a .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4346   .debug_str:000011dc .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3996   .debug_str:00000173 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4098   .debug_str:000005eb .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4296   .debug_str:00000f7b .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4102   .debug_str:0000062a .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4072   .debug_str:00000477 .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4094   .debug_str:0000058a .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4058   .debug_str:000003c8 .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4176   .debug_str:000009db .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4108   .debug_str:0000066d .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4074   .debug_str:00000491 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4300   .debug_str:00000fb2 .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4060   .debug_str:000003e4 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4328   .debug_str:000010ef .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4324   .debug_str:00001095 .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3992   .debug_str:00000144 .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4046   .debug_str:0000033d .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4330   .debug_str:0000111a .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4256   .debug_str:00000d78 .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4162   .debug_str:00000920 .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4304   .debug_str:00000fd3 .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4034   .debug_str:000002de .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4100   .debug_str:00000608 .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4026   .debug_str:0000029f .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4274   .debug_str:00000e3d .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4188   .debug_str:00000a61 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4196   .debug_str:00000ac3 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4000   .debug_str:00000191 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4012   .debug_str:000001f7 .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3970   .debug_str:00000056 .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4150   .debug_str:00000895 .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4314   .debug_str:00001033 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4048   .debug_str:00000361 .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4044   .debug_str:00000325 .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3968   .debug_str:00000037 .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4222   .debug_str:00000bbe .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4142   .debug_str:0000083a .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4298   .debug_str:00000f95 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4254   .debug_str:00000d63 .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4308   .debug_str:00001003 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4262   .debug_str:00000db1 .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3990   .debug_str:0000012b .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4170   .debug_str:00000976 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4066   .debug_str:00000442 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4286   .debug_str:00000ee2 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4290   .debug_str:00000f23 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4004   .debug_str:000001c6 .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4174   .debug_str:000009c5 .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4062   .debug_str:00000402 .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4010   .debug_str:000001ed .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4134   .debug_str:000007a9 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4064   .debug_str:00000424 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4020   .debug_str:00000263 .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4318   .debug_str:00001058 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4024   .debug_str:0000027f .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4276   .debug_str:00000e6c .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4232   .debug_str:00000c5e .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4204   .debug_str:00000b24 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4240   .debug_str:00000ce6 .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4040   .debug_str:00000310 .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4006   .debug_str:000001d3 .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4132   .debug_str:00000793 .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4116   .debug_str:000006cd .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4090   .debug_str:00000566 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4248   .debug_str:00000d2c .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:13     .text.PM_Consistency_ConfigureOutputArray:00000001 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3972   .debug_str:00000084 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3982   .debug_str:000000d0 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:33     .text.PM_Consistency_Init:0000001c .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4186   .debug_str:00000a55 .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4008   .debug_str:000001df .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4212   .debug_str:00000b76 .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3974   .debug_str:00000093 .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3964   .debug_str:00000017 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4070   .debug_str:0000046b .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4280   .debug_str:00000eaa .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4338   .debug_str:00001178 .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4312   .debug_str:00001026 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4200   .debug_str:00000aff .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4218   .debug_str:00000ba7 .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4038   .debug_str:00000308 .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4190   .debug_str:00000a90 .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4052   .debug_str:0000038c .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:535    .text.PM_Consistency_Manager:00000214 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3047   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4258   .debug_str:00000d97 .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4030   .debug_str:000002c9 .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3065   .debug_loc:0000002c .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3109   .debug_loc:00000080 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4178   .debug_str:000009f5 .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3125   .debug_loc:000000aa .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4310   .debug_str:0000101c .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3136   .debug_loc:000000c8 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4036   .debug_str:000002ff .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3159   .debug_loc:00000107 .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3225   .debug_loc:00000186 .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3248   .debug_loc:000001c5 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4220   .debug_str:00000baf .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4014   .debug_str:00000228 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3324   .debug_loc:0000026a .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4068   .debug_str:0000045c .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3358   .debug_loc:000002a6 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3365   .debug_loc:000002b9 .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4032   .debug_str:000002cf .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4334   .debug_str:00001156 .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3372   .debug_loc:000002cc .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:231    .text.PM_Consistency_Manager:000000ea .LBB27
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:328    .text.PM_Consistency_Manager:00000140 .LBE27
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3397   .debug_loc:0000030d .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:232    .text.PM_Consistency_Manager:000000ea .LBB28
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:327    .text.PM_Consistency_Manager:00000140 .LBE28
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3451   .debug_loc:00000372 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3499   .debug_loc:000003d1 .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3530   .debug_loc:0000041f .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:286    .text.PM_Consistency_Manager:00000117 .LBB29
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:298    .text.PM_Consistency_Manager:00000127 .LBE29
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:290    .text.PM_Consistency_Manager:0000011e .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:282    .text.PM_Consistency_Manager:00000115 .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:301    .text.PM_Consistency_Manager:0000012b .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:307    .text.PM_Consistency_Manager:00000130 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:319    .text.PM_Consistency_Manager:0000013b .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:351    .text.PM_Consistency_Manager:00000166 .LBB30
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3559   .debug_loc:00000464 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3580   .debug_loc:0000049c .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3595   .debug_loc:000004c5 .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:418    .text.PM_Consistency_Manager:000001a0 .LBB34
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:473    .text.PM_Consistency_Manager:000001d7 .LBE34
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3611   .debug_loc:000004ef .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3623   .debug_loc:0000050e .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3651   .debug_loc:00000544 .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3658   .debug_loc:00000557 .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:463    .text.PM_Consistency_Manager:000001d4 .LBB36
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:471    .text.PM_Consistency_Manager:000001d7 .LBE36
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3717   .debug_loc:000005ac .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:496    .text.PM_Consistency_Manager:000001ef .LBB39
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:501    .text.PM_Consistency_Manager:000001f2 .LBE39
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3731   .debug_loc:000005c6 .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:60     .text.PM_Consistency_Manager:0000001f .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:65     .text.PM_Consistency_Manager:00000029 .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:75     .text.PM_Consistency_Manager:0000003a .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:143    .text.PM_Consistency_Manager:0000007a .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:149    .text.PM_Consistency_Manager:00000080 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:155    .text.PM_Consistency_Manager:00000086 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:161    .text.PM_Consistency_Manager:0000008b .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:365    .text.PM_Consistency_Manager:00000172 .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:370    .text.PM_Consistency_Manager:00000179 .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:478    .text.PM_Consistency_Manager:000001de .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:509    .text.PM_Consistency_Manager:000001fa .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:47     .text.PM_Consistency_Manager:00000009 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4152   .debug_str:000008b0 .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:545    .text.PM_Consistency_SetModuleStatus:00000001 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4302   .debug_str:00000fcc .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4080   .debug_str:000004eb .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:556    .text.PM_Consistency_GetModuleStatus:00000003 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4342   .debug_str:000011a9 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:599    .text.PM_Consistency_IsValueReady:0000002b .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3740   .debug_loc:000005db .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3758   .debug_loc:00000607 .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4002   .debug_str:000001bc .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3772   .debug_loc:00000628 .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4042   .debug_str:0000031b .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3783   .debug_loc:00000646 .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:576    .text.PM_Consistency_IsValueReady:0000000f .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3984   .debug_str:000000e4 .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:692    .text.PM_Consistency_LoadChangedStatus:0000007f .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3794   .debug_loc:00000664 .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3812   .debug_loc:00000690 .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4250   .debug_str:00000d50 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3830   .debug_loc:000006bc .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4198   .debug_str:00000af1 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3844   .debug_loc:000006dd .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3858   .debug_loc:000006fe .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4272   .debug_str:00000e33 .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:618    .text.PM_Consistency_LoadChangedStatus:0000000f .LBB42
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:689    .text.PM_Consistency_LoadChangedStatus:0000007c .LBE42
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4226   .debug_str:00000be6 .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:678    .text.PM_Consistency_LoadChangedStatus:00000070 .LBB43
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:688    .text.PM_Consistency_LoadChangedStatus:0000007c .LBE43
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3872   .debug_loc:0000071f .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:641    .text.PM_Consistency_LoadChangedStatus:0000003e .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:661    .text.PM_Consistency_LoadChangedStatus:00000061 .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:668    .text.PM_Consistency_LoadChangedStatus:00000069 .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:675    .text.PM_Consistency_LoadChangedStatus:00000070 .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4270   .debug_str:00000e15 .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:707    .text.PM_Consistency_GetAllCsValues:0000000c .LFE11
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4264   .debug_str:00000dcb .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3881   .debug_loc:00000734 .LLST35
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4194   .debug_str:00000ab5 .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4242   .debug_str:00000cf6 .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3978   .debug_str:000000ba .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4184   .debug_str:00000a2c .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4202   .debug_str:00000b0d .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4180   .debug_str:000009fc .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4112   .debug_str:000006a8 .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4140   .debug_str:00000822 .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4050   .debug_str:0000037b .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4104   .debug_str:00000646 .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4348   .debug_str:000011ec .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4146   .debug_str:0000086a .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4282   .debug_str:00000eb8 .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4138   .debug_str:000007f9 .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:3966   .debug_str:0000001e .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4126   .debug_str:0000073b .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4228   .debug_str:00000bee .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4182   .debug_str:00000a16 .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4216   .debug_str:00000b91 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4054   .debug_str:000003a3 .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4278   .debug_str:00000e7a .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:4192   .debug_str:00000a97 .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:42     .text.PM_Consistency_Manager:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:44     .text.PM_Consistency_Manager:00000005 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:350    .text.PM_Consistency_Manager:00000166 .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:359    .text.PM_Consistency_Manager:0000016e .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:388    .text.PM_Consistency_Manager:0000018e .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:399    .text.PM_Consistency_Manager:00000197 .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:404    .text.PM_Consistency_Manager:0000019a .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:406    .text.PM_Consistency_Manager:0000019b .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:410    .text.PM_Consistency_Manager:0000019d .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:441    .text.PM_Consistency_Manager:000001be .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:528    .text.PM_Consistency_Manager:0000020f .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:530    .text.PM_Consistency_Manager:00000211 .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:53     .text.PM_Consistency_Manager:00000016 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:486    .text.PM_Consistency_Manager:000001e4 .LVL75
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:67     .text.PM_Consistency_Manager:0000002b .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:72     .text.PM_Consistency_Manager:00000034 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:355    .text.PM_Consistency_Manager:00000168 .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:468    .text.PM_Consistency_Manager:000001d7 .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:504    .text.PM_Consistency_Manager:000001f4 .LVL77
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:102    .text.PM_Consistency_Manager:00000065 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:105    .text.PM_Consistency_Manager:00000067 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:110    .text.PM_Consistency_Manager:0000006c .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:145    .text.PM_Consistency_Manager:0000007c .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:151    .text.PM_Consistency_Manager:00000082 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:157    .text.PM_Consistency_Manager:00000087 .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:168    .text.PM_Consistency_Manager:00000092 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:172    .text.PM_Consistency_Manager:00000094 .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:107    .text.PM_Consistency_Manager:0000006a .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:190    .text.PM_Consistency_Manager:000000a9 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:235    .text.PM_Consistency_Manager:000000ed .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:341    .text.PM_Consistency_Manager:00000158 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:348    .text.PM_Consistency_Manager:00000163 .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:386    .text.PM_Consistency_Manager:0000018c .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:476    .text.PM_Consistency_Manager:000001da .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:512    .text.PM_Consistency_Manager:000001fe .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:518    .text.PM_Consistency_Manager:00000209 .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:522    .text.PM_Consistency_Manager:0000020b .LVL81
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:524    .text.PM_Consistency_Manager:0000020d .LVL82
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:82     .text.PM_Consistency_Manager:00000046 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:86     .text.PM_Consistency_Manager:0000004a .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:88     .text.PM_Consistency_Manager:0000004d .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:98     .text.PM_Consistency_Manager:00000063 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:181    .text.PM_Consistency_Manager:0000009d .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:177    .text.PM_Consistency_Manager:00000096 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:200    .text.PM_Consistency_Manager:000000ae .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:230    .text.PM_Consistency_Manager:000000ea .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:238    .text.PM_Consistency_Manager:000000f0 .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:284    .text.PM_Consistency_Manager:00000117 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:296    .text.PM_Consistency_Manager:00000127 .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:303    .text.PM_Consistency_Manager:0000012c .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:313    .text.PM_Consistency_Manager:00000134 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:317    .text.PM_Consistency_Manager:00000137 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:276    .text.PM_Consistency_Manager:0000010f .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:278    .text.PM_Consistency_Manager:00000111 .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:311    .text.PM_Consistency_Manager:00000132 .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:324    .text.PM_Consistency_Manager:0000013f .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:868    .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:417    .text.PM_Consistency_Manager:000001a0 .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:428    .text.PM_Consistency_Manager:000001ac .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:455    .text.PM_Consistency_Manager:000001cf .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:460    .text.PM_Consistency_Manager:000001d2 .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:447    .text.PM_Consistency_Manager:000001c8 .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:462    .text.PM_Consistency_Manager:000001d4 .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:425    .text.PM_Consistency_Manager:000001aa .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:433    .text.PM_Consistency_Manager:000001b5 .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:439    .text.PM_Consistency_Manager:000001bc .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:494    .text.PM_Consistency_Manager:000001ef .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:566    .text.PM_Consistency_IsValueReady:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:568    .text.PM_Consistency_IsValueReady:00000004 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:564    .text.PM_Consistency_IsValueReady:00000000 .LVL86
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:574    .text.PM_Consistency_IsValueReady:0000000b .LVL87
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:587    .text.PM_Consistency_IsValueReady:00000023 .LVL89
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:589    .text.PM_Consistency_IsValueReady:00000024 .LVL90
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:593    .text.PM_Consistency_IsValueReady:00000026 .LVL91
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:609    .text.PM_Consistency_LoadChangedStatus:00000002 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:611    .text.PM_Consistency_LoadChangedStatus:00000004 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:607    .text.PM_Consistency_LoadChangedStatus:00000000 .LVL92
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:638    .text.PM_Consistency_LoadChangedStatus:00000038 .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:684    .text.PM_Consistency_LoadChangedStatus:0000007c .LVL100
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:636    .text.PM_Consistency_LoadChangedStatus:00000035 .LVL94
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:622    .text.PM_Consistency_LoadChangedStatus:00000017 .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:700    .text.PM_Consistency_GetAllCsValues:00000000 .LVL101
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:705    .text.PM_Consistency_GetAllCsValues:0000000b .LVL102
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:55     .text.PM_Consistency_Manager:00000016 .LBB26
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:487    .text.PM_Consistency_Manager:000001e4 .LBE26
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:495    .text.PM_Consistency_Manager:000001ef .LBB41
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:532    .text.PM_Consistency_Manager:00000211 .LBE41
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:362    .text.PM_Consistency_Manager:0000016e .LBE30
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:390    .text.PM_Consistency_Manager:0000018e .LBB33
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:414    .text.PM_Consistency_Manager:0000019e .LBE33
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:419    .text.PM_Consistency_Manager:000001a0 .LBB35
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:445    .text.PM_Consistency_Manager:000001c6 .LBE35
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:448    .text.PM_Consistency_Manager:000001c8 .LBB38
C:\Users\Andrea\AppData\Local\Temp\ccgpgBsg.s:472    .text.PM_Consistency_Manager:000001d7 .LBE38

UNDEFINED SYMBOLS
_LIB_IOM_NumberOfLoads
_LIB_IOM_FindLoad
_LIB_IOM_GetPilotType
_BasicLoader
_LIB_FDB_IsFeedbackWritableReady
_LIB_DIO_IsDigitalReady
_PM_FrequencyFeedbacks_GetReadyByPosition
_PM_AnalogFeedbackIsReady
_DigInputs
_LIB_FDB_GetFeedbackVal
_PM_FrequencyFeedbacks_GetValueByPosition
_PM_AnalogFeedbackGetValue
_goodZCSignal
_LIB_Error_Fatal_Handler
_IsZCSyncOngoing
_LIB_Error_Warning_Handler
_LIB_IOM_GetLoadStatus
_LIB_FDB_FeedbackInitMeasure
_PM_FrequencyFeedbacks_RestartFeedbackByPosition
_PM_AnalogFeedbackResetMeasure
