   1                             		.file	"DW_Regulations.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.REG_getBufFunctionsIDs,"ax",@progbits
   5                             		.global	_REG_getBufFunctionsIDs
   7                             	_REG_getBufFunctionsIDs:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface/DW_Regulations.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Copyright (c) 2004-2008, Indesit Company, EDT.
   3:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
   7:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
   8:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \Par	G
   9:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \Header file.
  10:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  
  11:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \file    DW_Regulations.c
  12:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \ingroup DW_Regulations
  13:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date    12/02/2008
  14:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author  Valeria Catani
  15:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version 1.0.0
  16:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  17:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  Old Versions
  18:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version 1.0.0
  19:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date    24/01/2006
  20:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author  Simone Costantini - Valeria Catani - Marco Quintini
  21:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
  22:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  23:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ******** */
  24:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* Includes */
  25:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ******** */
  26:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** #include "CstmHeaders.h"
  27:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  28:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  29:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* Defines and Macros */
  30:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  31:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  32:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  33:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* *************************** */
  34:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* Typedef, Structs and Unions */
  35:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* *************************** */
  36:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  37:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* **************************** */
  38:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* Prototype of local functions */
  39:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* **************************** */
  40:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  41:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  42:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* Exported variables */
  43:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  44:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  45:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* **************** */
  46:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* Global variables */
  47:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* **************** */
  48:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  49:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ***************** */
  50:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* Exported function */
  51:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /* ***************** */
  52:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  53:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
  54:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Inizializza il vettore BufFunctionsIDs[] con gli ID delle funzioni definite nel file di setting
  55:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** e utilizzate dall'applicazione main.
  56:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  
  57:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	none
  58:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [out]	BufFunctionsIDs[] (global) Ã¨ il vettore con gli ID delle funzioni della main
  59:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \return 		none
  60:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  61:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \notes:			se ci sono problemi di caricamento BufFunctionsIDs[i] viene forzato a FUNC_ID_GENERIC.
  62:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  63:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
  64:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
  65:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
  66:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  67:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
  68:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** void REG_getBufFunctionsIDs(void)
  69:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** {
  10                             		.loc 1 69 0
  11 0000 6E 7D                   		pushm	r7-r13
  12                             	.LCFI0:
  13 0002 60 80                   		sub	#8, r0
  14                             	.LCFI1:
  15                             	.LVL0:
  70:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t i;   
  71:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Loader_Struct funcHeader;
  72:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  16                             		.loc 1 73 0
  17 0004 66 0A                   		mov	#0, r10
  18 0006 FB C2 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r12
  74:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{	
  75:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		BufFunctionsIDs[i] = FUNC_ID_GENERIC; 	
  19                             		.loc 1 75 0
  20 000c FB B2 00 00 00 00       		mov.L	#_BufFunctionsIDs, r11
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  21                             		.loc 1 73 0
  22 0012 2E 24                   		bra	.L2
  23                             	.LVL1:
  24                             	.L4:
  25                             		.loc 1 75 0
  26 0014 66 0D                   		mov	#0, r13
  27 0016 FE 07 BD                		mov.B	r13, [r7,r11]
  76:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		if( BasicLoader((uint16_t)PTR_FUNCTION_HEADING, i, &funcHeader ) == S_OK )
  28                             		.loc 1 76 0
  29 0019 75 41 52                		mov	#0x52, r1
  30 001c DF 72                   		mov.W	r7, r2
  31 001e EF 03                   		mov.L	r0, r3
  32 0020 05 00 00 00             		bsr	_BasicLoader
  33                             	.LVL2:
  34 0024 76 21 FF 00             		and #0xff, r1
  35 0028 21 0C                   		bne	.L3
  77:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		{
  78:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		   	BufFunctionsIDs[i] = ( OFFS_B(funcHeader.Data, FUNCTION_ID_OFFSET) & FUNCTION_ID_MASK );
  36                             		.loc 1 78 0
  37 002a EC 0E                   		mov.L	[r0], r14
  38 002c CC EE                   		mov.B	[r14], r14
  39 002e 75 2E 7F                		and #0x7f, r14
  40 0031 FE 07 BE                		mov.B	r14, [r7,r11]
  41                             		.balign 2,3,1
  42                             	.L3:
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  43                             		.loc 1 73 0
  44 0034 62 1A                   		add	#1, r10
  45                             	.LVL3:
  46                             		.balign 2,3,1
  47                             	.L2:
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  48                             		.loc 1 73 0 is_stmt 0 discriminator 1
  49 0036 EC CE                   		mov.L	[r12], r14
  50 0038 5B A7                   		movu.B	r10, r7
  51 003a 44 E7                   		cmp	[r14].UB, r7
  52 003c 23 D8                   		bltu	.L4
  79:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		}
  80:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}	    
  81:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** }
  53                             		.loc 1 81 0 is_stmt 1
  54 003e 3F 7D 09                		rtsd	#36, r7-r13
  55                             	.LFE0:
  57 0041 03                      		.section	.text.REG_getFuncPosition,"ax",@progbits
  58                             		.global	_REG_getFuncPosition
  60                             	_REG_getFuncPosition:
  61                             	.LFB1:
  82:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**/
  83:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  84:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  85:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
  86:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Restituisce la posizione della funzione nell'elenco delle funzioni definite nel file di setting e
  87:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** utilizzate dall'applicazione main, effettuando la ricerca all'interno di BufFunctionsIDs[].
  88:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  
  89:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in]		BufFunctionsIDs[] (global) Ã¨ il vettore con gli ID delle funzioni della main
  90:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	functionID Ã¨ il codice identificativo della funzione
  91:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [out]	*pFuncPos Ã¨ la posizione della funzione nella lista e nel buffer delle regolazioni.
  92:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				E' anche il displacement, all'interno del campo dati individuato da PTR_FUNCTION_HEADING,
  93:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				della funzione functionID.
  94:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	 
  95:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \return 		S_OK se la funzione Ã¨ stata eseguita correttamente, un codice d'errore altrimenti.
  96:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
  97:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \notes:			questa routine puÃ² essere utilizzata solo dopo che BufFunctionsIDs[] Ã¨ stato
  98:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				inizializzato
  99:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
 102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
 105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFuncPosition( uint8_t functionID, uint8_t *pFuncPos )
 106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** {
  62                             		.loc 1 106 0
  63                             	.LVL4:
 107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t i;
 108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ ){
  64                             		.loc 1 109 0
  65 0000 FB E2 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r14
  66 0006 EC E4                   		mov.L	[r14], r4
  67 0008 66 0E                   		mov.L	#0, r14
  68 000a 58 43                   		movu.B	[r4], r3
 110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		if( BufFunctionsIDs[i] == functionID )
  69                             		.loc 1 111 0
  70 000c 5B 11                   		movu.B	r1, r1
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ ){
  71                             		.loc 1 109 0
  72 000e 2E 15                   		bra	.L7
  73                             	.LVL5:
  74                             	.L9:
  75 0010 62 1E                   		add	#1, r14
 105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFuncPosition( uint8_t functionID, uint8_t *pFuncPos )
  76                             		.loc 1 105 0
  77 0012 70 E5 00 00 00 00       		add	#_BufFunctionsIDs-1, r14, r5
  78                             		.loc 1 111 0
  79 0018 58 55                   		movu.B	[r5], r5
  80 001a 47 15                   		cmp	r1, r5
  81 001c 1F                      		bne	.L7
 112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		{
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			*pFuncPos = i;
  82                             		.loc 1 113 0
  83 001d C3 24                   		mov.B	r4, [r2]
 114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			
 115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			return S_OK;
  84                             		.loc 1 115 0
  85 001f 66 01                   		mov	#0, r1
  86                             	.LVL6:
  87 0021 2E 0D                   		bra	.L8
  88                             	.LVL7:
  89                             	.L7:
  90 0023 CF E4                   		mov.B	r14, r4
  91                             	.LVL8:
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ ){
  92                             		.loc 1 109 0 discriminator 1
  93 0025 5B E5                   		movu.B	r14, r5
  94 0027 47 35                   		cmp	r3, r5
  95 0029 23 E7                   		bltu	.L9
 116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		}			 
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	
 119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	return REG_ERR_FUNC_NOT_FOUND;
  96                             		.loc 1 119 0
  97 002b FB 16 C9                		mov	#-55, r1
  98                             		.balign 2,3,3
  99                             	.L8:
 120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** }
 100                             		.loc 1 120 0
 101 002e 76 21 C9 00             		and #0xc9, r1
 102 0032 02                      		rts
 103                             	.LFE1:
 105 0033 03                      		.section	.text.REG_getFunctionValueByPos,"ax",@progbits
 106                             		.global	_REG_getFunctionValueByPos
 108                             	_REG_getFunctionValueByPos:
 109                             	.LFB2:
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**/
 122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
 124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Per la funzione individuata da funcPos, restituisce il valore corrispondente all'indice di 
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** regolazione contenuto in BufNewReg[], noto l'indice della tabella di regolazione.
 126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in]		funcPos Ã¨ la posizione della funzione nell'elenco delle funzioni definite nel 
 128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				file di setting
 129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [out]	*pFunctionVal Ã¨ il valore della funzione
 130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \					 
 131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	 
 132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \return 		S_OK se la funzione Ã¨ stata eseguita correttamente, un codice d'errore altrimenti.
 133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \warning		REG_WRN_OUT_OF_RANGE_INDEX se l'indice di regolazione Ã¨ >= del numero massimo di
 134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				regolazioni specificato nella tabella di regolazione
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \notes:			nel caso si voglia utilizzare la routine per ricavare il valore della funzione
 137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				rispetto ad un indice di regolazione che non sia quello in BufNewReg[], occorre
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				passare come parametro il buffer delle regolazioni da considerare.
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date   		05/06/2006
 142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
 145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFunctionValueByPos( uint8_t funcPos, uint16_t *pFunctionVal )
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** {
 110                             		.loc 1 146 0
 111                             	.LVL9:
 112 0000 6E 7B                   		pushm	r7-r11
 113                             	.LCFI2:
 114 0002 71 00 F0                		add	#-16, r0
 115                             	.LCFI3:
 116 0005 EF 27                   		mov.L	r2, r7
 147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Loader_Struct funcHeader;
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Loader_Struct mainRegTable;
 149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t regTableDispl; 		/* Displacement tabella regolazione rispetto PTR_UI_MAIN_REG_PARAM_TABLE *
 150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t dataFormat;
 151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t stepReg; 
 152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t valStep;	
 153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint16_t stepPerReg;
 154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t indexReg;
 156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	indexReg = (BufNewReg[funcPos] - 1);	/* L'indice di regolazione ha un offset di 1 */
 117                             		.loc 1 158 0
 118 0007 5B 12                   		movu.B	r1, r2
 119                             	.LVL10:
 120 0009 FB A2 00 00 00 00       		mov.L	#_BufNewReg, r10
 121 000f FE 42 AB                		mov.B	[r2,r10], r11
 122 0012 60 1B                   		sub	#1, r11
 123                             	.LVL11:
 159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****       
 160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	/** Se (BufNewReg[funcPos] == 0) si Ã¨ in presenza di un caso particolare in cui comunque non
 161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		si deve ricavare il valore della funzione dalla tabella */
 162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	if( indexReg == 0xFF )
 124                             		.loc 1 162 0
 125 0014 5B BA                   		movu.B	r11, r10
 126 0016 75 5A FF                		cmp	#0xff, r10
 127 0019 3A AF 00                		beq	.L27
 163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		return REG_NULL_INDEX;
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  	
 167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  	if( BasicLoader((uint16_t)PTR_FUNCTION_HEADING, funcPos, &funcHeader) != S_OK )
 128                             		.loc 1 167 0
 129 001c 75 41 52                		mov	#0x52, r1
 130                             	.LVL12:
 131 001f 71 03 08                		add	#8, r0, r3
 132 0022 05 00 00 00             		bsr	_BasicLoader
 133                             	.LVL13:
 134 0026 76 21 FF 00             		and #0xff, r1
 135 002a 10                      		beq	.L13
 136 002b 03                      		.balign 2,3,2
 137                             	.L14:
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		return REG_ERR_BASIC_LOADER;
 138                             		.loc 1 169 0
 139 002c FB 16 C8                		mov	#-56, r1
 140 002f 38 A3 00                		bra	.L12
 141                             	.L13:
 142                             	.LVL14:
 170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	regTableDispl = OFFS_B(funcHeader.Data, (uint8_t)((NUM_WORDS_FUNC_DESCR*2) + MAIN_REG_TAB_OFFSET))
 143                             		.loc 1 172 0
 144 0032 ED 0E 02                		mov.L	8[r0], r14
 173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	if( BasicLoader((uint16_t)PTR_UI_MAIN_REG_PARAM_TABLE, regTableDispl, &mainRegTable) != S_OK )
 145                             		.loc 1 174 0
 146 0035 59 E2 0A                		movu.B	10[r14], r2
 147 0038 75 41 23                		mov	#35, r1
 148 003b EF 03                   		mov.L	r0, r3
 149 003d 05 00 00 00             		bsr	_BasicLoader
 150                             	.LVL15:
 151 0041 76 21 FF 00             		and #0xff, r1
 152 0045 21 E7                   		bne	.L14
 175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		return REG_ERR_BASIC_LOADER;	
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****     
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	dataFormat = (OFFS_B(mainRegTable.Data, DATA_FORMAT_OFFSET) & DATA_FORMAT_MASK);
 153                             		.loc 1 179 0
 154 0047 EC 0E                   		mov.L	[r0], r14
 155 0049 CC E4                   		mov.B	[r14], r4
 156                             	.LVL16:
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  
 181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	stepReg = (OFFS_B(funcHeader.Data, (uint8_t)(NUM_WORDS_FUNC_DESCR*2)) & STEP_REG_MASK);
 157                             		.loc 1 181 0
 158 004b A8 82                   		mov.L	8[r0], r2
 159 004d 89 A3                   		mov.B 6[r2], r3
 160 004f 75 23 20                		and #32, r3
 161                             	.LVL17:
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	if( stepReg )
 162                             		.loc 1 183 0
 163 0052 5B 31                   		movu.B	r3, r1
 164 0054 76 24 C0 00             		and #0xc0, r4
 165                             	.LVL18:
 166 0058 61 01                   		cmp	#0, r1
 167 005a 20 2C                   		beq	.L15
 168                             	.LVL19:
 184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		valStep = OFFS_B(mainRegTable.Data, STEP_OFFSET);
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		stepPerReg = (valStep * (uint16_t)(indexReg));	/*	Attenzione: se l'ozione -Cni Ã¨
 169                             		.loc 1 186 0
 170 005c 4D EA 01                		mul	1[r14].UB, r10
 171                             	.LVL20:
 187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 															settata Ã¨ necessario castare uno dei
 188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 															due operandia uint16_t,	altrimenti il
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 															compilatore tronca il prodotto a uint8_t */
 190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		switch( dataFormat )
 172                             		.loc 1 190 0
 173 005f 75 54 40                		cmp	#64, r4
 174 0062 20 19                   		beq	.L18
 175 0064 24 08                   		bgtu	.L21
 176 0066 61 04                   		cmp	#0, r4
 177 0068 20 0F                   		beq	.L17
 178 006a 2E 4C                   		bra	.L16
 179                             	.L21:
 180 006c 75 54 80                		cmp	#0x80, r4
 181 006f 20 10                   		beq	.L20
 182 0071 75 54 C0                		cmp	#0xc0, r4
 183 0074 21 42                   		bne	.L16
 184 0076 09                      		bra	.L20
 185                             	.L17:
 191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		{
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_UCHAR:
 193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(uint8_t*)(mainRegTable.Data + CHAR_INIT_VAL_OFFSET)) + stepPerReg);
 186                             		.loc 1 193 0
 187 0077 59 EE 03                		movu.B	3[r14], r14
 188                             	.LVL21:
 189 007a 08                      		bra	.L32
 190                             	.LVL22:
 191                             	.L18:
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SCHAR:	
 197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(int8_t*)(mainRegTable.Data + CHAR_INIT_VAL_OFFSET)) + stepPerReg);
 192                             		.loc 1 197 0
 193 007b CD EE 03                		mov.B	3[r14], r14
 194                             	.LVL23:
 195 007e 0C                      		bra	.L32
 196                             	.LVL24:
 197                             	.L20:
 198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			
 200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_USHORT:
 201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(uint16_t*)(mainRegTable.Data + WORD_INIT_VAL_OFFSET)) + stepPerReg );
 202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SSHORT:
 205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(int16_t*)(mainRegTable.Data + WORD_INIT_VAL_OFFSET)) + stepPerReg );
 198                             		.loc 1 205 0
 199 007f DD EE 01                		mov.W	2[r14], r14
 200                             	.LVL25:
 201                             		.balign 2,3,1
 202                             	.L32:
 203 0082 4B EA                   		add	r14, r10
 204                             	.LVL26:
 205 0084 2E 20                   		bra	.L31
 206                             	.LVL27:
 207                             	.L15:
 206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			default:
 209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		}
 211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	else
 213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		switch( dataFormat )
 208                             		.loc 1 214 0
 209 0086 75 54 40                		cmp	#64, r4
 210 0089 20 1F                   		beq	.L23
 211 008b 24 08                   		bgtu	.L26
 212 008d 61 04                   		cmp	#0, r4
 213 008f 20 10                   		beq	.L22
 214 0091 2E 25                   		bra	.L16
 215                             	.L26:
 216 0093 75 54 80                		cmp	#0x80, r4
 217 0096 20 19                   		beq	.L25
 218 0098 75 54 C0                		cmp	#0xc0, r4
 219 009b 21 1B                   		bne	.L16
 220 009d 2E 12                   		bra	.L25
 221                             	.L22:
 215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		{
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_UCHAR:
 217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(uint8_t*)(mainRegTable.Data + INIT_VAL_OFFSET + indexReg);
 222                             		.loc 1 217 0
 223 009f 4B AE                   		add	r10, r14
 224                             	.LVL28:
 225 00a1 59 EA 02                		movu.B	2[r14], r10
 226                             		.balign 2,3,1
 227                             	.L31:
 228 00a4 D3 7A                   		mov.W	r10, [r7]
 218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 229                             		.loc 1 218 0
 230 00a6 2E 10                   		bra	.L16
 231                             	.LVL29:
 232                             	.L23:
 219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SCHAR:
 220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(int8_t*)(mainRegTable.Data + INIT_VAL_OFFSET + indexReg);
 233                             		.loc 1 220 0
 234 00a8 4B AE                   		add	r10, r14
 235                             	.LVL30:
 236 00aa CD EA 02                		mov.B	2[r14], r10
 237 00ad 2E F7                   		bra	.L31
 238                             	.LVL31:
 239                             	.L25:
 221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_USHORT:
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(uint16_t*)(mainRegTable.Data + INIT_VAL_OFFSET + (2*indexReg));	 
 224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SSHORT:			
 226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(int16_t*)(mainRegTable.Data + INIT_VAL_OFFSET + (2*indexReg));	 
 240                             		.loc 1 226 0
 241 00af 4B AA                   		add	r10, r10
 242 00b1 4B AE                   		add	r10, r14
 243                             	.LVL32:
 244 00b3 D1 E7 01                		mov.W	2[r14], [r7]
 245                             		.balign 2,3,1
 246                             	.L16:
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			default:
 230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		} 
 232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	/* Controllo se l'indice di regolazione Ã¨ >= numero massimo di regolazioni */
 237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	if (indexReg >= OFFS_B(funcHeader.Data, (uint8_t)((NUM_WORDS_FUNC_DESCR*2) + NUM_REG_OFFSET)))
 247                             		.loc 1 237 0
 248 00b6 5B BB                   		movu.B	r11, r11
 249 00b8 45 2B 08                		cmp	8[r2].UB, r11
 250 00bb 23 11                   		bltu	.L28
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		if(stepReg)
 251                             		.loc 1 239 0
 252 00bd 76 23 FF 00             		and #0xff, r3
 253                             	.LVL33:
 254 00c1 20 0E                   		beq	.L29
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		{
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			/* Per regolazioni a step il warning potrebbe anche essere ignorato per alcune funzioni */
 242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			return REG_WRN_OUT_OF_RANGE_INDEX;
 255                             		.loc 1 242 0
 256 00c3 75 41 48                		mov	#0x48, r1
 257                             	.LVL34:
 258 00c6 2E 0C                   		bra	.L12
 259                             	.LVL35:
 260                             	.L27:
 164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		return REG_NULL_INDEX;
 261                             		.loc 1 164 0
 262 00c8 FB 16 CB                		mov	#-53, r1
 263                             	.LVL36:
 264 00cb 0F                      		bra	.L12
 265                             	.LVL37:
 266                             	.L28:
 243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		}
 244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		else
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		{
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			return REG_ERR_OUT_OF_RANGE_INDEX;
 247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		}
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	
 250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	return S_OK; 	
 267                             		.loc 1 250 0
 268 00cc 66 01                   		mov	#0, r1
 269 00ce 0C                      		bra	.L12
 270                             	.LVL38:
 271                             	.L29:
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			return REG_ERR_OUT_OF_RANGE_INDEX;
 272                             		.loc 1 246 0
 273 00cf FB 16 CC                		mov	#-52, r1
 274                             	.LVL39:
 275                             		.balign 2,3,3
 276                             	.L12:
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** }
 277                             		.loc 1 251 0
 278 00d2 76 21 CF 00             		and #0xcf, r1
 279 00d6 3F 7B 09                		rtsd	#36, r7-r11
 280                             	.LFE2:
 282 00d9 03                      		.section	.text.REG_getFunctionValueByID,"ax",@progbits
 283                             		.global	_REG_getFunctionValueByID
 285                             	_REG_getFunctionValueByID:
 286                             	.LFB3:
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Per la funzione individuata da functionID, restituisce il valore corrispondente all'indice di 
 255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** regolazione contenuto in BufNewReg[].
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in]		functionID Ã¨ il codice identificativo della funzione
 258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [out]	*pFunctionVal Ã¨ il valore della funzione
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \					 
 260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	 
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \return 		S_OK se la funzione Ã¨ stata eseguita correttamente, un codice d'errore altrimenti.
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date   		05/06/2006
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
 268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFunctionValueByID( uint8_t functionID, uint16_t *pFunctionVal )
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** {
 287                             		.loc 1 269 0
 288                             	.LVL40:
 289 0000 7E A7                   		push.l	r7
 290                             	.LCFI4:
 291 0002 60 40                   		sub	#4, r0
 292                             	.LCFI5:
 293 0004 EF 27                   		mov.L	r2, r7
 270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t funcPos;
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	if(REG_getFuncPosition(functionID, &funcPos) != S_OK)
 294                             		.loc 1 273 0
 295 0006 EF 02                   		mov.L	r0, r2
 296                             	.LVL41:
 297 0008 05 00 00 00             		bsr	_REG_getFuncPosition
 298                             	.LVL42:
 299 000c 76 21 FF 00             		and #0xff, r1
 300 0010 1A                      		bne	.L35
 301                             	.LVL43:
 274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****     	return REG_ERR_FUNC_NOT_FOUND;
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****     
 278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	return ( REG_getFunctionValueByPos(funcPos, pFunctionVal) );
 302                             		.loc 1 278 0
 303 0011 CC 01                   		mov.B	[r0], r1
 304 0013 EF 72                   		mov.L	r7, r2
 305 0015 05 00 00 00             		bsr	_REG_getFunctionValueByPos
 306                             	.LVL44:
 307 0019 0D                      		bra	.L34
 308                             	.LVL45:
 309                             	.L35:
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****     	return REG_ERR_FUNC_NOT_FOUND;
 310                             		.loc 1 275 0
 311 001a FB 16 C9                		mov	#-55, r1
 312                             	.LVL46:
 313 001d 03                      		.balign 2,3,1
 314                             	.L34:
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** }
 315                             		.loc 1 279 0
 316 001e 5B 11                   		movu.B	r1, r1
 317 0020 3F 77 02                		rtsd	#8, r7-r7
 318                             	.LFE3:
 320 0023 03                      		.section	.text.REG_checkIfChanged,"ax",@progbits
 321                             		.global	_REG_checkIfChanged
 323                             	_REG_checkIfChanged:
 324                             	.LFB4:
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**/
 281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Controlla se l'indice di regolazione della funzione (avente per ID functionID) Ã¨ diverso in 
 284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** BufNewReg[] e BufOldReg[].
 285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****  
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	functionID Ã¨ il codice identificativo della funzione
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufNewReg[] (global) Ã¨ il buffer delle nuove regolazioni dalla scheda Visual 
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufOldReg[] (global) Ã¨ il buffer delle vecchie regolazioni Main
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [out]	none
 290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \return 		TRUE se l'indice Ã¨ diverso
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				FALSE se l'indice Ã¨ uguale o se non Ã¨ stato possibile determinare la posizione
 292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				della funzione nell'elenco delle funzioni.
 293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \notes:
 295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
 298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_checkIfChanged(uint8_t functionID)
 302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** {
 325                             		.loc 1 302 0
 326                             	.LVL47:
 327 0000 60 40                   		sub	#4, r0
 328                             	.LCFI6:
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t regPosition;
 304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	if( REG_getFuncPosition(functionID, &regPosition) == S_OK )
 329                             		.loc 1 305 0
 330 0002 EF 02                   		mov.L	r0, r2
 331 0004 05 00 00 00             		bsr	_REG_getFuncPosition
 332                             	.LVL48:
 333 0008 76 21 FF 00             		and #0xff, r1
 334 000c 21 1E                   		bne	.L39
 335                             	.LVL49:
 306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    if( BufNewReg[regPosition] != BufOldReg[regPosition] )
 336                             		.loc 1 307 0
 337 000e 58 0E                   		movu.B	[r0], r14
 338 0010 FB 42 00 00 00 00       		mov.L	#_BufNewReg, r4
 339 0016 FE CE 41                		movu.B	[r14,r4], r1
 340 0019 FB 42 00 00 00 00       		mov.L	#_BufOldReg, r4
 341 001f FE CE 4E                		movu.B	[r14,r4], r14
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    {
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    	return REG_CHANGED;
 342                             		.loc 1 309 0
 343 0022 47 E1                   		cmp	r14, r1
 344 0024 FC DB 10                		sceq.L	r1
 345 0027 62 11                   		add	#1, r1
 346 0029 0B                      		bra	.L38
 347                             	.LVL50:
 348                             	.L39:
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    }
 311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    else
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    {
 313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    	return REG_UNCHANGED;
 314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    }
 315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	else
 317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****     	return REG_NOT_EXIST;
 349                             		.loc 1 318 0
 350 002a 66 01                   		mov	#0, r1
 351                             	.LVL51:
 352                             		.balign 2,3,1
 353                             	.L38:
 319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c ****     }
 320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** }
 354                             		.loc 1 320 0
 355 002c 5B 11                   		movu.B	r1, r1
 356 002e 67 01                   		rtsd	#4
 357                             	.LFE4:
 359                             		.section	.text.REG_updateOldReg,"ax",@progbits
 360                             		.global	_REG_updateOldReg
 362                             	_REG_updateOldReg:
 363                             	.LFB5:
 321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**/
 322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
 324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Pone BufOldReg[] della funzione avente per ID functionID uguale a BufNewReg[].
 325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	functionID Ã¨ il codice identificativo della funzione
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufNewReg[] (global) Ã¨ il buffer delle nuove regolazioni (dalla scheda Visual)
 328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [out] 	BufOldReg[] (global) Ã¨ il buffer delle vecchie regolazioni Main
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \return 		none
 331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \notes:
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
 336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
 339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** void REG_updateOldReg(uint8_t functionID)
 340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** {
 364                             		.loc 1 340 0
 365                             	.LVL52:
 366 0000 60 40                   		sub	#4, r0
 367                             	.LCFI7:
 341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t regPosition;
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	if( REG_getFuncPosition(functionID, &regPosition) == S_OK )
 368                             		.loc 1 343 0
 369 0002 EF 02                   		mov.L	r0, r2
 370 0004 05 00 00 00             		bsr	_REG_getFuncPosition
 371                             	.LVL53:
 372 0008 76 21 FF 00             		and #0xff, r1
 373 000c 21 16                   		bne	.L42
 374                             	.LVL54:
 344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{
 345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	    BufOldReg[regPosition] = BufNewReg[regPosition];
 375                             		.loc 1 345 0
 376 000e 58 0E                   		movu.B	[r0], r14
 377 0010 FB 32 00 00 00 00       		mov.L	#_BufNewReg, r3
 378 0016 FB 42 00 00 00 00       		mov.L	#_BufOldReg, r4
 379 001c FE 4E 33                		mov.B	[r14,r3], r3
 380 001f FE 0E 43                		mov.B	r3, [r14,r4]
 381                             		.balign 2,3,1
 382                             	.L42:
 346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** }
 383                             		.loc 1 347 0
 384 0022 67 01                   		rtsd	#4
 385                             	.LFE5:
 387                             		.section	.text.REG_updateFuncToMainOldReg,"ax",@progbits
 388                             		.global	_REG_updateFuncToMainOldReg
 390                             	_REG_updateFuncToMainOldReg:
 391                             	.LFB6:
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**/
 349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** /**
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** Pone BufOldReg[] delle funzioni 'To Main' non esplicitamente processate in SPV_superVisor()
 352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uguale a BufNewReg[].
 353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufNewReg[] (global) Ã¨ il buffer delle nuove regolazioni (dalla scheda Visual)
 355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \param [out] 	BufOldReg[] (global) Ã¨ il buffer delle vecchie regolazioni Main
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \return 		none
 358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \notes:
 360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \date   		25/07/2006
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** \version    	1.0.0
 364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** */
 366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** void REG_updateFuncToMainOldReg(void)
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** {
 392                             		.loc 1 367 0
 393 0000 6E 7A                   		pushm	r7-r10
 394                             	.LCFI8:
 395                             	.LVL55:
 368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** uint8_t i;   
 369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 396                             		.loc 1 370 0
 397 0002 FB 72 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r7
 398 0008 EC 71                   		mov.L	[r7], r1
 399 000a 66 04                   		mov	#0, r4
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	{	
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		switch(BufFunctionsIDs[i])
 400                             		.loc 1 372 0
 401 000c FB 32 00 00 00 00       		mov.L	#_BufFunctionsIDs, r3
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		{
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_SELECTOR:
 375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_START:
 376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_DELAY_HH:
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_DELAY_MM:
 380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_TEMPERATURE:
 381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			/* Aggiungere le altre funzioni processate esplicitamente in SPV_superVisor Â§_Â§ */
 384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			/* Do nothing, processed separately */ 
 386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			
 389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			default:
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			
 391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 				BufOldReg[i] = BufNewReg[i];
 402                             		.loc 1 391 0
 403 0012 FB 52 00 00 00 00       		mov.L	#_BufOldReg, r5
 404 0018 FB F2 00 00 00 00       		mov.L	#_BufNewReg, r15
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		switch(BufFunctionsIDs[i])
 405                             		.loc 1 372 0
 406 001e 66 17                   		mov.L	#1, r7
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 407                             		.loc 1 370 0
 408 0020 2E 22                   		bra	.L46
 409                             	.LVL56:
 410                             	.L49:
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		switch(BufFunctionsIDs[i])
 411                             		.loc 1 372 0
 412 0022 FE CE 32                		movu.B	[r14,r3], r2
 413 0025 75 52 14                		cmp	#20, r2
 414 0028 24 12                   		bgtu	.L47
 415 002a FE 4E 32                		mov.B	[r14,r3], r2
 416 002d EF 7A                   		mov.L	r7, r10
 417 002f FD 62 2A                		shll	r2, r10
 418 0032 FD 7C CA 0E 00 18       		tst	#0x18000e, r10
 419 0038 18                      		bne	.L48
 420 0039 03                      		.balign 2,3,5
 421                             	.L47:
 422                             		.loc 1 391 0
 423 003a FE 4E FA                		mov.B	[r14,r15], r10
 424 003d FE 0E 5A                		mov.B	r10, [r14,r5]
 425                             		.balign 2,3,1
 426                             	.L48:
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 427                             		.loc 1 370 0
 428 0040 62 14                   		add	#1, r4
 429                             	.LVL57:
 430                             		.balign 2,3,1
 431                             	.L46:
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 432                             		.loc 1 370 0 is_stmt 0 discriminator 1
 433 0042 5B 4E                   		movu.B	r4, r14
 434 0044 44 1E                   		cmp	[r1].UB, r14
 435 0046 23 DC                   		bltu	.L49
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			
 393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 			break;
 394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 		}
 395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 	}	    
 396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** 
 398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/UserInterface\DW_Regulations.c **** }
 436                             		.loc 1 398 0 is_stmt 1
 437 0048 3F 7A 04                		rtsd	#16, r7-r10
 438                             	.LFE6:
 584                             	.Letext0:
 585                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 586                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 587                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_General.h"
 588                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_BusCommMng.h"
 589                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmGlobal.h"
DEFINED SYMBOLS
                            *ABS*:00000000 DW_Regulations.c
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:7      .text.REG_getBufFunctionsIDs:00000000 _REG_getBufFunctionsIDs
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:11     .text.REG_getBufFunctionsIDs:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:60     .text.REG_getFuncPosition:00000000 _REG_getFuncPosition
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:65     .text.REG_getFuncPosition:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:108    .text.REG_getFunctionValueByPos:00000000 _REG_getFunctionValueByPos
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:112    .text.REG_getFunctionValueByPos:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:285    .text.REG_getFunctionValueByID:00000000 _REG_getFunctionValueByID
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:289    .text.REG_getFunctionValueByID:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:323    .text.REG_checkIfChanged:00000000 _REG_checkIfChanged
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:327    .text.REG_checkIfChanged:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:362    .text.REG_updateOldReg:00000000 _REG_updateOldReg
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:366    .text.REG_updateOldReg:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:390    .text.REG_updateFuncToMainOldReg:00000000 _REG_updateFuncToMainOldReg
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:393    .text.REG_updateFuncToMainOldReg:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:441    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:8      .text.REG_getBufFunctionsIDs:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:61     .text.REG_getFuncPosition:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:109    .text.REG_getFunctionValueByPos:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:286    .text.REG_getFunctionValueByID:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:324    .text.REG_checkIfChanged:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:363    .text.REG_updateOldReg:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:391    .text.REG_updateFuncToMainOldReg:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1153   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2270   .debug_str:00000149 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2252   .debug_str:00000084 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2212   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2230   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2288   .debug_str:000001d5 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2296   .debug_str:000001fe .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2314   .debug_str:00000263 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2316   .debug_str:0000026d .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2264   .debug_str:0000011c .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2262   .debug_str:0000010a .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2238   .debug_str:00000025 .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2326   .debug_str:000002a8 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2304   .debug_str:0000021f .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2294   .debug_str:000001f6 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2258   .debug_str:000000f2 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2248   .debug_str:00000063 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2256   .debug_str:000000e6 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2300   .debug_str:0000020f .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2280   .debug_str:000001a4 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2232   .debug_str:00000000 .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2234   .debug_str:0000000b .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2302   .debug_str:00000216 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2308   .debug_str:00000235 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2310   .debug_str:0000023a .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2246   .debug_str:00000052 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2320   .debug_str:0000027e .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:55     .text.REG_getBufFunctionsIDs:00000041 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1638   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1656   .debug_loc:0000002c .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2278   .debug_str:00000199 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:33     .text.REG_getBufFunctionsIDs:00000024 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2254   .debug_str:000000d2 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:103    .text.REG_getFuncPosition:00000033 .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2290   .debug_str:000001e2 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1668   .debug_loc:0000004b .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2292   .debug_str:000001ed .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1682   .debug_loc:0000006c .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2250   .debug_str:0000006a .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:280    .text.REG_getFunctionValueByPos:000000d9 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1698   .debug_loc:00000096 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2244   .debug_str:0000004a .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1716   .debug_loc:000000c2 .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2282   .debug_str:000001a9 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1749   .debug_loc:00000112 .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2276   .debug_str:0000018c .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2266   .debug_str:0000012f .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1760   .debug_loc:00000130 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2242   .debug_str:0000003f .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1771   .debug_loc:00000147 .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2318   .debug_str:00000276 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1933   .debug_loc:00000250 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2306   .debug_str:0000022d .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:1963   .debug_loc:00000296 .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2324   .debug_str:0000029d .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2005   .debug_loc:000002ef .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2298   .debug_str:00000206 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2032   .debug_loc:0000031d .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:133    .text.REG_getFunctionValueByPos:00000026 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:150    .text.REG_getFunctionValueByPos:00000041 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2328   .debug_str:000002bf .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:318    .text.REG_getFunctionValueByID:00000023 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2039   .debug_loc:00000330 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2057   .debug_loc:0000035c .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2071   .debug_loc:0000037d .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2082   .debug_loc:0000039b .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:298    .text.REG_getFunctionValueByID:0000000c .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:306    .text.REG_getFunctionValueByID:00000019 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2272   .debug_str:0000016f .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:357    .text.REG_checkIfChanged:00000030 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2095   .debug_loc:000003bb .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2108   .debug_loc:000003db .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2236   .debug_str:00000019 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2122   .debug_loc:000003fc .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:332    .text.REG_checkIfChanged:00000008 .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2240   .debug_str:0000002e .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:385    .text.REG_updateOldReg:00000024 .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2135   .debug_loc:0000041c .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2148   .debug_loc:0000043c .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:371    .text.REG_updateOldReg:00000008 .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2312   .debug_str:00000248 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:438    .text.REG_updateFuncToMainOldReg:0000004b .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2162   .debug_loc:0000045d .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2175   .debug_loc:0000047d .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2322   .debug_str:00000295 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2286   .debug_str:000001c6 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2260   .debug_str:00000100 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2274   .debug_str:00000182 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2284   .debug_str:000001b6 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:2268   .debug_str:0000013d .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:12     .text.REG_getBufFunctionsIDs:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:14     .text.REG_getBufFunctionsIDs:00000004 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:15     .text.REG_getBufFunctionsIDs:00000004 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:23     .text.REG_getBufFunctionsIDs:00000014 .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:63     .text.REG_getFuncPosition:00000000 .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:86     .text.REG_getFuncPosition:00000021 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:73     .text.REG_getFuncPosition:00000010 .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:88     .text.REG_getFuncPosition:00000023 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:91     .text.REG_getFuncPosition:00000025 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:113    .text.REG_getFunctionValueByPos:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:115    .text.REG_getFunctionValueByPos:00000005 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:111    .text.REG_getFunctionValueByPos:00000000 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:130    .text.REG_getFunctionValueByPos:0000001f .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:259    .text.REG_getFunctionValueByPos:000000c8 .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:263    .text.REG_getFunctionValueByPos:000000cb .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:265    .text.REG_getFunctionValueByPos:000000cc .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:119    .text.REG_getFunctionValueByPos:00000009 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:142    .text.REG_getFunctionValueByPos:00000032 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:156    .text.REG_getFunctionValueByPos:0000004b .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:165    .text.REG_getFunctionValueByPos:00000058 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:188    .text.REG_getFunctionValueByPos:0000007a .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:190    .text.REG_getFunctionValueByPos:0000007b .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:194    .text.REG_getFunctionValueByPos:0000007e .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:196    .text.REG_getFunctionValueByPos:0000007f .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:200    .text.REG_getFunctionValueByPos:00000082 .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:206    .text.REG_getFunctionValueByPos:00000086 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:224    .text.REG_getFunctionValueByPos:000000a1 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:231    .text.REG_getFunctionValueByPos:000000a8 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:235    .text.REG_getFunctionValueByPos:000000aa .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:238    .text.REG_getFunctionValueByPos:000000af .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:243    .text.REG_getFunctionValueByPos:000000b3 .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:274    .text.REG_getFunctionValueByPos:000000d2 .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:161    .text.REG_getFunctionValueByPos:00000052 .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:253    .text.REG_getFunctionValueByPos:000000c1 .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:257    .text.REG_getFunctionValueByPos:000000c6 .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:270    .text.REG_getFunctionValueByPos:000000cf .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:168    .text.REG_getFunctionValueByPos:0000005c .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:171    .text.REG_getFunctionValueByPos:0000005f .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:204    .text.REG_getFunctionValueByPos:00000084 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:123    .text.REG_getFunctionValueByPos:00000014 .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:290    .text.REG_getFunctionValueByID:00000002 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:292    .text.REG_getFunctionValueByID:00000004 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:288    .text.REG_getFunctionValueByID:00000000 .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:296    .text.REG_getFunctionValueByID:00000008 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:301    .text.REG_getFunctionValueByID:00000011 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:308    .text.REG_getFunctionValueByID:0000001a .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:312    .text.REG_getFunctionValueByID:0000001d .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:328    .text.REG_checkIfChanged:00000002 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:326    .text.REG_checkIfChanged:00000000 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:335    .text.REG_checkIfChanged:0000000e .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:347    .text.REG_checkIfChanged:0000002a .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:351    .text.REG_checkIfChanged:0000002c .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:367    .text.REG_updateOldReg:00000002 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:365    .text.REG_updateOldReg:00000000 .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:394    .text.REG_updateFuncToMainOldReg:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:395    .text.REG_updateFuncToMainOldReg:00000002 .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:409    .text.REG_updateFuncToMainOldReg:00000022 .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccIz5ybQ.s:591    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Tab_HWCFuncNum
_BufFunctionsIDs
_BasicLoader
_BufNewReg
_BufOldReg
