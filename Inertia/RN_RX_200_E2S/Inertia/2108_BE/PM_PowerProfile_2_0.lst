   1                             		.file	"PM_PowerProfile_2_0.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.PM_PowerProfile_ModTab_ExtendValue,"ax",@progbits
   6                             	_PM_PowerProfile_ModTab_ExtendValue:
   7                             	.LFB22:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile/PM_PowerProfile_2_0
   1:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Copyright (c) 2004-2014, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
   7:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
   8:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n
   9:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \par        PM_PowerProfile_2_0.c
  10:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n          it contains version 2.0 of Power Profile
  11:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \file       PM_PowerProfile_2_0.c
  12:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \ingroup    PM_PowerProfile
  13:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       May 27, 2014
  14:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    01.00
  15:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author
  16:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n
  17:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n
  18:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \par\b      History:
  19:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n
  20:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n          01.00
  21:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n          09/11/2010
  22:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n          Alessandro Sabbatini
  23:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \n          - file created
  24:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
  25:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  26:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* ******** */
  27:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Includes */
  28:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* ******** */
  29:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*lint -e537*/
  30:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  31:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #include "PM_PowerProfile.h"
  32:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #include "StandardDefines.h"
  33:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #include "LIB_UTilities.h"
  34:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  35:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  36:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*lint +e537*/
  37:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  38:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  39:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #if defined(CONFIG_PM_POWER_PROFILE_SUPPORT) && defined(CONFIG_PM_POWER_PROFILE_V2_0)
  40:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  41:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**********************/
  42:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Defines and Macros */
  43:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**********************/
  44:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  45:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** assertion macro */
  46:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PM_POWER_PROFILE_ASSERT(Exp, ErrCode, ID)		if (!(Exp)) \
  47:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 														{\
  48:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 															if(PM_PowerProfile_Error(ID, ErrCode))\
  49:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 															{\
  50:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 																while(1){;}\
  51:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 															}\
  52:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 														}
  53:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  54:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  55:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  56:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* PowerProfileStatus flags */
  57:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PM_POWER_PROFILE_STATUS_FLAGS__NO_MODIFIERS				1
  58:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PM_POWER_PROFILE_STATUS_FLAGS__NO_PTR_POWER_PROFILE		2
  59:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PM_POWER_PROFILE_STATUS_FLAGS__NO_ENERGY_PHASE			4
  60:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PM_POWER_PROFILE_STATUS_FLAGS__FORCERELOAD				8
  61:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  62:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #if !defined(CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM)
  63:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM 				1
  64:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #endif
  65:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  66:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #if !defined(CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM)
  67:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM 			1
  68:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #endif
  69:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  70:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Macros to read bit-fields of SF_PowerProfileDataEnergyPhaseType */
  71:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASE_GET_PHASE_INDEX(_ptr)            MBGET(1, (SF_PowerProfileDataEnergyPhaseTyp
  72:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASE_GET_FUNCID(_ptr)                 BF_8_GET(MBGET(1, (_ptr), initFuncPhase),0,
  73:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASE_GET_DURATION_OFF(_ptr)           BF_16_GET((MBGET(2, _ptr, Doff_)),0,11)
  74:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASE_GET_DURATION_ON(_ptr)            BF_16_GET((MBGET(2, _ptr, Don_)),0,11)
  75:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASE_GET_MACROPHASE_ID(_ptr)          BF_16_GET(MBGET(2, _ptr, powerAndID_OFF), 1
  76:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASE_GET_MEANPOWER_OFF(_ptr)          BF_16_GET((MBGET(2, _ptr, powerAndID_OFF)),
  77:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASE_GET_MEANPOWER_ON(_ptr)           BF_16_GET((MBGET(2, _ptr, power_ON)),0,13)
  78:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  79:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  80:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Macros to read bit-fields of SF_EnergyPhaseDataParamsType */
  81:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_MAXPOWER(_ptr)         BF_16_GET(MBGET(2, _ptr, maxPower), 0,13)
  82:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_MAXDELAY(_ptr)         BF_16_GET(MBGET(2, _ptr, maxDelay), 0,11)
  83:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_MAXDELAY_OVLD(_ptr)    BF_16_GET(MBGET(2, _ptr, maxDelayOvld), 0,1
  84:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_MAXPOWERMOD(_ptr)      MBGET(2, _ptr, maxPowerModIdx)
  85:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_ENERGYMOD_ON(_ptr)     MBGET(2, _ptr, onMeanPowerModIdx)
  86:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_ENERGYMOD_OFF(_ptr)    MBGET(2, _ptr, offMeanPowerModIdx)
  87:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_DURATIONMOD_ON(_ptr)   MBGET(2, _ptr, DonModIdx)
  88:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_DURATIONMOD_OFF(_ptr)  MBGET(2, _ptr, DoffModIdx)
  89:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_MAXDELAYMOD(_ptr)      MBGET(2, _ptr, maxDelayModIdx)
  90:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define SF_ENERGYPHASEPARAMS_GET_MAXDELAY_OVLDMOD(_ptr) MBGET(2, _ptr, maxDelayOvldModIdx)
  91:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  92:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Max energy value.*/
  93:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PM_POWER_PROFILE_MAX_ENERGY_VALUE     0xFFFF
  94:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  95:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Max duration value.*/
  96:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PM_POWER_PROFILE_MAX_DURATION_VALUE   0xFFFF
  97:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
  98:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Main setting index.*/
  99:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #if !defined(MAIN_SF_INDEX)
 100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define MAIN_SF_INDEX                         0
 101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #endif /* !defined(MAIN_SF_INDEX) */
 102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* *************************** */
 105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Typedef, Structs and Unions */
 106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* *************************** */
 107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Power profile status */
 109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct PM_PowerProfile_StatusType
 110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ErrorType       error;
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_StatusFlagsType flags;
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_StatusType;
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Power profile descriptor */
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct PM_PowerProfile_DescriptorType
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   CALLBACK_PowerProfile_ModifierValueType paramValueGet;
 120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   CALLBACK_PowerProfile_AlphaValueType    alphaValueGet;
 121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileNumType     totalPowerProfilesNum;
 122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileStatusType  profileStatus[CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM];
 123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseType         energyPhase[CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM][CON
 124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType            energyPhaseCounter[CONFIG_PM_POWER_PROFILE_COMPARTMENTS_N
 125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSizeType    powerProfileSize[CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM
 126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSIDType     powerProfileSID[CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM]
 127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_StatusType              status[CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM];
 128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_DescriptorType;
 129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier table 1st level header */
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct PM_PowerProfile_ModTab_Level1HeaderType
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 0 */
 135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t alfa0VarPos;        /**< Indice della variabile alpha 0. */
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 1 */
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #if defined(__BIT_ORDER_MSB_FIRST__)
 139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t unusedB1b37   : 5;
 140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t  ML           : 3;  /**< Logica di combinazione tra modificatori */
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #else /* __BIT_ORDER_MSB_FIRST__ */
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t ML            : 3;  /**< Logica di combinazione tra modificatori */
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t unusedB1b37   : 5;
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #endif /* !__BIT_ORDER_MSB_FIRST__ */
 145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_ModTab_Level1HeaderType;
 146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Alpha value index type */
 149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef uint8_t PM_PowerProfile_ModTab_AlphaIndexType;
 150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier value index type */
 152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef uint16_t PM_PowerProfile_ModTab_ModIndexType;
 153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier table 1st level entry */
 156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct PM_PowerProfile_ModTab_Level1EntryType
 157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 0 */
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t unusedB0;
 160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 1 */
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #if defined(__BIT_ORDER_MSB_FIRST__)
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t unusedB1b67   : 2;
 164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t alfaVarValPos : 6;  /**< Indice della variabile alpha. */
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #else /* __BIT_ORDER_MSB_FIRST__ */
 166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t alfaVarValPos : 6;  /**< Indice della variabile alpha.*/
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t unusedB1b67   : 2;
 168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #endif /* !__BIT_ORDER_MSB_FIRST__ */
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Bytes 2..3 */
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint16_t TableIndex;        /**< Indice della tabella di livello 2. */
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_ModTab_Level1EntryType;
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier table 2nd level header */
 177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct PM_PowerProfile_ModTab_Level2HeaderType
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #if defined(__BIT_ORDER_MSB_FIRST__)
 180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 0 */
 181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t SearchMode    : 3;  /**< Metodo di ricerca. */
 182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t SVal          : 2;  /**< Formato dati valori modificati. */
 183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t SMod          : 2;  /**< Formato dati modificatori. */
 184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t unusedB0b0    : 1;
 185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #else /* __BIT_ORDER_MSB_FIRST__ */
 186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 0 */
 187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t reservedB0b0  : 1;
 188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t SMod          : 2;  /**< Formato dati modificatori. */
 189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t SVal          : 2;  /**< Formato dati valori modificati. */
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t SearchMode    : 3;  /**< Metodo di ricerca. */
 191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #endif /* !__BIT_ORDER_MSB_FIRST__ */
 192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 1 */
 194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t itemsNumber;        /**< Numero di elementi della tabella. */
 195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 2 */
 197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t ImmediateVal;       /**< Valore immediato. */
 198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Byte 3 */
 200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t DT            : 2;  /**< Tipo di tabella. */
 201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t ModVarValue1  : 6;  /**< Indice variabile modificatore. */
 202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_ModTab_Level2HeaderType;
 203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \brief   Extended modifier value type.
 207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \details Used as common denominator type for all table in/out data types.
 208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \pre     Must be at least twice the size of the biggest modifier type:
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  *          \code{.c} sizeof(PM_PowerProfile_ModTab_ExtendedModifierValueType) >= (2 * sizeof(PM_Po
 210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  */
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef int32_t PM_PowerProfile_ModTab_ExtendedModifierValueType;
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier table input/output data type enumerator */
 214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef enum PM_PowerProfile_ModTab_InOutType
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_InOutType_UINT8  = 0,  /**< \p uint8_t */
 217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_InOutType_UINT16 = 1,  /**< \p uint16_t */
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_InOutType_INT8   = 2,  /**< \p int8_t */
 219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_InOutType_INT16  = 3,  /**< \p int16_t */
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_InOutType__LENGTH
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_ModTab_InOutType;
 222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier table search mode */
 225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef enum PM_PowerProfile_ModTab_SearchModeType
 226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_SearchModeType_EQUALITY      = 0,  /**< operator == */
 228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_SearchModeType_EXCESS        = 1,  /**< operator <= */
 229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_SearchModeType_DEFICIENCY    = 2,  /**< operator >= */
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_SearchModeType_INTERPOLATION = 3,  /**< operator lerp() */
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_SearchModeType__LENGTH
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_ModTab_SearchModeType;
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier table type */
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef enum PM_PowerProfile_ModTab_TableType
 237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_TableType_MONODIMENSIONAL  = 0,  /**< Monodimensional table (only 2nd leve
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_TableType_BIDIMENSIONAL    = 1,  /**< Bidimensional table (nested 1st-2nd 
 240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_TableType_IMMEDIATE        = 2,  /**< Immediate value (in 1st level) */
 241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_TableType__LENGTH
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_ModTab_TableType;
 243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Modifier logic */
 246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef enum PM_PowerProfile_ModTab_ModLogicType
 247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ModLogicType_MAX = 0,  /**< Maximum among all modifiers */
 249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ModLogicType_MIN = 1,  /**< Minimum among all modifiers */
 250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ModLogicType_SUM = 2,  /**< Sum all modifiers */
 251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ModLogicType__LENGTH
 252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_ModTab_ModLogicType;
 253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** Size in bytes of table in/out data */
 256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static const uint8_t PM_PowerProfile_ModTab_InOutSizes[PM_PowerProfile_ModTab_InOutType__LENGTH] =
 257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   (uint8_t)sizeof(uint8_t),
 259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   (uint8_t)sizeof(uint16_t),
 260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   (uint8_t)sizeof(int8_t),
 261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   (uint8_t)sizeof(int16_t)
 262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** };
 263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static PM_PowerProfile_ModTab_ExtendedModifierValueType PM_PowerProfile_ModTab_ExtendValue
 266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const void *datumPtr,
 268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_InOutType type
 269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static IO_ErrorType PM_PowerProfile_ModTab_QueryTable
 272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_ModTab_Level2HeaderType *tableHeaderPtr,
 274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_ModifierValueType *inputPtr,
 275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModifierValueType *outputPtr,
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   bool_t secondLevel
 277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static IO_ErrorType PM_PowerProfile_ModTab_GetValue
 280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModIndex modIndex,
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModifierValueType *modValuePtr
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Energy phase structure in Power Profile Data pointer, main parameters
 289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Structure definition does not reflect binary structure.
 290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct SF_PowerProfileDataEnergyPhaseType
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t index0;           /**< energy Phase index */
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t initFuncPhase0;   /**< initial functional phase */
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t Doff_1;           /**< default duration in minutes of the energy phase, with dominant loa
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t Doff_0;
 297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t Don_1;            /**< default duration in minutes of the energy phase, with dominant loa
 298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t Don_0;
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t powerAndID_OFF1;  /**< ID: 13-15 */
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t powerAndID_OFF0;  /**< power with dominant load OFF: 0-12 */
 301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t power_ON1;        /**< power with dominant load ON : 0-12 */
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t power_ON0;
 303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } SF_PowerProfileDataEnergyPhaseType;
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Energy phases, additional parameters (Energy Phase Data pointer)
 308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct SF_EnergyPhaseDataParamsType
 310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxPower1;            /**< max power: 0-12*/
 312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxPower0;
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelay1;            /**< max delay: 0-10*/
 314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelay0;
 315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelayOvld1;        /**< max delay overload: 0-10*/
 316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelayOvld0;
 317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxPowerModIdx1;      /**< max power modifier index */
 318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxPowerModIdx0;
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t onMeanPowerModIdx1;   /**< energy modifier index, load ON */
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t onMeanPowerModIdx0;
 321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t offMeanPowerModIdx1;  /**< energy modifier index, load OFF */
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t offMeanPowerModIdx0;
 323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t DonModIdx1;           /**< duration modifier index, load ON */
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t DonModIdx0;
 325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t DoffModIdx1;          /**< duration modifier index, load OFF */
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t DoffModIdx0;
 327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelayModIdx1;      /**< max delay modifier index */
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelayModIdx0;
 329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelayOvldModIdx1;  /**< max delay overload modifier index */
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t maxDelayOvldModIdx0;
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } SF_EnergyPhaseDataParamsType;
 332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /** SID filter downcounter type */
 335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef uint8_t PM_PowerProfile_SIDFilterDowncounterType;
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** SID filter structure.
 339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** typedef struct PM_PowerProfile_SIDFilterType
 341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /** Downcounter for APP change bursts filter.*/
 343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_SIDFilterDowncounterType requestBurstDowncounter;
 344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /** Downcounter for external bus access filter.*/
 346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_SIDFilterDowncounterType busAccessDowncounter;
 347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /** A recomputation was queued because of ongoing transmission on the external bus.*/
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   bool_t queuedBusAccessRequest;
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** } PM_PowerProfile_TemporalFiltersType;
 351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \name SID temporal filter parameters
 355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** @{
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PP_SIDFILTER_CHANGEBURST_WINDOW (2)   /**< Window length (100ms unit) for regulation burst 
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** #define PP_SIDFILTER_BUSACCESS_WINDOW   (20)  /**< Window length (100ms unit) for external bus acce
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**@}*/
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*********************************/
 362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Variables                     */
 363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*********************************/
 364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Extern */
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Global */
 368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Static */
 370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \brief   Power Profile buffer.
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \details Little Endian data format. Exchanged with external devices.
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  */
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static PM_PowerProfile_DescriptorType PM_PowerProfile_Data;
 376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \brief   Energy phase ID map
 379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \details Maps the inserted Energy Phase index to the Energy Phase index
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  *          of the Setting File.
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  */
 382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static PM_PowerProfile_EnergyPhaseIDType PM_PowerProfile_EnergyPhaseMap[CONFIG_PM_POWER_PROFILE_ENE
 383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \brief   Temporal filters.
 386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  * \details Holds the status of temporal filters used to recompute and send
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  *          the Power Profile.
 388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  */
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static PM_PowerProfile_TemporalFiltersType PM_PowerProfile_TemporalFilters = { 0, 0, FALSE };
 390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* ******************* */
 393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Functions Prototype */
 394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* ******************* */
 395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Local Function */
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static void PM_PowerProfile_UpdateGlobalStatus
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIDType powerProfileID,
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_StatusFlagsType flags
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static PM_PowerProfile_ErrorType PM_PowerProfile_Error
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIDType powerProfileID,
 407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ErrorType _ErrorCode
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static IO_ErrorType PM_PowerProfile_GetEnergyPhaseID
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	uint8_t mSetting,
 413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIndexType powerProfileIndex,
 414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_FunctionalPhaseIDType functionalPhaseID,
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_EnergyPhaseIDType* energyPhaseIDPtr
 416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static void PM_PowerProfile_ReloadPowerProfileInfo
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_ProfileIDType powerProfileID,
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_EnergyPhaseIDType	currentEnergyPhaseID,
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_EnergyPhaseType **ppCurrentEnergyPhase,
 423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_PowerProfileSizeType *pSize
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_GetModValue
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint16_t index,
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModifierValueType modBase,
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType *modResultPtr
 432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcDurationPartial
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType durationValue,
 437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType *resultPtr
 438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcDurationTotal
 441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType duration1,
 443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType duration2,
 444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType *resultPtr
 445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcPeakPower
 448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModIndex peakPowerIndex,
 450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const SF_EnergyPhaseDataParamsType *sfEnergyPhaseAddPtr,
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PeakPowerType *peakPowerPtr
 453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcEnergy
 456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOn,
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOff,
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const SF_PowerProfileDataEnergyPhaseType *energyPhaseParamsPtr,
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyType *meanEnergyPtr
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** );
 462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* *************** */
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Function Bodies */
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* *************** */
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Exported function */
 469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Module initialization.
 472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Roberto Fioravanti
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       20/07/2012
 475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_Init (void)
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	/*fill with 0s the internal variable*/
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	memset(&PM_PowerProfile_Data, 0, sizeof(PM_PowerProfile_Data));
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Sets the function for getting of values of the modifiers
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in] func function pointer
 487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Pietro Loschiavo
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       14/03/2014
 489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_SetParamModifierFunc(CALLBACK_PowerProfile_ModifierValueType func)
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.paramValueGet = func;
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Sets the function for getting of alpha to application
 499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in] func function pointer
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Pietro Loschiavo
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       14/03/2014
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_SetAlphaFunc(CALLBACK_PowerProfile_AlphaValueType func)
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_Data.alphaValueGet = func;
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	Returns the maximum number of managed power profile
 512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Roberto Fioravanti
 513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       06/08/2012
 514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
 515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** PM_PowerProfile_PowerProfileNumType PM_PowerProfile_GetPowerProfilesNum(void)
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	return CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM;
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Updates the status of the power profile
 524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]	mSetting		setting to search in
 525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]	_Compartment	compartment of the appliente
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]	_Index			displacement in PTR_POWER_PROFILE_DATA
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  _Phase     		functional phase
 528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  _Clear			if at 1 clear the status
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]	transition		new value for transition bit
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]	status			current status
 531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \return     PM_PowerProfile_PowerProfileStatusType
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \ref PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \ref PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_OFFS
 535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \ref PM_POWER_PROFILE_STATUS__POWER_PROFILE_SID_MSK
 536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \ref PM_POWER_PROFILE_STATUS__POWER_PROFILE_SID_OFFS
 537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \ref PM_POWER_PROFILE_STATUS__ENERGY_PHASE_ID_MSK
 538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Roberto Fioravanti
 540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       24/11/2010
 541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
 542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** PM_PowerProfile_PowerProfileStatusType PM_PowerProfile_UpdatePowerProfileStatus
 544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_CompartmentType _Compartment,
 546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIndexType _Index,
 547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PhaseType _Phase,
 548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
 549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   bool8_t _Clear,
 550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PhaseDelayTransitionType transition,
 551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileStatusType status
 552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_PowerProfileStatusType appStatus = 0;
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_EnergyPhaseIDType energyPhID = 0;
 556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if ( _Clear == TRUE ) {
 558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		appStatus = status; 		/* copy current value	*/
 559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		/* Clear:
 560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		 - the PP counter bits (x000 xxxx)
 561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		 - the En. Phase transition bit (0xxx xxxx)
 562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		 * */
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		appStatus &= ~(PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK|
 564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 						PM_POWER_PROFILE_STATUS__POWER_PROFILE_SID_MSK);
 565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	}
 566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	else
 567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	{
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		if ( PM_PowerProfile_GetEnergyPhaseID(mSetting, _Index, _Phase, &energyPhID) == IO_E_OK )
 569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		{
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus = energyPhID & PM_POWER_PROFILE_STATUS__ENERGY_PHASE_ID_MSK;
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus |= ((PM_PowerProfile_Data.powerProfileSID[_Compartment] << PM_POWER_PROFILE_STATUS__PO
 572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			/* update the transition bit */
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus |= ((transition!=0)?PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK:0);
 574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		}
 575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		else
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		{
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus=0;
 578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		}
 579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	}
 580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.profileStatus[_Compartment]=appStatus;
 582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	return appStatus;
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Returns the pointer of energy phase maximum activation delay
 589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   (pMaxActivationDelay) if only the requested functional phase (functionalPhaseId) of selected
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   power profile (powerProfileID) is the first functional phase of a EnergyPhase.
 591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]	mSetting			Setting to search in
 592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]  _Index        		index in setting for selected power profile;
 593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]  functionalPhaseId     requested functional phase;
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[out] pNewEnergyPhase       is the functional phase selected the first of EnergyPhase ?
 595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[out] pMaxActivationDelay   max activation delay of selected energy phase:
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****                                     this contains valid value only if *pNewEnergyPhase = TRUE
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \return     status of operations.
 598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \author     Andrea Ricci
 600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \date       02/03/2011
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \version    1.0.0
 602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIDType powerProfileID,
 606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIndexType _Index,
 607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_FunctionalPhaseIDType functionalPhaseId,
 608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
 609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   bool_t *pNewEnergyPhase,
 610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint16_t *pMaxActivationDelay
 611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
 612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	uint8_t i = 0;
 614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	uint8_t energyPhaseCount = 0;
 615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	uint8_t* pPPData = 0;
 616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	Loader_Struct sfData = {0};
 617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	SF_PowerProfileDataEnergyPhaseType* psfEnergyPhase = 0;
 618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	uint8_t bl = (!SF_OK);
 620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	/* Default value */
 622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	*pNewEnergyPhase = FALSE;
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	*pMaxActivationDelay = 0x0000;
 624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	/* retrieve power profile info */
 626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	bl = MSettingBasicLoader(	mSetting, SF_PTR_POWER_PROFILE, _Index, &sfData);
 628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if ( bl != SF_OK )
 630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	{
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		return IO_E_FAIL;
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	}
 633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	else
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	{
 635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		/* is there an energy phase? */
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		energyPhaseCount = sfData.DataLenght / (sizeof(SF_PowerProfileDataEnergyPhaseType) / sizeof(uint1
 637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		if( energyPhaseCount == 0 )
 639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		{
 640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			/* the current power profile does not include any energy phase !?! */
 641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			PM_PowerProfile_UpdateGlobalStatus(powerProfileID, PM_POWER_PROFILE_STATUS_FLAGS__NO_ENERGY_PHAS
 642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			return IO_E_FAIL;
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		}
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		else
 645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		{
 646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			pPPData = sfData.Data;
 647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			/* retrieve each energy phases from sf.. */
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			for ( i = 0; i < energyPhaseCount; i++ )
 650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			{
 651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				psfEnergyPhase = (SF_PowerProfileDataEnergyPhaseType*)((void*)pPPData);
 652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				/* hp:  functional phases in monotonic order*/
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				if ( SF_ENERGYPHASE_GET_FUNCID(psfEnergyPhase) == functionalPhaseId )
 654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				{
 655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					*pNewEnergyPhase = TRUE;
 656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					break;
 657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				}
 658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				/* move to the next energy phases inside power profile description */
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				pPPData += sizeof(SF_PowerProfileDataEnergyPhaseType);
 660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			}
 661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			if ( *pNewEnergyPhase == TRUE )
 663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			{
 664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				bl = MSettingBasicLoader(mSetting, SF_PTR_ENERGY_PHASE, SF_ENERGYPHASE_GET_PHASE_INDEX(psfEnerg
 666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				if ( bl != SF_OK )
 668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				{
 669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					/* error loading power profile index data */
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					return IO_E_FAIL;
 671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				}
 672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				else
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				{
 674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					if ( sfData.DataLenght == (sizeof(SF_EnergyPhaseDataParamsType) / sizeof(uint16_t)) )
 675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					{
 676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 						*pMaxActivationDelay = SF_ENERGYPHASEPARAMS_GET_MAXDELAY((SF_EnergyPhaseDataParamsType*)((voi
 677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					}
 678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				}
 679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			}
 680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		}
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	}
 682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	return IO_E_OK;
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	Sets the duration EnPhElapsedTime_Counter
 687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_SetDuration(
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIDType powerProfileID,
 690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType duration
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
 692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= powerProfileID) && (powerProf
 694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.energyPhaseCounter[powerProfileID-1] = duration;
 695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	return IO_E_OK;
 696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Calculates and returns the energy phases of the requested power profile.
 701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Called by application supervisor.
 702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]	_Index					displacement in SF_PTR_POWER_PROFILE
 703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]	powerProfileID        requested power profile identifier;
 704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]	cycle                 current cycle
 705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[out]	ppFirstEnergyPhase    pointer to returned power profile buffer;
 706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[out]	pSize                 size of returned power profile
 707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****                                     ( i.e. #(EnergyPhases)*sizeof(EnergyPhase) );
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \return     status of operations.
 709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \author     Andrea Ricci
 711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \date       25/11/2010
 712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \version    1.0.0
 713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_GetPowerProfile
 715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIndexType powerProfileIndex,
 717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIDType powerProfileID,
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_CycleType cycle,
 719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseType **firstEnergyPhasePtrPtr,
 721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSizeType *sizePtr
 722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Loader_Struct loader = { NULL, 0 };
 725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const SF_PowerProfileDataEnergyPhaseType *energyPhaseParamsPtr = NULL;  /* Pointer to energy phas
 726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const SF_EnergyPhaseDataParamsType *energyPhaseAddParamsPtr = NULL;  /* Pointer to energy phase p
 727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseIDType energyPhaseCount = 0;
 729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseIDType insertedEnergyPhaseCount = 0;
 730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseIDType i = 0;
 731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseType *energyPhasePtr = NULL;  /* Pointer to energy phase descriptor in
 733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Duration */
 735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType duration;
 736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOn;
 737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOnBase;
 738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOff;
 739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOffBase;
 740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModIndex durationOnIndex;
 741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModIndex durationOffIndex;
 742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType durationOnValue;
 743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType durationOffValue;
 744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Energy */
 746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyType energy;
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Power*/
 749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PeakPowerType peakPower;
 750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModIndex peakPowerIndex;
 751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_OK;
 753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *firstEnergyPhasePtrPtr = NULL;
 755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *sizePtr = 0;
 756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Acquire Power Profile buffer */
 758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   UsePowerProfile();
 759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Retrieve Power Profile info */
 761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_POWER_PROFILE, powerProfileIndex, &loader) )
 762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
 763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     energyPhaseCount = (loader.DataLenght / (sizeof(SF_PowerProfileDataEnergyPhaseType) / sizeof(ui
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( energyPhaseCount > 0 )
 765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
 766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       energyPhaseParamsPtr = (const SF_PowerProfileDataEnergyPhaseType *)loader.Data;
 767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       energyPhasePtr = &(PM_PowerProfile_Data.energyPhase[powerProfileID - 1][0]);
 768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Retrieve each energy phase from SF... */
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < energyPhaseCount; ++i )
 771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
 772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         /* Load second table */
 773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_ENERGY_PHASE, SF_ENERGYPHASE_GET_PHASE_I
 774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
 775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           if ( (sizeof(SF_EnergyPhaseDataParamsType) / sizeof(uint16_t)) == loader.DataLenght )
 776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           {
 777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             energyPhaseAddParamsPtr = (const SF_EnergyPhaseDataParamsType *)loader.Data;
 778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             /* Compute D_{Ron} value */
 780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOnIndex = SF_ENERGYPHASEPARAMS_GET_DURATIONMOD_ON(energyPhaseAddParamsPtr);
 781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOnBase = SF_ENERGYPHASE_GET_DURATION_ON(energyPhaseParamsPtr);
 782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_GetModValue(mSetting, durationOnIndex, (PM_PowerProfile_ModifierValueTy
 783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_CalcDurationPartial(durationOnValue, &durationOn);
 784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             /* Compute D_{Roff} value */
 786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOffIndex = SF_ENERGYPHASEPARAMS_GET_DURATIONMOD_OFF(energyPhaseAddParamsPtr);
 787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOffBase = SF_ENERGYPHASE_GET_DURATION_OFF(energyPhaseParamsPtr);
 788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_GetModValue(mSetting, durationOffIndex, (PM_PowerProfile_ModifierValueT
 789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_CalcDurationPartial(durationOffValue, &durationOff);
 790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 791:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             /* Compute total duration */
 792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_CalcDurationTotal(durationOn, durationOff, &duration);
 793:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 794:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             /* The energy phase is inserted only if its duration is not zero */
 795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             if ( duration > 0 )
 796:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             {
 797:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               /* Compute power and energy */
 798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               peakPowerIndex = SF_ENERGYPHASEPARAMS_GET_MAXPOWERMOD(energyPhaseAddParamsPtr);
 799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               PM_PowerProfile_CalcPeakPower(peakPowerIndex, mSetting, energyPhaseAddParamsPtr, &pea
 800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               PM_PowerProfile_CalcEnergy(durationOn, durationOff, energyPhaseParamsPtr, &energy);
 801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 802:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               /* Fill protocol struct with little endian format */
 803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->energyPhaseID = (insertedEnergyPhaseCount + 1);
 804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->macroPhaseID = SF_ENERGYPHASE_GET_MACROPHASE_ID(energyPhaseParamsPtr)
 805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->expectedDuration = EndianU16_NToL(duration);
 806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->peakPower = EndianU16_NToL(peakPower);
 807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->energy = EndianU16_NToL(energy);
 808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->maxActivationDelay = EndianU16_NToL(SF_ENERGYPHASEPARAMS_GET_MAXDELAY
 809:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 810:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               /* Linking phase retrieved from SF to one stored to APP Buffer */
 811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               PM_PowerProfile_EnergyPhaseMap[insertedEnergyPhaseCount] = (i + 1);
 812:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               /* Chech whether the buffer is full (exceeding energy phases will be ignored) */
 814:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               ++insertedEnergyPhaseCount;
 815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               if ( insertedEnergyPhaseCount >= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
 816:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               {
 817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****                 i = (energyPhaseCount - 1);  /* break */
 818:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               }
 819:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 820:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               /* Move to the next energy phase inside the buffer */
 821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               ++energyPhasePtr;
 822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             }
 823:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 824:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             /* Consider correct at this point */
 825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             errorIO = IO_E_OK;
 826:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           }
 827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           else
 828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           {
 829:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             /* Wrong profile size */
 830:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             errorIO = IO_E_FAIL;
 831:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             i = (energyPhaseCount - 1);  /* break */
 832:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           }
 833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
 834:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         else
 835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
 836:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           /* Error loading power profile index data */
 837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = IO_E_FAIL;
 838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           i = (energyPhaseCount - 1);  /* break */
 839:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
 840:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 841:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         /* Move to the next energy phase inside the power profile description */
 842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         ++energyPhaseParamsPtr;
 843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
 844:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
 845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     else
 846:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
 847:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* The current power profile does not include any energy phases */
 848:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       errorIO = IO_E_FAIL;
 849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
 850:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
 851:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   else
 852:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
 853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Error loading from setting file */
 854:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     errorIO = IO_E_FAIL;
 855:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
 856:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( IO_E_OK == errorIO )
 858:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
 859:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Update output values and sizes */
 860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *firstEnergyPhasePtrPtr = &(PM_PowerProfile_Data.energyPhase[powerProfileID - 1][0]);
 861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *sizePtr = (insertedEnergyPhaseCount * sizeof(PM_PowerProfile_EnergyPhaseType));
 862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     PM_PowerProfile_Data.powerProfileSize[powerProfileID - 1] = *sizePtr;
 863:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
 864:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 865:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Release Power Profile buffer */
 866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   UnusePowerProfile();
 867:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 868:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (errorIO);
 869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 872:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*
 873:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	Forces reloading of information because interpreter is running.
 874:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	E.g. it allows the update the remaining duration
 875:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\param[in]	_PowerProfileID	power profile ID
 876:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 877:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\author     Roberto Fioravanti
 878:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\date       07/08/2012
 879:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\version    1.0.0
 880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 881:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_SetForceReload(PM_PowerProfile_ProfileIDType _PowerProfileID)
 882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= _PowerProfileID) && (_PowerPr
 884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.status[_PowerProfileID-1].flags |= PM_POWER_PROFILE_STATUS_FLAGS__FORCERELOAD
 885:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 886:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 887:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*
 889:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	Reloading of information because interpreter is running is stopped.
 890:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\param[in]	_PowerProfileID	power profile ID
 891:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\author     Roberto Fioravanti
 892:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\date       07/08/2012
 893:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	\version    1.0.0
 894:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 895:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_ResetForceReload(PM_PowerProfile_ProfileIDType _PowerProfileID)
 896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= _PowerProfileID) && (_PowerPr
 898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.status[_PowerProfileID-1].flags &= ~(PM_POWER_PROFILE_STATUS_FLAGS__FORCERELO
 899:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 900:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 901:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 902:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 903:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   	  Retrieves the pointer to the currently stored power profile (ppFirstEnergyPhase), its size (pS
 904:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   the power profile identifier (pPowerProfileID).
 905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  PowerProfileID        requested power profile identifier;
 906:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[out] ppFirstEnergyPhase    pointer to returned power profile buffer;
 907:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[out] pSize                 size of returned power profile
 908:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****                                 ( i.e. #(EnergyPhases)*sizeof(EnergyPhase) );
 909:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \return     none.
 910:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 911:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Roberto Fioravanti, Andrea Ricci
 912:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       24/11/2010-25/11/2010
 913:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
 914:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_GetPowerProfileByProfileID
 916:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 917:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIDType _PowerProfileID,
 918:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseType **ppFirstEnergyPhase,
 919:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSizeType *pSize
 920:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
 921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 922:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseIDType currentEnPhaseID = 1;
 923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= _PowerProfileID) && (_PowerP
 925:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 926:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* if the PowerProfile is already running --> reload the the PowerProfile info */
 927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( PM_PowerProfile_Data.status[_PowerProfileID-1].flags & PM_POWER_PROFILE_STATUS_FLAGS__FORCER
 928:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
 929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     currentEnPhaseID = (PM_PowerProfile_Data.profileStatus[_PowerProfileID-1] & PM_POWER_PROFILE_ST
 930:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 931:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Reload the PowerProfile info */
 932:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     PM_PowerProfile_ReloadPowerProfileInfo(_PowerProfileID, currentEnPhaseID, ppFirstEnergyPhase, p
 933:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
 934:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   else
 935:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
 936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *ppFirstEnergyPhase = &(PM_PowerProfile_Data.energyPhase[_PowerProfileID-1][0]);
 937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *pSize = PM_PowerProfile_Data.powerProfileSize[_PowerProfileID-1];
 938:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
 939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 940:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 941:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 942:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /* Local Function bodies */
 943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
 944:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Returns the energy phase ID (*pEnergyPhaseID) which matches the
 945:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   requested functional phase (functionalPhaseId) of selected power profile (powerProfileID).
 946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]  mSetting				setting to search in;
 947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]  powerProfileIndex        		power profile index in setting file
 948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[in]  functionalPhaseId     requested functional phase;
 949:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \param[out] pEnergyPhaseID        pointer to returned energy phase id;
 950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \return     status of operations.
 952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 953:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \author     Andrea Ricci
 954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \date       25/11/2010
 955:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \version    1.0.0
 956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   \todo       the routine can be faster in some cases (actually frequently..?) if functional
 957:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               phases are locally stored during PP computation.
 958:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
 959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_GetEnergyPhaseID
 960:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
 961:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	uint8_t mSetting,
 962:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIndexType powerProfileIndex,
 963:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_FunctionalPhaseIDType functionalPhaseID,
 964:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_EnergyPhaseIDType *energyPhaseIDPtr
 965:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
 966:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Loader_Struct loader = { NULL, 0 };
 968:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const SF_PowerProfileDataEnergyPhaseType *energyPhaseParamsPtr = NULL;
 969:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_FunctionalPhaseIDType count = 0, i = 0, j = 0;
 970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_FAIL;
 971:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 972:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	/* Retrieve power profile info */
 973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_POWER_PROFILE, powerProfileIndex, &loader) )
 974:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
 975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     count = (loader.DataLenght / (sizeof(SF_PowerProfileDataEnergyPhaseType) / sizeof(uint16_t)));
 976:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( count > 0 )
 977:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
 978:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       energyPhaseParamsPtr = (const SF_PowerProfileDataEnergyPhaseType *)loader.Data;
 979:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
 980:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Retrieve each energy phases from setting file */
 981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < count; ++i )
 982:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
 983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( SF_ENERGYPHASE_GET_FUNCID(energyPhaseParamsPtr) <= functionalPhaseID )
 984:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
 985:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           /* Check if the current PP is an active PP phase (e.g. Is present in APP buffer?) */
 986:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           for ( j = 0; j < CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM; ++j )
 987:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           {
 988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             if ( (i + 1) == PM_PowerProfile_EnergyPhaseMap[j] )
 989:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             {
 990:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               /* Energy phase found */
 991:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               *energyPhaseIDPtr = (PM_PowerProfile_EnergyPhaseIDType)(j + 1);
 992:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               errorIO = IO_E_OK;
 993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               j = (CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM - 1);  /* break */
 994:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             }
 995:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           }
 996:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
 997:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         else
 998:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           i = (count - 1);  /* break */
1000:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1002:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         /* Move to the next energy phases inside power profile description */
1003:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         ++energyPhaseParamsPtr;
1004:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1005:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1006:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1007:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1008:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (errorIO);
1009:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1010:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1011:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
1012:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1013:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****  */
1014:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static void PM_PowerProfile_ReloadPowerProfileInfo
1015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1016:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIDType powerProfileID,
1017:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseIDType currentEnergyPhaseID,
1018:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseType **ppCurrentEnergyPhase,
1019:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSizeType *pSize
1020:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1021:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1022:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	uint8_t  i;
1023:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_DurationType expectedDuration; /*[min]*/
1024:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_PeakPowerType peakPower;
1025:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_EnergyType energy;
1026:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1027:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	for (i=0; i<CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM; i++)
1028:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	{
1029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		if (PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].energyPhaseID == currentEnergyPhaseID)
1030:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		{
1031:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			/* get current expected duration LE to native */
1032:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			expectedDuration = EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].expected
1033:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1034:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			/* Check if the enPhase has infinite duration */
1035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			if (expectedDuration != 0x07FF)
1036:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			{
1037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				PM_PowerProfile_DurationType duration=PM_PowerProfile_Data.energyPhaseCounter[powerProfileID-1]
1038:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				if (expectedDuration <= duration)
1039:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				{
1040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					expectedDuration = 1;
1041:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				}
1042:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				else
1043:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				{
1044:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					expectedDuration = (expectedDuration - duration);
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				}
1046:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1047:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				peakPower = EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].peakPower);
1048:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				energy = (expectedDuration * peakPower) / 60; /*[Wh]*/
1049:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				/* Updates the fields */
1050:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].energy = EndianU16_NToL(energy);
1051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].expectedDuration = EndianU16_NToL(expecte
1052:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			}
1053:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			*ppCurrentEnergyPhase = &(PM_PowerProfile_Data.energyPhase[powerProfileID-1][i]);
1055:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			*pSize = PM_PowerProfile_Data.powerProfileSize[powerProfileID-1] - (i * sizeof(PM_PowerProfile_E
1056:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1057:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     } /*endIf*/
1058:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   } /*endFor*/
1059:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1060:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1061:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1062:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
1063:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Error management.
1064:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Only the first error is stored.
1065:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author 	Roberto Fioravanti
1066:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date		12/06/2012
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version	1.0.0
1068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1069:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \note		\par \b Note 1:
1070:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			documentation by Roberto Fioravanti
1071:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
1072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static PM_PowerProfile_ErrorType PM_PowerProfile_Error(PM_PowerProfile_ProfileIDType powerProfileID
1073:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if(PM_PowerProfile_Data.status[powerProfileID-1].error == POWER_PROFILE_NO_ERR)
1075:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	{
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		PM_PowerProfile_Data.status[powerProfileID-1].error = _ErrorCode;
1077:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	}
1078:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	return _ErrorCode;
1079:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1080:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1081:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1082:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /*
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	Internal error management
1084:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
1085:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** static void PM_PowerProfile_UpdateGlobalStatus(PM_PowerProfile_ProfileIDType powerProfileID, PM_Pow
1086:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1087:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.status[powerProfileID-1].flags |= flags;
1088:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1089:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1090:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1091:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
1092:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Computes the total duration of the cycle stored into the APP buffer.
1093:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1094:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  PowerProfileID        requested power profile identifier;
1095:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[out] EnergyPhaseDuration calculated duration
1096:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1097:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author   Pietro Loschiavo
1098:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author   Andrea Zoppi
1099:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date     05/06/2014
1100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version  1.1.0
1101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
1102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_TotalProfileDuration(PM_PowerProfile_ProfileIDType powerProfileID, PM_PowerPro
1103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_PowerProfileSizeType energyPhasesCount = (PM_PowerProfile_PowerProfileSizeT
1105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSizeType i = 0;
1106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *energyPhaseDurationPtr = 0;
1108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( energyPhasesCount <= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
1110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < energyPhasesCount; i++ )
1112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       *energyPhaseDurationPtr += EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-1][
1114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
1120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** Computes the total energy consumption of the cycle stored into the APP buffer.
1121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  PowerProfileID        requested power profile identifier;
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[out] EnergyPhaseEnergyTotal calculated duration
1124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author   Pietro Loschiavo
1126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author   Andrea Zoppi
1127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date     05/06/2014
1128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version  1.1.0
1129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
1130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_TotalProfileEnergy(PM_PowerProfile_ProfileIDType powerProfileID, PM_PowerProfi
1131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_PowerProfileSizeType energyPhasesCount = (PM_PowerProfile_PowerProfileSizeT
1133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSizeType i = 0;
1134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *energyPhaseEnergyTotalPtr = 0;
1136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( energyPhasesCount <= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
1138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < energyPhasesCount; ++i )
1140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       *energyPhaseEnergyTotalPtr += EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-
1142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_GetModValue
1148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
1150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint16_t index,
1151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModifierValueType modBase,
1152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType *modResultPtr
1153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Loader_Struct loader = { NULL, 0 };
1156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const uint8_t *rawPtr = NULL;
1157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_AlphaIndexType alphaIndex = 0;
1158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ModIndexType modIndex = 0;
1159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType modValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
1160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType baseValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
1161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType alphaValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
1162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType currentValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
1163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType finalValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
1164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t modLogic = 0;
1165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t count = 0, i = 0;
1166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_OK;
1167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *modResultPtr = LIB_Fixed_Const_ZERO;
1169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( 0xFFFF == index )
1171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Missing modifiers table, just keep the base value */
1173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     LIB_Fixed_FromInt(modBase, 0, modResultPtr);
1174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   else if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_APP_MODIFIERS,  index, &loader) )
1176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     rawPtr = loader.Data;
1178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Apply alpha_0 to the base value */
1180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     LIB_Fixed_FromInt(modBase, 0, &baseValue);
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     alphaIndex = ((const PM_PowerProfile_ModTab_Level1HeaderType *)rawPtr)->alfa0VarPos;
1182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( (alphaIndex & 0x3F) < 0x3F )  /* 6 bits long */
1183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       PM_PowerProfile_Data.alphaValueGet(alphaIndex, &alphaValue);
1185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       LIB_Fixed_Mul(baseValue, alphaValue, &currentValue);
1186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       baseValue = currentValue;
1187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Calculate number of elements present in table Level 1 table */
1190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Note: all sizes must be aligned to words */
1191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     count = ((loader.DataLenght - (sizeof(PM_PowerProfile_ModTab_Level1HeaderType) / sizeof(uint16_
1192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Initialize calculation variables */
1194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     modLogic = ((const PM_PowerProfile_ModTab_Level1HeaderType *)rawPtr)->ML;
1195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     switch ( (PM_PowerProfile_ModTab_ModLogicType)modLogic )
1196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_ModLogicType_MAX:
1198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       finalValue = LIB_Fixed_Const_MIN;  /* Start from the very minimum */
1200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_ModLogicType_MIN:
1203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       finalValue = LIB_Fixed_Const_MAX;  /* Start from the very maximum */
1205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_ModLogicType_SUM:
1208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       finalValue = LIB_Fixed_Const_ZERO; /* Accumulator is zero */
1210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     default:
1213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Unsupported modifier logic, just skip modifiers */
1215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       count = 0;
1216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       errorIO = IO_E_FAIL;
1217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Iterate through table entries */
1222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     rawPtr += sizeof(PM_PowerProfile_ModTab_Level1HeaderType);
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < count; ++i )
1224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Get Alpha Parameter from Application Layer */
1226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       alphaValue = LIB_Fixed_Const_ONE;
1227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       alphaIndex = ((const PM_PowerProfile_ModTab_Level1EntryType *)rawPtr)->alfaVarValPos;
1228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       if ( (alphaIndex & 0x3F) < 0x3F )  /* 6 bits long */
1229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         PM_PowerProfile_Data.alphaValueGet(alphaIndex , &alphaValue);
1231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Apply alpha_i to the modifier value */
1234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       modValue = LIB_Fixed_Const_ONE;
1235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       modIndex = ((const PM_PowerProfile_ModTab_Level1EntryType *)rawPtr)->TableIndex;
1236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       if ( modIndex < 0xFFFF )
1237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         PM_PowerProfile_ModTab_GetValue(mSetting, modIndex, (PM_PowerProfile_ModifierValueType *)&m
1239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         LIB_Fixed_FromInt(modValue.fractional, 0, &modValue);
1240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       LIB_Fixed_Mul(modValue, alphaValue, &currentValue);
1242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Apply the modifier logic */
1244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       switch ( (PM_PowerProfile_ModTab_ModLogicType)modLogic )
1245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       case PM_PowerProfile_ModTab_ModLogicType_MAX:
1247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( LIB_Fixed_Cmp(currentValue, finalValue) > 0 )
1249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           finalValue = currentValue;
1251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       case PM_PowerProfile_ModTab_ModLogicType_MIN:
1255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( LIB_Fixed_Cmp(currentValue, finalValue) < 0 )
1257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           finalValue = currentValue;
1259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       case PM_PowerProfile_ModTab_ModLogicType_SUM:
1263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         LIB_Fixed_Add(finalValue, currentValue, &finalValue);
1265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       default:
1268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         /* Unsupported modifier logic */
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         i = (count - 1);  /* break */
1271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Move to the next item */
1276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       rawPtr += sizeof(PM_PowerProfile_ModTab_Level1EntryType);
1277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Apply accumulator to the base value */
1280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     LIB_Fixed_Add(baseValue, finalValue, modResultPtr);
1281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   else
1283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Error loading data */
1285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     errorIO = IO_E_FAIL;
1286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (errorIO);
1288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcDurationPartial
1292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType durationValue,
1294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType *resultPtr
1295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_FractionalType integral = LIB_Fixed_Round(durationValue);
1298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *resultPtr = ((integral >= 0) ? (PM_PowerProfile_DurationType)integral : 0);
1300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (IO_E_OK);
1302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcDurationTotal
1306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType duration1,
1308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType duration2,
1309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType *resultPtr
1310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *resultPtr = (duration1 + duration2);
1313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (IO_E_OK);
1315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcPeakPower
1319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModIndex peakPowerIndex,
1321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
1322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const SF_EnergyPhaseDataParamsType *sfEnergyPhaseAddPtr,
1323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PeakPowerType *peakPowerPtr
1324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PeakPowerType peakPowerBase;
1327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType fxPeakPowerTotal;
1328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO;
1329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   peakPowerBase = SF_ENERGYPHASEPARAMS_GET_MAXPOWER(sfEnergyPhaseAddPtr);
1331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   errorIO = PM_PowerProfile_GetModValue(mSetting, peakPowerIndex, (PM_PowerProfile_ModifierValueTyp
1332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( IO_E_OK == errorIO )
1333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *peakPowerPtr = LIB_Fixed_Round(fxPeakPowerTotal);
1335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   else
1337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Modifier missing from SF, just return the base value */
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *peakPowerPtr = peakPowerBase;
1340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   errorIO = IO_E_OK;
1343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (errorIO);
1344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_CalcEnergy
1348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOn,
1350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType durationOff,
1351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const SF_PowerProfileDataEnergyPhaseType *energyPhaseParamsPtr,
1352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyType *meanEnergyPtr
1353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType error = IO_E_FAIL;
1356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyType powerMeanRon = SF_ENERGYPHASE_GET_MEANPOWER_ON(energyPhaseParamsPtr);
1357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyType powerMeanRoff = SF_ENERGYPHASE_GET_MEANPOWER_OFF(energyPhaseParamsPtr)
1358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint32_t accumulator = ((((uint32_t)durationOn * powerMeanRon) + ((uint32_t)durationOff * powerMe
1359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( accumulator <= 0xFFFF )
1361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *meanEnergyPtr = (PM_PowerProfile_EnergyType)accumulator;
1363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     error = IO_E_OK;
1364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   else
1366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *meanEnergyPtr = 0;
1368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (error);
1370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** PM_PowerProfile_ModTab_ExtendedModifierValueType PM_PowerProfile_ModTab_ExtendValue
1374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const void *datumPtr,
1376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_InOutType type
1377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
   9                             		.loc 1 1378 0
  10                             	.LVL0:
1379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType extended = 0;
1380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   switch ( type )
  11                             		.loc 1 1380 0
  12 0000 61 12                   		cmp	#1, r2
  13 0002 20 11                   		beq	.L4
  14 0004 61 02                   		cmp	#0, r2
  15 0006 12                      		beq	.L3
  16 0007 61 22                   		cmp	#2, r2
  17 0009 20 0D                   		beq	.L5
  18 000b 61 32                   		cmp	#3, r2
  19 000d 21 0F                   		bne	.L8
  20 000f 0A                      		bra	.L6
  21                             	.L3:
1381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   case PM_PowerProfile_ModTab_InOutType_UINT8:
1383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     extended = (PM_PowerProfile_ModTab_ExtendedModifierValueType)(*(const uint8_t *)datumPtr);
  22                             		.loc 1 1384 0
  23 0010 58 11                   		movu.B	[r1], r1
  24                             	.LVL1:
1385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     break;
  25                             		.loc 1 1385 0
  26 0012 02                      		rts
  27                             	.LVL2:
  28                             	.L4:
1386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   case PM_PowerProfile_ModTab_InOutType_UINT16:
1388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     extended = (PM_PowerProfile_ModTab_ExtendedModifierValueType)(*(const uint16_t *)datumPtr);
  29                             		.loc 1 1389 0
  30 0013 5C 11                   		movu.W	[r1], r1
  31                             	.LVL3:
1390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     break;
  32                             		.loc 1 1390 0
  33 0015 02                      		rts
  34                             	.LVL4:
  35                             	.L5:
1391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   case PM_PowerProfile_ModTab_InOutType_INT8:
1393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     extended = (PM_PowerProfile_ModTab_ExtendedModifierValueType)(*(const int8_t *)datumPtr);
  36                             		.loc 1 1394 0
  37 0016 CC 11                   		mov.B	[r1], r1
  38                             	.LVL5:
1395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     break;
  39                             		.loc 1 1395 0
  40 0018 02                      		rts
  41                             	.LVL6:
  42                             	.L6:
1396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   case PM_PowerProfile_ModTab_InOutType_INT16:
1398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     extended = (PM_PowerProfile_ModTab_ExtendedModifierValueType)(*(const int16_t *)datumPtr);
  43                             		.loc 1 1399 0
  44 0019 DC 11                   		mov.W	[r1], r1
  45                             	.LVL7:
1400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     break;
  46                             		.loc 1 1400 0
  47 001b 02                      		rts
  48                             	.LVL8:
  49                             	.L8:
1401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   default:
1403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     extended = 0;
  50                             		.loc 1 1404 0
  51 001c 66 01                   		mov.L	#0, r1
  52                             	.LVL9:
1405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     break;
1406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (extended);
1409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
  53                             		.loc 1 1409 0
  54 001e 02                      		rts
  55                             	.LFE22:
  57                             		.section	.text.PM_PowerProfile_GetEnergyPhaseID,"ax",@progbits
  59                             	_PM_PowerProfile_GetEnergyPhaseID:
  60                             	.LFB11:
 966:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
  61                             		.loc 1 966 0
  62                             	.LVL10:
  63 0000 6E 7C                   		pushm	r7-r12
  64                             	.LCFI0:
  65 0002 60 80                   		sub	#8, r0
  66                             	.LCFI1:
  67 0004 CF 3A                   		mov.B	r3, r10
  68 0006 EF 47                   		mov.L	r4, r7
 967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Loader_Struct loader = { NULL, 0 };
  69                             		.loc 1 967 0
  70 0008 3E 00 00                		mov.L	#0, [r0]
  71 000b 3D 02 00                		mov.W	#0, 4[r0]
  72                             	.LVL11:
 973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_POWER_PROFILE, powerProfileIndex, &loader) )
  73                             		.loc 1 973 0
  74 000e 5B 23                   		movu.B	r2, r3
  75                             	.LVL12:
  76 0010 66 52                   		mov	#5, r2
  77                             	.LVL13:
  78 0012 EF 04                   		mov.L	r0, r4
  79                             	.LVL14:
  80 0014 05 00 00 00             		bsr	_MSettingBasicLoader
  81                             	.LVL15:
  82 0018 5B 12                   		movu.B	r1, r2
  83 001a 61 02                   		cmp	#0, r2
  84 001c 21 57                   		bne	.L17
 975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     count = (loader.DataLenght / (sizeof(SF_PowerProfileDataEnergyPhaseType) / sizeof(uint16_t)));
  85                             		.loc 1 975 0
  86 001e 5D 0F 02                		movu.W	4[r0], r15
  87 0021 FD 74 9F 05             		divu	#5, r15
  88                             	.LVL16:
 976:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( count > 0 )
  89                             		.loc 1 976 0
  90 0025 5B FE                   		movu.B	r15, r14
  91 0027 61 0E                   		cmp	#0, r14
  92 0029 20 4A                   		beq	.L17
 978:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       energyPhaseParamsPtr = (const SF_PowerProfileDataEnergyPhaseType *)loader.Data;
  93                             		.loc 1 978 0
  94 002b EC 05                   		mov.L	[r0], r5
  95                             	.LVL17:
 970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_FAIL;
  96                             		.loc 1 970 0
  97 002d 75 41 1A                		mov	#26, r1
 983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( SF_ENERGYPHASE_GET_FUNCID(energyPhaseParamsPtr) <= functionalPhaseID )
  98                             		.loc 1 983 0
  99 0030 5B AA                   		movu.B	r10, r10
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           i = (count - 1);  /* break */
 100                             		.loc 1 999 0
 101 0032 60 1F                   		sub	#1, r15
 102                             	.LVL18:
 988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             if ( (i + 1) == PM_PowerProfile_EnergyPhaseMap[j] )
 103                             		.loc 1 988 0
 104 0034 FB 32 00 00 00 00       		mov.L	#_PM_PowerProfile_EnergyPhaseMap, r3
 981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < count; ++i )
 105                             		.loc 1 981 0
 106 003a EF E4                   		mov.L	r14, r4
 107                             	.LVL19:
 108                             		.balign 2,3,5
 109                             	.L15:
 983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( SF_ENERGYPHASE_GET_FUNCID(energyPhaseParamsPtr) <= functionalPhaseID )
 110                             		.loc 1 983 0
 111 003c CD 5B 01                		mov.B	1[r5], r11
 112 003f 75 2B 7F                		and #0x7f, r11
 113 0042 47 AB                   		cmp	r10, r11
 114 0044 24 21                   		bgtu	.L11
 115 0046 66 0E                   		mov	#0, r14
 988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             if ( (i + 1) == PM_PowerProfile_EnergyPhaseMap[j] )
 116                             		.loc 1 988 0
 117 0048 5B 2C                   		movu.B	r2, r12
 118 004a 62 1C                   		add	#1, r12
 119                             		.balign 2,3,1
 120                             	.L13:
 121 004c 5B EB                   		movu.B	r14, r11
 122 004e FE CB 3B                		movu.B	[r11,r3], r11
 123 0051 47 BC                   		cmp	r11, r12
 124 0053 19                      		bne	.L12
 991:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               *energyPhaseIDPtr = (PM_PowerProfile_EnergyPhaseIDType)(j + 1);
 125                             		.loc 1 991 0
 126 0054 62 1E                   		add	#1, r14
 127 0056 C3 7E                   		mov.B	r14, [r7]
 128                             	.LVL20:
 992:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               errorIO = IO_E_OK;
 129                             		.loc 1 992 0
 130 0058 66 01                   		mov	#0, r1
 993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               j = (CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM - 1);  /* break */
 131                             		.loc 1 993 0
 132 005a 66 9E                   		mov	#9, r14
 133                             	.LVL21:
 134                             		.balign 2,3,1
 135                             	.L12:
 986:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           for ( j = 0; j < CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM; ++j )
 136                             		.loc 1 986 0
 137 005c 62 1E                   		add	#1, r14
 138                             	.LVL22:
 139 005e 5B EB                   		movu.B	r14, r11
 140 0060 61 AB                   		cmp	#10, r11
 141 0062 21 EA                   		bne	.L13
 142 0064 0C                      		bra	.L14
 143                             	.LVL23:
 144                             	.L11:
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           i = (count - 1);  /* break */
 145                             		.loc 1 999 0
 146 0065 CF F2                   		mov.B	r15, r2
 147                             	.LVL24:
 148 0067 03                      		.balign 2,3,1
 149                             	.L14:
1003:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         ++energyPhaseParamsPtr;
 150                             		.loc 1 1003 0
 151 0068 62 A5                   		add	#10, r5
 152                             	.LVL25:
 981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < count; ++i )
 153                             		.loc 1 981 0
 154 006a 62 12                   		add	#1, r2
 155                             	.LVL26:
 156 006c 5B 2E                   		movu.B	r2, r14
 157 006e 47 4E                   		cmp	r4, r14
 158 0070 23 CC                   		bltu	.L15
 159 0072 0C                      		bra	.L10
 160                             	.LVL27:
 161                             	.L17:
 970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_FAIL;
 162                             		.loc 1 970 0
 163 0073 75 41 1A                		mov	#26, r1
 164                             	.LVL28:
 165                             		.balign 2,3,2
 166                             	.L10:
1009:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 167                             		.loc 1 1009 0
 168 0076 75 21 1A                		and #26, r1
 169                             	.LVL29:
 170 0079 3F 7C 08                		rtsd	#32, r7-r12
 171                             	.LFE11:
 173                             		.section	.text.PM_PowerProfile_ModTab_QueryTable,"ax",@progbits
 175                             	_PM_PowerProfile_ModTab_QueryTable:
 176                             	.LFB23:
1410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_ModTab_QueryTable
1413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_ModTab_Level2HeaderType *tableHeaderPtr,
1415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_ModifierValueType *inputPtr,
1416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModifierValueType *outputPtr,
1417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   bool_t secondLevel
1418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 177                             		.loc 1 1419 0
 178                             	.LVL30:
 179 0000 6E 6D                   		pushm	r6-r13
 180                             	.LCFI2:
 181 0002 71 00 E4                		add	#-28, r0
 182                             	.LCFI3:
 183 0005 EF 1D                   		mov.L	r1, r13
 184 0007 A0 83                   		mov.L	r3, 8[r0]
 185                             	.LVL31:
 186                             	.LBB6:
 187                             	.LBB7:
1399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     extended = (PM_PowerProfile_ModTab_ExtendedModifierValueType)(*(const int16_t *)datumPtr);
 188                             		.loc 1 1399 0
 189 0009 DC 2C                   		mov.W	[r2], r12
 190                             	.LVL32:
 191                             	.LBE7:
 192                             	.LBE6:
1420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const uint8_t *inputRawPtr = NULL;
1421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const uint8_t *outputRawPtr = NULL;
1422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType inputCurr = 0;
1423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType inputPrev = 0;
1424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType outputCurr = 0;
1425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType outputPrev = 0;
1426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType inputExt = PM_PowerProfile_ModTab_ExtendValue(in
1427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t count = tableHeaderPtr->itemsNumber;
 193                             		.loc 1 1427 0
 194 000b 88 1E                   		mov.B	1[r1], r6
 195                             	.LVL33:
1428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t sval = (secondLevel ? tableHeaderPtr->SVal : PM_PowerProfile_ModTab_InOutType_UINT16);
 196                             		.loc 1 1428 0
 197 000d 61 04                   		cmp	#0, r4
 198 000f 10                      		beq	.L33
 199                             		.loc 1 1428 0 is_stmt 0 discriminator 1
 200 0010 58 18                   		movu.B	[r1], r8
 201 0012 68 38                   		shlr	#3, r8
 202 0014 64 38                   		and #3, r8
 203 0016 0C                      		bra	.L22
 204                             	.L33:
 205                             		.loc 1 1428 0
 206 0017 66 18                   		mov	#1, r8
 207 0019 03                      		.balign 2,3,1
 208                             	.L22:
 209                             	.LVL34:
1429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_FAIL;
1430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( count > 0 )
 210                             		.loc 1 1431 0 is_stmt 1 discriminator 3
 211 001a 5B 64                   		movu.B	r6, r4
 212                             	.LVL35:
 213 001c 61 04                   		cmp	#0, r4
 214 001e 3A 67 01                		beq	.L34
 215                             	.LBB9:
 216                             	.LBB8:
1399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     extended = (PM_PowerProfile_ModTab_ExtendedModifierValueType)(*(const int16_t *)datumPtr);
 217                             		.loc 1 1399 0
 218 0021 DF CC                   		mov.W	r12, r12
 219                             	.LBE8:
 220                             	.LBE9:
1432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Calculate the beginning of the input and output values arrays */
1434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     inputRawPtr = ((const uint8_t *)tableHeaderPtr + sizeof(PM_PowerProfile_ModTab_Level2HeaderType
 221                             		.loc 1 1434 0
 222 0023 71 D7 04                		add	#4, r13, r7
 223                             	.LVL36:
1435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     inputRawPtr += ((sizeof(uint16_t) - ((size_t)inputRawPtr & (sizeof(uint16_t) - 1))) & (sizeof(u
 224                             		.loc 1 1435 0
 225 0026 EF 7A                   		mov.L	r7, r10
 226 0028 64 1A                   		and #1, r10
 227 002a 4B 7A                   		add	r7, r10
 228                             	.LVL37:
1436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     outputRawPtr = ((const uint8_t *)inputRawPtr + ((size_t)PM_PowerProfile_ModTab_InOutSizes[table
 229                             		.loc 1 1436 0
 230 002c 58 DE                   		movu.B	[r13], r14
 231 002e FD 81 E2                		shlr	#1, r14, r2
 232                             	.LVL38:
 233 0031 64 32                   		and #3, r2
 234 0033 70 27 00 00 00 00       		add	#_PM_PowerProfile_ModTab_InOutSizes, r2, r7
 235 0039 58 77                   		movu.B	[r7], r7
 236 003b 4F 74                   		mul	r7, r4
 237 003d 4B A4                   		add	r10, r4
 238                             	.LVL39:
1437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     outputRawPtr += ((sizeof(uint16_t) - ((size_t)outputRawPtr & (sizeof(uint16_t) - 1))) & (sizeof
 239                             		.loc 1 1437 0
 240 003f EF 4B                   		mov.L	r4, r11
 241 0041 64 1B                   		and #1, r11
 242 0043 4B 4B                   		add	r4, r11
 243                             	.LVL40:
1438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Initialize variables in special cases */
1440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     inputPrev = PM_PowerProfile_ModTab_ExtendValue(inputRawPtr, tableHeaderPtr->SMod);
 244                             		.loc 1 1440 0
 245 0045 EF A1                   		mov.L	r10, r1
 246                             	.LVL41:
 247 0047 E7 0E 04                		mov.L	r14, 16[r0]
 248 004a 05 00 00 00             		bsr	_PM_PowerProfile_ModTab_ExtendValue
 249                             	.LVL42:
 250 004e EF 19                   		mov.L	r1, r9
 251                             	.LVL43:
1441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     switch ( (PM_PowerProfile_ModTab_SearchModeType)tableHeaderPtr->SearchMode )
 252                             		.loc 1 1441 0
 253 0050 ED 0E 04                		mov.L	16[r0], r14
 254 0053 68 5E                   		shlr	#5, r14
 255 0055 61 3E                   		cmp	#3, r14
 256 0057 21 2B                   		bne	.L42
1442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_SearchModeType_DEFICIENCY:
1444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       outputPrev = 0;  /* Will be used as output if outside range */
1446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_SearchModeType_INTERPOLATION:
1449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       outputCurr = PM_PowerProfile_ModTab_ExtendValue(outputRawPtr, sval);
 257                             		.loc 1 1450 0
 258 0059 5B 8E                   		movu.B	r8, r14
 259 005b EF B1                   		mov.L	r11, r1
 260                             	.LVL44:
 261 005d EF E2                   		mov.L	r14, r2
 262 005f E7 0E 04                		mov.L	r14, 16[r0]
 263 0062 05 00 00 00             		bsr	_PM_PowerProfile_ModTab_ExtendValue
 264                             	.LVL45:
 265 0066 EF 14                   		mov.L	r1, r4
 266                             	.LVL46:
1451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       if ( (0 == count) || (inputExt <= inputPrev) )
 267                             		.loc 1 1451 0
 268 0068 ED 0E 04                		mov.L	16[r0], r14
 269 006b 47 9C                   		cmp	r9, r12
 270 006d 2B 1F                   		ble	.L36
 271                             	.LVL47:
1452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         /* Single value (constant output) or below input range, continue to lower bound */
1454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         count = 0;
1455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       else
1457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         /* Move cursor to the second point (the algorithm interpolates backwards) */
1459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         inputPrev = PM_PowerProfile_ModTab_ExtendValue(inputRawPtr, tableHeaderPtr->SMod);
1460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         outputPrev = outputCurr;
1461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         inputRawPtr += PM_PowerProfile_ModTab_InOutSizes[tableHeaderPtr->SMod];
 272                             		.loc 1 1461 0
 273 006f 4B 7A                   		add	r7, r10
 274                             	.LVL48:
1462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         outputRawPtr += PM_PowerProfile_ModTab_InOutSizes[sval];
 275                             		.loc 1 1462 0
 276 0071 70 EE 00 00 00 00       		add	#_PM_PowerProfile_ModTab_InOutSizes, r14
 277 0077 48 EB                   		add	[r14].UB, r11
 278                             	.LVL49:
1463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         --count;
 279                             		.loc 1 1463 0
 280 0079 60 16                   		sub	#1, r6
 281                             	.LVL50:
1460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         outputPrev = outputCurr;
 282                             		.loc 1 1460 0
 283 007b EF 15                   		mov.L	r1, r5
1464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       errorIO = IO_E_OK;  /* Interpolation always returns a value */
 284                             		.loc 1 1465 0
 285 007d 66 07                   		mov	#0, r7
 286 007f 38 E8 00                		bra	.L26
 287                             	.LVL51:
 288                             	.L42:
1429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_FAIL;
 289                             		.loc 1 1429 0
 290 0082 75 47 1A                		mov	#26, r7
1425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType outputPrev = 0;
 291                             		.loc 1 1425 0
 292 0085 66 05                   		mov.L	#0, r5
1424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType outputCurr = 0;
 293                             		.loc 1 1424 0
 294 0087 EF 54                   		mov.L	r5, r4
 295 0089 38 DE 00                		bra	.L26
 296                             	.LVL52:
 297                             	.L36:
 298                             		.loc 1 1465 0
 299 008c 66 06                   		mov	#0, r6
 300                             	.LVL53:
1454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         count = 0;
 301                             		.loc 1 1454 0
 302 008e CF 67                   		mov.B	r6, r7
1425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModTab_ExtendedModifierValueType outputPrev = 0;
 303                             		.loc 1 1425 0
 304 0090 66 05                   		mov.L	#0, r5
 305 0092 38 D5 00                		bra	.L26
 306                             	.LVL54:
 307                             	.L32:
1466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     default:
1469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Iterate through points */
1475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( /* count = count */; count > 0; --count )
1476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       inputCurr = PM_PowerProfile_ModTab_ExtendValue(inputRawPtr, tableHeaderPtr->SMod);
 308                             		.loc 1 1477 0
 309 0095 58 DF                   		movu.B	[r13], r15
 310 0097 FD 81 F2                		shlr	#1, r15, r2
 311 009a EF A1                   		mov.L	r10, r1
 312 009c 64 32                   		and #3, r2
 313 009e A1 0D                   		mov.L	r5, 20[r0]
 314 00a0 E7 0F 06                		mov.L	r15, 24[r0]
 315 00a3 05 00 00 00             		bsr	_PM_PowerProfile_ModTab_ExtendValue
 316                             	.LVL55:
 317 00a7 EF 18                   		mov.L	r1, r8
 318                             	.LVL56:
1478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       outputCurr = PM_PowerProfile_ModTab_ExtendValue(outputRawPtr, sval);
 319                             		.loc 1 1478 0
 320 00a9 EF B1                   		mov.L	r11, r1
 321                             	.LVL57:
 322 00ab A8 0A                   		mov.L	4[r0], r2
 323 00ad 05 00 00 00             		bsr	_PM_PowerProfile_ModTab_ExtendValue
 324                             	.LVL58:
 325 00b1 EF 14                   		mov.L	r1, r4
 326                             	.LVL59:
1479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Compare with the reference and process */
1481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       switch ( (PM_PowerProfile_ModTab_SearchModeType)tableHeaderPtr->SearchMode )
 327                             		.loc 1 1481 0
 328 00b3 ED 0F 06                		mov.L	24[r0], r15
 329 00b6 68 5F                   		shlr	#5, r15
 330 00b8 A9 0D                   		mov.L	20[r0], r5
 331 00ba 61 1F                   		cmp	#1, r15
 332 00bc 20 17                   		beq	.L29
 333 00be 61 0F                   		cmp	#0, r15
 334 00c0 20 0D                   		beq	.L28
 335 00c2 61 2F                   		cmp	#2, r15
 336 00c4 20 15                   		beq	.L30
 337 00c6 61 3F                   		cmp	#3, r15
 338 00c8 3B 82 00                		bne	.L46
 339 00cb 2E 16                   		bra	.L31
 340                             	.L28:
1482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       case PM_PowerProfile_ModTab_SearchModeType_EQUALITY:
1484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( inputCurr == inputExt )
 341                             		.loc 1 1485 0
 342 00cd 47 C8                   		cmp	r12, r8
 343 00cf 21 7D                   		bne	.L27
 344 00d1 2E 6F                   		bra	.L38
 345                             	.L29:
1486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = IO_E_OK;
1488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           count = 1;  /* break */
1489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       case PM_PowerProfile_ModTab_SearchModeType_EXCESS:
1493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( inputExt <= inputCurr )
 346                             		.loc 1 1494 0
 347 00d3 47 8C                   		cmp	r8, r12
 348 00d5 2B 6E                   		ble	.L39
 349 00d7 2E 75                   		bra	.L27
 350                             	.L30:
1495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = IO_E_OK;
1497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           count = 1;  /* break */
1498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       case PM_PowerProfile_ModTab_SearchModeType_DEFICIENCY:
1502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( inputCurr <= inputExt )
 351                             		.loc 1 1503 0
 352 00d9 47 C8                   		cmp	r12, r8
 353 00db 2A 6D                   		bgt	.L40
1504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = IO_E_OK;
 354                             		.loc 1 1505 0
 355 00dd 66 07                   		mov	#0, r7
 356                             	.LVL60:
 357 00df 2E 6D                   		bra	.L27
 358                             	.LVL61:
 359                             	.L31:
1506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         else
1508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           outputCurr = outputPrev;
1510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           count = 1;  /* break */
1511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       case PM_PowerProfile_ModTab_SearchModeType_INTERPOLATION:
1515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( inputExt <= inputCurr )
 360                             		.loc 1 1516 0
 361 00e1 47 8C                   		cmp	r8, r12
 362 00e3 2A 69                   		bgt	.L27
1517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           /* Interpolate between intermediate points */
1519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           outputCurr = LIB_Fixed_Round(LIB_Fixed_LerpY(
 363                             		.loc 1 1519 0
 364 00e5 EF 91                   		mov.L	r9, r1
 365                             	.LVL62:
 366 00e7 66 02                   		mov	#0, r2
 367 00e9 A1 04                   		mov.L	r4, 16[r0]
 368 00eb A1 0D                   		mov.L	r5, 20[r0]
 369 00ed 05 00 00 00             		bsr	_LIB_Fixed_FromClampedAccumulator
 370                             	.LVL63:
 371 00f1 EF 1F                   		mov.L	r1, r15
 372 00f3 A9 0D                   		mov.L	20[r0], r5
 373 00f5 EF 51                   		mov.L	r5, r1
 374 00f7 66 02                   		mov	#0, r2
 375 00f9 E7 0F 06                		mov.L	r15, 24[r0]
 376 00fc 05 00 00 00             		bsr	_LIB_Fixed_FromClampedAccumulator
 377                             	.LVL64:
 378 0100 EF 15                   		mov.L	r1, r5
 379 0102 EF 81                   		mov.L	r8, r1
 380 0104 66 02                   		mov	#0, r2
 381 0106 A1 0D                   		mov.L	r5, 20[r0]
 382 0108 05 00 00 00             		bsr	_LIB_Fixed_FromClampedAccumulator
 383                             	.LVL65:
 384 010c EF 13                   		mov.L	r1, r3
 385 010e A9 04                   		mov.L	16[r0], r4
 386 0110 EF 41                   		mov.L	r4, r1
 387 0112 66 02                   		mov	#0, r2
 388 0114 A1 03                   		mov.L	r3, 16[r0]
 389 0116 05 00 00 00             		bsr	_LIB_Fixed_FromClampedAccumulator
 390                             	.LVL66:
 391 011a EF 16                   		mov.L	r1, r6
 392                             	.LVL67:
 393 011c FF 01 9C                		sub	r9, r12, r1
 394 011f 66 02                   		mov	#0, r2
 395 0121 05 00 00 00             		bsr	_LIB_Fixed_FromClampedAccumulator
 396                             	.LVL68:
 397 0125 E3 01                   		mov.L	r1, [r0]
 398 0127 ED 0F 06                		mov.L	24[r0], r15
 399 012a EF F1                   		mov.L	r15, r1
 400 012c A9 0D                   		mov.L	20[r0], r5
 401 012e EF 52                   		mov.L	r5, r2
 402 0130 A9 03                   		mov.L	16[r0], r3
 403 0132 EF 64                   		mov.L	r6, r4
 404 0134 05 00 00 00             		bsr	_LIB_Fixed_LerpY
 405                             	.LVL69:
 406 0138 05 00 00 00             		bsr	_LIB_Fixed_Round
 407                             	.LVL70:
 408 013c DF 14                   		mov.W	r1, r4
 409                             	.LVL71:
 410 013e 2E 0C                   		bra	.L46
 411                             	.LVL72:
 412                             	.L38:
1487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = IO_E_OK;
 413                             		.loc 1 1487 0
 414 0140 CF F7                   		mov.B	r15, r7
 415                             	.LVL73:
 416 0142 08                      		bra	.L46
 417                             	.LVL74:
 418                             	.L39:
1496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = IO_E_OK;
 419                             		.loc 1 1496 0
 420 0143 66 07                   		mov	#0, r7
 421                             	.LVL75:
1497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           count = 1;  /* break */
 422                             		.loc 1 1497 0
 423 0145 CF F6                   		mov.B	r15, r6
 424                             	.LVL76:
 425 0147 0D                      		bra	.L27
 426                             	.LVL77:
 427                             	.L40:
1509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           outputCurr = outputPrev;
 428                             		.loc 1 1509 0
 429 0148 EF 54                   		mov.L	r5, r4
 430                             	.LVL78:
 431                             		.balign 2,3,1
 432                             	.L46:
1510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           count = 1;  /* break */
 433                             		.loc 1 1510 0
 434 014a 66 16                   		mov	#1, r6
 435                             		.balign 2,3,3
 436                             	.L27:
 437                             	.LVL79:
1520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             LIB_Fixed_FromClampedAccumulator(inputPrev, 0),
1521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             LIB_Fixed_FromClampedAccumulator(outputPrev, 0),
1522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             LIB_Fixed_FromClampedAccumulator(inputCurr, 0),
1523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             LIB_Fixed_FromClampedAccumulator(outputCurr, 0),
1524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             LIB_Fixed_FromClampedAccumulator((inputExt - inputPrev), 0)
1525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           ));
1526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           count = 1;  /* break */
1527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       default:
1531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         count = 1;  /* break */
1533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
1534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Next input and output values */
1538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       inputPrev = inputCurr;
1539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       outputPrev = outputCurr;
1540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       inputRawPtr += PM_PowerProfile_ModTab_InOutSizes[tableHeaderPtr->SMod];
 438                             		.loc 1 1540 0
 439 014c 58 D2                   		movu.B	[r13], r2
 440 014e 68 12                   		shlr	#1, r2
 441 0150 64 32                   		and #3, r2
 442 0152 70 22 00 00 00 00       		add	#_PM_PowerProfile_ModTab_InOutSizes, r2
 443 0158 48 2A                   		add	[r2].UB, r10
 444                             	.LVL80:
1541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       outputRawPtr += PM_PowerProfile_ModTab_InOutSizes[sval];
 445                             		.loc 1 1541 0
 446 015a ED 0E 03                		mov.L	12[r0], r14
 447 015d 48 EB                   		add	[r14].UB, r11
 448                             	.LVL81:
1475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( /* count = count */; count > 0; --count )
 449                             		.loc 1 1475 0
 450 015f 60 16                   		sub	#1, r6
 451                             	.LVL82:
1477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       inputCurr = PM_PowerProfile_ModTab_ExtendValue(inputRawPtr, tableHeaderPtr->SMod);
 452                             		.loc 1 1477 0
 453 0161 EF 89                   		mov.L	r8, r9
1539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       outputPrev = outputCurr;
 454                             		.loc 1 1539 0
 455 0163 EF 45                   		mov.L	r4, r5
 456 0165 2E 13                   		bra	.L44
 457                             	.LVL83:
 458                             	.L26:
1478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       outputCurr = PM_PowerProfile_ModTab_ExtendValue(outputRawPtr, sval);
 459                             		.loc 1 1478 0 discriminator 1
 460 0167 5B 88                   		movu.B	r8, r8
 461 0169 E7 08 01                		mov.L	r8, 4[r0]
 462                             		.loc 1 1541 0 discriminator 1
 463 016c EF 8E                   		mov.L	r8, r14
 464 016e 70 EE 00 00 00 00       		add	#_PM_PowerProfile_ModTab_InOutSizes, r14
 465 0174 E7 0E 03                		mov.L	r14, 12[r0]
 466                             	.LVL84:
 467 0177 03                      		.balign 2,3,1
 468                             	.L44:
1475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( /* count = count */; count > 0; --count )
 469                             		.loc 1 1475 0 discriminator 1
 470 0178 5B 6E                   		movu.B	r6, r14
 471 017a 61 0E                   		cmp	#0, r14
 472 017c 3B 19 FF                		bne	.L32
1542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *outputPtr = ((IO_E_OK == errorIO) ? (PM_PowerProfile_ModifierValueType)outputCurr : 0);
 473                             		.loc 1 1545 0
 474 017f 5B 7A                   		movu.B	r7, r10
 475                             	.LVL85:
 476 0181 61 0A                   		cmp	#0, r10
 477 0183 1E                      		bne	.L41
 478 0184 08                      		bra	.L23
 479                             	.LVL86:
 480                             	.L34:
1429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_FAIL;
 481                             		.loc 1 1429 0
 482 0185 75 47 1A                		mov	#26, r7
 483 0188 0C                      		bra	.L23
 484                             	.LVL87:
 485                             	.L41:
 486                             		.loc 1 1545 0
 487 0189 DF E4                   		mov.W	r14, r4
 488                             	.LVL88:
 489 018b 03                      		.balign 2,3,1
 490                             	.L23:
 491                             		.loc 1 1545 0 is_stmt 0 discriminator 3
 492 018c ED 0A 02                		mov.L	8[r0], r10
 493 018f D3 A4                   		mov.W	r4, [r10]
1546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (errorIO);
1547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 494                             		.loc 1 1547 0 is_stmt 1 discriminator 3
 495 0191 EF 71                   		mov.L	r7, r1
 496 0193 75 21 1F                		and #31, r1
 497 0196 3F 6D 0F                		rtsd	#60, r6-r13
 498                             	.LFE23:
 500 0199 03                      		.section	.text.PM_PowerProfile_Init,"ax",@progbits
 501                             		.global	_PM_PowerProfile_Init
 503                             	_PM_PowerProfile_Init:
 504                             	.LFB0:
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 505                             		.loc 1 478 0
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	memset(&PM_PowerProfile_Data, 0, sizeof(PM_PowerProfile_Data));
 506                             		.loc 1 480 0
 507 0000 FB 12 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r1
 508 0006 75 43 7C                		mov.L	#0x7c, r3
 509 0009 66 02                   		mov	#0, r2
 510 000b 7F 88                   		sstr.b
 511 000d 02                      		rts
 512                             	.LFE0:
 514                             		.section	.text.PM_PowerProfile_SetParamModifierFunc,"ax",@progbits
 515                             		.global	_PM_PowerProfile_SetParamModifierFunc
 517                             	_PM_PowerProfile_SetParamModifierFunc:
 518                             	.LFB1:
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 519                             		.loc 1 492 0
 520                             	.LVL89:
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.paramValueGet = func;
 521                             		.loc 1 493 0
 522 0000 FB E2 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r14
 523 0006 E3 E1                   		mov.L	r1, [r14]
 524 0008 02                      		rts
 525                             	.LFE1:
 527                             		.section	.text.PM_PowerProfile_SetAlphaFunc,"ax",@progbits
 528                             		.global	_PM_PowerProfile_SetAlphaFunc
 530                             	_PM_PowerProfile_SetAlphaFunc:
 531                             	.LFB2:
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 532                             		.loc 1 505 0
 533                             	.LVL90:
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_Data.alphaValueGet = func;
 534                             		.loc 1 506 0
 535 0000 FB E2 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r14
 536 0006 E7 E1 01                		mov.L	r1, 4[r14]
 537 0009 02                      		rts
 538                             	.LFE2:
 540                             		.section	.text.PM_PowerProfile_GetPowerProfilesNum,"ax",@progbits
 541                             		.global	_PM_PowerProfile_GetPowerProfilesNum
 543                             	_PM_PowerProfile_GetPowerProfilesNum:
 544                             	.LFB3:
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 545                             		.loc 1 517 0
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 546                             		.loc 1 519 0
 547 0000 66 11                   		mov.L	#1, r1
 548 0002 02                      		rts
 549                             	.LFE3:
 551                             		.section	.text.PM_PowerProfile_UpdatePowerProfileStatus,"ax",@progbits
 552                             		.global	_PM_PowerProfile_UpdatePowerProfileStatus
 554                             	_PM_PowerProfile_UpdatePowerProfileStatus:
 555                             	.LFB4:
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 556                             		.loc 1 553 0
 557                             	.LVL91:
 558 0000 6E 7B                   		pushm	r7-r11
 559                             	.LCFI4:
 560 0002 60 80                   		sub	#8, r0
 561                             	.LCFI5:
 562 0004 75 47 20                		mov.L	#32, r7
 563 0007 4B 07                   		add	r0, r7
 564 0009 CF 1A                   		mov.B	r1, r10
 565 000b 58 71                   		movu.B	[r7], r1
 566                             	.LVL92:
 567 000d CD 7B 01                		mov.B	1[r7], r11
 568 0010 CD 7E 02                		mov.B	2[r7], r14
 569                             	.LVL93:
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_EnergyPhaseIDType energyPhID = 0;
 570                             		.loc 1 555 0
 571 0013 3C 00 00                		mov.B	#0, [r0]
 572                             	.LVL94:
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if ( _Clear == TRUE ) {
 573                             		.loc 1 557 0
 574 0016 61 11                   		cmp	#1, r1
 575 0018 1F                      		bne	.L52
 576                             	.LVL95:
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		appStatus &= ~(PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK|
 577                             		.loc 1 563 0
 578 0019 EF E1                   		mov.L	r14, r1
 579 001b 64 F1                   		and #15, r1
 580                             	.LVL96:
 581 001d 2E 33                   		bra	.L53
 582                             	.LVL97:
 583                             	.L52:
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		if ( PM_PowerProfile_GetEnergyPhaseID(mSetting, _Index, _Phase, &energyPhID) == IO_E_OK )
 584                             		.loc 1 568 0
 585 001f CF 41                   		mov.B	r4, r1
 586 0021 EF 04                   		mov.L	r0, r4
 587                             	.LVL98:
 588 0023 05 00 00 00             		bsr	_PM_PowerProfile_GetEnergyPhaseID
 589                             	.LVL99:
 590 0027 76 21 FF 00             		and #0xff, r1
 591 002b 21 23                   		bne	.L55
 592                             	.LVL100:
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus |= ((PM_PowerProfile_Data.powerProfileSID[_Compartment] << PM_POWER_PROFILE_STATUS__PO
 593                             		.loc 1 571 0
 594 002d 5B A7                   		movu.B	r10, r7
 595 002f 70 77 70 00 00 00       		add	#_PM_PowerProfile_Data+112, r7
 596 0035 B0 7F                   		movu.B	1[r7], r7
 597 0037 6C 47                   		shll	#4, r7
 598 0039 75 27 70                		and #0x70, r7
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus = energyPhID & PM_POWER_PROFILE_STATUS__ENERGY_PHASE_ID_MSK;
 599                             		.loc 1 570 0
 600 003c CC 0E                   		mov.B	[r0], r14
 601 003e 64 FE                   		and #15, r14
 602                             	.LVL101:
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus |= ((PM_PowerProfile_Data.powerProfileSID[_Compartment] << PM_POWER_PROFILE_STATUS__PO
 603                             		.loc 1 571 0
 604 0040 57 E7                   		or	r14, r7
 605                             	.LVL102:
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus |= ((transition!=0)?PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK:0);
 606                             		.loc 1 573 0
 607 0042 5B BE                   		movu.B	r11, r14
 608 0044 61 0E                   		cmp	#0, r14
 609 0046 14                      		beq	.L54
 610 0047 FB E6 80                		mov	#0xffffff80, r14
 611                             		.balign 2,3,2
 612                             	.L54:
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus |= ((transition!=0)?PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK:0);
 613                             		.loc 1 573 0 is_stmt 0 discriminator 3
 614 004a FF 51 E7                		or	r14, r7, r1
 615                             	.LVL103:
 616 004d 0B                      		bra	.L53
 617                             	.LVL104:
 618                             	.L55:
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			appStatus=0;
 619                             		.loc 1 577 0 is_stmt 1
 620 004e 66 01                   		mov	#0, r1
 621                             	.LVL105:
 622                             		.balign 2,3,1
 623                             	.L53:
 581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.profileStatus[_Compartment]=appStatus;
 624                             		.loc 1 581 0
 625 0050 5B AA                   		movu.B	r10, r10
 626 0052 70 AA 08 00 00 00       		add	#_PM_PowerProfile_Data+8, r10
 627                             	.LVL106:
 628 0058 C7 A1 01                		mov.B	r1, 1[r10]
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 629                             		.loc 1 584 0
 630 005b 5B 11                   		movu.B	r1, r1
 631                             	.LVL107:
 632 005d 3F 7B 07                		rtsd	#28, r7-r11
 633                             	.LFE4:
 635                             		.section	.text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay,"ax",@progbits
 636                             		.global	_PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
 638                             	_PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:
 639                             	.LFB5:
 612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 640                             		.loc 1 612 0
 641                             	.LVL108:
 642 0000 6E 7D                   		pushm	r7-r13
 643                             	.LCFI6:
 644 0002 71 00 F0                		add	#-16, r0
 645                             	.LCFI7:
 646 0005 75 47 30                		mov.L	#48, r7
 647 0008 4B 07                   		add	r0, r7
 648 000a CF 1D                   		mov.B	r1, r13
 649 000c CF 3C                   		mov.B	r3, r12
 650 000e CF 4B                   		mov.B	r4, r11
 651 0010 EC 7A                   		mov.L	[r7], r10
 652 0012 A8 7F                   		mov.L	4[r7], r7
 653                             	.LVL109:
 616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	Loader_Struct sfData = {0};
 654                             		.loc 1 616 0
 655 0014 3E 00 00                		mov.L	#0, [r0]
 656 0017 3E 01 00                		mov.L	#0, 4[r0]
 657                             	.LVL110:
 622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	*pNewEnergyPhase = FALSE;
 658                             		.loc 1 622 0
 659 001a F8 A6 00                		mov.L	#0, [r10]
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	*pMaxActivationDelay = 0x0000;
 660                             		.loc 1 623 0
 661 001d 3D 70 00                		mov.W	#0, [r7]
 627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	bl = MSettingBasicLoader(	mSetting, SF_PTR_POWER_PROFILE, _Index, &sfData);
 662                             		.loc 1 627 0
 663 0020 5B 23                   		movu.B	r2, r3
 664                             	.LVL111:
 665 0022 CF 41                   		mov.B	r4, r1
 666                             	.LVL112:
 667 0024 66 52                   		mov	#5, r2
 668                             	.LVL113:
 669 0026 EF 04                   		mov.L	r0, r4
 670                             	.LVL114:
 671 0028 05 00 00 00             		bsr	_MSettingBasicLoader
 672                             	.LVL115:
 629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if ( bl != SF_OK )
 673                             		.loc 1 629 0
 674 002c 5B 11                   		movu.B	r1, r1
 675 002e 61 01                   		cmp	#0, r1
 676 0030 13                      		beq	.L59
 677 0031 2E 1F                   		bra	.L70
 678                             	.L59:
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		energyPhaseCount = sfData.DataLenght / (sizeof(SF_PowerProfileDataEnergyPhaseType) / sizeof(uint1
 679                             		.loc 1 636 0
 680 0033 B8 84                   		movu.W	4[r0], r4
 681 0035 FD 74 94 05             		divu	#5, r4
 682                             	.LVL116:
 638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		if( energyPhaseCount == 0 )
 683                             		.loc 1 638 0
 684 0039 5B 44                   		movu.B	r4, r4
 685 003b 61 04                   		cmp	#0, r4
 686 003d 21 18                   		bne	.L61
 687                             	.LVL117:
 688                             	.LBB12:
 689                             	.LBB13:
1087:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.status[powerProfileID-1].flags |= flags;
 690                             		.loc 1 1087 0
 691 003f 5B D1                   		movu.B	r13, r1
 692                             	.LVL118:
 693 0041 6C 31                   		shll	#3, r1
 694 0043 70 11 70 00 00 00       		add	#_PM_PowerProfile_Data+112, r1
 695 0049 EC 1A                   		mov.L	[r1], r10
 696 004b 78 2A                   		bset #2, r10
 697 004d E3 1A                   		mov.L	r10, [r1]
 698                             	.LVL119:
 699 004f 03                      		.balign 2,3,2
 700                             	.L70:
 642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			return IO_E_FAIL;
 701                             		.loc 1 642 0
 702 0050 75 41 1A                		mov	#26, r1
 703 0053 2E 59                   		bra	.L60
 704                             	.LVL120:
 705                             	.L61:
 706                             	.LBE13:
 707                             	.LBE12:
 646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			pPPData = sfData.Data;
 708                             		.loc 1 646 0
 709 0055 EC 0E                   		mov.L	[r0], r14
 710                             	.LVL121:
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			for ( i = 0; i < energyPhaseCount; i++ )
 711                             		.loc 1 649 0
 712 0057 CF 12                   		mov.B	r1, r2
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				if ( SF_ENERGYPHASE_GET_FUNCID(psfEnergyPhase) == functionalPhaseId )
 713                             		.loc 1 653 0
 714 0059 5B CC                   		movu.B	r12, r12
 715 005b 0B                      		bra	.L64
 716                             	.LVL122:
 717                             	.L68:
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				pPPData += sizeof(SF_PowerProfileDataEnergyPhaseType);
 718                             		.loc 1 659 0
 719 005c EF 3E                   		mov.L	r3, r14
 720                             	.LVL123:
 721                             		.balign 2,3,5
 722                             	.L64:
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				if ( SF_ENERGYPHASE_GET_FUNCID(psfEnergyPhase) == functionalPhaseId )
 723                             		.loc 1 653 0
 724 005e CD ED 01                		mov.B	1[r14], r13
 725 0061 75 2D 7F                		and #0x7f, r13
 726 0064 47 CD                   		cmp	r12, r13
 727 0066 1E                      		bne	.L62
 655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					*pNewEnergyPhase = TRUE;
 728                             		.loc 1 655 0
 729 0067 F8 A6 01                		mov.L	#1, [r10]
 656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					break;
 730                             		.loc 1 656 0
 731 006a 2E 0E                   		bra	.L63
 732                             	.L62:
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				pPPData += sizeof(SF_PowerProfileDataEnergyPhaseType);
 733                             		.loc 1 659 0
 734 006c 71 E3 0A                		add	#10, r14, r3
 735                             	.LVL124:
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			for ( i = 0; i < energyPhaseCount; i++ )
 736                             		.loc 1 649 0
 737 006f 62 12                   		add	#1, r2
 738                             	.LVL125:
 739 0071 5B 2D                   		movu.B	r2, r13
 740 0073 47 4D                   		cmp	r4, r13
 741 0075 23 E7                   		bltu	.L68
 742                             	.LVL126:
 743 0077 03                      		.balign 2,3,1
 744                             	.L63:
 662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			if ( *pNewEnergyPhase == TRUE )
 745                             		.loc 1 662 0
 746 0078 EC AA                   		mov.L	[r10], r10
 747 007a 61 1A                   		cmp	#1, r10
 748 007c 16                      		beq	.L65
 749                             	.LVL127:
 750 007d 03                      		.balign 2,3,1
 751                             	.L67:
 682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	return IO_E_OK;
 752                             		.loc 1 682 0
 753 007e 66 01                   		mov	#0, r1
 754 0080 2E 2C                   		bra	.L60
 755                             	.LVL128:
 756                             	.L65:
 665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				bl = MSettingBasicLoader(mSetting, SF_PTR_ENERGY_PHASE, SF_ENERGYPHASE_GET_PHASE_INDEX(psfEnerg
 757                             		.loc 1 665 0
 758 0082 58 E3                   		movu.B	[r14], r3
 759 0084 CF B1                   		mov.B	r11, r1
 760                             	.LVL129:
 761 0086 66 82                   		mov	#8, r2
 762 0088 EF 04                   		mov.L	r0, r4
 763                             	.LVL130:
 764 008a 05 00 00 00             		bsr	_MSettingBasicLoader
 765                             	.LVL131:
 667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				if ( bl != SF_OK )
 766                             		.loc 1 667 0
 767 008e 5B 11                   		movu.B	r1, r1
 768 0090 61 01                   		cmp	#0, r1
 769 0092 21 BE                   		bne	.L70
 674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					if ( sfData.DataLenght == (sizeof(SF_EnergyPhaseDataParamsType) / sizeof(uint16_t)) )
 770                             		.loc 1 674 0
 771 0094 5D 0A 02                		movu.W	4[r0], r10
 772 0097 61 AA                   		cmp	#10, r10
 773 0099 21 E5                   		bne	.L67
 676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 						*pMaxActivationDelay = SF_ENERGYPHASEPARAMS_GET_MAXDELAY((SF_EnergyPhaseDataParamsType*)((voi
 774                             		.loc 1 676 0
 775 009b EC 0B                   		mov.L	[r0], r11
 776                             	.LVL132:
 777 009d 59 BA 02                		movu.B	2[r11], r10
 778 00a0 6C 8A                   		shll	#8, r10
 779 00a2 55 BA 03                		or	3[r11].UB, r10
 780 00a5 76 2A FF 07             		and #0x7ff, r10
 781 00a9 D3 7A                   		mov.W	r10, [r7]
 782                             	.LVL133:
 783 00ab 03                      		.balign 2,3,1
 784                             	.L60:
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 785                             		.loc 1 683 0
 786 00ac 5B 11                   		movu.B	r1, r1
 787 00ae 3F 7D 0B                		rtsd	#44, r7-r13
 788                             	.LFE5:
 790 00b1 03                      		.section	.text.PM_PowerProfile_SetDuration,"ax",@progbits
 791                             		.global	_PM_PowerProfile_SetDuration
 793                             	_PM_PowerProfile_SetDuration:
 794                             	.LFB6:
 692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 795                             		.loc 1 692 0
 796                             	.LVL134:
 693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= powerProfileID) && (powerProf
 797                             		.loc 1 693 0
 798 0000 5B 11                   		movu.B	r1, r1
 799 0002 61 11                   		cmp	#1, r1
 800 0004 20 18                   		beq	.L72
 801                             	.LVL135:
 802                             	.LBB16:
 803                             	.LBB17:
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if(PM_PowerProfile_Data.status[powerProfileID-1].error == POWER_PROFILE_NO_ERR)
 804                             		.loc 1 1074 0
 805 0006 FD C3 1E                		shll	#3, r1, r14
 806 0009 70 EE F8 FF FF FF       		add	#_PM_PowerProfile_Data-8, r14
 807 000f ED E4 1D                		mov.L	116[r14], r4
 808 0012 61 04                   		cmp	#0, r4
 809 0014 1E                      		bne	.L73
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		PM_PowerProfile_Data.status[powerProfileID-1].error = _ErrorCode;
 810                             		.loc 1 1076 0
 811 0015 F9 E6 1D 09             		mov.L	#9, 116[r14]
 812 0019 03                      		.balign 2,3,3
 813                             	.L73:
 814                             		.balign 2,3,3
 815                             	.L74:
 816 001a 2E 00                   		bra	.L74
 817                             	.LVL136:
 818                             	.L72:
 819                             	.LBE17:
 820                             	.LBE16:
 694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.energyPhaseCounter[powerProfileID-1] = duration;
 821                             		.loc 1 694 0
 822 001c FB E2 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r14
 823 0022 D7 E2 37                		mov.W	r2, 110[r14]
 696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 824                             		.loc 1 696 0
 825 0025 66 01                   		mov.L	#0, r1
 826                             	.LVL137:
 827 0027 02                      		rts
 828                             	.LFE6:
 830                             		.section	.text.PM_PowerProfile_SetForceReload,"ax",@progbits
 831                             		.global	_PM_PowerProfile_SetForceReload
 833                             	_PM_PowerProfile_SetForceReload:
 834                             	.LFB8:
 882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 835                             		.loc 1 882 0
 836                             	.LVL138:
 883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= _PowerProfileID) && (_PowerPr
 837                             		.loc 1 883 0
 838 0000 5B 11                   		movu.B	r1, r1
 839 0002 61 11                   		cmp	#1, r1
 840 0004 20 18                   		beq	.L76
 841                             	.LVL139:
 842                             	.LBB20:
 843                             	.LBB21:
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if(PM_PowerProfile_Data.status[powerProfileID-1].error == POWER_PROFILE_NO_ERR)
 844                             		.loc 1 1074 0
 845 0006 FD C3 1E                		shll	#3, r1, r14
 846 0009 70 EE F8 FF FF FF       		add	#_PM_PowerProfile_Data-8, r14
 847 000f ED E4 1D                		mov.L	116[r14], r4
 848 0012 61 04                   		cmp	#0, r4
 849 0014 1E                      		bne	.L77
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		PM_PowerProfile_Data.status[powerProfileID-1].error = _ErrorCode;
 850                             		.loc 1 1076 0
 851 0015 F9 E6 1D 09             		mov.L	#9, 116[r14]
 852 0019 03                      		.balign 2,3,3
 853                             	.L77:
 854                             		.balign 2,3,3
 855                             	.L78:
 856 001a 2E 00                   		bra	.L78
 857                             	.LVL140:
 858                             	.L76:
 859                             	.LBE21:
 860                             	.LBE20:
 884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.status[_PowerProfileID-1].flags |= PM_POWER_PROFILE_STATUS_FLAGS__FORCERELOAD
 861                             		.loc 1 884 0
 862 001c FB 42 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r4
 863 0022 ED 4E 1E                		mov.L	120[r4], r14
 864 0025 78 3E                   		bset #3, r14
 865 0027 E7 4E 1E                		mov.L	r14, 120[r4]
 866 002a 02                      		rts
 867                             	.LFE8:
 869 002b 03                      		.section	.text.PM_PowerProfile_ResetForceReload,"ax",@progbits
 870                             		.global	_PM_PowerProfile_ResetForceReload
 872                             	_PM_PowerProfile_ResetForceReload:
 873                             	.LFB9:
 896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 874                             		.loc 1 896 0
 875                             	.LVL141:
 897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= _PowerProfileID) && (_PowerPr
 876                             		.loc 1 897 0
 877 0000 5B 11                   		movu.B	r1, r1
 878 0002 61 11                   		cmp	#1, r1
 879 0004 20 18                   		beq	.L80
 880                             	.LVL142:
 881                             	.LBB24:
 882                             	.LBB25:
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if(PM_PowerProfile_Data.status[powerProfileID-1].error == POWER_PROFILE_NO_ERR)
 883                             		.loc 1 1074 0
 884 0006 FD C3 1E                		shll	#3, r1, r14
 885 0009 70 EE F8 FF FF FF       		add	#_PM_PowerProfile_Data-8, r14
 886 000f ED E4 1D                		mov.L	116[r14], r4
 887 0012 61 04                   		cmp	#0, r4
 888 0014 1E                      		bne	.L81
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		PM_PowerProfile_Data.status[powerProfileID-1].error = _ErrorCode;
 889                             		.loc 1 1076 0
 890 0015 F9 E6 1D 09             		mov.L	#9, 116[r14]
 891 0019 03                      		.balign 2,3,3
 892                             	.L81:
 893                             		.balign 2,3,3
 894                             	.L82:
 895 001a 2E 00                   		bra	.L82
 896                             	.LVL143:
 897                             	.L80:
 898                             	.LBE25:
 899                             	.LBE24:
 898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	PM_PowerProfile_Data.status[_PowerProfileID-1].flags &= ~(PM_POWER_PROFILE_STATUS_FLAGS__FORCERELO
 900                             		.loc 1 898 0
 901 001c FB 42 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r4
 902 0022 ED 4E 1E                		mov.L	120[r4], r14
 903 0025 7A 3E                   		bclr #3, r14
 904 0027 E7 4E 1E                		mov.L	r14, 120[r4]
 905 002a 02                      		rts
 906                             	.LFE9:
 908 002b 03                      		.section	.text.PM_PowerProfile_GetPowerProfileByProfileID,"ax",@progbits
 909                             		.global	_PM_PowerProfile_GetPowerProfileByProfileID
 911                             	_PM_PowerProfile_GetPowerProfileByProfileID:
 912                             	.LFB10:
 921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 913                             		.loc 1 921 0
 914                             	.LVL144:
 915 0000 6E 7D                   		pushm	r7-r13
 916                             	.LCFI8:
 917                             	.LVL145:
 924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_POWER_PROFILE_ASSERT((CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM >= _PowerProfileID) && (_PowerP
 918                             		.loc 1 924 0
 919 0002 5B 11                   		movu.B	r1, r1
 920 0004 61 11                   		cmp	#1, r1
 921 0006 20 16                   		beq	.L84
 922                             	.LVL146:
 923                             	.LBB31:
 924                             	.LBB32:
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	if(PM_PowerProfile_Data.status[powerProfileID-1].error == POWER_PROFILE_NO_ERR)
 925                             		.loc 1 1074 0
 926 0008 FD C3 17                		shll	#3, r1, r7
 927 000b 70 77 F8 FF FF FF       		add	#_PM_PowerProfile_Data-8, r7
 928 0011 ED 7A 1D                		mov.L	116[r7], r10
 929 0014 61 0A                   		cmp	#0, r10
 930 0016 1C                      		bne	.L85
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		PM_PowerProfile_Data.status[powerProfileID-1].error = _ErrorCode;
 931                             		.loc 1 1076 0
 932 0017 3E FD 09                		mov.L	#9, 116[r7]
 933                             		.balign 2,3,3
 934                             	.L85:
 935                             		.balign 2,3,3
 936                             	.L97:
 937 001a 2E 00                   		bra	.L97
 938                             	.LVL147:
 939                             	.L84:
 940 001c EF 2C                   		mov.L	r2, r12
 941 001e EF 3B                   		mov.L	r3, r11
 942                             	.LBE32:
 943                             	.LBE31:
 927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( PM_PowerProfile_Data.status[_PowerProfileID-1].flags & PM_POWER_PROFILE_STATUS_FLAGS__FORCER
 944                             		.loc 1 927 0
 945 0020 FB 72 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r7
 946 0026 ED 7A 1E                		mov.L	120[r7], r10
 947 0029 7C 3A                   		btst #3, r10
 948 002b 3A 92 00                		beq	.L86
 929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     currentEnPhaseID = (PM_PowerProfile_Data.profileStatus[_PowerProfileID-1] & PM_POWER_PROFILE_ST
 949                             		.loc 1 929 0
 950 002e CD 7D 09                		mov.B	9[r7], r13
 951                             	.LVL148:
 952 0031 66 07                   		mov.L	#0, r7
 953                             	.LBB33:
 954                             	.LBB34:
1029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		if (PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].energyPhaseID == currentEnergyPhaseID)
 955                             		.loc 1 1029 0
 956 0033 64 FD                   		and #15, r13
 957                             	.LVL149:
 958 0035 03                      		.balign 2,3,1
 959                             	.L91:
 960 0036 CF 78                   		mov.B	r7, r8
 915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_GetPowerProfileByProfileID
 961                             		.loc 1 915 0
 962 0038 EF 7A                   		mov.L	r7, r10
 963 003a 63 AA                   		mul	#10, r10
 964 003c 70 AA 00 00 00 00       		add	#_PM_PowerProfile_Data, r10
1029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 		if (PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].energyPhaseID == currentEnergyPhaseID)
 965                             		.loc 1 1029 0
 966 0042 59 AE 0A                		movu.B	10[r10], r14
 967 0045 47 DE                   		cmp	r13, r14
 968 0047 21 6D                   		bne	.L87
1032:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			expectedDuration = EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].expected
 969                             		.loc 1 1032 0
 970 0049 DD A1 06                		mov.W	12[r10], r1
 971                             	.LVL150:
 972 004c 05 00 00 00             		bsr	_Endian16_Swap
 973                             	.LVL151:
1035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			if (expectedDuration != 0x07FF)
 974                             		.loc 1 1035 0
 975 0050 76 01 FF 07             		cmp	#0x7ff, r1
 976 0054 20 44                   		beq	.L88
 977                             	.LBB35:
1037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				PM_PowerProfile_DurationType duration=PM_PowerProfile_Data.energyPhaseCounter[powerProfileID-1]
 978                             		.loc 1 1037 0
 979 0056 FB A2 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r10
 980 005c DD AA 37                		mov.W	110[r10], r10
 981                             	.LVL152:
1038:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				if (expectedDuration <= duration)
 982                             		.loc 1 1038 0
 983 005f 5F AE                   		movu.W	r10, r14
 984 0061 47 E1                   		cmp	r14, r1
 985 0063 25 06                   		bleu	.L92
1044:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					expectedDuration = (expectedDuration - duration);
 986                             		.loc 1 1044 0
 987 0065 FF 0A A1                		sub	r10, r1, r10
 988                             	.LVL153:
 989 0068 0C                      		bra	.L89
 990                             	.LVL154:
 991                             	.L92:
1040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 					expectedDuration = 1;
 992                             		.loc 1 1040 0
 993 0069 66 1A                   		mov	#1, r10
 994                             	.LVL155:
 995 006b 03                      		.balign 2,3,1
 996                             	.L89:
1047:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				peakPower = EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].peakPower);
 997                             		.loc 1 1047 0
 998 006c EF 7D                   		mov.L	r7, r13
 999 006e 63 AD                   		mul	#10, r13
 1000 0070 70 DD 00 00 00 00       		add	#_PM_PowerProfile_Data, r13
 1001 0076 DD D1 07                		mov.W	14[r13], r1
 1002 0079 05 00 00 00             		bsr	_Endian16_Swap
 1003                             	.LVL156:
1048:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				energy = (expectedDuration * peakPower) / 60; /*[Wh]*/
 1004                             		.loc 1 1048 0
 1005 007d 5F AE                   		movu.W	r10, r14
 1006 007f 5F 11                   		movu.W	r1, r1
 1007 0081 4F E1                   		mul	r14, r1
 1008                             	.LVL157:
1050:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].energy = EndianU16_NToL(energy);
 1009                             		.loc 1 1050 0
 1010 0083 FD 74 81 3C             		div	#60, r1
 1011 0087 05 00 00 00             		bsr	_Endian16_Swap
 1012                             	.LVL158:
 1013 008b D7 D1 08                		mov.W	r1, 16[r13]
1051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 				PM_PowerProfile_Data.energyPhase[powerProfileID-1][i].expectedDuration = EndianU16_NToL(expecte
 1014                             		.loc 1 1051 0
 1015 008e DF A1                   		mov.W	r10, r1
 1016 0090 05 00 00 00             		bsr	_Endian16_Swap
 1017                             	.LVL159:
 1018 0094 D7 D1 06                		mov.W	r1, 12[r13]
 1019                             	.LVL160:
 1020 0097 03                      		.balign 2,3,1
 1021                             	.L88:
 1022                             	.LBE35:
1054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			*ppCurrentEnergyPhase = &(PM_PowerProfile_Data.energyPhase[powerProfileID-1][i]);
 1023                             		.loc 1 1054 0
 1024 0098 63 A7                   		mul	#10, r7
 1025 009a 70 77 0A 00 00 00       		add	#_PM_PowerProfile_Data+10, r7
 1026 00a0 E3 C7                   		mov.L	r7, [r12]
1055:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 			*pSize = PM_PowerProfile_Data.powerProfileSize[powerProfileID-1] - (i * sizeof(PM_PowerProfile_E
 1027                             		.loc 1 1055 0
 1028 00a2 63 A8                   		mul	#10, r8
 1029 00a4 FB 72 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r7
 1030 00aa CD 77 70                		mov.B	112[r7], r7
 1031 00ad FF 08 87                		sub	r8, r7, r8
 1032 00b0 C3 B8                   		mov.B	r8, [r11]
 1033 00b2 2E 14                   		bra	.L83
 1034                             	.LVL161:
 1035                             	.L87:
 1036 00b4 62 17                   		add	#1, r7
1027:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 	for (i=0; i<CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM; i++)
 1037                             		.loc 1 1027 0
 1038 00b6 61 A7                   		cmp	#10, r7
 1039 00b8 3B 7E FF                		bne	.L91
 1040 00bb 2E 0B                   		bra	.L83
 1041                             	.LVL162:
 1042                             	.L86:
 1043                             	.LBE34:
 1044                             	.LBE33:
 936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *ppFirstEnergyPhase = &(PM_PowerProfile_Data.energyPhase[_PowerProfileID-1][0]);
 1045                             		.loc 1 936 0
 1046 00bd F8 22 0A 00 00 00       		mov.L	#_PM_PowerProfile_Data+10, [r2]
 937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *pSize = PM_PowerProfile_Data.powerProfileSize[_PowerProfileID-1];
 1047                             		.loc 1 937 0
 1048 00c3 C1 73 70                		mov.B	112[r7], [r3]
 1049                             	.LVL163:
 1050                             		.balign 2,3,2
 1051                             	.L83:
 939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1052                             		.loc 1 939 0
 1053 00c6 3F 7D 07                		rtsd	#28, r7-r13
 1054                             	.LFE10:
 1056 00c9 03                      		.section	.text.PM_PowerProfile_TotalProfileDuration,"ax",@progbits
 1057                             		.global	_PM_PowerProfile_TotalProfileDuration
 1059                             	_PM_PowerProfile_TotalProfileDuration:
 1060                             	.LFB15:
1103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1061                             		.loc 1 1103 0
 1062                             	.LVL164:
 1063 0000 6E 7D                   		pushm	r7-r13
 1064                             	.LCFI9:
 1065 0002 EF 2A                   		mov.L	r2, r10
1104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_PowerProfileSizeType energyPhasesCount = (PM_PowerProfile_PowerProfileSizeT
 1066                             		.loc 1 1104 0
 1067 0004 5B 11                   		movu.B	r1, r1
 1068 0006 70 17 FF FF FF FF       		add	#_PM_PowerProfile_Data-1, r1, r7
 1069 000c 60 11                   		sub	#1, r1
 1070                             	.LVL165:
 1071 000e 59 7E 70                		movu.B	112[r7], r14
 1072                             	.LVL166:
1107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *energyPhaseDurationPtr = 0;
 1073                             		.loc 1 1107 0
 1074 0011 3D 20 00                		mov.W	#0, [r2]
1109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( energyPhasesCount <= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
 1075                             		.loc 1 1109 0
 1076 0014 FD 74 9E 0A             		divu	#10, r14
 1077                             	.LVL167:
 1078 0018 61 AE                   		cmp	#10, r14
 1079 001a 24 2C                   		bgtu	.L99
1102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_TotalProfileDuration(PM_PowerProfile_ProfileIDType powerProfileID, PM_PowerPro
 1080                             		.loc 1 1102 0
 1081 001c 75 11 64                		mul	#0x64, r1
 1082                             	.LVL168:
 1083 001f 70 1B 00 00 00 00       		add	#_PM_PowerProfile_Data, r1, r11
 1084 0025 66 07                   		mov.L	#0, r7
 1085                             	.LVL169:
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < energyPhasesCount; i++ )
 1086                             		.loc 1 1111 0
 1087 0027 EF EC                   		mov.L	r14, r12
 1088 0029 2E 17                   		bra	.L101
 1089                             	.LVL170:
 1090                             	.L102:
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       *energyPhaseDurationPtr += EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-1][
 1091                             		.loc 1 1113 0 discriminator 2
 1092 002b DC AD                   		mov.W	[r10], r13
1102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_TotalProfileDuration(PM_PowerProfile_ProfileIDType powerProfileID, PM_PowerPro
 1093                             		.loc 1 1102 0 discriminator 2
 1094 002d EF 7E                   		mov.L	r7, r14
 1095 002f 63 AE                   		mul	#10, r14
 1096 0031 4B BE                   		add	r11, r14
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       *energyPhaseDurationPtr += EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-1][
 1097                             		.loc 1 1113 0 discriminator 2
 1098 0033 DD E1 06                		mov.W	12[r14], r1
 1099 0036 05 00 00 00             		bsr	_Endian16_Swap
 1100                             	.LVL171:
 1101 003a 4B D1                   		add	r13, r1
 1102 003c D3 A1                   		mov.W	r1, [r10]
 1103 003e 62 17                   		add	#1, r7
 1104                             		.balign 2,3,1
 1105                             	.L101:
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < energyPhasesCount; i++ )
 1106                             		.loc 1 1111 0 discriminator 1
 1107 0040 5B 7D                   		movu.B	r7, r13
 1108 0042 47 DC                   		cmp	r13, r12
 1109 0044 24 E7                   		bgtu	.L102
 1110                             		.balign 2,3,2
 1111                             	.L99:
1116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1112                             		.loc 1 1116 0
 1113 0046 3F 7D 07                		rtsd	#28, r7-r13
 1114                             	.LFE15:
 1116 0049 03                      		.section	.text.PM_PowerProfile_TotalProfileEnergy,"ax",@progbits
 1117                             		.global	_PM_PowerProfile_TotalProfileEnergy
 1119                             	_PM_PowerProfile_TotalProfileEnergy:
 1120                             	.LFB16:
1131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1121                             		.loc 1 1131 0
 1122                             	.LVL172:
 1123 0000 6E 7D                   		pushm	r7-r13
 1124                             	.LCFI10:
 1125 0002 EF 2A                   		mov.L	r2, r10
1132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_PowerProfileSizeType energyPhasesCount = (PM_PowerProfile_PowerProfileSizeT
 1126                             		.loc 1 1132 0
 1127 0004 5B 11                   		movu.B	r1, r1
 1128 0006 70 17 FF FF FF FF       		add	#_PM_PowerProfile_Data-1, r1, r7
 1129 000c 60 11                   		sub	#1, r1
 1130                             	.LVL173:
 1131 000e 59 7E 70                		movu.B	112[r7], r14
 1132                             	.LVL174:
1135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *energyPhaseEnergyTotalPtr = 0;
 1133                             		.loc 1 1135 0
 1134 0011 3D 20 00                		mov.W	#0, [r2]
1137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( energyPhasesCount <= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
 1135                             		.loc 1 1137 0
 1136 0014 FD 74 9E 0A             		divu	#10, r14
 1137                             	.LVL175:
 1138 0018 61 AE                   		cmp	#10, r14
 1139 001a 24 2C                   		bgtu	.L105
1130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_TotalProfileEnergy(PM_PowerProfile_ProfileIDType powerProfileID, PM_PowerProfi
 1140                             		.loc 1 1130 0
 1141 001c 75 11 64                		mul	#0x64, r1
 1142                             	.LVL176:
 1143 001f 70 1B 00 00 00 00       		add	#_PM_PowerProfile_Data, r1, r11
 1144 0025 66 07                   		mov.L	#0, r7
 1145                             	.LVL177:
1139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < energyPhasesCount; ++i )
 1146                             		.loc 1 1139 0
 1147 0027 EF EC                   		mov.L	r14, r12
 1148 0029 2E 17                   		bra	.L107
 1149                             	.LVL178:
 1150                             	.L108:
1141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       *energyPhaseEnergyTotalPtr += EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-
 1151                             		.loc 1 1141 0 discriminator 2
 1152 002b DC AD                   		mov.W	[r10], r13
1130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_TotalProfileEnergy(PM_PowerProfile_ProfileIDType powerProfileID, PM_PowerProfi
 1153                             		.loc 1 1130 0 discriminator 2
 1154 002d EF 7E                   		mov.L	r7, r14
 1155 002f 63 AE                   		mul	#10, r14
 1156 0031 4B BE                   		add	r11, r14
1141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       *energyPhaseEnergyTotalPtr += EndianU16_LToN(PM_PowerProfile_Data.energyPhase[powerProfileID-
 1157                             		.loc 1 1141 0 discriminator 2
 1158 0033 DD E1 08                		mov.W	16[r14], r1
 1159 0036 05 00 00 00             		bsr	_Endian16_Swap
 1160                             	.LVL179:
 1161 003a 4B D1                   		add	r13, r1
 1162 003c D3 A1                   		mov.W	r1, [r10]
 1163 003e 62 17                   		add	#1, r7
 1164                             		.balign 2,3,1
 1165                             	.L107:
1139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < energyPhasesCount; ++i )
 1166                             		.loc 1 1139 0 discriminator 1
 1167 0040 5B 7D                   		movu.B	r7, r13
 1168 0042 47 DC                   		cmp	r13, r12
 1169 0044 24 E7                   		bgtu	.L108
 1170                             		.balign 2,3,2
 1171                             	.L105:
1144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1172                             		.loc 1 1144 0
 1173 0046 3F 7D 07                		rtsd	#28, r7-r13
 1174                             	.LFE16:
 1176 0049 03                      		.section	.text.PM_PowerProfile_GetModValue,"ax",@progbits
 1177                             		.global	_PM_PowerProfile_GetModValue
 1179                             	_PM_PowerProfile_GetModValue:
 1180                             	.LFB17:
1154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1181                             		.loc 1 1154 0
 1182                             	.LVL180:
 1183 0000 6E 6D                   		pushm	r6-r13
 1184                             	.LCFI11:
 1185 0002 71 00 C8                		add	#-56, r0
 1186                             	.LCFI12:
 1187 0005 DF 2A                   		mov.W	r2, r10
 1188 0007 DF 37                   		mov.W	r3, r7
 1189 0009 EF 4C                   		mov.L	r4, r12
1155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Loader_Struct loader = { NULL, 0 };
 1190                             		.loc 1 1155 0
 1191 000b 3E 02 00                		mov.L	#0, 8[r0]
 1192 000e 3D 06 00                		mov.W	#0, 12[r0]
 1193                             	.LVL181:
1159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType modValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
 1194                             		.loc 1 1159 0
 1195 0011 3D 80 00                		mov.W	#0, 32[r0]
 1196 0014 F9 04 22 00             		mov.B	#0, 34[r0]
1160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType baseValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
 1197                             		.loc 1 1160 0
 1198 0018 3D 0E 00                		mov.W	#0, 28[r0]
 1199 001b 3C 8E 00                		mov.B	#0, 30[r0]
1161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType alphaValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
 1200                             		.loc 1 1161 0
 1201 001e 3D 0C 00                		mov.W	#0, 24[r0]
 1202 0021 3C 8A 00                		mov.B	#0, 26[r0]
1162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType currentValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
 1203                             		.loc 1 1162 0
 1204 0024 3D 0A 00                		mov.W	#0, 20[r0]
 1205 0027 3C 86 00                		mov.B	#0, 22[r0]
1163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_ValueType finalValue = LIB_FIXED_VALUESTRUCT_INIT(0, 0);
 1206                             		.loc 1 1163 0
 1207 002a 3D 08 00                		mov.W	#0, 16[r0]
 1208 002d 3C 82 00                		mov.B	#0, 18[r0]
 1209                             	.LVL182:
1168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *modResultPtr = LIB_Fixed_Const_ZERO;
 1210                             		.loc 1 1168 0
 1211 0030 FB B2 00 00 00 00       		mov.L	#_LIB_Fixed_Const_ZERO, r11
 1212 0036 E0 B4                   		mov.L	[r11], [r4]
1170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( 0xFFFF == index )
 1213                             		.loc 1 1170 0
 1214 0038 5F 2B                   		movu.W	r2, r11
 1215 003a 77 0B FF FF 00          		cmp	#0xffff, r11
 1216 003f 21 11                   		bne	.L112
1173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     LIB_Fixed_FromInt(modBase, 0, modResultPtr);
 1217                             		.loc 1 1173 0
 1218 0041 DF 31                   		mov.W	r3, r1
 1219                             	.LVL183:
 1220 0043 66 02                   		mov	#0, r2
 1221                             	.LVL184:
 1222 0045 EF 43                   		mov.L	r4, r3
 1223                             	.LVL185:
 1224 0047 05 00 00 00             		bsr	_LIB_Fixed_FromInt
 1225                             	.LVL186:
1166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_OK;
 1226                             		.loc 1 1166 0
 1227 004b 66 07                   		mov	#0, r7
 1228                             	.LVL187:
 1229 004d 38 11 02                		bra	.L113
 1230                             	.LVL188:
 1231                             	.L112:
 1232 0050 CF 19                   		mov.B	r1, r9
1175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   else if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_APP_MODIFIERS,  index, &loader) )
 1233                             		.loc 1 1175 0
 1234 0052 75 42 34                		mov	#52, r2
 1235                             	.LVL189:
 1236 0055 DF A3                   		mov.W	r10, r3
 1237                             	.LVL190:
 1238 0057 71 04 08                		add	#8, r0, r4
 1239                             	.LVL191:
 1240 005a 05 00 00 00             		bsr	_MSettingBasicLoader
 1241                             	.LVL192:
 1242 005e 5B 12                   		movu.B	r1, r2
 1243 0060 61 02                   		cmp	#0, r2
 1244 0062 3B F8 01                		bne	.L137
1177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     rawPtr = loader.Data;
 1245                             		.loc 1 1177 0
 1246 0065 ED 0B 02                		mov.L	8[r0], r11
 1247                             	.LVL193:
1180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     LIB_Fixed_FromInt(modBase, 0, &baseValue);
 1248                             		.loc 1 1180 0
 1249 0068 DF 71                   		mov.W	r7, r1
 1250 006a 71 03 1C                		add	#28, r0, r3
 1251 006d 05 00 00 00             		bsr	_LIB_Fixed_FromInt
 1252                             	.LVL194:
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     alphaIndex = ((const PM_PowerProfile_ModTab_Level1HeaderType *)rawPtr)->alfa0VarPos;
 1253                             		.loc 1 1181 0
 1254 0071 CC B1                   		mov.B	[r11], r1
 1255                             	.LVL195:
1182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( (alphaIndex & 0x3F) < 0x3F )  /* 6 bits long */
 1256                             		.loc 1 1182 0
 1257 0073 EF 17                   		mov.L	r1, r7
 1258                             	.LVL196:
 1259 0075 75 27 3F                		and #63, r7
 1260 0078 75 57 3F                		cmp	#63, r7
 1261 007b 20 1F                   		beq	.L114
1184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       PM_PowerProfile_Data.alphaValueGet(alphaIndex, &alphaValue);
 1262                             		.loc 1 1184 0
 1263 007d FB 72 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r7
 1264 0083 A8 7F                   		mov.L	4[r7], r7
 1265 0085 71 02 18                		add	#24, r0, r2
 1266 0088 7F 17                   		jsr	r7
 1267                             	.LVL197:
1185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       LIB_Fixed_Mul(baseValue, alphaValue, &currentValue);
 1268                             		.loc 1 1185 0
 1269 008a A9 89                   		mov.L	28[r0], r1
 1270 008c A9 82                   		mov.L	24[r0], r2
 1271 008e 71 03 14                		add	#20, r0, r3
 1272 0091 05 00 00 00             		bsr	_LIB_Fixed_Mul
 1273                             	.LVL198:
1186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       baseValue = currentValue;
 1274                             		.loc 1 1186 0
 1275 0095 E5 00 05 07             		mov.L	20[r0], 28[r0]
 1276 0099 03                      		.balign 2,3,3
 1277                             	.L114:
1191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     count = ((loader.DataLenght - (sizeof(PM_PowerProfile_ModTab_Level1HeaderType) / sizeof(uint16_
 1278                             		.loc 1 1191 0
 1279 009a B9 86                   		movu.W	12[r0], r6
 1280 009c 60 16                   		sub	#1, r6
 1281 009e FD 81 64                		shlr	#1, r6, r4
 1282 00a1 EF 46                   		mov.L	r4, r6
 1283                             	.LVL199:
1194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     modLogic = ((const PM_PowerProfile_ModTab_Level1HeaderType *)rawPtr)->ML;
 1284                             		.loc 1 1194 0
 1285 00a3 CD BD 01                		mov.B	1[r11], r13
 1286 00a6 64 7D                   		and #7, r13
 1287                             	.LVL200:
1195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     switch ( (PM_PowerProfile_ModTab_ModLogicType)modLogic )
 1288                             		.loc 1 1195 0
 1289 00a8 5B D7                   		movu.B	r13, r7
 1290 00aa 61 17                   		cmp	#1, r7
 1291 00ac 20 16                   		beq	.L117
 1292 00ae 61 07                   		cmp	#0, r7
 1293 00b0 17                      		beq	.L116
 1294 00b1 61 27                   		cmp	#2, r7
 1295 00b3 21 23                   		bne	.L151
 1296 00b5 2E 14                   		bra	.L118
 1297                             	.L116:
1199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       finalValue = LIB_Fixed_Const_MIN;  /* Start from the very minimum */
 1298                             		.loc 1 1199 0
 1299 00b7 FB A2 00 00 00 00       		mov.L	#_LIB_Fixed_Const_MIN, r10
 1300                             	.LVL201:
 1301 00bd E4 A0 04                		mov.L	[r10], 16[r0]
1200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
 1302                             		.loc 1 1200 0
 1303 00c0 2E 1C                   		bra	.L115
 1304                             	.LVL202:
 1305                             	.L117:
1204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       finalValue = LIB_Fixed_Const_MAX;  /* Start from the very maximum */
 1306                             		.loc 1 1204 0
 1307 00c2 FB 72 00 00 00 00       		mov.L	#_LIB_Fixed_Const_MAX, r7
 1308 00c8 08                      		bra	.L154
 1309                             	.L118:
1209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       finalValue = LIB_Fixed_Const_ZERO; /* Accumulator is zero */
 1310                             		.loc 1 1209 0
 1311 00c9 FB 72 00 00 00 00       		mov.L	#_LIB_Fixed_Const_ZERO, r7
 1312 00cf 03                      		.balign 2,3,1
 1313                             	.L154:
 1314 00d0 E4 70 04                		mov.L	[r7], 16[r0]
1166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_OK;
 1315                             		.loc 1 1166 0
 1316 00d3 66 07                   		mov	#0, r7
1210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
 1317                             		.loc 1 1210 0
 1318 00d5 0F                      		bra	.L115
 1319                             	.L151:
1216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       errorIO = IO_E_FAIL;
 1320                             		.loc 1 1216 0
 1321 00d6 75 47 1A                		mov	#26, r7
1215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       count = 0;
 1322                             		.loc 1 1215 0
 1323 00d9 66 06                   		mov	#0, r6
 1324                             	.LVL203:
 1325 00db 03                      		.balign 2,3,1
 1326                             	.L115:
1222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     rawPtr += sizeof(PM_PowerProfile_ModTab_Level1HeaderType);
 1327                             		.loc 1 1222 0
 1328 00dc 62 2B                   		add	#2, r11
 1329                             	.LVL204:
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < count; ++i )
 1330                             		.loc 1 1223 0
 1331 00de 66 0A                   		mov	#0, r10
 1332 00e0 5B 6E                   		movu.B	r6, r14
 1333 00e2 E7 0E 0A                		mov.L	r14, 40[r0]
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         i = (count - 1);  /* break */
 1334                             		.loc 1 1270 0
 1335 00e5 EF 6E                   		mov.L	r6, r14
 1336 00e7 60 1E                   		sub	#1, r14
 1337 00e9 C7 0E 2F                		mov.B	r14, 47[r0]
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < count; ++i )
 1338                             		.loc 1 1223 0
 1339 00ec 38 58 01                		bra	.L119
 1340                             	.LVL205:
 1341                             	.L135:
1226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       alphaValue = LIB_Fixed_Const_ONE;
 1342                             		.loc 1 1226 0
 1343 00ef FB E2 00 00 00 00       		mov.L	#_LIB_Fixed_Const_ONE, r14
 1344 00f5 E4 E0 06                		mov.L	[r14], 24[r0]
1227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       alphaIndex = ((const PM_PowerProfile_ModTab_Level1EntryType *)rawPtr)->alfaVarValPos;
 1345                             		.loc 1 1227 0
 1346 00f8 CD B1 01                		mov.B	1[r11], r1
 1347 00fb 75 21 3F                		and #63, r1
 1348                             	.LVL206:
1228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       if ( (alphaIndex & 0x3F) < 0x3F )  /* 6 bits long */
 1349                             		.loc 1 1228 0
 1350 00fe 75 51 3F                		cmp	#63, r1
 1351 0101 20 11                   		beq	.L120
1230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         PM_PowerProfile_Data.alphaValueGet(alphaIndex , &alphaValue);
 1352                             		.loc 1 1230 0
 1353 0103 FB E2 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r14
 1354 0109 ED EE 01                		mov.L	4[r14], r14
 1355 010c 71 02 18                		add	#24, r0, r2
 1356 010f 7F 1E                   		jsr	r14
 1357                             	.LVL207:
 1358 0111 03                      		.balign 2,3,5
 1359                             	.L120:
1234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       modValue = LIB_Fixed_Const_ONE;
 1360                             		.loc 1 1234 0
 1361 0112 FB E2 00 00 00 00       		mov.L	#_LIB_Fixed_Const_ONE, r14
 1362 0118 E4 E0 08                		mov.L	[r14], 32[r0]
1235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       modIndex = ((const PM_PowerProfile_ModTab_Level1EntryType *)rawPtr)->TableIndex;
 1363                             		.loc 1 1235 0
 1364 011b DD B3 01                		mov.W	2[r11], r3
 1365                             	.LVL208:
1236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       if ( modIndex < 0xFFFF )
 1366                             		.loc 1 1236 0
 1367 011e 5F 3E                   		movu.W	r3, r14
 1368 0120 77 0E FF FF 00          		cmp	#0xffff, r14
 1369 0125 3A D1 00                		beq	.L121
 1370                             	.LVL209:
 1371                             	.LBB38:
 1372                             	.LBB39:
1548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** IO_ErrorType PM_PowerProfile_ModTab_GetValue
1551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
1553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModIndex modIndex,
1554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModifierValueType *modValuePtr
1555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
1557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Loader_Struct loader = { NULL, 0 };
 1373                             		.loc 1 1557 0
 1374 0128 3E 00 00                		mov.L	#0, [r0]
 1375 012b 3D 02 00                		mov.W	#0, 4[r0]
1558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ModifierValueType value = 0;
 1376                             		.loc 1 1558 0
 1377 012e 3D 82 00                		mov.W	#0, 36[r0]
 1378                             	.LVL210:
1559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType errorIO = IO_E_FAIL;
1560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   const PM_PowerProfile_ModTab_Level2HeaderType *tableHeaderPtr = NULL;
1562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_APP_MODIFIERS, modIndex, &loader) )
 1379                             		.loc 1 1563 0
 1380 0131 CF 91                   		mov.B	r9, r1
 1381 0133 75 42 34                		mov	#52, r2
 1382 0136 EF 04                   		mov.L	r0, r4
 1383 0138 05 00 00 00             		bsr	_MSettingBasicLoader
 1384                             	.LVL211:
 1385 013c 5B 14                   		movu.B	r1, r4
 1386 013e 61 04                   		cmp	#0, r4
 1387 0140 3B A6 00                		bne	.L136
1564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     tableHeaderPtr = (const PM_PowerProfile_ModTab_Level2HeaderType *)loader.Data;
 1388                             		.loc 1 1565 0
 1389 0143 EC 0E                   		mov.L	[r0], r14
 1390                             	.LVL212:
1566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     PM_PowerProfile_Data.paramValueGet(tableHeaderPtr->ModVarValue1, &value);
 1391                             		.loc 1 1566 0
 1392 0145 FB 82 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r8
 1393 014b CD E1 03                		mov.B	3[r14], r1
 1394 014e EC 83                   		mov.L	[r8], r3
 1395 0150 75 21 3F                		and #63, r1
 1396 0153 75 42 24                		mov.L	#36, r2
 1397 0156 4B 02                   		add	r0, r2
 1398 0158 A3 04                   		mov.L	r4, 48[r0]
 1399 015a E7 0E 0D                		mov.L	r14, 52[r0]
 1400 015d 7F 13                   		jsr	r3
 1401                             	.LVL213:
1567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     switch ( (PM_PowerProfile_ModTab_TableType)tableHeaderPtr->DT )
 1402                             		.loc 1 1568 0
 1403 015f ED 0E 0D                		mov.L	52[r0], r14
 1404 0162 59 E5 03                		movu.B	3[r14], r5
 1405 0165 FD 86 56                		shlr	#6, r5, r6
 1406 0168 AB 04                   		mov.L	48[r0], r4
 1407 016a 61 16                   		cmp	#1, r6
 1408 016c 20 19                   		beq	.L125
 1409 016e 61 06                   		cmp	#0, r6
 1410 0170 17                      		beq	.L124
 1411 0171 61 26                   		cmp	#2, r6
 1412 0173 21 73                   		bne	.L136
 1413 0175 2E 64                   		bra	.L126
 1414                             	.L124:
1569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_TableType_MONODIMENSIONAL:
1571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Monodimensional table, query 2nd level data */
1573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       errorIO = PM_PowerProfile_ModTab_QueryTable(tableHeaderPtr, &value, modValuePtr, TRUE);
 1415                             		.loc 1 1573 0
 1416 0177 EF E1                   		mov.L	r14, r1
 1417 0179 75 42 24                		mov.L	#36, r2
 1418 017c 4B 02                   		add	r0, r2
 1419 017e 71 03 20                		add	#32, r0, r3
 1420 0181 66 14                   		mov.L	#1, r4
 1421 0183 2E 51                   		bra	.L155
 1422                             	.L125:
1574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_TableType_BIDIMENSIONAL:
1577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Bidimensional table, query 1st level then 2nd level data */
1579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       errorIO = PM_PowerProfile_ModTab_QueryTable(tableHeaderPtr, &value, modValuePtr, FALSE);
 1423                             		.loc 1 1579 0
 1424 0185 EF E1                   		mov.L	r14, r1
 1425 0187 75 42 24                		mov.L	#36, r2
 1426 018a 4B 02                   		add	r0, r2
 1427 018c 75 43 20                		mov.L	#32, r3
 1428 018f 4B 03                   		add	r0, r3
 1429 0191 05 00 00 00             		bsr	_PM_PowerProfile_ModTab_QueryTable
 1430                             	.LVL214:
1580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       if ( IO_E_OK == errorIO )
 1431                             		.loc 1 1580 0
 1432 0195 76 21 FF 00             		and #0xff, r1
 1433                             	.LVL215:
 1434 0199 21 4D                   		bne	.L136
 1435                             	.LVL216:
1581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         modIndex = (uint16_t)*modValuePtr;
1583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_APP_MODIFIERS, modIndex, &loader) )
 1436                             		.loc 1 1583 0
 1437 019b CF 91                   		mov.B	r9, r1
 1438 019d 75 42 34                		mov	#52, r2
 1439 01a0 9C 03                   		mov.W	32[r0], r3
 1440 01a2 EF 04                   		mov.L	r0, r4
 1441 01a4 05 00 00 00             		bsr	_MSettingBasicLoader
 1442                             	.LVL217:
 1443 01a8 76 21 FF 00             		and #0xff, r1
 1444 01ac 21 3E                   		bne	.L129
1584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           tableHeaderPtr = (const PM_PowerProfile_ModTab_Level2HeaderType *)loader.Data;
 1445                             		.loc 1 1585 0
 1446 01ae EC 0E                   		mov.L	[r0], r14
 1447                             	.LVL218:
1586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           PM_PowerProfile_Data.paramValueGet(tableHeaderPtr->ModVarValue1 , &value);
 1448                             		.loc 1 1586 0
 1449 01b0 CD E1 03                		mov.B	3[r14], r1
 1450 01b3 EC 84                   		mov.L	[r8], r4
 1451 01b5 75 21 3F                		and #63, r1
 1452 01b8 75 42 24                		mov.L	#36, r2
 1453 01bb 4B 02                   		add	r0, r2
 1454 01bd E7 0E 0D                		mov.L	r14, 52[r0]
 1455 01c0 7F 14                   		jsr	r4
 1456                             	.LVL219:
1587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = PM_PowerProfile_ModTab_QueryTable(tableHeaderPtr, &value, modValuePtr, TRUE);
 1457                             		.loc 1 1587 0
 1458 01c2 ED 0E 0D                		mov.L	52[r0], r14
 1459 01c5 EF E1                   		mov.L	r14, r1
 1460 01c7 75 42 24                		mov.L	#36, r2
 1461 01ca 4B 02                   		add	r0, r2
 1462 01cc 75 43 20                		mov.L	#32, r3
 1463 01cf 4B 03                   		add	r0, r3
 1464 01d1 EF 64                   		mov.L	r6, r4
 1465 01d3 03                      		.balign 2,3,3
 1466                             	.L155:
 1467 01d4 05 00 00 00             		bsr	_PM_PowerProfile_ModTab_QueryTable
 1468                             	.LVL220:
 1469 01d8 09                      		bra	.L127
 1470                             	.LVL221:
 1471                             	.L126:
1588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     case PM_PowerProfile_ModTab_TableType_IMMEDIATE:
1593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Immediate value */
1595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       *modValuePtr = (PM_PowerProfile_ModifierValueType)tableHeaderPtr->ImmediateVal;
 1472                             		.loc 1 1595 0
 1473 01d9 59 EE 02                		movu.B	2[r14], r14
 1474 01dc D7 0E 10                		mov.W	r14, 32[r0]
 1475                             	.LVL222:
 1476 01df 2E 0B                   		bra	.L129
 1477                             	.LVL223:
 1478                             	.L127:
1596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       errorIO = IO_E_OK;
1597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     default:
1600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Unsupported data type */
1602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       break;
1603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( IO_E_OK != errorIO )
 1479                             		.loc 1 1607 0
 1480 01e1 76 21 FF 00             		and #0xff, r1
 1481                             	.LVL224:
 1482 01e5 15                      		beq	.L129
 1483                             		.balign 2,3,4
 1484                             	.L136:
1608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *modValuePtr = 0;
 1485                             		.loc 1 1609 0
 1486 01e6 3D 80 00                		mov.W	#0, 32[r0]
 1487 01e9 03                      		.balign 2,3,5
 1488                             	.L129:
 1489                             	.LBE39:
 1490                             	.LBE38:
1239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         LIB_Fixed_FromInt(modValue.fractional, 0, &modValue);
 1491                             		.loc 1 1239 0
 1492 01ea 9C 01                   		mov.W	32[r0], r1
 1493 01ec 66 02                   		mov	#0, r2
 1494 01ee 71 03 20                		add	#32, r0, r3
 1495 01f1 05 00 00 00             		bsr	_LIB_Fixed_FromInt
 1496                             	.LVL225:
 1497 01f5 03                      		.balign 2,3,1
 1498                             	.L121:
1241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       LIB_Fixed_Mul(modValue, alphaValue, &currentValue);
 1499                             		.loc 1 1241 0
 1500 01f6 AA 01                   		mov.L	32[r0], r1
 1501 01f8 A9 82                   		mov.L	24[r0], r2
 1502 01fa 71 03 14                		add	#20, r0, r3
 1503 01fd 05 00 00 00             		bsr	_LIB_Fixed_Mul
 1504                             	.LVL226:
1244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       switch ( (PM_PowerProfile_ModTab_ModLogicType)modLogic )
 1505                             		.loc 1 1244 0
 1506 0201 5B DE                   		movu.B	r13, r14
 1507 0203 61 1E                   		cmp	#1, r14
 1508 0205 20 19                   		beq	.L132
 1509 0207 61 0E                   		cmp	#0, r14
 1510 0209 17                      		beq	.L131
 1511 020a 61 2E                   		cmp	#2, r14
 1512 020c 21 30                   		bne	.L152
 1513 020e 2E 22                   		bra	.L133
 1514                             	.L131:
1248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( LIB_Fixed_Cmp(currentValue, finalValue) > 0 )
 1515                             		.loc 1 1248 0
 1516 0210 A9 09                   		mov.L	20[r0], r1
 1517 0212 A9 02                   		mov.L	16[r0], r2
 1518 0214 05 00 00 00             		bsr	_LIB_Fixed_Cmp
 1519                             	.LVL227:
 1520 0218 61 01                   		cmp	#0, r1
 1521 021a 2B 26                   		ble	.L134
 1522 021c 2E 0E                   		bra	.L156
 1523                             	.L132:
1256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( LIB_Fixed_Cmp(currentValue, finalValue) < 0 )
 1524                             		.loc 1 1256 0
 1525 021e A9 09                   		mov.L	20[r0], r1
 1526 0220 A9 02                   		mov.L	16[r0], r2
 1527 0222 05 00 00 00             		bsr	_LIB_Fixed_Cmp
 1528                             	.LVL228:
 1529 0226 61 01                   		cmp	#0, r1
 1530 0228 28 18                   		bge	.L134
 1531                             		.balign 2,3,1
 1532                             	.L156:
1258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           finalValue = currentValue;
 1533                             		.loc 1 1258 0
 1534 022a E5 00 05 04             		mov.L	20[r0], 16[r0]
 1535 022e 2E 12                   		bra	.L134
 1536                             	.L133:
1264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         LIB_Fixed_Add(finalValue, currentValue, &finalValue);
 1537                             		.loc 1 1264 0
 1538 0230 A9 01                   		mov.L	16[r0], r1
 1539 0232 A9 0A                   		mov.L	20[r0], r2
 1540 0234 71 03 10                		add	#16, r0, r3
 1541 0237 05 00 00 00             		bsr	_LIB_Fixed_Add
 1542                             	.LVL229:
1265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         break;
 1543                             		.loc 1 1265 0
 1544 023b 0D                      		bra	.L134
 1545                             	.L152:
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         i = (count - 1);  /* break */
 1546                             		.loc 1 1270 0
 1547 023c CD 0A 2F                		mov.B	47[r0], r10
 1548                             	.LVL230:
 1549 023f 03                      		.balign 2,3,1
 1550                             	.L134:
1276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       rawPtr += sizeof(PM_PowerProfile_ModTab_Level1EntryType);
 1551                             		.loc 1 1276 0
 1552 0240 62 4B                   		add	#4, r11
 1553                             	.LVL231:
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < count; ++i )
 1554                             		.loc 1 1223 0
 1555 0242 62 1A                   		add	#1, r10
 1556                             	.LVL232:
 1557                             		.balign 2,3,1
 1558                             	.L119:
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     for ( i = 0; i < count; ++i )
 1559                             		.loc 1 1223 0 is_stmt 0 discriminator 1
 1560 0244 5B AE                   		movu.B	r10, r14
 1561 0246 AA 84                   		mov.L	40[r0], r4
 1562 0248 47 4E                   		cmp	r4, r14
 1563 024a 22 05 38 A3 FE          		bltu	.L135
1280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     LIB_Fixed_Add(baseValue, finalValue, modResultPtr);
 1564                             		.loc 1 1280 0 is_stmt 1
 1565 024f A9 89                   		mov.L	28[r0], r1
 1566 0251 A9 02                   		mov.L	16[r0], r2
 1567 0253 EF C3                   		mov.L	r12, r3
 1568 0255 05 00 00 00             		bsr	_LIB_Fixed_Add
 1569                             	.LVL233:
 1570 0259 0D                      		bra	.L113
 1571                             	.LVL234:
 1572                             	.L137:
1285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     errorIO = IO_E_FAIL;
 1573                             		.loc 1 1285 0
 1574 025a 75 47 1A                		mov	#26, r7
 1575                             	.LVL235:
 1576 025d 03                      		.balign 2,3,1
 1577                             	.L113:
1288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1578                             		.loc 1 1288 0
 1579 025e EF 71                   		mov.L	r7, r1
 1580 0260 75 21 1F                		and #31, r1
 1581 0263 3F 6D 16                		rtsd	#88, r6-r13
 1582                             	.LFE17:
 1584                             		.section	.text.PM_PowerProfile_CalcDurationPartial,"ax",@progbits
 1585                             		.global	_PM_PowerProfile_CalcDurationPartial
 1587                             	_PM_PowerProfile_CalcDurationPartial:
 1588                             	.LFB18:
1296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1589                             		.loc 1 1296 0
 1590                             	.LVL236:
 1591 0000 7E A7                   		push.l	r7
 1592                             	.LCFI13:
 1593 0002 EF 27                   		mov.L	r2, r7
1297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   LIB_Fixed_FractionalType integral = LIB_Fixed_Round(durationValue);
 1594                             		.loc 1 1297 0
 1595 0004 05 00 00 00             		bsr	_LIB_Fixed_Round
 1596                             	.LVL237:
1299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *resultPtr = ((integral >= 0) ? (PM_PowerProfile_DurationType)integral : 0);
 1597                             		.loc 1 1299 0
 1598 0008 FD 74 41 00             		max	#0, r1
 1599                             	.LVL238:
 1600 000c D3 71                   		mov.W	r1, [r7]
1302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1601                             		.loc 1 1302 0
 1602 000e 66 01                   		mov.L	#0, r1
 1603 0010 3F 77 01                		rtsd	#4, r7-r7
 1604                             	.LFE18:
 1606                             		.section	.text.PM_PowerProfile_CalcDurationTotal,"ax",@progbits
 1607                             		.global	_PM_PowerProfile_CalcDurationTotal
 1609                             	_PM_PowerProfile_CalcDurationTotal:
 1610                             	.LFB19:
1311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1611                             		.loc 1 1311 0
 1612                             	.LVL239:
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *resultPtr = (duration1 + duration2);
 1613                             		.loc 1 1312 0
 1614 0000 4B 12                   		add	r1, r2
 1615                             	.LVL240:
 1616 0002 D3 32                   		mov.W	r2, [r3]
1315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1617                             		.loc 1 1315 0
 1618 0004 66 01                   		mov.L	#0, r1
 1619                             	.LVL241:
 1620 0006 02                      		rts
 1621                             	.LFE19:
 1623                             		.section	.text.PM_PowerProfile_CalcPeakPower,"ax",@progbits
 1624                             		.global	_PM_PowerProfile_CalcPeakPower
 1626                             	_PM_PowerProfile_CalcPeakPower:
 1627                             	.LFB20:
1325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1628                             		.loc 1 1325 0
 1629                             	.LVL242:
 1630 0000 6E 7A                   		pushm	r7-r10
 1631                             	.LCFI14:
 1632 0002 60 40                   		sub	#4, r0
 1633                             	.LCFI15:
 1634 0004 DF 1E                   		mov.W	r1, r14
 1635 0006 EF 4A                   		mov.L	r4, r10
1330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   peakPowerBase = SF_ENERGYPHASEPARAMS_GET_MAXPOWER(sfEnergyPhaseAddPtr);
 1636                             		.loc 1 1330 0
 1637 0008 58 37                   		movu.B	[r3], r7
 1638 000a 6C 87                   		shll	#8, r7
 1639 000c 55 37 01                		or	1[r3].UB, r7
 1640 000f 76 27 FF 1F             		and #0x1fff, r7
1331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   errorIO = PM_PowerProfile_GetModValue(mSetting, peakPowerIndex, (PM_PowerProfile_ModifierValueTyp
 1641                             		.loc 1 1331 0
 1642 0013 CF 21                   		mov.B	r2, r1
 1643                             	.LVL243:
 1644 0015 DF E2                   		mov.W	r14, r2
 1645                             	.LVL244:
 1646 0017 DF 73                   		mov.W	r7, r3
 1647                             	.LVL245:
 1648 0019 EF 04                   		mov.L	r0, r4
 1649                             	.LVL246:
 1650 001b 05 00 00 00             		bsr	_PM_PowerProfile_GetModValue
 1651                             	.LVL247:
1332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( IO_E_OK == errorIO )
 1652                             		.loc 1 1332 0
 1653 001f 76 21 FF 00             		and #0xff, r1
 1654                             	.LVL248:
 1655 0023 1A                      		bne	.L161
1334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *peakPowerPtr = LIB_Fixed_Round(fxPeakPowerTotal);
 1656                             		.loc 1 1334 0
 1657 0024 EC 01                   		mov.L	[r0], r1
 1658 0026 05 00 00 00             		bsr	_LIB_Fixed_Round
 1659                             	.LVL249:
 1660 002a D3 A1                   		mov.W	r1, [r10]
 1661 002c 0C                      		bra	.L162
 1662                             	.L161:
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *peakPowerPtr = peakPowerBase;
 1663                             		.loc 1 1339 0
 1664 002d D3 A7                   		mov.W	r7, [r10]
 1665 002f 03                      		.balign 2,3,1
 1666                             	.L162:
 1667                             	.LVL250:
1344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1668                             		.loc 1 1344 0
 1669 0030 66 01                   		mov.L	#0, r1
 1670 0032 3F 7A 05                		rtsd	#20, r7-r10
 1671                             	.LFE20:
 1673 0035 03                      		.section	.text.PM_PowerProfile_CalcEnergy,"ax",@progbits
 1674                             		.global	_PM_PowerProfile_CalcEnergy
 1676                             	_PM_PowerProfile_CalcEnergy:
 1677                             	.LFB21:
1354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1678                             		.loc 1 1354 0
 1679                             	.LVL251:
1357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyType powerMeanRoff = SF_ENERGYPHASE_GET_MEANPOWER_OFF(energyPhaseParamsPtr)
 1680                             		.loc 1 1357 0
 1681 0000 59 3E 06                		movu.B	6[r3], r14
 1682                             	.LVL252:
 1683 0003 6C 8E                   		shll	#8, r14
 1684                             	.LVL253:
 1685 0005 55 3E 07                		or	7[r3].UB, r14
1358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint32_t accumulator = ((((uint32_t)durationOn * powerMeanRon) + ((uint32_t)durationOff * powerMe
 1686                             		.loc 1 1358 0
 1687 0008 76 2E FF 1F             		and #0x1fff, r14
 1688 000c 5F 22                   		movu.W	r2, r2
 1689 000e 4F 2E                   		mul	r2, r14
1356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyType powerMeanRon = SF_ENERGYPHASE_GET_MEANPOWER_ON(energyPhaseParamsPtr);
 1690                             		.loc 1 1356 0
 1691 0010 B2 35                   		movu.B	8[r3], r5
 1692                             	.LVL254:
 1693 0012 6C 85                   		shll	#8, r5
 1694                             	.LVL255:
 1695 0014 B2 3A                   		movu.B	9[r3], r2
 1696                             	.LVL256:
 1697 0016 FF 53 25                		or	r2, r5, r3
 1698                             	.LVL257:
1358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint32_t accumulator = ((((uint32_t)durationOn * powerMeanRon) + ((uint32_t)durationOff * powerMe
 1699                             		.loc 1 1358 0
 1700 0019 76 23 FF 1F             		and #0x1fff, r3
 1701 001d 5F 11                   		movu.W	r1, r1
 1702 001f 4F 13                   		mul	r1, r3
 1703 0021 4B 3E                   		add	r3, r14
 1704 0023 FD 74 9E 3C             		divu	#60, r14
 1705                             	.LVL258:
1360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( accumulator <= 0xFFFF )
 1706                             		.loc 1 1360 0
 1707 0027 77 0E FF FF 00          		cmp	#0xffff, r14
 1708 002c 24 07                   		bgtu	.L165
1362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *meanEnergyPtr = (PM_PowerProfile_EnergyType)accumulator;
 1709                             		.loc 1 1362 0
 1710 002e D3 4E                   		mov.W	r14, [r4]
 1711                             	.LVL259:
1363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     error = IO_E_OK;
 1712                             		.loc 1 1363 0
 1713 0030 66 01                   		mov	#0, r1
 1714                             	.LVL260:
 1715 0032 08                      		bra	.L166
 1716                             	.LVL261:
 1717                             	.L165:
1367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *meanEnergyPtr = 0;
 1718                             		.loc 1 1367 0
 1719 0033 3D 40 00                		mov.W	#0, [r4]
1355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   IO_ErrorType error = IO_E_FAIL;
 1720                             		.loc 1 1355 0
 1721 0036 75 41 1A                		mov	#26, r1
 1722                             	.LVL262:
 1723 0039 03                      		.balign 2,3,2
 1724                             	.L166:
1370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 1725                             		.loc 1 1370 0
 1726 003a 75 21 1A                		and #26, r1
 1727                             	.LVL263:
 1728 003d 02                      		rts
 1729                             	.LFE21:
 1731                             		.section	.text.PM_PowerProfile_GetPowerProfile,"ax",@progbits
 1732                             		.global	_PM_PowerProfile_GetPowerProfile
 1734                             	_PM_PowerProfile_GetPowerProfile:
 1735                             	.LFB7:
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 1736                             		.loc 1 723 0
 1737                             	.LVL264:
 1738 0000 6E 6D                   		pushm	r6-r13
 1739                             	.LCFI16:
 1740 0002 71 00 CC                		add	#-52, r0
 1741                             	.LCFI17:
 1742 0005 75 47 58                		mov.L	#0x58, r7
 1743 0008 4B 07                   		add	r0, r7
 1744 000a CF 1C                   		mov.B	r1, r12
 1745 000c CF 2A                   		mov.B	r2, r10
 1746 000e CF 4B                   		mov.B	r4, r11
 1747 0010 E4 70 08                		mov.L	[r7], 32[r0]
 1748 0013 E5 70 01 09             		mov.L	4[r7], 36[r0]
 724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   Loader_Struct loader = { NULL, 0 };
 1749                             		.loc 1 724 0
 1750 0017 3E 00 00                		mov.L	#0, [r0]
 1751 001a 3D 02 00                		mov.W	#0, 4[r0]
 1752                             	.LVL265:
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *firstEnergyPhasePtrPtr = NULL;
 1753                             		.loc 1 754 0
 1754 001d AA 07                   		mov.L	32[r0], r7
 1755 001f 3E 70 00                		mov.L	#0, [r7]
 755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *sizePtr = 0;
 1756                             		.loc 1 755 0
 1757 0022 ED 0E 09                		mov.L	36[r0], r14
 1758 0025 F8 E4 00                		mov.B	#0, [r14]
 758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   UsePowerProfile();
 1759                             		.loc 1 758 0
 1760 0028 05 00 00 00             		bsr	_UsePowerProfile
 1761                             	.LVL266:
 761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_POWER_PROFILE, powerProfileIndex, &loader) )
 1762                             		.loc 1 761 0
 1763 002c 5B C3                   		movu.B	r12, r3
 1764 002e CF B1                   		mov.B	r11, r1
 1765 0030 66 52                   		mov	#5, r2
 1766 0032 EF 04                   		mov.L	r0, r4
 1767 0034 05 00 00 00             		bsr	_MSettingBasicLoader
 1768                             	.LVL267:
 1769 0038 71 15 00                		add	#0, r1, r5
 1770 003b 3B 58 01                		bne	.L175
 763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     energyPhaseCount = (loader.DataLenght / (sizeof(SF_PowerProfileDataEnergyPhaseType) / sizeof(ui
 1771                             		.loc 1 763 0
 1772 003e 5D 0D 02                		movu.W	4[r0], r13
 1773 0041 FD 74 9D 05             		divu	#5, r13
 1774                             	.LVL268:
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( energyPhaseCount > 0 )
 1775                             		.loc 1 764 0
 1776 0045 5B D7                   		movu.B	r13, r7
 1777 0047 61 07                   		cmp	#0, r7
 1778 0049 3A 4A 01                		beq	.L175
 766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       energyPhaseParamsPtr = (const SF_PowerProfileDataEnergyPhaseType *)loader.Data;
 1779                             		.loc 1 766 0
 1780 004c EC 07                   		mov.L	[r0], r7
 1781                             	.LVL269:
 767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       energyPhasePtr = &(PM_PowerProfile_Data.energyPhase[powerProfileID - 1][0]);
 1782                             		.loc 1 767 0
 1783 004e 5B AA                   		movu.B	r10, r10
 1784 0050 60 1A                   		sub	#1, r10
 1785                             	.LVL270:
 1786 0052 E7 0A 06                		mov.L	r10, 24[r0]
 1787 0055 EF A6                   		mov.L	r10, r6
 1788 0057 75 16 64                		mul	#0x64, r6
 1789 005a 70 6A 0A 00 00 00       		add	#_PM_PowerProfile_Data+10, r6, r10
 1790                             	.LVL271:
 1791 0060 E7 0A 07                		mov.L	r10, 28[r0]
 1792                             	.LVL272:
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < energyPhaseCount; ++i )
 1793                             		.loc 1 770 0
 1794 0063 CF 58                   		mov.B	r5, r8
 729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseIDType insertedEnergyPhaseCount = 0;
 1795                             		.loc 1 729 0
 1796 0065 CF 1C                   		mov.B	r1, r12
 1797                             	.LVL273:
 838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           i = (energyPhaseCount - 1);  /* break */
 1798                             		.loc 1 838 0
 1799 0067 71 D9 FF                		add	#-1, r13, r9
 1800                             	.LVL274:
 1801                             		.balign 2,3,3
 1802                             	.L173:
 773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( SF_OK == MSettingBasicLoader(mSetting, SF_PTR_ENERGY_PHASE, SF_ENERGYPHASE_GET_PHASE_I
 1803                             		.loc 1 773 0
 1804 006a 58 73                   		movu.B	[r7], r3
 1805 006c CF B1                   		mov.B	r11, r1
 1806 006e 66 82                   		mov	#8, r2
 1807 0070 EF 04                   		mov.L	r0, r4
 1808 0072 05 00 00 00             		bsr	_MSettingBasicLoader
 1809                             	.LVL275:
 1810 0076 76 21 FF 00             		and #0xff, r1
 1811 007a 3B E7 00                		bne	.L169
 775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           if ( (sizeof(SF_EnergyPhaseDataParamsType) / sizeof(uint16_t)) == loader.DataLenght )
 1812                             		.loc 1 775 0
 1813 007d 5D 0E 02                		movu.W	4[r0], r14
 1814 0080 61 AE                   		cmp	#10, r14
 1815 0082 3B DF 00                		bne	.L169
 777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             energyPhaseAddParamsPtr = (const SF_EnergyPhaseDataParamsType *)loader.Data;
 1816                             		.loc 1 777 0
 1817 0085 EC 06                   		mov.L	[r0], r6
 1818                             	.LVL276:
 780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOnIndex = SF_ENERGYPHASEPARAMS_GET_DURATIONMOD_ON(energyPhaseAddParamsPtr);
 1819                             		.loc 1 780 0
 1820 0087 B3 62                   		movu.B	12[r6], r2
 1821 0089 6C 82                   		shll	#8, r2
 1822 008b B3 6C                   		movu.B	13[r6], r4
 781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOnBase = SF_ENERGYPHASE_GET_DURATION_ON(energyPhaseParamsPtr);
 1823                             		.loc 1 781 0
 1824 008d B1 73                   		movu.B	4[r7], r3
 1825                             	.LVL277:
 1826 008f 6C 83                   		shll	#8, r3
 1827                             	.LVL278:
 1828 0091 55 73 05                		or	5[r7].UB, r3
 782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_GetModValue(mSetting, durationOnIndex, (PM_PowerProfile_ModifierValueTy
 1829                             		.loc 1 782 0
 1830 0094 CF B1                   		mov.B	r11, r1
 1831 0096 57 42                   		or	r4, r2
 1832 0098 76 23 FF 07             		and #0x7ff, r3
 1833 009c 71 04 0C                		add	#12, r0, r4
 1834 009f 05 00 00 00             		bsr	_PM_PowerProfile_GetModValue
 1835                             	.LVL279:
 783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_CalcDurationPartial(durationOnValue, &durationOn);
 1836                             		.loc 1 783 0
 1837 00a3 A8 89                   		mov.L	12[r0], r1
 1838 00a5 71 02 16                		add	#22, r0, r2
 1839 00a8 05 00 00 00             		bsr	_PM_PowerProfile_CalcDurationPartial
 1840                             	.LVL280:
 786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOffIndex = SF_ENERGYPHASEPARAMS_GET_DURATIONMOD_OFF(energyPhaseAddParamsPtr);
 1841                             		.loc 1 786 0
 1842 00ac B3 E2                   		movu.B	14[r6], r2
 1843 00ae 6C 82                   		shll	#8, r2
 1844 00b0 B3 EC                   		movu.B	15[r6], r4
 787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             durationOffBase = SF_ENERGYPHASE_GET_DURATION_OFF(energyPhaseParamsPtr);
 1845                             		.loc 1 787 0
 1846 00b2 B0 F3                   		movu.B	2[r7], r3
 1847                             	.LVL281:
 1848 00b4 6C 83                   		shll	#8, r3
 1849                             	.LVL282:
 1850 00b6 55 73 03                		or	3[r7].UB, r3
 788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_GetModValue(mSetting, durationOffIndex, (PM_PowerProfile_ModifierValueT
 1851                             		.loc 1 788 0
 1852 00b9 CF B1                   		mov.B	r11, r1
 1853 00bb 57 42                   		or	r4, r2
 1854 00bd 76 23 FF 07             		and #0x7ff, r3
 1855 00c1 71 04 08                		add	#8, r0, r4
 1856 00c4 05 00 00 00             		bsr	_PM_PowerProfile_GetModValue
 1857                             	.LVL283:
 789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             PM_PowerProfile_CalcDurationPartial(durationOffValue, &durationOff);
 1858                             		.loc 1 789 0
 1859 00c8 A8 81                   		mov.L	8[r0], r1
 1860 00ca 71 02 14                		add	#20, r0, r2
 1861 00cd 05 00 00 00             		bsr	_PM_PowerProfile_CalcDurationPartial
 1862                             	.LVL284:
 1863                             	.LBB40:
 1864                             	.LBB41:
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   *resultPtr = (duration1 + duration2);
 1865                             		.loc 1 1312 0
 1866 00d1 DD 0F 0A                		mov.W	20[r0], r15
 1867 00d4 06 49 0F 0B             		add	22[r0].W, r15
 1868                             	.LVL285:
 1869                             	.LBE41:
 1870                             	.LBE40:
 795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             if ( duration > 0 )
 1871                             		.loc 1 795 0
 1872 00d8 5F F1                   		movu.W	r15, r1
 1873 00da 61 01                   		cmp	#0, r1
 1874 00dc 3A 8A 00                		beq	.L171
 1875                             	.LVL286:
 798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               peakPowerIndex = SF_ENERGYPHASEPARAMS_GET_MAXPOWERMOD(energyPhaseAddParamsPtr);
 1876                             		.loc 1 798 0
 1877 00df B1 E1                   		movu.B	6[r6], r1
 1878 00e1 6C 81                   		shll	#8, r1
 799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               PM_PowerProfile_CalcPeakPower(peakPowerIndex, mSetting, energyPhaseAddParamsPtr, &pea
 1879                             		.loc 1 799 0
 1880 00e3 55 61 07                		or	7[r6].UB, r1
 1881 00e6 CF B2                   		mov.B	r11, r2
 1882 00e8 EF 63                   		mov.L	r6, r3
 1883 00ea 71 04 10                		add	#16, r0, r4
 1884 00ed E7 0F 0A                		mov.L	r15, 40[r0]
 1885 00f0 05 00 00 00             		bsr	_PM_PowerProfile_CalcPeakPower
 1886                             	.LVL287:
 800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               PM_PowerProfile_CalcEnergy(durationOn, durationOff, energyPhaseParamsPtr, &energy);
 1887                             		.loc 1 800 0
 1888 00f4 9A 89                   		mov.W	22[r0], r1
 1889 00f6 9A 82                   		mov.W	20[r0], r2
 1890 00f8 EF 73                   		mov.L	r7, r3
 1891 00fa 71 04 12                		add	#18, r0, r4
 1892 00fd 05 00 00 00             		bsr	_PM_PowerProfile_CalcEnergy
 1893                             	.LVL288:
 803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->energyPhaseID = (insertedEnergyPhaseCount + 1);
 1894                             		.loc 1 803 0
 1895 0101 71 C3 01                		add	#1, r12, r3
 1896 0104 CF 34                   		mov.B	r3, r4
 1897 0106 C3 A3                   		mov.B	r3, [r10]
 804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->macroPhaseID = SF_ENERGYPHASE_GET_MACROPHASE_ID(energyPhaseParamsPtr)
 1898                             		.loc 1 804 0
 1899 0108 B1 F3                   		movu.B	6[r7], r3
 1900 010a 68 53                   		shlr	#5, r3
 1901 010c C7 A3 01                		mov.B	r3, 1[r10]
 805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->expectedDuration = EndianU16_NToL(duration);
 1902                             		.loc 1 805 0
 1903 010f ED 0F 0A                		mov.L	40[r0], r15
 1904 0112 DF F1                   		mov.W	r15, r1
 1905 0114 A2 84                   		mov.L	r4, 40[r0]
 1906 0116 05 00 00 00             		bsr	_Endian16_Swap
 1907                             	.LVL289:
 1908 011a D7 A1 01                		mov.W	r1, 2[r10]
 806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->peakPower = EndianU16_NToL(peakPower);
 1909                             		.loc 1 806 0
 1910 011d 9A 01                   		mov.W	16[r0], r1
 1911 011f 05 00 00 00             		bsr	_Endian16_Swap
 1912                             	.LVL290:
 1913 0123 D7 A1 02                		mov.W	r1, 4[r10]
 807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->energy = EndianU16_NToL(energy);
 1914                             		.loc 1 807 0
 1915 0126 9A 09                   		mov.W	18[r0], r1
 1916 0128 05 00 00 00             		bsr	_Endian16_Swap
 1917                             	.LVL291:
 1918 012c D7 A1 03                		mov.W	r1, 6[r10]
 808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->maxActivationDelay = EndianU16_NToL(SF_ENERGYPHASEPARAMS_GET_MAXDELAY
 1919                             		.loc 1 808 0
 1920 012f B0 E1                   		movu.B	2[r6], r1
 1921 0131 6C 81                   		shll	#8, r1
 1922 0133 55 61 03                		or	3[r6].UB, r1
 1923 0136 76 21 FF 07             		and #0x7ff, r1
 1924 013a 05 00 00 00             		bsr	_Endian16_Swap
 1925                             	.LVL292:
 1926 013e D7 A1 04                		mov.W	r1, 8[r10]
 811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               PM_PowerProfile_EnergyPhaseMap[insertedEnergyPhaseCount] = (i + 1);
 1927                             		.loc 1 811 0
 1928 0141 5B CC                   		movu.B	r12, r12
 1929 0143 71 83 01                		add	#1, r8, r3
 1930 0146 FB E2 00 00 00 00       		mov.L	#_PM_PowerProfile_EnergyPhaseMap, r14
 1931 014c FE 0C E3                		mov.B	r3, [r12,r14]
 1932                             	.LVL293:
 815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               if ( insertedEnergyPhaseCount >= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
 1933                             		.loc 1 815 0
 1934 014f AA 84                   		mov.L	40[r0], r4
 1935 0151 5B 4C                   		movu.B	r4, r12
 1936 0153 61 9C                   		cmp	#9, r12
 1937 0155 25 05                   		bleu	.L172
 817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****                 i = (energyPhaseCount - 1);  /* break */
 1938                             		.loc 1 817 0
 1939 0157 CF 98                   		mov.B	r9, r8
 1940                             	.LVL294:
 1941 0159 03                      		.balign 2,3,1
 1942                             	.L172:
 821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               ++energyPhasePtr;
 1943                             		.loc 1 821 0
 1944 015a 62 AA                   		add	#10, r10
 1945                             	.LVL295:
 803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****               energyPhasePtr->energyPhaseID = (insertedEnergyPhaseCount + 1);
 1946                             		.loc 1 803 0
 1947 015c CF 4C                   		mov.B	r4, r12
 825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             errorIO = IO_E_OK;
 1948                             		.loc 1 825 0
 1949 015e 66 01                   		mov	#0, r1
 1950 0160 0E                      		bra	.L171
 1951                             	.LVL296:
 1952                             	.L169:
 838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           i = (energyPhaseCount - 1);  /* break */
 1953                             		.loc 1 838 0
 1954 0161 CF 98                   		mov.B	r9, r8
 1955                             	.LVL297:
 837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           errorIO = IO_E_FAIL;
 1956                             		.loc 1 837 0
 1957 0163 75 41 1A                		mov	#26, r1
 1958                             	.LVL298:
 1959                             		.balign 2,3,1
 1960                             	.L171:
 842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         ++energyPhaseParamsPtr;
 1961                             		.loc 1 842 0
 1962 0166 62 A7                   		add	#10, r7
 1963                             	.LVL299:
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < energyPhaseCount; ++i )
 1964                             		.loc 1 770 0
 1965 0168 62 18                   		add	#1, r8
 1966                             	.LVL300:
 1967 016a 5B 84                   		movu.B	r8, r4
 1968 016c 5B DE                   		movu.B	r13, r14
 1969 016e 47 E4                   		cmp	r14, r4
 1970 0170 22 05 38 F8 FE          		bltu	.L173
 857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( IO_E_OK == errorIO )
 1971                             		.loc 1 857 0
 1972 0175 5B 17                   		movu.B	r1, r7
 1973                             	.LVL301:
 1974 0177 61 07                   		cmp	#0, r7
 1975 0179 21 1D                   		bne	.L168
 860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *firstEnergyPhasePtrPtr = &(PM_PowerProfile_Data.energyPhase[powerProfileID - 1][0]);
 1976                             		.loc 1 860 0
 1977 017b AA 07                   		mov.L	32[r0], r7
 1978 017d E1 07 07                		mov.L	28[r0], [r7]
 861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     *sizePtr = (insertedEnergyPhaseCount * sizeof(PM_PowerProfile_EnergyPhaseType));
 1979                             		.loc 1 861 0
 1980 0180 63 AC                   		mul	#10, r12
 1981                             	.LVL302:
 1982 0182 ED 0A 09                		mov.L	36[r0], r10
 1983                             	.LVL303:
 1984 0185 C3 AC                   		mov.B	r12, [r10]
 862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     PM_PowerProfile_Data.powerProfileSize[powerProfileID - 1] = *sizePtr;
 1985                             		.loc 1 862 0
 1986 0187 A9 87                   		mov.L	24[r0], r7
 1987 0189 70 77 00 00 00 00       		add	#_PM_PowerProfile_Data, r7
 1988 018f C7 7C 70                		mov.B	r12, 112[r7]
 1989 0192 0C                      		bra	.L168
 1990                             	.LVL304:
 1991                             	.L175:
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( energyPhaseCount > 0 )
 1992                             		.loc 1 764 0
 1993 0193 75 41 1A                		mov	#26, r1
 1994                             	.LVL305:
 1995                             		.balign 2,3,5
 1996                             	.L168:
 866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   UnusePowerProfile();
 1997                             		.loc 1 866 0
 1998 0196 A2 81                   		mov.L	r1, 40[r0]
 1999 0198 05 00 00 00             		bsr	_UnusePowerProfile
 2000                             	.LVL306:
 869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 2001                             		.loc 1 869 0
 2002 019c AA 81                   		mov.L	40[r0], r1
 2003 019e 5B 11                   		movu.B	r1, r1
 2004 01a0 3F 6D 15                		rtsd	#84, r6-r13
 2005                             	.LFE7:
 2007 01a3 03                      		.section	.text.PM_PowerProfile_ComputeTimeToEnd,"ax",@progbits
 2008                             		.global	_PM_PowerProfile_ComputeTimeToEnd
 2010                             	_PM_PowerProfile_ComputeTimeToEnd:
 2011                             	.LFB25:
1610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (errorIO);
1612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
1613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
1616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \brief      Compute the estimated Time-To-End.
1617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  mSetting:
1619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             Index of target mSetting.
1620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  compartmentIndex:
1621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             Compartment index.
1622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  powerProfileIndex:
1623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             Requested power profile index.
1624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  runningFunctionalPhaseID:
1625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             ID of the current functional phase.
1626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  runningEnergyPhaseNoSpecialsElapsedTime:
1627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             Time elapsed since the current energy phase has started,
1628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             ignoring time contibution by special cycles.
1629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \return     Estimated Time-To-End.
1631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \retval 1   Dummy remaining time, if spending more than the expected time.
1632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \retval 0   If not running a known energy phase.
1633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Andrea Zoppi
1635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       07/04/2014
1636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.1.1
1637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \note
1639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** <pre>
1640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   | run              | now                         | end
1642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   v----------+-------v------------------+----------v
1643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   | en.ph. 1 |   en.ph. 2    RUNNING    | en.ph. 3 |
1644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   |          |<=== expectedDuration ===>|          |
1645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   +----------^-------^------------------+----------^
1646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****              |       |<======== timeToEnd ========>|
1647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****              |<=====>| runningEnergyPhaseNoSpecialsElapsedTime
1648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** </pre>
1650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
1651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** PM_PowerProfile_DurationType PM_PowerProfile_ComputeTimeToEnd
1652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t mSetting,
1654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_CompartmentType compartmentIndex,
1655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_ProfileIndexType powerProfileIndex,
1656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_FunctionalPhaseIDType runningFunctionalPhaseID,
1657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType runningEnergyPhaseNoSpecialsElapsedTime
1658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 2012                             		.loc 1 1659 0
 2013                             	.LVL307:
 2014 0000 6E 7D                   		pushm	r7-r13
 2015                             	.LCFI18:
 2016 0002 60 80                   		sub	#8, r0
 2017                             	.LCFI19:
 2018 0004 DD 09 14                		mov.W	40[r0], r9
 2019                             	.LVL308:
1660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType elapsedTime = 0, timeToEnd = 0;
1661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_EnergyPhaseIDType runningEnergyPhaseID = 0;
 2020                             		.loc 1 1661 0
 2021 0007 3C 00 00                		mov.B	#0, [r0]
 2022                             	.LVL309:
1662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   uint8_t energyPhasesCount = 0, i = 0;
1663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   /* Find the running phase index */
1665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( (compartmentIndex < CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM) &&
 2023                             		.loc 1 1665 0
 2024 000a 76 22 FF 00             		and #0xff, r2
 2025                             	.LVL310:
 2026 000e 17                      		beq	.L180
 2027                             	.LVL311:
 2028 000f 03                      		.balign 2,3,1
 2029                             	.L182:
1660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_DurationType elapsedTime = 0, timeToEnd = 0;
 2030                             		.loc 1 1660 0
 2031 0010 66 07                   		mov	#0, r7
 2032 0012 38 84 00                		bra	.L181
 2033                             	.LVL312:
 2034                             	.L180:
1666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****        (IO_E_OK == PM_PowerProfile_GetEnergyPhaseID(mSetting, powerProfileIndex, runningFunctionalP
 2035                             		.loc 1 1666 0 discriminator 1
 2036 0015 CF 32                   		mov.B	r3, r2
 2037 0017 CF 43                   		mov.B	r4, r3
 2038                             	.LVL313:
 2039 0019 EF 04                   		mov.L	r0, r4
 2040                             	.LVL314:
 2041 001b 05 00 00 00             		bsr	_PM_PowerProfile_GetEnergyPhaseID
 2042                             	.LVL315:
1665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( (compartmentIndex < CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM) &&
 2043                             		.loc 1 1665 0 discriminator 1
 2044 001f 5B 11                   		movu.B	r1, r1
 2045 0021 61 01                   		cmp	#0, r1
 2046 0023 21 ED                   		bne	.L182
1667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     energyPhasesCount = (uint8_t)(PM_PowerProfile_Data.powerProfileSize[compartmentIndex] / (uint8_
 2047                             		.loc 1 1668 0
 2048 0025 FB A2 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r10
 2049 002b 59 AD 70                		movu.B	112[r10], r13
 2050 002e FD 74 9D 0A             		divu	#10, r13
 2051                             	.LVL316:
1669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( energyPhasesCount <= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
 2052                             		.loc 1 1669 0
 2053 0032 5B DC                   		movu.B	r13, r12
 2054 0034 61 AC                   		cmp	#10, r12
 2055 0036 25 53                   		bleu	.L189
 2056 0038 2E D8                   		bra	.L182
 2057                             	.LVL317:
 2058                             	.L188:
1670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < energyPhasesCount; i++ )
1672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         if ( PM_PowerProfile_Data.energyPhase[compartmentIndex][i].energyPhaseID == runningEnergyPh
 2059                             		.loc 1 1673 0
 2060 003a 63 AB                   		mul	#10, r11
 2061 003c 70 BB 08 00 00 00       		add	#_PM_PowerProfile_Data+8, r11
 2062 0042 59 B4 02                		movu.B	2[r11], r4
 2063 0045 44 04                   		cmp	[r0].UB, r4
 2064 0047 21 3F                   		bne	.L184
1674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         {
1675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           /* Get the time reduction with respect to the expected energy phase duration */
1676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           /* elapsedTime = MIN(runningEnergyPhaseNoSpecialsElapsedTime, expectedDuration) */
1677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           elapsedTime = EndianU16_LToN(PM_PowerProfile_Data.energyPhase[compartmentIndex][i].expect
 2065                             		.loc 1 1677 0
 2066 0049 DD B1 02                		mov.W	4[r11], r1
 2067 004c 05 00 00 00             		bsr	_Endian16_Swap
 2068                             	.LVL318:
 2069 0050 DF 1B                   		mov.W	r1, r11
 2070 0052 5F 1E                   		movu.W	r1, r14
 2071 0054 47 8E                   		cmp	r8, r14
 2072 0056 25 04                   		bleu	.L191
 2073 0058 DF 9B                   		mov.W	r9, r11
 2074                             	.LVL319:
 2075                             		.balign 2,3,1
 2076                             	.L191:
1678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           if ( elapsedTime > runningEnergyPhaseNoSpecialsElapsedTime )
1679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           {
1680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             elapsedTime = runningEnergyPhaseNoSpecialsElapsedTime;
1681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           }
1682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           /* Compute the expected time-to-end from the beginning of the running energy phase */
1684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           for ( /* i = i */; i < energyPhasesCount; i++ )
1685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           {
1686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             timeToEnd += EndianU16_LToN(PM_PowerProfile_Data.energyPhase[compartmentIndex][i].expec
 2077                             		.loc 1 1686 0 discriminator 2
 2078 005a 5B AE                   		movu.B	r10, r14
 2079 005c 63 AE                   		mul	#10, r14
 2080 005e 70 EE 08 00 00 00       		add	#_PM_PowerProfile_Data+8, r14
 2081 0064 DD E1 02                		mov.W	4[r14], r1
 2082 0067 05 00 00 00             		bsr	_Endian16_Swap
 2083                             	.LVL320:
 2084 006b 4B 17                   		add	r1, r7
 2085                             	.LVL321:
1684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           for ( /* i = i */; i < energyPhasesCount; i++ )
 2086                             		.loc 1 1684 0 discriminator 2
 2087 006d 62 1A                   		add	#1, r10
 2088                             	.LVL322:
 2089 006f 5B AE                   		movu.B	r10, r14
 2090 0071 47 CE                   		cmp	r12, r14
 2091 0073 23 E7                   		bltu	.L191
1687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           }
1688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           /* Remove the elapsed time of the running energy phase from the time-to-end */
1690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           if ( timeToEnd > elapsedTime )
 2092                             		.loc 1 1690 0
 2093 0075 5F 7E                   		movu.W	r7, r14
 2094 0077 5F BA                   		movu.W	r11, r10
 2095                             	.LVL323:
 2096 0079 47 AE                   		cmp	r10, r14
 2097 007b 25 05                   		bleu	.L190
1691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           {
1692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             timeToEnd -= elapsedTime;
 2098                             		.loc 1 1692 0
 2099 007d 43 B7                   		sub	r11, r7
 2100                             	.LVL324:
 2101 007f 0B                      		bra	.L187
 2102                             	.L190:
1693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           }
1694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           else
1695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           {
1696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             timeToEnd = 1;  /* floor */
 2103                             		.loc 1 1696 0
 2104 0080 66 17                   		mov	#1, r7
 2105                             	.LVL325:
 2106                             		.balign 2,3,2
 2107                             	.L187:
1697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           }
1698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           i = (energyPhasesCount - 1);  /* break */
 2108                             		.loc 1 1699 0
 2109 0082 71 DA FF                		add	#-1, r13, r10
 2110                             	.LVL326:
 2111 0085 03                      		.balign 2,3,1
 2112                             	.L184:
1671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < energyPhasesCount; i++ )
 2113                             		.loc 1 1671 0
 2114 0086 62 1A                   		add	#1, r10
 2115                             	.LVL327:
 2116 0088 08                      		bra	.L183
 2117                             	.LVL328:
 2118                             	.L189:
1669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( energyPhasesCount <= CONFIG_PM_POWER_PROFILE_ENERGY_PHASES_MAX_NUM )
 2119                             		.loc 1 1669 0
 2120 0089 CF 1A                   		mov.B	r1, r10
 2121 008b DF 17                   		mov.W	r1, r7
 2122 008d 5F 98                   		movu.W	r9, r8
 2123                             	.LVL329:
 2124 008f 03                      		.balign 2,3,1
 2125                             	.L183:
1671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       for ( i = 0; i < energyPhasesCount; i++ )
 2126                             		.loc 1 1671 0 discriminator 1
 2127 0090 5B AB                   		movu.B	r10, r11
 2128 0092 47 CB                   		cmp	r12, r11
 2129 0094 23 A6                   		bltu	.L188
 2130                             	.LVL330:
 2131                             		.balign 2,3,1
 2132                             	.L181:
1700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         }
1701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   }
1704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (timeToEnd);
1705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 2133                             		.loc 1 1705 0
 2134 0096 5F 71                   		movu.W	r7, r1
 2135 0098 3F 7D 09                		rtsd	#36, r7-r13
 2136                             	.LFE25:
 2138 009b 03                      		.section	.text.PM_PowerProfile_IsRecomputationReady,"ax",@progbits
 2139                             		.global	_PM_PowerProfile_IsRecomputationReady
 2141                             	_PM_PowerProfile_IsRecomputationReady:
 2142                             	.LFB26:
1706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
1709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \brief      Check if the power profile is ready for recomputation.
1710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \deatil     Should be polled by the supervisor.
1711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in] recomputationRequest
1713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             Asking for recomputation of the power profile.
1714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \return
1715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             The temporal filter is ready.
1716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Andrea Zoppi
1718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       11/07/2014
1719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
1720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
1721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** bool_t PM_PowerProfile_IsRecomputationReady(bool_t recomputationRequest)
1722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 2143                             		.loc 1 1722 0
 2144                             	.LVL331:
1723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   return (recomputationRequest);
1724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** }
 2145                             		.loc 1 1724 0
 2146 0000 02                      		rts
 2147                             	.LFE26:
 2149                             		.section	.text.PM_PowerProfile_UpdateTemporalFilters,"ax",@progbits
 2150                             		.global	_PM_PowerProfile_UpdateTemporalFilters
 2152                             	_PM_PowerProfile_UpdateTemporalFilters:
 2153                             	.LFB27:
1725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** /**
1728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \brief      Updates the Power Profile SID.
1729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \deatil     Applies temporal filters.
1730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  compartmentIndex:
1732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             Compartment index.
1733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \param[in]  powerProfileHasChanged:
1734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****             The power profile changed since last call.
1735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \author     Andrea Zoppi
1737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \date       13/05/2014
1738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** \version    1.0.0
1739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** */
1740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** void PM_PowerProfile_UpdateTemporalFilters
1741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** (
1742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_CompartmentType compartmentIndex,
1743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   bool_t powerProfileHasChanged
1744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** )
1745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** {
 2154                             		.loc 1 1745 0
 2155                             	.LVL332:
1746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_SIDFilterDowncounterType oldRequestBurstDowncounter = PM_PowerProfile_TemporalFil
 2156                             		.loc 1 1746 0
 2157 0000 FB 32 00 00 00 00       		mov.L	#_PM_PowerProfile_TemporalFilters, r3
 2158 0006 CC 34                   		mov.B	[r3], r4
 2159                             	.LVL333:
1747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_SIDFilterDowncounterType oldBusAccessDowncounter = PM_PowerProfile_TemporalFilter
 2160                             		.loc 1 1747 0
 2161 0008 CD 3E 01                		mov.B	1[r3], r14
 2162                             	.LVL334:
1748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   PM_PowerProfile_PowerProfileSIDType powerProfileSID = 0;
1749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   if ( compartmentIndex < CONFIG_PM_POWER_PROFILE_COMPARTMENTS_NUM )
 2163                             		.loc 1 1750 0
 2164 000b 76 21 FF 00             		and #0xff, r1
 2165                             	.LVL335:
 2166 000f 21 7C                   		bne	.L195
1751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****   {
1752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Decrement downcounters */
1753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( PM_PowerProfile_TemporalFilters.requestBurstDowncounter > 0 )
 2167                             		.loc 1 1753 0
 2168 0011 5B 41                   		movu.B	r4, r1
 2169 0013 61 01                   		cmp	#0, r1
 2170 0015 17                      		beq	.L198
1754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       --PM_PowerProfile_TemporalFilters.requestBurstDowncounter;
 2171                             		.loc 1 1755 0
 2172 0016 71 41 FF                		add	#-1, r4, r1
 2173 0019 C3 31                   		mov.B	r1, [r3]
 2174 001b 03                      		.balign 2,3,1
 2175                             	.L198:
1756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( PM_PowerProfile_TemporalFilters.busAccessDowncounter > 0 )
 2176                             		.loc 1 1757 0
 2177 001c 5B E3                   		movu.B	r14, r3
 2178 001e 61 03                   		cmp	#0, r3
 2179 0020 20 0E                   		beq	.L199
1758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       --PM_PowerProfile_TemporalFilters.busAccessDowncounter;
 2180                             		.loc 1 1759 0
 2181 0022 71 E1 FF                		add	#-1, r14, r1
 2182 0025 FB 32 00 00 00 00       		mov.L	#_PM_PowerProfile_TemporalFilters, r3
 2183 002b 80 39                   		mov.B	r1, 1[r3]
 2184 002d 03                      		.balign 2,3,5
 2185                             	.L199:
 2186 002e FB 32 00 00 00 00       		mov.L	#_PM_PowerProfile_TemporalFilters, r3
1760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Rearm the burst downcounter if regulations changed */
1763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( TRUE == powerProfileHasChanged )
 2187                             		.loc 1 1763 0
 2188 0034 61 12                   		cmp	#1, r2
 2189 0036 1E                      		bne	.L200
1764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       PM_PowerProfile_TemporalFilters.requestBurstDowncounter = PP_SIDFILTER_CHANGEBURST_WINDOW;
 2190                             		.loc 1 1765 0
 2191 0037 3C 30 02                		mov.B	#2, [r3]
1766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       PM_PowerProfile_TemporalFilters.queuedBusAccessRequest = TRUE;
 2192                             		.loc 1 1766 0
 2193 003a A0 3A                   		mov.L	r2, 4[r3]
 2194                             		.balign 2,3,1
 2195                             	.L200:
1767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     }
1768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     /* Increment SID when there are pending requests, both counters finished, and at least one has 
1770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( PM_PowerProfile_TemporalFilters.queuedBusAccessRequest &&
 2196                             		.loc 1 1770 0
 2197 003c A8 3B                   		mov.L	4[r3], r3
 2198 003e 61 03                   		cmp	#0, r3
 2199 0040 20 4B                   		beq	.L195
1771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****          ((0 == PM_PowerProfile_TemporalFilters.requestBurstDowncounter) && (0 == PM_PowerProfile_T
 2200                             		.loc 1 1771 0 discriminator 1
 2201 0042 FB 32 00 00 00 00       		mov.L	#_PM_PowerProfile_TemporalFilters, r3
 2202 0048 EC 33                   		mov.L	[r3], r3
1770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     if ( PM_PowerProfile_TemporalFilters.queuedBusAccessRequest &&
 2203                             		.loc 1 1770 0 discriminator 1
 2204 004a FD 7C C3 00 00 FF       		tst	#0xffff0000, r3
 2205 0050 21 3B                   		bne	.L195
 2206                             		.loc 1 1771 0
 2207 0052 76 24 FF 00             		and #0xff, r4
 2208                             	.LVL336:
 2209 0056 18                      		bne	.L202
1772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****           ((0 != oldRequestBurstDowncounter) || (0 != oldBusAccessDowncounter))) )
 2210                             		.loc 1 1772 0
 2211 0057 76 2E FF 00             		and #0xff, r14
 2212                             	.LVL337:
 2213 005b 20 30                   		beq	.L195
 2214 005d 03                      		.balign 2,3,5
 2215                             	.L202:
1773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****     {
1774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Start a new external bus window and clear the queued regulation flag */
1775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       PM_PowerProfile_TemporalFilters.busAccessDowncounter = PP_SIDFILTER_BUSACCESS_WINDOW;
 2216                             		.loc 1 1775 0
 2217 005e FB E2 00 00 00 00       		mov.L	#_PM_PowerProfile_TemporalFilters, r14
 2218 0064 F9 E4 01 14             		mov.B	#20, 1[r14]
1776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       PM_PowerProfile_TemporalFilters.queuedBusAccessRequest = FALSE;
 2219                             		.loc 1 1776 0
 2220 0068 F9 E6 01 00             		mov.L	#0, 4[r14]
1777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c **** 
1778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       /* Increment the SID */
1779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       UsePowerProfile();
 2221                             		.loc 1 1779 0
 2222 006c 05 00 00 00             		bsr	_UsePowerProfile
 2223                             	.LVL338:
1780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       powerProfileSID = ((PM_PowerProfile_Data.powerProfileSID[compartmentIndex] + 1) & 7);
 2224                             		.loc 1 1780 0
 2225 0070 FB 42 00 00 00 00       		mov.L	#_PM_PowerProfile_Data, r4
 2226 0076 CD 4E 71                		mov.B	113[r4], r14
 2227 0079 62 1E                   		add	#1, r14
 2228 007b 64 7E                   		and #7, r14
 2229                             	.LVL339:
1781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       if ( 0 == powerProfileSID )
 2230                             		.loc 1 1781 0
 2231 007d 5B E3                   		movu.B	r14, r3
 2232 007f 61 03                   		cmp	#0, r3
 2233 0081 1B                      		bne	.L203
1782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       {
1783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****         powerProfileSID = 1;  /* 0 is reserved */
 2234                             		.loc 1 1783 0
 2235 0082 66 1E                   		mov	#1, r14
 2236                             	.LVL340:
 2237                             		.balign 2,3,5
 2238                             	.L203:
1784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       }
1785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       PM_PowerProfile_Data.powerProfileSID[compartmentIndex] = powerProfileSID;
 2239                             		.loc 1 1785 0
 2240 0084 C7 4E 71                		mov.B	r14, 113[r4]
1786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile\PM_PowerProfile_2_0.c ****       UnusePowerProfile();
 2241                             		.loc 1 1786 0
 2242 0087 04 00 00 00             		bra	_UnusePowerProfile
 2243                             	.LVL341:
 2244                             	.L195:
 2245 008b 02                      		rts
 2246                             	.LFE27:
 2248                             		.section	.bss.PM_PowerProfile_Data,"aw",@nobits
 2249                             		.balign 4
 2252                             	_PM_PowerProfile_Data:
 2253 0000 00 00 00 00 00 00 00 00 		.zero	124
 2253      00 00 00 00 00 00 00 00 
 2253      00 00 00 00 00 00 00 00 
 2253      00 00 00 00 00 00 00 00 
 2253      00 00 00 00 00 00 00 00 
 2254                             		.section	.bss.PM_PowerProfile_EnergyPhaseMap,"aw",@nobits
 2257                             	_PM_PowerProfile_EnergyPhaseMap:
 2258 0000 00 00 00 00 00 00 00 00 		.zero	10
 2258      00 00 
 2259                             		.section	.rodata.PM_PowerProfile_ModTab_InOutSizes,"a",@progbits
 2262                             	_PM_PowerProfile_ModTab_InOutSizes:
 2263 0000 01                      		.byte	1
 2264 0001 02                      		.byte	2
 2265 0002 01                      		.byte	1
 2266 0003 02                      		.byte	2
 2267                             		.section	.bss.PM_PowerProfile_TemporalFilters,"aw",@nobits
 2268                             		.balign 4
 2271                             	_PM_PowerProfile_TemporalFilters:
 2272 0000 00 00 00 00 00 00 00 00 		.zero	8
 2713                             	.Letext0:
 2714                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 2715                             		.file 3 "C:\\Renesas\\E2_STU~1\\GNURXV~1.01-\\rx-ELF/rx-elf/optlibinc/stddef.h"
 2716                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers/IO_driver.h"
 2717                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Fixed/LIB_FixedExp.h"
 2718                             		.file 6 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_PowerProfile/PM_PowerProfileExp.
 2719                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_UTilities.h"
 2720                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/Config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 PM_PowerProfile_2_0.c
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:6      .text.PM_PowerProfile_ModTab_ExtendValue:00000000 _PM_PowerProfile_ModTab_ExtendValue
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:12     .text.PM_PowerProfile_ModTab_ExtendValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:59     .text.PM_PowerProfile_GetEnergyPhaseID:00000000 _PM_PowerProfile_GetEnergyPhaseID
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:63     .text.PM_PowerProfile_GetEnergyPhaseID:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2257   .bss.PM_PowerProfile_EnergyPhaseMap:00000000 _PM_PowerProfile_EnergyPhaseMap
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:175    .text.PM_PowerProfile_ModTab_QueryTable:00000000 _PM_PowerProfile_ModTab_QueryTable
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:179    .text.PM_PowerProfile_ModTab_QueryTable:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2262   .rodata.PM_PowerProfile_ModTab_InOutSizes:00000000 _PM_PowerProfile_ModTab_InOutSizes
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:503    .text.PM_PowerProfile_Init:00000000 _PM_PowerProfile_Init
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:507    .text.PM_PowerProfile_Init:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2252   .bss.PM_PowerProfile_Data:00000000 _PM_PowerProfile_Data
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:517    .text.PM_PowerProfile_SetParamModifierFunc:00000000 _PM_PowerProfile_SetParamModifierFunc
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:522    .text.PM_PowerProfile_SetParamModifierFunc:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:530    .text.PM_PowerProfile_SetAlphaFunc:00000000 _PM_PowerProfile_SetAlphaFunc
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:535    .text.PM_PowerProfile_SetAlphaFunc:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:543    .text.PM_PowerProfile_GetPowerProfilesNum:00000000 _PM_PowerProfile_GetPowerProfilesNum
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:547    .text.PM_PowerProfile_GetPowerProfilesNum:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:554    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000000 _PM_PowerProfile_UpdatePowerProfileStatus
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:558    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:638    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000000 _PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:642    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:793    .text.PM_PowerProfile_SetDuration:00000000 _PM_PowerProfile_SetDuration
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:798    .text.PM_PowerProfile_SetDuration:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:833    .text.PM_PowerProfile_SetForceReload:00000000 _PM_PowerProfile_SetForceReload
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:838    .text.PM_PowerProfile_SetForceReload:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:872    .text.PM_PowerProfile_ResetForceReload:00000000 _PM_PowerProfile_ResetForceReload
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:877    .text.PM_PowerProfile_ResetForceReload:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:911    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000000 _PM_PowerProfile_GetPowerProfileByProfileID
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:915    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1059   .text.PM_PowerProfile_TotalProfileDuration:00000000 _PM_PowerProfile_TotalProfileDuration
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1063   .text.PM_PowerProfile_TotalProfileDuration:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1119   .text.PM_PowerProfile_TotalProfileEnergy:00000000 _PM_PowerProfile_TotalProfileEnergy
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1123   .text.PM_PowerProfile_TotalProfileEnergy:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1179   .text.PM_PowerProfile_GetModValue:00000000 _PM_PowerProfile_GetModValue
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1183   .text.PM_PowerProfile_GetModValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1587   .text.PM_PowerProfile_CalcDurationPartial:00000000 _PM_PowerProfile_CalcDurationPartial
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1591   .text.PM_PowerProfile_CalcDurationPartial:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1609   .text.PM_PowerProfile_CalcDurationTotal:00000000 _PM_PowerProfile_CalcDurationTotal
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1614   .text.PM_PowerProfile_CalcDurationTotal:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1626   .text.PM_PowerProfile_CalcPeakPower:00000000 _PM_PowerProfile_CalcPeakPower
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1630   .text.PM_PowerProfile_CalcPeakPower:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1676   .text.PM_PowerProfile_CalcEnergy:00000000 _PM_PowerProfile_CalcEnergy
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1681   .text.PM_PowerProfile_CalcEnergy:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1734   .text.PM_PowerProfile_GetPowerProfile:00000000 _PM_PowerProfile_GetPowerProfile
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1738   .text.PM_PowerProfile_GetPowerProfile:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2010   .text.PM_PowerProfile_ComputeTimeToEnd:00000000 _PM_PowerProfile_ComputeTimeToEnd
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2014   .text.PM_PowerProfile_ComputeTimeToEnd:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2141   .text.PM_PowerProfile_IsRecomputationReady:00000000 _PM_PowerProfile_IsRecomputationReady
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2146   .text.PM_PowerProfile_IsRecomputationReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2152   .text.PM_PowerProfile_UpdateTemporalFilters:00000000 _PM_PowerProfile_UpdateTemporalFilters
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2157   .text.PM_PowerProfile_UpdateTemporalFilters:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2271   .bss.PM_PowerProfile_TemporalFilters:00000000 _PM_PowerProfile_TemporalFilters
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2274   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7      .text.PM_PowerProfile_ModTab_ExtendValue:00000000 .LFB22
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:60     .text.PM_PowerProfile_GetEnergyPhaseID:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:176    .text.PM_PowerProfile_ModTab_QueryTable:00000000 .LFB23
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:504    .text.PM_PowerProfile_Init:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:518    .text.PM_PowerProfile_SetParamModifierFunc:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:531    .text.PM_PowerProfile_SetAlphaFunc:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:544    .text.PM_PowerProfile_GetPowerProfilesNum:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:555    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:639    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:794    .text.PM_PowerProfile_SetDuration:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:834    .text.PM_PowerProfile_SetForceReload:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:873    .text.PM_PowerProfile_ResetForceReload:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:912    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1060   .text.PM_PowerProfile_TotalProfileDuration:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1120   .text.PM_PowerProfile_TotalProfileEnergy:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1180   .text.PM_PowerProfile_GetModValue:00000000 .LFB17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1588   .text.PM_PowerProfile_CalcDurationPartial:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1610   .text.PM_PowerProfile_CalcDurationTotal:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1627   .text.PM_PowerProfile_CalcPeakPower:00000000 .LFB20
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1677   .text.PM_PowerProfile_CalcEnergy:00000000 .LFB21
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1735   .text.PM_PowerProfile_GetPowerProfile:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2011   .text.PM_PowerProfile_ComputeTimeToEnd:00000000 .LFB25
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2142   .text.PM_PowerProfile_IsRecomputationReady:00000000 .LFB26
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2153   .text.PM_PowerProfile_UpdateTemporalFilters:00000000 .LFB27
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:6740   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11213  .debug_str:000005a4 .LASF356
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11341  .debug_str:00000b28 .LASF357
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10993  .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11057  .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11115  .debug_str:00000241 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11255  .debug_str:00000770 .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11567  .debug_str:00001498 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11533  .debug_str:00001355 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11731  .debug_str:00001b44 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11205  .debug_str:00000574 .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11501  .debug_str:000011f5 .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11651  .debug_str:000017fc .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11575  .debug_str:000014fa .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11263  .debug_str:000007b3 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11439  .debug_str:00000f70 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11411  .debug_str:00000e56 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11673  .debug_str:000018dd .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11207  .debug_str:0000057d .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11197  .debug_str:0000052b .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11441  .debug_str:00000f7e .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11467  .debug_str:00001097 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11181  .debug_str:000004a6 .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11765  .debug_str:00001cab .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11445  .debug_str:00000f95 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11599  .debug_str:000015f8 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11639  .debug_str:00001789 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11321  .debug_str:00000a48 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11083  .debug_str:00000136 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11389  .debug_str:00000d7b .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11579  .debug_str:0000152b .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11581  .debug_str:00001533 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11171  .debug_str:00000458 .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11685  .debug_str:0000195f .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11231  .debug_str:0000067d .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11429  .debug_str:00000f17 .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11159  .debug_str:000003d0 .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11271  .debug_str:000007f8 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11133  .debug_str:000002cc .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11701  .debug_str:00001a23 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11585  .debug_str:0000155e .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11157  .debug_str:000003b6 .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11693  .debug_str:000019ba .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11135  .debug_str:000002de .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11377  .debug_str:00000cdb .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11091  .debug_str:00000173 .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11565  .debug_str:0000148a .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11517  .debug_str:000012a8 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11559  .debug_str:00001450 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11709  .debug_str:00001a78 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11723  .debug_str:00001b01 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11065  .debug_str:00000077 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11325  .debug_str:00000a58 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11285  .debug_str:00000890 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11257  .debug_str:00000778 .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11757  .debug_str:00001c76 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11655  .debug_str:00001824 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11717  .debug_str:00001ac3 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11087  .debug_str:00000140 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11155  .debug_str:0000039f .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11343  .debug_str:00000b84 .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11473  .debug_str:000010c3 .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11305  .debug_str:00000998 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11563  .debug_str:00001481 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11751  .debug_str:00001c3c .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11493  .debug_str:0000117e .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11569  .debug_str:000014a2 .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11385  .debug_str:00000d3f .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11097  .debug_str:000001bf .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11179  .debug_str:0000048e .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11597  .debug_str:000015d1 .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11363  .debug_str:00000c75 .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11161  .debug_str:000003e8 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11383  .debug_str:00000d17 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11707  .debug_str:00001a53 .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11317  .debug_str:00000a0e .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11691  .debug_str:0000199d .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11471  .debug_str:000010a5 .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11539  .debug_str:0000136e .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11237  .debug_str:000006b5 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11361  .debug_str:00000c54 .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11397  .debug_str:00000db7 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11733  .debug_str:00001b57 .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11525  .debug_str:000012f1 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11309  .debug_str:000009b1 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11667  .debug_str:000018b5 .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11215  .debug_str:000005ca .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11261  .debug_str:0000078f .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11379  .debug_str:00000ce5 .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11093  .debug_str:00000188 .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11727  .debug_str:00001b2f .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11201  .debug_str:00000542 .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11551  .debug_str:000013e2 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11671  .debug_str:000018d3 .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11537  .debug_str:00001367 .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11287  .debug_str:000008a1 .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11615  .debug_str:00001697 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11059  .debug_str:00000000 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11143  .debug_str:00000327 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11241  .debug_str:000006ed .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11461  .debug_str:00001069 .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11523  .debug_str:000012dc .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11629  .debug_str:00001725 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11619  .debug_str:000016c7 .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11571  .debug_str:000014bb .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11647  .debug_str:000017ae .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11549  .debug_str:000013c1 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11081  .debug_str:00000115 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11741  .debug_str:00001bb5 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11653  .debug_str:00001804 .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11145  .debug_str:00000341 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11407  .debug_str:00000e24 .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11345  .debug_str:00000b96 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11677  .debug_str:00001900 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11725  .debug_str:00001b14 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11089  .debug_str:0000015a .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11603  .debug_str:00001635 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11333  .debug_str:00000aaf .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11187  .debug_str:000004c1 .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11413  .debug_str:00000e5e .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11427  .debug_str:00000eff .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11113  .debug_str:00000233 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11503  .debug_str:00001207 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11151  .debug_str:00000394 .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11103  .debug_str:000001f0 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11063  .debug_str:00000058 .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11365  .debug_str:00000c98 .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11329  .debug_str:00000a98 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11683  .debug_str:00001949 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11665  .debug_str:000018a7 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11593  .debug_str:000015b5 .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11513  .debug_str:00001286 .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11419  .debug_str:00000e8b .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11369  .debug_str:00000cae .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11415  .debug_str:00000e70 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11447  .debug_str:00000fa0 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11777  .debug_str:00001d11 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11373  .debug_str:00000cc5 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11451  .debug_str:00000ff1 .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11713  .debug_str:00001a90 .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11743  .debug_str:00001bd8 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11331  .debug_str:00000aa6 .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11511  .debug_str:0000127a .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11067  .debug_str:0000008a .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11077  .debug_str:000000ff .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11349  .debug_str:00000baa .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11635  .debug_str:0000175d .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11085  .debug_str:0000013b .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11357  .debug_str:00000c2c .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11079  .debug_str:0000010a .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11645  .debug_str:000017a2 .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11591  .debug_str:000015a8 .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11711  .debug_str:00001a83 .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11489  .debug_str:0000112f .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11773  .debug_str:00001cd3 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11291  .debug_str:000008d4 .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11297  .debug_str:0000094a .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11497  .debug_str:000011a6 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11401  .debug_str:00000de1 .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11355  .debug_str:00000c03 .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11529  .debug_str:00001324 .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11601  .debug_str:00001606 .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11229  .debug_str:00000650 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11659  .debug_str:00001859 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11295  .debug_str:00000916 .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11075  .debug_str:000000d1 .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11351  .debug_str:00000bd2 .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11339  .debug_str:00000af7 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11061  .debug_str:00000029 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11649  .debug_str:000017d1 .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11499  .debug_str:000011cc .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11505  .debug_str:00001222 .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11149  .debug_str:0000036c .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11577  .debug_str:00001503 .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11657  .debug_str:00001831 .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11423  .debug_str:00000ebc .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11359  .debug_str:00000c31 .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11371  .debug_str:00000cbe .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11315  .debug_str:000009ff .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11125  .debug_str:00000286 .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11123  .debug_str:0000027f .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11219  .debug_str:000005f5 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11217  .debug_str:000005ef .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11195  .debug_str:0000051b .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11193  .debug_str:0000050b .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11465  .debug_str:0000108d .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11463  .debug_str:00001083 .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11775  .debug_str:00001cf4 .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11375  .debug_str:00000cd1 .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11459  .debug_str:0000105f .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11185  .debug_str:000004b7 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11183  .debug_str:000004ad .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11175  .debug_str:00000473 .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11173  .debug_str:00000465 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11477  .debug_str:000010e1 .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11211  .debug_str:00000594 .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11755  .debug_str:00001c63 .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11753  .debug_str:00001c50 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11749  .debug_str:00001c28 .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11747  .debug_str:00001c14 .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11199  .debug_str:00000537 .LASF195
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11633  .debug_str:00001752 .LASF196
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11611  .debug_str:0000167e .LASF197
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11609  .debug_str:00001672 .LASF198
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11631  .debug_str:00001742 .LASF199
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11431  .debug_str:00000f2a .LASF200
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11521  .debug_str:000012c8 .LASF201
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11519  .debug_str:000012b4 .LASF202
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11739  .debug_str:00001b8c .LASF203
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11687  .debug_str:00001971 .LASF204
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11167  .debug_str:00000436 .LASF205
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11071  .debug_str:000000aa .LASF206
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11605  .debug_str:0000164e .LASF207
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11561  .debug_str:0000145d .LASF208
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11163  .debug_str:00000406 .LASF344
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11735  .debug_str:00001b78 .LASF209
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11737  .debug_str:00001b82 .LASF210
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11169  .debug_str:0000044e .LASF211
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11553  .debug_str:000013f3 .LASF264
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11101  .debug_str:000001e1 .LASF212
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11767  .debug_str:00001cb0 .LASF214
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11301  .debug_str:00000978 .LASF213
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11249  .debug_str:0000071e .LASF215
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11535  .debug_str:0000135e .LASF216
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11669  .debug_str:000018ce .LASF217
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11759  .debug_str:00001c8b .LASF269
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:55     .text.PM_PowerProfile_ModTab_ExtendValue:0000001f .LFE22
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7650   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7708   .debug_loc:00000085 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11637  .debug_str:00001768 .LASF226
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:171    .text.PM_PowerProfile_GetEnergyPhaseID:0000007c .LFE11
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7756   .debug_loc:00000100 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11111  .debug_str:0000022a .LASF218
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7774   .debug_loc:0000012c .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11557  .debug_str:0000143e .LASF219
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7788   .debug_loc:0000014d .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11073  .debug_str:000000bf .LASF220
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7806   .debug_loc:00000179 .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11719  .debug_str:00001adc .LASF221
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7824   .debug_loc:000001a5 .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11469  .debug_str:0000109e .LASF222
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11453  .debug_str:00001017 .LASF223
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7835   .debug_loc:000001c3 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11245  .debug_str:00000712 .LASF224
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7852   .debug_loc:000001ee .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7872   .debug_loc:00000223 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7889   .debug_loc:0000024e .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11223  .debug_str:0000061b .LASF225
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7911   .debug_loc:00000285 .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:81     .text.PM_PowerProfile_GetEnergyPhaseID:00000018 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11627  .debug_str:00001703 .LASF227
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:498    .text.PM_PowerProfile_ModTab_QueryTable:00000199 .LFE23
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7941   .debug_loc:000002d2 .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11715  .debug_str:00001ab4 .LASF228
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7959   .debug_loc:000002ff .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11323  .debug_str:00000a4f .LASF229
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:7978   .debug_loc:00000333 .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11393  .debug_str:00000d8c .LASF230
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8003   .debug_loc:0000036d .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11661  .debug_str:0000188a .LASF231
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8024   .debug_loc:000003a3 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11761  .debug_str:00001c94 .LASF232
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8038   .debug_loc:000003c4 .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11485  .debug_str:00001117 .LASF233
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8059   .debug_loc:000003fa .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11545  .debug_str:000013af .LASF234
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8084   .debug_loc:0000043b .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11131  .debug_str:000002c2 .LASF235
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8110   .debug_loc:0000047d .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11625  .debug_str:000016f8 .LASF236
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8151   .debug_loc:000004ea .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11531  .debug_str:0000134a .LASF237
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8209   .debug_loc:00000584 .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11643  .debug_str:00001799 .LASF238
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8247   .debug_loc:000005e7 .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11117  .debug_str:0000024e .LASF239
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8279   .debug_loc:0000063d .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8309   .debug_loc:0000068a .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:186    .text.PM_PowerProfile_ModTab_QueryTable:00000009 .LBB6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8355   .debug_loc:00000703 .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8380   .debug_loc:0000073d .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:249    .text.PM_PowerProfile_ModTab_QueryTable:0000004e .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:264    .text.PM_PowerProfile_ModTab_QueryTable:00000066 .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:316    .text.PM_PowerProfile_ModTab_QueryTable:000000a7 .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:324    .text.PM_PowerProfile_ModTab_QueryTable:000000b1 .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:370    .text.PM_PowerProfile_ModTab_QueryTable:000000f1 .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:377    .text.PM_PowerProfile_ModTab_QueryTable:00000100 .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:383    .text.PM_PowerProfile_ModTab_QueryTable:0000010c .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:390    .text.PM_PowerProfile_ModTab_QueryTable:0000011a .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:396    .text.PM_PowerProfile_ModTab_QueryTable:00000125 .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:405    .text.PM_PowerProfile_ModTab_QueryTable:00000138 .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:407    .text.PM_PowerProfile_ModTab_QueryTable:0000013c .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11527  .debug_str:0000130f .LASF358
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:512    .text.PM_PowerProfile_Init:0000000e .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11457  .debug_str:0000103a .LASF241
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:525    .text.PM_PowerProfile_SetParamModifierFunc:00000009 .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11153  .debug_str:0000039a .LASF240
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11589  .debug_str:0000158b .LASF242
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:538    .text.PM_PowerProfile_SetAlphaFunc:0000000a .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11129  .debug_str:0000029e .LASF359
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:549    .text.PM_PowerProfile_GetPowerProfilesNum:00000003 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11449  .debug_str:00000fc8 .LASF250
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:633    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000060 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8398   .debug_loc:00000762 .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11177  .debug_str:00000481 .LASF243
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8416   .debug_loc:0000078e .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11391  .debug_str:00000d85 .LASF244
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8434   .debug_loc:000007ba .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11729  .debug_str:00001b3d .LASF245
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8448   .debug_loc:000007db .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8462   .debug_loc:000007fc .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11433  .debug_str:00000f3a .LASF246
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11763  .debug_str:00001ca0 .LASF247
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11475  .debug_str:000010d7 .LASF248
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8480   .debug_loc:00000828 .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11409  .debug_str:00000e4b .LASF249
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:589    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000027 .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11327  .debug_str:00000a67 .LASF251
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:788    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:000000b1 .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8533   .debug_loc:000008a8 .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8551   .debug_loc:000008d4 .LLST35
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8580   .debug_loc:00000919 .LLST36
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11069  .debug_str:00000098 .LASF252
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8598   .debug_loc:00000945 .LLST37
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8627   .debug_loc:0000098a .LLST38
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11137  .debug_str:000002ee .LASF253
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11541  .debug_str:00001389 .LASF254
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8649   .debug_loc:000009c1 .LLST39
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11663  .debug_str:00001896 .LASF255
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8670   .debug_loc:000009f7 .LLST40
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11547  .debug_str:000013b9 .LASF256
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8709   .debug_loc:00000a47 .LLST41
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11771  .debug_str:00001ccc .LASF257
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11405  .debug_str:00000e15 .LASF258
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8738   .debug_loc:00000a93 .LLST42
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8759   .debug_loc:00000ac9 .LLST43
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:688    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000003f .LBB12
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:707    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000055 .LBE12
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8783   .debug_loc:00000b09 .LLST44
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:689    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000003f .LBB13
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:706    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000055 .LBE13
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8790   .debug_loc:00000b1c .LLST45
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:672    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000002c .LVL115
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:765    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000008e .LVL131
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11281  .debug_str:00000866 .LASF259
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:828    .text.PM_PowerProfile_SetDuration:00000028 .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8798   .debug_loc:00000b30 .LLST46
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11253  .debug_str:00000767 .LASF260
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:802    .text.PM_PowerProfile_SetDuration:00000006 .LBB16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:820    .text.PM_PowerProfile_SetDuration:0000001c .LBE16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:803    .text.PM_PowerProfile_SetDuration:00000006 .LBB17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:819    .text.PM_PowerProfile_SetDuration:0000001c .LBE17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8812   .debug_loc:00000b51 .LLST47
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11699  .debug_str:00001a04 .LASF261
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:867    .text.PM_PowerProfile_SetForceReload:0000002b .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11209  .debug_str:00000584 .LASF262
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:842    .text.PM_PowerProfile_SetForceReload:00000006 .LBB20
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:860    .text.PM_PowerProfile_SetForceReload:0000001c .LBE20
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:843    .text.PM_PowerProfile_SetForceReload:00000006 .LBB21
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:859    .text.PM_PowerProfile_SetForceReload:0000001c .LBE21
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8820   .debug_loc:00000b65 .LLST48
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11583  .debug_str:0000153d .LASF263
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:906    .text.PM_PowerProfile_ResetForceReload:0000002b .LFE9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:881    .text.PM_PowerProfile_ResetForceReload:00000006 .LBB24
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:899    .text.PM_PowerProfile_ResetForceReload:0000001c .LBE24
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:882    .text.PM_PowerProfile_ResetForceReload:00000006 .LBB25
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:898    .text.PM_PowerProfile_ResetForceReload:0000001c .LBE25
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8828   .debug_loc:00000b79 .LLST49
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11681  .debug_str:00001922 .LASF265
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11587  .debug_str:00001576 .LASF266
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11105  .debug_str:000001f6 .LASF267
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11481  .debug_str:00001105 .LASF268
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11697  .debug_str:000019d9 .LASF270
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1054   .text.PM_PowerProfile_GetPowerProfileByProfileID:000000c9 .LFE10
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8836   .debug_loc:00000b8d .LLST50
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8849   .debug_loc:00000bad .LLST51
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11267  .debug_str:000007d4 .LASF271
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8863   .debug_loc:00000bce .LLST52
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8882   .debug_loc:00000c02 .LLST53
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11147  .debug_str:0000035b .LASF272
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8901   .debug_loc:00000c36 .LLST54
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:923    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000008 .LBB31
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:943    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000020 .LBE31
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:924    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000008 .LBB32
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:942    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000020 .LBE32
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8942   .debug_loc:00000c8d .LLST55
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:953    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000033 .LBB33
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1044   .text.PM_PowerProfile_GetPowerProfileByProfileID:000000bd .LBE33
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8950   .debug_loc:00000ca1 .LLST56
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8965   .debug_loc:00000cca .LLST57
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:8980   .debug_loc:00000cf3 .LLST58
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9011   .debug_loc:00000d32 .LLST59
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:954    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000033 .LBB34
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1043   .text.PM_PowerProfile_GetPowerProfileByProfileID:000000bd .LBE34
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9019   .debug_loc:00000d46 .LLST60
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9027   .debug_loc:00000d5a .LLST61
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9046   .debug_loc:00000d8e .LLST62
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9053   .debug_loc:00000da1 .LLST63
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:977    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000056 .LBB35
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1022   .text.PM_PowerProfile_GetPowerProfileByProfileID:00000098 .LBE35
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9074   .debug_loc:00000dc4 .LLST64
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1003   .text.PM_PowerProfile_GetPowerProfileByProfileID:0000007d .LVL156
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1012   .text.PM_PowerProfile_GetPowerProfileByProfileID:0000008b .LVL158
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1017   .text.PM_PowerProfile_GetPowerProfileByProfileID:00000094 .LVL159
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:973    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000050 .LVL151
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11509  .debug_str:00001255 .LASF273
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1114   .text.PM_PowerProfile_TotalProfileDuration:00000049 .LFE15
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9093   .debug_loc:00000df8 .LLST65
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9106   .debug_loc:00000e18 .LLST66
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11437  .debug_str:00000f59 .LASF274
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9126   .debug_loc:00000e46 .LLST67
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11381  .debug_str:00000d05 .LASF275
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9137   .debug_loc:00000e64 .LLST68
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9199   .debug_loc:00000ec0 .LLST69
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1100   .text.PM_PowerProfile_TotalProfileDuration:0000003a .LVL171
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11121  .debug_str:0000025c .LASF276
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1174   .text.PM_PowerProfile_TotalProfileEnergy:00000049 .LFE16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9207   .debug_loc:00000ed4 .LLST70
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9220   .debug_loc:00000ef4 .LLST71
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11233  .debug_str:00000690 .LASF277
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9240   .debug_loc:00000f22 .LLST72
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9251   .debug_loc:00000f40 .LLST73
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9313   .debug_loc:00000f9c .LLST74
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1160   .text.PM_PowerProfile_TotalProfileEnergy:0000003a .LVL179
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11221  .debug_str:000005fb .LASF278
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11703  .debug_str:00001a39 .LASF279
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11483  .debug_str:0000110b .LASF280
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11299  .debug_str:00000972 .LASF281
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11311  .debug_str:000009d7 .LASF282
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1582   .text.PM_PowerProfile_GetModValue:00000266 .LFE17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9321   .debug_loc:00000fb0 .LLST75
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9339   .debug_loc:00000fdd .LLST76
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11247  .debug_str:00000718 .LASF283
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9368   .debug_loc:00001022 .LLST77
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11621  .debug_str:000016e3 .LASF284
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9416   .debug_loc:00001096 .LLST78
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11623  .debug_str:000016eb .LASF285
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9464   .debug_loc:0000110a .LLST79
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11641  .debug_str:00001792 .LASF286
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9483   .debug_loc:0000113e .LLST80
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11109  .debug_str:0000021f .LASF287
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9500   .debug_loc:00001169 .LLST81
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9521   .debug_loc:0000119f .LLST82
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11099  .debug_str:000001d8 .LASF288
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11265  .debug_str:000007ca .LASF289
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11259  .debug_str:00000784 .LASF290
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11613  .debug_str:0000168a .LASF291
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11235  .debug_str:000006aa .LASF292
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11679  .debug_str:00001919 .LASF293
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9538   .debug_loc:000011ca .LLST83
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9555   .debug_loc:000011f5 .LLST84
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9577   .debug_loc:0000122c .LLST85
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9594   .debug_loc:00001257 .LLST86
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1371   .text.PM_PowerProfile_GetModValue:00000128 .LBB38
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1490   .text.PM_PowerProfile_GetModValue:000001ea .LBE38
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9615   .debug_loc:0000128d .LLST87
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9624   .debug_loc:000012a2 .LLST88
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9636   .debug_loc:000012c1 .LLST89
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1372   .text.PM_PowerProfile_GetModValue:00000128 .LBB39
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1489   .text.PM_PowerProfile_GetModValue:000001ea .LBE39
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9643   .debug_loc:000012d4 .LLST90
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9656   .debug_loc:000012f4 .LLST91
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9686   .debug_loc:00001341 .LLST92
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1384   .text.PM_PowerProfile_GetModValue:0000013c .LVL211
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1401   .text.PM_PowerProfile_GetModValue:0000015f .LVL213
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1430   .text.PM_PowerProfile_GetModValue:00000195 .LVL214
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1442   .text.PM_PowerProfile_GetModValue:000001a8 .LVL217
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1456   .text.PM_PowerProfile_GetModValue:000001c2 .LVL219
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1468   .text.PM_PowerProfile_GetModValue:000001d8 .LVL220
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1225   .text.PM_PowerProfile_GetModValue:0000004b .LVL186
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1241   .text.PM_PowerProfile_GetModValue:0000005e .LVL192
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1252   .text.PM_PowerProfile_GetModValue:00000071 .LVL194
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1267   .text.PM_PowerProfile_GetModValue:0000008a .LVL197
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1273   .text.PM_PowerProfile_GetModValue:00000095 .LVL198
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1357   .text.PM_PowerProfile_GetModValue:00000111 .LVL207
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1496   .text.PM_PowerProfile_GetModValue:000001f5 .LVL225
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1504   .text.PM_PowerProfile_GetModValue:00000201 .LVL226
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1519   .text.PM_PowerProfile_GetModValue:00000218 .LVL227
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1528   .text.PM_PowerProfile_GetModValue:00000226 .LVL228
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1542   .text.PM_PowerProfile_GetModValue:0000023b .LVL229
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1569   .text.PM_PowerProfile_GetModValue:00000259 .LVL233
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11277  .debug_str:00000830 .LASF294
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1604   .text.PM_PowerProfile_CalcDurationPartial:00000013 .LFE18
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9702   .debug_loc:0000136b .LLST93
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11225  .debug_str:00000623 .LASF295
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9715   .debug_loc:0000138b .LLST94
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9722   .debug_loc:0000139e .LLST95
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11119  .debug_str:00000253 .LASF296
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9733   .debug_loc:000013bc .LLST96
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1596   .text.PM_PowerProfile_CalcDurationPartial:00000008 .LVL237
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1621   .text.PM_PowerProfile_CalcDurationTotal:00000007 .LFE19
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9740   .debug_loc:000013cf .LLST97
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9754   .debug_loc:000013f0 .LLST98
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11491  .debug_str:00001160 .LASF297
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1671   .text.PM_PowerProfile_CalcPeakPower:00000035 .LFE20
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9768   .debug_loc:00001411 .LLST99
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11507  .debug_str:00001246 .LASF298
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9786   .debug_loc:0000143d .LLST100
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9804   .debug_loc:00001469 .LLST101
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11417  .debug_str:00000e77 .LASF299
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9822   .debug_loc:00001495 .LLST102
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11607  .debug_str:00001665 .LASF300
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9836   .debug_loc:000014b6 .LLST103
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11689  .debug_str:0000198f .LASF301
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11705  .debug_str:00001a42 .LASF302
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9847   .debug_loc:000014d4 .LLST104
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1651   .text.PM_PowerProfile_CalcPeakPower:0000001f .LVL247
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1659   .text.PM_PowerProfile_CalcPeakPower:0000002a .LVL249
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11293  .debug_str:000008fb .LASF303
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1729   .text.PM_PowerProfile_CalcEnergy:0000003e .LFE21
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11487  .debug_str:00001124 .LASF304
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9859   .debug_loc:000014f3 .LLST105
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11313  .debug_str:000009f3 .LASF305
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9873   .debug_loc:00001514 .LLST106
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9887   .debug_loc:00001535 .LLST107
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11347  .debug_str:00000b9c .LASF306
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9901   .debug_loc:00001556 .LLST108
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11403  .debug_str:00000e08 .LASF307
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:9923   .debug_loc:0000158d .LLST109
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11455  .debug_str:0000102c .LASF308
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10023  .debug_loc:00001616 .LLST110
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11617  .debug_str:000016bb .LASF309
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11421  .debug_str:00000e9c .LASF310
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2005   .text.PM_PowerProfile_GetPowerProfile:000001a3 .LFE7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10123  .debug_loc:0000169f .LLST111
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10141  .debug_loc:000016cc .LLST112
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10170  .debug_loc:00001711 .LLST113
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11769  .debug_str:00001cc6 .LASF311
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10207  .debug_loc:00001765 .LLST114
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10221  .debug_loc:00001786 .LLST115
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11425  .debug_str:00000ee8 .LASF312
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11367  .debug_str:00000ca6 .LASF313
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10232  .debug_loc:000017a4 .LLST116
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11435  .debug_str:00000f41 .LASF314
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10249  .debug_loc:000017cf .LLST117
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10266  .debug_loc:000017fa .LLST118
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11275  .debug_str:00000817 .LASF315
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10278  .debug_loc:00001819 .LLST119
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10300  .debug_loc:00001850 .LLST120
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11515  .debug_str:00001299 .LASF316
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10321  .debug_loc:00001886 .LLST121
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10338  .debug_loc:000018b1 .LLST122
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10345  .debug_loc:000018c4 .LLST123
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11443  .debug_str:00000f86 .LASF317
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10358  .debug_loc:000018e4 .LLST124
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10428  .debug_loc:00001947 .LLST125
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11353  .debug_str:00000bf3 .LASF318
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10441  .debug_loc:00001967 .LLST126
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11243  .debug_str:00000702 .LASF319
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10511  .debug_loc:000019ca .LLST127
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11127  .debug_str:0000028d .LASF320
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10535  .debug_loc:000019ee .LLST128
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11595  .debug_str:000015c1 .LASF321
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11269  .debug_str:000007e7 .LASF322
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10559  .debug_loc:00001a12 .LLST129
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10572  .debug_loc:00001a32 .LLST130
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10585  .debug_loc:00001a52 .LLST131
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10609  .debug_loc:00001a76 .LLST132
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1863   .text.PM_PowerProfile_GetPowerProfile:000000d1 .LBB40
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1870   .text.PM_PowerProfile_GetPowerProfile:000000d8 .LBE40
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10631  .debug_loc:00001aad .LLST133
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10640  .debug_loc:00001ac5 .LLST134
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10648  .debug_loc:00001ad9 .LLST135
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1761   .text.PM_PowerProfile_GetPowerProfile:0000002c .LVL266
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1768   .text.PM_PowerProfile_GetPowerProfile:00000038 .LVL267
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1809   .text.PM_PowerProfile_GetPowerProfile:00000076 .LVL275
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1835   .text.PM_PowerProfile_GetPowerProfile:000000a3 .LVL279
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1840   .text.PM_PowerProfile_GetPowerProfile:000000ac .LVL280
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1857   .text.PM_PowerProfile_GetPowerProfile:000000c8 .LVL283
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1862   .text.PM_PowerProfile_GetPowerProfile:000000d1 .LVL284
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1886   .text.PM_PowerProfile_GetPowerProfile:000000f4 .LVL287
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1893   .text.PM_PowerProfile_GetPowerProfile:00000101 .LVL288
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1907   .text.PM_PowerProfile_GetPowerProfile:0000011a .LVL289
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1912   .text.PM_PowerProfile_GetPowerProfile:00000123 .LVL290
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1917   .text.PM_PowerProfile_GetPowerProfile:0000012c .LVL291
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1925   .text.PM_PowerProfile_GetPowerProfile:0000013e .LVL292
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2000   .text.PM_PowerProfile_GetPowerProfile:0000019c .LVL306
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11395  .debug_str:00000d96 .LASF323
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2136   .text.PM_PowerProfile_ComputeTimeToEnd:0000009b .LFE25
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10656  .debug_loc:00001aed .LLST136
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10674  .debug_loc:00001b19 .LLST137
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11239  .debug_str:000006dc .LASF324
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10699  .debug_loc:00001b53 .LLST138
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10713  .debug_loc:00001b74 .LLST139
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11139  .debug_str:000002fe .LASF325
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10742  .debug_loc:00001bb9 .LLST140
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11555  .debug_str:00001416 .LASF326
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11273  .debug_str:0000080b .LASF327
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10771  .debug_loc:00001bfe .LLST141
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11695  .debug_str:000019cf .LASF328
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10788  .debug_loc:00001c29 .LLST142
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11675  .debug_str:000018eb .LASF329
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10809  .debug_loc:00001c5f .LLST143
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10826  .debug_loc:00001c8a .LLST144
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2042   .text.PM_PowerProfile_ComputeTimeToEnd:0000001f .LVL315
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2068   .text.PM_PowerProfile_ComputeTimeToEnd:00000050 .LVL318
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2083   .text.PM_PowerProfile_ComputeTimeToEnd:0000006b .LVL320
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11203  .debug_str:0000054f .LASF330
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2147   .text.PM_PowerProfile_IsRecomputationReady:00000001 .LFE26
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11303  .debug_str:00000983 .LASF331
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11251  .debug_str:00000741 .LASF332
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2246   .text.PM_PowerProfile_UpdateTemporalFilters:0000008c .LFE27
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10851  .debug_loc:00001ccb .LLST145
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11095  .debug_str:000001a8 .LASF333
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10865  .debug_loc:00001cec .LLST146
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11387  .debug_str:00000d60 .LASF334
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10883  .debug_loc:00001d18 .LLST147
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11319  .debug_str:00000a30 .LASF335
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10900  .debug_loc:00001d49 .LLST148
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10917  .debug_loc:00001d7a .LLST149
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2223   .text.PM_PowerProfile_UpdateTemporalFilters:00000070 .LVL338
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2243   .text.PM_PowerProfile_UpdateTemporalFilters:0000008b .LVL341
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11335  .debug_str:00000ac7 .LASF336
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11495  .debug_str:00001191 .LASF337
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11227  .debug_str:00000631 .LASF338
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11289  .debug_str:000008b4 .LASF339
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11107  .debug_str:0000020b .LASF340
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11745  .debug_str:00001bff .LASF341
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11191  .debug_str:000004f7 .LASF342
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11479  .debug_str:000010f1 .LASF343
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11721  .debug_str:00001aed .LASF345
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11189  .debug_str:000004d6 .LASF346
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11573  .debug_str:000014ea .LASF347
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11399  .debug_str:00000dd1 .LASF348
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11307  .debug_str:000009a3 .LASF349
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11543  .debug_str:0000139d .LASF350
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11283  .debug_str:00000882 .LASF351
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11165  .debug_str:00000428 .LASF352
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11337  .debug_str:00000ae9 .LASF353
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11141  .debug_str:00000317 .LASF354
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:11279  .debug_str:00000854 .LASF355
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:10     .text.PM_PowerProfile_ModTab_ExtendValue:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:24     .text.PM_PowerProfile_ModTab_ExtendValue:00000012 .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:27     .text.PM_PowerProfile_ModTab_ExtendValue:00000013 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:31     .text.PM_PowerProfile_ModTab_ExtendValue:00000015 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:34     .text.PM_PowerProfile_ModTab_ExtendValue:00000016 .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:38     .text.PM_PowerProfile_ModTab_ExtendValue:00000018 .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:41     .text.PM_PowerProfile_ModTab_ExtendValue:00000019 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:45     .text.PM_PowerProfile_ModTab_ExtendValue:0000001b .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:48     .text.PM_PowerProfile_ModTab_ExtendValue:0000001c .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:52     .text.PM_PowerProfile_ModTab_ExtendValue:0000001e .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:64     .text.PM_PowerProfile_GetEnergyPhaseID:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:66     .text.PM_PowerProfile_GetEnergyPhaseID:00000004 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:62     .text.PM_PowerProfile_GetEnergyPhaseID:00000000 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:77     .text.PM_PowerProfile_GetEnergyPhaseID:00000012 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:75     .text.PM_PowerProfile_GetEnergyPhaseID:00000010 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:164    .text.PM_PowerProfile_GetEnergyPhaseID:00000076 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:79     .text.PM_PowerProfile_GetEnergyPhaseID:00000014 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:72     .text.PM_PowerProfile_GetEnergyPhaseID:0000000e .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:95     .text.PM_PowerProfile_GetEnergyPhaseID:0000002d .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:160    .text.PM_PowerProfile_GetEnergyPhaseID:00000073 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:88     .text.PM_PowerProfile_GetEnergyPhaseID:00000025 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:102    .text.PM_PowerProfile_GetEnergyPhaseID:00000034 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:107    .text.PM_PowerProfile_GetEnergyPhaseID:0000003c .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:147    .text.PM_PowerProfile_GetEnergyPhaseID:00000067 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:128    .text.PM_PowerProfile_GetEnergyPhaseID:00000058 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:133    .text.PM_PowerProfile_GetEnergyPhaseID:0000005c .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:143    .text.PM_PowerProfile_GetEnergyPhaseID:00000065 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:169    .text.PM_PowerProfile_GetEnergyPhaseID:00000079 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:180    .text.PM_PowerProfile_ModTab_QueryTable:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:182    .text.PM_PowerProfile_ModTab_QueryTable:00000005 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:178    .text.PM_PowerProfile_ModTab_QueryTable:00000000 .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:246    .text.PM_PowerProfile_ModTab_QueryTable:00000047 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:479    .text.PM_PowerProfile_ModTab_QueryTable:00000185 .LVL86
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:484    .text.PM_PowerProfile_ModTab_QueryTable:00000189 .LVL87
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:232    .text.PM_PowerProfile_ModTab_QueryTable:00000031 .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:212    .text.PM_PowerProfile_ModTab_QueryTable:0000001c .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:185    .text.PM_PowerProfile_ModTab_QueryTable:00000009 .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:223    .text.PM_PowerProfile_ModTab_QueryTable:00000026 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:228    .text.PM_PowerProfile_ModTab_QueryTable:0000002c .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:475    .text.PM_PowerProfile_ModTab_QueryTable:00000181 .LVL85
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:238    .text.PM_PowerProfile_ModTab_QueryTable:0000003f .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:243    .text.PM_PowerProfile_ModTab_QueryTable:00000045 .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:488    .text.PM_PowerProfile_ModTab_QueryTable:0000018b .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:306    .text.PM_PowerProfile_ModTab_QueryTable:00000095 .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:318    .text.PM_PowerProfile_ModTab_QueryTable:000000a9 .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:321    .text.PM_PowerProfile_ModTab_QueryTable:000000ab .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:457    .text.PM_PowerProfile_ModTab_QueryTable:00000167 .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:466    .text.PM_PowerProfile_ModTab_QueryTable:00000177 .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:251    .text.PM_PowerProfile_ModTab_QueryTable:00000050 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:260    .text.PM_PowerProfile_ModTab_QueryTable:0000005d .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:287    .text.PM_PowerProfile_ModTab_QueryTable:00000082 .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:296    .text.PM_PowerProfile_ModTab_QueryTable:0000008c .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:437    .text.PM_PowerProfile_ModTab_QueryTable:0000014c .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:266    .text.PM_PowerProfile_ModTab_QueryTable:00000068 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:326    .text.PM_PowerProfile_ModTab_QueryTable:000000b3 .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:365    .text.PM_PowerProfile_ModTab_QueryTable:000000e7 .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:409    .text.PM_PowerProfile_ModTab_QueryTable:0000013e .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:411    .text.PM_PowerProfile_ModTab_QueryTable:00000140 .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:430    .text.PM_PowerProfile_ModTab_QueryTable:0000014a .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:271    .text.PM_PowerProfile_ModTab_QueryTable:0000006f .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:195    .text.PM_PowerProfile_ModTab_QueryTable:0000000d .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:300    .text.PM_PowerProfile_ModTab_QueryTable:0000008e .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:392    .text.PM_PowerProfile_ModTab_QueryTable:0000011c .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:424    .text.PM_PowerProfile_ModTab_QueryTable:00000147 .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:426    .text.PM_PowerProfile_ModTab_QueryTable:00000148 .LVL77
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:209    .text.PM_PowerProfile_ModTab_QueryTable:0000001a .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:356    .text.PM_PowerProfile_ModTab_QueryTable:000000df .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:358    .text.PM_PowerProfile_ModTab_QueryTable:000000e1 .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:415    .text.PM_PowerProfile_ModTab_QueryTable:00000142 .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:417    .text.PM_PowerProfile_ModTab_QueryTable:00000143 .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:421    .text.PM_PowerProfile_ModTab_QueryTable:00000145 .LVL75
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:190    .text.PM_PowerProfile_ModTab_QueryTable:0000000b .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:559    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000002 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:561    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000004 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:557    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000000 .LVL91
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:566    .text.PM_PowerProfile_UpdatePowerProfileStatus:0000000d .LVL92
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:627    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000058 .LVL106
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:587    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000023 .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:569    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000013 .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:576    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000019 .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:580    .text.PM_PowerProfile_UpdatePowerProfileStatus:0000001d .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:582    .text.PM_PowerProfile_UpdatePowerProfileStatus:0000001f .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:592    .text.PM_PowerProfile_UpdatePowerProfileStatus:0000002d .LVL100
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:605    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000042 .LVL102
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:615    .text.PM_PowerProfile_UpdatePowerProfileStatus:0000004d .LVL103
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:617    .text.PM_PowerProfile_UpdatePowerProfileStatus:0000004e .LVL104
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:621    .text.PM_PowerProfile_UpdatePowerProfileStatus:00000050 .LVL105
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:631    .text.PM_PowerProfile_UpdatePowerProfileStatus:0000005d .LVL107
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:643    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000002 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:645    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000005 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:641    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000000 .LVL108
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:666    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000024 .LVL112
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:698    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000004f .LVL119
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:704    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000055 .LVL120
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:716    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000005c .LVL122
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:668    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000026 .LVL113
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:664    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000022 .LVL111
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:782    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:000000ab .LVL133
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:670    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000028 .LVL114
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:776    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000009d .LVL132
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:653    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000014 .LVL109
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:720    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000005e .LVL123
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:738    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000071 .LVL125
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:742    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000077 .LVL126
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:682    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000039 .LVL116
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:749    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000007d .LVL127
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:755    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000082 .LVL128
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:763    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000008a .LVL130
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:710    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000057 .LVL121
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:735    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000006f .LVL124
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:657    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000001a .LVL110
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:692    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000041 .LVL118
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:760    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:00000086 .LVL129
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:687    .text.PM_PowerProfile_GetEnergyPhaseMaxActivationDelay:0000003f .LVL117
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:796    .text.PM_PowerProfile_SetDuration:00000000 .LVL134
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:826    .text.PM_PowerProfile_SetDuration:00000027 .LVL137
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:801    .text.PM_PowerProfile_SetDuration:00000006 .LVL135
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:817    .text.PM_PowerProfile_SetDuration:0000001c .LVL136
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:841    .text.PM_PowerProfile_SetForceReload:00000006 .LVL139
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:857    .text.PM_PowerProfile_SetForceReload:0000001c .LVL140
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:880    .text.PM_PowerProfile_ResetForceReload:00000006 .LVL142
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:896    .text.PM_PowerProfile_ResetForceReload:0000001c .LVL143
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:916    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:914    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000000 .LVL144
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:971    .text.PM_PowerProfile_GetPowerProfileByProfileID:0000004c .LVL150
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1034   .text.PM_PowerProfile_GetPowerProfileByProfileID:000000b4 .LVL161
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1049   .text.PM_PowerProfile_GetPowerProfileByProfileID:000000c6 .LVL163
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:917    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000002 .LVL145
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:951    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000031 .LVL148
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:957    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000035 .LVL149
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1041   .text.PM_PowerProfile_GetPowerProfileByProfileID:000000bd .LVL162
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:922    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000008 .LVL146
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:938    .text.PM_PowerProfile_GetPowerProfileByProfileID:0000001c .LVL147
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:988    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000068 .LVL153
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:990    .text.PM_PowerProfile_GetPowerProfileByProfileID:00000069 .LVL154
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:994    .text.PM_PowerProfile_GetPowerProfileByProfileID:0000006b .LVL155
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1019   .text.PM_PowerProfile_GetPowerProfileByProfileID:00000097 .LVL160
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1008   .text.PM_PowerProfile_GetPowerProfileByProfileID:00000083 .LVL157
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:981    .text.PM_PowerProfile_GetPowerProfileByProfileID:0000005f .LVL152
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1064   .text.PM_PowerProfile_TotalProfileDuration:00000002 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1062   .text.PM_PowerProfile_TotalProfileDuration:00000000 .LVL164
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1070   .text.PM_PowerProfile_TotalProfileDuration:0000000e .LVL165
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1082   .text.PM_PowerProfile_TotalProfileDuration:0000001f .LVL168
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1089   .text.PM_PowerProfile_TotalProfileDuration:0000002b .LVL170
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1072   .text.PM_PowerProfile_TotalProfileDuration:00000011 .LVL166
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1077   .text.PM_PowerProfile_TotalProfileDuration:00000018 .LVL167
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1085   .text.PM_PowerProfile_TotalProfileDuration:00000027 .LVL169
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1124   .text.PM_PowerProfile_TotalProfileEnergy:00000002 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1122   .text.PM_PowerProfile_TotalProfileEnergy:00000000 .LVL172
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1130   .text.PM_PowerProfile_TotalProfileEnergy:0000000e .LVL173
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1142   .text.PM_PowerProfile_TotalProfileEnergy:0000001f .LVL176
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1149   .text.PM_PowerProfile_TotalProfileEnergy:0000002b .LVL178
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1132   .text.PM_PowerProfile_TotalProfileEnergy:00000011 .LVL174
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1137   .text.PM_PowerProfile_TotalProfileEnergy:00000018 .LVL175
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1145   .text.PM_PowerProfile_TotalProfileEnergy:00000027 .LVL177
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1184   .text.PM_PowerProfile_GetModValue:00000002 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1186   .text.PM_PowerProfile_GetModValue:00000005 .LCFI12
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1182   .text.PM_PowerProfile_GetModValue:00000000 .LVL180
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1219   .text.PM_PowerProfile_GetModValue:00000043 .LVL183
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1230   .text.PM_PowerProfile_GetModValue:00000050 .LVL188
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1575   .text.PM_PowerProfile_GetModValue:0000025d .LVL235
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1221   .text.PM_PowerProfile_GetModValue:00000045 .LVL184
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1235   .text.PM_PowerProfile_GetModValue:00000055 .LVL189
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1300   .text.PM_PowerProfile_GetModValue:000000bd .LVL201
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1304   .text.PM_PowerProfile_GetModValue:000000c2 .LVL202
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1324   .text.PM_PowerProfile_GetModValue:000000db .LVL203
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1571   .text.PM_PowerProfile_GetModValue:0000025a .LVL234
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1223   .text.PM_PowerProfile_GetModValue:00000047 .LVL185
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1228   .text.PM_PowerProfile_GetModValue:0000004d .LVL187
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1237   .text.PM_PowerProfile_GetModValue:00000057 .LVL190
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1258   .text.PM_PowerProfile_GetModValue:00000075 .LVL196
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1239   .text.PM_PowerProfile_GetModValue:0000005a .LVL191
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1193   .text.PM_PowerProfile_GetModValue:00000011 .LVL181
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1247   .text.PM_PowerProfile_GetModValue:00000068 .LVL193
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1255   .text.PM_PowerProfile_GetModValue:00000073 .LVL195
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1348   .text.PM_PowerProfile_GetModValue:000000fe .LVL206
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1340   .text.PM_PowerProfile_GetModValue:000000ef .LVL205
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1365   .text.PM_PowerProfile_GetModValue:0000011e .LVL208
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1209   .text.PM_PowerProfile_GetModValue:00000030 .LVL182
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1287   .text.PM_PowerProfile_GetModValue:000000a8 .LVL200
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1283   .text.PM_PowerProfile_GetModValue:000000a3 .LVL199
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1370   .text.PM_PowerProfile_GetModValue:00000128 .LVL209
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1435   .text.PM_PowerProfile_GetModValue:0000019b .LVL216
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1378   .text.PM_PowerProfile_GetModValue:00000131 .LVL210
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1433   .text.PM_PowerProfile_GetModValue:00000199 .LVL215
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1470   .text.PM_PowerProfile_GetModValue:000001d9 .LVL221
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1475   .text.PM_PowerProfile_GetModValue:000001df .LVL222
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1477   .text.PM_PowerProfile_GetModValue:000001e1 .LVL223
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1481   .text.PM_PowerProfile_GetModValue:000001e5 .LVL224
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1390   .text.PM_PowerProfile_GetModValue:00000145 .LVL212
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1447   .text.PM_PowerProfile_GetModValue:000001b0 .LVL218
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1592   .text.PM_PowerProfile_CalcDurationPartial:00000002 .LCFI13
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1590   .text.PM_PowerProfile_CalcDurationPartial:00000000 .LVL236
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1599   .text.PM_PowerProfile_CalcDurationPartial:0000000c .LVL238
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1612   .text.PM_PowerProfile_CalcDurationTotal:00000000 .LVL239
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1619   .text.PM_PowerProfile_CalcDurationTotal:00000006 .LVL241
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1615   .text.PM_PowerProfile_CalcDurationTotal:00000002 .LVL240
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1631   .text.PM_PowerProfile_CalcPeakPower:00000002 .LCFI14
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1633   .text.PM_PowerProfile_CalcPeakPower:00000004 .LCFI15
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1629   .text.PM_PowerProfile_CalcPeakPower:00000000 .LVL242
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1643   .text.PM_PowerProfile_CalcPeakPower:00000015 .LVL243
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1645   .text.PM_PowerProfile_CalcPeakPower:00000017 .LVL244
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1647   .text.PM_PowerProfile_CalcPeakPower:00000019 .LVL245
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1649   .text.PM_PowerProfile_CalcPeakPower:0000001b .LVL246
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1654   .text.PM_PowerProfile_CalcPeakPower:00000023 .LVL248
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1667   .text.PM_PowerProfile_CalcPeakPower:00000030 .LVL250
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1679   .text.PM_PowerProfile_CalcEnergy:00000000 .LVL251
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1714   .text.PM_PowerProfile_CalcEnergy:00000032 .LVL260
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1696   .text.PM_PowerProfile_CalcEnergy:00000016 .LVL256
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1698   .text.PM_PowerProfile_CalcEnergy:00000019 .LVL257
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1711   .text.PM_PowerProfile_CalcEnergy:00000030 .LVL259
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1716   .text.PM_PowerProfile_CalcEnergy:00000033 .LVL261
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1722   .text.PM_PowerProfile_CalcEnergy:00000039 .LVL262
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1727   .text.PM_PowerProfile_CalcEnergy:0000003d .LVL263
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1692   .text.PM_PowerProfile_CalcEnergy:00000012 .LVL254
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1694   .text.PM_PowerProfile_CalcEnergy:00000014 .LVL255
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1682   .text.PM_PowerProfile_CalcEnergy:00000003 .LVL252
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1684   .text.PM_PowerProfile_CalcEnergy:00000005 .LVL253
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1739   .text.PM_PowerProfile_GetPowerProfile:00000002 .LCFI16
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1741   .text.PM_PowerProfile_GetPowerProfile:00000005 .LCFI17
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1737   .text.PM_PowerProfile_GetPowerProfile:00000000 .LVL264
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1797   .text.PM_PowerProfile_GetPowerProfile:00000067 .LVL273
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1990   .text.PM_PowerProfile_GetPowerProfile:00000193 .LVL304
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1994   .text.PM_PowerProfile_GetPowerProfile:00000196 .LVL305
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1785   .text.PM_PowerProfile_GetPowerProfile:00000052 .LVL270
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1790   .text.PM_PowerProfile_GetPowerProfile:00000060 .LVL271
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1752   .text.PM_PowerProfile_GetPowerProfile:0000001d .LVL265
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1781   .text.PM_PowerProfile_GetPowerProfile:0000004e .LVL269
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1973   .text.PM_PowerProfile_GetPowerProfile:00000177 .LVL301
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1800   .text.PM_PowerProfile_GetPowerProfile:0000006a .LVL274
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1818   .text.PM_PowerProfile_GetPowerProfile:00000087 .LVL276
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1951   .text.PM_PowerProfile_GetPowerProfile:00000161 .LVL296
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1774   .text.PM_PowerProfile_GetPowerProfile:00000045 .LVL268
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1932   .text.PM_PowerProfile_GetPowerProfile:0000014f .LVL293
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1958   .text.PM_PowerProfile_GetPowerProfile:00000166 .LVL298
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1981   .text.PM_PowerProfile_GetPowerProfile:00000182 .LVL302
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1940   .text.PM_PowerProfile_GetPowerProfile:00000159 .LVL294
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1955   .text.PM_PowerProfile_GetPowerProfile:00000163 .LVL297
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1792   .text.PM_PowerProfile_GetPowerProfile:00000063 .LVL272
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1983   .text.PM_PowerProfile_GetPowerProfile:00000185 .LVL303
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1868   .text.PM_PowerProfile_GetPowerProfile:000000d8 .LVL285
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1825   .text.PM_PowerProfile_GetPowerProfile:0000008f .LVL277
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1827   .text.PM_PowerProfile_GetPowerProfile:00000091 .LVL278
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1847   .text.PM_PowerProfile_GetPowerProfile:000000b4 .LVL281
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1849   .text.PM_PowerProfile_GetPowerProfile:000000b6 .LVL282
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:1875   .text.PM_PowerProfile_GetPowerProfile:000000df .LVL286
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2722   .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2015   .text.PM_PowerProfile_ComputeTimeToEnd:00000002 .LCFI18
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2017   .text.PM_PowerProfile_ComputeTimeToEnd:00000004 .LCFI19
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2013   .text.PM_PowerProfile_ComputeTimeToEnd:00000000 .LVL307
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2027   .text.PM_PowerProfile_ComputeTimeToEnd:0000000f .LVL311
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2033   .text.PM_PowerProfile_ComputeTimeToEnd:00000015 .LVL312
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2025   .text.PM_PowerProfile_ComputeTimeToEnd:0000000e .LVL310
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2038   .text.PM_PowerProfile_ComputeTimeToEnd:00000019 .LVL313
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2040   .text.PM_PowerProfile_ComputeTimeToEnd:0000001b .LVL314
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2019   .text.PM_PowerProfile_ComputeTimeToEnd:00000007 .LVL308
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2057   .text.PM_PowerProfile_ComputeTimeToEnd:0000003a .LVL317
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2088   .text.PM_PowerProfile_ComputeTimeToEnd:0000006f .LVL322
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2110   .text.PM_PowerProfile_ComputeTimeToEnd:00000085 .LVL326
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2117   .text.PM_PowerProfile_ComputeTimeToEnd:00000089 .LVL328
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2123   .text.PM_PowerProfile_ComputeTimeToEnd:0000008f .LVL329
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2022   .text.PM_PowerProfile_ComputeTimeToEnd:0000000a .LVL309
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2051   .text.PM_PowerProfile_ComputeTimeToEnd:00000032 .LVL316
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2130   .text.PM_PowerProfile_ComputeTimeToEnd:00000096 .LVL330
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2095   .text.PM_PowerProfile_ComputeTimeToEnd:00000079 .LVL323
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2155   .text.PM_PowerProfile_UpdateTemporalFilters:00000000 .LVL332
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2165   .text.PM_PowerProfile_UpdateTemporalFilters:0000000f .LVL335
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2159   .text.PM_PowerProfile_UpdateTemporalFilters:00000008 .LVL333
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2208   .text.PM_PowerProfile_UpdateTemporalFilters:00000056 .LVL336
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2162   .text.PM_PowerProfile_UpdateTemporalFilters:0000000b .LVL334
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2212   .text.PM_PowerProfile_UpdateTemporalFilters:0000005b .LVL337
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:2229   .text.PM_PowerProfile_UpdateTemporalFilters:0000007d .LVL339
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:192    .text.PM_PowerProfile_ModTab_QueryTable:0000000b .LBE6
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:215    .text.PM_PowerProfile_ModTab_QueryTable:00000021 .LBB9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:220    .text.PM_PowerProfile_ModTab_QueryTable:00000023 .LBE9
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:187    .text.PM_PowerProfile_ModTab_QueryTable:00000009 .LBB7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:191    .text.PM_PowerProfile_ModTab_QueryTable:0000000b .LBE7
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:216    .text.PM_PowerProfile_ModTab_QueryTable:00000021 .LBB8
C:\Users\Andrea\AppData\Local\Temp\ccVvy96n.s:219    .text.PM_PowerProfile_ModTab_QueryTable:00000023 .LBE8

UNDEFINED SYMBOLS
_MSettingBasicLoader
_LIB_Fixed_FromClampedAccumulator
_LIB_Fixed_LerpY
_LIB_Fixed_Round
_Endian16_Swap
_LIB_Fixed_Const_ZERO
_LIB_Fixed_FromInt
_LIB_Fixed_Mul
_LIB_Fixed_Const_MIN
_LIB_Fixed_Const_MAX
_LIB_Fixed_Const_ONE
_LIB_Fixed_Cmp
_LIB_Fixed_Add
_UsePowerProfile
_UnusePowerProfile
