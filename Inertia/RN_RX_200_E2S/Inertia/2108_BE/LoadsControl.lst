   1                             		.file	"LoadsControl.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.LDC_activateLoads,"ax",@progbits
   6                             	_LDC_activateLoads:
   7                             	.LFB4:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules/LoadsControl.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	/*
   2:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** ** **************************************************************************
   3:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** ** **************************************************************************
   4:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */ 
   5:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**
   6:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Gestisce il microprogramma LoadsControl per il pilotaggio dei carichi.
   7:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
   8:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Source file
   9:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
  10:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \file    	LoadsControl.c
  11:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
  12:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \version 	1.0.0
  13:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \date    	21/02/2008
  14:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \author  Roberto Fioravanti
  15:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  16:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */ 
  17:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /*
  18:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** ** **************************************************************************
  19:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** ** **************************************************************************
  20:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
  21:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  22:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /*
  23:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Copyright (c) 2004-2008, Indesit Company, IDD.
  24:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Tutti i diritti sono riservati. All rights reserved.
  25:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
  26:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  27:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Old Versions
  28:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \version 
  29:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \date    
  30:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \author
  31:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
  32:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  33:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  34:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /** 
  35:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \note : 
  36:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */ 
  37:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  38:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  39:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ******** */
  40:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Includes */
  41:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ******** */
  42:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  43:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #include "CstmHeaders.h"
  44:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  45:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ****************** */
  46:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Defines and Macros */
  47:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ****************** */
  48:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #define LDC_SEQ1_TABLE_LEN				3
  49:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  50:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  51:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* *************************** */
  52:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Typedef, Structs and Unions */
  53:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* *************************** */
  54:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  55:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  56:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* **************************** */
  57:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Prototype of local functions */
  58:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* **************************** */
  59:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static void LDC_pulseSeq_Init(loadsPulse_Struct *p,SWTC_CountersType indice);
  60:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static bool_t LDC_pulseStepMgmt(loadsPulse_Struct *p, SWTC_CountersType indice);
  61:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static void LDC_pulseLoadMgmt(loadsPulse_Struct const *p);
  62:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static void LDC_activateLoads(uint16_t loadBitmap);
  63:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  64:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ****************** */
  65:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Exported variables */
  66:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ****************** */
  67:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  68:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* **************** */
  69:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Global variables */
  70:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* **************** */
  71:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  72:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint16_t enabledloads_mask;
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  74:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ***************** */
  75:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Exported function */
  76:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ***************** */
  77:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  78:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**
  79:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Gestisce l'esecuzione del microprogramma LoadsControl.
  80:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** E' possibile attivare carichi in continua o a impulsi.
  81:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Nella modalità ad impulsi è possibile specificare il tipo di sequenza e 
  82:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** fino ad un massimo di due set di carichi indipendenti.
  83:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  84:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Lo stato dei carichi non selezionati nella/e bitmap viene ignorato.
  85:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  86:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  87:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  88:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
  89:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \return S_OK se la condizione di avanzamento passo per il microprogramma è verificata (nel caso di 
  90:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** almeno una volta)
  91:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \return S_FALSE se non è ancora verificata
  92:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \return codice di errore in altri casi
  93:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  94:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \par \bSospensione del microprogramma
  95:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Il microprogramma (ritorma sempre S_FALSE) viene sospeso durante:
  96:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** -porta aperta o timeout di porta aperta
  97:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** -Master rele
  98:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
  99:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** In queste condizioni fa eccezione la pompa scarico che può continuare ad essere pilotata.
 100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \note   Il controllo sulla sovrapposizione tra le due bitmap bitmap deve essere fatto in Editor.
 103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \version		1.0.0
 105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \date 			26/02/2008
 106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \author			Roberto Fioravanti
 107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
 110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint8_t LDC_uP_LoadsControl_Exe (uint8_t highStatement,uint8_t lowStatement)
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** {
 112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Loader_Struct lcDirect_SettingData;
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint8_t nRet = S_FALSE;
 114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** bool_t  suspend;
 115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	if ( (FALSE == Interpreter_Data[0].stepInitialized) || (FALSE == Interpreter_Data[0].optionalStepI
 118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	{/* Init passo o restore from backup */
 119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		switch ( (highStatement & LDC_DRIVE_TYPE_MSK) )
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{
 122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			case LDC_PULSE_DRIVE:
 124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* LoadsControl con profilo: Init Data */
 126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				if (BasicLoader(PTR_UP_LOADSCONTROL, lowStatement, &uPLoadsControl_setting_data) != S_OK )
 127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				{
 128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					/* Non esegue il uP, ma viene abilitato l'avanzamento passo */
 129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					nRet = S_OK;
 130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				}
 131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				else
 132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				{
 133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					/* Dati caricati correttamente: Init */
 134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					uP_LoadsControl_Data.status = LOADSCONTROL_INIT;
 136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					/* seq #1 */
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					loadsPulseData1.offset = SEQ1_OFFSET;				
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					LDC_pulseSeq_Init(&loadsPulseData1,(SWTC_CountersType)MP_LOADCONTROL_M_COUNTER1);
 140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					if (uPLoadsControl_setting_data.DataLenght > LDC_SEQ1_TABLE_LEN) 
 142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					{				  
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 						/* seq #2 */
 144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 						loadsPulseData2.offset = SEQ2_OFFSET;
 145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 						LDC_pulseSeq_Init(&loadsPulseData2,(SWTC_CountersType)MP_LOADCONTROL_M_COUNTER2);
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					} 
 147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				}
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				break;
 149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			default:
 152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/*			
 154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				case LDC_NOSTOP_DRIVE:
 155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				Per quanto riguarda LoadsControl in continua, nella prima iterazione
 157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				non vengono pilotati i carichi, non viene data la condizione di uscita
 158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				e soprattutto non vengono inizializzate le variabili relative alla
 159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				modalità di pilotaggio con profilo. In pratica non fa nulla, 
 160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				ma lo fa con molta attenzione.
 161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				(In questo modo si possono usare più LoadsControl in continua nello stesso passo)
 162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				*/
 163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				break;
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	}
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	else 
 169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	{
 170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		suspend = FALSE;
 171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		if ( uPDoorStatus == UP_DOOR_WAIT )
 173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{ /* porta aperta o in attesa di timeout dopo la chiusura o delay MR -> il uP va sospeso */   
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			suspend=TRUE;          				    
 175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		if(suspend)
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{  	
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			enabledloads_mask = 0;
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if( Pump_Pos[LD_DRAIN_PUMP_IND] != NO_LD_POS )
 181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			{
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				enabledloads_mask |= (1<<Pump_Pos[LD_DRAIN_PUMP_IND]);
 183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			}
 184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			nRet = S_FALSE;
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		else
 188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #ifdef _CORRECT_LOADS_CONTROL_BUG_
 190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			enabledloads_mask=0xFFFF;
 191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #else
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			enabledloads_mask=0xFF;
 193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #endif /* !_CORRECT_LOADS_CONTROL_BUG_ */
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			nRet = S_OK;
 195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		if ((highStatement & LDC_DRIVE_TYPE_MSK) == LDC_NOSTOP_DRIVE)
 198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		/* Esecuzione LoadsControl in continua */
 200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if (BasicLoader(PTR_UP_LOADSCONTROL, lowStatement, &lcDirect_SettingData) == S_OK)
 202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			{
 203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* Caricata la bitmap dei carichi */
 204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* Viene effettuato il pilotaggio */
 206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				LDC_activateLoads((*((uint16_t*) lcDirect_SettingData.Data)) & enabledloads_mask);
 207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			}
 208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			else
 209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			{
 210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* Errore nel caricamento */
 211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* Non pilota i carichi, ma si abilita comunque l'avanzamento passo */
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			}
 213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		else
 215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			/* Esecuzione LoadsControl con profilo */  		
 217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			/* Pilotaggio carichi */ 
 219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			LDC_pulseLoadMgmt(&loadsPulseData1);
 220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			/**/
 221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			/* Gestione transizione stati */
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if(LDC_pulseStepMgmt(&loadsPulseData1,(SWTC_CountersType)MP_LOADCONTROL_M_COUNTER1)) 
 224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			{		  
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				uP_LoadsControl_Data.status|=LOADSCONTROL_SEQ1_DONE_MSK;
 226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			}
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			/* seq 2 */
 229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if (uPLoadsControl_setting_data.DataLenght > LDC_SEQ1_TABLE_LEN)
 230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			{/* Presente la sequenza 2 */
 231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* Gestione transizione stati */
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				if(LDC_pulseStepMgmt(&loadsPulseData2,(SWTC_CountersType)MP_LOADCONTROL_M_COUNTER2)) 
 234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				{			  
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					uP_LoadsControl_Data.status|=LOADSCONTROL_SEQ2_DONE_MSK;
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				}
 237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* Pilotaggio carichi */ 
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				LDC_pulseLoadMgmt(&loadsPulseData2);			
 239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			} 
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			else 
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			{	
 242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* seq 2 non presente:
 243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				viene rimosso il blocco all'avanzamento passo che la riguarda
 244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				*/
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				uP_LoadsControl_Data.status|=LOADSCONTROL_SEQ2_DONE_MSK;
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			}
 247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			/**/
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if (LOADSCONTROL_ALL_SEQ_DONE_MSK == (uP_LoadsControl_Data.status & LOADSCONTROL_ALL_SEQ_DONE_MS
 250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			{
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* Entrambi i profili sono stati eseguiti almeno una volta */
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				nRet = S_OK;
 253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			}
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	}
 257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	return nRet;
 258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** }
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**/
 260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ************** */
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* Local Function */
 263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /* ************** */
 264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**
 266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Gestisce l'inizializzazione delle sequenze temporali da eseguire.
 267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
 268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \param [in] 	*p : puntatore alla struttura della sequenza da inizializzare
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
 270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \version		1.0.0
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \date 			20/07/2006
 272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \author			Roberto Fioravanti
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static void LDC_pulseSeq_Init(loadsPulse_Struct *p, SWTC_CountersType indice)
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** {
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint8_t cntTime;
 278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	/* start seq con ON */
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	p->step = LDC_PULSE_EXE_DELAY;
 281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	cntTime = LDC_PULSE_TDELAY(p->offset);
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	/*config+init timer*/
 285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	(void)SWTC_SetMValue((SWTC_CountersType)indice,cntTime);
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** }
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**/
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**
 292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Gestisce il passaggio da uno step al successivo nella sequenza temporale di attivazione
 293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
 294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \param [in] 	*p : puntatore alla struttura della sequenza in questione
 295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \return     bool_t  
 297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \retvalue   FALSE   L'esecuzione del profilo non è terminata
 298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \retvalue   TRUE    L'esecuzione del profilo è terminata, è stato apppena eseguito lo step finale d
 299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \version		1.0.0
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \date 			20/07/2006
 302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \author     Roberto Fioravanti
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static bool_t LDC_pulseStepMgmt(loadsPulse_Struct *p, SWTC_CountersType indice)
 306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** {
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** bool_t end=FALSE;
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)indice) )
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	{/* conteggio terminato */
 311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		switch (p->step)
 313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{/* gestione passaggio di stato */
 314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			case LDC_PULSE_EXE_DELAY:/* OFF1 -> ON */
 316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* possibili transizioni:
 317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				  -DELAY -> ON
 318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				  -DELAY -> OFF
 319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			  */
 320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				 
 321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				if ( LDC_PULSE_START(p->offset) == LDC_SEQ_START_ON ) 
 322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				{
 323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				  /* start con ON */
 324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					p->step = LDC_PULSE_EXE_ON;
 325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TON(p->offset));				
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				}
 328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				else 
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				{
 330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				  /* start con OFF */
 331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					p->step = LDC_PULSE_EXE_OFF;
 332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TOFF(p->offset));				
 334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				}				
 335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			break;
 336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			case LDC_PULSE_EXE_ON:
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 /* possibili transizioni:
 339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                     -ON -> OFF 
 340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 */
 341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			  
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if ( LDC_PULSE_START(p->offset) == LDC_SEQ_START_OFF ) 
 343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 {
 344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                     end=TRUE;					
 345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 } 
 346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if(LDC_PULSE_TOFF(p->offset))
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 {                    
 349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****       			    p->step = LDC_PULSE_EXE_OFF;
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TOFF(p->offset));
 352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 }
 353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 else
 354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 {
 355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TON(p->offset));
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 }
 357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			break;
 359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			case LDC_PULSE_EXE_OFF:
 361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 /* possibili transizioni:
 362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                     -OFF -> ON 
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 */
 364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if ( LDC_PULSE_START(p->offset) == LDC_SEQ_START_ON )
 365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 {
 366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                     end=TRUE;
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 } 
 368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 
 369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if( LDC_PULSE_TON(p->offset) )
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 {                    
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****           			p->step = LDC_PULSE_EXE_ON;
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TON(p->offset));
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 }
 375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 else
 376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 {
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TOFF(p->offset));
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 }
 379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			break;
 380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			default:
 382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				/* stato non possibile: errore */
 383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			break;
 384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	}
 386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	(void)SWTC_Run((SWTC_CountersType)indice);
 388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	return end;
 389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** }
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**/
 391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**
 393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Gestisce il pilotaggio carichi appartenenti alla sequenza in questione
 394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \param [in] 	*p : puntatore alla struttura della sequenza in questione
 396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
 397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \version		1.0.0
 398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \date 			20/07/2006
 399:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \author
 400:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
 402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static void LDC_pulseLoadMgmt(loadsPulse_Struct const *p)
 403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** {
 404:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint16_t loadBitmap;
 405:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint8_t* pBmpOffset;
 406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	if (p->step == LDC_PULSE_EXE_ON)
 408:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	{
 409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		pBmpOffset = (uint8_t*)(uPLoadsControl_setting_data.Data + p->offset);
 410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		loadBitmap = MAKEWORD(OFFS_B(pBmpOffset, 0), OFFS_B(pBmpOffset, 1));
 412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		LDC_activateLoads(loadBitmap & enabledloads_mask);
 414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	}
 415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** }
 416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**/
 417:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** /**
 420:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** Attiva i carichi appartenenti alla sequenza in questione
 421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \param [in] 	loadBitmap : bitmap dei carichi da attivare
 423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****  
 424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \version		1.0.0
 425:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \date 			26/02/2008
 426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** \author     Roberto Fioravanti
 427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 428:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** */
 429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static void LDC_activateLoads(uint16_t loadBitmap)
 430:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** {
   9                             		.loc 1 430 0
  10                             	.LVL0:
  11 0000 7E A7                   		push.l	r7
  12                             	.LCFI0:
  13                             	.LVL1:
  14                             		.loc 1 430 0
  15 0002 66 0E                   		mov.L	#0, r14
 431:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint8_t i;
 432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #ifdef _CORRECT_LOADS_CONTROL_BUG_
 433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint16_t msk;
 434:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #else
 435:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint8_t msk;
 436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** #endif /* !_CORRECT_LOADS_CONTROL_BUG_ */
 437:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 
 438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	for (i = 0, msk=1; i < N_LDC_BITMAP; i++, msk<<=1)
  16                             		.loc 1 438 0
  17 0004 66 14                   		mov	#1, r4
 439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	{
 440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		if (loadBitmap & msk)
  18                             		.loc 1 440 0
  19 0006 5F 11                   		movu.W	r1, r1
 441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		{		  
 442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		  LoadsReq_New[i].b = LOAD_ON;		  		  
  20                             		.loc 1 442 0
  21 0008 FB 32 00 00 00 00       		mov.L	#_LoadsReq_New, r3
  22                             	.LVL2:
  23                             		.balign 2,3,1
  24                             	.L3:
 440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		if (loadBitmap & msk)
  25                             		.loc 1 440 0
  26 000e 5B 42                   		movu.B	r4, r2
  27 0010 FC 33 12                		tst	r1, r2
  28 0013 17                      		beq	.L2
  29                             		.loc 1 442 0
  30 0014 66 17                   		mov	#1, r7
  31 0016 FE 0E 37                		mov.B	r7, [r14,r3]
  32 0019 03                      		.balign 2,3,1
  33                             	.L2:
 438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	for (i = 0, msk=1; i < N_LDC_BITMAP; i++, msk<<=1)
  34                             		.loc 1 438 0
  35 001a 4B 44                   		add	r4, r4
  36                             	.LVL3:
  37 001c 62 1E                   		add	#1, r14
  38 001e 75 5E 10                		cmp	#16, r14
  39 0021 21 ED                   		bne	.L3
 443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		}
 444:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	}
 445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** }
  40                             		.loc 1 445 0
  41 0023 3F 77 01                		rtsd	#4, r7-r7
  42                             	.LFE4:
  44                             		.section	.text.LDC_pulseStepMgmt,"ax",@progbits
  46                             	_LDC_pulseStepMgmt:
  47                             	.LFB2:
 306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** {
  48                             		.loc 1 306 0
  49                             	.LVL4:
  50 0000 6E 7B                   		pushm	r7-r11
  51                             	.LCFI1:
  52 0002 EF 1A                   		mov.L	r1, r10
  53 0004 CF 27                   		mov.B	r2, r7
  54                             	.LVL5:
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)indice) )
  55                             		.loc 1 309 0
  56 0006 CF 21                   		mov.B	r2, r1
  57                             	.LVL6:
  58 0008 05 00 00 00             		bsr	_SWTC_IsExpired
  59                             	.LVL7:
  60 000c 61 01                   		cmp	#0, r1
  61 000e 3A 8A 00                		beq	.L17
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		switch (p->step)
  62                             		.loc 1 312 0
  63 0011 59 AB 01                		movu.B	1[r10], r11
  64 0014 61 1B                   		cmp	#1, r11
  65 0016 20 2A                   		beq	.L12
  66 0018 61 0B                   		cmp	#0, r11
  67 001a 17                      		beq	.L11
  68 001b 61 2B                   		cmp	#2, r11
  69 001d 21 7E                   		bne	.L19
  70 001f 2E 50                   		bra	.L13
  71                             	.L11:
 321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				if ( LDC_PULSE_START(p->offset) == LDC_SEQ_START_ON ) 
  72                             		.loc 1 321 0
  73 0021 FB E2 00 00 00 00       		mov.L	#_uPLoadsControl_setting_data, r14
  74 0027 EC E4                   		mov.L	[r14], r4
  75 0029 58 AE                   		movu.B	[r10], r14
  76 002b 4B 4E                   		add	r4, r14
  77 002d CD E4 03                		mov.B	3[r14], r4
  78 0030 61 04                   		cmp	#0, r4
  79 0032 29 08                   		blt	.L14
 324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					p->step = LDC_PULSE_EXE_ON;
  80                             		.loc 1 324 0
  81 0034 F9 A4 01 01             		mov.B	#1, 1[r10]
  82 0038 2E 32                   		bra	.L15
  83                             	.L14:
 331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					p->step = LDC_PULSE_EXE_OFF;
  84                             		.loc 1 331 0
  85 003a F9 A4 01 02             		mov.B	#2, 1[r10]
  86 003e 2E 55                   		bra	.L16
  87                             	.L12:
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if ( LDC_PULSE_START(p->offset) == LDC_SEQ_START_OFF ) 
  88                             		.loc 1 342 0
  89 0040 FB B2 00 00 00 00       		mov.L	#_uPLoadsControl_setting_data, r11
  90 0046 EC B3                   		mov.L	[r11], r3
  91 0048 58 A4                   		movu.B	[r10], r4
  92 004a FF 2E 43                		add	r4, r3, r14
  93 004d CD EB 03                		mov.B	3[r14], r11
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** bool_t end=FALSE;
  94                             		.loc 1 307 0
  95 0050 69 FB                   		shlr	#31, r11
  96                             	.LVL8:
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if(LDC_PULSE_TOFF(p->offset))
  97                             		.loc 1 347 0
  98 0052 62 44                   		add	#4, r4
  99 0054 4B 34                   		add	r3, r4
 100 0056 58 43                   		movu.B	[r4], r3
 101 0058 61 03                   		cmp	#0, r3
 102 005a 20 10                   		beq	.L15
 349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****       			    p->step = LDC_PULSE_EXE_OFF;
 103                             		.loc 1 349 0
 104 005c F9 A4 01 02             		mov.B	#2, 1[r10]
 105                             		.balign 2,3,3
 106                             	.L23:
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TOFF(p->offset));
 107                             		.loc 1 351 0
 108 0060 58 42                   		movu.B	[r4], r2
 109                             	.LVL9:
 110                             		.balign 2,3,1
 111                             	.L22:
 112 0062 CF 71                   		mov.B	r7, r1
 113 0064 05 00 00 00             		bsr	_SWTC_SetMValue
 114                             	.LVL10:
 115 0068 2E 36                   		bra	.L10
 116                             	.L15:
 355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TON(p->offset));
 117                             		.loc 1 355 0
 118 006a 59 E2 02                		movu.B	2[r14], r2
 119 006d 2E F5                   		bra	.L22
 120                             	.LVL11:
 121                             	.L13:
 364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if ( LDC_PULSE_START(p->offset) == LDC_SEQ_START_ON )
 122                             		.loc 1 364 0
 123 006f FB B2 00 00 00 00       		mov.L	#_uPLoadsControl_setting_data, r11
 124 0075 EC B3                   		mov.L	[r11], r3
 125 0077 58 A4                   		movu.B	[r10], r4
 126 0079 FF 2E 43                		add	r4, r3, r14
 127 007c CD EB 03                		mov.B	3[r14], r11
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** bool_t end=FALSE;
 128                             		.loc 1 307 0
 129 007f 61 0B                   		cmp	#0, r11
 130 0081 FC DB B8                		scge.L	r11
 131                             	.LVL12:
 369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****                 if( LDC_PULSE_TON(p->offset) )
 132                             		.loc 1 369 0
 133 0084 62 24                   		add	#2, r4
 134 0086 4B 34                   		add	r3, r4
 135 0088 58 43                   		movu.B	[r4], r3
 136 008a 61 03                   		cmp	#0, r3
 137 008c 17                      		beq	.L16
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c ****           			p->step = LDC_PULSE_EXE_ON;
 138                             		.loc 1 371 0
 139 008d F9 A4 01 01             		mov.B	#1, 1[r10]
 140 0091 2E CF                   		bra	.L23
 141                             	.LVL13:
 142                             	.L16:
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)indice,LDC_PULSE_TOFF(p->offset));
 143                             		.loc 1 377 0
 144 0093 59 E2 04                		movu.B	4[r14], r2
 145 0096 2E CC                   		bra	.L22
 146                             	.LVL14:
 147                             	.L17:
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** bool_t end=FALSE;
 148                             		.loc 1 307 0
 149 0098 EF 1B                   		mov.L	r1, r11
 150 009a 0C                      		bra	.L10
 151                             	.L19:
 152 009b 66 0B                   		mov.L	#0, r11
 153                             	.LVL15:
 154 009d 03                      		.balign 2,3,1
 155                             	.L10:
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	(void)SWTC_Run((SWTC_CountersType)indice);
 156                             		.loc 1 387 0
 157 009e CF 71                   		mov.B	r7, r1
 158 00a0 05 00 00 00             		bsr	_SWTC_Run
 159                             	.LVL16:
 389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** }
 160                             		.loc 1 389 0
 161 00a4 EF B1                   		mov.L	r11, r1
 162 00a6 3F 7B 05                		rtsd	#20, r7-r11
 163                             	.LFE2:
 165 00a9 03                      		.section	.text.LDC_pulseLoadMgmt.isra.0.part.1,"ax",@progbits
 167                             	_LDC_pulseLoadMgmt.isra.0.part.1:
 168                             	.LFB6:
 402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** static void LDC_pulseLoadMgmt(loadsPulse_Struct const *p)
 169                             		.loc 1 402 0
 409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		pBmpOffset = (uint8_t*)(uPLoadsControl_setting_data.Data + p->offset);
 170                             		.loc 1 409 0
 171 0000 5B 11                   		movu.B	r1, r1
 172 0002 FB E2 00 00 00 00       		mov.L	#_uPLoadsControl_setting_data, r14
 173 0008 EC EE                   		mov.L	[r14], r14
 174 000a 4B 1E                   		add	r1, r14
 175                             	.LVL17:
 411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		loadBitmap = MAKEWORD(OFFS_B(pBmpOffset, 0), OFFS_B(pBmpOffset, 1));
 176                             		.loc 1 411 0
 177 000c 58 E1                   		movu.B	[r14], r1
 178 000e 6C 81                   		shll	#8, r1
 179 0010 55 E1 01                		or	1[r14].UB, r1
 413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		LDC_activateLoads(loadBitmap & enabledloads_mask);
 180                             		.loc 1 413 0
 181 0013 FB E2 00 00 00 00       		mov.L	#_enabledloads_mask, r14
 182                             	.LVL18:
 183 0019 06 50 E1                		and	[r14].W, r1
 184 001c 04 00 00 00             		bra	_LDC_activateLoads
 185                             	.LVL19:
 186                             	.LFE6:
 188                             		.section	.text.LDC_uP_LoadsControl_Exe,"ax",@progbits
 189                             		.global	_LDC_uP_LoadsControl_Exe
 191                             	_LDC_uP_LoadsControl_Exe:
 192                             	.LFB0:
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** {
 193                             		.loc 1 111 0
 194                             	.LVL20:
 195 0000 6E 7B                   		pushm	r7-r11
 196                             	.LCFI2:
 197 0002 60 80                   		sub	#8, r0
 198                             	.LCFI3:
 199                             	.LVL21:
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	if ( (FALSE == Interpreter_Data[0].stepInitialized) || (FALSE == Interpreter_Data[0].optionalStepI
 200                             		.loc 1 117 0
 201 0004 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 202 000a 89 77                   		mov.B	4[r7], r7
 203 000c 64 67                   		and #6, r7
 204 000e 61 67                   		cmp	#6, r7
 205 0010 20 6D                   		beq	.L26
 120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		switch ( (highStatement & LDC_DRIVE_TYPE_MSK) )
 206                             		.loc 1 120 0
 207 0012 75 21 30                		and #48, r1
 208                             	.LVL22:
 209 0015 75 51 10                		cmp	#16, r1
 210 0018 3B 28 01                		bne	.L41
 126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				if (BasicLoader(PTR_UP_LOADSCONTROL, lowStatement, &uPLoadsControl_setting_data) != S_OK )
 211                             		.loc 1 126 0
 212 001b 5B 22                   		movu.B	r2, r2
 213 001d 75 41 16                		mov	#22, r1
 214 0020 FB 32 00 00 00 00       		mov.L	#_uPLoadsControl_setting_data, r3
 215 0026 05 00 00 00             		bsr	_BasicLoader
 216                             	.LVL23:
 217 002a 71 17 00                		add	#0, r1, r7
 218 002d 3B 16 01                		bne	.L42
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					uP_LoadsControl_Data.status = LOADSCONTROL_INIT;
 219                             		.loc 1 135 0
 220 0030 FB A2 00 00 00 00       		mov.L	#_uP_LoadsControl_Data, r10
 221 0036 C3 A7                   		mov.B	r7, [r10]
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					loadsPulseData1.offset = SEQ1_OFFSET;				
 222                             		.loc 1 138 0
 223 0038 FB A2 00 00 00 00       		mov.L	#_loadsPulseData1, r10
 224 003e C3 A7                   		mov.B	r7, [r10]
 225                             	.LVL24:
 226                             	.LBB10:
 227                             	.LBB11:
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	p->step = LDC_PULSE_EXE_DELAY;
 228                             		.loc 1 280 0
 229 0040 C7 A7 01                		mov.B	r7, 1[r10]
 230                             	.LVL25:
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	cntTime = LDC_PULSE_TDELAY(p->offset);
 231                             		.loc 1 282 0
 232 0043 FB A2 00 00 00 00       		mov.L	#_uPLoadsControl_setting_data, r10
 233                             	.LVL26:
 234 0049 EC AE                   		mov.L	[r10], r14
 235 004b CD E2 03                		mov.B	3[r14], r2
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	(void)SWTC_SetMValue((SWTC_CountersType)indice,cntTime);
 236                             		.loc 1 286 0
 237 004e 66 51                   		mov	#5, r1
 238 0050 75 22 7F                		and #0x7f, r2
 239 0053 05 00 00 00             		bsr	_SWTC_SetMValue
 240                             	.LVL27:
 241                             	.LBE11:
 242                             	.LBE10:
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					if (uPLoadsControl_setting_data.DataLenght > LDC_SEQ1_TABLE_LEN) 
 243                             		.loc 1 141 0
 244 0057 5D AE 02                		movu.W	4[r10], r14
 245 005a 61 3E                   		cmp	#3, r14
 246 005c 24 05 38 E2 00          		bleu	.L41
 144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 						loadsPulseData2.offset = SEQ2_OFFSET;
 247                             		.loc 1 144 0
 248 0061 FB E2 00 00 00 00       		mov.L	#_loadsPulseData2, r14
 249 0067 F8 E4 05                		mov.B	#5, [r14]
 250                             	.LVL28:
 251                             	.LBB12:
 252                             	.LBB13:
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	p->step = LDC_PULSE_EXE_DELAY;
 253                             		.loc 1 280 0
 254 006a C7 E7 01                		mov.B	r7, 1[r14]
 255                             	.LVL29:
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	cntTime = LDC_PULSE_TDELAY(p->offset);
 256                             		.loc 1 282 0
 257 006d EC A7                   		mov.L	[r10], r7
 258 006f 8A 72                   		mov.B	8[r7], r2
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	(void)SWTC_SetMValue((SWTC_CountersType)indice,cntTime);
 259                             		.loc 1 286 0
 260 0071 66 61                   		mov	#6, r1
 261 0073 75 22 7F                		and #0x7f, r2
 262 0076 05 00 00 00             		bsr	_SWTC_SetMValue
 263                             	.LVL30:
 264 007a 38 C6 00                		bra	.L41
 265                             	.LVL31:
 266                             	.L26:
 267                             	.LBE13:
 268                             	.LBE12:
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		if ( uPDoorStatus == UP_DOOR_WAIT )
 269                             		.loc 1 172 0
 270 007d FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
 271 0083 58 77                   		movu.B	[r7], r7
 272 0085 FB A2 00 00 00 00       		mov.L	#_enabledloads_mask, r10
 273 008b 61 07                   		cmp	#0, r7
 274 008d 3A BD 00                		beq	.L29
 275 0090 38 D0 00                		bra	.L50
 276                             	.LVL32:
 277                             	.L37:
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				enabledloads_mask |= (1<<Pump_Pos[LD_DRAIN_PUMP_IND]);
 278                             		.loc 1 182 0
 279 0093 66 17                   		mov.L	#1, r7
 280 0095 EF 7B                   		mov.L	r7, r11
 281 0097 FD 62 EB                		shll	r14, r11
 282 009a D3 AB                   		mov.W	r11, [r10]
 283                             	.LVL33:
 284                             		.balign 2,3,2
 285                             	.L38:
 197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 		if ((highStatement & LDC_DRIVE_TYPE_MSK) == LDC_NOSTOP_DRIVE)
 286                             		.loc 1 197 0
 287 009c 75 21 30                		and	#48, r1
 288                             	.LVL34:
 289 009f 21 28                   		bne	.L31
 201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if (BasicLoader(PTR_UP_LOADSCONTROL, lowStatement, &lcDirect_SettingData) == S_OK)
 290                             		.loc 1 201 0
 291 00a1 5B 22                   		movu.B	r2, r2
 292 00a3 75 41 16                		mov	#22, r1
 293 00a6 EF 03                   		mov.L	r0, r3
 294 00a8 05 00 00 00             		bsr	_BasicLoader
 295                             	.LVL35:
 296 00ac 76 21 FF 00             		and #0xff, r1
 297 00b0 3B 96 00                		bne	.L27
 206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				LDC_activateLoads((*((uint16_t*) lcDirect_SettingData.Data)) & enabledloads_mask);
 298                             		.loc 1 206 0
 299 00b3 EC 0A                   		mov.L	[r0], r10
 300 00b5 DC A1                   		mov.W	[r10], r1
 301 00b7 FB A2 00 00 00 00       		mov.L	#_enabledloads_mask, r10
 302 00bd 06 50 A1                		and	[r10].W, r1
 303 00c0 05 00 00 00             		bsr	_LDC_activateLoads
 304                             	.LVL36:
 305 00c4 38 82 00                		bra	.L27
 306                             	.LVL37:
 307                             	.L31:
 219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			LDC_pulseLoadMgmt(&loadsPulseData1);
 308                             		.loc 1 219 0
 309 00c7 FB A2 00 00 00 00       		mov.L	#_loadsPulseData1, r10
 310 00cd CC A1                   		mov.B	[r10], r1
 311                             	.LBB14:
 312                             	.LBB15:
 407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	if (p->step == LDC_PULSE_EXE_ON)
 313                             		.loc 1 407 0
 314 00cf 59 AA 01                		movu.B	1[r10], r10
 315 00d2 61 1A                   		cmp	#1, r10
 316 00d4 1E                      		bne	.L32
 317 00d5 05 00 00 00             		bsr	_LDC_pulseLoadMgmt.isra.0.part.1
 318                             	.LVL38:
 319 00d9 03                      		.balign 2,3,5
 320                             	.L32:
 321                             	.LBE15:
 322                             	.LBE14:
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if(LDC_pulseStepMgmt(&loadsPulseData1,(SWTC_CountersType)MP_LOADCONTROL_M_COUNTER1)) 
 323                             		.loc 1 223 0
 324 00da FB 12 00 00 00 00       		mov.L	#_loadsPulseData1, r1
 325 00e0 66 52                   		mov	#5, r2
 326 00e2 05 00 00 00             		bsr	_LDC_pulseStepMgmt
 327                             	.LVL39:
 328 00e6 61 01                   		cmp	#0, r1
 329 00e8 12                      		beq	.L33
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				uP_LoadsControl_Data.status|=LOADSCONTROL_SEQ1_DONE_MSK;
 330                             		.loc 1 225 0
 331 00e9 FB A2 00 00 00 00       		mov.L	#_uP_LoadsControl_Data, r10
 332 00ef F0 A0                   		bset #0, [r10].B
 333 00f1 03                      		.balign 2,3,5
 334                             	.L33:
 229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if (uPLoadsControl_setting_data.DataLenght > LDC_SEQ1_TABLE_LEN)
 335                             		.loc 1 229 0
 336 00f2 FB A2 00 00 00 00       		mov.L	#_uPLoadsControl_setting_data, r10
 337 00f8 5D AA 02                		movu.W	4[r10], r10
 338 00fb 61 3A                   		cmp	#3, r10
 339 00fd 25 2D                   		bleu	.L34
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				if(LDC_pulseStepMgmt(&loadsPulseData2,(SWTC_CountersType)MP_LOADCONTROL_M_COUNTER2)) 
 340                             		.loc 1 233 0
 341 00ff FB 12 00 00 00 00       		mov.L	#_loadsPulseData2, r1
 342 0105 66 62                   		mov	#6, r2
 343 0107 05 00 00 00             		bsr	_LDC_pulseStepMgmt
 344                             	.LVL40:
 345 010b 61 01                   		cmp	#0, r1
 346 010d 11                      		beq	.L35
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 					uP_LoadsControl_Data.status|=LOADSCONTROL_SEQ2_DONE_MSK;
 347                             		.loc 1 235 0
 348 010e FB A2 00 00 00 00       		mov.L	#_uP_LoadsControl_Data, r10
 349 0114 F0 A1                   		bset #1, [r10].B
 350                             		.balign 2,3,5
 351                             	.L35:
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				LDC_pulseLoadMgmt(&loadsPulseData2);			
 352                             		.loc 1 238 0
 353 0116 FB A2 00 00 00 00       		mov.L	#_loadsPulseData2, r10
 354 011c CC A1                   		mov.B	[r10], r1
 355                             	.LBB16:
 356                             	.LBB17:
 407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	if (p->step == LDC_PULSE_EXE_ON)
 357                             		.loc 1 407 0
 358 011e 59 AA 01                		movu.B	1[r10], r10
 359 0121 61 1A                   		cmp	#1, r10
 360 0123 21 0F                   		bne	.L36
 361 0125 05 00 00 00             		bsr	_LDC_pulseLoadMgmt.isra.0.part.1
 362                             	.LVL41:
 363 0129 09                      		bra	.L36
 364                             	.L34:
 365                             	.LBE17:
 366                             	.LBE16:
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				uP_LoadsControl_Data.status|=LOADSCONTROL_SEQ2_DONE_MSK;
 367                             		.loc 1 245 0
 368 012a FB A2 00 00 00 00       		mov.L	#_uP_LoadsControl_Data, r10
 369 0130 F0 A1                   		bset #1, [r10].B
 370                             		.balign 2,3,5
 371                             	.L36:
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if (LOADSCONTROL_ALL_SEQ_DONE_MSK == (uP_LoadsControl_Data.status & LOADSCONTROL_ALL_SEQ_DONE_MS
 372                             		.loc 1 249 0
 373 0132 FB A2 00 00 00 00       		mov.L	#_uP_LoadsControl_Data, r10
 374 0138 CC AA                   		mov.B	[r10], r10
 375 013a 64 3A                   		and #3, r10
 376 013c 61 3A                   		cmp	#3, r10
 377 013e 18                      		bne	.L27
 378 013f 0C                      		bra	.L42
 379                             	.LVL42:
 380                             	.L41:
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** uint8_t nRet = S_FALSE;
 381                             		.loc 1 113 0
 382 0140 66 17                   		mov	#1, r7
 383 0142 0C                      		bra	.L27
 384                             	.LVL43:
 385                             	.L42:
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 				nRet = S_OK;
 386                             		.loc 1 252 0
 387 0143 66 07                   		mov	#0, r7
 388 0145 03                      		.balign 2,3,1
 389                             	.L27:
 390                             	.LVL44:
 257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 	return nRet;
 391                             		.loc 1 257 0
 392 0146 5B 71                   		movu.B	r7, r1
 393 0148 2E 21                   		bra	.L51
 394                             	.LVL45:
 395                             	.L29:
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			enabledloads_mask = 0;
 396                             		.loc 1 179 0
 397 014a D3 A7                   		mov.W	r7, [r10]
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			if( Pump_Pos[LD_DRAIN_PUMP_IND] != NO_LD_POS )
 398                             		.loc 1 180 0
 399 014c FB 72 00 00 00 00       		mov.L	#_Pump_Pos, r7
 400 0152 59 7E 01                		movu.B	1[r7], r14
 401 0155 75 5E FF                		cmp	#0xff, r14
 402 0158 3B 3B FF                		bne	.L37
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			nRet = S_FALSE;
 403                             		.loc 1 185 0
 404 015b 66 17                   		mov	#1, r7
 405 015d 38 3F FF                		bra	.L38
 406                             	.LVL46:
 407                             	.L50:
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			enabledloads_mask=0xFF;
 408                             		.loc 1 192 0
 409 0160 F8 A9 FF 00             		mov.W	#0xff, [r10]
 410                             	.LVL47:
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** 			nRet = S_OK;
 411                             		.loc 1 194 0
 412 0164 66 07                   		mov	#0, r7
 413 0166 38 36 FF                		bra	.L38
 414                             	.LVL48:
 415                             	.L51:
 258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\LoadsControl.c **** }
 416                             		.loc 1 258 0
 417 0169 3F 7B 07                		rtsd	#28, r7-r11
 418                             	.LFE0:
 420                             		.comm	_enabledloads_mask,2,2
 509                             	.Letext0:
 510                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 511                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_SwTimersCounters/SwTimersCo
 512                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 513                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/ProductSafety_cfg.
 514                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmDefines.h"
 515                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Types.h"
 516                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_General.h"
 517                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/BusCommPltf_cfg.h"
 518                             		.file 10 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmTypes.h"
 519                             		.file 11 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/OutputManagerE
 520                             		.file 12 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmGlobal.h"
 521                             		.file 13 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\Modules/LoadsControl.h"
 522                             		.file 14 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_BusCommMng.h"
 523                             		.file 15 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Global.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LoadsControl.c
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:6      .text.LDC_activateLoads:00000000 _LDC_activateLoads
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:11     .text.LDC_activateLoads:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:46     .text.LDC_pulseStepMgmt:00000000 _LDC_pulseStepMgmt
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:50     .text.LDC_pulseStepMgmt:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:167    .text.LDC_pulseLoadMgmt.isra.0.part.1:00000000 _LDC_pulseLoadMgmt.isra.0.part.1
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:171    .text.LDC_pulseLoadMgmt.isra.0.part.1:00000000 L0
                            *COM*:00000002 _enabledloads_mask
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:191    .text.LDC_uP_LoadsControl_Exe:00000000 _LDC_uP_LoadsControl_Exe
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:195    .text.LDC_uP_LoadsControl_Exe:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:422    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:7      .text.LDC_activateLoads:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:47     .text.LDC_pulseStepMgmt:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:168    .text.LDC_pulseLoadMgmt.isra.0.part.1:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:192    .text.LDC_uP_LoadsControl_Exe:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:1886   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3182   .debug_str:00000482 .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3364   .debug_str:00000b0e .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3046   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3058   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3154   .debug_str:00000399 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3120   .debug_str:00000267 .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3062   .debug_str:00000011 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3160   .debug_str:000003df .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3206   .debug_str:00000588 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3196   .debug_str:0000051f .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3416   .debug_str:00000cf5 .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3100   .debug_str:00000191 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3122   .debug_str:0000026f .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3298   .debug_str:00000884 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3272   .debug_str:0000078f .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3124   .debug_str:0000027d .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3128   .debug_str:00000296 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3118   .debug_str:00000260 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3246   .debug_str:000006c1 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3232   .debug_str:00000654 .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3402   .debug_str:00000c86 .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3238   .debug_str:0000067e .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3252   .debug_str:000006f1 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3282   .debug_str:000007d9 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3132   .debug_str:000002c0 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3240   .debug_str:00000687 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3308   .debug_str:000008cf .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3422   .debug_str:00000d21 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3336   .debug_str:000009c3 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3244   .debug_str:000006aa .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3326   .debug_str:00000977 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3408   .debug_str:00000cab .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3256   .debug_str:00000718 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3288   .debug_str:00000818 .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3064   .debug_str:0000001b .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3290   .debug_str:00000820 .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3354   .debug_str:00000a9a .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3084   .debug_str:000000d6 .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3380   .debug_str:00000bc5 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3096   .debug_str:0000015f .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3350   .debug_str:00000a71 .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3360   .debug_str:00000ada .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3286   .debug_str:00000800 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3230   .debug_str:0000063e .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3324   .debug_str:00000966 .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3356   .debug_str:00000aa8 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3264   .debug_str:00000751 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3104   .debug_str:000001c4 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3174   .debug_str:00000440 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3296   .debug_str:00000873 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3222   .debug_str:00000601 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3142   .debug_str:00000330 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3210   .debug_str:000005a9 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3228   .debug_str:0000062f .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3200   .debug_str:00000543 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3234   .debug_str:0000065f .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3110   .debug_str:000001f7 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3236   .debug_str:0000066b .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3352   .debug_str:00000a82 .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3180   .debug_str:00000467 .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3394   .debug_str:00000c37 .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3292   .debug_str:0000083e .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3072   .debug_str:00000071 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3178   .debug_str:00000456 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3372   .debug_str:00000b7b .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3146   .debug_str:00000345 .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3090   .debug_str:0000011e .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3384   .debug_str:00000bdf .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3268   .debug_str:00000772 .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3226   .debug_str:00000620 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3318   .debug_str:0000092b .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3220   .debug_str:000005fb .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3214   .debug_str:000005c8 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3170   .debug_str:00000422 .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3368   .debug_str:00000b5c .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3144   .debug_str:0000033f .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3388   .debug_str:00000bfc .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3136   .debug_str:000002fa .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3284   .debug_str:000007ea .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3068   .debug_str:00000049 .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3152   .debug_str:00000387 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3340   .debug_str:000009f0 .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3412   .debug_str:00000cc5 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3242   .debug_str:00000695 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3332   .debug_str:0000099e .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3138   .debug_str:00000306 .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3188   .debug_str:000004d5 .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3316   .debug_str:00000914 .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3294   .debug_str:0000085a .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3202   .debug_str:00000554 .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3328   .debug_str:0000097c .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3312   .debug_str:000008ee .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3194   .debug_str:00000512 .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3420   .debug_str:00000d14 .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3262   .debug_str:00000744 .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3162   .debug_str:000003e8 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3258   .debug_str:0000072b .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3060   .debug_str:00000000 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3208   .debug_str:0000059b .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3150   .debug_str:0000037a .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3404   .debug_str:00000c94 .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3382   .debug_str:00000bd4 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3398   .debug_str:00000c5d .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3176   .debug_str:0000044f .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3276   .debug_str:000007ac .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3392   .debug_str:00000c31 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3302   .debug_str:000008a4 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3156   .debug_str:000003a6 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3254   .debug_str:00000700 .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3376   .debug_str:00000b9f .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3140   .debug_str:00000319 .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3330   .debug_str:00000997 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3366   .debug_str:00000b54 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3270   .debug_str:00000781 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3280   .debug_str:000007c3 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3092   .debug_str:0000012b .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3094   .debug_str:00000145 .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3266   .debug_str:0000075f .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3148   .debug_str:00000356 .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3066   .debug_str:00000035 .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3374   .debug_str:00000b8a .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3098   .debug_str:0000016f .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3334   .debug_str:000009a7 .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3414   .debug_str:00000cd5 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3342   .debug_str:00000a08 .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3078   .debug_str:000000a7 .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3168   .debug_str:00000407 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3114   .debug_str:00000224 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3362   .debug_str:00000af1 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3190   .debug_str:000004e7 .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3390   .debug_str:00000c0c .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3106   .debug_str:000001d4 .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3314   .debug_str:000008fb .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3358   .debug_str:00000aba .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3348   .debug_str:00000a52 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3426   .debug_str:00000d45 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3086   .debug_str:000000e9 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3346   .debug_str:00000a3a .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3074   .debug_str:00000085 .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3338   .debug_str:000009d8 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3418   .debug_str:00000cfe .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3186   .debug_str:000004bd .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3344   .debug_str:00000a23 .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3378   .debug_str:00000ba6 .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3070   .debug_str:00000055 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3400   .debug_str:00000c70 .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3248   .debug_str:000006c6 .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3304   .debug_str:000008b1 .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3204   .debug_str:00000571 .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3134   .debug_str:000002d6 .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3116   .debug_str:0000023e .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3130   .debug_str:0000029d .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3322   .debug_str:00000948 .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3088   .debug_str:00000101 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3370   .debug_str:00000b62 .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3158   .debug_str:000003b8 .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3320   .debug_str:00000934 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3192   .debug_str:00000501 .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3224   .debug_str:0000060e .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3278   .debug_str:000007b1 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3396   .debug_str:00000c52 .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3166   .debug_str:000003fc .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3076   .debug_str:00000095 .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:42     .text.LDC_activateLoads:00000026 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2689   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2702   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2710   .debug_loc:00000034 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3080   .debug_str:000000bf .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:163    .text.LDC_pulseStepMgmt:000000a9 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2722   .debug_loc:00000053 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2735   .debug_loc:00000073 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3164   .debug_str:000003f5 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2746   .debug_loc:00000091 .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2757   .debug_loc:000000af .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:59     .text.LDC_pulseStepMgmt:0000000c .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:114    .text.LDC_pulseStepMgmt:00000068 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:159    .text.LDC_pulseStepMgmt:000000a4 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:186    .text.LDC_pulseLoadMgmt.isra.0.part.1:00000020 .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2787   .debug_loc:000000fc .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2811   .debug_loc:00000120 .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:185    .text.LDC_pulseLoadMgmt.isra.0.part.1:00000020 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3112   .debug_str:00000212 .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3410   .debug_str:00000cbd .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3300   .debug_str:0000088c .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:418    .text.LDC_uP_LoadsControl_Exe:0000016c .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2818   .debug_loc:00000133 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3424   .debug_str:00000d37 .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2836   .debug_loc:0000015f .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3310   .debug_str:000008e1 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2872   .debug_loc:000001b2 .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3184   .debug_str:000004a8 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3082   .debug_str:000000d1 .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2919   .debug_loc:0000021e .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3406   .debug_str:00000ca3 .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2954   .debug_loc:00000277 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:226    .text.LDC_uP_LoadsControl_Exe:00000040 .LBB10
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:242    .text.LDC_uP_LoadsControl_Exe:00000057 .LBE10
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2977   .debug_loc:000002af .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:227    .text.LDC_uP_LoadsControl_Exe:00000040 .LBB11
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:241    .text.LDC_uP_LoadsControl_Exe:00000057 .LBE11
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:2985   .debug_loc:000002c3 .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:240    .text.LDC_uP_LoadsControl_Exe:00000057 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:251    .text.LDC_uP_LoadsControl_Exe:0000006a .LBB12
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:268    .text.LDC_uP_LoadsControl_Exe:0000007d .LBE12
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3002   .debug_loc:000002e0 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:252    .text.LDC_uP_LoadsControl_Exe:0000006a .LBB13
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:267    .text.LDC_uP_LoadsControl_Exe:0000007d .LBE13
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3010   .debug_loc:000002f4 .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:263    .text.LDC_uP_LoadsControl_Exe:0000007a .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:311    .text.LDC_uP_LoadsControl_Exe:000000cf .LBB14
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:322    .text.LDC_uP_LoadsControl_Exe:000000da .LBE14
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:312    .text.LDC_uP_LoadsControl_Exe:000000cf .LBB15
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:321    .text.LDC_uP_LoadsControl_Exe:000000da .LBE15
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:355    .text.LDC_uP_LoadsControl_Exe:0000011e .LBB16
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:366    .text.LDC_uP_LoadsControl_Exe:0000012a .LBE16
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:356    .text.LDC_uP_LoadsControl_Exe:0000011e .LBB17
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:365    .text.LDC_uP_LoadsControl_Exe:0000012a .LBE17
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:216    .text.LDC_uP_LoadsControl_Exe:0000002a .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:295    .text.LDC_uP_LoadsControl_Exe:000000ac .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:304    .text.LDC_uP_LoadsControl_Exe:000000c4 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:318    .text.LDC_uP_LoadsControl_Exe:000000d9 .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:327    .text.LDC_uP_LoadsControl_Exe:000000e6 .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:344    .text.LDC_uP_LoadsControl_Exe:0000010b .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:362    .text.LDC_uP_LoadsControl_Exe:00000129 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3260   .debug_str:0000073c .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3212   .debug_str:000005b7 .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3108   .debug_str:000001ee .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3386   .debug_str:00000bef .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3102   .debug_str:000001a8 .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3250   .debug_str:000006dc .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3218   .debug_str:000005eb .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3172   .debug_str:00000430 .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3126   .debug_str:00000289 .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3198   .debug_str:00000531 .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3274   .debug_str:0000079d .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3216   .debug_str:000005dc .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3306   .debug_str:000008c6 .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:3428   .debug_str:00000d63 .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:12     .text.LDC_activateLoads:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:13     .text.LDC_activateLoads:00000002 .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:22     .text.LDC_activateLoads:0000000e .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:36     .text.LDC_activateLoads:0000001c .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:51     .text.LDC_pulseStepMgmt:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:49     .text.LDC_pulseStepMgmt:00000000 .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:57     .text.LDC_pulseStepMgmt:00000008 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:54     .text.LDC_pulseStepMgmt:00000006 .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:96     .text.LDC_pulseStepMgmt:00000052 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:109    .text.LDC_pulseStepMgmt:00000062 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:120    .text.LDC_pulseStepMgmt:0000006f .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:131    .text.LDC_pulseStepMgmt:00000084 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:141    .text.LDC_pulseStepMgmt:00000093 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:146    .text.LDC_pulseStepMgmt:00000098 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:153    .text.LDC_pulseStepMgmt:0000009d .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:175    .text.LDC_pulseLoadMgmt.isra.0.part.1:0000000c .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:182    .text.LDC_pulseLoadMgmt.isra.0.part.1:00000019 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:196    .text.LDC_uP_LoadsControl_Exe:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:198    .text.LDC_uP_LoadsControl_Exe:00000004 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:194    .text.LDC_uP_LoadsControl_Exe:00000000 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:208    .text.LDC_uP_LoadsControl_Exe:00000015 .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:265    .text.LDC_uP_LoadsControl_Exe:0000007d .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:288    .text.LDC_uP_LoadsControl_Exe:0000009f .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:394    .text.LDC_uP_LoadsControl_Exe:0000014a .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:414    .text.LDC_uP_LoadsControl_Exe:00000169 .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:306    .text.LDC_uP_LoadsControl_Exe:000000c7 .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:199    .text.LDC_uP_LoadsControl_Exe:00000004 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:283    .text.LDC_uP_LoadsControl_Exe:0000009c .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:379    .text.LDC_uP_LoadsControl_Exe:00000140 .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:384    .text.LDC_uP_LoadsControl_Exe:00000143 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:390    .text.LDC_uP_LoadsControl_Exe:00000146 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:410    .text.LDC_uP_LoadsControl_Exe:00000164 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:276    .text.LDC_uP_LoadsControl_Exe:00000093 .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:406    .text.LDC_uP_LoadsControl_Exe:00000160 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:225    .text.LDC_uP_LoadsControl_Exe:00000040 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:233    .text.LDC_uP_LoadsControl_Exe:00000049 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:250    .text.LDC_uP_LoadsControl_Exe:0000006a .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:255    .text.LDC_uP_LoadsControl_Exe:0000006d .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccBFVRyd.s:525    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_LoadsReq_New
_SWTC_IsExpired
_uPLoadsControl_setting_data
_SWTC_SetMValue
_SWTC_Run
_Interpreter_Data
_BasicLoader
_uP_LoadsControl_Data
_loadsPulseData1
_loadsPulseData2
_uPDoorStatus
_Pump_Pos
