   1                             		.file	"BCP_PlatformProtocol.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.crc_append,"ax",@progbits
   6                             	_crc_append:
   7                             	.LFB12:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM/BCP_PlatformProtocol.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Copyright (c) 2004-2005, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
   6:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
   7:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \defgroup	PP Platform Protocol
   8:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \ingroup PM_BusCOMM
   9:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  10:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \par		Description
  11:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \n    Platform Protocol implements protocol related fetaures:
  12:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \li   encode and decode of data,
  13:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \li   communication driver management.
  14:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  15:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \n    E' organizzato in due sezioni Master e Slave.
  16:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
  17:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  18:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
  19:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \defgroup PPM Platform Protocol Master
  20:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \ingroup PP
  21:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Platform Protocol master
  22:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \par    Description
  23:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \n      Descrizione del Platform Protocol master
  24:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
  25:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  26:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
  27:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \defgroup	PPS Platform Protocol Slave
  28:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \ingroup PP
  29:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Platform Protocol slave
  30:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \par		Description
  31:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n      Descrizione del Platform Protocol Slave
  32:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
  33:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  34:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  35:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  36:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  37:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  38:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
  39:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
  40:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  41:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \par		Description
  42:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n	  Platform Protocol Implementation
  43:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n    driver management for master and slave communication
  44:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  45:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \file		BCP_PlatformProtocol.c
  46:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \ingroup	PM_BusCOMM
  47:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date		20/04/2009
  48:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version	01.00.00
  49:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author		Roberto Fioravanti
  50:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  51:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  52:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \par		History
  53:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  54:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		00.00.59
  55:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		08/09/2010
  56:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
  57:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
  58:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n    	- Prototype of PP_EncodeDataGPAnsParam changed (2nd arg to IO_BufferSizeType)
  59:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- PP_EncodeDataGPAnsParam removed u8Len check
  60:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- bug fix: PP_EncodeHdrAnsBridgeParam: avoid overwriting type
  61:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- bug fix: PP_BridgeToTyp16Conv manages Basic types
  62:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  63:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n    00.00.41
  64:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		20/04/2010
  65:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
  66:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
  67:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- INDESIT_BRIDGE_ZIGBEE becames CP_GENERAL_PURPOSE
  68:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- removed crc_calculate
  69:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  70:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n    00.00.39
  71:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		15/04/2010
  72:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
  73:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
  74:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- bug fix: BCP_MasterResponseStateMachine updates esit when answer data is available
  75:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  76:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n    00.00.23
  77:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		23/10/2009
  78:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
  79:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
  80:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- deprecated removed
  81:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- fragmentation
  82:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  83:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n    00.00.14
  84:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		23/10/2009
  85:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
  86:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
  87:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- data format: pDataRes in PP_MasterProtocolTableType contains data size in bytes (IO_BufferSi
  88:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- BCP_MasterResponseStateMachine: updated with the define PP_OUT_BUFF_RESERVED_SZ and PP_ZB_OUT
  89:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  90:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		00.00.12
  91:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		08/10/2009
  92:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
  93:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
  94:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- PP_SlaveNotification added: IO_N_COMPLETED notifications
  95:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- updating .esit field in PP_Ntwk for bridge zigbee packets without answer
  96:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- ack error couter updating (for bridge zigbee packets witout answer)
  97:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n    - PP_SlaveResponseBuilder returns void
  98:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
  99:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		00.00.10
 100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		18/09/2009
 101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
 102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
 103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- BCP_MasterResponseStateMachine: zigbee packets added
 104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
 105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		00.00.09
 106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		15/09/2009
 107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
 108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
 109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- Optimizations: BCP_MasterResponseStateMachine
 110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
 111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		00.00.08
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		10/09/2009
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n      - bug fix: PP_BS_TYPE_FROM_ZB_PARAM(x) PP_BS_PDATA_FROM_ZB_PARAM(x)
 116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		00.00.01
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		05/05/2009
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		Roberto Fioravanti
 120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		changes
 121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n 		- creazione
 122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n		- 'builder', 'decoder' master and slave,  driver interface for transmission and reception.
 123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
 124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n
 125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \n etc.
 126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ******** */
 129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Includes */
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ******** */
 131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #include <string.h>
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #include "BCP_BusCommMng.h"
 135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #include "LIB_Utilities.h"
 137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #ifdef BUS_COM_PLT_I2C_SUPPORT
 139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #include "OCI2C_drv.h"
 140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif /* BUS_COM_PLT_I2C_SUPPORT */
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #ifdef CONFIG_PL_DRV_OCCRC
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #include "OCCRC_drv.h"
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define BCP_CRC_calculate OCCRC_Calculate
 145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #else
 146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #include "SWCRC_drv.h"
 147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define BCP_CRC_calculate SWCRC_Calculate
 148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ****************** */
 150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Defines and Macros */
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ****************** */
 152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \ingroup PPS_SLAVE_PRIV
 155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   Definizioni per state machine PP slave (richiesta).
 156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Parser */
 160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** enum{
 161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /*Basic frame Rules*/
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_READ_BS_HDR_RULE_LBL = 0,
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_NO_MATCH_STX_RULE_LBL,
 164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_NO_MATCH_EE_RULE_LBL,
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* Extended frame */
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_READ_EE_UNTIL_LEN_RULE_LBL,
 168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_MODLEN_BY_TYP01_RULE_LBL,
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_MODLEN_BY_CRC_RULE_LBL,
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_TEST_HDR_LEN,
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SETLEN_TYP0_RULE_LBL,
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SETLEN_TYP01_RULE_LBL,
 173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_EE_READ_ALL_RULE_LBL,
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_EE_CRC_TEST_RULE_LBL,
 175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /*Common Rules */
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_CHK_VER_RULE_LBL,
 179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_CRC_VER_RULE_LBL,
 180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_READ_BS_REM_RULE_LBL,
 181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_INVALID_RULE_LBL,
 183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SLAVE_RX_OK,
 184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_RULE_NUM
 186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** };
 187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #else
 188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** enum ePP_SLAVE_STATE{
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_SLAVE_RX_HDR_START,          /**<  \hideinitializer starting receiving header */
 191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_SLAVE_RX_ALL_START,          /**<  \hideinitializer Receive all frame */
 192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_SLAVE_RX_ALL_COMPLETED,      /**<  \hideinitializer all frame received */
 193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_SLAVE_RX_OK,                 /**<  \hideinitializer frame ok */
 194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_SLAVE_RX_ERR                 /**<  \hideinitializer frame ko (chk o crc error),
 195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                                       \note the cause of error is not available */
 196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** };
 197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /** master Platform Protocol  state machine (Answer) */
 201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** enum ePP_MASTER_RESPONSE_STATE{
 202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_RESPONSE_GET_ACK,
 203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_RESPONSE_GET_HDR,
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_RESPONSE_COMPLETION,
 205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_RESPONSE_PROCESS,
 206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_END
 207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** };
 208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** enum eBOOT_MASTER_RESPONSE_STATE{
 210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BOOT_RESPONSE_GET_ACK,
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BOOT_RESPONSE_GET_LEN,
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BOOT_GET_DATA,
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BOOT_END_DATA,
 214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BOOT_END_ACK,
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /*PP_RESPONSE_GET_HDR,
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_RESPONSE_COMPLETION,
 217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_RESPONSE_PROCESS,*/
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BOOT_END
 219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** };
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \todo description
 223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** General purpose request macros
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /*
 226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_HDR_FROM_GP_BRIDGE_MSK           (PP_HDR_CRC)
 227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_HDR_TO_GP_BRIDGE_MSK             (PP_HDR_TYP_16)
 228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_CMD_ID_FROM_GP_PARAM(x)          (((CP_GP_ParamType*)(x))->ZBParam.Hdr.HdrByte.CommandID
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define I2C_ADDRESS_FROM_GP_PARAM(x)        (((CP_GP_ParamType*)(x))->ZBParam.PL.PlByte.I2cAddress)
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_HDR_FROM_GP_PARAM(x)             ((((CP_GP_ParamType*)(x))->ZBParam.PL.PLByte[1]) & PP_H
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_TYPE_FROM_GP_PARAM(x)            (((CP_GP_ParamType*)(x))->ZBParam.PL.PLByte[2])
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_LEN_FROM_GP_PARAM(x)             (((CP_GP_ParamType*)(x))->ZBParam.PL.PLByte[3])
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_PDATA_FROM_GP_PARAM(x)           ((uint8_t*)&(((CP_GP_ParamType*)(x))->ZBParam.PL.PLByte
 237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_BS_TYPE_FROM_GP_PARAM(x)         (((CP_GP_ParamType*)(x))->ZBParam.PL.PLByte[4])
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_BS_PDATA_FROM_GP_PARAM(x)        (1+(uint8_t*)&(((CP_GP_ParamType*)(x))->ZBParam.PL.PLBy
 240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #define PP_HDR_TO_GP_PARAM(x, val)          (*(((CP_GP_ParamType*)(x))->ZBParam.PL.PLByte[0])= val 
 243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* *************************** */
 249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Typedef, Structs and Unions */
 250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* *************************** */
 251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****  * Platform Protocol Master class.
 254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****  */
 255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** typedef struct
 257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   uint8_t                   state;						/**< Stato della macchina a stati */
 259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ChannelType            indexRequest;     /**< indice PP_MasterRequestTable */
 260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ChannelType            chBoard;          /**< indice board */
 261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_PacketSizeType        bcount;           /**< numero di byte */
 262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_PacketSizeType        lastRequestLen;   /**< numero di byte relativi all'ultima richiesta */
 263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ErrorType              error;
 264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }BCP_MasterPlatformProtocolType;
 265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	\ingroup PPS
 270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****  	Platform Protocol Slave class.
 271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_SLAVE_SUPPORT == TRUE
 273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** typedef struct
 274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_MemPtrType				pdata;				/* builder: pnt to data */
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	BCP_PacketSizeType        	dataCount;        	/* global current request bytes number */
 277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	BCP_PacketSizeType        	dataCountLast;    	/* partial current request bytes number*/
 278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	BCP_PacketSizeType        	answerCount;      	/* answer bytes number */
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	uint16_t 				  	crc;				/* crc */
 280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_ValueType              	state;            	/* rx state machine*/
 281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	uint8_t						option;				/* options */
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }PP_SlavePlatformProtocolClassType;
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** typedef struct BCP_Builder_tag
 286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_BufferType            data;
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_BufferSizeType        datalen;
 289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_PacketCodeType        code;
 290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_PacketOptionType      option;   /* chk/crc */
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }BCP_BuilderType;
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ********* */
 297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Variables */
 298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ********* */
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Exported */
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Static */
 306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /*Parser*/
 308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** const PP_ParserType PP_Parser[PP_RULE_NUM]= {
 310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* Basic frame */
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_READ_CMD, 3, 0, 0 },
 312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_NO_MATCH_CMD, PP_STX_INDEX, PP_STX, PP_INVALID_RULE_LBL},
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_NO_MATCH_CMD, PP_FTYP_INDEX, PP_FTYP_EE, PP_READ_BS_REM_RULE_LBL},
 314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* Extended frame */
 317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_READ_CMD, 3, 0, 0},
 318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_MODLEN_CMD, PP_HDR_INDEX, 2, 1},
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_MODLEN_CMD, PP_HDR_INDEX, 1, 1},
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_AND_CMD,  PP_HDR_INDEX, 2, PP_SETLEN_TYP01_RULE_LBL},
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_SETLEN_CMD, PP_LEN_INDEX, 0, PP_EE_READ_ALL_RULE_LBL},
 323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_SETLEN_CMD, PP_GLEN_INDEX, 0, PP_EE_READ_ALL_RULE_LBL},
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_READ_ALL_CMD, 0, IO_CLOSE, 0},
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_AND_CMD,  PP_HDR_INDEX, 1, PP_CRC_VER_RULE_LBL},
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* common Rules*/
 329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_CHK_CHECK_CMD, 0, 0, PP_SLAVE_RX_OK},
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_CRC_CHECK_CMD, 0, 0, PP_SLAVE_RX_OK},
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_READ_CMD, 3, IO_CLOSE, PP_CHK_VER_RULE_LBL},
 332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_INVALID_CMD, 0, 0 ,0},
 334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {PP_RX_OK_CMD, 0, 0 ,0}
 335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** };
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   \addtogroup PPM
 341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   @{
 342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static BCP_MasterPlatformProtocolType MasterPlatformProtocol[BCP_CH_NUM];
 345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* @} */
 347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Stato Platform Protocol Slave */
 351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if (BCP_SLAVE_SUPPORT == TRUE)
 352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static PP_SlavePlatformProtocolClassType   PP_SlavePlatformProtocol[BCP_CH_NUM];
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BCP_PacketSizeType PP_len;
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif /* (BCP_SLAVE_SUPPORT == TRUE) */
 355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static PP_BoardStateType PP_Ntwk[BOARD_NUM];
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ******************* */
 363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Functions Prototype */
 364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* ******************* */
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void crc_append (IO_BufferSizeType  len, IO_BufferType pdata);
 367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void chk_append (IO_BufferSizeType  len, IO_BufferType pdata);
 368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if (BCP_MASTER_SUPPORT == TRUE)
 371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType BCP_MasterNotify (IO_NotificationType notifVal,IO_ChannelType channel, IO_Error
 372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_BufferSizeType  BCP_MasterBuilder (IO_BufferType txBuffer, PP_MasterProtocolTableType inf
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void BCP_MasterResponseStateMachine(IO_ChannelType channel, IO_ErrorType error);
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER)
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void BCP_BootLoaderResponseStateMachine(IO_ChannelType channel);
 376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType BCP_MasterStartResponce(  IO_ChannelType channel, const BCP_MasterType * master);
 379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void PP_MasterValidateEEAnswer(IO_ChannelType channel, PP_MasterProtocolTableType* pProt);
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif /* (BCP_MASTER_SUPPORT == TRUE) */
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if (BCP_SLAVE_SUPPORT == TRUE)
 383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
 385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_SlaveRxInterpreter(IO_ChannelType channel);
 386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #else
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_SlaveReceiverStateMachine(IO_ChannelType chid);
 388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_SlaveReceiveData(IO_ChannelType chid, BCP_PacketSizeType * pLen, BCP_OptionT
 391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void PP_SlaveFragmentBuilder(IO_ChannelType ch, uint8_t chk_displ, uint8_t data_displ);
 392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif /* (BCP_SLAVE_SUPPORT == TRUE) */
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* *************** */
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Function Bodies */
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* *************** */
 407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Exported function */
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Platform Protocol Slave */
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** This method receives notification on events durig slave commmunication
 414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   notifVal notification codes:
 416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \li #IO_N_READ_DATA_INIT
 418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Initialization state machine.
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \li #IO_N_WRITE_DATA_INIT
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** calls the callback defined by
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \li #IO_N_TRANSFER_DONE
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** transfer is done
 423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \li #IO_N_ERROR
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** ignored
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   chid channel index (sender of the notification)
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   error code error (ignorato)
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \Example
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** This method is used as callback
 432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \code
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_PhyInitSyncType i2cParam={0};
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	i2cParam.eventCB=PP_SlaveNotification;
 436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   i2cParam.id=BCP_I2C_CH_ID;
 437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	OCI2C_InitSync(&i2cParam);
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \endcode
 440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
 442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
 444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
 446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
 448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \public \memberof PP_SlavePlatformProtocolClassType
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_SlaveNotification(IO_NotificationType notifVal, IO_ChannelType chid, IO_ErrorType e
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_ErrorType result=(IO_ErrorType)IO_E_OK;
 453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(void) error;
 454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	BCM_ForceRebuild(chid);
 457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	BCM_SetWait(chid, 0xff);
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	switch(notifVal)
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	case IO_N_READ_DATA_INIT:
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
 464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		PP_SlavePlatformProtocol[chid].state= (IO_ValueType)0;
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #else
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		PP_SlavePlatformProtocol[chid].state= (IO_ValueType)PP_SLAVE_RX_HDR_START;
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		PP_SlavePlatformProtocol[chid].dataCount=0;
 469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		break;
 470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	case IO_N_WRITE_DATA_INIT:
 472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       /* call appl callback */
 473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #ifdef BCM_SLAVE_ACTION_CB
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		if(PP_SlavePlatformProtocol[chid].dataCount)
 475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		{
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			(BCM_SLAVE_ACTION_CB)(chid, (IO_NotificationType)IO_N_ACTION);
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		}
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	case IO_N_TRANSFER_DONE:
 482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       result=PP_SlaveRxInterpreter(chid);
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #else
 485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			result=PP_SlaveReceiverStateMachine(chid);
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #ifdef BCP_FRAGMENT_SLAVE
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		case IO_N_TX_DONE:
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[chid].answerCount=0;
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlaveFragmentBuilder(chid, 0, 0);
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			(void)PP_SlaveStartResponse(chid);
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		case IO_N_COMPLETED:
 498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
 499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if (ENABLE_BCP_EOSN==TRUE)
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				PP_EosnFunction(chid);
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		BCM_SetWait(chid, 0);
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		case IO_N_ERROR:
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[chid].dataCount=64;
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		BCM_SetWait(chid, 0);
 512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		default:
 516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
 518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return result;
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Returns the state of the specified channel
 523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   ch channel id
 525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return     IO_ValueType
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
 531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \private \memberof PP_SlavePlatformProtocolClassType
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ValueType PP_GetSlaveState(IO_ChannelType ch)
 536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return PP_SlavePlatformProtocol[ch].state;
 538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Returns if the protocol level of the specified channel has received correctly the request
 542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   ch channel id
 544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return     bool_t
 545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     TRUE, if the request has been receved correctly
 546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
 548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
 550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
 552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \private \memberof PP_SlavePlatformProtocolClassType
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** bool_t PP_IsSlaveStateRxOK(IO_ChannelType ch)
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
 559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return (PP_SlavePlatformProtocol[ch].state ==(IO_ValueType)PP_SLAVE_RX_OK);
 560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #else
 561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_ErrorType err;
 562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	uint16_t crc = 0xFFFF;
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(BCP_ChannelTable[ch].rxBuffer[PP_STX_INDEX]!= PP_STX)
 565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		err = (IO_ErrorType)IO_E_CHECK_PP;
 567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return (bool_t)(err == (IO_ErrorType)IO_E_OK);
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
 569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(BCP_ChannelTable[ch].rxBuffer[PP_FTYP_INDEX]==PP_FTYP_EE)
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX] & PP_HDR_CRC)
 572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc = BCP_CRC_calculate(PP_SlavePlatformProtocol[ch].dataCount, BCP_ChannelTable[ch].rxBuffer, (
 574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		} else
 575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc = LIB_ChkComputation((uint16_t)(PP_SlavePlatformProtocol[ch].dataCount-1), BCP_ChannelTable[
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc &= (uint16_t)0x00FF;
 578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc ^= BCP_ChannelTable[ch].rxBuffer[PP_SlavePlatformProtocol[ch].dataCount-1];
 579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
 580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
 581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	else
 582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(PP_SlavePlatformProtocol[ch].dataCount == 6)
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
 585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc = LIB_ChkComputation((uint16_t)(PP_SlavePlatformProtocol[ch].dataCount - 1), BCP_ChannelTabl
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc &= (uint16_t)0x00FF;
 587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc ^= BCP_ChannelTable[ch].rxBuffer[PP_SlavePlatformProtocol[ch].dataCount-1];
 588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
 589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		else
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
 591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			err = (IO_ErrorType)IO_E_CHECK_PP;
 592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			return (bool_t)(err == (IO_ErrorType)IO_E_OK);
 593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
 595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(crc==0)
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* ok!!! */
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		BCM_CountersUpdater(ch, (IO_ErrorType) BCP_PACKET_NUM_NOERR_CNT);
 600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		err = (IO_ErrorType)IO_E_OK;
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	} else
 602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		BCM_CountersUpdater(ch, (IO_ErrorType) BCP_PP_CORRUPTED_PKT_ERR_CNT);
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[ch].state++;
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		err = (IO_ErrorType)IO_E_CHECK_PP;
 606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
 607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return (bool_t) (err == (IO_ErrorType) IO_E_OK);
 609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Starts answer as slave.
 615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   ch Identificatore del canale di comunicazione.
 617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return     IO_ErrorType
 619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     IO_E_INVALID_VALUE: buffer o len non validi
 620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             IO_E_BUSY: bus occupato (solo master)
 621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             IO_E_OK: trasmissione avviata regolarmente.
 622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
 625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
 627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
 628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
 629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \private \memberof PP_SlavePlatformProtocolClassType
 630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_SlaveStartResponse(IO_ChannelType ch)
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   CommDriverParamType requestParam={0};
 635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   requestParam.len = PP_SlavePlatformProtocol[ch].answerCount;
 637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(!PP_SlavePlatformProtocol[ch].dataCount)
 638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   	    requestParam.option |= IO_CLOSE_TX; /* last fragment */
 640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
 641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   requestParam.buffer=BCP_ChannelTable[ch].txBuffer;
 642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return ((IO_PhyCommunicationSync)(BCP_ChannelTable[ch].StartTxSync))(&requestParam);
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_InitChSync(IO_ChannelType ch)
 651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(ch>=BCP_CH_NUM)
 654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
 655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
 657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /*TODO : only for allocated address*/
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* PP_Ntwk[ch].esit=IO_E_OK; */
 660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* PP_Ntwk[ch].idReq=0xFF; */
 661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return (IO_ErrorType)IO_E_OK;
 663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Returns the result of the last request.
 668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   ch  Master Protocol channel
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return     IO_ErrorType
 672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval   	IO_E_OK: successfully
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval   	TODO : list other possible value
 674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
 675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
 677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
 679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
 680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_GetEsit(IO_ChannelType ch)
 684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return MasterPlatformProtocol[ch].error;
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Imposta i paramentri relativi ad una richiesta.
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   indexReq Indice dellla richiesta
 693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   idBoard  Indice del destinatario
 694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   pData Puntatore ai dati
 695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   len  dimensione in byte dei dati
 696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return     IO_ErrorType
 698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval   IO_E_OK: successo
 699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
 700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
 702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
 704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
 705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
 706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_MasterSetParamRequest(IO_ChannelType indexReq, IO_ChannelType idBoard, IO_MemPtrTyp
 709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ChannelType channel=PP_NtwkTable[idBoard].drvCh;
 711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(indexReq>PP_REQ_NUM)
 713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
 714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
 716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(len>*BCP_ChannelTable[channel].reqTable[indexReq].pLenReq)
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
 719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return (IO_ErrorType)IO_E_INVALID_SIZE;
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
 721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(BCP_ChannelTable[channel].reqTable[indexReq].code)
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
 724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case 0x3F:
 725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
 726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_AddressType addr;
 727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       addr=((PP_RRamParamType*)pData)->addr;
 728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(BCP_ChannelTable[channel].reqTable[indexReq].pDataReq)=(uint8_t)(addr.data & 0xFF);
 729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(BCP_ChannelTable[channel].reqTable[indexReq].pDataReq+1)=(uint8_t)((addr.data >> 8) & 0xFF)
 730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if( ( ((PP_RRamParamType*)pData)->len == 0) || (((PP_RRamParamType*)pData)->len >= 0x0100) )
 731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
 732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         ((PP_RRamParamType*)pData)->len = 0x0100;
 733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
 734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       addr.data+=((PP_RRamParamType*)pData)->len-1;
 736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(BCP_ChannelTable[channel].reqTable[indexReq].pDataReq+2)=(uint8_t)(addr.data & 0xFF);
 738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(BCP_ChannelTable[channel].reqTable[indexReq].pDataReq+3)=(uint8_t)((addr.data >> 8) & 0xFF)
 739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
 741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       break;
 742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
 744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
 745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        IO_BufferType  ptr;
 746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        ptr = BCP_ChannelTable[channel].reqTable[indexReq].pDataReq;
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        (void)memcpy(ptr, pData,(size_t) len);
 748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
 749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
 750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return (IO_ErrorType)IO_E_OK;
 753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
 758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Imposta i paramentri relativi ad una richiesta.
 759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   channel Channel index
 761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   indexReq  Request index
 762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   pData pointer to data
 763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   len  size in bytes of data
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return     IO_ErrorType
 766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval   IO_E_OK: successo
 767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
 768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
 772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
 773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
 774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
 775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_MasterSetParamRequestSync(IO_ChannelType channel, IO_ChannelType indexReq, IO_MemPt
 777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_MasterProtocolTableType* pMstProtTbl= &BCP_ChannelTable[channel].reqTable[indexReq];
 780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(indexReq>PP_REQ_NUM)
 782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
 783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
 785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(len>* pMstProtTbl->pLenReq)
 787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
 788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return (IO_ErrorType)IO_E_INVALID_SIZE;
 789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
 790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 791:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(pMstProtTbl->code)
 792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
 793:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case 0x3F:
 794:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
 795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_AddressType addr;
 796:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       addr=((PP_RRamParamType*)pData)->addr;
 797:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(pMstProtTbl->pDataReq)=(uint8_t)(addr.data & 0xFF);
 798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(pMstProtTbl->pDataReq+1)=(uint8_t)((addr.data >> 8) & 0xFF);
 799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if( (((PP_RRamParamType*)pData)->len==0) || (((PP_RRamParamType*)pData)->len>= 0x0100) )
 800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
 801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         ((PP_RRamParamType*)pData)->len=0x0100;
 802:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
 803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       addr.data+=((PP_RRamParamType*)pData)->len-1;
 805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(pMstProtTbl->pDataReq+2)=(uint8_t)(addr.data & 0xFF);
 807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(pMstProtTbl->pDataReq+3)=(uint8_t)((addr.data >> 8) & 0xFF);
 808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 809:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
 810:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       break;
 811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 812:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
 813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
 814:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        IO_BufferType  ptr;
 815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        ptr = pMstProtTbl->pDataReq;
 816:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        (void)memcpy(ptr, pData,(size_t) len);
 817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
 818:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
 819:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 820:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return (IO_ErrorType)IO_E_OK;
 822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 823:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 824:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 826:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_BufferSizeType PP_GetRequestLen(IO_BufferType txBuffer, const PP_MasterProtocolTableType * info)
 827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferSizeType retVal = (IO_BufferSizeType)(PP_LEN_INDEX+1+*info->pLenReq+((info->option&PPM_OP
 829:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 830:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if !defined(CP_GENERAL_PURPOSE)
 831:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     (void) txBuffer;
 832:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 834:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER) || defined(CP_GENERAL_PURPOSE)
 835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 836:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	switch(info->paramType)
 837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER)
 839:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		case PPM_REQPARAMTYPE_BOOT:
 840:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			retVal = (IO_BufferSizeType)PP_LEN_FROM_GP_PARAM(info->pDataReq);
 841:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/*lint -e{527} Warning 527: */
 842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		break;
 843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 844:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	#if defined(CP_GENERAL_PURPOSE)
 846:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 847:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    case PPM_REQPARAMTYPE_GP:
 848:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      switch(PP_CMD_ID_FROM_GP_PARAM(info->pDataReq))
 849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      {
 850:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        case PP_CMD_EXTENDED_WITH_ANSW:
 851:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        case PP_CMD_EXTENDED_NO_ANSW:
 852:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        	retVal = (IO_BufferSizeType)(PP_LEN_INDEX+1+*(txBuffer + PP_LEN_INDEX)+((*(txBuffer + PP_
 854:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 855:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 856:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        case PP_CMD_BASIC:
 858:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        	retVal = 6;
 859:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        break;
 860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      }
 861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    break;
 862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	#endif
 863:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 864:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  default:
 865:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		break;
 866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 867:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
 868:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  return retVal;
 871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 872:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 873:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
 874:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_BufferSizeType PP_PrepareRequest(IO_BufferType txBuffer, const PP_MasterProtocolTableType * info
 875:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 876:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 877:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferSizeType packetLen = 0;
 878:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 879:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/* data to be copied parameters */
 880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferType      pData=0;						/*TODO to delete buffer */
 881:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferSizeType  len=0;							/*TODO to delete len */
 882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferSizeType  s_index=0, d_index=0;			/*TODO to delete source and destination index */
 883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferSizeType  ed_index=0;					/* number of data on which crc or chr will be calculated */
 885:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 886:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 887:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	switch(info->paramType)
 888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
 889:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER)
 890:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		case PPM_REQPARAMTYPE_BOOT:
 891:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			packetLen=(IO_BufferSizeType)PP_LEN_FROM_GP_PARAM(info->pDataReq);
 892:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			if(info->pDataReq)
 893:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			{
 894:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				(void)memcpy(txBuffer, PP_PDATA_FROM_GP_PARAM(info->pDataReq), PP_LEN_FROM_GP_PARAM(info->pData
 895:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			}
 896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		break;
 897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
 898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 899:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	#if defined(CP_GENERAL_PURPOSE)
 900:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 901:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    case PPM_REQPARAMTYPE_GP:
 902:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      switch(PP_CMD_ID_FROM_GP_PARAM(info->pDataReq))
 903:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      {
 904:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        case PP_CMD_EXTENDED_WITH_ANSW:
 905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        case PP_CMD_EXTENDED_NO_ANSW:
 906:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				*(txBuffer + PP_STX_INDEX) = PP_STX;
 907:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				*(txBuffer + PP_FTYP_INDEX) = PP_FTYP_EE;
 908:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				*(txBuffer + PP_HDR_INDEX) = PP_HDR_FROM_GP_PARAM(info->pDataReq);
 909:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				*(txBuffer + PP_DTYP_INDEX) = PP_TYPE_FROM_GP_PARAM(info->pDataReq);
 910:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				*(txBuffer + PP_LEN_INDEX) = PP_LEN_FROM_GP_PARAM(info->pDataReq);
 911:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 912:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 913:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				packetLen=(IO_BufferSizeType)(PP_LEN_INDEX+1+*(txBuffer + PP_LEN_INDEX)+((*(txBuffer + PP_HDR_I
 914:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				ed_index= PP_LEN_INDEX+1+*(txBuffer + PP_LEN_INDEX);
 915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 916:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				if(info->pDataReq)
 917:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				{
 918:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 					(void)memcpy((txBuffer + PP_DAT_INDEX), PP_PDATA_FROM_GP_PARAM(info->pDataReq), *(txBuffer + P
 919:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				}
 920:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			break;
 922:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        case PP_CMD_BASIC:
 925:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				*(txBuffer + PP_STX_INDEX) = PP_STX;
 926:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				*(txBuffer + PP_BS_TYP_INDEX) = PP_BS_TYPE_FROM_GP_PARAM(info->pDataReq);
 927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 928:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				packetLen=6;
 929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				ed_index=5;
 930:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 931:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				if(info->pDataReq)
 932:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				{
 933:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 					(void)memcpy((txBuffer + 2), PP_BS_PDATA_FROM_GP_PARAM(info->pDataReq), 3);
 934:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				}
 935:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	        break;
 937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      }
 938:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    break;
 939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	#endif
 940:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 941:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	default:
 942:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      *(txBuffer + PP_STX_INDEX) = PP_STX;
 943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      *(txBuffer + PP_FTYP_INDEX) = PP_FTYP_EE;
 944:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      *(txBuffer + PP_HDR_INDEX) = (info->option&PPM_OPTION_CRC)?PP_HDR_CRC:PP_HDR_CHK;
 945:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      *(txBuffer + PP_DTYP_INDEX) = info->code;
 946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      *(txBuffer + PP_LEN_INDEX) = (uint8_t)(*info->pLenReq);
 947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      pData=info->pDataReq;
 948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      len=*info->pLenReq;
 949:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      d_index=PP_DAT_INDEX;
 950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      s_index=0;
 951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      packetLen=(IO_BufferSizeType)(PP_LEN_INDEX+1+*info->pLenReq+((info->option&PPM_OPTION_CRC)?2
 952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      ed_index= PP_LEN_INDEX+1+*(txBuffer + PP_LEN_INDEX);
 953:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 955:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      if(info->pDataReq)
 956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			{
 957:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             (void) memcpy((txBuffer + d_index), pData+s_index, (size_t) len);
 958:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			}
 959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			else
 960:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			{
 961:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			/* memset(txBuffer + d_index, 0, len); */
 962:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			}
 963:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 964:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    break;
 965:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  }
 966:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  /* calculate crc or chk */
 968:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  if(*(txBuffer + PP_STX_INDEX) == PP_STX)
 969:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  {
 970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    if((*(txBuffer + PP_FTYP_INDEX) == PP_FTYP_EE) && (*(txBuffer + PP_HDR_INDEX) & PP_HDR_CRC)/*i
 971:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    {
 972:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      crc_append(ed_index,txBuffer);
 973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    } else
 974:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    {
 975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	      chk_append(ed_index,txBuffer);
 976:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    }
 977:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  }
 978:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 979:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  return packetLen;
 980:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 982:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 984:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** I2C_SlaveAddressType PP_GetSlaveAddress(IO_ChannelType idBoard, const PP_MasterProtocolTableType *i
 985:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 986:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	I2C_SlaveAddressType retVal = PP_NtwkTable[idBoard].slaveAddress;
 987:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_GENERAL_PURPOSE) || defined(CP_BOOTLOADER)
 989:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 990:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	switch(info->paramType)
 991:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  {
 992:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    case PPM_REQPARAMTYPE_GP:
 993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    case PPM_REQPARAMTYPE_BOOT:
 994:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    	retVal I2C_ADDRESS_FROM_GP_PARAM(info->pDataReq);
 995:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    break;
 996:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
 997:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    default:
 998:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    break;
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  }
1000:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1002:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return retVal;
1003:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1004:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1005:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1006:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1007:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_StartDriverRequestSync(IO_ChannelType channel, CommDriverParamType *param)
1008:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1009:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	MasterPlatformProtocol[channel].error = ((IO_PhyCommunicationSync)(BCP_ChannelTable[channel].Start
1010:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1011:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1012:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(MasterPlatformProtocol[channel].error == (IO_ErrorType)IO_E_OK )
1013:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
1014:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_WORKING;
1015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
1016:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1017:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return MasterPlatformProtocol[channel].error;
1018:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1019:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1020:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
1021:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Starts the request \a indexReq on the channel \a channel of the protocol.
1022:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1023:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** builds the packet and calls the driver's method. It doesn't wait for the request is over.
1024:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1025:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in] 	channel
1026:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Protocol channel
1027:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in] 	indexReq IO_ChannelType
1028:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Protocol request index (PP_MasterRequestTable).
1029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]		param
1030:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** pointer to driver parameters
1031:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1032:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return 		  IO_ErrorType
1033:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1034:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     #IO_E_WORKING
1035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Richiesta avviata con successo.
1036:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     #IO_E_BUSY
1037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Richiesta gia' in atto
1038:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     #IO_E_INVALID_VALUE
1039:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Parametri non corretti
1040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1041:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
1042:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1043:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
1044:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
1046:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			15/04/2009
1047:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
1048:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1049:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \todo  PP_BOOT_TYPE_READ not implemented yet
1050:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \todo PPM_REQPARAMTYPE_EXTENDED not implemented
1051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \todo change name
1052:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
1053:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_MasterPrepareRequest(IO_ChannelType indexReq, IO_ChannelType channel, CommDriverPar
1055:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1056:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1057:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_BuilderType commPrepareInfo;
1058:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1059:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(indexReq>PP_REQ_NUM)
1060:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1061:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1062:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1063:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1064:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* Initializes state machine Protocol Protocol */
1065:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   MasterPlatformProtocol[channel].indexRequest=indexReq;
1066:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   MasterPlatformProtocol[channel].lastRequestLen=0;
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* Default action */
1069:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   MasterPlatformProtocol[channel].state=PP_RESPONSE_GET_ACK;
1070:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   param->option=IO_OPT_MASTER;
1071:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   param->buffer=BCP_ChannelTable[channel].txBuffer;
1072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   param->callback=BCP_MasterNotify;
1073:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER)
1075:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(PP_MasterProtocolTable[indexReq].idStateMachine)
1077:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1078:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case BCP_BOOTLOADER:
1079:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       param->option=IO_OPT_MASTER;
1080:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       param->buffer=BCP_ChannelTable[channel].txBuffer;
1081:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       param->callback=BCP_MasterNotify;
1082:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       switch(PP_TYPE_FROM_GP_PARAM(PP_MasterProtocolTable[indexReq].pDataReq))
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1084:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  case PP_BOOT_TYPE_ACK:
1085:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  case PP_BOOT_TYPE_ERASE:
1086:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  case PP_BOOT_TYPE_WRITE:
1087:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  case PP_BOOT_TYPE_QUIT:
1088:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			  MasterPlatformProtocol[channel].state=BOOT_RESPONSE_GET_ACK;
1089:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			  break;
1090:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  case PP_BOOT_TYPE_IDENT:
1091:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			  MasterPlatformProtocol[channel].state=BOOT_RESPONSE_GET_LEN;
1092:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			  break;
1093:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  case PP_BOOT_TYPE_READ:
1094:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			  MasterPlatformProtocol[channel].state=BOOT_GET_DATA;
1095:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			  break;
1096:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1097:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       break;
1098:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1099:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
1100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return (IO_ErrorType)IO_E_OK;
1104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
1108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Avvia la procedura per la risposta su un canale di comunicazione.
1110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in] 	channel Indice del canale di comunicazione
1112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in] 	master  Parametri per il processamento della risposta.
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return     #IO_ErrorType
1115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     IO_E_OK
1117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Richiesta avviata con successo.
1118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     IO_E_INVALID_VALUE
1119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Parametri non corretti.
1120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     IO_E_INVALID_CHANNEL_ID
1121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Canale non corretto.
1122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
1124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
1126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
1128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			15/04/2009
1129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
1130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
1131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType BCP_MasterStartResponce(  IO_ChannelType channel, const BCP_MasterType * master)
1133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   CommDriverParamType responceParam={0};
1135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   responceParam.len=master->requestLen;
1136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   responceParam.callback=master->callback;
1137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   responceParam.option= IO_OPT_MASTER | master->option;
1138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   responceParam.buffer=BCP_ChannelTable[channel].rxBuffer+MasterPlatformProtocol[channel].lastReque
1139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   MasterPlatformProtocol[channel].lastRequestLen+=master->requestLen;
1141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return ((IO_PhyCommunicationSync)(BCP_ChannelTable[channel].StartRxSync))(&responceParam);
1143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void PP_MasterValidateEEAnswer(IO_ChannelType channel, PP_MasterProtocolTableType* pProt)
1149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_BufferSizeType  len;
1151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** uint16_t crc;
1152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BCP_ChannelTableType const * pChannel = &BCP_ChannelTable[channel];
1154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     switch(pProt->paramType)
1155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
1156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_GENERAL_PURPOSE)
1157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PPM_REQPARAMTYPE_GP:
1158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if((pChannel->rxBuffer[PP_STX_INDEX] == PP_ACK))
1160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             switch(pProt->pDataReq[PP_GP_CMDID_INDEX])
1163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		{
1164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		case PP_CMD_EXTENDED_WITH_ANSW:
1166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			/* extended with answer */
1167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			len=(pChannel->rxBuffer[PP_LEN_INDEX+PP_ACK_SZ]==0)?0x100:pChannel->rxBuffer[PP_LEN_INDEX+PP
1168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			
1169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			len=(len+PP_OUT_BUFF_RESERVED_SZ>=pProt->LenRes)?pProt->LenRes-PP_OUT_BUFF_RESERVED_SZ:len;
1170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			
1171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			if(pChannel->txBuffer[PP_HDR_INDEX+PP_ACK_SZ] & PP_HDR_CRC)
1172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 {
1173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   crc = BCP_CRC_calculate(len+PP_DAT_INDEX+2, &(pChannel->rxBuffer[PP_ACK_SZ]), 0xF
1174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 }
1175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 else
1176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 {
1177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   crc= LIB_ChkComputation((uint16_t)(len+PP_DAT_INDEX), &(pChannel->rxBuffer[PP_ACK
1178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   crc &= (uint16_t)0x00FF;
1179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   crc = crc^(pChannel->rxBuffer[len+PP_ACK_SZ+PP_DAT_INDEX]);
1180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 }
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 if(!crc && (pChannel->rxBuffer[PP_STX_INDEX+PP_ACK_SZ] == PP_STX)) 
1183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 {
1184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_OK;
1186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     
1187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     PP_EncodeHdrGPAnsParam(pProt, pChannel->rxBuffer[PP_ACK_POS]);
1188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			    PP_EncodeDataGPAnsParam(pProt, len, &pChannel->rxBuffer[PP_DAT_INDEX+PP_ACK_SZ]);
1189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			    
1190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     				
1191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     BCM_CountersUpdater(channel, BCP_PACKET_NUM_NOERR_CNT);
1192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 } else 
1193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 {
1194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   BCM_CountersUpdater(channel, BCP_PP_CORRUPTED_PKT_ERR_CNT);
1195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   
1196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_CHECK_PP;
1197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 }
1198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         
1199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			break;
1200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		case PP_CMD_EXTENDED_NO_ANSW:
1201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		        PP_EncodeHdrGPAnsParam(pProt, pChannel->rxBuffer[PP_ACK_POS]);
1202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		        MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_OK;
1203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		    break;
1204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		case PP_CMD_BASIC:
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		    len=(pChannel->rxBuffer[PP_BS_LEN_ANS_INDEX+PP_ACK_SZ]==0)?0x100:pChannel->rxBuffer[PP_BS
1207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		    len=(len+PP_OUT_BUFF_RESERVED_SZ>=pProt->LenRes)?pProt->LenRes-PP_OUT_BUFF_RESERVED_SZ:le
1208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 if( ((*(pChannel->txBuffer+PP_BS_TYP_INDEX+PP_ACK_SZ) & PP_BS_TYPE_MSK) == PP_BS_TY
1210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 && (pChannel->rxBuffer[PP_STX_INDEX+PP_ACK_SZ] == PP_STX) 
1211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 )
1212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 {
1213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     crc= LIB_ChkComputation((uint16_t)(len+PP_BS_DAT_ANS_INDEX), &(pChannel->rxBuff
1214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     crc &= (uint16_t)0x00FF;
1215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     crc = crc^(pChannel->rxBuffer[len+PP_ACK_SZ+PP_BS_DAT_ANS_INDEX]);
1216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 } else
1217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 {
1218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                     crc=0;
1219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 }
1220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		    
1221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			/* basic with answer */
1222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			if(!crc)
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			{
1224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			    PP_EncodeHdrGPAnsParam(pProt, pChannel->rxBuffer[PP_ACK_POS]);
1225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			    if( ((*(pChannel->txBuffer+PP_BS_TYP_INDEX+PP_ACK_SZ) & PP_BS_TYPE_MSK) == PP_BS_TYPE_RE
1226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			    {
1227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			        PP_EncodeDataGPAnsParam(pProt, len, &pChannel->rxBuffer[PP_BS_DAT_ANS_INDEX+PP_ACK_S
1228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			    }
1229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			    MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_OK;
1230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     				
1231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			}
1232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			else 
1233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 {
1234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   BCM_CountersUpdater(channel, BCP_PP_CORRUPTED_PKT_ERR_CNT);
1236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                   MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_CHECK_PP;
1237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 }
1239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 
1240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			break;
1241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		}
1242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		break;
1244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	}
1245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	else if(pChannel->rxBuffer[PP_STX_INDEX] == PP_NACK)
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	{
1247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		PP_EncodeHdrGPAnsParam(pProt, pChannel->rxBuffer[PP_ACK_POS]);
1248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_ACK_PP;
1249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	}else
1250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	{
1251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_ACK_BUS;
1252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	}
1253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       break;
1254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     #endif
1255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
1257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* 'len' extended protocol*/
1258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         len= ((pChannel->rxBuffer[PP_LEN_INDEX+PP_ACK_SZ] == (IO_BufferSizeType) 0) ? 0x100 : pChan
1259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(pChannel->txBuffer[PP_HDR_INDEX+PP_ACK_SZ] & PP_HDR_CRC)
1261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           crc = BCP_CRC_calculate(len + (IO_BufferSizeType) (PP_DAT_INDEX + 2), &(pChannel->rxBuffe
1263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         else
1265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           crc= LIB_ChkComputation((uint16_t)(len+PP_DAT_INDEX), &(pChannel->rxBuffer[PP_ACK_SZ]),(u
1267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           crc &= (uint16_t)0x00FF;
1268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           crc = crc^(pChannel->rxBuffer[len+PP_ACK_SZ+PP_DAT_INDEX]);
1269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(!crc) {
1272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           /* TODO delete PP_Ntwk[MasterPlatformProtocol[channel].chBoard].esit=IO_E_OK;*/
1274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         	MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_OK;
1275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           if(pProt->option & PPM_OPTION_DATACOPY)
1277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           {
1278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               /* copia: dati */
1279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               len = ((len+PP_OUT_BUFF_RESERVED_SZ) >= pProt->LenRes) ? (IO_BufferSizeType) pProt->L
1281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         	  (void)memcpy(pProt->pDataRes+PP_OUT_BUFF_RESERVED_SZ, &pChannel->rxBuffer[PP_DAT_INDEX+P
1282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               *((IO_BufferSizeType *)pProt->pDataRes)=len + (PP_OUT_BUFF_RESERVED_SZ - sizeof(IO_Bu
1283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           }
1284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           BCM_CountersUpdater(channel, BCP_PACKET_NUM_NOERR_CNT);
1285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         } else {
1286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           BCM_CountersUpdater(channel, BCP_PP_CORRUPTED_PKT_ERR_CNT);
1288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           BCM_ForceRebuild((IO_ChannelType)channel);
1290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           /* TODO delete PP_Ntwk[MasterPlatformProtocol[channel].chBoard].esit=IO_E_CHECK_PP;*/
1292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_OK;
1293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }   
1298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType PP_MasterValidateAnswer (IO_ChannelType channel)
1301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ChannelType idx=MasterPlatformProtocol[channel].indexRequest;
1303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** PP_MasterProtocolTableType *pProt = (PP_MasterProtocolTableType *) &PP_MasterProtocolTable[idx];
1304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     switch(pProt->idStateMachine)
1305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
1306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER)
1307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         case BCP_BOOTLOADER:
1308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           /* TODO CP_MasterValidateBootLoaderAnswer(channel); */
1309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           break;
1310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         default:
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           PP_MasterValidateEEAnswer(channel, pProt);
1313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
1314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     return PP_GetEsit(channel);    
1315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
1320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Callback del driver di comunicazione per il processamento delle notifiche.
1322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   notifVal  Identificatore della notifica
1324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   channel   Indice del canale di comunicazione
1325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   error     Codice dell'errore della notifica
1326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
1328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			15/04/2009
1329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
1330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
1331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ErrorType BCP_MasterNotify (IO_NotificationType notifVal,IO_ChannelType channel, IO_ErrorType er
1333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_ChannelType idx=MasterPlatformProtocol[channel].indexRequest;
1335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(notifVal)
1337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case IO_N_TRANSFER_DONE:
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       switch(PP_MasterProtocolTable[idx].idStateMachine)
1340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER)
1342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         case BCP_BOOTLOADER:
1343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           BCP_BootLoaderResponseStateMachine(channel);
1344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           break;
1345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         default:
1347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           BCP_MasterResponseStateMachine(channel, error);
1348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           break;
1349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       break;
1352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case IO_N_ERROR:
1353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_Ntwk[MasterPlatformProtocol[channel].chBoard].esit=error;
1354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if((channel == BCP_I2C_CH_ID) && (error == (IO_ErrorType)IO_E_ACK_BUS))
1355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCM_CountersUpdater(channel, BCP_DRV2_CNT);
1357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       MasterPlatformProtocol[channel].error = error;
1360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       break;
1361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
1362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     ;
1363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return IO_E_OK;
1366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void PP_EncodeHdrGPAnsParam(PP_MasterProtocolTableType* pGpReq, uint8_t ackval)
1372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	
1374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(*(pGpReq->pDataRes+PP_GP_CMDID_ANS_INDEX) != PP_CMD_EXTENDED_NO_ANSW)
1375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
1376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* HDR */
1377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(pGpReq->pDataRes+PP_GP_HDR_ANS_INDEX)=0x02 | *(pGpReq->pDataReq+ PP_GP_HDR_INDEX);
1378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* TYP */
1380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(pGpReq->pDataRes+PP_GP_TYP_ANS_INDEX)=*(pGpReq->pDataReq+ PP_GP_TYP_INDEX);
1381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
1382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	
1383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/* copying seq num and CmdId */
1384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(void)memcpy(pGpReq->pDataRes+PP_OUT_BUFF_RESERVED_SZ, pGpReq->pDataReq, PP_OUT_BUFF_RESERVED_SZ);
1385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/* ACK */
1387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	*(pGpReq->pDataRes+PP_GP_ACK_ANS_INDEX)=ackval;
1388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/* bridge data len */
1390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	*((IO_BufferSizeType *)pGpReq->pDataRes)= (IO_BufferSizeType)(PP_GP_ACK_ANS_INDEX - PP_OUT_BUFF_RE
1391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if 0
1395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void PP_EncodeHdrAnsBridgeParam(IO_ChannelType idx, uint8_t ackval)
1396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/* copying seq num and CmdId */
1398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(void)memcpy(PP_MasterProtocolTable[idx].pDataRes+PP_OUT_BUFF_RESERVED_SZ, PP_MasterProtocolTable[
1399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_CMDID_ANS_INDEX) != PP_CMD_EXTENDED_NO_ANSW)
1401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
1402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* HDR */
1403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_HDR_ANS_INDEX)=0x02;
1404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* TYP */
1406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_TYP_ANS_INDEX)=*(PP_MasterProtocolTable[idx].pDataRe
1407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
1408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/* ACK */
1410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_ACK_ANS_INDEX)=ackval;
1411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/* bridge data len */
1413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	*((IO_BufferSizeType *)PP_MasterProtocolTable[idx].pDataRes)= (IO_BufferSizeType)(PP_GP_ACK_ANS_IN
1414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void PP_EncodeDataGPAnsParam(PP_MasterProtocolTableType* pGpReq, IO_BufferSizeType u8Len, uint8_t* 
1422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferSizeType len = u8Len;
1424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	
1425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(len)
1426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
1427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    /* copying: LEN , DATA */
1428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	*(pGpReq->pDataRes+(PP_GP_OUT_BUFF_RESERVED_SZ - PP_LEN_SZ)) = (uint8_t)len;
1429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	(void)memcpy((pGpReq->pDataRes + PP_GP_OUT_BUFF_RESERVED_SZ ), pData, len);
1430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	/* bridge data len update */
1432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	*((IO_BufferSizeType *)pGpReq->pDataRes) += (len + PP_GP_LEN_ANS_INDEX - PP_GP_ACK_ANS_INDEX);
1433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}	
1434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void PP_EncodeDataBootAnsParam(IO_ChannelType idx, uint8_t* pData)
1439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       /* TYP */
1442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       /*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_TYP_ANS_INDEX)=*(PP_MasterProtocolTable[idx].pD
1443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       switch(*(PP_MasterProtocolTable[idx].pDataReq+ PP_GP_TYP_INDEX))
1445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       case PP_BOOT_TYPE_ACK:
1447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       case PP_BOOT_TYPE_QUIT:
1448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	  /* LEN */
1449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	  *(PP_MasterProtocolTable[idx].pDataRes+PP_GP_LEN_ANS_INDEX)=1;
1450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   		  /* DATA */
1451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   		  (void)memcpy((PP_MasterProtocolTable[idx].pDataRes + PP_GP_OUT_BUFF_RESERVED_SZ ), pData, 1);
1452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	  break;
1453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       default:
1454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	  /* PP_BOOT_TYPE_WRITE, PP_BOOT_TYPE_ERASE */
1455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  /* LEN */
1457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  *(PP_MasterProtocolTable[idx].pDataRes+PP_GP_LEN_ANS_INDEX)=3;
1458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  /* DATA */
1460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  (void)memcpy((PP_MasterProtocolTable[idx].pDataRes + PP_GP_OUT_BUFF_RESERVED_SZ), pData, 1);
1461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  (void)memcpy((PP_MasterProtocolTable[idx].pDataRes + PP_GP_OUT_BUFF_RESERVED_SZ +1 ), PP_Master
1462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       /* bridge data len update */
1466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *((IO_BufferSizeType *)PP_MasterProtocolTable[idx].pDataRes) += (*(PP_MasterProtocolTable[idx
1467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if (BCP_MASTER_SUPPORT == TRUE) && defined(CP_BOOTLOADER)
1471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void BCP_BootLoaderResponseStateMachine(IO_ChannelType channel)
1472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_MasterType responce={0};
1474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ChannelType idx=MasterPlatformProtocol[channel].indexRequest;
1475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(MasterPlatformProtocol[channel].state)
1477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case BOOT_RESPONSE_GET_ACK:
1479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		responce.callback=BCP_MasterNotify;
1480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		responce.requestLen=1;
1481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		responce.option |= (IO_CLOSE|IO_OPT_MASTER);
1482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		MasterPlatformProtocol[channel].state = BOOT_END_ACK;
1484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		(void)BCP_MasterStartResponce(channel, &responce);
1486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		break;
1487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case BOOT_RESPONSE_GET_LEN:
1489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	responce.callback=BCP_MasterNotify;
1490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		responce.requestLen=1;
1491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		responce.option |= (IO_OPT_MASTER);
1492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		MasterPlatformProtocol[channel].state = BOOT_GET_DATA;
1494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		(void)BCP_MasterStartResponce(channel, &responce);
1496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	break;
1497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case BOOT_GET_DATA:
1499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	responce.callback=BCP_MasterNotify;
1500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		responce.requestLen=BCP_ChannelTable[channel].rxBuffer[0];
1501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		responce.option |= (IO_CLOSE|IO_OPT_MASTER);
1502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		MasterPlatformProtocol[channel].state = BOOT_END_DATA;
1504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		(void)BCP_MasterStartResponce(channel, &responce);
1506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	break;
1507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case BOOT_END_DATA:
1509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	MasterPlatformProtocol[channel].state=BOOT_END;
1510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* copying seq num and CmdId */
1512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	(void)memcpy(PP_MasterProtocolTable[idx].pDataRes+PP_OUT_BUFF_RESERVED_SZ, PP_MasterProtocolTa
1513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* TYP */
1515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_TYP_ANS_INDEX)=*(PP_MasterProtocolTable[idx].pDataRe
1516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* ACK */
1519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_ACK_ANS_INDEX)=0x5A;
1520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* bridge data len */
1522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*((IO_BufferSizeType *)PP_MasterProtocolTable[idx].pDataRes)= (IO_BufferSizeType)(PP_GP_ACK_ANS_I
1523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* HDR */
1525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_HDR_ANS_INDEX)=0x02;
1526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* LEN */
1529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*(PP_MasterProtocolTable[idx].pDataRes+PP_GP_LEN_ANS_INDEX)=MasterPlatformProtocol[channel].lastR
1530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* DATA */
1532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		(void)memcpy((PP_MasterProtocolTable[idx].pDataRes + PP_GP_OUT_BUFF_RESERVED_SZ ), &BCP_ChannelTa
1533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* bridge data len update */
1535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		*((IO_BufferSizeType *)PP_MasterProtocolTable[idx].pDataRes) += (MasterPlatformProtocol[channel].
1536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		MasterPlatformProtocol[channel].error=IO_E_OK;
1538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	break;
1540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case BOOT_END_ACK:
1542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_EncodeHdrGPAnsParam((PP_MasterProtocolTableType *) &PP_MasterProtocolTable[idx], (uint8_
1544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	PP_EncodeDataBootAnsParam(idx, &BCP_ChannelTable[channel].rxBuffer[PP_ACK_POS]);
1545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       MasterPlatformProtocol[channel].state=BOOT_END;
1547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       MasterPlatformProtocol[channel].error=IO_E_OK;
1549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case BOOT_END:
1552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
1553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
1562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Macchina a stati di ricezione Master.
1564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]  channel Indice del canale di comunicazione
1566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]  error Codice errore della notifica
1567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
1569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
1571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
1573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			15/04/2009
1574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
1575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
1576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void BCP_MasterResponseStateMachine(IO_ChannelType channel, IO_ErrorType error)
1578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_MasterType responce={0};
1580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ChannelType idx=MasterPlatformProtocol[channel].indexRequest;
1581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   (void) error;
1582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(MasterPlatformProtocol[channel].state)
1584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_RESPONSE_GET_ACK:
1586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       responce.callback=BCP_MasterNotify;
1588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       responce.requestLen=1;
1589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       switch(PP_MasterProtocolTable[idx].paramType) {
1591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_GENERAL_PURPOSE)
1592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         case PPM_REQPARAMTYPE_GP:
1593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           MasterPlatformProtocol[channel].state++;
1594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           switch(PP_CMD_ID_FROM_GP_PARAM(PP_MasterProtocolTable[idx].pDataReq))
1595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           {
1596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             case PP_CMD_EXTENDED_NO_ANSW:
1598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               responce.option |= (IO_CLOSE|IO_OPT_MASTER);
1599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               MasterPlatformProtocol[channel].state=PP_RESPONSE_PROCESS;
1600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               break;
1601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             case PP_CMD_BASIC:
1603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               if((*(BCP_ChannelTable[channel].txBuffer+PP_BS_TYP_INDEX) & PP_BS_TYPE_MSK) != PP_BS_
1605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               {
1606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 responce.option |= (IO_CLOSE|IO_OPT_MASTER);
1607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 MasterPlatformProtocol[channel].state=PP_RESPONSE_PROCESS;
1608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               }
1609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               break;
1611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             default:
1613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             case PP_CMD_EXTENDED_WITH_ANSW:
1614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             break;
1615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           }
1616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         break;
1617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         default:
1619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           MasterPlatformProtocol[channel].state++;
1620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           if(0 == (PP_MasterProtocolTable[idx].option & PPM_OPTION_GETDATA))
1621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           {
1622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             responce.option |= (IO_CLOSE|IO_OPT_MASTER);
1623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             MasterPlatformProtocol[channel].state=PP_RESPONSE_PROCESS;
1624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           }
1625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         break;
1626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       (void)BCP_MasterStartResponce(channel,&responce);
1629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_RESPONSE_GET_HDR:
1632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       /*ACK analysis */
1634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(BCP_ChannelTable[channel].rxBuffer[0] != PP_ACK)
1635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* */
1637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCM_CountersUpdater(channel, BCP_PP_ACK_MISSING_ERR_CNT);
1639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCM_ForceRebuild(channel);
1641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if((PP_MasterProtocolTable[idx].option & PPM_OPTION_GETDATA) ||
1644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****          (PP_CMD_ID_FROM_GP_PARAM(PP_MasterProtocolTable[idx].pDataReq) == PP_CMD_EXTENDED_WITH_ANS
1645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           responce.option|=IO_CLOSE;
1647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           responce.requestLen = 1;
1648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         (void)BCP_MasterStartResponce(channel,&responce);
1651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         switch(PP_MasterProtocolTable[idx].paramType)
1652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_GENERAL_PURPOSE)
1654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           case PPM_REQPARAMTYPE_GP:
1655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             MasterPlatformProtocol[channel].state=PP_RESPONSE_PROCESS;
1656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           break;
1657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           default:
1659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  	MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_ACK_PP;
1660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             MasterPlatformProtocol[channel].state=PP_END;
1661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         break;
1664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       switch(PP_MasterProtocolTable[idx].paramType) {
1668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_GENERAL_PURPOSE)
1669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         case PPM_REQPARAMTYPE_GP:
1670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           switch(PP_CMD_ID_FROM_GP_PARAM(PP_MasterProtocolTable[idx].pDataReq))
1671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           {
1672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             case PP_CMD_EXTENDED_WITH_ANSW:
1673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               {
1674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 responce.callback=BCP_MasterNotify;
1675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 responce.requestLen=PP_LEN_INDEX+1;
1676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 MasterPlatformProtocol[channel].state++;
1678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 (void)BCP_MasterStartResponce(channel,&responce);
1679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               }
1680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               break;
1681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             case PP_CMD_BASIC:
1683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 /* TODO: in base al pacchetto */
1684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 responce.callback=BCP_MasterNotify;
1686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 responce.requestLen=PP_BS_LEN_ANS_INDEX+1;
1687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 MasterPlatformProtocol[channel].state++;
1689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****                 (void)BCP_MasterStartResponce(channel,&responce);
1690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               break;
1691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             case PP_CMD_EXTENDED_NO_ANSW:
1692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               BCM_CountersUpdater(channel, BCP_PACKET_NUM_NOERR_CNT);
1693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****               break;
1694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           }
1695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         break;
1696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         default:
1698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           /*TODO: forse l'if non serve */
1699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           if((PP_MasterProtocolTable[idx].option & PPM_OPTION_GETDATA))
1700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           {
1701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             responce.callback=BCP_MasterNotify;
1702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             responce.requestLen=PP_LEN_INDEX+1;
1703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             MasterPlatformProtocol[channel].state++;
1705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             (void)BCP_MasterStartResponce(channel,&responce);
1706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           }
1707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           else
1708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       		{
1709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         	  MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_OK;
1710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       			/* TODO delete PP_Ntwk[MasterPlatformProtocol[channel].chBoard].esit = (IO_ErrorType)IO_E_
1711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       		}
1712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         break;
1713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_RESPONSE_COMPLETION:
1720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(BCP_ChannelTable[channel].rxBuffer[PP_FTYP_INDEX+PP_ACK_SZ]==PP_FTYP_EE)
1722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         responce.requestLen = BCP_ChannelTable[channel].rxBuffer[PP_LEN_INDEX+PP_ACK_SZ];
1724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(!BCP_ChannelTable[channel].rxBuffer[PP_LEN_INDEX+PP_ACK_SZ])
1726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           responce.requestLen = 0x100;
1728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         responce.requestLen +=((BCP_ChannelTable[channel].txBuffer[PP_HDR_INDEX+PP_ACK_SZ] & PP_HDR
1731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       } else
1732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         responce.requestLen = (BCP_ChannelTable[channel].rxBuffer[PP_BS_LEN_ANS_INDEX+PP_ACK_SZ]);
1734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(!BCP_ChannelTable[channel].rxBuffer[PP_BS_LEN_ANS_INDEX+PP_ACK_SZ])
1736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           responce.requestLen = 0x100;
1738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         responce.requestLen++; /* chk */
1741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       responce.callback=BCP_MasterNotify;
1744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       responce.option|=IO_CLOSE;
1745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       (void)BCP_MasterStartResponce(channel,&responce);
1747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       MasterPlatformProtocol[channel].state++;
1749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_RESPONSE_PROCESS:
1752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       MasterPlatformProtocol[channel].state++;
1754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       MasterPlatformProtocol[channel].error = (IO_ErrorType)IO_E_OK;
1755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_OnMasterRxCompleted(channel);
1756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     
1758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     
1759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     
1760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_END:
1761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
1762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     ;
1763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void PP_SetMasterError(IO_ChannelType ch, IO_ErrorType error)
1767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	MasterPlatformProtocol[ch].error = error;
1769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif /* BCP_MASTER_SUPPORT == TRUE */
1771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
1774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \todo commentare
1775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
1776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
1777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** IO_BufferSizeType  BCP_MasterBuilder (IO_BufferType txBuffer, PP_MasterProtocolTableType info)
1778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_BufferSizeType packetLen;
1781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* dati da copiare */
1783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_BufferType      pData=0;
1784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_BufferSizeType  len=0;
1785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_BufferSizeType  s_index=0, d_index=0;
1786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_BufferSizeType  ed_index=0;
1787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(info.paramType)
1790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1791:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_BOOTLOADER)
1792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PPM_REQPARAMTYPE_BOOT:
1793:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       len=PP_LEN_FROM_GP_PARAM(info.pDataReq);
1794:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       pData=PP_PDATA_FROM_GP_PARAM(info.pDataReq);
1795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       packetLen=(IO_BufferSizeType)len;
1796:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1797:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_GENERAL_PURPOSE)
1800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PPM_REQPARAMTYPE_GP:
1801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       switch(PP_CMD_ID_FROM_GP_PARAM(info.pDataReq))
1802:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
1803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         case PP_CMD_EXTENDED_WITH_ANSW:
1804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         case PP_CMD_EXTENDED_NO_ANSW:
1805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           *(txBuffer + PP_STX_INDEX) = PP_STX;
1806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           *(txBuffer + PP_FTYP_INDEX) = PP_FTYP_EE;
1807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           *(txBuffer + PP_HDR_INDEX) = PP_HDR_FROM_GP_PARAM(info.pDataReq);
1808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           *(txBuffer + PP_DTYP_INDEX) = PP_TYPE_FROM_GP_PARAM(info.pDataReq);
1809:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           *(txBuffer + PP_LEN_INDEX) = PP_LEN_FROM_GP_PARAM(info.pDataReq);
1810:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           len=*(txBuffer + PP_LEN_INDEX);
1812:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           pData=PP_PDATA_FROM_GP_PARAM(info.pDataReq);
1813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           s_index=0;
1814:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           d_index=PP_DAT_INDEX;
1815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           packetLen=(IO_BufferSizeType)(PP_LEN_INDEX+1+*(txBuffer + PP_LEN_INDEX)+((*(txBuffer + PP
1816:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           ed_index= PP_LEN_INDEX+1+*(txBuffer + PP_LEN_INDEX);
1817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1818:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           break;
1819:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1820:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         case PP_CMD_BASIC:
1822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           *(txBuffer + PP_STX_INDEX) = PP_STX;
1823:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           *(txBuffer + PP_BS_TYP_INDEX) = PP_BS_TYPE_FROM_GP_PARAM(info.pDataReq);
1824:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           pData =PP_BS_PDATA_FROM_GP_PARAM(info.pDataReq);
1825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           len=3;
1826:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           s_index=0;
1827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           d_index=2;
1828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           packetLen=6;
1829:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           ed_index=5;
1830:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           break;
1831:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
1832:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
1834:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
1836:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(txBuffer + PP_STX_INDEX) = PP_STX;
1837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(txBuffer + PP_FTYP_INDEX) = PP_FTYP_EE;
1838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(txBuffer + PP_HDR_INDEX) = (info.option&PPM_OPTION_CRC)?PP_HDR_CRC:PP_HDR_CHK;
1839:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(txBuffer + PP_DTYP_INDEX) = info.code;
1840:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       *(txBuffer + PP_LEN_INDEX) = (uint8_t) (*info.pLenReq);
1841:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       pData=info.pDataReq;
1842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       len=*info.pLenReq;
1843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       d_index=PP_DAT_INDEX;
1844:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       s_index=0;
1845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       packetLen=(IO_BufferSizeType)(PP_LEN_INDEX+1+*info.pLenReq+((info.option&PPM_OPTION_CRC)?2:1)
1846:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       ed_index= PP_LEN_INDEX+1+*(txBuffer + PP_LEN_INDEX);
1847:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
1848:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1850:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(info.pDataReq)
1851:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1852:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  (void)memcpy((txBuffer + d_index), pData+s_index, len);
1853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1854:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   else
1855:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1856:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  (void)memset(txBuffer + d_index, 0, len);
1857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1858:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1859:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   /* calculate crc or chk */
1860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if(*(txBuffer + PP_STX_INDEX) == PP_STX)
1861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
1862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if((*(txBuffer + PP_FTYP_INDEX) == PP_FTYP_EE) && (*(txBuffer + PP_HDR_INDEX) & PP_HDR_CRC)/*in
1863:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
1864:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       crc_append(ed_index,txBuffer);
1865:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     } else
1866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
1867:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       chk_append(ed_index,txBuffer);
1868:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
1869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
1870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return packetLen;
1872:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1873:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif /* BCP_MASTER_SUPPORT == TRUE */
1874:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1875:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* Local Function */
1876:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void PP_SlaveFragmentBuilder(IO_ChannelType ch, uint8_t chk_displ, uint8_t data_displ)
1877:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1878:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		IO_BufferSizeType aval, data_len, data;
1879:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		bool_t empty=FALSE;
1880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		data=PP_SlavePlatformProtocol[ch].dataCount;
1881:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(!PP_SlavePlatformProtocol[ch].dataCount)
1883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
1884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			empty=TRUE;
1885:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			data=1; 				/* overwriting */
1886:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
1887:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/*numero di locazioni disponibili per i dati : size - ack - hdr - len - crc(=2). */
1889:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		aval = (uint16_t) (BCP_ChannelTable[ch].txBufferSize - (PP_SlavePlatformProtocol[ch].answerCount 
1890:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		data_len = (uint16_t) ((data < aval) ? data : aval);
1891:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1892:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[ch].dataCountLast =	data_len;
1893:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(PP_SlavePlatformProtocol[ch].dataCount)
1894:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
1895:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[ch].dataCount -= data_len;
1896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
1897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		(void)memcpy(&BCP_ChannelTable[ch].txBuffer[data_displ], PP_SlavePlatformProtocol[ch].pdata,  dat
1899:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[ch].pdata+=data_len;
1900:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[ch].answerCount+=data_len;
1901:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1902:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* hdr test to choose between chk or crc */
1903:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     /*TODO: testare rxBuffer o txBuffer a seconda della condivisione del buffer */
1904:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if(PP_SlavePlatformProtocol[ch].option&1)
1905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
1906:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	/* packet check */
1907:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	PP_SlavePlatformProtocol[ch].crc = BCP_CRC_calculate (PP_SlavePlatformProtocol[ch].answerCount
1908:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
1909:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     else
1910:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
1911:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	/* packet check */
1912:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	PP_SlavePlatformProtocol[ch].crc = LIB_ChkComputation ((uint16_t)PP_SlavePlatformProtocol[ch].
1913:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
1914:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(!PP_SlavePlatformProtocol[ch].dataCount && (empty==FALSE))
1916:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
1917:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			if(PP_SlavePlatformProtocol[ch].option&1)
1918:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			{
1919:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				BCP_ChannelTable[ch].txBuffer[chk_displ+PP_SlavePlatformProtocol[ch].answerCount++] = (uint8_t)
1920:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			}
1921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1922:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			BCP_ChannelTable[ch].txBuffer[chk_displ+PP_SlavePlatformProtocol[ch].answerCount++] = (uint8_t)P
1923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
1924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
1925:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1926:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
1927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Builder slave.
1928:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   ch
1930:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** canale
1931:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   info
1932:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** parametri
1933:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1934:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return BCP_BufferSizeType dimensione in byte
1935:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
1936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
1937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
1938:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
1939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
1940:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \private \memberof PP_SlavePlatformProtocolClassType
1941:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
1942:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** void  PP_SlaveResponseBuilder (IO_ChannelType ch, PP_SlaveBuilderInfoType info)
1943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
1944:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     uint8_t cpy_len, displ, displ_len;
1945:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     /* ack */
1947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].dataCount=info.len;	/* init data */
1948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].pdata=info.address;	/* init address */
1949:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     PP_SlavePlatformProtocol[ch].answerCount=0;				/* init answerCount */
1951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].option=0;						/* init chk mode */
1952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].crc=0;						/* init chk val */
1953:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1955:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     /* answer building */
1956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if((info.option & PP_SL_RESP_ANSW_OPT) && (info.error == (IO_ErrorType)IO_E_OK))
1957:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
1958:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				/* hdr test: choose between chk or crc */
1959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX]&PP_HDR_CRC) && (BCP_ChannelTable[ch].rxBuffer[PP_
1960:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
1961:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[ch].option |= 1;
1962:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[ch].crc=0xFFFF;
1963:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
1964:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1965:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(BCP_ChannelTable[ch].rxBuffer[PP_FTYP_INDEX] == PP_FTYP_EE)
1966:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           cpy_len=4;
1968:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ_len=(uint8_t)((uint8_t)PP_ACK_SZ+(uint8_t)PP_LEN_INDEX);
1969:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ=(uint8_t)((uint8_t)PP_ACK_SZ+(uint8_t)PP_DAT_INDEX);
1970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1971:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         } else
1972:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           cpy_len=2;
1974:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ_len=(uint8_t)PP_ACK_SZ+(uint8_t)PP_BS_LEN_ANS_INDEX;
1975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ=(uint8_t)PP_ACK_SZ+(uint8_t)PP_BS_DAT_ANS_INDEX;
1976:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1977:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #ifdef BCP_FRAGMENT_SLAVE
1978:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* header copy */
1979:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         LIB_MemcpyFromLast(&BCP_ChannelTable[ch].txBuffer[PP_ACK_SZ], BCP_ChannelTable[ch].rxBuffer
1980:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* len */
1982:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCP_ChannelTable[ch].txBuffer[displ_len]=(uint8_t)info.len;
1983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1984:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[ch].answerCount+=cpy_len+PP_LEN_SZ; /* chk not counted */
1985:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1986:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlaveFragmentBuilder(ch, PP_ACK_SZ, (uint8_t)(PP_SlavePlatformProtocol[ch].answerCount+1));
1987:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #else	/* #ifdef BCP_FRAGMENT_SLAVE */
1989:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* use all the space */
1990:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(info.len + PP_SlavePlatformProtocol[ch].answerCount + 2 +PP_LEN_SZ > BCP_ChannelTable[ch].txBu
1991:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
1992:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			/* removes header(ack - a5 - ee - hdr - type - len) and crc*/
1993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			info.len= (BCP_PacketSizeType) (BCP_ChannelTable[ch].txBufferSize-PP_SlavePlatformProtocol[ch].a
1994:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
1995:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
1996:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(PP_SlavePlatformProtocol[ch].dataCount)
1997:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
1998:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[ch].dataCount -= info.len;
1999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
2000:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		
2001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[ch].answerCount+=cpy_len+PP_LEN_SZ; /* chk not counted */
2002:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2003:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* header copy */
2004:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		LIB_MemcpyFromLast(&BCP_ChannelTable[ch].txBuffer[PP_ACK_SZ], BCP_ChannelTable[ch].rxBuffer,  cpy
2005:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2006:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* len */
2007:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCP_ChannelTable[ch].txBuffer[displ_len] = (uint8_t) info.len;
2008:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[ch].answerCount += info.len;
2009:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2010:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				/* data copy */
2011:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         (void) memcpy(&BCP_ChannelTable[ch].txBuffer[displ], info.address,  info.len);
2012:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2013:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* hdr test to choose between chk or crc */
2014:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/*TODO: testare rxBuffer o txBuffer a seconda della condivisione del buffer */
2015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX+1]&PP_HDR_CRC) && (BCP_ChannelTable[ch].rxBuffer[P
2016:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
2017:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  /* packet check */
2018:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  crc_append(PP_SlavePlatformProtocol[ch].answerCount, &BCP_ChannelTable[ch].txBuffer[PP_ACK_SZ])
2019:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  PP_SlavePlatformProtocol[ch].answerCount+=2;
2020:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
2021:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		else
2022:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
2023:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  /* packet check */
2024:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  chk_append(PP_SlavePlatformProtocol[ch].answerCount, &BCP_ChannelTable[ch].txBuffer[PP_ACK_SZ])
2025:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  PP_SlavePlatformProtocol[ch].answerCount+=1;
2026:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
2027:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2028:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(info.callback != 0)
2029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
2030:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			(info.callback)();
2031:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
2032:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****  #endif   /* #ifdef BCP_FRAGMENT_SLAVE */
2033:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
2034:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_ChannelTable[ch].txBuffer[0] = (uint8_t) ((info.error == (IO_ErrorType)IO_E_OK) ? PP_ACK : PP
2036:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SlavePlatformProtocol[ch].answerCount+=1;
2037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2038:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2039:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2041:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2042:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2043:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2044:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
2046:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_CmdExe(PP_ParserType* pCmd, IO_ChannelType channel)
2047:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2048:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ErrorType error = (IO_ErrorType)IO_E_BUSY;
2049:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_OptionType option=0;
2050:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch( pCmd->fields.cmd)
2051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
2052:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_READ_CMD:
2053:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
2054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       BCP_PacketSizeType Len = pCmd->fields.par1;
2055:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       (void)PP_SlaveReceiveData(channel, &Len, (BCP_OptionType)(pCmd->fields.par2));
2056:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_len=0;
2057:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       error = (IO_ErrorType)IO_E_WORKING;
2058:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2059:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(pCmd->fields.par3)
2060:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2061:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* manage the goto */
2062:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state=pCmd->fields.par3;
2063:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2064:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
2065:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2066:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_AND_CMD:
2067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(BCP_ChannelTable[channel].rxBuffer[pCmd->fields.par1] & (uint8_t)pCmd->fields.par2)
2068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2069:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* manage the goto */
2070:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state=pCmd->fields.par3;
2071:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2073:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_NO_MATCH_CMD:
2075:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(BCP_ChannelTable[channel].rxBuffer[pCmd->fields.par1] != pCmd->fields.par2)
2076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2077:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* manage the goto */
2078:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state=pCmd->fields.par3;
2079:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2080:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2081:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_MODLEN_CMD:
2082:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(BCP_ChannelTable[channel].rxBuffer[pCmd->fields.par1] & pCmd->fields.par2)
2083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2084:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* manage the goto */
2085:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_len+=pCmd->fields.par3;
2086:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2087:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2088:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_SETLEN_CMD:
2089:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_len+=BCP_ChannelTable[channel].rxBuffer[pCmd->fields.par1];
2090:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(pCmd->fields.par3)
2091:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2092:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* manage the goto */
2093:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state=pCmd->fields.par3;
2094:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2095:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2096:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2097:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_READ_ALL_CMD:
2098:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
2099:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		option=IO_CLOSE;
2100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		(void)PP_SlaveReceiveData(channel, &PP_len, option);
2101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		error = (IO_ErrorType)IO_E_WORKING;
2102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
2103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_CHK_CHECK_CMD:
2106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
2107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****      	uint16_t crc;
2108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       crc = LIB_ChkComputation((uint16_t)PP_SlavePlatformProtocol[channel].dataCount-1, BCP_Channel
2110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       crc &= (uint16_t)0x00FF;
2111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       crc ^= BCP_ChannelTable[channel].rxBuffer[PP_SlavePlatformProtocol[channel].dataCount-1];
2112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(crc == (uint16_t)0)
2114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* ok!!! */
2116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCM_CountersUpdater(channel, BCP_PACKET_NUM_NOERR_CNT);
2117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state=PP_SLAVE_RX_OK;
2118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  		error = (IO_ErrorType)IO_E_OK;
2119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       } else
2120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         	BCM_CountersUpdater(channel, BCP_PP_CORRUPTED_PKT_ERR_CNT);
2122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 					error = (IO_ErrorType)IO_E_CHECK_PP;
2123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
2125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_CRC_CHECK_CMD:
2128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
2129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       uint16_t crc;
2130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       crc = BCP_CRC_calculate(PP_SlavePlatformProtocol[channel].dataCount, BCP_ChannelTable[channel
2132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(crc == 0)
2134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         /* ok!!! */
2136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCM_CountersUpdater(channel, BCP_PACKET_NUM_NOERR_CNT);
2137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state=PP_SLAVE_RX_OK;
2138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  		error = (IO_ErrorType)IO_E_OK;
2139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       } else
2140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         	BCM_CountersUpdater(channel, BCP_PP_CORRUPTED_PKT_ERR_CNT);
2142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 					error = (IO_ErrorType)IO_E_CHECK_PP;
2143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
2145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_INVALID_CMD:
2148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       error = (IO_ErrorType)IO_E_INVALID_VALUE;
2149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
2150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_RX_OK_CMD:
2151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
2154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return error;
2156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
2158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_SLAVE_SUPPORT == TRUE && defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
2161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_SlaveRxInterpreter(IO_ChannelType channel)
2162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ErrorType error = (IO_ErrorType)IO_E_WORKING;
2164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_ParserType* pCmd;
2165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** //  uint8_t code; ToBeRemoved
2166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   do {
2168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     pCmd = (PP_ParserType* const)PP_ParserTable[channel]+PP_SlavePlatformProtocol[channel].state;
2169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     PP_SlavePlatformProtocol[channel].state++;
2170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     error=PP_CmdExe(pCmd, channel);
2171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if(error!=(IO_ErrorType)IO_E_BUSY)
2172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
2173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       break;
2174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
2175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }while(1);
2176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return error;
2178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
2180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BCP_BufferSizeType PP_Typ16ToBridgeConv(uint8_t seq_id, uint8_t* pInMem, uint8_t* pOutMem )
2182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_SEQ_INDEX]=seq_id;
2185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_CMDID_INDEX]=pInMem[PP_TYP0_INDEX];
2186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_HDR_INDEX]     = (uint8_t) (pInMem[PP_HDR_INDEX] & 0x01);
2187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_TYP_INDEX]=pInMem[PP_TYP1_INDEX];
2188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_LEN_INDEX]     = (uint8_t) (pInMem[PP_GLEN_INDEX] - 1);
2189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_I2C_ADDR_INDEX]=pInMem[PP_GDAT_INDEX];
2190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(void)memcpy((&pOutMem[PP_GP_LEN_INDEX]+1), (&pInMem[PP_GDAT_INDEX]+1), pOutMem[PP_GP_LEN_INDEX]);
2192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return (uint16_t) (6 + pOutMem[PP_GP_LEN_INDEX]);
2194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /* TODO: temp. */
2197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** BCP_BufferSizeType PP_BridgeToTyp16Conv(uint8_t* in, uint8_t* out)
2198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	BCP_BufferSizeType len;
2201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_ACK_POS] = in[PP_GP_ACK_ANS_INDEX];
2203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(
2204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(in[PP_GP_CMDID_ANS_INDEX] == PP_CMD_EXTENDED_NO_ANSW)
2205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	|| ((in[PP_GP_CMDID_ANS_INDEX] == PP_CMD_BASIC) && ((in[PP_GP_TYP_ANS_INDEX] & PP_BS_TYPE_MSK) != 
2206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	)
2207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
2208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return PP_ACK_SZ;
2209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
2210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_STX_INDEX + PP_ACK_SZ] = PP_STX;
2211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_FTYP_INDEX + PP_ACK_SZ] = PP_FTYP_EE;
2212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_HDR_INDEX + PP_ACK_SZ] = in[PP_GP_HDR_ANS_INDEX];
2213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_TYP0_INDEX + PP_ACK_SZ] = in[PP_GP_CMDID_ANS_INDEX];
2214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_TYP1_INDEX + PP_ACK_SZ] = in[PP_GP_TYP_ANS_INDEX];
2215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_GLEN_INDEX + PP_ACK_SZ] = in[PP_GP_LEN_ANS_INDEX];
2216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	/*lint -e{826} Warning 826 suspicious pointer-to-pointer conversion (area too small) */
2218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     len=*(pBCP_BufferSizeType)(&in[PP_GP_SZ_ANS_INDEX]);
2219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if(len<PP_GP_LEN_ANS_INDEX)
2220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
2221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         len=1;
2222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         return 1;
2223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     } else
2224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     {
2225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         len= out[PP_GLEN_INDEX + PP_ACK_SZ];
2226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    len = (uint16_t) ((len == 0x00)? 0x100 : len);
2227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     }
2228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	
2229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	
2231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(void)memcpy(out + (PP_GDAT_INDEX + PP_ACK_SZ), in+PP_GP_DAT_ANS_INDEX, len);
2232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(out[PP_HDR_INDEX + PP_ACK_SZ] & PP_HDR_CRC)
2234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
2235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		crc_append((uint16_t) (PP_GLEN_INDEX + 1 + len), out+PP_ACK_SZ);
2236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return (uint16_t) (PP_GLEN_INDEX + 1 + len + 2 + PP_ACK_SZ);
2237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
2238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	else
2239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	{
2240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		chk_append((uint16_t) (PP_GLEN_INDEX + 1+len), out+PP_ACK_SZ);
2241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return (uint16_t) (PP_GLEN_INDEX + 1 + len + 1 + PP_ACK_SZ);
2242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	}
2243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
2247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Macchina a stati di ricezione slave.
2248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Nel primo step imposta la ricezione dell'header.
2249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Il secondo step serve a determinare il numero dei byte da ricevere.
2250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Se il campo #PP_FTYP_INDEX e' di tipo #PP_FTYP_EE aggiorna la lunghezza
2251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** con il valore campo #PP_LEN_INDEX e #PP_HDR_INDEX (checksum o crc).
2252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** altrimenti (basic frame) rimane da ricevere solo il checksum.
2253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Nel terzo step verifica l'integrita' del frame calcolando il checksum o il crc.
2254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   channel Identificatore del canale di comunicazione.
2256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
2258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
2260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
2262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
2263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
2264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \private \memberof PP_SlavePlatformProtocolClassType
2265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
2266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if !defined(CP_TYP8_16_SLAVE_PP_STATE_MACHINE)
2268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_SlaveReceiverStateMachine(IO_ChannelType channel)
2269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_PacketSizeType len;
2271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_OptionType option=0;
2272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ErrorType err = (IO_ErrorType)IO_E_WORKING;
2273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(PP_SlavePlatformProtocol[channel].state)
2275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   {
2276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_SLAVE_RX_HDR_START:
2277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_SlavePlatformProtocol[channel].state++;
2279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       len=5;
2280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       (void) PP_SlaveReceiveData(channel, &len, option); /* header len */
2281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_SLAVE_RX_ALL_START:
2283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_SlavePlatformProtocol[channel].state++;
2284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       /* check syntax */
2286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(BCP_ChannelTable[channel].rxBuffer[PP_STX_INDEX]==PP_STX)
2287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(BCP_ChannelTable[channel].rxBuffer[PP_FTYP_INDEX]==PP_FTYP_EE)
2289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
2290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           /* receive extended frame */
2291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           len =   (BCP_ChannelTable[channel].rxBuffer[PP_LEN_INDEX]);
2292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           len +=  ((BCP_ChannelTable[channel].rxBuffer[PP_HDR_INDEX] & PP_HDR_CRC)?2:1);
2293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         } else
2294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         {
2295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			/* receive basic frame */
2296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			len = 1;
2297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         }
2298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         
2299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		option=IO_CLOSE;
2300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		
2301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((len+5) > BCP_ChannelTable[channel].rxBufferSize)
2302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		{
2303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			len=1;
2304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		}
2305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				
2306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         (void) PP_SlaveReceiveData(channel, &len,option);
2307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       } else 
2309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	  {
2310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		BCM_CountersUpdater(channel, BCP_PP_CORRUPTED_PKT_ERR_CNT);
2311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		err = (IO_ErrorType)IO_E_INVALID_VALUE;
2312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[channel].state=(IO_ValueType)PP_SLAVE_RX_ERR;
2313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     case PP_SLAVE_RX_ALL_COMPLETED:
2317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state++;
2318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     break;
2319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	case PP_SLAVE_RX_OK:
2321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		err = (IO_ErrorType)IO_E_OK;
2322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* -fallthrough */
2323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	case PP_SLAVE_RX_ERR:
2324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		/* lint -e{825} -fallthrough */
2325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     default:
2326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     	;
2328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   }
2329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return err;
2330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif
2332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
2335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Avvia la ricezione dello slave.
2336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   chid  Indice del canale di comunicazione
2338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   pLen  Puntatore alla dimensione in byte dei byte da ricevere
2339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   option Opzioni
2340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** opzioni
2341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \return 		codice di errore
2343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \retval     IO_E_INVALID_VALUE: buffer o len non validi
2344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             IO_E_INVALID_CHANNEL_ID: canale DMA non corretto.
2345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****             IO_E_OK: ricezione avviata regolarmente.
2346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
2348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
2350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
2352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			10/04/2009
2353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
2354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \private \memberof PP_SlavePlatformProtocolClassType
2355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
2356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_SlaveReceiveData(IO_ChannelType chid, BCP_PacketSizeType * pLen, BCP_OptionT
2357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   CommDriverParamType driverParam={0};
2359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   driverParam.buffer=BCP_ChannelTable[chid].rxBuffer + PP_SlavePlatformProtocol[chid].dataCount;
2360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   driverParam.len= *pLen;
2361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   driverParam.option=option;
2362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SlavePlatformProtocol[chid].dataCountLast= *pLen;
2364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SlavePlatformProtocol[chid].dataCount+=PP_SlavePlatformProtocol[chid].dataCountLast;
2365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return ((IO_PhyCommunicationSync)(BCP_ChannelTable[chid].StartRxSync))(&driverParam);
2367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #if BCP_MASTER_SUPPORT == TRUE
2371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType  BCP_MasterProcessHeader (IO_ChannelType channel, BCP_BuilderType info)
2372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     (void) info;
2374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     
2375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   if( (*(BCP_ChannelTable[channel].rxBuffer + (uint8_t)PP_STX_INDEX) != PP_STX)  ||
2376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       (*(BCP_ChannelTable[channel].rxBuffer + (uint8_t)PP_FTYP_INDEX) != PP_FTYP_EE))
2377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       {
2378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         return (IO_ErrorType)IO_E_INVALID_VALUE;
2379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       }
2380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return (IO_ErrorType)IO_E_OK;
2382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** #endif /* BCP_MASTER_SUPPORT == TRUE */
2384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
2388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Appends checksum  to buffer \c pdata of length \c len
2389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   len number of bytes  (>=0)
2391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   pdata  pointer to data
2392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
2394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
2396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
2398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			15/04/2009
2399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
2400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
2401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void chk_append (IO_BufferSizeType  len, IO_BufferType pdata)
2402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
2403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	uint16_t crc = LIB_ChkComputation ((uint16_t)len, pdata, 0);
2404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   *(pdata+len) = (uint8_t)crc;
2405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
2406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** /**
2408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** Appends CRC to buffer \c pdata of length \c len
2409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   len number of bytes (>=0)
2411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \param [in]   pdata  pointer to data
2412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \warning
2414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \note
2416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 
2417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \version		1.0.0
2418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \date 			15/04/2009
2419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** \author			Roberto Fioravanti
2420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** */
2421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static void crc_append (IO_BufferSizeType  len, IO_BufferType pdata)
2422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
   9                             		.loc 1 2422 0
  10                             	.LVL0:
  11 0000 6E 7A                   		pushm	r7-r10
  12                             	.LCFI0:
  13 0002 DF 1A                   		mov.W	r1, r10
  14 0004 EF 27                   		mov.L	r2, r7
2423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   uint16_t crc = BCP_CRC_calculate (len, pdata, 0xFFFF);
  15                             		.loc 1 2423 0
  16 0006 FB 36 FF                		mov	#-1, r3
  17 0009 05 00 00 00             		bsr	_OCCRC_Calculate
  18                             	.LVL1:
2424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   *(pdata+len) = (uint8_t) (crc/256);
  19                             		.loc 1 2424 0
  20 000d 5F A2                   		movu.W	r10, r2
  21 000f 4B 72                   		add	r7, r2
  22 0011 FD 88 17                		shlr	#8, r1, r7
  23                             	.LVL2:
  24 0014 C3 27                   		mov.B	r7, [r2]
2425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   *(pdata+len+1) = (uint8_t)crc;
  25                             		.loc 1 2425 0
  26 0016 80 29                   		mov.B	r1, 1[r2]
2426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
  27                             		.loc 1 2426 0
  28 0018 3F 7A 04                		rtsd	#16, r7-r10
  29                             	.LFE12:
  31                             		.section	.text.PP_SlaveReceiveData.isra.0,"ax",@progbits
  33                             	_PP_SlaveReceiveData.isra.0:
  34                             	.LFB13:
2356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** static IO_ErrorType PP_SlaveReceiveData(IO_ChannelType chid, BCP_PacketSizeType * pLen, BCP_OptionT
  35                             		.loc 1 2356 0
  36                             	.LVL3:
  37 0000 7E A7                   		push.l	r7
  38                             	.LCFI1:
  39 0002 71 00 F0                		add	#-16, r0
  40                             	.LCFI2:
  41 0005 CF 14                   		mov.B	r1, r4
  42 0007 DF 2E                   		mov.W	r2, r14
  43 0009 CF 35                   		mov.B	r3, r5
  44                             	.LVL4:
2358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   CommDriverParamType driverParam={0};
  45                             		.loc 1 2358 0
  46 000b EF 01                   		mov.L	r0, r1
  47                             	.LVL5:
  48 000d 75 43 10                		mov.L	#16, r3
  49                             	.LVL6:
  50 0010 66 02                   		mov	#0, r2
  51 0012 7F 88                   		sstr.b
2359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   driverParam.buffer=BCP_ChannelTable[chid].rxBuffer + PP_SlavePlatformProtocol[chid].dataCount;
  52                             		.loc 1 2359 0
  53 0014 5B 41                   		movu.B	r4, r1
  54 0016 EF 14                   		mov.L	r1, r4
  55                             	.LVL7:
  56 0018 75 14 1C                		mul	#28, r4
  57 001b 70 44 00 00 00 00       		add	#_BCP_ChannelTable, r4
  58 0021 6C 41                   		shll	#4, r1
  59                             	.LVL8:
  60 0023 70 11 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r1
  61 0029 B8 93                   		movu.W	4[r1], r3
  62 002b 06 89 43 05             		add	20[r4].L, r3
  63 002f A0 83                   		mov.L	r3, 8[r0]
2360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   driverParam.len= *pLen;
  64                             		.loc 1 2360 0
  65 0031 D7 0E 02                		mov.W	r14, 4[r0]
2361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   driverParam.option=option;
  66                             		.loc 1 2361 0
  67 0034 83 05                   		mov.B	r5, 12[r0]
2363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SlavePlatformProtocol[chid].dataCountLast= *pLen;
  68                             		.loc 1 2363 0
  69 0036 D7 1E 03                		mov.W	r14, 6[r1]
2364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SlavePlatformProtocol[chid].dataCount+=PP_SlavePlatformProtocol[chid].dataCountLast;
  70                             		.loc 1 2364 0
  71 0039 06 49 1E 02             		add	4[r1].W, r14
  72 003d D7 1E 02                		mov.W	r14, 4[r1]
2366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return ((IO_PhyCommunicationSync)(BCP_ChannelTable[chid].StartRxSync))(&driverParam);
  73                             		.loc 1 2366 0
  74 0040 ED 4E 03                		mov.L	12[r4], r14
  75 0043 EF 01                   		mov.L	r0, r1
  76 0045 7F 1E                   		jsr	r14
  77                             	.LVL9:
2367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
  78                             		.loc 1 2367 0
  79 0047 5B 11                   		movu.B	r1, r1
  80 0049 3F 77 05                		rtsd	#20, r7-r7
  81                             	.LFE13:
  83                             		.section	.text.PP_SlaveNotification,"ax",@progbits
  84                             		.global	_PP_SlaveNotification
  86                             	_PP_SlaveNotification:
  87                             	.LFB0:
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
  88                             		.loc 1 451 0
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	switch(notifVal)
  89                             		.loc 1 460 0
  90 0000 5B 11                   		movu.B	r1, r1
  91 0002 61 61                   		cmp	#6, r1
  92 0004 25 05 38 F9 00          		bgtu	.L29
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
  93                             		.loc 1 451 0
  94 0009 7E A7                   		push.l	r7
  95                             	.LCFI3:
  96 000b CF 2E                   		mov.B	r2, r14
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	switch(notifVal)
  97                             		.loc 1 460 0
  98 000d FB 72 00 00 00 00       		mov.L	#.L12, r7
  99 0013 FE 61 77                		mov.L	[r1,r7], r7
 100                             		
 101 0016 7F 07                   	1:jmp	r7
 102                             		.section	.rodata.PP_SlaveNotification,"a",@progbits
 103                             		.balign 4
 104                             		.balign 4
 105                             	.L12:
 106 0000 00 00 00 E9             		.long .L7
 107 0004 00 00 00 18             		.long .L8
 108 0008 00 00 00 2D             		.long .L9
 109 000c 00 00 00 49             		.long .L10
 110 0010 00 00 00 F8             		.long .L22
 111 0014 00 00 00 F8             		.long .L22
 112 0018 00 00 00 E1             		.long .L11
 113                             		.section	.text.PP_SlaveNotification
 114                             	.L8:
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		PP_SlavePlatformProtocol[chid].state= (IO_ValueType)PP_SLAVE_RX_HDR_START;
 115                             		.loc 1 466 0
 116 0018 5B 2E                   		movu.B	r2, r14
 117 001a 6C 4E                   		shll	#4, r14
 118 001c 70 EE 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r14
 119 0022 F9 E4 0C 00             		mov.B	#0, 12[r14]
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		PP_SlavePlatformProtocol[chid].dataCount=0;
 120                             		.loc 1 468 0
 121 0026 F9 E5 02 00             		mov.W	#0, 4[r14]
 122 002a 38 CE 00                		bra	.L22
 123                             	.L9:
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     		if(PP_SlavePlatformProtocol[chid].dataCount)
 124                             		.loc 1 474 0
 125 002d 5B 27                   		movu.B	r2, r7
 126 002f 6C 47                   		shll	#4, r7
 127 0031 70 77 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r7
 128 0037 B8 F1                   		movu.W	4[r7], r1
 129 0039 61 01                   		cmp	#0, r1
 130 003b 3A BF 00                		beq	.L6
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     			(BCM_SLAVE_ACTION_CB)(chid, (IO_NotificationType)IO_N_ACTION);
 131                             		.loc 1 476 0
 132 003e CF 21                   		mov.B	r2, r1
 133 0040 66 52                   		mov	#5, r2
 134 0042 05 00 00 00             		bsr	_ActionComm
 135 0046 38 B2 00                		bra	.L22
 136                             	.L10:
 137                             	.LBB4:
 138                             	.LBB5:
2274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   switch(PP_SlavePlatformProtocol[channel].state)
 139                             		.loc 1 2274 0
 140 0049 5B 25                   		movu.B	r2, r5
 141 004b FD C4 57                		shll	#4, r5, r7
 142 004e 70 77 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r7
 143 0054 B3 73                   		movu.B	12[r7], r3
 144 0056 61 13                   		cmp	#1, r3
 145 0058 20 1D                   		beq	.L15
 146 005a 61 03                   		cmp	#0, r3
 147 005c 20 10                   		beq	.L14
 148 005e 61 23                   		cmp	#2, r3
 149 0060 20 7A                   		beq	.L16
2272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ErrorType err = (IO_ErrorType)IO_E_WORKING;
 150                             		.loc 1 2272 0
 151 0062 61 33                   		cmp	#3, r3
 152 0064 FC DB 11                		scne.L	r1
 153 0067 6C 11                   		shll	#1, r1
 154 0069 38 91 00                		bra	.L6
 155                             	.L14:
2278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_SlavePlatformProtocol[channel].state++;
 156                             		.loc 1 2278 0
 157 006c 3C 7C 01                		mov.B	#1, 12[r7]
2280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       (void) PP_SlaveReceiveData(channel, &len, option); /* header len */
 158                             		.loc 1 2280 0
 159 006f CF 21                   		mov.B	r2, r1
 160 0071 66 52                   		mov	#5, r2
 161 0073 2E 4F                   		bra	.L30
 162                             	.L15:
2283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       PP_SlavePlatformProtocol[channel].state++;
 163                             		.loc 1 2283 0
 164 0075 3C 7C 02                		mov.B	#2, 12[r7]
2286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****       if(BCP_ChannelTable[channel].rxBuffer[PP_STX_INDEX]==PP_STX)
 165                             		.loc 1 2286 0
 166 0078 EF 54                   		mov.L	r5, r4
 167 007a 75 14 1C                		mul	#28, r4
 168 007d 70 44 00 00 00 00       		add	#_BCP_ChannelTable, r4
 169 0083 A9 4C                   		mov.L	20[r4], r4
 170 0085 58 42                   		movu.B	[r4], r2
 171 0087 75 52 A5                		cmp	#0xa5, r2
 172 008a 21 40                   		bne	.L18
2288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(BCP_ChannelTable[channel].rxBuffer[PP_FTYP_INDEX]==PP_FTYP_EE)
 173                             		.loc 1 2288 0
 174 008c B0 4F                   		movu.B	1[r4], r7
 175 008e 75 57 EE                		cmp	#0xee, r7
 176 0091 21 14                   		bne	.L25
2291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           len =   (BCP_ChannelTable[channel].rxBuffer[PP_LEN_INDEX]);
 177                             		.loc 1 2291 0
 178 0093 B1 47                   		movu.B	4[r4], r7
 179                             	.LBE5:
2292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           len +=  ((BCP_ChannelTable[channel].rxBuffer[PP_HDR_INDEX] & PP_HDR_CRC)?2:1);
 180                             		.loc 1 2292 0
 181                             	.LBB6:
 182 0095 88 C2                   		mov.B 2[r4], r2
 183 0097 64 12                   		and #1, r2
 184 0099 FD 74 D2 01             		xor	#1, r2
 185 009d 66 24                   		mov.L	#2, r4
 186 009f FF 02 24                		sub	r2, r4, r2
 187 00a2 4B 72                   		add	r7, r2
 188 00a4 0C                      		bra	.L19
 189                             	.L25:
2296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			len = 1;
 190                             		.loc 1 2296 0
 191 00a5 DF 32                   		mov.W	r3, r2
 192 00a7 03                      		.balign 2,3,1
 193                             	.L19:
2301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((len+5) > BCP_ChannelTable[channel].rxBufferSize)
 194                             		.loc 1 2301 0
 195 00a8 5F 24                   		movu.W	r2, r4
 196 00aa 62 44                   		add	#4, r4
 197 00ac 75 15 1C                		mul	#28, r5
 198 00af 70 55 00 00 00 00       		add	#_BCP_ChannelTable+24, r5
 199 00b5 06 C5 54 01             		cmp	2[r5].UW, r4
 200 00b9 29 05                   		blt	.L21
2303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			len=1;
 201                             		.loc 1 2303 0
 202 00bb 66 12                   		mov	#1, r2
 203 00bd 03                      		.balign 2,3,1
 204                             	.L21:
2306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         (void) PP_SlaveReceiveData(channel, &len,option);
 205                             		.loc 1 2306 0
 206 00be CF E1                   		mov.B	r14, r1
 207 00c0 66 23                   		mov	#2, r3
 208                             		.balign 2,3,3
 209                             	.L30:
 210 00c2 05 00 00 00             		bsr	_PP_SlaveReceiveData.isra.0
2272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ErrorType err = (IO_ErrorType)IO_E_WORKING;
 211                             		.loc 1 2272 0
 212 00c6 66 21                   		mov	#2, r1
 213 00c8 2E 32                   		bra	.L6
 214                             	.L18:
2310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		BCM_CountersUpdater(channel, BCP_PP_CORRUPTED_PKT_ERR_CNT);
 215                             		.loc 1 2310 0
 216 00ca CF E1                   		mov.B	r14, r1
 217 00cc 66 22                   		mov	#2, r2
 218 00ce 05 00 00 00             		bsr	_BCM_CountersUpdater
2312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[channel].state=(IO_ValueType)PP_SLAVE_RX_ERR;
 219                             		.loc 1 2312 0
 220 00d2 3C 7C 04                		mov.B	#4, 12[r7]
2311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		err = (IO_ErrorType)IO_E_INVALID_VALUE;
 221                             		.loc 1 2311 0
 222 00d5 75 41 13                		mov	#19, r1
 223 00d8 2E 22                   		bra	.L6
 224                             	.L16:
2317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[channel].state++;
 225                             		.loc 1 2317 0
 226 00da 3C 7C 03                		mov.B	#3, 12[r7]
2272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   IO_ErrorType err = (IO_ErrorType)IO_E_WORKING;
 227                             		.loc 1 2272 0
 228 00dd CF 31                   		mov.B	r3, r1
 229 00df 2E 1B                   		bra	.L6
 230                             	.L11:
 231                             	.LBE6:
 232                             	.LBE4:
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 				PP_EosnFunction(chid);
 233                             		.loc 1 500 0
 234 00e1 CF 21                   		mov.B	r2, r1
 235 00e3 05 00 00 00             		bsr	_PP_EosnFunction
 236 00e7 2E 11                   		bra	.L22
 237                             	.L7:
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[chid].dataCount=64;
 238                             		.loc 1 509 0
 239 00e9 5B 2E                   		movu.B	r2, r14
 240 00eb 6C 4E                   		shll	#4, r14
 241 00ed 70 EE 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r14
 242 00f3 F9 E5 02 40             		mov.W	#64, 4[r14]
 243 00f7 03                      		.balign 2,3,1
 244                             	.L22:
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_ErrorType result=(IO_ErrorType)IO_E_OK;
 245                             		.loc 1 452 0
 246 00f8 66 01                   		mov	#0, r1
 247                             		.balign 2,3,1
 248                             	.L6:
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 249                             		.loc 1 519 0
 250 00fa 5B 11                   		movu.B	r1, r1
 251 00fc 3F 77 01                		rtsd	#4, r7-r7
 252                             	.L29:
 253                             	.LCFI4:
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_ErrorType result=(IO_ErrorType)IO_E_OK;
 254                             		.loc 1 452 0
 255 00ff 66 01                   		mov	#0, r1
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 256                             		.loc 1 519 0
 257 0101 5B 11                   		movu.B	r1, r1
 258 0103 02                      		rts
 259                             	.LFE0:
 261                             		.section	.text.PP_GetSlaveState,"ax",@progbits
 262                             		.global	_PP_GetSlaveState
 264                             	_PP_GetSlaveState:
 265                             	.LFB1:
 536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 266                             		.loc 1 536 0
 267                             	.LVL10:
 537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return PP_SlavePlatformProtocol[ch].state;
 268                             		.loc 1 537 0
 269 0000 5B 11                   		movu.B	r1, r1
 270 0002 FD C4 1E                		shll	#4, r1, r14
 271 0005 70 EE 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r14
 538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 272                             		.loc 1 538 0
 273 000b 59 E1 0C                		movu.B	12[r14], r1
 274                             	.LVL11:
 275 000e 02                      		rts
 276                             	.LFE1:
 278                             		.section	.text.PP_IsSlaveStateRxOK,"ax",@progbits
 279                             		.global	_PP_IsSlaveStateRxOK
 281                             	_PP_IsSlaveStateRxOK:
 282                             	.LFB2:
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 283                             		.loc 1 557 0
 284                             	.LVL12:
 285 0000 6E 7C                   		pushm	r7-r12
 286                             	.LCFI5:
 287 0002 CF 1B                   		mov.B	r1, r11
 288                             	.LVL13:
 564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(BCP_ChannelTable[ch].rxBuffer[PP_STX_INDEX]!= PP_STX)
 289                             		.loc 1 564 0
 290 0004 5B 1A                   		movu.B	r1, r10
 291 0006 EF A7                   		mov.L	r10, r7
 292 0008 75 17 1C                		mul	#28, r7
 293 000b 70 77 00 00 00 00       		add	#_BCP_ChannelTable, r7
 294 0011 A9 7F                   		mov.L	20[r7], r7
 295 0013 58 7C                   		movu.B	[r7], r12
 296 0015 75 5C A5                		cmp	#0xa5, r12
 297 0018 3B 84 00                		bne	.L40
 569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(BCP_ChannelTable[ch].rxBuffer[PP_FTYP_INDEX]==PP_FTYP_EE)
 298                             		.loc 1 569 0
 299 001b 59 7C 01                		movu.B	1[r7], r12
 300 001e 75 5C EE                		cmp	#0xee, r12
 301 0021 21 25                   		bne	.L34
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX] & PP_HDR_CRC)
 302                             		.loc 1 571 0
 303 0023 88 F3                   		mov.B	2[r7], r3
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc = BCP_CRC_calculate(PP_SlavePlatformProtocol[ch].dataCount, BCP_ChannelTable[ch].rxBuffer, (
 304                             		.loc 1 573 0
 305 0025 FD C4 AC                		shll	#4, r10, r12
 306 0028 70 CC 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r12
 307 002e DD C1 02                		mov.W	4[r12], r1
 308                             	.LVL14:
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX] & PP_HDR_CRC)
 309                             		.loc 1 571 0
 310 0031 64 13                   		and	#1, r3
 311 0033 20 0D                   		beq	.L35
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc = BCP_CRC_calculate(PP_SlavePlatformProtocol[ch].dataCount, BCP_ChannelTable[ch].rxBuffer, (
 312                             		.loc 1 573 0
 313 0035 EF 72                   		mov.L	r7, r2
 314 0037 FB 36 FF                		mov	#-1, r3
 315 003a 05 00 00 00             		bsr	_OCCRC_Calculate
 316                             	.LVL15:
 317 003e 2E 2E                   		bra	.L36
 318                             	.LVL16:
 319                             	.L35:
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc = LIB_ChkComputation((uint16_t)(PP_SlavePlatformProtocol[ch].dataCount-1), BCP_ChannelTable[
 320                             		.loc 1 576 0
 321 0040 60 11                   		sub	#1, r1
 322 0042 EF 72                   		mov.L	r7, r2
 323 0044 2E 18                   		bra	.L42
 324                             	.LVL17:
 325                             	.L34:
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(PP_SlavePlatformProtocol[ch].dataCount == 6)
 326                             		.loc 1 583 0
 327 0046 FD C4 AC                		shll	#4, r10, r12
 328 0049 70 CC 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r12
 329 004f 5D CE 02                		movu.W	4[r12], r14
 330 0052 61 6E                   		cmp	#6, r14
 331 0054 21 48                   		bne	.L40
 585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc = LIB_ChkComputation((uint16_t)(PP_SlavePlatformProtocol[ch].dataCount - 1), BCP_ChannelTabl
 332                             		.loc 1 585 0
 333 0056 66 51                   		mov	#5, r1
 334                             	.LVL18:
 335 0058 EF 72                   		mov.L	r7, r2
 336 005a 66 03                   		mov	#0, r3
 337                             		.balign 2,3,3
 338                             	.L42:
 339 005c 05 00 00 00             		bsr	_LIB_ChkComputation
 340                             	.LVL19:
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc &= (uint16_t)0x00FF;
 341                             		.loc 1 586 0
 342 0060 5B 11                   		movu.B	r1, r1
 343                             	.LVL20:
 587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			crc ^= BCP_ChannelTable[ch].rxBuffer[PP_SlavePlatformProtocol[ch].dataCount-1];
 344                             		.loc 1 587 0
 345 0062 06 C9 C7 02             		add	4[r12].UW, r7
 346 0066 60 17                   		sub	#1, r7
 347 0068 FC 34 71                		xor	[r7].UB, r1
 348                             	.LVL21:
 349 006b 03                      		.balign 2,3,1
 350                             	.L36:
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(crc==0)
 351                             		.loc 1 596 0
 352 006c 5F 17                   		movu.W	r1, r7
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		BCM_CountersUpdater(ch, (IO_ErrorType) BCP_PACKET_NUM_NOERR_CNT);
 353                             		.loc 1 599 0
 354 006e CF B1                   		mov.B	r11, r1
 355                             	.LVL22:
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(crc==0)
 356                             		.loc 1 596 0
 357 0070 61 07                   		cmp	#0, r7
 358 0072 19                      		bne	.L37
 359                             	.LVL23:
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		BCM_CountersUpdater(ch, (IO_ErrorType) BCP_PACKET_NUM_NOERR_CNT);
 360                             		.loc 1 599 0
 361 0073 66 12                   		mov	#1, r2
 362 0075 05 00 00 00             		bsr	_BCM_CountersUpdater
 363                             	.LVL24:
 364 0079 2E 1B                   		bra	.L38
 365                             	.LVL25:
 366                             	.L37:
 603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		BCM_CountersUpdater(ch, (IO_ErrorType) BCP_PP_CORRUPTED_PKT_ERR_CNT);
 367                             		.loc 1 603 0
 368 007b 66 22                   		mov	#2, r2
 369 007d 05 00 00 00             		bsr	_BCM_CountersUpdater
 370                             	.LVL26:
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[ch].state++;
 371                             		.loc 1 604 0
 372 0081 6C 4A                   		shll	#4, r10
 373 0083 70 AA 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r10
 374 0089 CD A7 0C                		mov.B	12[r10], r7
 375                             	.LVL27:
 376 008c 62 17                   		add	#1, r7
 377 008e C7 A7 0C                		mov.B	r7, 12[r10]
 378                             	.LVL28:
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		err = (IO_ErrorType)IO_E_CHECK_PP;
 379                             		.loc 1 605 0
 380 0091 75 47 1C                		mov	#28, r7
 381                             	.LVL29:
 382                             		.balign 2,3,3
 383                             	.L38:
 608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return (bool_t) (err == (IO_ErrorType) IO_E_OK);
 384                             		.loc 1 608 0
 385 0094 76 27 FF 00             		and #0xff, r7
 386                             	.LVL30:
 387 0098 FC DB 10                		sceq.L	r1
 388 009b 0B                      		bra	.L33
 389                             	.LVL31:
 390                             	.L40:
 567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return (bool_t)(err == (IO_ErrorType)IO_E_OK);
 391                             		.loc 1 567 0
 392 009c 66 01                   		mov.L	#0, r1
 393                             	.LVL32:
 394                             		.balign 2,3,2
 395                             	.L33:
 610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 396                             		.loc 1 610 0
 397 009e 3F 7C 06                		rtsd	#24, r7-r12
 398                             	.LFE2:
 400 00a1 03                      		.section	.text.PP_SlaveStartResponse,"ax",@progbits
 401                             		.global	_PP_SlaveStartResponse
 403                             	_PP_SlaveStartResponse:
 404                             	.LFB3:
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 405                             		.loc 1 632 0
 406                             	.LVL33:
 407 0000 71 00 F0                		add	#-16, r0
 408                             	.LCFI6:
 409 0003 CF 1E                   		mov.B	r1, r14
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   CommDriverParamType requestParam={0};
 410                             		.loc 1 634 0
 411 0005 EF 01                   		mov.L	r0, r1
 412                             	.LVL34:
 413 0007 75 43 10                		mov.L	#16, r3
 414 000a 66 02                   		mov	#0, r2
 415 000c 7F 88                   		sstr.b
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   requestParam.len = PP_SlavePlatformProtocol[ch].answerCount;
 416                             		.loc 1 636 0
 417 000e 5B E1                   		movu.B	r14, r1
 418 0010 FD C4 1E                		shll	#4, r1, r14
 419                             	.LVL35:
 420 0013 70 EE 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r14
 421 0019 D5 E0 04 02             		mov.W	8[r14], 4[r0]
 637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(!PP_SlavePlatformProtocol[ch].dataCount)
 422                             		.loc 1 637 0
 423 001d 5D EE 02                		movu.W	4[r14], r14
 424 0020 61 0E                   		cmp	#0, r14
 425 0022 1C                      		bne	.L44
 639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   	    requestParam.option |= IO_CLOSE_TX; /* last fragment */
 426                             		.loc 1 639 0
 427 0023 3C 0C 04                		mov.B	#4, 12[r0]
 428                             		.balign 2,3,2
 429                             	.L44:
 641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   requestParam.buffer=BCP_ChannelTable[ch].txBuffer;
 430                             		.loc 1 641 0
 431 0026 75 11 1C                		mul	#28, r1
 432                             	.LVL36:
 433 0029 70 11 00 00 00 00       		add	#_BCP_ChannelTable, r1
 434 002f E5 10 04 02             		mov.L	16[r1], 8[r0]
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   return ((IO_PhyCommunicationSync)(BCP_ChannelTable[ch].StartTxSync))(&requestParam);
 435                             		.loc 1 643 0
 436 0033 ED 1E 02                		mov.L	8[r1], r14
 437 0036 EF 01                   		mov.L	r0, r1
 438 0038 7F 1E                   		jsr	r14
 439                             	.LVL37:
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 440                             		.loc 1 644 0
 441 003a 5B 11                   		movu.B	r1, r1
 442 003c 67 04                   		rtsd	#16
 443                             	.LFE3:
 445                             		.section	.text.PP_GetRequestLen,"ax",@progbits
 446                             		.global	_PP_GetRequestLen
 448                             	_PP_GetRequestLen:
 449                             	.LFB4:
 827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 450                             		.loc 1 827 0
 451                             	.LVL38:
 828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	IO_BufferSizeType retVal = (IO_BufferSizeType)(PP_LEN_INDEX+1+*info->pLenReq+((info->option&PPM_OP
 452                             		.loc 1 828 0
 453 0000 ED 2E 03                		mov.L	12[r2], r14
 454 0003 DC E1                   		mov.W	[r14], r1
 455                             	.LVL39:
 456 0005 CD 2E 12                		mov.B 18[r2], r14
 457 0008 64 2E                   		and #2, r14
 458 000a 66 1E                   		mov.L	#1, r14
 459 000c FD 74 FE 02             		stnz	#2, r14
 460                             	.LVL40:
 461 0010 62 51                   		add	#5, r1
 462                             	.LVL41:
 463 0012 4B E1                   		add	r14, r1
 464                             	.LVL42:
 871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 465                             		.loc 1 871 0
 466 0014 5F 11                   		movu.W	r1, r1
 467 0016 02                      		rts
 468                             	.LFE4:
 470                             		.section	.text.PP_SlaveResponseBuilder,"ax",@progbits
 471                             		.global	_PP_SlaveResponseBuilder
 473                             	_PP_SlaveResponseBuilder:
 474                             	.LFB6:
1943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 475                             		.loc 1 1943 0
 476                             	.LVL43:
 477 0000 6E 6D                   		pushm	r6-r13
 478                             	.LCFI7:
 479 0002 71 00 E8                		add	#-24, r0
 480                             	.LCFI8:
 481 0005 E3 02                   		mov.L	r2, [r0]
 482 0007 A0 0B                   		mov.L	r3, 4[r0]
 483 0009 A0 84                   		mov.L	r4, 8[r0]
 484 000b EF 25                   		mov.L	r2, r5
 485                             	.LVL44:
 486 000d DD 0A 02                		mov.W	4[r0], r10
 487                             	.LVL45:
 488 0010 CD 09 06                		mov.B	6[r0], r9
 489                             	.LVL46:
1947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].dataCount=info.len;	/* init data */
 490                             		.loc 1 1947 0
 491 0013 5B 17                   		movu.B	r1, r7
 492 0015 FD C4 7B                		shll	#4, r7, r11
 493 0018 70 BB 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r11
 494 001e D7 BA 02                		mov.W	r10, 4[r11]
1948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].pdata=info.address;	/* init address */
 495                             		.loc 1 1948 0
 496 0021 E3 B2                   		mov.L	r2, [r11]
1950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     PP_SlavePlatformProtocol[ch].answerCount=0;				/* init answerCount */
 497                             		.loc 1 1950 0
 498 0023 71 BE 08                		add	#8, r11, r14
 499 0026 F9 B5 04 00             		mov.W	#0, 8[r11]
1951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].option=0;						/* init chk mode */
 500                             		.loc 1 1951 0
 501 002a F9 B4 0D 00             		mov.B	#0, 13[r11]
 502 002e 62 CB                   		add	#12, r11
1952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	PP_SlavePlatformProtocol[ch].crc=0;						/* init chk val */
 503                             		.loc 1 1952 0
 504 0030 F9 E5 01 00             		mov.W	#0, 2[r14]
1956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if((info.option & PP_SL_RESP_ANSW_OPT) && (info.error == (IO_ErrorType)IO_E_OK))
 505                             		.loc 1 1956 0
 506 0034 CD 0C 07                		mov.B	7[r0], r12
 507 0037 FD 74 CC 01             		tst	#1, r12
 508 003b 3A 2D 01                		beq	.L51
1956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if((info.option & PP_SL_RESP_ANSW_OPT) && (info.error == (IO_ErrorType)IO_E_OK))
 509                             		.loc 1 1956 0 is_stmt 0 discriminator 1
 510 003e 5B 9C                   		movu.B	r9, r12
 511 0040 61 0C                   		cmp	#0, r12
 512 0042 3B 26 01                		bne	.L51
 513 0045 EF 48                   		mov.L	r4, r8
 514                             	.LVL47:
1959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX]&PP_HDR_CRC) && (BCP_ChannelTable[ch].rxBuffer[PP_
 515                             		.loc 1 1959 0 is_stmt 1
 516 0047 EF 7C                   		mov.L	r7, r12
 517 0049 75 1C 1C                		mul	#28, r12
 518 004c 70 CC 00 00 00 00       		add	#_BCP_ChannelTable, r12
 519 0052 ED CC 05                		mov.L	20[r12], r12
 520 0055 CD C4 02                		mov.B	2[r12], r4
 521 0058 59 CD 01                		movu.B	1[r12], r13
 522 005b FD 74 C4 01             		tst	#1, r4
 523 005f 20 0F                   		beq	.L53
1959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX]&PP_HDR_CRC) && (BCP_ChannelTable[ch].rxBuffer[PP_
 524                             		.loc 1 1959 0 is_stmt 0 discriminator 1
 525 0061 75 5D EE                		cmp	#0xee, r13
 526 0064 1A                      		bne	.L53
1961:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[ch].option |= 1;
 527                             		.loc 1 1961 0 is_stmt 1
 528 0065 F9 B4 01 01             		mov.B	#1, 1[r11]
1962:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[ch].crc=0xFFFF;
 529                             		.loc 1 1962 0
 530 0069 F9 E5 01 FF             		mov.W	#-1, 2[r14]
 531 006d 0D                      		bra	.L74
 532                             	.L53:
1965:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(BCP_ChannelTable[ch].rxBuffer[PP_FTYP_INDEX] == PP_FTYP_EE)
 533                             		.loc 1 1965 0
 534 006e 75 5D EE                		cmp	#0xee, r13
 535 0071 18                      		bne	.L60
 536                             		.balign 2,3,1
 537                             	.L74:
1968:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ_len=(uint8_t)((uint8_t)PP_ACK_SZ+(uint8_t)PP_LEN_INDEX);
 538                             		.loc 1 1968 0
 539 0072 66 5E                   		mov	#5, r14
1969:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ=(uint8_t)((uint8_t)PP_ACK_SZ+(uint8_t)PP_DAT_INDEX);
 540                             		.loc 1 1969 0
 541 0074 66 64                   		mov	#6, r4
1967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           cpy_len=4;
 542                             		.loc 1 1967 0
 543 0076 66 43                   		mov	#4, r3
 544 0078 08                      		bra	.L54
 545                             	.L60:
1974:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ_len=(uint8_t)PP_ACK_SZ+(uint8_t)PP_BS_LEN_ANS_INDEX;
 546                             		.loc 1 1974 0
 547 0079 66 3E                   		mov	#3, r14
1975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           displ=(uint8_t)PP_ACK_SZ+(uint8_t)PP_BS_DAT_ANS_INDEX;
 548                             		.loc 1 1975 0
 549 007b 66 44                   		mov	#4, r4
1973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****           cpy_len=2;
 550                             		.loc 1 1973 0
 551 007d 66 23                   		mov	#2, r3
 552 007f 03                      		.balign 2,3,2
 553                             	.L54:
 554                             	.LVL48:
1990:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(info.len + PP_SlavePlatformProtocol[ch].answerCount + 2 +PP_LEN_SZ > BCP_ChannelTable[ch].txBu
 555                             		.loc 1 1990 0
 556 0080 FD C4 7B                		shll	#4, r7, r11
 557 0083 70 BB 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r11
 558 0089 DD BB 04                		mov.W	8[r11], r11
 559 008c EF 7D                   		mov.L	r7, r13
 560 008e 75 1D 1C                		mul	#28, r13
 561 0091 70 DD 00 00 00 00       		add	#_BCP_ChannelTable, r13
 562 0097 DD DD 0C                		mov.W	24[r13], r13
 563 009a 5F A1                   		movu.W	r10, r1
 564                             	.LVL49:
 565 009c 5F B2                   		movu.W	r11, r2
 566                             	.LVL50:
 567 009e 4B 21                   		add	r2, r1
 568 00a0 62 21                   		add	#2, r1
 569 00a2 5F D2                   		movu.W	r13, r2
 570 00a4 47 21                   		cmp	r2, r1
 571 00a6 29 08                   		blt	.L55
1993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			info.len= (BCP_PacketSizeType) (BCP_ChannelTable[ch].txBufferSize-PP_SlavePlatformProtocol[ch].a
 572                             		.loc 1 1993 0
 573 00a8 71 DA FD                		add	#-3, r13, r10
 574                             	.LVL51:
 575 00ab 43 BA                   		sub	r11, r10
 576                             	.LVL52:
 577 00ad 03                      		.balign 2,3,2
 578                             	.L55:
1996:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         if(PP_SlavePlatformProtocol[ch].dataCount)
 579                             		.loc 1 1996 0
 580 00ae FD C4 7B                		shll	#4, r7, r11
 581 00b1 70 BB 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r11
 582 00b7 DD BD 02                		mov.W	4[r11], r13
 583 00ba 5F D2                   		movu.W	r13, r2
 584 00bc 61 02                   		cmp	#0, r2
 585 00be 16                      		beq	.L56
1998:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			PP_SlavePlatformProtocol[ch].dataCount -= info.len;
 586                             		.loc 1 1998 0
 587 00bf 43 AD                   		sub	r10, r13
 588 00c1 D7 BD 02                		mov.W	r13, 4[r11]
 589                             		.balign 2,3,2
 590                             	.L56:
2001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		PP_SlavePlatformProtocol[ch].answerCount+=cpy_len+PP_LEN_SZ; /* chk not counted */
 591                             		.loc 1 2001 0
 592 00c4 FD C4 7B                		shll	#4, r7, r11
 593 00c7 70 BB 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r11
 594 00cd DD BD 04                		mov.W	8[r11], r13
 595 00d0 62 1D                   		add	#1, r13
 596 00d2 5B 32                   		movu.B	r3, r2
 597 00d4 4B 2D                   		add	r2, r13
 598 00d6 D7 BD 04                		mov.W	r13, 8[r11]
2004:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		LIB_MemcpyFromLast(&BCP_ChannelTable[ch].txBuffer[PP_ACK_SZ], BCP_ChannelTable[ch].rxBuffer,  cpy
 599                             		.loc 1 2004 0
 600 00d9 EF 7D                   		mov.L	r7, r13
 601 00db 75 1D 1C                		mul	#28, r13
 602 00de 70 DD 00 00 00 00       		add	#_BCP_ChannelTable, r13
 603 00e4 ED D6 04                		mov.L	16[r13], r6
 604 00e7 71 6D 01                		add	#1, r6, r13
 605 00ea EF D1                   		mov.L	r13, r1
 606 00ec EF C2                   		mov.L	r12, r2
 607 00ee A0 8C                   		mov.L	r4, 12[r0]
 608 00f0 A1 0D                   		mov.L	r5, 20[r0]
 609 00f2 E7 0E 04                		mov.L	r14, 16[r0]
 610 00f5 05 00 00 00             		bsr	_LIB_MemcpyFromLast
 611                             	.LVL53:
2007:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         BCP_ChannelTable[ch].txBuffer[displ_len] = (uint8_t) info.len;
 612                             		.loc 1 2007 0
 613 00f9 ED 0E 04                		mov.L	16[r0], r14
 614 00fc 5B EE                   		movu.B	r14, r14
 615 00fe FE 0E 6A                		mov.B	r10, [r14,r6]
2008:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         PP_SlavePlatformProtocol[ch].answerCount += info.len;
 616                             		.loc 1 2008 0
 617 0101 DD BE 04                		mov.W	8[r11], r14
 618 0104 4B AE                   		add	r10, r14
 619 0106 DF EF                   		mov.W	r14, r15
 620 0108 D7 BE 04                		mov.W	r14, 8[r11]
2011:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         (void) memcpy(&BCP_ChannelTable[ch].txBuffer[displ], info.address,  info.len);
 621                             		.loc 1 2011 0
 622 010b A8 8C                   		mov.L	12[r0], r4
 623 010d 5B 41                   		movu.B	r4, r1
 624 010f 4B 61                   		add	r6, r1
 625 0111 A9 0D                   		mov.L	20[r0], r5
 626 0113 EF 52                   		mov.L	r5, r2
 627 0115 5F A3                   		movu.W	r10, r3
 628 0117 7F 8F                   		smovf
2015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX+1]&PP_HDR_CRC) && (BCP_ChannelTable[ch].rxBuffer[P
 629                             		.loc 1 2015 0
 630 0119 CD CA 03                		mov.B	3[r12], r10
 631                             	.LVL54:
 632 011c FD 74 CA 01             		tst	#1, r10
 633 0120 20 1C                   		beq	.L57
2015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if((BCP_ChannelTable[ch].rxBuffer[PP_HDR_INDEX+1]&PP_HDR_CRC) && (BCP_ChannelTable[ch].rxBuffer[P
 634                             		.loc 1 2015 0 is_stmt 0 discriminator 1
 635 0122 59 CA 02                		movu.B	2[r12], r10
 636 0125 75 5A EE                		cmp	#0xee, r10
 637 0128 21 14                   		bne	.L57
2018:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  crc_append(PP_SlavePlatformProtocol[ch].answerCount, &BCP_ChannelTable[ch].txBuffer[PP_ACK_SZ])
 638                             		.loc 1 2018 0 is_stmt 1
 639 012a DF E1                   		mov.W	r14, r1
 640 012c EF D2                   		mov.L	r13, r2
 641 012e 05 00 00 00             		bsr	_crc_append
 642                             	.LVL55:
2019:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  PP_SlavePlatformProtocol[ch].answerCount+=2;
 643                             		.loc 1 2019 0
 644 0132 DD BA 04                		mov.W	8[r11], r10
 645 0135 62 2A                   		add	#2, r10
 646 0137 D7 BA 04                		mov.W	r10, 8[r11]
 647 013a 2E 28                   		bra	.L58
 648                             	.L57:
 649                             	.LVL56:
 650                             	.LBB9:
 651                             	.LBB10:
2403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	uint16_t crc = LIB_ChkComputation ((uint16_t)len, pdata, 0);
 652                             		.loc 1 2403 0
 653 013c DF F1                   		mov.W	r15, r1
 654 013e EF D2                   		mov.L	r13, r2
 655 0140 66 03                   		mov	#0, r3
 656 0142 E7 0F 03                		mov.L	r15, 12[r0]
 657 0145 05 00 00 00             		bsr	_LIB_ChkComputation
 658                             	.LVL57:
2404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   *(pdata+len) = (uint8_t)crc;
 659                             		.loc 1 2404 0
 660 0149 ED 0F 03                		mov.L	12[r0], r15
 661 014c 5F FF                   		movu.W	r15, r15
 662 014e FE 0F D1                		mov.B	r1, [r15,r13]
 663                             	.LBE10:
 664                             	.LBE9:
2025:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		  PP_SlavePlatformProtocol[ch].answerCount+=1;
 665                             		.loc 1 2025 0
 666 0151 FD C4 7A                		shll	#4, r7, r10
 667 0154 70 AA 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r10
 668 015a DD AB 04                		mov.W	8[r10], r11
 669 015d 62 1B                   		add	#1, r11
 670 015f D7 AB 04                		mov.W	r11, 8[r10]
 671                             	.LVL58:
 672                             		.balign 2,3,1
 673                             	.L58:
2028:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		if(info.callback != 0)
 674                             		.loc 1 2028 0
 675 0162 61 08                   		cmp	#0, r8
 676 0164 14                      		beq	.L51
2030:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 			(info.callback)();
 677                             		.loc 1 2030 0
 678 0165 7F 18                   		jsr	r8
 679                             	.LVL59:
 680 0167 03                      		.balign 2,3,1
 681                             	.L51:
2035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_ChannelTable[ch].txBuffer[0] = (uint8_t) ((info.error == (IO_ErrorType)IO_E_OK) ? PP_ACK : PP
 682                             		.loc 1 2035 0
 683 0168 EF 7A                   		mov.L	r7, r10
 684 016a 75 1A 1C                		mul	#28, r10
 685 016d 70 AA 00 00 00 00       		add	#_BCP_ChannelTable, r10
 686 0173 ED AB 04                		mov.L	16[r10], r11
 687 0176 76 29 FF 00             		and #0xff, r9
 688                             	.LVL60:
 689 017a 1D                      		bne	.L61
 690 017b 75 4A 5A                		mov	#0x5a, r10
 691 017e 0C                      		bra	.L59
 692                             	.L61:
 693 017f 75 4A 55                		mov	#0x55, r10
 694                             		.balign 2,3,1
 695                             	.L59:
2035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   BCP_ChannelTable[ch].txBuffer[0] = (uint8_t) ((info.error == (IO_ErrorType)IO_E_OK) ? PP_ACK : PP
 696                             		.loc 1 2035 0 is_stmt 0 discriminator 3
 697 0182 C3 BA                   		mov.B	r10, [r11]
2036:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   PP_SlavePlatformProtocol[ch].answerCount+=1;
 698                             		.loc 1 2036 0 is_stmt 1 discriminator 3
 699 0184 6C 47                   		shll	#4, r7
 700                             	.LVL61:
 701 0186 70 77 00 00 00 00       		add	#_PP_SlavePlatformProtocol, r7
 702 018c DD 7A 04                		mov.W	8[r7], r10
 703 018f 62 1A                   		add	#1, r10
 704 0191 D7 7A 04                		mov.W	r10, 8[r7]
2037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 705                             		.loc 1 2037 0 discriminator 3
 706 0194 3F 6D 0E                		rtsd	#56, r6-r13
 707                             	.LFE6:
 709 0197 03                      		.section	.text.PP_Typ16ToBridgeConv,"ax",@progbits
 710                             		.global	_PP_Typ16ToBridgeConv
 712                             	_PP_Typ16ToBridgeConv:
 713                             	.LFB7:
2182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 714                             		.loc 1 2182 0
 715                             	.LVL62:
 716 0000 EF 3E                   		mov.L	r3, r14
2184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_SEQ_INDEX]=seq_id;
 717                             		.loc 1 2184 0
 718 0002 C3 31                   		mov.B	r1, [r3]
2185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_CMDID_INDEX]=pInMem[PP_TYP0_INDEX];
 719                             		.loc 1 2185 0
 720 0004 C5 23 03 01             		mov.B	3[r2], 1[r3]
2186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_HDR_INDEX]     = (uint8_t) (pInMem[PP_HDR_INDEX] & 0x01);
 721                             		.loc 1 2186 0
 722 0008 88 A4                   		mov.B 2[r2], r4
 723 000a 64 14                   		and #1, r4
 724 000c 80 BC                   		mov.B	r4, 3[r3]
2187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_TYP_INDEX]=pInMem[PP_TYP1_INDEX];
 725                             		.loc 1 2187 0
 726 000e C5 23 04 04             		mov.B	4[r2], 4[r3]
2188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_LEN_INDEX]     = (uint8_t) (pInMem[PP_GLEN_INDEX] - 1);
 727                             		.loc 1 2188 0
 728 0012 89 2B                   		mov.B	5[r2], r3
 729                             	.LVL63:
 730 0014 60 13                   		sub	#1, r3
 731 0016 C7 E3 05                		mov.B	r3, 5[r14]
2189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	pOutMem[PP_GP_I2C_ADDR_INDEX]=pInMem[PP_GDAT_INDEX];
 732                             		.loc 1 2189 0
 733 0019 C5 2E 06 02             		mov.B	6[r2], 2[r14]
2191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(void)memcpy((&pOutMem[PP_GP_LEN_INDEX]+1), (&pInMem[PP_GDAT_INDEX]+1), pOutMem[PP_GP_LEN_INDEX]);
 734                             		.loc 1 2191 0
 735 001d 71 E1 06                		add	#6, r14, r1
 736                             	.LVL64:
 737 0020 62 72                   		add	#7, r2
 738                             	.LVL65:
 739 0022 5B 33                   		movu.B	r3, r3
 740 0024 7F 8F                   		smovf
 741                             	.LVL66:
2193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	return (uint16_t) (6 + pOutMem[PP_GP_LEN_INDEX]);
 742                             		.loc 1 2193 0
 743 0026 59 E1 05                		movu.B	5[r14], r1
2194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 744                             		.loc 1 2194 0
 745 0029 62 61                   		add	#6, r1
 746 002b 02                      		rts
 747                             	.LFE7:
 749                             		.section	.text.PP_BridgeToTyp16Conv,"ax",@progbits
 750                             		.global	_PP_BridgeToTyp16Conv
 752                             	_PP_BridgeToTyp16Conv:
 753                             	.LFB8:
2198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** {
 754                             		.loc 1 2198 0
 755                             	.LVL67:
 756 0000 6E 7B                   		pushm	r7-r11
 757                             	.LCFI9:
 758 0002 EF 14                   		mov.L	r1, r4
 759 0004 EF 2E                   		mov.L	r2, r14
2202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_ACK_POS] = in[PP_GP_ACK_ANS_INDEX];
 760                             		.loc 1 2202 0
 761 0006 C1 12 04                		mov.B	4[r1], [r2]
2203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(
 762                             		.loc 1 2203 0
 763 0009 B0 9F                   		movu.B	3[r1], r7
 764 000b 75 57 9D                		cmp	#0x9d, r7
 765 000e 1E                      		bne	.L78
 766 000f 03                      		.balign 2,3,1
 767                             	.L81:
2208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return PP_ACK_SZ;
 768                             		.loc 1 2208 0
 769 0010 66 11                   		mov	#1, r1
 770                             	.LVL68:
 771 0012 2E 78                   		bra	.L79
 772                             	.LVL69:
 773                             	.L78:
2205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	|| ((in[PP_GP_CMDID_ANS_INDEX] == PP_CMD_BASIC) && ((in[PP_GP_TYP_ANS_INDEX] & PP_BS_TYPE_MSK) != 
 774                             		.loc 1 2205 0
 775 0014 75 57 93                		cmp	#0x93, r7
 776 0017 21 0D                   		bne	.L80
2205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	|| ((in[PP_GP_CMDID_ANS_INDEX] == PP_CMD_BASIC) && ((in[PP_GP_TYP_ANS_INDEX] & PP_BS_TYPE_MSK) != 
 777                             		.loc 1 2205 0 is_stmt 0 discriminator 1
 778 0019 89 97                   		mov.B	6[r1], r7
 779 001b 76 27 F0 00             		and #0xf0, r7
 780 001f 75 57 10                		cmp	#16, r7
 781 0022 21 EE                   		bne	.L81
 782                             		.balign 2,3,4
 783                             	.L80:
2210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_STX_INDEX + PP_ACK_SZ] = PP_STX;
 784                             		.loc 1 2210 0 is_stmt 1
 785 0024 F9 E4 01 A5             		mov.B	#0xffffffa5, 1[r14]
2211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_FTYP_INDEX + PP_ACK_SZ] = PP_FTYP_EE;
 786                             		.loc 1 2211 0
 787 0028 F9 E4 02 EE             		mov.B	#-18, 2[r14]
2212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_HDR_INDEX + PP_ACK_SZ] = in[PP_GP_HDR_ANS_INDEX];
 788                             		.loc 1 2212 0
 789 002c C5 4E 05 03             		mov.B	5[r4], 3[r14]
2213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_TYP0_INDEX + PP_ACK_SZ] = in[PP_GP_CMDID_ANS_INDEX];
 790                             		.loc 1 2213 0
 791 0030 C5 4E 03 04             		mov.B	3[r4], 4[r14]
2214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_TYP1_INDEX + PP_ACK_SZ] = in[PP_GP_TYP_ANS_INDEX];
 792                             		.loc 1 2214 0
 793 0034 C5 4E 06 05             		mov.B	6[r4], 5[r14]
2215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	out[PP_GLEN_INDEX + PP_ACK_SZ] = in[PP_GP_LEN_ANS_INDEX];
 794                             		.loc 1 2215 0
 795 0038 CD 4A 07                		mov.B	7[r4], r10
 796 003b C7 EA 06                		mov.B	r10, 6[r14]
 797                             	.LVL70:
2219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****     if(len<PP_GP_LEN_ANS_INDEX)
 798                             		.loc 1 2219 0
 799 003e 5C 47                   		movu.W	[r4], r7
 800 0040 61 67                   		cmp	#6, r7
 801 0042 25 CE                   		bleu	.L81
2225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****         len= out[PP_GLEN_INDEX + PP_ACK_SZ];
 802                             		.loc 1 2225 0
 803 0044 5B AA                   		movu.B	r10, r10
 804                             	.LVL71:
2226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	    len = (uint16_t) ((len == 0x00)? 0x100 : len);
 805                             		.loc 1 2226 0
 806 0046 DF A7                   		mov.W	r10, r7
 807 0048 61 0A                   		cmp	#0, r10
 808 004a 1E                      		bne	.L82
 809 004b FB 7A 00 01             		mov	#0x100, r7
 810 004f 03                      		.balign 2,3,2
 811                             	.L82:
 812                             	.LVL72:
2231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	(void)memcpy(out + (PP_GDAT_INDEX + PP_ACK_SZ), in+PP_GP_DAT_ANS_INDEX, len);
 813                             		.loc 1 2231 0 discriminator 3
 814 0050 71 E1 07                		add	#7, r14, r1
 815                             	.LVL73:
 816 0053 71 42 08                		add	#8, r4, r2
 817                             	.LVL74:
 818 0056 EF 73                   		mov.L	r7, r3
 819 0058 76 23 FF 01             		and #0x1ff, r3
 820 005c 7F 8F                   		smovf
2233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(out[PP_HDR_INDEX + PP_ACK_SZ] & PP_HDR_CRC)
 821                             		.loc 1 2233 0 discriminator 3
 822 005e CD E3 03                		mov.B	3[r14], r3
2235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		crc_append((uint16_t) (PP_GLEN_INDEX + 1 + len), out+PP_ACK_SZ);
 823                             		.loc 1 2235 0 discriminator 3
 824 0061 EF 71                   		mov.L	r7, r1
 825 0063 62 61                   		add	#6, r1
2233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	if(out[PP_HDR_INDEX + PP_ACK_SZ] & PP_HDR_CRC)
 826                             		.loc 1 2233 0 discriminator 3
 827 0065 64 13                   		and	#1, r3
 828 0067 20 0F                   		beq	.L83
2235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		crc_append((uint16_t) (PP_GLEN_INDEX + 1 + len), out+PP_ACK_SZ);
 829                             		.loc 1 2235 0
 830 0069 71 E2 01                		add	#1, r14, r2
 831 006c 05 00 00 00             		bsr	_crc_append
 832                             	.LVL75:
2236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return (uint16_t) (PP_GLEN_INDEX + 1 + len + 2 + PP_ACK_SZ);
 833                             		.loc 1 2236 0
 834 0070 EF 71                   		mov.L	r7, r1
 835 0072 62 91                   		add	#9, r1
 836 0074 2E 16                   		bra	.L79
 837                             	.LVL76:
 838                             	.L83:
2240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		chk_append((uint16_t) (PP_GLEN_INDEX + 1+len), out+PP_ACK_SZ);
 839                             		.loc 1 2240 0
 840 0076 DF 1B                   		mov.W	r1, r11
 841 0078 71 EA 01                		add	#1, r14, r10
 842                             	.LVL77:
 843                             	.LBB13:
 844                             	.LBB14:
2403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 	uint16_t crc = LIB_ChkComputation ((uint16_t)len, pdata, 0);
 845                             		.loc 1 2403 0
 846 007b EF A2                   		mov.L	r10, r2
 847 007d 05 00 00 00             		bsr	_LIB_ChkComputation
 848                             	.LVL78:
2404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c ****   *(pdata+len) = (uint8_t)crc;
 849                             		.loc 1 2404 0
 850 0081 5F BB                   		movu.W	r11, r11
 851 0083 FE 0B A1                		mov.B	r1, [r11,r10]
 852                             	.LBE14:
 853                             	.LBE13:
2241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** 		return (uint16_t) (PP_GLEN_INDEX + 1 + len + 1 + PP_ACK_SZ);
 854                             		.loc 1 2241 0
 855 0086 EF 71                   		mov.L	r7, r1
 856                             	.LVL79:
 857 0088 62 81                   		add	#8, r1
 858                             	.LVL80:
 859                             		.balign 2,3,1
 860                             	.L79:
2244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM\BCP_PlatformProtocol.c **** }
 861                             		.loc 1 2244 0
 862 008a 5F 11                   		movu.W	r1, r1
 863 008c 3F 7B 05                		rtsd	#20, r7-r11
 864                             	.LFE8:
 866                             		.comm	_PP_len,2,2
 867 008f 03                      		.section	.bss.PP_SlavePlatformProtocol,"aw",@nobits
 868                             		.balign 4
 871                             	_PP_SlavePlatformProtocol:
 872 0000 00 00 00 00 00 00 00 00 		.zero	32
 872      00 00 00 00 00 00 00 00 
 872      00 00 00 00 00 00 00 00 
 872      00 00 00 00 00 00 00 00 
 1062                             	.Letext0:
 1063                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 1064                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\RN_RX200/RN_RX200_cfg.h"
 1065                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers/IO_driver.h"
 1066                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_General.h"
 1067                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_PlatformProtoco
 1068                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/BusCommPltf_cfg.h"
 1069                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers\\OCCRC/OCCRC_drv.h"
 1070                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 1071                             		.file 10 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_BusCOMM/BCP_BusCommMng.h"
DEFINED SYMBOLS
                            *ABS*:00000000 BCP_PlatformProtocol.c
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:6      .text.crc_append:00000000 _crc_append
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:11     .text.crc_append:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:33     .text.PP_SlaveReceiveData.isra.0:00000000 _PP_SlaveReceiveData.isra.0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:37     .text.PP_SlaveReceiveData.isra.0:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:871    .bss.PP_SlavePlatformProtocol:00000000 _PP_SlavePlatformProtocol
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:86     .text.PP_SlaveNotification:00000000 _PP_SlaveNotification
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:90     .text.PP_SlaveNotification:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:264    .text.PP_GetSlaveState:00000000 _PP_GetSlaveState
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:269    .text.PP_GetSlaveState:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:281    .text.PP_IsSlaveStateRxOK:00000000 _PP_IsSlaveStateRxOK
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:285    .text.PP_IsSlaveStateRxOK:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:403    .text.PP_SlaveStartResponse:00000000 _PP_SlaveStartResponse
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:407    .text.PP_SlaveStartResponse:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:448    .text.PP_GetRequestLen:00000000 _PP_GetRequestLen
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:453    .text.PP_GetRequestLen:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:473    .text.PP_SlaveResponseBuilder:00000000 _PP_SlaveResponseBuilder
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:477    .text.PP_SlaveResponseBuilder:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:712    .text.PP_Typ16ToBridgeConv:00000000 _PP_Typ16ToBridgeConv
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:716    .text.PP_Typ16ToBridgeConv:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:752    .text.PP_BridgeToTyp16Conv:00000000 _PP_BridgeToTyp16Conv
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:756    .text.PP_BridgeToTyp16Conv:00000000 L0
                            *COM*:00000002 _PP_len
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:105    .rodata.PP_SlaveNotification:00000000 .L12
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:237    .text.PP_SlaveNotification:000000e9 .L7
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:114    .text.PP_SlaveNotification:00000018 .L8
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:123    .text.PP_SlaveNotification:0000002d .L9
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:136    .text.PP_SlaveNotification:00000049 .L10
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:244    .text.PP_SlaveNotification:000000f8 .L22
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:230    .text.PP_SlaveNotification:000000e1 .L11
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:874    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:7      .text.crc_append:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:34     .text.PP_SlaveReceiveData.isra.0:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:87     .text.PP_SlaveNotification:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:265    .text.PP_GetSlaveState:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:282    .text.PP_IsSlaveStateRxOK:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:404    .text.PP_SlaveStartResponse:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:449    .text.PP_GetRequestLen:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:474    .text.PP_SlaveResponseBuilder:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:713    .text.PP_Typ16ToBridgeConv:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:753    .text.PP_BridgeToTyp16Conv:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:2770   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4543   .debug_str:00000364 .LASF195
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4803   .debug_str:00000b5d .LASF196
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4397   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4427   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4741   .debug_str:000009a9 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4603   .debug_str:00000595 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4511   .debug_str:00000268 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4575   .debug_str:000004a3 .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4477   .debug_str:00000193 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4495   .debug_str:0000020e .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4455   .debug_str:000000da .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4471   .debug_str:0000015d .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4791   .debug_str:00000b11 .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4683   .debug_str:000007f0 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4445   .debug_str:00000087 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4479   .debug_str:000001a5 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4627   .debug_str:00000642 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4731   .debug_str:00000950 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4639   .debug_str:0000069c .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4625   .debug_str:00000638 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4723   .debug_str:0000091f .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4649   .debug_str:000006f6 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4757   .debug_str:00000a19 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4563   .debug_str:00000429 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4443   .debug_str:00000074 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4469   .debug_str:0000014a .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4751   .debug_str:000009e5 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4651   .debug_str:00000700 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4553   .debug_str:000003d3 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4695   .debug_str:00000854 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4609   .debug_str:000005c3 .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4743   .debug_str:000009b6 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4439   .debug_str:0000004b .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4673   .debug_str:000007aa .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4577   .debug_str:000004b6 .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4565   .debug_str:0000043b .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4677   .debug_str:000007c6 .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4785   .debug_str:00000aec .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4759   .debug_str:00000a26 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4615   .debug_str:000005fe .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4777   .debug_str:00000abd .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4557   .debug_str:000003f2 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4519   .debug_str:00000294 .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4763   .debug_str:00000a48 .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4719   .debug_str:00000901 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4643   .debug_str:000006b9 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4429   .debug_str:00000000 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4707   .debug_str:000008b4 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4767   .debug_str:00000a67 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4807   .debug_str:00000bcb .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4461   .debug_str:00000107 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4621   .debug_str:0000061b .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4547   .debug_str:0000039b .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4437   .debug_str:0000003c .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4711   .debug_str:000008ce .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4701   .debug_str:00000885 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4521   .debug_str:000002a3 .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4605   .debug_str:0000059f .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4457   .debug_str:000000f1 .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4709   .debug_str:000008bf .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4517   .debug_str:00000287 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4769   .debug_str:00000a7b .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4441   .debug_str:00000060 .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4787   .debug_str:00000af8 .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4597   .debug_str:00000575 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4629   .debug_str:0000064b .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4487   .debug_str:000001dd .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4797   .debug_str:00000b32 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4819   .debug_str:00000c31 .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4721   .debug_str:0000090d .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4699   .debug_str:00000871 .LASF197
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4515   .debug_str:0000027e .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4749   .debug_str:000009de .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4561   .debug_str:00000422 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4681   .debug_str:000007e3 .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4567   .debug_str:00000450 .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4641   .debug_str:000006b1 .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4527   .debug_str:000002dd .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4459   .debug_str:000000fe .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4637   .debug_str:00000689 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4465   .debug_str:0000012f .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4573   .debug_str:00000496 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4765   .debug_str:00000a59 .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4659   .debug_str:00000744 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4703   .debug_str:00000893 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4497   .debug_str:00000217 .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4789   .debug_str:00000b03 .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4779   .debug_str:00000ad0 .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4805   .debug_str:00000bb5 .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4831   .debug_str:00000ca4 .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4473   .debug_str:0000016b .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4463   .debug_str:0000011a .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4483   .debug_str:000001c4 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4489   .debug_str:000001ef .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4587   .debug_str:00000509 .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4631   .debug_str:0000065d .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4689   .debug_str:00000821 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4647   .debug_str:000006e2 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4685   .debug_str:000007fe .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4523   .debug_str:000002b0 .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4691   .debug_str:0000083b .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4607   .debug_str:000005af .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4529   .debug_str:000002e8 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4817   .debug_str:00000c1d .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4549   .debug_str:000003a7 .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4725   .debug_str:00000927 .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4525   .debug_str:000002c4 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4569   .debug_str:00000464 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4735   .debug_str:0000096d .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4717   .debug_str:000008f4 .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4555   .debug_str:000003e5 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4827   .debug_str:00000c7f .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4665   .debug_str:00000768 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4513   .debug_str:00000271 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4661   .debug_str:00000751 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4825   .debug_str:00000c68 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4611   .debug_str:000005db .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4733   .debug_str:00000955 .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4433   .debug_str:00000018 .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4551   .debug_str:000003b9 .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4583   .debug_str:000004d6 .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4531   .debug_str:000002fc .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4823   .debug_str:00000c59 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4801   .debug_str:00000b45 .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4705   .debug_str:000008a1 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4679   .debug_str:000007d4 .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4535   .debug_str:0000031d .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4635   .debug_str:00000681 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4663   .debug_str:00000762 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4829   .debug_str:00000c8c .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4541   .debug_str:00000356 .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4505   .debug_str:00000243 .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4669   .debug_str:0000078a .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4667   .debug_str:00000775 .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4739   .debug_str:00000996 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4633   .debug_str:0000066d .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4599   .debug_str:00000583 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4601   .debug_str:0000058c .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4775   .debug_str:00000ab8 .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4533   .debug_str:00000315 .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4697   .debug_str:0000086a .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4811   .debug_str:00000bef .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4503   .debug_str:00000239 .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4771   .debug_str:00000a89 .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4745   .debug_str:000009d0 .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4619   .debug_str:00000612 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4447   .debug_str:00000093 .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4727   .debug_str:0000093e .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4617   .debug_str:00000609 .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4485   .debug_str:000001d4 .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4453   .debug_str:000000cd .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4687   .debug_str:00000814 .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4815   .debug_str:00000c08 .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4821   .debug_str:00000c43 .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4537   .debug_str:00000329 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4579   .debug_str:000004c0 .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4501   .debug_str:0000022c .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4809   .debug_str:00000be0 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4833   .debug_str:00000cb4 .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4613   .debug_str:000005ee .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4585   .debug_str:000004f3 .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4475   .debug_str:0000017d .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4449   .debug_str:0000009f .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4753   .debug_str:000009fd .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4589   .debug_str:00000519 .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4729   .debug_str:0000094a .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4653   .debug_str:00000713 .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4737   .debug_str:00000988 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4435   .debug_str:00000030 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4493   .debug_str:00000208 .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4593   .debug_str:0000053a .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4645   .debug_str:000006ce .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4747   .debug_str:000009d9 .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4799   .debug_str:00000b40 .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4675   .debug_str:000007ba .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4507   .debug_str:00000256 .LASF198
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:29     .text.crc_append:0000001b .LFE12
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3632   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3645   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3656   .debug_loc:0000003e .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:18     .text.crc_append:0000000d .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:81     .text.PP_SlaveReceiveData.isra.0:0000004c .LFE13
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3674   .debug_loc:0000006a .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3692   .debug_loc:00000096 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3714   .debug_loc:000000cd .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:77     .text.PP_SlaveReceiveData.isra.0:00000047 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4559   .debug_str:00000405 .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4713   .debug_str:000008d9 .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4571   .debug_str:00000481 .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:259    .text.PP_SlaveNotification:00000104 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3732   .debug_loc:000000f9 .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4491   .debug_str:000001ff .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4509   .debug_str:00000261 .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:137    .text.PP_SlaveNotification:00000049 .LBB4
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:232    .text.PP_SlaveNotification:000000e1 .LBE4
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4591   .debug_str:00000529 .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:276    .text.PP_GetSlaveState:0000000f .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3750   .debug_loc:00000125 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4451   .debug_str:000000b9 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:398    .text.PP_IsSlaveStateRxOK:000000a1 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3764   .debug_loc:00000146 .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3777   .debug_loc:00000166 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3820   .debug_loc:000001dc .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3837   .debug_loc:00000207 .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:316    .text.PP_IsSlaveStateRxOK:0000003e .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:340    .text.PP_IsSlaveStateRxOK:00000060 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:363    .text.PP_IsSlaveStateRxOK:00000079 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:370    .text.PP_IsSlaveStateRxOK:00000081 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4657   .debug_str:0000072e .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:443    .text.PP_SlaveStartResponse:0000003e .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3870   .debug_loc:00000257 .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3883   .debug_loc:00000277 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4755   .debug_str:00000a0c .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:439    .text.PP_SlaveStartResponse:0000003a .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4655   .debug_str:0000071d .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:468    .text.PP_GetRequestLen:00000017 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3905   .debug_loc:000002ae .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4693   .debug_str:0000084f .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4431   .debug_str:00000011 .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3919   .debug_loc:000002cf .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4671   .debug_str:0000079f .LASF199
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4481   .debug_str:000001ac .LASF200
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:707    .text.PP_SlaveResponseBuilder:00000197 .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3958   .debug_loc:00000310 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3976   .debug_loc:0000033c .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:3994   .debug_loc:00000368 .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4581   .debug_str:000004ce .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4155   .debug_loc:00000457 .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4793   .debug_str:00000b19 .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4162   .debug_loc:0000046a .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4813   .debug_str:00000bfe .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4169   .debug_loc:0000047d .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:650    .text.PP_SlaveResponseBuilder:0000013c .LBB9
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:664    .text.PP_SlaveResponseBuilder:00000151 .LBE9
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4176   .debug_loc:00000490 .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4183   .debug_loc:000004a3 .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:651    .text.PP_SlaveResponseBuilder:0000013c .LBB10
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:663    .text.PP_SlaveResponseBuilder:00000151 .LBE10
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4190   .debug_loc:000004b6 .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:658    .text.PP_SlaveResponseBuilder:00000149 .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:611    .text.PP_SlaveResponseBuilder:000000f9 .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:642    .text.PP_SlaveResponseBuilder:00000132 .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:679    .text.PP_SlaveResponseBuilder:00000167 .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4761   .debug_str:00000a33 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:747    .text.PP_Typ16ToBridgeConv:0000002c .LFE7
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4781   .debug_str:00000ade .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4197   .debug_loc:000004c9 .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4783   .debug_str:00000ae5 .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4209   .debug_loc:000004e8 .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4467   .debug_str:00000142 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4229   .debug_loc:00000516 .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4539   .debug_str:00000341 .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:864    .text.PP_BridgeToTyp16Conv:0000008f .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4240   .debug_loc:00000534 .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4253   .debug_loc:00000554 .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4290   .debug_loc:000005af .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4325   .debug_loc:00000601 .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:843    .text.PP_BridgeToTyp16Conv:0000007b .LBB13
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:853    .text.PP_BridgeToTyp16Conv:00000086 .LBE13
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4341   .debug_loc:0000062b .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4348   .debug_loc:0000063e .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:844    .text.PP_BridgeToTyp16Conv:0000007b .LBB14
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:852    .text.PP_BridgeToTyp16Conv:00000086 .LBE14
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4359   .debug_loc:0000065c .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:848    .text.PP_BridgeToTyp16Conv:00000081 .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:832    .text.PP_BridgeToTyp16Conv:00000070 .LVL75
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4595   .debug_str:0000055c .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4545   .debug_str:0000038a .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4499   .debug_str:00000225 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4623   .debug_str:00000628 .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4795   .debug_str:00000b1f .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4773   .debug_str:00000aa4 .LASF201
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:4715   .debug_str:000008e1 .LASF202
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:12     .text.crc_append:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:10     .text.crc_append:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:23     .text.crc_append:00000014 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:38     .text.PP_SlaveReceiveData.isra.0:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:40     .text.PP_SlaveReceiveData.isra.0:00000005 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:36     .text.PP_SlaveReceiveData.isra.0:00000000 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:47     .text.PP_SlaveReceiveData.isra.0:0000000d .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:55     .text.PP_SlaveReceiveData.isra.0:00000018 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:59     .text.PP_SlaveReceiveData.isra.0:00000023 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:49     .text.PP_SlaveReceiveData.isra.0:00000010 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:95     .text.PP_SlaveNotification:0000000b .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:253    .text.PP_SlaveNotification:000000ff .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:267    .text.PP_GetSlaveState:00000000 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:274    .text.PP_GetSlaveState:0000000e .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:286    .text.PP_IsSlaveStateRxOK:00000002 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:284    .text.PP_IsSlaveStateRxOK:00000000 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:308    .text.PP_IsSlaveStateRxOK:00000031 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:324    .text.PP_IsSlaveStateRxOK:00000046 .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:334    .text.PP_IsSlaveStateRxOK:00000058 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:359    .text.PP_IsSlaveStateRxOK:00000073 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:365    .text.PP_IsSlaveStateRxOK:0000007b .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:389    .text.PP_IsSlaveStateRxOK:0000009c .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:393    .text.PP_IsSlaveStateRxOK:0000009e .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:378    .text.PP_IsSlaveStateRxOK:00000091 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:381    .text.PP_IsSlaveStateRxOK:00000094 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:386    .text.PP_IsSlaveStateRxOK:00000098 .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:288    .text.PP_IsSlaveStateRxOK:00000004 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:318    .text.PP_IsSlaveStateRxOK:00000040 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:355    .text.PP_IsSlaveStateRxOK:00000070 .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:375    .text.PP_IsSlaveStateRxOK:0000008c .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:408    .text.PP_SlaveStartResponse:00000003 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:406    .text.PP_SlaveStartResponse:00000000 .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:412    .text.PP_SlaveStartResponse:00000007 .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:419    .text.PP_SlaveStartResponse:00000013 .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:432    .text.PP_SlaveStartResponse:00000029 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:451    .text.PP_GetRequestLen:00000000 .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:455    .text.PP_GetRequestLen:00000005 .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:460    .text.PP_GetRequestLen:00000010 .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:462    .text.PP_GetRequestLen:00000012 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:464    .text.PP_GetRequestLen:00000014 .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:478    .text.PP_SlaveResponseBuilder:00000002 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:480    .text.PP_SlaveResponseBuilder:00000005 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:476    .text.PP_SlaveResponseBuilder:00000000 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:564    .text.PP_SlaveResponseBuilder:0000009c .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:700    .text.PP_SlaveResponseBuilder:00000186 .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:485    .text.PP_SlaveResponseBuilder:0000000d .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:487    .text.PP_SlaveResponseBuilder:00000010 .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:489    .text.PP_SlaveResponseBuilder:00000013 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:514    .text.PP_SlaveResponseBuilder:00000047 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:566    .text.PP_SlaveResponseBuilder:0000009e .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:574    .text.PP_SlaveResponseBuilder:000000ab .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:576    .text.PP_SlaveResponseBuilder:000000ad .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:631    .text.PP_SlaveResponseBuilder:0000011c .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:688    .text.PP_SlaveResponseBuilder:0000017a .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:554    .text.PP_SlaveResponseBuilder:00000080 .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:649    .text.PP_SlaveResponseBuilder:0000013c .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:671    .text.PP_SlaveResponseBuilder:00000162 .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:715    .text.PP_Typ16ToBridgeConv:00000000 .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:736    .text.PP_Typ16ToBridgeConv:00000020 .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:738    .text.PP_Typ16ToBridgeConv:00000022 .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:741    .text.PP_Typ16ToBridgeConv:00000026 .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:729    .text.PP_Typ16ToBridgeConv:00000014 .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:757    .text.PP_BridgeToTyp16Conv:00000002 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:755    .text.PP_BridgeToTyp16Conv:00000000 .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:770    .text.PP_BridgeToTyp16Conv:00000012 .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:772    .text.PP_BridgeToTyp16Conv:00000014 .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:815    .text.PP_BridgeToTyp16Conv:00000053 .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:837    .text.PP_BridgeToTyp16Conv:00000076 .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:817    .text.PP_BridgeToTyp16Conv:00000056 .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:858    .text.PP_BridgeToTyp16Conv:0000008a .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:797    .text.PP_BridgeToTyp16Conv:0000003e .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:804    .text.PP_BridgeToTyp16Conv:00000046 .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:812    .text.PP_BridgeToTyp16Conv:00000050 .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:842    .text.PP_BridgeToTyp16Conv:0000007b .LVL77
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:856    .text.PP_BridgeToTyp16Conv:00000088 .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:1073   .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:138    .text.PP_SlaveNotification:00000049 .LBB5
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:179    .text.PP_SlaveNotification:00000095 .LBE5
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:181    .text.PP_SlaveNotification:00000095 .LBB6
C:\Users\Andrea\AppData\Local\Temp\ccxAKlYy.s:231    .text.PP_SlaveNotification:000000e1 .LBE6

UNDEFINED SYMBOLS
_OCCRC_Calculate
_BCP_ChannelTable
_ActionComm
_BCM_CountersUpdater
_PP_EosnFunction
_LIB_ChkComputation
_LIB_MemcpyFromLast
