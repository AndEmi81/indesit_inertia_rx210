   1                             		.file	"DW_SuperVisor.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.SPV_resetSensVariablesButDelay,"ax",@progbits
   6                             	_SPV_resetSensVariablesButDelay:
   7                             	.LFB18:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control/DW_SuperVisor.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Copyright (c) 2004-2005, Indesit Company, EDT.
   3:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
   7:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \Par	
   8:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \Header file.
   9:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
  10:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \file    DW_Supervisor.c
  11:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \ingroup DW_Supervisor
  12:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date    08/04/2008
  13:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author  Valeria Catani
  14:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version 1.0.0
  15:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  16:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  17:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \Par		History (titolo)
  18:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  		
  19:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version old version
  20:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date    
  21:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author Marco Quintini 
  22:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \n		
  23:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
  24:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  25:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ******** */
  26:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Includes */
  27:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ******** */
  28:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #include "CstmHeaders.h"
  29:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #include "LIB_ResetExp.h"
  30:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #include "LIB_BackUpExp.h"
  31:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #include "PM_AlternatoExp.h"
  32:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  33:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
  34:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #include "PM_PowerProfileExp.h"
  35:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #include "PM_PowerProfile.h"
  36:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
  37:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
  38:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Defines and Macros */
  39:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
  40:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  41:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /** Bit definition per updateCycleDependentFunctions */
  42:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #define CURRENT_SPV_CALL	0
  43:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #define PREV_SPV_CALL		(CURRENT_SPV_CALL + 1)
  44:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  45:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /** Soluzioni alternative per i cicli di riferimento per le funzioni */
  46:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /*#define SOLUTION_1_FOR_REF_CYCLE*/	/* Nei cicli DELAY, PAUSE ed END la fase indica sempre il cicl
  47:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   avviato. 
  48:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   Il ciclo di riferimento per le tabelle di regolazione rimane
  49:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   sempre il ciclo avviato, anche se interviene un Jump ad un
  50:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   ciclo diverso */
  51:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   
  52:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /*SOLUTION 2 E' COME DEA601 CON UNA PRECISAZIONE SULLA GESTIONE DEL CICLO DI RIFERIMENTO IN PAUSA *
  53:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #define SOLUTION_2_FOR_REF_CYCLE  /* Nei cicli DELAY, PAUSE ed END la fase indica sempre il ciclo
  54:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   avviato. 
  55:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   In caso di Jump ad un ciclo diverso da quello avviato, il 
  56:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   ciclo di riferimento per le funzioni diventa il nuovo ciclo.
  57:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  									   Questo vale anche per il ciclo PAUSE, mentre in END il ciclo
  58:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  									   di riferimento torna ad essere il ciclo avviato (=> possibile
  59:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  									   incoerenza nella transizione RUN->END!!) */
  60:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /*#define SOLUTION_3_FOR_REF_CYCLE*/ /* Nei cicli DELAY, PAUSE ed END la fase indica rispettivament
  61:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   il ciclo che partir�, che � stato interrotto, che � terminato.
  62:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   In PAUSE ed END la fase potrebbe differire dal ciclo avviato
  63:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   nel caso di Jump ad un ciclo diverso.
  64:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   In caso di Jump ad un ciclo diverso da quello avviato, il
  65:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  									   il ciclo di riferimento per le funzioni diventa il nuovo
  66:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  									   ciclo, e questo vale anche per PAUSE ed END */
  67:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  68:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #define APP_REGULATIONS_BITMAP_SIZEOF    ((NUM_REG_MAX%8)!=0?1:0)+(NUM_REG_MAX/8)
  69:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  70:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* *************************** */
  71:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Typedef, Structs and Unions */
  72:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* *************************** */
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  74:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* **************************** */
  75:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Prototype of local functions */
  76:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* **************************** */
  77:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_updateCycleLabel(void);
  78:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_saveIntptState(Interpreter_Struct *pDestinationBuffer);
  79:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_restoreIntptState(const Interpreter_Struct *pSourceBuffer);
  80:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_stopMicroprogVars(void);
  81:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static bool_t SPV_testCycleLabel(uint8_t cycle, uint8_t completeLabel);
  82:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static bool_t SPV_testRefCycleLabel(uint8_t completeLabel);
  83:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static bool_t SPV_isCycleWithLabelRunning(uint8_t completeLabel);
  84:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_manageDelayCounters(void);
  85:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_resetSensVariablesButDelay(void);
  86:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_startCycleInit(void);
  87:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_endCycleResetVars(void);
  88:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_startCycle(void);
  89:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static uint8_t SPV_updateFunctionValue(uint8_t funcID, uint8_t *funcValue);
  90:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_generateColdReset(void);
  91:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_faultCompleteReset (void);
  92:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_RegulationsMonitor(uint8_t* pOldRegs, uint8_t* pNewRegs);
  93:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SVP_BuildBmpFunctionsActingAsMofifiers(void);
  94:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** PM_PowerProfile_ProfileIndexType SPV_getPowerProfileIndex(uint8_t cycle, uint8_t mSetting);
  95:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
  96:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void Set_UpCounter(uint8_t counterSize, SWTC_CountersType counterId, SWTC_PrescalerType opCode); /*
  97:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_updateTimeToEnd(void);
  98:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_updatePowerProfile(uint8_t oldLabel, uint8_t oldPhaseIndex);
  99:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
 100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Exported variables */
 101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
 102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* **************** */
 104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Global variables */
 105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* **************** */
 106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static bool_t  bRegsChanged = FALSE; /* If 1, will be calculated new parameter for Power Profile */
 108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static uint8_t regBmp[APP_REGULATIONS_BITMAP_SIZEOF];
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static uint8_t maxFuncIndex = 0;
 110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ***************** */
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Exported function */
 114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* ***************** */
 115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
 118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Gestisce le transizioni di stato della macchina.
 119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
 120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global) � la struttura che contiene ciclo, fase, passo ecc.
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		SelectorFunctionValue (global)
 122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out]	
 123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
 124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		none
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
 126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:		
 127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
 128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
 129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			30/05/2006
 130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
 131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
 133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_superVisor(void)
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint16_t tempFuncValue, tempFuncValue2;
 137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t interpreterResult;
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t destinationCycle;
 140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t startFunctionValue;
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t retCode,retCodeAux;
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint16_t tempTotalEnergyEst;	/*Local variable for energy estimation*/
 144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t started_cycle;
 145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H)
 149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t classBCheckTestWD_EndCycle = FALSE;
 150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t  oldLabel;
 154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t  oldPhase;
 155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** PM_PowerProfile_ProfileIndexType index = 1;
 157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint16_t tmpSize;
 159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** PM_PowerProfile_EnergyPhaseType* pFirstEnergyPhase;
 160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if CONFIG_PM_POWER_PROFILE_SUPPORT
 164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Save appliance label of first compartment */
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	oldLabel = Interpreter_Data[0].completeLabel.s.label;
 166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Save appliance phase of first compartment */
 167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	oldPhase = Interpreter_Data[0].phase;
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	bRegsChanged = SPV_RegulationsMonitor(BufOldReg, BufNewReg);
 170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK SELETTORE PROGRAMMI                                                            
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_SELECTOR)) == REG_CHANGED )
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_SELECTOR), &tempFuncValue);
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( (uint8_t)(tempFuncValue) < PHASES_PROGRAMMING_NUM )
 183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SelectorFunctionValue = (uint8_t)(tempFuncValue);
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{
 187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase = SelectorFunctionValue;
 188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));			    
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
 191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				REG_updateOldReg((uint8_t)(FUNC_ID_SELECTOR));
 193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			else
 195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Do nothing (keep BufOldReg[i] unchanged) */
 197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Gestire in modo particolare il valore della funzione (es. valore di default)? �_� */
 202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_SELECTOR));
 204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
 206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (keep BufOldReg[i] unchanged) */
 208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK START REG
 213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
 215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	started_cycle = FALSE;
 217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	  	    
 218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_START)) == REG_CHANGED )
 219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	bool_t rejectedRegulation = FALSE;
 221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_START), &tempFuncValue);
 224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Fixed for validate the last value */
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if ((retCode == S_OK) || (retCode == REG_WRN_OUT_OF_RANGE_INDEX))
 228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #else		/*AE TODO check APP REG_WRN_OUT_OF_RANGE*/
 229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK)
 230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			startFunctionValue = (uint8_t)(tempFuncValue);
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
 234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			switch(startFunctionValue)
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_START_CONDITION:
 237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if(Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/**
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						=============
 242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						 SI PARTE !!
 243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						=============
 244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						*/
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  SPV_startCycle();
 247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  (void)SWTC_Run((SWTC_CountersType)PP_ENPHELAPSEDTIME_UPCOUNTER);
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  (void)SWTC_Run((SWTC_CountersType)PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE )
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  uiSavedEnPhElapsedTime_Counter = 0;
 255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE ) */
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  
 258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  /*DW: Se il ciclo in partenza � SAT (AUTOTEST) va aggiornato il contatore corrispondente (
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  /*upDateNumTimesSAT();*/
 260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  started_cycle = TRUE;
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  cycle_loaded_water = 0;	/*Reset variable water loaded*/
 263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  		
 264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}		
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )
 266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  /** Ripristina lo stato precedente la pausa */
 268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_restoreIntptState(&Paused_Intpt_Data[0]);
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_PARTIAL_INIT));
 270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* timer continue... */
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
 274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if (ApplPowerProfileStatus & PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK)
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						{							
 278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Data
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																							  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_OFF, ApplPowerProfileStatus);
 281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					else
 285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* do nothing */
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					break;
 290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_RESET_CONDITION:
 292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_RESET_FAULT:
 293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					rejectedRegulation = TRUE;	
 295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_PROGRAMMING, &destinationCycle) == S_OK )
 297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == REG_RESET_CONDITION )
 299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						{/* RESET COND : gestita in tutti gli stati (anche in FAULT)*/
 300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/* Reset the counter */
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							/*	StopCounterToZero(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER); */
 304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/*
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								MQ PA TODO Secondo me è corretto come sotto, dato PP_ENPHELAPSEDTIME_UPCOUNTER è usato co
 306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								se fosse un Up Counter
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								*/
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);								
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								SWTC_SetSValue(PP_ENPHELAPSEDTIME_UPCOUNTER, INT8_T_MAX);
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE )
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								uiSavedEnPhElapsedTime_Counter = 0;
 313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE ) */
 314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER))
 315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								{
 316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									/* Disabilitare il TimeBtwPhases_Counter */
 317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Interpreter_Data[0].phase++;
 318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									/* Ripristinare la fase al valore corrente */
 319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								}
 321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							rejectedRegulation = FALSE;	  
 324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == CMPLT_LBL_END )
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							{
 328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H)
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							/* Class B certification */
 330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/*
 331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Se con la RESET_CONDITION si passa da END a
 332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								PROGRAMMING viene richiesto il test del Watchdog
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								*/
 334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								classBCheckTestWD_EndCycle = TRUE;
 335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}
 337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							else{
 340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
 341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								IncWordWithCheck(&MachineStatistics.globalStats.user_cycle_reset);
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}	
 344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == REG_RESET_FAULT )
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						{/* Richiesto RESET di un fault */
 349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							{/* Sono nel ciclo di FAULT  - test superfluo ?*/
 352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								rejectedRegulation = FALSE;
 354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/*
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								La macchina a stati dell'applicazione viene comunque resettata: sia che sia presente un fau
 357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								(da visualizzare o no), sia che la macchina a stati sia in uno stato precedente. In questo 
 358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								rimangano appese eventuali azioni di sicurezza (che magari erano state bloccate dal fault d
 359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								presente).
 360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								*/
 361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								SPV_faultCompleteReset();
 362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/*
 364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Aggiornamento codice globale di fault: in questo modo, se è stato resettato un fault di ap
 365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								si può uscire dallo stato di FAULT direttamente in questa iterazione
 366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								*/
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								FLT_updateGlobalFaultCode();
 368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}
 369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if(rejectedRegulation == FALSE)
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						{
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].cycle = destinationCycle;
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase = SelectorFunctionValue;
 375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							/* Reset di alcune variabili */
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							SPV_resetSensVariablesButDelay();
 379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					else
 382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* 
 384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						La presenza del ciclo di PROGRAMMING viene verificata ad ogni reset
 385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						freddo ed in caso di assenza viene generato il fault file di setting.
 386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Dunque l'unica possibilità di rilevare l'assenza del ciclo durante
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						l'esecuzione del Supervisore è che il file di setting si sia corrotto
 388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						dopo l'ultimo reset freddo.Utilizzo la funzione che mi permette 
 389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						di preservare le statistiche al RESET freddo.					
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						*/
 391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_generateColdReset();
 393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					
 395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					break;
 396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_RESTART_CONDITION:
 398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* 
 399:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				DEA 602 implementa questa regolazione come Arkadia (stesse specifiche) 
 400:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				per eventuali nuove interfacce che la potrebbero utilizzare.
 401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				In DEA 601 non era prevista.
 402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				*/
 403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 404:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Equivale ad una RESET_CONDITION seguita da una START_CONDITION */
 405:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) &&
 407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						(SelectorFunctionValue != StartedCycle) )
 408:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/*
 410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						La REG_RESTART_CONDITION � accettata solo se si è in RUN e se il ciclo
 411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						che si vuole avviare è diverso da quello in corso
 412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						*/
 413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						
 414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* Operazioni da eseguire al RESET di un ciclo */
 415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_resetSensVariablesButDelay();
 416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 417:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/** RESTART CICLO */					
 418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					   	
 419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_startCycle();
 420:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
 424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 425:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	#if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE )
 426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						uiSavedEnPhElapsedTime_Counter = 0;
 427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	#endif /* #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE ) */
 428:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 430:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					else
 431:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						rejectedRegulation = TRUE;
 433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 434:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					
 435:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					break;
 436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 437:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_PAUSE_CONDITION:
 438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Stop timer */
 440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
 441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
 444:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* Disabilitare il TimeBtwPhases_Counter */
 445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase++;
 446:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* Ripristinare la fase al valore corrente */
 447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 448:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
 449:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Data[
 450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																						  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_OFF, ApplPowerProfileStatus);
 451:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 452:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT*/
 453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_ENERGYPAUSE_STATUS == TRUE ) && ( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE )
 454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( TRUE == SPV_goingToSleepManager() )
 455:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 456:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* reset EnergyPause_Status */
 457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						EnergyPause_Status = PP_ENERGYPAUSE_STATUS_NO_PAUSE;
 458:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 459:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #else /* ( PP_ENERGYPAUSE_STATUS == TRUE ) && ( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE ) */
 460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Se il ciclo attivo è di tipo RUN o DELAY si va in PAUSE */
 462:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					(void)SPV_goingToSleepManager();
 463:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 464:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 465:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					break;
 466:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_OVERLOAD_PAUSE_CONDITION:
 468:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					 /*Stop timer*/
 469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
 470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 471:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 472:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	#if ( PP_ENERGYPAUSE_STATUS == TRUE )
 473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( TRUE == SPV_goingToSleepManager() )
 474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
 475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						 /*Lock the door*/
 476:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		#if ( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE )
 477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						EnergyPause_Status &= PP_ENERGYPAUSE_STATUS_PAUSE_OVERLOAD;
 478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		#else  /*( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE )*/
 479:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						EnergyPause_Status = PP_ENERGYPAUSE_STATUS_PAUSE_OVERLOAD;
 480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		#endif  /*( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE )*/
 481:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 482:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	#else  /*( PP_ENERGYPAUSE_STATUS == TRUE )*/
 483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					 /*Se il ciclo attivo è di tipo RUN o DELAY si va in PAUSE*/
 484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					(void)SPV_goingToSleepManager();
 485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	#endif  /*( PP_ENERGYPAUSE_STATUS == TRUE )*/
 486:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					break;
 487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_ENERGY_PHASES_PAUSE_CONDITION:
 488:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					 /*Stop timer*/
 489:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
 490:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if (( Interpreter_Data[0].completeLabel.s.label == LBL_RUN) || (Interpreter_Data[0].completeLa
 493:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						 /*La regolazione ENERGY_PHASE_PAUSE non può essere accettata solo se
 494:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						   il timeout ENERGY_PHASE_PAUSE_TIMEOUT non è scaduto*/
 495:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
 496:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							/* Prima di cambiare stato (ciclo) si deve riportare la fase al valore corrente*/
 497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase++;
 498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 499:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_ENERGYPAUSE_STATUS == TRUE )
 500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if ( TRUE == SPV_goingToSleepManager() )
 501:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							{
 502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/*Lock the door*/
 503:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE )
 504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								EnergyPause_Status &= PP_ENERGYPAUSE_STATUS_PAUSE_EN_PHASES;
 505:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #else  /*( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE )*/
 506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								EnergyPause_Status = PP_ENERGYPAUSE_STATUS_PAUSE_EN_PHASES;
 507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif  /*( PP_MULTIPLE_ENERGYPAUSE_STATUS == TRUE )*/
 508:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}
 509:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #else  /*( PP_ENERGYPAUSE_STATUS == TRUE )*/
 510:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							 Se il ciclo attivo è di tipo RUN o DELAY si va in PAUSE
 511:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           (void)SPV_goingToSleepManager();
 512:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif  /*( PP_ENERGYPAUSE_STATUS == TRUE )*/
 513:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 514:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 515:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					break;
 516:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /*CONFIG_PM_POWER_PROFILE_SUPPORT*/
 517:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				case REG_DONT_CARE:
 518:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				default:
 519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					break;					
 520:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 522:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}		
 523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 524:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Gestire in modo particolare il valore della funzione (es. valore di default)? �_� */
 526:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 527:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
 528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (keep BufOldReg[i] unchanged) */
 530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			rejectedRegulation = TRUE;
 531:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 532:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(rejectedRegulation == FALSE)
 534:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_START));
 536:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 538:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		
 539:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**	Aggiorno l'etichetta del ciclo che potrebbe essere cambiata	*/
 541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 542:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 544:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   /**
 545:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 546:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK DELAY TIMER                                                            
 547:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 548:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 549:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 550:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_HH);
 551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode |= REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_MM);
 552:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 553:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Check Delay Hours */
 555:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (retCode & REG_CHANGED )&& ( (retCode & REG_NOT_EXIST)==0))
 556:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_HH), &tempFuncValue);
 559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode |= REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_MM), &tempFuncValue2);
 560:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( (retCode == S_OK )&& ((retCode & REG_NULL_INDEX)==0))
 561:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			DelayInMinutes = (uint16_t)(tempFuncValue) * 60 + tempFuncValue2; /* aggiornamento delay in ore 
 564:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 565:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Sincronizzazione del contatore secondi */
 566:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_setupDelayCounter();
 567:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
 568:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 569:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 570:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 571:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 573:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 575:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 576:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 577:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
 578:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 579:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (keep BufOldReg[i] unchanged) */
 580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 581:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 582:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 583:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 584:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 585:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 586:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		======================================================================================
 587:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			CHECK ORARIO TIMER
 588:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		======================================================================================
 589:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		*/
 590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged((uint8_t)FUNC_ID_CLOCK_HH);
 591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode |= REG_checkIfChanged((uint8_t)FUNC_ID_CLOCK_MM);
 592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 593:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (retCode & REG_CHANGED )&& ( (retCode & REG_NOT_EXIST)==0))
 594:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_CLOCK_HH), &tempFuncValue);
 596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 597:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockHH = tempFuncValue+1;
 599:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 601:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_CLOCK_HH));
 603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockHH = DUMMY_CLOCK_VALUE;
 604:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 605:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCodeAux = REG_getFunctionValueByID((uint8_t)(FUNC_ID_CLOCK_MM), &tempFuncValue2);
 606:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(retCodeAux == S_OK )
 607:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockMM = tempFuncValue2+1;
 609:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 610:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCodeAux == REG_NULL_INDEX )
 611:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_CLOCK_MM));
 613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockMM = DUMMY_CLOCK_VALUE;
 614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 616:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 618:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 619:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK REG JOIN/LEAVE
 620:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 621:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
 622:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_ENERGY_REMOTE_CONTROL), &Join_Leave_Reg) == S_FALSE)
 623:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 624:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Join_Leave_Reg = JOIN_LEAVE_REG_DFLT_VALUE;
 625:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 626:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 627:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 628:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 629:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK TRANSIZIONI DELAY->RUN, RUN->DELAY                                                         
 631:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 632:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 633:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 634:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) 
 635:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( DelayInMinutes != 0)
 637:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 638:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/** Vai in DELAY */ 
 639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( SPV_searchCycleByLabel(CMPLT_LBL_DELAY, &destinationCycle) == S_OK )
 640:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 641:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
 642:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Numero di partenze ritardate */
 643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				IncWordWithCheck(&MachineStatistics.globalStats.delayedCycles_Num);
 644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 645:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 646:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Imposta Opcode e valore iniziale per Delay_Counter */
 647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SPV_setupDelayCounter();
 648:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				
 649:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/** Cambio stato */
 650:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = StartedCycle;
 652:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));
 653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 654:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 655:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			else
 656:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{/* Recovery case */
 657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				DelayInMinutes = 0;
 658:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}			
 659:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 660:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_DELAY )
 662:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{		
 663:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( DelayInMinutes == 0)
 664:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 665:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/** 
 666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Si Parte 
 667:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			*/
 668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			retCode = REG_getFunctionValueByID((uint16_t)(FUNC_ID_CLOCK_HH), &tempFuncValue);
 669:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if (retCode == S_OK)
 670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 671:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Saving clock at the end of delay */
 672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayHH = tempFuncValue+1;
 673:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 674:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			else
 675:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 676:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* For safety reasons, clockMMEndDelay and
 677:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * clockHHEndDelay are assigned the value DUMMY_CLOCK_VALUE even if I
 678:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * have already brought the value of these variables to this value at
 679:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * the beginning of the cycle*/
 680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayHH = DUMMY_CLOCK_VALUE;
 681:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 682:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			retCodeAux = REG_getFunctionValueByID((uint16_t)(FUNC_ID_CLOCK_MM), &tempFuncValue2);
 683:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( retCodeAux == S_OK )
 684:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayMM = tempFuncValue2+1;
 686:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 687:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			else
 688:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 689:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* For safety reasons, clockMMEndDelay and
 690:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * clockHHEndDelay are assigned the value DUMMY_CLOCK_VALUE even if I
 691:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * have already brought the value of these variables to this value at
 692:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * the beginning of the cycle*/
 693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayMM = DUMMY_CLOCK_VALUE;
 694:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = Interpreter_Data[0].phase;
 697:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
 698:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));									
 699:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 700:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 701:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
 702:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 703:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* do nothing */ 
 704:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 705:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 706:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 707:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**	Aggiorno l'etichetta del ciclo che potrebbe essere cambiata	*/
 708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 709:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 710:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/** Conteggio Delay */
 711:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_manageDelayCounters();
 712:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 713:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 714:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 715:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 716:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		IN ARKADIA: GESTIONE INGRESSO IN PAUSE A CAUSA DEL WARNING PORTA APERTA
 717:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		IN DEA602 PORTA APERTA GESTITA IN MODO AUTONOMO DAI UP E ALGORITMI,
 718:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	  ALCUNI DEVONO CONTINUARE A FUNZIONARE, VEDI SCARICO
 719:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 720:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
 721:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 722:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 723:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 724:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		GESTIONE INGRESSO - PERMANENZA NELLO STATO DI FAULT                                              
 725:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 726:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 727:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 728:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( CurrentFault[0].code != CODE_NO_FAULT )
 729:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 730:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 731:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( Interpreter_Data[0].completeLabel.s.label != LBL_FAULT )
 732:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{ /* sono in uno stato diverso da FAULT : INGRESSO in FAULT */
 733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 734:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/** Ingresso nello stato di FAULT */
 735:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 736:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( SPV_searchCycleByLabel(CMPLT_LBL_FAULT, &destinationCycle) == S_OK )
 737:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 738:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						
 739:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
 740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Aggiornamento statistiche di fine ciclo */
 741:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				STC_updateLastCycleStat_END(1);
 742:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif 			/* _STATISTICS_ON_ */
 743:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 744:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/** Va in FAULT */
 745:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 746:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 747:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Fase: codice di allarme */
 748:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = CurrentFault[0].code;
 749:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 750:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));									
 751:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 752:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].completeLabel.b = CMPLT_LBL_FAULT;
 753:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 754:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/** All'ingresso in FAULT viene resettato comunque il valore del delay + altre variabili */
 755:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SPV_resetSensVariables();
 756:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 757:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			else
 758:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
 759:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/*
 760:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				La presenza del ciclo di FAULT viene verificata ad ogni reset
 761:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				freddo ed in caso di assenza viene generato il fault file di setting.
 762:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Dunque l'unica possibilità di rilevare l'assenza del ciclo durante
 763:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				l'esecuzione del Supervisore è che il file di setting si sia corrotto
 764:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				dopo l'ultimo reset freddo, nel qual caso si presume che interverrebbe
 765:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				comunque la routine di certificazione a forzare un reset freddo.
 766:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				*/
 767:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SPV_generateColdReset();
 768:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}					
 769:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 770:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
 771:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{/* sono già in fault -> controllo se cambia il fault code per cambiare fase*/
 772:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 773:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if ( Interpreter_Data[0].phase != CurrentFault[0].code )
 774:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{/* fase diversa dal fault corrente: è cambiato il codice */
 775:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = CurrentFault[0].code;   /*aggiornamento fase*/
 777:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 778:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));	
 779:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 780:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SPV_resetSensVariables();
 781:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
 782:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 783:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 784:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 785:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 786:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/*
 787:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 788:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		END GESTIONE INGRESSO NELLO STATO DI FAULT                                                       
 789:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 790:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  
 791:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 792:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
 793:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Controllo funzioni utilizzate dall'Interprete 
 794:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */  	
 795:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 796:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 797:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 798:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK CESTO SELEZIONATO                                                             
 799:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 800:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 801:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
 802:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_BASKET), &DishRackFunctionValue) == S_FALSE)
 803:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		DishRackFunctionValue = DISH_RACK_DFLT_VALUE;
 805:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 806:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 807:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 808:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 809:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 810:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK DUREZZA ACQUA PER QUANTITA' ACQUA RIGENERE                                                 
 811:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 812:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 813:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
 814:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_WATER_HARDNESS), &WaterForRegenerate) == S_FALSE)
 815:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 816:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		WaterForRegenerate = REGENERATE_WATER_DFLT_VALUE;
 817:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 818:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 819:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 820:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 821:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK ZONE WASH                                                            
 822:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 823:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 824:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   	/* nota : nel caso di voglia gestire il vecchio tipo di mezzocarico con l'alternato a 6 posizion
 825:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	regolazione e inserire le due tabelle corrispondenti al mezzo carico voluto.*/
 826:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 827:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_ZONE_WASH), &ZoneWashFunctionValue) == S_FALSE)
 828:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 829:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		ZoneWashFunctionValue = ZONE_WASH_DFLT_VALUE;
 830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 831:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 832:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 833:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 834:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CHECK ZONE RINSE AID                                                             
 835:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 836:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 837:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   	/* per rilascio brillantante*/
 838:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 839:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_RINSE_AID), &RinseAidFunctionValue) == S_FALSE)
 840:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 841:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		RinseAidFunctionValue = RINSE_AID_DFLT_VALUE;
 842:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 843:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 844:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 845:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 846:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 847:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CARICAMENTO PUNTATORI PER PARAMETRI FAULT (UTILIZZATI IN UP DRAIN E DW_FAULT)                    
 848:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 849:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
 850:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 851:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Start ciclo di Autotest - va processato qui perch� ho aggiornato la Label */
 852:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if ( started_cycle == TRUE )
 853:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{  
 854:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    if ( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 855:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    {
 856:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	      /* Reset var Autotest, devono essere applicate i parametri Fault per Autotest */
 857:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	      FLT_faultMgmtDataReset();  
 858:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    }
 859:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 860:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 861:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
 862:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (uP_AltCtrl_Data.SV_invalid_4alt == TRUE) || !(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_V
 863:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 864:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=0xFF;
 865:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 866:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
 867:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 868:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WA
 869:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 870:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 871:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     
 872:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if(!(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_DRAIN))) )
 873:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 874:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=0xFF;
 875:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 876:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
 877:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 878:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_D
 879:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
 880:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 881:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
 882:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/**
 883:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	=====================
 884:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 CHIAMATA INTERPRETE 
 885:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	=====================	
 886:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
 887:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	interpreterResult = ITP_programFlowInterpreter();
 888:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
 889:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if((interpreterResult & ERR_CODE) == 0)
 890:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
 891:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/**	Aggiorno l'etichetta del ciclo che potrebbe essere cambiata	(a causa di un JumpIf) */
 892:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_updateCycleLabel();
 893:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 894:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		#ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 895:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* MT TODO: verificare se vanno bene così */
 896:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(Interpreter_Data[0].completeLabel.s.label == LBL_RUN) {
 897:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* MT gives the updated status of the counter to the Platform library */
 898:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			PM_PowerProfile_SetDuration(1, (PM_PowerProfile_DurationType)SWTC_GetElapsedTime(PP_ENPHELAPSEDT
 899:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 900:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			PM_PowerProfile_SetForceReload(1);
 901:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 902:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
 903:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 904:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			PM_PowerProfile_ResetForceReload(1);
 905:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
 906:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 907:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 908:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				
 909:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		switch( interpreterResult )
 910:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
 911:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 912:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case END_PHASE:
 913:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
 914:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 915:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
 916:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 917:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if(Interpreter_Data[0].completeLabel.s.label == LBL_RUN) {
 918:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Modifica per la gestione Delay tra le Fasi Energetiche */
 919:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
 920:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if (SWTC_IsExpired(PP_TIMEBTWPHASES_COUNTER)) {
 921:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							/* Timer esaurito e la ENERGY_PHASE_PAUSE non è stata ricevuta
 922:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								--> la fase ritorna quella corrente. */
 923:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase++;
 924:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 925:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Data
 926:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																							  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_OFF, ApplPowerProfileStatus);
 927:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 928:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if (( MAINTAIN_LOADS_AFTER_PHASE == TRUE ) && defined(CONFIG_PM_POWER_PROFILE_SUPPORT))
 929:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 930:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/*else*/
 931:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* Always mantain loads if TimeBtwPhases_Counter is enabled */
 932:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						{
 933:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							#if (MULTI_COMPARTMENT_APPL == 1)
 934:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ITP_loadsMgmt(compartment);
 935:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							#else
 936:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ITP_loadsMgmt();
 937:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							#endif
 938:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 939:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* #if (( MAINTAIN_LOADS_AFTER_PHASE == TRUE ) && defined(CONFIG_PM_POWER_PROFILE_SUPPORT)) 
 940:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 941:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					else {
 942:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						bool_t newEnergyPhase = FALSE;
 943:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						uint16_t maxActivationDelay = 0x0000;
 944:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 945:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* La nuova fase funzionale è l'inizio di una nuova fase energetica?  */
 946:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if (PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
 947:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										(/*powerProfileID*/ 1,
 948:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										 /*PM_PowerProfile_ProfileIndex*/ index,
 949:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										 /*cycle Interpreter_Data[0].cycle,*/
 950:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										 /*functionalPhase*/Interpreter_Data[0].phase,
 951:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										 /*mSetting*/Interpreter_Data[0].mSetting,
 952:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										 /*pNewEnergyPhase*/&newEnergyPhase,
 953:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										 /*pMaxActivationDelay*/&maxActivationDelay) != POWER_PROFILE_NO_ERR)
 954:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						{
 955:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							;/* ERROR */
 956:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 957:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						else {
 958:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if (newEnergyPhase == TRUE) {
 959:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/* Start del Timer per contare il tempo trascorso nella fase energetica corrente */
 960:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 961:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 962:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 963:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	              				SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
 964:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	              				SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 965:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE )
 966:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								uiSavedEnPhElapsedTime_Counter = 0;
 967:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE ) */
 968:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 969:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 970:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								if (maxActivationDelay != 0) {
 971:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Da
 972:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																									  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_ON, ApplPowerProfileStatus);
 973:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									/* Si forza la fase alla fase precedente per continuare con la visualizzazione
 974:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									   precedente e inizializzo timer tra le fasi */
 975:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Interpreter_Data[0].phase--;
 976:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									/* Start del Timer per la finestra temporale di accettazione comand EnergyPhasePause */
 977:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Set_UpCounter(SHORT_COUNTER, PP_TIMEBTWPHASES_COUNTER, COUNTERS2_TBASE_1MIN); /*AE TODO ve
 978:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									SWTC_Run(PP_TIMEBTWPHASES_COUNTER);
 979:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								}
 980:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								else {
 981:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Da
 982:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																									  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_OFF, ApplPowerProfileStatus)
 983:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								}
 984:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}
 985:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
 986:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
 987:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
 988:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				else
 989:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #else /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 990:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				
 991:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/*In RUN e FAULT non posso reinizializzare la fase. In RUN il ciclo procede con la fase success
 992:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  in FAULT il comportamento viene imposto da setting */
 993:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if( (Interpreter_Data[0].completeLabel.s.label != LBL_RUN) && (Interpreter_Data[0].completeLabe
 994:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
 995:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{
 996:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
 997:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/** Nei cicli sa
 998:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						fase, che va ogni volta reinizialinon di RUN e non di FAULT l'Interprete deve ciclare sempre 
 999:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							
1000:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase --;
1001:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));									
1002:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
1003:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1004:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
1005:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1006:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case END_CYCLE:
1007:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case END_CYCLE_RESET:
1008:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/** Ciclo terminato naturalmente (include anche il caso di ultima fase del
1009:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					ciclo terminata) o incontrata una condizione di reset ciclo. */
1010:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label != LBL_RUN )
1011:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{		
1012:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  if (Interpreter_Data[0].completeLabel.s.label != LBL_FAULT)
1013:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  {
1014:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   					/** Nei cicli non di RUN e non di FAULT l'Interprete deve ciclare sempre sulla stessa
1015:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   						fase, che va ogni volta reinizializzata */
1016:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   					ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));
1017:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  }
1018:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  
1019:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  /* else : nel caso di FAULT non modifico nulla (non si dovrebbe mai verificare) */ 
1020:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
1021:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				else
1022:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{/* RUN -> END */
1023:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					
1024:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_END, &destinationCycle) == S_OK )
1025:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
1026:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
1027:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* Aggiornamento statistiche di fine ciclo */
1028:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						STC_updateLastCycleStat_END(0);
1029:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* _STATISTICS_ON_ */
1030:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****              															 
1031:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			            /* cancellazione Last Fault in END Autotest */  
1032:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			            if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
1033:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			            {
1034:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			                FLT_lastFaultUpdate(No_Fault, &MachineStatistics.lastFault[0]);
1035:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			            }
1036:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1037:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_1_FOR_REF_CYCLE) || defined(SOLUTION_2_FOR_REF_CYCLE)
1038:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1039:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = StartedCycle;
1040:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1041:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_3_FOR_REF_CYCLE)
1042:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1043:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = Interpreter_Data[0].cycle;
1044:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1045:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
1046:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1047:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].cycle = destinationCycle;
1048:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));										
1049:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1050:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_END;
1051:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							    
1052:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			            SPV_endCycleResetVars();
1053:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1054:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_2_FOR_REF_CYCLE)
1055:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1056:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif						
1057:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
1058:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					else
1059:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					{
1060:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* 
1061:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						La presenza del ciclo di END viene verificata ad ogni reset
1062:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						freddo ed in caso di assenza viene generato il fault file di setting.
1063:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Dunque l'unica possibilità di rilevare l'assenza del ciclo durante
1064:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						l'esecuzione del Supervisore è che il file di setting si sia corrotto
1065:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						dopo l'ultimo reset freddo. Utilizzo la funzione che mi permette di 
1066:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						preservare le statistiche al reset freddo.
1067:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						*/
1068:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  
1069:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_generateColdReset(); /*ForceColdReset();*/
1070:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
1071:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						
1072:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
1073:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
1074:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Reset counter */
1075:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	      /*  StopCounterToZero(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER); */
1076:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	      /*  StopCounterToZero(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER); */
1077:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/*
1078:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MQ PA TODO Secondo me è corretto come sotto, dato PP_ENPHELAPSEDTIME_UPCOUNTER è usato come
1079:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				se fosse un Up Counter
1080:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				*/
1081:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
1082:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
1083:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         SWTC_SetSValue(PP_ENPHELAPSEDTIME_UPCOUNTER, INT8_T_MAX);
1084:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1085:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE )
1086:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				uiSavedEnPhElapsedTime_Counter = 0;
1087:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE ) */
1088:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */		
1089:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
1090:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
1091:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case PROGRAM_FLOW_BREAK:
1092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* JumpIf */
1093:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
1094:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1095:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Controlla che il JumpIF sia verso un mSetting/Ciclo/Fase
1096:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * diverso da quello di origine. Nel caso contrario non devono
1097:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 * essere agggiornate le informazioni riguardo l'APP
1098:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				 */
1099:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if (( bkp_CompItpDataCycle == Interpreter_Data[0].cycle ) &&
1100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					( bkp_CompItpDataPhase == Interpreter_Data[0].phase ) &&
1101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					( bkp_CompItpDatamSetting == Interpreter_Data[0].mSetting ))
1102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{
1103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Do nothing */
1104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
1105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				else
1106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{
1107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
1108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if(Interpreter_Data[0].completeLabel.s.label == LBL_RUN) {
1110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						/* Modifica per la gestione Delay tra le Fasi Energetiche */
1111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
1112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if (SWTC_IsExpired(PP_TIMEBTWPHASES_COUNTER)) {
1113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								/* Timer esaurito e la ENERGY_PHASE_PAUSE non è stata ricevuta
1114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								   --> la fase ritorna quella corrente. */
1115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Interpreter_Data[0].phase++;
1116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
1117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Dat
1118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																								  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_OFF, ApplPowerProfileStatus);
1119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}
1120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
1121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						else {
1122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							bool_t newEnergyPhase;
1123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							uint16_t maxActivationDelay;
1124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							/* La nuova fase funzionale è l'inizio di una nuova fase energetica?  */
1126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if (PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
1127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						(/*powerProfileID*/ 1,
1128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						 /*PM_PowerProfile_ProfileIndex*/ index,
1129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						 /*cycle Interpreter_Data[0].cycle,*/
1130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 											 /*functionalPhase*/Interpreter_Data[0].phase,
1131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 											 /*mSetting*/Interpreter_Data[0].mSetting,
1132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 											 /*pNewEnergyPhase*/&newEnergyPhase,
1133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 											 /*pMaxActivationDelay*/&maxActivationDelay) != POWER_PROFILE_NO_ERR)
1134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							{
1135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								;/* ERROR */
1136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}
1137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							else {
1138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								if (newEnergyPhase == TRUE) {
1139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									/* Start del Timer per contare il tempo trascorso nella fase energetica corrente */
1140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
1141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN)
1142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
1143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								    SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
1144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE )
1145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									uiSavedEnPhElapsedTime_Counter = 0;
1146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* #if ( PP_SAVE_ELAPSED_POWERPHASE_COUNTER == TRUE ) */
1147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									if (maxActivationDelay != 0) {
1150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_D
1151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																										  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_ON, ApplPowerProfileStatus)
1152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										/* Si forza la fase alla fase precedente per continuare con la visualizzazione
1153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										   precedente e inizializzo timer tra le fasi */
1154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].cycle = bkp_CompItpDataCycle;
1155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].phase = bkp_CompItpDataPhase;
1156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].mSetting= bkp_CompItpDatamSetting;
1157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].first_statement = bkp_CompItpDataFirstStatement;
1158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										/*Set_DownCounter(SHORT_COUNTER, PP_TIMEBTWPHASES_COUNTER, (uint8_t)COUNTERS2_TBASE_1SEC,
1159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										SWTC_Run(PP_TIMEBTWPHASES_COUNTER);
1160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									}
1161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									else {
1162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_D
1163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 																										  FALSE, POWER_PROFILE_PHASE_DELAY_TRANSITION_OFF, ApplPowerProfileStatus
1164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									}
1165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								}
1166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							}
1167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						}
1168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					}
1169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
1170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
1171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;		
1173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case END_STEP:
1175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/** Nothing to do */
1176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case SAME_STEP:
1178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Nothing to do */
1179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
1180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			default:
1181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;		
1183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* Resettare o dichiarare il fault file di setting? �_� */
1189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_generateColdReset();
1190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}					
1191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
1194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/** Aggiornamento statistiche legate allo stato */
1195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	STC_superVisorUpdateStatistics();
1196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
1197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/*
1200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
1201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		THE LAST BUT NOT THE LEAST
1202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
1203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
1204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Aggiorna BufOldReg[i] per le regolazioni 'To Main' non esplicitamente processate in preceden
1206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     REG_updateFuncToMainOldReg();
1207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     
1208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Aggiorna BufOldReg per le regolazioni non 'To Main' */
1209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	memcpy(&BufOldReg[FUNC_NUM_TO_MAIN], &BufNewReg[FUNC_NUM_TO_MAIN], (uint8_t)(FUNC_NUM_ALL - FUNC_N
1210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H)
1215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (classBCheckTestWD_EndCycle == TRUE)
1217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Set_SkipWD();
1219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H) */
1222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if ( PP_ENERGYPAUSE_STATUS == TRUE)
1224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
1225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    || ( Interpreter_Data[0].completeLabel.s.label == LBL_DELAY )
1226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    || ( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
1227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    || ( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
1228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    || ( Interpreter_Data[0].completeLabel.s.label == LBL_END )
1229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	)
1230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		EnergyPause_Status=PP_ENERGYPAUSE_STATUS_NO_PAUSE;
1232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* ( PP_ENERGYPAUSE_STATUS == TRUE) */
1234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
1236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_updatePowerProfile(oldLabel, oldPhase);
1237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_updateTimeToEnd();
1239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
1240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }/*end supervisor*/
1242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Ricerca l'intestazione del ciclo Interpreter_Data[0].cycle e ne memorizza l'etichetta in
1248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Interpreter_Data[0].completeLabel.
1249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in/out] Interpreter_Data[0] (global)
1251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		none
1253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			le Label sono	-LBL_PROGRAMMING
1255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								-LBL_RUN
1256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								-LBL_DELAY
1257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								-LBL_END
1258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								-LBL_PAUSE
1259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								-LBL_FAULT
1260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				In caso di incoerenza nell'intestazione del ciclo viene autogenerato un 
1261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				reset freddo
1262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.2.0
1264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			15/05/2007
1265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_updateCycleLabel(void)
1268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** const uint8_t *pCycleHeader;
1270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(Interpreter_Data[0].cycle, &pCycleHeader) == S_OK)
1272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Interpreter_Data[0].completeLabel.b = ( OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABE
1274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* Dati incoerenti nell'intestazione del ciclo, viene autogenerato un reset freddo */
1278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_generateColdReset();
1279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Inizializza un puntatore all'intestazione del ciclo Cycle.
1284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Cycle è il ciclo di cui si ricerca l'intestazione
1286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	pCycleHeading punta all'intestazione del ciclo
1287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		S_OK se la funzione è stata eseguita correttamente, un codice d'errore altrimenti..
1289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:
1291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			31/05/2006
1294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_getCycleHeaderPtr(uint8_t cycle, const uint8_t **pCycleHeading)
1297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Loader_Struct prgHeader;
1299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		
1301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( BasicLoader((uint16_t) PTR_PROGRAM_HEADING, cycle, &prgHeader ) != S_OK )
1302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_BASIC_LOADER; 
1304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( prgHeader.DataLenght < PROGRAM_HEADING_ITEM_SIZE )
1306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/*In dea 700 è != io metto minore tanto i cicli normali hanno due mentre app a 4 come header del 
1307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_PRG_HEADING_SIZE; 
1309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*pCycleHeading = prgHeader.Data;
1312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return S_OK; 
1314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Restituisce il primo ciclo nella cui intestazione compare l'etichetta completeLabel.
1318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel è l'etichetta (label+subLabel) che viene cercata nelle intestazioni
1320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				dei cicli.
1321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	*pCycle è il ciclo che ha la completeLabel specificata.
1322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		S_OK se il ciclo viene trovato, SPV_WRN_LABEL_NOT_FOUND se la funzione NON
1324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				è stata eseguita correttamente o se non è presente alcun ciclo con la
1325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				completeLabel specificata.
1326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			non invertire il ciclo for per ottimizzare, non restituirebbe più il primo
1328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ciclo ma l'ultimo.
1329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.1.0
1331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			15/05/2007
1332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_searchCycleByLabel(uint8_t completeLabel, uint8_t *pCycle)
1335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t i;
1337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
1339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{		
1340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(SPV_testCycleLabel(i, completeLabel) == TRUE)
1341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
1342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    	*pCycle = i;
1343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    	return S_OK; 	
1344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return SPV_WRN_LABEL_NOT_FOUND; 
1348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Restituisce il ciclo di riferimento per il calcolo del valore di una funzione.
1352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global)
1354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		il ciclo di riferimento.
1356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:
1358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			06/06/2006
1361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_getRefCycleForFuncValue(void)
1364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {		
1365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_1_FOR_REF_CYCLE)
1366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
1368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* Potrebbe differire dal ciclo in caso di Jump ad un ciclo diverso da quello di partenza. */
1370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (StartedCycle);
1371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
1373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
1375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* PROGRAMMING, DELAY, PAUSE, END. In DELAY, PAUSE ed END coincide con StartedCycle */
1379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
1380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_2_FOR_REF_CYCLE)		/* come DEA601 con precisazione per PAUSE */
1383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
1385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* In RUN potrebbe differire dal ciclo di partenza in caso di Jump ad un ciclo diverso. */
1387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
1388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )                                 
1390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{/* questa precisazione non è presente in DEA601, ma è corretto farla */
1391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(Paused_Intpt_Data[0].completeLabel.s.label == LBL_RUN)
1392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
1393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Pausa da RUN */
1394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Potrebbe differire dalla fase se la pausa interviene quando è in esecuzione un ciclo
1395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			   diverso da quello di partenza (a causa di un Jump a ciclo). */
1396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			return (Paused_Intpt_Data[0].cycle);
1397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
1399:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
1400:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Pausa da DELAY */
1401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			return (Paused_Intpt_Data[0].phase);
1402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1404:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1405:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* PROGRAMMING, DELAY, END */
1407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* In effetti, nel passaggio RUN->END si potrebbe introdurre una discontinuità nel ciclo di
1408:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		   riferimento se il ciclo di RUN che termina, a causa di un Jump a ciclo, è diverso da
1409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		   quello di partenza */
1410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
1411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_3_FOR_REF_CYCLE)
1414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
1416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1417:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* In RUN potrebbe differire dal ciclo di partenza in caso di Jump ad un ciclo diverso. */
1418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
1419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1420:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* PROGRAMMING, DELAY, PAUSE, END */
1423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
1424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1425:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif	/* SOLUTION_X_FOR_REF_CYCLE */	
1427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1428:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1430:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* *************** */
1431:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* Local Functions */
1432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /* *************** */
1433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1434:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1435:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Salva lo stato corrente dell'Interpreter nella struttura specificata.
1436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1437:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global)
1438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		*pDestinationBuffer è la struttura destinazione in cui salvare lo stato
1439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		none
1441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:
1443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1444:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			19/06/2006
1446:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1448:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_saveIntptState(Interpreter_Struct *pDestinationBuffer)
1449:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*pDestinationBuffer = Interpreter_Data[0];
1451:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1452:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* salva la struttura del JumpIF valido per Fase del ciclo di provenienza */
1453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Paused_JmpPhase[0] =  JmpPhase[0];
1454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1455:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1456:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Ripristina lo stato corrente dell'Interpreter copiandolo dalla struttura specificata.
1458:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1459:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global)
1460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		*pSourceBuffer � la struttura sorgente da cui copiare lo stato
1461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1462:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		none
1463:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1464:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:
1465:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1466:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			19/06/2006
1468:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_restoreIntptState(const Interpreter_Struct *pSourceBuffer)
1471:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1472:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0] = *pSourceBuffer;
1473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* ripristina la struttura del JumpIF valido per Fase del ciclo di provenienza */
1475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	JmpPhase[0] = Paused_JmpPhase[0];
1476:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* per preservare il JumpIF valido per fase se presente */
1478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].jumpIF_phase_ctrl = 1;
1479:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }	
1480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				
1481:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1482:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Arresta i contatori usati nei microprogrammi in corrispondenza di una PAUSE_CONDITION.
1483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		
1485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****  
1486:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		
1487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1488:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:
1489:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1490:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date 			16/04/2008
1492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
1493:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1494:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_stopMicroprogVars(void)
1495:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1496:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   StopMicroprogCounters();
1498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
1499:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   /*uP Alternato */
1500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if (uP_AltCtrl_Data.step == ALT_CTRL_WAIT_ALTPOS_EXE)
1501:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
1502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* posizionamento del motorino alternato in corso re-inizializzare la procedura */
1503:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     uP_AltCtrl_Data.step= ALT_CTRL_BEGIN;
1504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
1505:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
1506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   /*uP Sparkling Aid*/
1507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if( (uP_SparklingAid_Data.step== SPRKLING_T1 ) || (uP_SparklingAid_Data.step == SPRKLING_T2) )
1508:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
1509:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     uP_SparklingAid_Data.cmd.RepeatTurbRead = TRUE;
1510:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     
1511:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
1512:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1513:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1514:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1515:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1516:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1517:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Imposta il contatore per il delay, distinguendo i casi di DEMO attiva e no.
1518:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Il valore del timer viene posto a 0.
1519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1520:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	SPV_DELAY_TIMER_S_COUNTER(global)
1521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1522:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			none 
1523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1524:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author 		Valeria Catani
1525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			02/07/2008
1526:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1527:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_setupDelayCounter(void)
1529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
1531:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1532:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		
1533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
1534:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1536:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		
1538:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
1539:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
1542:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1544:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Gestisce i contatori utilizzati per il Delay e aggiorna le variabili relative 
1545:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** alla gestione del delay
1546:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1547:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		Delay(global)
1548:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		SPV_DELAY_TIMER_S_COUNTER (global)
1549:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 
1550:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return 		none
1551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \warning		none
1552:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1553:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
1554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1555:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
1556:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		02/07/2008
1557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1560:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_manageDelayCounters(void)
1561:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** { 
1562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
1563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	((Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE) && (Paused_Intpt_Data[0].completeLabel.s
1564:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1565:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* Il delay scorre in DELAY e in PAUSE da DELAY, indipendentemente dallo stato della porta */
1566:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1567:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SWTC_Run((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
1568:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1569:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1570:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1571:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
1572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1573:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER))
1575:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1576:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* One minute elapsed */
1577:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1578:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( DelayInMinutes )
1579:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
1580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			DelayInMinutes --;
1581:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_setupDelayCounter();
1582:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1583:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
1584:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{/* Hours = 0; Minutes = 0; */
1585:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1586:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				(void)SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
1587:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1588:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1589:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
1592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
1593:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1594:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Verifica se la label del ciclo cycle coincide con completeLabel.
1596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1597:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	cycle è il ciclo di cui si vuole verificare la label.
1598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel è la label completa (label+sublabel) con cui confrontare
1599:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				quella del ciclo cycle.
1600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1601:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se la label coincide, FALSE se non coincide o in caso di errore nella
1602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ricerca dell'intestazione del ciclo.
1603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1604:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1605:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			15/05/2007
1606:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1607:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static bool_t SPV_testCycleLabel(uint8_t cycle, uint8_t completeLabel)
1609:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1610:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** const uint8_t *pCycleHeader;
1611:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(cycle, &pCycleHeader) == S_OK )
1613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( (OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABEL_MASK|CYCLE_LABEL_MASK)) == comple
1615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
1616:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			return TRUE;
1617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1618:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1619:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1620:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return FALSE;
1621:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1622:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1623:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1624:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Verifica se la label del ciclo di riferimento (che in generale non è Interpreter_Data[0].cycle,
1625:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** ad esempio in PROGRAMMING, DELAY, PAUSE, END è Interpreter_Data[0].phase) coincide con
1626:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** completeLabel.
1627:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1628:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel è la label completa (label+sublabel) con cui confrontare
1629:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				quella del ciclo di riferimento.
1630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1631:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se la label coincide, FALSE se non coincide o in caso di errore nella
1632:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ricerca dell'intestazione del ciclo.
1633:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1634:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1635:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			15/05/2007
1636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.1.0
1637:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1638:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static bool_t SPV_testRefCycleLabel(uint8_t completeLabel)
1639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1640:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t refCycle;
1641:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /*const uint8_t *pCycleHeader;*/
1642:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	refCycle = SPV_getRefCycleForFuncValue();
1644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1645:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if(SPV_testCycleLabel(refCycle, completeLabel) == TRUE)
1646:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
1648:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1649:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1650:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return FALSE;
1651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1652:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1654:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Verifica se c'è un ciclo in corso (ovvero se lo stato è RUN, PAUSE o DELAY).
1655:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1656:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1658:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se c'è un ciclo in corso, FALSE altrimenti
1659:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1660:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			  18/06/2007
1662:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1663:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1664:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isCycleRunning(void)
1665:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) ||
1667:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
1668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE) )
1669:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
1671:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1673:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1674:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return FALSE;
1675:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1676:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1677:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1678:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1679:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Verifica se è in corso (ovvero se è in RUN, PAUSE o DELAY) il ciclo che ha come
1680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** etichetta completa completeLabel.
1681:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1682:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel è l'etichetta completa (label+sublabel) del ciclo
1683:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				da controllare
1684:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1686:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se c'è il ciclo in corso, FALSE altrimenti
1687:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1688:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1689:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			31/07/2007
1690:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1691:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1692:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static bool_t SPV_isCycleWithLabelRunning(uint8_t completeLabel)
1693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1694:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (SPV_testRefCycleLabel(completeLabel) == TRUE) && 
1696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(SPV_isCycleRunning() == TRUE ) )
1697:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1698:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
1699:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1700:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1701:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1702:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return FALSE;
1703:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1704:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1705:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1706:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1707:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1709:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1710:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Verifica è in corso il ciclo di Autotest (controllando anche se è in DELAY o in PAUSE).
1711:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1712:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1713:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1714:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se è in corso il ciclo di Autotest, FALSE altrimenti
1715:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1716:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1717:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			16/05/2007
1718:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1719:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1720:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isAutotestRunning(void)
1721:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1722:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return (SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST));
1723:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1724:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1725:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1726:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Verifica è in corso il ciclo di Autotest o di Collaudo 
1727:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** (controllando anche se è in DELAY o in PAUSE -> PER "COMPLETEZZA").
1728:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1729:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1730:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1731:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se è in corso il ciclo di Autotest (o Collaudo), FALSE altrimenti
1732:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author 		Valeria Catani (Marco Quintini)
1734:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			  24/09/2008
1735:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1736:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1737:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isAutotestOrTestRunning(void)
1738:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1739:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
1741:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	         SPV_isCycleWithLabelRunning(CMPLT_LBL_COLLAUDO) );        
1742:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1743:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1744:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1745:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1746:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1747:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1748:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Processa i comandi di attivazione dei cicli di COLLAUDO e AUTOTEST da remoto.
1749:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1750:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in,out]	ExternalRequest (global) è la modalità speciale di funzionamento richiesta
1751:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in,out] InterpreterRefData (global)
1752:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] ApplicationState (global)
1753:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 
1754:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
1755:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1756:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
1757:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1758:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini,Roberto Fioravanti
1759:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		23/09/2008
1760:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.1
1761:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1762:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1763:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_manageRequestFromRemote( void )
1764:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1765:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t requestedCycleCompleteLabel;
1766:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t destinationCycle;
1767:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     
1768:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1769:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Aggiornamento ApplicationState */
1770:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
1771:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{		
1772:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SETBIT(ApplicationState, AS_AUTOTEST_ON_BIT);	  
1773:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1774:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1775:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    CLRBIT(ApplicationState, AS_AUTOTEST_ON_BIT);
1777:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1778:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1779:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_COLLAUDO )
1780:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1781:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    SETBIT(ApplicationState, AS_COLLAUDO_ON_BIT);	
1782:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1783:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1784:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1785:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CLRBIT(ApplicationState, AS_COLLAUDO_ON_BIT);		    
1786:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1787:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     
1788:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* ExternalRequest processing */
1789:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ExternalRequest == SYSTEM_NORMAL_AUTOTEST_MODE )
1790:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1791:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_AUTOTEST;
1792:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1793:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( ExternalRequest == SYSTEM_NORMAL_COLLAUDO_MODE )
1794:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1795:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_COLLAUDO;				
1796:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1797:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1798:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{	    
1799:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return;
1800:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1801:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1802:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/** AUTOTEST e COLLAUDO sono avviabili solo da PROGRAMMING e da END. In
1803:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		altre condizioni eventuali richieste di attivazione sono annullate */
1804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if((Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING) || (Interpreter_Data[0].complete
1805:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1806:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(requestedCycleCompleteLabel, &destinationCycle) == S_OK )
1807:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
1808:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			StartedCycle = destinationCycle;
1809:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = destinationCycle;
1810:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
1811:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1812:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
1813:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									  
1814:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_startCycleInit();
1815:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1816:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Aggiorno la label come ultimo passo, così in caso di reset caldo posso
1817:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			   riprocessare la richiesta */
1818:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].completeLabel.b = requestedCycleCompleteLabel;
1819:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1820:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
1821:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
1822:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing */
1823:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1824:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1825:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
1826:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1827:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* Do nothing */
1828:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}			
1829:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ExternalRequest = 0;
1831:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1832:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1833:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1834:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1835:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Gestisce il passaggio DELAY/RUN --> PAUSE.
1836:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1837:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in,out]	InterpreterRefData (global)
1838:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Paused_Intpt_Data (global)
1839:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 
1840:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	TRUE se il ciclo di partenza è RUN o DELAY ed il ciclo PAUSE esiste, FALSE altrimenti
1841:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1842:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
1843:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1844:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1845:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		10/10/2006
1846:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1847:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1848:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1849:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_goingToSleepManager(void)
1850:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1851:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t destinationCycle;
1852:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1853:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
1854:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1855:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* Passa al ciclo PAUSE */
1856:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1857:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(CMPLT_LBL_PAUSE, &destinationCycle) == S_OK )
1858:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{   
1859:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_stopMicroprogVars();
1860:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
1861:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/** Salva lo stato corrente */
1862:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_saveIntptState(&Paused_Intpt_Data[0]);
1863:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1864:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_1_FOR_REF_CYCLE) || defined(SOLUTION_2_FOR_REF_CYCLE)
1865:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1866:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = StartedCycle;
1867:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		                                        
1868:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		  
1869:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_3_FOR_REF_CYCLE)
1870:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1871:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
1872:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{	
1873:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/** Interrotto un ciclo RUN */
1874:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = Interpreter_Data[0].cycle;
1875:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
1876:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			else
1877:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{	
1878:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/** Interrotto un ciclo DELAY */
1879:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Non faccio niente, la fase rimane la stessa */
1880:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
1881:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
1882:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].cycle = destinationCycle;
1883:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1884:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));													
1885:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1886:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_PAUSE;
1887:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		
1888:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			return (TRUE);
1889:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
1890:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1891:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1892:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1893:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return (FALSE);
1894:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1895:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
1896:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1897:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1898:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1899:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1900:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Resetta alcune variabili sensibili del Supervisor in coincidenza di una 
1901:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** RESET CONDITION o di una REG_RESTART_CONDITION.
1902:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1903:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Flag_levTOtimeRef_update (global)
1904:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 
1905:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
1906:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1907:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
1908:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1909:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1910:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		27/11/2006
1911:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1912:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1913:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1914:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1915:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_resetSensVariablesButDelay(void)
1916:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
   9                             		.loc 1 1916 0
1917:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   Flag_levTOtimeRef_update = FALSE;
  10                             		.loc 1 1917 0
  11 0000 FB E2 00 00 00 00       		mov.L	#_Flag_levTOtimeRef_update, r14
  12 0006 F8 E6 00                		mov.L	#0, [r14]
1918:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
1919:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   /* disabilitazione timeout di caricamento */
1920:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;
  13                             		.loc 1 1920 0
  14 0009 FB E2 00 00 00 00       		mov.L	#_FltLoadToutData, r14
  15 000f CC E4                   		mov.B	[r14], r4
  16 0011 75 24 80                		and #0xffffff80, r4
  17 0014 C3 E4                   		mov.B	r4, [r14]
1921:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1922:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   /* reset warning H2O */
1923:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   FltWarning.load = FALSE; 	 
  18                             		.loc 1 1923 0
  19 0016 FB E2 00 00 00 00       		mov.L	#_FltWarning, r14
  20 001c DC E4                   		mov.W	[r14], r4
  21 001e 7A 04                   		bclr	#0, r4
  22 0020 D3 E4                   		mov.W	r4, [r14]
1924:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
1925:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   /* Reset variabili ActivateAlgorithm */
1926:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
  23                             		.loc 1 1926 0
  24 0022 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r14
  25 0028 F8 E4 00                		mov.B	#0, [r14]
1927:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp [0]= 0;
  26                             		.loc 1 1927 0
  27 002b FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
  28 0031 F8 E4 00                		mov.B	#0, [r14]
1928:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1929:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
  29                             		.loc 1 1929 0
  30 0034 FB E2 00 00 00 00       		mov.L	#_Flags_2, r14
  31 003a CC E4                   		mov.B	[r14], r4
  32 003c 75 24 7F                		and #0x7f, r4
  33 003f C3 E4                   		mov.B	r4, [r14]
1930:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1931:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****    	/*EA TO DO ?LoadEVCheck.status_sensor=LOAD_EV_PILOT_INIT;	????*/
1932:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
1933:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (HWC_Flags.bit.vs_wash_presence != 0) 
  34                             		.loc 1 1933 0
  35 0041 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
  36 0047 DC EE                   		mov.W	[r14], r14
  37 0049 75 2E 10                		and #16, r14
  38 004c 5F EE                   		movu.W	r14, r14
  39 004e 61 0E                   		cmp	#0, r14
  40 0050 12                      		beq	.L1
1934:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{	
1935:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		State5.max_speed_value =0xFFFF;
  41                             		.loc 1 1935 0
  42 0051 FB E2 00 00 00 00       		mov.L	#_State5, r14
  43 0057 F8 E5 FF                		mov.W	#-1, [r14]
  44                             	.L1:
  45 005a 02                      		rts
  46                             	.LFE18:
  48                             		.section	.text.SPV_startCycleInit,"ax",@progbits
  50                             	_SPV_startCycleInit:
  51                             	.LFB20:
1936:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1937:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
1938:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****    
1939:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1940:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1941:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1942:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
1943:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1944:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1945:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Oltre alle variabili resettate da SPV_resetSensVariablesButDelay, resetta anche le variabili
1946:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** relative al DELAY nel caso si ingresso in FAULT.
1947:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1948:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Delay
1949:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 
1950:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
1951:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1952:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
1953:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1954:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
1955:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		07/06/2008
1956:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    1.0.0
1957:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1958:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1959:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1960:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_resetSensVariables(void)
1961:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
1962:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1963:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	DelayInMinutes = 0;
1964:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_resetSensVariablesButDelay();
1965:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
1966:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1967:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
1968:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1969:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1970:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
1971:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Reset variabili all'avvio di un ciclo.
1972:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1973:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
1974:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1975:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
1976:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1977:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1978:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		22/03/2007
1979:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1980:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
1981:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
1982:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_startCycleInit(void)
1983:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
  52                             		.loc 1 1983 0
1984:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Reset eventuali warning attivi */
1985:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
1986:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Reset variabili ActivateAlgorithm */
1987:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
  53                             		.loc 1 1987 0
  54 0000 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r14
  55 0006 F8 E4 00                		mov.B	#0, [r14]
1988:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmpOld[0] = 0;
  56                             		.loc 1 1988 0
  57 0009 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmpOld, r14
  58 000f F8 E4 00                		mov.B	#0, [r14]
1989:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp[0] = 0;
  59                             		.loc 1 1989 0
  60 0012 FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
  61 0018 F8 E4 00                		mov.B	#0, [r14]
1990:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
1991:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ReadVS_Data.ctrl_active = FALSE;
  62                             		.loc 1 1991 0
  63 001b FB E2 00 00 00 00       		mov.L	#_ReadVS_Data, r14
  64 0021 CC E4                   		mov.B	[r14], r4
  65 0023 7A 14                   		bclr	#1, r4
1992:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ReadVS_Data.control_done =FALSE;
  66                             		.loc 1 1992 0
  67 0025 7A 24                   		bclr	#2, r4
  68 0027 C3 E4                   		mov.B	r4, [r14]
1993:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (HWC_Flags.bit.vs_wash_presence != 0)
  69                             		.loc 1 1993 0
  70 0029 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
  71 002f DC EE                   		mov.W	[r14], r14
  72 0031 75 2E 10                		and #16, r14
  73 0034 5F EE                   		movu.W	r14, r14
  74 0036 61 0E                   		cmp	#0, r14
  75 0038 20 0C                   		beq	.L7
1994:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
1995:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		State5.max_speed_value =0xFFFF;
  76                             		.loc 1 1995 0
  77 003a FB E2 00 00 00 00       		mov.L	#_State5, r14
  78 0040 F8 E5 FF                		mov.W	#-1, [r14]
  79 0043 03                      		.balign 2,3,5
  80                             	.L7:
1996:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
1997:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	dirty_foam_Data.filter_foam_on=FALSE;
  81                             		.loc 1 1997 0
  82 0044 FB E2 00 00 00 00       		mov.L	#_dirty_foam_Data, r14
  83 004a CD E4 01                		mov.B	1[r14], r4
  84 004d 7A 34                   		bclr	#3, r4
  85 004f C7 E4 01                		mov.B	r4, 1[r14]
1998:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2, FLAG2_CLOGGED_FILTER);
  86                             		.loc 1 1998 0
  87 0052 FB E2 00 00 00 00       		mov.L	#_Flags_2, r14
  88 0058 F0 ED                   		bclr #5, [r14].B
1999:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
2000:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2001:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Init alternato : pos undef */    
2002:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     HIO_SetAltPosition(PM_ALT_getPosNotDef());
  89                             		.loc 1 2002 0
  90 005a 05 00 00 00             		bsr	_PM_ALT_getPosNotDef
  91                             	.LVL0:
  92 005e 05 00 00 00             		bsr	_HIO_SetAltPosition
  93                             	.LVL1:
2003:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2004:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* QI 29.10.09 gestione warning turbina */
2005:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     FltWarning.pulseCounterKO =  FALSE;
  94                             		.loc 1 2005 0
  95 0062 FB E2 00 00 00 00       		mov.L	#_FltWarning, r14
  96 0068 DC E4                   		mov.W	[r14], r4
  97 006a 7A 24                   		bclr	#2, r4
  98 006c D3 E4                   		mov.W	r4, [r14]
2006:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsKO &= 0X0007;
  99                             		.loc 1 2006 0
 100 006e FB E2 00 00 00 00       		mov.L	#_FltFlagsKO, r14
 101 0074 DC E4                   		mov.W	[r14], r4
 102 0076 64 74                   		and #7, r4
 103 0078 D3 E4                   		mov.W	r4, [r14]
2007:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* AZZERO TUTTI I FLAG TRANNE:WARNING_DRAIN_KO, WARNING_DRAIN_PREKO,WARNING_LOADPP_KO*/
2008:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2009:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if ( FLT_checkForCurrentFault(FLT_CODE_LOAD_EV_KO,FLT_CODE_LOAD_EV_KO))
 104                             		.loc 1 2009 0
 105 007a 66 21                   		mov	#2, r1
 106 007c CF 12                   		mov.B	r1, r2
 107 007e 05 00 00 00             		bsr	_FLT_checkForCurrentFault
 108                             	.LVL2:
 109 0082 61 01                   		cmp	#0, r1
 110 0084 16                      		beq	.L8
2010:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{/* forzo il reset del fault*/
2011:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		FLT_faultMgmtDataReset();
 111                             		.loc 1 2011 0
 112 0085 05 00 00 00             		bsr	_FLT_faultMgmtDataReset
 113                             	.LVL3:
 114 0089 03                      		.balign 2,3,5
 115                             	.L8:
2012:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2013:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2014:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsVS.VScheckinconsistency=0;
 116                             		.loc 1 2014 0
 117 008a FB E2 00 00 00 00       		mov.L	#_FltFlagsVS, r14
2015:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsVS.warninglostwater=0;
 118                             		.loc 1 2015 0
 119 0090 F8 E4 00                		mov.B	#0, [r14]
2016:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Pump_Load_Data.init = FALSE;
 120                             		.loc 1 2016 0
 121 0093 FB E2 00 00 00 00       		mov.L	#_Pump_Load_Data, r14
 122 0099 CC E4                   		mov.B	[r14], r4
 123 009b 7A 04                   		bclr	#0, r4
 124 009d C3 E4                   		mov.B	r4, [r14]
2017:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	(void)SWTC_Stop((SWTC_CountersType)MP_LOADTIMEOUT_REST_M_COUNTER);
 125                             		.loc 1 2017 0
 126 009f 75 41 2A                		mov	#42, r1
 127 00a2 05 00 00 00             		bsr	_SWTC_Stop
 128                             	.LVL4:
2018:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS); /* reset flag overflow ripristini */
 129                             		.loc 1 2018 0
 130 00a6 FB E2 00 00 00 00       		mov.L	#_Flags_1, r14
 131 00ac CC E3                   		mov.B	[r14], r3
2019:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_1, JIF_FLAG1_UP_TERMINATED_KO_POS);
2020:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_3, JIF_FLAG3_VIRTUALSENSOR_END_CYCLE);
 132                             		.loc 1 2020 0
 133 00ae FB 42 00 00 00 00       		mov.L	#_Flags_3, r4
 134 00b4 F0 4D                   		bclr #5, [r4].B
2021:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS);
 135                             		.loc 1 2021 0
 136 00b6 EF 34                   		mov.L	r3, r4
 137 00b8 75 24 CE                		and #-50, r4
 138 00bb C3 E4                   		mov.B	r4, [r14]
2022:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2, FLAG2_VIRTUALSENSOR_TEST_STARTED_FLAG);
2023:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
 139                             		.loc 1 2023 0
 140 00bd FB E2 00 00 00 00       		mov.L	#_Flags_2, r14
 141 00c3 CC E4                   		mov.B	[r14], r4
 142 00c5 75 24 6F                		and #0x6f, r4
 143 00c8 C3 E4                   		mov.B	r4, [r14]
2024:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (( FaultMgmt_Data[0].faultCodes.code==FLT_CODE_VS)|| FLT_checkForCurrentFault(FLT_CODE_LOAD_EV_
 144                             		.loc 1 2024 0
 145 00ca FB E2 00 00 00 00       		mov.L	#_FaultMgmt_Data, r14
 146 00d0 58 EE                   		movu.B	[r14], r14
 147 00d2 61 FE                   		cmp	#15, r14
 148 00d4 18                      		bne	.L9
 149 00d5 03                      		.balign 2,3,3
 150                             	.L11:
2025:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{/* forzo il reset del fault*/
2026:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		FLT_faultMgmtDataReset();
 151                             		.loc 1 2026 0
 152 00d6 05 00 00 00             		bsr	_FLT_faultMgmtDataReset
 153                             	.LVL5:
 154 00da 2E 0E                   		bra	.L10
 155                             	.L9:
2024:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (( FaultMgmt_Data[0].faultCodes.code==FLT_CODE_VS)|| FLT_checkForCurrentFault(FLT_CODE_LOAD_EV_
 156                             		.loc 1 2024 0 discriminator 1
 157 00dc 66 21                   		mov	#2, r1
 158 00de 66 32                   		mov	#3, r2
 159 00e0 05 00 00 00             		bsr	_FLT_checkForCurrentFault
 160                             	.LVL6:
 161 00e4 61 01                   		cmp	#0, r1
 162 00e6 21 F0                   		bne	.L11
 163                             		.balign 2,3,3
 164                             	.L10:
2027:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2028:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2029:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Reset statistiche ciclo */
2030:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	STC_LastCycleStat_Init();
 165                             		.loc 1 2030 0
 166 00e8 05 00 00 00             		bsr	_STC_LastCycleStat_Init
 167                             	.LVL7:
2031:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Aggiornamento array ultimi cicli*/
2032:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	STC_LastCyclesArray_Init();
 168                             		.loc 1 2032 0
 169 00ec 05 00 00 00             		bsr	_STC_LastCyclesArray_Init
 170                             	.LVL8:
2033:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* aggiornamento funzioni */
2034:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	STC_functionValueUpdateStatistics();
 171                             		.loc 1 2034 0
 172 00f0 05 00 00 00             		bsr	_STC_functionValueUpdateStatistics
 173                             	.LVL9:
2035:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* aggiornamento durezza e cesto */
2036:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	STC_userDishRack_H2oHardness_Update();
 174                             		.loc 1 2036 0
 175 00f4 05 00 00 00             		bsr	_STC_userDishRack_H2oHardness_Update
 176                             	.LVL10:
2037:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* aggiornamento rigenera e billantante */
2038:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	STC_regenerate_spaklingAid_Update();
 177                             		.loc 1 2038 0
 178 00f8 05 00 00 00             		bsr	_STC_regenerate_spaklingAid_Update
 179                             	.LVL11:
2039:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2040:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Reset bitmap fasi eseguite (per UI) */
2041:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ITP_phaseTrackerReset();
 180                             		.loc 1 2041 0
 181 00fc 04 00 00 00             		bra	_ITP_phaseTrackerReset
 182                             	.LVL12:
 183                             	.LFE20:
 185                             		.section	.text.SPV_startCycle,"ax",@progbits
 187                             	_SPV_startCycle:
 188                             	.LFB22:
2042:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2043:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2044:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
2045:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2046:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2047:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Reset variabili all'END ciclo
2048:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2049:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
2050:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2051:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
2052:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2053:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
2054:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		27/05/2008
2055:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
2056:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2057:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2058:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_endCycleResetVars(void)
2059:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
2060:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   
2061:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Reset variabili ActivateAlgorithm */
2062:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
2063:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp[0] = 0;
2064:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2065:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2066:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2067:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2068:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Avvia il ciclo indicato dal selettore a seguito di una START o di una REG_RESTART_CONDITION
2069:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2070:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	SelectorFunctionValue (global)
2071:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	StartedCycle (global)
2072:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Interpreter_Data[0] (global)
2073:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2074:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
2075:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2076:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
2077:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2078:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
2079:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		13/07/2007
2080:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
2081:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2082:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2083:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_startCycle(void)
2084:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 189                             		.loc 1 2084 0
2085:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	StartedCycle = SelectorFunctionValue;
 190                             		.loc 1 2085 0
 191 0000 FB E2 00 00 00 00       		mov.L	#_SelectorFunctionValue, r14
 192 0006 CC E4                   		mov.B	[r14], r4
 193 0008 FB E2 00 00 00 00       		mov.L	#_StartedCycle, r14
 194                             	.LVL13:
 195 000e C3 E4                   		mov.B	r4, [r14]
2086:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].cycle = StartedCycle;
 196                             		.loc 1 2086 0
 197 0010 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 198 0016 C7 E4 01                		mov.B	r4, 1[r14]
2087:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].phase = 0;
 199                             		.loc 1 2087 0
 200 0019 F9 E4 02 00             		mov.B	#0, 2[r14]
2088:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 201                             		.loc 1 2088 0
 202 001d 66 01                   		mov	#0, r1
 203 001f 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 204                             	.LVL14:
2089:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2090:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2091:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* Inizializzazioni varie */
2092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_startCycleInit();
 205                             		.loc 1 2092 0
 206 0023 04 00 00 00             		bra	_SPV_startCycleInit
 207                             	.LVL15:
 208                             	.LFE22:
 210                             		.section	.text.SPV_generateColdReset,"ax",@progbits
 212                             	_SPV_generateColdReset:
 213                             	.LFB24:
2093:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2094:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
2095:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2096:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2097:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Aggiorna la variabile globale utilizzata dall'applicazione per conoscere il valore della
2098:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** funzione specificata da funcID, ed eventualmente allinea la regolazione della funzione in
2099:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** BufOldReg a quella in BufNewReg.
2100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	funcID è l'ID della funzione
2102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
2103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	updateCycleDependentFunctions (global)
2104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	*funcValue è il valore della funzione
2105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 
2106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	S_FALSE se la funzione non è presente nel file di setting, S_OK altrimenti
2107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
2109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
2111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		23/01/2007
2112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
2113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static uint8_t SPV_updateFunctionValue(uint8_t funcID, uint8_t *funcValue)
2116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
2117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint8_t retCode;
2118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** uint16_t tempFuncValue;
2119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged(funcID);
2121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( retCode == REG_NOT_EXIST )
2122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* La funzione non è presente nel setting */
2124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return S_FALSE;
2125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( retCode == REG_CHANGED )
2127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{		
2128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID(funcID, &tempFuncValue);
2129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
2131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
2132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			*funcValue = (uint8_t)(tempFuncValue);
2133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    	REG_updateOldReg(funcID);
2134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
2135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
2136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
2137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg(funcID);
2138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
2139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Mantiene *funcValue unchanged */
2140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
2141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* return S_FALSE; con S_FALSE invece imposterei valore di default */
2142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			
2143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
2144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else
2145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
2146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (mantiene *funcValue e BufOldReg[i] unchanged) */
2147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
2148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
2150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* Do nothing */
2152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	
2154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return S_OK;
2155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
2157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Autogenera un reset freddo in conseguenza di condizioni anomale riscontrate sul file
2160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** di setting. Nel reset freddo vengono comunque preservate le statistiche.
2161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in] 	
2164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] 	
2165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 
2166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
2167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:			
2169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
2171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		07/05/2007
2172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
2173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_generateColdReset(void)
2176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 214                             		.loc 1 2176 0
2177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/*Viene richiesto il salvataggio dei dati di backup ed il loro ripristino parziale
2178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	(solo le statistiche) dopo il reset.
2179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
2180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	LIB_Backup_SetBackupSource();
 215                             		.loc 1 2180 0
 216 0000 05 00 00 00             		bsr	_LIB_Backup_SetBackupSource
 217                             	.LVL16:
2181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	LIB_Backup_ForceBackup();
 218                             		.loc 1 2181 0
 219 0004 05 00 00 00             		bsr	_LIB_Backup_ForceBackup
 220                             	.LVL17:
2182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	LIB_Reset_ForceColdReset();
 221                             		.loc 1 2184 0
 222 0008 04 00 00 00             		bra	_LIB_Reset_ForceColdReset
 223                             	.LVL18:
 224                             	.LFE24:
 226                             		.section	.text.SPV_updateFunctionValue,"ax",@progbits
 228                             	_SPV_updateFunctionValue:
 229                             	.LFB23:
2116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 230                             		.loc 1 2116 0
 231                             	.LVL19:
 232 0000 6E 7A                   		pushm	r7-r10
 233                             	.LCFI0:
 234 0002 60 40                   		sub	#4, r0
 235                             	.LCFI1:
 236 0004 CF 17                   		mov.B	r1, r7
 237 0006 EF 2A                   		mov.L	r2, r10
2120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged(funcID);
 238                             		.loc 1 2120 0
 239 0008 05 00 00 00             		bsr	_REG_checkIfChanged
 240                             	.LVL20:
2121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( retCode == REG_NOT_EXIST )
 241                             		.loc 1 2121 0
 242 000c 5B 11                   		movu.B	r1, r1
 243 000e 61 01                   		cmp	#0, r1
 244 0010 20 23                   		beq	.L24
2126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( retCode == REG_CHANGED )
 245                             		.loc 1 2126 0
 246 0012 61 11                   		cmp	#1, r1
 247 0014 21 22                   		bne	.L25
 248                             	.LVL21:
 249                             	.LBB4:
 250                             	.LBB5:
2128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID(funcID, &tempFuncValue);
 251                             		.loc 1 2128 0
 252 0016 CF 71                   		mov.B	r7, r1
 253                             	.LVL22:
 254 0018 EF 02                   		mov.L	r0, r2
 255 001a 05 00 00 00             		bsr	_REG_getFunctionValueByID
 256                             	.LVL23:
2130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 257                             		.loc 1 2130 0
 258 001e 5B 11                   		movu.B	r1, r1
 259 0020 61 01                   		cmp	#0, r1
 260 0022 1D                      		bne	.L22
 261                             	.LVL24:
2132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			*funcValue = (uint8_t)(tempFuncValue);
 262                             		.loc 1 2132 0
 263 0023 C1 0A 01                		mov.B	1[r0], [r10]
 264 0026 0E                      		bra	.L27
 265                             	.L22:
2135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 266                             		.loc 1 2135 0
 267 0027 75 51 CB                		cmp	#0xcb, r1
 268 002a 21 0C                   		bne	.L25
 269                             		.balign 2,3,1
 270                             	.L27:
2137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg(funcID);
 271                             		.loc 1 2137 0
 272 002c CF 71                   		mov.B	r7, r1
 273                             	.LVL25:
 274 002e 05 00 00 00             		bsr	_REG_updateOldReg
 275                             	.LVL26:
 276 0032 0C                      		bra	.L25
 277                             	.LVL27:
 278                             	.L24:
 279                             	.LBE5:
 280                             	.LBE4:
2124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return S_FALSE;
 281                             		.loc 1 2124 0
 282 0033 66 11                   		mov	#1, r1
 283                             	.LVL28:
 284 0035 0B                      		bra	.L21
 285                             	.L25:
2154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return S_OK;
 286                             		.loc 1 2154 0
 287 0036 66 01                   		mov	#0, r1
 288                             		.balign 2,3,1
 289                             	.L21:
2155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 290                             		.loc 1 2155 0
 291 0038 64 11                   		and #1, r1
 292 003a 3F 7A 05                		rtsd	#20, r7-r10
 293                             	.LFE23:
 295 003d 03                      		.section	.text.SPV_getCycleHeaderPtr,"ax",@progbits
 296                             		.global	_SPV_getCycleHeaderPtr
 298                             	_SPV_getCycleHeaderPtr:
 299                             	.LFB2:
1297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 300                             		.loc 1 1297 0
 301                             	.LVL29:
 302 0000 7E A7                   		push.l	r7
 303                             	.LCFI2:
 304 0002 60 80                   		sub	#8, r0
 305                             	.LCFI3:
 306 0004 EF 27                   		mov.L	r2, r7
1301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( BasicLoader((uint16_t) PTR_PROGRAM_HEADING, cycle, &prgHeader ) != S_OK )
 307                             		.loc 1 1301 0
 308 0006 5B 12                   		movu.B	r1, r2
 309                             	.LVL30:
 310 0008 75 41 54                		mov	#0x54, r1
 311                             	.LVL31:
 312 000b EF 03                   		mov.L	r0, r3
 313 000d 05 00 00 00             		bsr	_BasicLoader
 314                             	.LVL32:
 315 0011 5B 11                   		movu.B	r1, r1
 316 0013 61 01                   		cmp	#0, r1
 317 0015 21 0C                   		bne	.L30
1305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( prgHeader.DataLenght < PROGRAM_HEADING_ITEM_SIZE )
 318                             		.loc 1 1305 0
 319 0017 5D 0E 02                		movu.W	4[r0], r14
 320 001a 61 1E                   		cmp	#1, r14
 321 001c 25 09                   		bleu	.L31
1311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*pCycleHeading = prgHeader.Data;
 322                             		.loc 1 1311 0
 323 001e E0 07                   		mov.L	[r0], [r7]
 324 0020 08                      		bra	.L29
 325                             	.L30:
1303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_BASIC_LOADER; 
 326                             		.loc 1 1303 0
 327 0021 FB 16 F4                		mov	#-12, r1
 328 0024 0C                      		bra	.L29
 329                             	.L31:
1308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_PRG_HEADING_SIZE; 
 330                             		.loc 1 1308 0
 331 0025 FB 16 F5                		mov	#-11, r1
 332                             		.balign 2,3,1
 333                             	.L29:
1314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 334                             		.loc 1 1314 0
 335 0028 5B 11                   		movu.B	r1, r1
 336 002a 3F 77 03                		rtsd	#12, r7-r7
 337                             	.LFE2:
 339 002d 03                      		.section	.text.SPV_updateCycleLabel,"ax",@progbits
 341                             	_SPV_updateCycleLabel:
 342                             	.LFB1:
1268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 343                             		.loc 1 1268 0
 344 0000 7E A7                   		push.l	r7
 345                             	.LCFI4:
 346 0002 60 40                   		sub	#4, r0
 347                             	.LCFI5:
1271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(Interpreter_Data[0].cycle, &pCycleHeader) == S_OK)
 348                             		.loc 1 1271 0
 349 0004 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 350 000a 88 79                   		mov.B	1[r7], r1
 351 000c EF 02                   		mov.L	r0, r2
 352 000e 05 00 00 00             		bsr	_SPV_getCycleHeaderPtr
 353                             	.LVL33:
 354 0012 76 21 FF 00             		and #0xff, r1
 355 0016 1F                      		bne	.L34
 356                             	.LVL34:
1273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Interpreter_Data[0].completeLabel.b = ( OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABE
 357                             		.loc 1 1273 0
 358 0017 EC 0E                   		mov.L	[r0], r14
 359 0019 C1 E7 01                		mov.B	1[r14], [r7]
 360 001c 0E                      		bra	.L33
 361                             	.LVL35:
 362                             	.L34:
1278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_generateColdReset();
 363                             		.loc 1 1278 0
 364 001d 05 00 00 00             		bsr	_SPV_generateColdReset
 365                             	.LVL36:
 366 0021 03                      		.balign 2,3,2
 367                             	.L33:
1280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 368                             		.loc 1 1280 0
 369 0022 3F 77 02                		rtsd	#8, r7-r7
 370                             	.LFE1:
 372 0025 03                      		.section	.text.SPV_searchCycleByLabel,"ax",@progbits
 373                             		.global	_SPV_searchCycleByLabel
 375                             	_SPV_searchCycleByLabel:
 376                             	.LFB3:
1335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 377                             		.loc 1 1335 0
 378                             	.LVL37:
 379 0000 6E 7C                   		pushm	r7-r12
 380                             	.LCFI6:
 381 0002 60 40                   		sub	#4, r0
 382                             	.LCFI7:
 383 0004 EF 2B                   		mov.L	r2, r11
 384                             	.LVL38:
1338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 385                             		.loc 1 1338 0
 386 0006 66 07                   		mov	#0, r7
 387 0008 FB A2 00 00 00 00       		mov.L	#_Tab_HWCCyclesNum, r10
 388                             	.LBB8:
 389                             	.LBB9:
1614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( (OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABEL_MASK|CYCLE_LABEL_MASK)) == comple
 390                             		.loc 1 1614 0
 391 000e 5B 1C                   		movu.B	r1, r12
 392                             	.LBE9:
 393                             	.LBE8:
1338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 394                             		.loc 1 1338 0
 395 0010 2E 1E                   		bra	.L38
 396                             	.LVL39:
 397                             	.L42:
 398                             	.LBB11:
 399                             	.LBB10:
1612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(cycle, &pCycleHeader) == S_OK )
 400                             		.loc 1 1612 0
 401 0012 CF 71                   		mov.B	r7, r1
 402 0014 EF 02                   		mov.L	r0, r2
 403 0016 05 00 00 00             		bsr	_SPV_getCycleHeaderPtr
 404                             	.LVL40:
 405 001a 5B 11                   		movu.B	r1, r1
 406 001c 61 01                   		cmp	#0, r1
 407 001e 21 0E                   		bne	.L40
1614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( (OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABEL_MASK|CYCLE_LABEL_MASK)) == comple
 408                             		.loc 1 1614 0
 409 0020 EC 0E                   		mov.L	[r0], r14
 410 0022 59 EE 01                		movu.B	1[r14], r14
 411                             	.LBE10:
 412                             	.LBE11:
1340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(SPV_testCycleLabel(i, completeLabel) == TRUE)
 413                             		.loc 1 1340 0
 414 0025 47 CE                   		cmp	r12, r14
 415 0027 1D                      		bne	.L40
1342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    	*pCycle = i;
 416                             		.loc 1 1342 0
 417 0028 C3 B7                   		mov.B	r7, [r11]
1343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    	return S_OK; 	
 418                             		.loc 1 1343 0
 419 002a 2E 10                   		bra	.L41
 420                             	.L40:
1338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 421                             		.loc 1 1338 0
 422 002c 62 17                   		add	#1, r7
 423                             	.LVL41:
 424                             		.balign 2,3,1
 425                             	.L38:
1338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 426                             		.loc 1 1338 0 is_stmt 0 discriminator 1
 427 002e EC AE                   		mov.L	[r10], r14
 428 0030 5B 74                   		movu.B	r7, r4
 429 0032 44 E4                   		cmp	[r14].UB, r4
 430 0034 23 DE                   		bltu	.L42
1347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return SPV_WRN_LABEL_NOT_FOUND; 
 431                             		.loc 1 1347 0 is_stmt 1
 432 0036 75 41 74                		mov	#0x74, r1
 433 0039 03                      		.balign 2,3,1
 434                             	.L41:
1348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 435                             		.loc 1 1348 0
 436 003a 5B 11                   		movu.B	r1, r1
 437 003c 3F 7C 07                		rtsd	#28, r7-r12
 438                             	.LFE3:
 440 003f 03                      		.section	.text.SPV_getRefCycleForFuncValue,"ax",@progbits
 441                             		.global	_SPV_getRefCycleForFuncValue
 443                             	_SPV_getRefCycleForFuncValue:
 444                             	.LFB4:
1364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {		
 445                             		.loc 1 1364 0
1384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
 446                             		.loc 1 1384 0
 447 0000 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 448 0006 CC E4                   		mov.B	[r14], r4
 449 0008 64 F4                   		and #15, r4
 450 000a EF E3                   		mov.L	r14, r3
 451 000c 61 14                   		cmp	#1, r4
 452 000e 14                      		beq	.L46
1384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
 453                             		.loc 1 1384 0 is_stmt 0 discriminator 1
 454 000f 61 54                   		cmp	#5, r4
 455 0011 1D                      		bne	.L47
 456                             		.balign 2,3,5
 457                             	.L46:
1387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
 458                             		.loc 1 1387 0 is_stmt 1
 459 0012 88 39                   		mov.B	1[r3], r1
 460 0014 2E 1A                   		bra	.L48
 461                             	.L47:
1389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )                                 
 462                             		.loc 1 1389 0
 463 0016 61 44                   		cmp	#4, r4
 464 0018 21 13                   		bne	.L49
1391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(Paused_Intpt_Data[0].completeLabel.s.label == LBL_RUN)
 465                             		.loc 1 1391 0
 466 001a FB E2 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r14
 467 0020 CC E4                   		mov.B	[r14], r4
 468 0022 64 F4                   		and #15, r4
 469 0024 61 14                   		cmp	#1, r4
 470 0026 1D                      		bne	.L49
1396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			return (Paused_Intpt_Data[0].cycle);
 471                             		.loc 1 1396 0
 472 0027 CD E1 01                		mov.B	1[r14], r1
 473 002a 0C                      		bra	.L48
 474                             	.L49:
1410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
 475                             		.loc 1 1410 0
 476 002b CD E1 02                		mov.B	2[r14], r1
 477                             		.balign 2,3,1
 478                             	.L48:
1427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 479                             		.loc 1 1427 0
 480 002e 5B 11                   		movu.B	r1, r1
 481 0030 02                      		rts
 482                             	.LFE4:
 484 0031 03                      		.section	.text.SPV_testRefCycleLabel,"ax",@progbits
 486                             	_SPV_testRefCycleLabel:
 487                             	.LFB11:
1639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 488                             		.loc 1 1639 0
 489                             	.LVL42:
 490 0000 7E A7                   		push.l	r7
 491                             	.LCFI8:
 492 0002 60 40                   		sub	#4, r0
 493                             	.LCFI9:
 494 0004 CF 17                   		mov.B	r1, r7
1643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	refCycle = SPV_getRefCycleForFuncValue();
 495                             		.loc 1 1643 0
 496 0006 05 00 00 00             		bsr	_SPV_getRefCycleForFuncValue
 497                             	.LVL43:
 498                             	.LBB14:
 499                             	.LBB15:
1612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(cycle, &pCycleHeader) == S_OK )
 500                             		.loc 1 1612 0
 501 000a EF 02                   		mov.L	r0, r2
 502 000c 05 00 00 00             		bsr	_SPV_getCycleHeaderPtr
 503                             	.LVL44:
 504 0010 76 21 FF 00             		and #0xff, r1
 505 0014 21 0F                   		bne	.L56
 506                             	.LVL45:
1614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( (OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABEL_MASK|CYCLE_LABEL_MASK)) == comple
 507                             		.loc 1 1614 0
 508 0016 EC 0E                   		mov.L	[r0], r14
 509 0018 59 E1 01                		movu.B	1[r14], r1
 510 001b 5B 77                   		movu.B	r7, r7
 511                             	.LVL46:
1616:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			return TRUE;
 512                             		.loc 1 1616 0
 513 001d 47 71                   		cmp	r7, r1
 514 001f FC DB 10                		sceq.L	r1
 515 0022 0C                      		bra	.L55
 516                             	.LVL47:
 517                             	.L56:
1620:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return FALSE;
 518                             		.loc 1 1620 0
 519 0023 66 01                   		mov.L	#0, r1
 520                             	.LVL48:
 521 0025 03                      		.balign 2,3,2
 522                             	.L55:
 523                             	.LBE15:
 524                             	.LBE14:
1651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 525                             		.loc 1 1651 0
 526 0026 3F 77 02                		rtsd	#8, r7-r7
 527                             	.LFE11:
 529 0029 03                      		.section	.text.SPV_setupDelayCounter,"ax",@progbits
 530                             		.global	_SPV_setupDelayCounter
 532                             	_SPV_setupDelayCounter:
 533                             	.LFB8:
1529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 534                             		.loc 1 1529 0
1530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
 535                             		.loc 1 1530 0
 536 0000 75 41 41                		mov	#0x41, r1
 537 0003 05 00 00 00             		bsr	_SPV_testRefCycleLabel
 538                             	.LVL49:
 539 0007 EF 13                   		mov.L	r1, r3
 540                             	.LBB18:
 541                             	.LBB19:
1533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
 542                             		.loc 1 1533 0
 543 0009 75 41 15                		mov	#21, r1
 544                             	.LBE19:
 545                             	.LBE18:
1530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
 546                             		.loc 1 1530 0
 547 000c 61 13                   		cmp	#1, r3
 548 000e 1C                      		bne	.L59
 549                             	.LBB21:
 550                             	.LBB20:
1533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
 551                             		.loc 1 1533 0
 552 000f CF 32                   		mov.B	r3, r2
 553 0011 0F                      		bra	.L60
 554                             	.L59:
 555                             	.LBE20:
 556                             	.LBE21:
1538:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
 557                             		.loc 1 1538 0
 558 0012 66 32                   		mov	#3, r2
 559 0014 75 43 3C                		mov	#60, r3
 560 0017 03                      		.balign 2,3,3
 561                             	.L60:
 562 0018 04 00 00 00             		bra	_Set_SmallCounter
 563                             	.LVL50:
 564                             	.LFE8:
 566                             		.section	.text.SPV_isCycleRunning,"ax",@progbits
 567                             		.global	_SPV_isCycleRunning
 569                             	_SPV_isCycleRunning:
 570                             	.LFB12:
1665:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 571                             		.loc 1 1665 0
1666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) ||
 572                             		.loc 1 1666 0
 573 0000 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 574 0006 CC EE                   		mov.B	[r14], r14
 575 0008 64 FE                   		and #15, r14
 576 000a CF E1                   		mov.B	r14, r1
 577 000c 60 1E                   		sub	#1, r14
 578 000e 61 1E                   		cmp	#1, r14
 579 0010 25 0A                   		bleu	.L63
1667:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
 580                             		.loc 1 1667 0
 581 0012 5B 11                   		movu.B	r1, r1
1670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
 582                             		.loc 1 1670 0
 583 0014 61 41                   		cmp	#4, r1
 584 0016 FC DB 10                		sceq.L	r1
 585 0019 02                      		rts
 586                             	.L63:
 587 001a 66 11                   		mov.L	#1, r1
1676:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 588                             		.loc 1 1676 0
 589 001c 02                      		rts
 590                             	.LFE12:
 592                             		.section	.text.SPV_isCycleWithLabelRunning,"ax",@progbits
 594                             	_SPV_isCycleWithLabelRunning:
 595                             	.LFB13:
1693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 596                             		.loc 1 1693 0
 597                             	.LVL51:
1695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (SPV_testRefCycleLabel(completeLabel) == TRUE) && 
 598                             		.loc 1 1695 0
 599 0000 05 00 00 00             		bsr	_SPV_testRefCycleLabel
 600                             	.LVL52:
 601 0004 61 11                   		cmp	#1, r1
 602 0006 21 0C                   		bne	.L66
1696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		(SPV_isCycleRunning() == TRUE ) )
 603                             		.loc 1 1696 0 discriminator 1
 604 0008 05 00 00 00             		bsr	_SPV_isCycleRunning
 605                             	.LVL53:
1698:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
 606                             		.loc 1 1698 0 discriminator 1
 607 000c 61 11                   		cmp	#1, r1
 608 000e FC DB 10                		sceq.L	r1
 609 0011 02                      		rts
 610                             	.L66:
1702:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return FALSE;
 611                             		.loc 1 1702 0
 612 0012 66 01                   		mov.L	#0, r1
1704:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 613                             		.loc 1 1704 0
 614 0014 02                      		rts
 615                             	.LFE13:
 617                             		.section	.text.SPV_isAutotestRunning,"ax",@progbits
 618                             		.global	_SPV_isAutotestRunning
 620                             	_SPV_isAutotestRunning:
 621                             	.LFB14:
1721:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 622                             		.loc 1 1721 0
1722:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return (SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST));
 623                             		.loc 1 1722 0
 624 0000 75 41 21                		mov	#33, r1
 625 0003 04 00 00 00             		bra	_SPV_isCycleWithLabelRunning
 626                             	.LVL54:
 627                             	.LFE14:
 629                             		.section	.text.SPV_isAutotestOrTestRunning,"ax",@progbits
 630                             		.global	_SPV_isAutotestOrTestRunning
 632                             	_SPV_isAutotestOrTestRunning:
 633                             	.LFB15:
1738:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 634                             		.loc 1 1738 0
1740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
 635                             		.loc 1 1740 0
 636 0000 75 41 21                		mov	#33, r1
 637 0003 05 00 00 00             		bsr	_SPV_isCycleWithLabelRunning
 638                             	.LVL55:
 639 0007 61 01                   		cmp	#0, r1
 640 0009 21 0F                   		bne	.L70
1741:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	         SPV_isCycleWithLabelRunning(CMPLT_LBL_COLLAUDO) );        
 641                             		.loc 1 1741 0 discriminator 2
 642 000b 75 41 31                		mov	#49, r1
 643 000e 05 00 00 00             		bsr	_SPV_isCycleWithLabelRunning
 644                             	.LVL56:
1740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
 645                             		.loc 1 1740 0 discriminator 2
 646 0012 61 01                   		cmp	#0, r1
 647 0014 FC DB 11                		scne.L	r1
 648 0017 02                      		rts
 649                             	.L70:
1740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
 650                             		.loc 1 1740 0 is_stmt 0
 651 0018 66 11                   		mov.L	#1, r1
1742:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 652                             		.loc 1 1742 0 is_stmt 1
 653 001a 02                      		rts
 654                             	.LFE15:
 656                             		.section	.text.SPV_manageRequestFromRemote,"ax",@progbits
 657                             		.global	_SPV_manageRequestFromRemote
 659                             	_SPV_manageRequestFromRemote:
 660                             	.LFB16:
1764:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 661                             		.loc 1 1764 0
 662 0000 6E 7A                   		pushm	r7-r10
 663                             	.LCFI10:
 664 0002 60 40                   		sub	#4, r0
 665                             	.LCFI11:
1770:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 666                             		.loc 1 1770 0
 667 0004 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 668 000a CC 7A                   		mov.B	[r7], r10
 669 000c EF A4                   		mov.L	r10, r4
 670 000e 76 24 F0 00             		and #0xf0, r4
 671 0012 FB E2 00 00 00 00       		mov.L	#_ApplicationState, r14
1772:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SETBIT(ApplicationState, AS_AUTOTEST_ON_BIT);	  
 672                             		.loc 1 1772 0
 673 0018 CC E7                   		mov.B	[r14], r7
1770:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 674                             		.loc 1 1770 0
 675 001a 75 54 20                		cmp	#32, r4
 676 001d 1D                      		bne	.L72
1772:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SETBIT(ApplicationState, AS_AUTOTEST_ON_BIT);	  
 677                             		.loc 1 1772 0
 678 001e 78 47                   		bset #4, r7
 679 0020 2E 0E                   		bra	.L74
 680                             	.L72:
1776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    CLRBIT(ApplicationState, AS_AUTOTEST_ON_BIT);
 681                             		.loc 1 1776 0
 682 0022 7A 47                   		bclr #4, r7
1779:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_COLLAUDO )
 683                             		.loc 1 1779 0
 684 0024 75 54 30                		cmp	#48, r4
 685 0027 1F                      		bne	.L74
1781:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    SETBIT(ApplicationState, AS_COLLAUDO_ON_BIT);	
 686                             		.loc 1 1781 0
 687 0028 78 37                   		bset #3, r7
 688 002a C3 E7                   		mov.B	r7, [r14]
 689 002c 2E 0C                   		bra	.L75
 690                             	.L74:
1776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    CLRBIT(ApplicationState, AS_AUTOTEST_ON_BIT);
 691                             		.loc 1 1776 0
 692 002e C3 E7                   		mov.B	r7, [r14]
1785:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		CLRBIT(ApplicationState, AS_COLLAUDO_ON_BIT);		    
 693                             		.loc 1 1785 0
 694 0030 FB 72 00 00 00 00       		mov.L	#_ApplicationState, r7
 695 0036 F0 7B                   		bclr #3, [r7].B
 696                             		.balign 2,3,5
 697                             	.L75:
1789:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ExternalRequest == SYSTEM_NORMAL_AUTOTEST_MODE )
 698                             		.loc 1 1789 0
 699 0038 FB 72 00 00 00 00       		mov.L	#_ExternalRequest, r7
 700 003e 58 77                   		movu.B	[r7], r7
 701 0040 61 17                   		cmp	#1, r7
 702 0042 11                      		beq	.L82
1793:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( ExternalRequest == SYSTEM_NORMAL_COLLAUDO_MODE )
 703                             		.loc 1 1793 0
 704 0043 61 27                   		cmp	#2, r7
 705 0045 21 4B                   		bne	.L71
1795:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_COLLAUDO;				
 706                             		.loc 1 1795 0
 707 0047 75 47 31                		mov	#49, r7
 708 004a 0C                      		bra	.L76
 709                             	.L82:
1791:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_AUTOTEST;
 710                             		.loc 1 1791 0
 711 004b 75 47 21                		mov	#33, r7
 712                             		.balign 2,3,1
 713                             	.L76:
 714                             	.LVL57:
1804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if((Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING) || (Interpreter_Data[0].complete
 715                             		.loc 1 1804 0
 716 004e 64 FA                   		and	#15, r10
 717 0050 16                      		beq	.L78
1804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if((Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING) || (Interpreter_Data[0].complete
 718                             		.loc 1 1804 0 is_stmt 0 discriminator 1
 719 0051 61 3A                   		cmp	#3, r10
 720 0053 21 33                   		bne	.L79
 721 0055 03                      		.balign 2,3,1
 722                             	.L78:
1806:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(requestedCycleCompleteLabel, &destinationCycle) == S_OK )
 723                             		.loc 1 1806 0 is_stmt 1
 724 0056 CF 71                   		mov.B	r7, r1
 725 0058 EF 02                   		mov.L	r0, r2
 726 005a 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 727                             	.LVL58:
 728 005e 71 1E 00                		add	#0, r1, r14
 729 0061 21 25                   		bne	.L79
 730                             	.LVL59:
1808:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			StartedCycle = destinationCycle;
 731                             		.loc 1 1808 0
 732 0063 CC 04                   		mov.B	[r0], r4
 733 0065 FB A2 00 00 00 00       		mov.L	#_StartedCycle, r10
 734                             	.LVL60:
 735 006b C3 A4                   		mov.B	r4, [r10]
1809:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = destinationCycle;
 736                             		.loc 1 1809 0
 737 006d FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 738 0073 C7 A4 01                		mov.B	r4, 1[r10]
1810:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
 739                             		.loc 1 1810 0
 740 0076 C7 A1 02                		mov.B	r1, 2[r10]
1812:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 741                             		.loc 1 1812 0
 742 0079 CF E1                   		mov.B	r14, r1
 743 007b 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 744                             	.LVL61:
1814:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_startCycleInit();
 745                             		.loc 1 1814 0
 746 007f 05 00 00 00             		bsr	_SPV_startCycleInit
 747                             	.LVL62:
1818:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].completeLabel.b = requestedCycleCompleteLabel;
 748                             		.loc 1 1818 0
 749 0083 C3 A7                   		mov.B	r7, [r10]
 750 0085 03                      		.balign 2,3,5
 751                             	.L79:
1830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ExternalRequest = 0;
 752                             		.loc 1 1830 0
 753 0086 FB 72 00 00 00 00       		mov.L	#_ExternalRequest, r7
 754                             	.LVL63:
 755 008c 3C 70 00                		mov.B	#0, [r7]
 756 008f 03                      		.balign 2,3,2
 757                             	.L71:
1831:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 758                             		.loc 1 1831 0
 759 0090 3F 7A 05                		rtsd	#20, r7-r10
 760                             	.LFE16:
 762 0093 03                      		.section	.text.SPV_goingToSleepManager,"ax",@progbits
 763                             		.global	_SPV_goingToSleepManager
 765                             	_SPV_goingToSleepManager:
 766                             	.LFB17:
1850:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 767                             		.loc 1 1850 0
 768 0000 7E A7                   		push.l	r7
 769                             	.LCFI12:
 770 0002 60 40                   		sub	#4, r0
 771                             	.LCFI13:
1853:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
 772                             		.loc 1 1853 0
 773 0004 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 774 000a CC 77                   		mov.B	[r7], r7
 775 000c 64 F7                   		and #15, r7
 776 000e 60 17                   		sub	#1, r7
 777 0010 61 17                   		cmp	#1, r7
 778 0012 25 05 38 82 00          		bgtu	.L96
 779                             	.LBB28:
 780                             	.LBB29:
1857:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(CMPLT_LBL_PAUSE, &destinationCycle) == S_OK )
 781                             		.loc 1 1857 0
 782 0017 66 41                   		mov	#4, r1
 783 0019 EF 02                   		mov.L	r0, r2
 784 001b 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 785                             	.LVL64:
 786 001f 76 21 FF 00             		and #0xff, r1
 787 0023 21 73                   		bne	.L96
 788                             	.LBB30:
 789                             	.LBB31:
1497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   StopMicroprogCounters();
 790                             		.loc 1 1497 0
 791 0025 05 00 00 00             		bsr	_StopMicroprogCounters
 792                             	.LVL65:
1500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if (uP_AltCtrl_Data.step == ALT_CTRL_WAIT_ALTPOS_EXE)
 793                             		.loc 1 1500 0
 794 0029 FB E2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r14
 795 002f CD E7 04                		mov.B	4[r14], r7
 796 0032 EF 74                   		mov.L	r7, r4
 797 0034 76 24 FC 00             		and #0xfc, r4
 798 0038 75 54 10                		cmp	#16, r4
 799 003b 19                      		bne	.L93
1503:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     uP_AltCtrl_Data.step= ALT_CTRL_BEGIN;
 800                             		.loc 1 1503 0
 801 003c 64 37                   		and #3, r7
 802 003e 78 27                   		bset #2, r7
 803 0040 C7 E7 04                		mov.B	r7, 4[r14]
 804 0043 03                      		.balign 2,3,5
 805                             	.L93:
1507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if( (uP_SparklingAid_Data.step== SPRKLING_T1 ) || (uP_SparklingAid_Data.step == SPRKLING_T2) )
 806                             		.loc 1 1507 0
 807 0044 FB 72 00 00 00 00       		mov.L	#_uP_SparklingAid_Data, r7
 808 004a 59 7E 03                		movu.B	3[r7], r14
 809 004d 61 1E                   		cmp	#1, r14
 810 004f 15                      		beq	.L94
 811 0050 61 7E                   		cmp	#7, r14
 812 0052 1A                      		bne	.L95
 813 0053 03                      		.balign 2,3,5
 814                             	.L94:
1509:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     uP_SparklingAid_Data.cmd.RepeatTurbRead = TRUE;
 815                             		.loc 1 1509 0
 816 0054 CD 7E 07                		mov.B	7[r7], r14
 817 0057 78 0E                   		bset	#0, r14
 818 0059 C7 7E 07                		mov.B	r14, 7[r7]
 819                             		.balign 2,3,5
 820                             	.L95:
 821                             	.LVL66:
 822                             	.LBE31:
 823                             	.LBE30:
 824                             	.LBB32:
 825                             	.LBB33:
1450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*pDestinationBuffer = Interpreter_Data[0];
 826                             		.loc 1 1450 0
 827 005c FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 828 0062 FB 12 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r1
 829 0068 EF 72                   		mov.L	r7, r2
 830 006a 66 63                   		mov.L	#6, r3
 831 006c 7F 8F                   		smovf
1453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Paused_JmpPhase[0] =  JmpPhase[0];
 832                             		.loc 1 1453 0
 833 006e FB 12 00 00 00 00       		mov.L	#_Paused_JmpPhase, r1
 834 0074 FB 22 00 00 00 00       		mov.L	#_JmpPhase, r2
 835 007a 66 53                   		mov.L	#5, r3
 836 007c 7F 8F                   		smovf
 837                             	.LBE33:
 838                             	.LBE32:
1866:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = StartedCycle;
 839                             		.loc 1 1866 0
 840 007e FB E2 00 00 00 00       		mov.L	#_StartedCycle, r14
 841 0084 C4 E7 02                		mov.B	[r14], 2[r7]
 842                             	.LVL67:
1882:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].cycle = destinationCycle;
 843                             		.loc 1 1882 0
 844 0087 C4 07 01                		mov.B	[r0], 1[r7]
1884:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));													
 845                             		.loc 1 1884 0
 846 008a 66 01                   		mov	#0, r1
 847 008c 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 848                             	.LVL68:
1886:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_PAUSE;
 849                             		.loc 1 1886 0
 850 0090 3C 70 04                		mov.B	#4, [r7]
1888:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			return (TRUE);
 851                             		.loc 1 1888 0
 852 0093 66 11                   		mov.L	#1, r1
 853 0095 0B                      		bra	.L91
 854                             	.LVL69:
 855                             	.L96:
 856                             	.LBE29:
 857                             	.LBE28:
1893:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return (FALSE);
 858                             		.loc 1 1893 0
 859 0096 66 01                   		mov.L	#0, r1
 860                             	.LVL70:
 861                             		.balign 2,3,2
 862                             	.L91:
1894:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 863                             		.loc 1 1894 0
 864 0098 3F 77 02                		rtsd	#8, r7-r7
 865                             	.LFE17:
 867 009b 03                      		.section	.text.SPV_resetSensVariables,"ax",@progbits
 868                             		.global	_SPV_resetSensVariables
 870                             	_SPV_resetSensVariables:
 871                             	.LFB19:
1961:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 872                             		.loc 1 1961 0
1963:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	DelayInMinutes = 0;
 873                             		.loc 1 1963 0
 874 0000 FB E2 00 00 00 00       		mov.L	#_DelayInMinutes, r14
 875 0006 F8 E5 00                		mov.W	#0, [r14]
1964:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_resetSensVariablesButDelay();
 876                             		.loc 1 1964 0
 877 0009 04 00 00 00             		bra	_SPV_resetSensVariablesButDelay
 878                             	.LVL71:
 879                             	.LFE19:
 881                             		.section	.text.SPV_calcReqNewPP,"ax",@progbits
 882                             		.global	_SPV_calcReqNewPP
 884                             	_SPV_calcReqNewPP:
 885                             	.LFB26:
2185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
2188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if (SYSTEM_NORMAL_AUTOTEST_MODE == 0) 
2191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	#error "SPV_manageRequestFromRemote: SYSTEM_NORMAL_AUTOTEST_MODE equal 0"
2192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #elif (SYSTEM_NORMAL_COLLAUDO_MODE == 0)
2193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	#error "SPV_manageRequestFromRemote: SYSTEM_NORMAL_COLLAUDO_MODE equal 0"
2194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
2195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Reset completo di un fault
2198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]
2200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out]
2201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return     	none
2203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:
2205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Claudio Fontana
2207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date   		01/10/2010
2208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
2209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** static void SPV_faultCompleteReset (void)
2212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
2213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FLT_applCurrentFaultReset();
2214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FLT_faultMgmtDataReset();
2215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FLT_safetyBitmapReset();
2216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsKO=0;
2217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/*
2218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(FltFlagsKO,WARNING_DRAIN_KO);
2219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(FltFlagsKO,WARNING_DRAIN_PREKO);
2220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(FltFlagsKO,FLAG_BLDC_UNDVL);
2221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(FltFlagsKO,FLAG_BLDC_OH);
2222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(FltFlagsKO,FLAG_BLDC_HEATTOUT);
2223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(FltFlagsKO,FLAG_BLDC_PRESS_SWITCH);
2224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(FltFlagsKO,WARNING_LOADPP_KO);
2225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	*/
2226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltBLDCComm_Tout=0;
2227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltBLDCMotor_Tout = 0;
2228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltHeatToutData.state = FLT_HEAT_TOUT_DISABLE;
2229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsVS.warninglostwater=0;
2230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsVS.VScheckinconsistency=0;
2231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_1, JIF_FLAG1_UP_TERMINATED_KO_POS);
2232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_3, JIF_FLAG3_VIRTUALSENSOR_END_CYCLE);
2233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS);
2234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2, FLAG2_VIRTUALSENSOR_TEST_STARTED_FLAG);
2235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_PM_POWER_PROFILE_SUPPORT
2240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Initiate a new calculation for Power Profile Parameters
2242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]  none
2244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [out] none
2245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return      none
2247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \notes:
2249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author      Pietro Loschiavo
2251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date        07/02/2012
2252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version     1.0.0
2253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_calcReqNewPP(void)
2256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 886                             		.loc 1 2256 0
2257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	bRegsChanged = TRUE;
 887                             		.loc 1 2257 0
 888 0000 FB E2 00 00 00 00       		mov.L	#_bRegsChanged, r14
 889 0006 F8 E6 01                		mov.L	#1, [r14]
 890 0009 02                      		rts
 891                             	.LFE26:
 893                             		.section	.text.SPV_RegulationsMonitor,"ax",@progbits
 894                             		.global	_SPV_RegulationsMonitor
 896                             	_SPV_RegulationsMonitor:
 897                             	.LFB27:
2258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   Returns if regulations among ones acting as modifiers are changed
2263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   The result must be used to require the computation of power profile
2264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \return     bool_t
2265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \retval     0, no changes
2266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****               1, changes
2267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \author     Roberto Fioravanti
2269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \date       24/11/2010
2270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \version    1.0.0
2271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_RegulationsMonitor(uint8_t* pOldRegs, uint8_t* pNewRegs)
2273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 898                             		.loc 1 2273 0
 899                             	.LVL72:
 900 0000 6E 7D                   		pushm	r7-r13
 901                             	.LCFI14:
 902                             	.LVL73:
2274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	uint8_t i_bit, i_byte;
2275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	uint8_t  funcPos = 0;
2276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   static uint8_t regs_filter = 0;
2277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   static uint8_t regs_changed = FALSE;
2278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if(maxFuncIndex > 0)
 903                             		.loc 1 2280 0
 904 0002 FB 72 00 00 00 00       		mov.L	#_maxFuncIndex, r7
 905 0008 58 73                   		movu.B	[r7], r3
 906 000a 61 03                   		cmp	#0, r3
 907 000c 20 6A                   		beq	.L105
 908 000e FB 72 00 00 00 00       		mov.L	#_regs_filter.11974, r7
 909 0014 CC 7A                   		mov.B	[r7], r10
 910 0016 FB 72 00 00 00 00       		mov.L	#_regs_changed.11975, r7
 911 001c CC 77                   		mov.B	[r7], r7
 912 001e 66 04                   		mov.L	#0, r4
 913 0020 CF 4E                   		mov.B	r4, r14
2281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		for (i_byte=0; i_byte<APP_REGULATIONS_BITMAP_SIZEOF; i_byte++)
2283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
2284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			for (i_bit=0; (i_bit<8) && (funcPos<=maxFuncIndex); i_bit++, funcPos++)
 914                             		.loc 1 2284 0
 915 0022 EF 3C                   		mov.L	r3, r12
2285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
2286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if (
2287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						(regBmp[i_byte] & (1<<(i_bit)))
 916                             		.loc 1 2287 0
 917 0024 FB D2 00 00 00 00       		mov.L	#_regBmp, r13
 918 002a 2E 32                   		bra	.L106
 919                             	.LVL74:
 920                             	.L109:
 921 002c FE C4 DF                		movu.B	[r4,r13], r15
 922 002f FD 61 3F                		shar	r3, r15
2286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if (
 923                             		.loc 1 2286 0
 924 0032 FD 74 CF 01             		tst	#1, r15
 925 0036 20 10                   		beq	.L107
2288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						&&(pOldRegs[funcPos] != pNewRegs[funcPos] )
 926                             		.loc 1 2288 0
 927 0038 FE C5 1F                		movu.B	[r5,r1], r15
 928 003b FE C5 25                		movu.B	[r5,r2], r5
 929 003e 47 5F                   		cmp	r5, r15
 930 0040 16                      		beq	.L107
2289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				)
2290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{
2291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			    regs_filter = REGS_FILTER_INIT;
2292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			    regs_changed = TRUE;
 931                             		.loc 1 2292 0
 932 0041 66 17                   		mov	#1, r7
2291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			    regs_filter = REGS_FILTER_INIT;
 933                             		.loc 1 2291 0
 934 0043 75 4A 14                		mov	#20, r10
 935                             		.balign 2,3,1
 936                             	.L107:
 937                             	.LVL75:
2284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			for (i_bit=0; (i_bit<8) && (funcPos<=maxFuncIndex); i_bit++, funcPos++)
 938                             		.loc 1 2284 0
 939 0046 62 1E                   		add	#1, r14
 940                             	.LVL76:
 941 0048 62 13                   		add	#1, r3
 942 004a 5B E5                   		movu.B	r14, r5
 943 004c 47 B5                   		cmp	r11, r5
 944 004e 10                      		beq	.L108
 945 004f 03                      		.balign 2,3,1
 946                             	.L111:
2284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			for (i_bit=0; (i_bit<8) && (funcPos<=maxFuncIndex); i_bit++, funcPos++)
 947                             		.loc 1 2284 0 is_stmt 0 discriminator 2
 948 0050 5B E5                   		movu.B	r14, r5
 949 0052 47 C5                   		cmp	r12, r5
 950 0054 25 D8                   		bleu	.L109
 951                             		.balign 2,3,1
 952                             	.L108:
 953                             	.LVL77:
 954 0056 62 14                   		add	#1, r4
2282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		for (i_byte=0; i_byte<APP_REGULATIONS_BITMAP_SIZEOF; i_byte++)
 955                             		.loc 1 2282 0 is_stmt 1
 956 0058 61 54                   		cmp	#5, r4
 957 005a 20 0B                   		beq	.L110
 958                             	.LVL78:
 959                             		.balign 2,3,2
 960                             	.L106:
2272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_RegulationsMonitor(uint8_t* pOldRegs, uint8_t* pNewRegs)
 961                             		.loc 1 2272 0 discriminator 1
 962 005c 71 EB 08                		add	#8, r14, r11
 963 005f 66 03                   		mov.L	#0, r3
2284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			for (i_bit=0; (i_bit<8) && (funcPos<=maxFuncIndex); i_bit++, funcPos++)
 964                             		.loc 1 2284 0 discriminator 1
 965 0061 5B BB                   		movu.B	r11, r11
 966 0063 2E ED                   		bra	.L111
 967                             	.LVL79:
 968                             	.L110:
 969 0065 FB E2 00 00 00 00       		mov.L	#_regs_filter.11974, r14
 970                             	.LVL80:
 971 006b C3 EA                   		mov.B	r10, [r14]
 972 006d FB A2 00 00 00 00       		mov.L	#_regs_changed.11975, r10
 973 0073 C3 A7                   		mov.B	r7, [r10]
 974 0075 03                      		.balign 2,3,5
 975                             	.L105:
2293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /*					return (bool_t)1; */
2296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
2297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
2298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
2299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else
2301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* status is PM_POWER_PROFILE_STATUS_FLAGS__NO_MODIFIERS */
2303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if(regs_filter)
 976                             		.loc 1 2305 0
 977 0076 FB E2 00 00 00 00       		mov.L	#_regs_filter.11974, r14
 978 007c CC E4                   		mov.B	[r14], r4
 979 007e 5B 47                   		movu.B	r4, r7
 980 0080 61 07                   		cmp	#0, r7
 981 0082 16                      		beq	.L112
2306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
2307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     regs_filter --;
 982                             		.loc 1 2307 0
 983 0083 60 14                   		sub	#1, r4
 984 0085 C3 E4                   		mov.B	r4, [r14]
 985 0087 03                      		.balign 2,3,5
 986                             	.L112:
2308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
2309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if(regs_changed && !regs_filter)
 987                             		.loc 1 2310 0
 988 0088 FB E2 00 00 00 00       		mov.L	#_regs_changed.11975, r14
 989 008e 58 E1                   		movu.B	[r14], r1
 990                             	.LVL81:
 991 0090 61 01                   		cmp	#0, r1
 992 0092 20 14                   		beq	.L113
 993                             		.loc 1 2310 0 is_stmt 0 discriminator 1
 994 0094 FB 72 00 00 00 00       		mov.L	#_regs_filter.11974, r7
 995 009a 58 74                   		movu.B	[r7], r4
 996 009c 61 04                   		cmp	#0, r4
 997 009e 1E                      		bne	.L115
2311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
2312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     regs_changed=FALSE;
 998                             		.loc 1 2312 0 is_stmt 1
 999 009f C3 E4                   		mov.B	r4, [r14]
2313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     return TRUE;
 1000                             		.loc 1 2313 0
 1001 00a1 66 11                   		mov.L	#1, r1
 1002 00a3 0B                      		bra	.L113
 1003                             	.L115:
2314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
2315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return (bool_t)0;
 1004                             		.loc 1 2317 0
 1005 00a4 66 01                   		mov.L	#0, r1
 1006                             		.balign 2,3,2
 1007                             	.L113:
2318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 1008                             		.loc 1 2318 0
 1009 00a6 3F 7D 07                		rtsd	#28, r7-r13
 1010                             	.LFE27:
 1012 00a9 03                      		.section	.text.SVP_BuildBmpFunctionsActingAsMofifiers,"ax",@progbits
 1013                             		.global	_SVP_BuildBmpFunctionsActingAsMofifiers
 1015                             	_SVP_BuildBmpFunctionsActingAsMofifiers:
 1016                             	.LFB28:
2319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   Builds the bitmap relating to regulations that are acting as modifiers
2323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \return     none
2324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \author     Roberto Fioravanti
2326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \date       24/11/2010
2327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \version    1.0.0
2328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SVP_BuildBmpFunctionsActingAsMofifiers(void)
2330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 1017                             		.loc 1 2330 0
 1018 0000 6E 7C                   		pushm	r7-r12
 1019                             	.LCFI15:
 1020 0002 60 80                   		sub	#8, r0
 1021                             	.LCFI16:
 1022                             	.LVL82:
2331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	uint8_t i;
2332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Loader_Struct ldVarTable;
2333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	uint8_t dataIndex,dataType;
2334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	uint8_t bl=(!SF_OK);
2335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	(void)memset(regBmp, 0 , sizeof(regBmp));
 1023                             		.loc 1 2336 0
 1024 0004 FB 12 00 00 00 00       		mov.L	#_regBmp, r1
 1025 000a 66 53                   		mov.L	#5, r3
 1026 000c 66 02                   		mov	#0, r2
 1027 000e 7F 88                   		sstr.b
2337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* load table of functions acting as modifiers */
2339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	bl=MSettingBasicLoader(Interpreter_Data[0].mSetting, PTR_HW_CONFIG_DATA, CONFIG_PM_POWER_PROFILE_M
 1028                             		.loc 1 2339 0
 1029 0010 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1030 0016 89 79                   		mov.B	5[r7], r1
 1031 0018 66 A2                   		mov	#10, r2
 1032 001a 66 63                   		mov	#6, r3
 1033 001c EF 04                   		mov.L	r0, r4
 1034 001e 05 00 00 00             		bsr	_MSettingBasicLoader
 1035                             	.LVL83:
2340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (bl != SF_OK )
 1036                             		.loc 1 2341 0
 1037 0022 5B 11                   		movu.B	r1, r1
 1038 0024 61 01                   		cmp	#0, r1
 1039 0026 21 5A                   		bne	.L126
 1040 0028 FB 72 00 00 00 00       		mov.L	#_maxFuncIndex, r7
 1041 002e CC 74                   		mov.B	[r7], r4
 1042 0030 EC 0E                   		mov.L	[r0], r14
2342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		/* PM_PowerProfile_UpdateGlobalStatus(PM_POWER_PROFILE_STATUS_FLAGS__NO_MODIFIERS); */
2344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return;
2345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for(i=0; i<ldVarTable.DataLenght; i++)
 1043                             		.loc 1 2347 0
 1044 0032 5D 0A 02                		movu.W	4[r0], r10
2348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		dataType  = ((Condition_SelDataStruct *)(ldVarTable.Data) )->dataType;
2351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		dataIndex = ((Condition_SelDataStruct *)(ldVarTable.Data) )->dataIndex;
2352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		switch(dataType)
2354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
2355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case JIF_TAB_FUNCTIONS_SEG:
2356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				regBmp[dataIndex/8] |= (1<<(dataIndex%8));
 1045                             		.loc 1 2356 0
 1046 0035 FB 32 00 00 00 00       		mov.L	#_regBmp, r3
 1047 003b 66 1B                   		mov.L	#1, r11
 1048 003d 2E 35                   		bra	.L128
 1049                             	.LVL84:
 1050                             	.L132:
2351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		dataIndex = ((Condition_SelDataStruct *)(ldVarTable.Data) )->dataIndex;
 1051                             		.loc 1 2351 0
 1052 003f CC E7                   		mov.B	[r14], r7
 1053 0041 EF 72                   		mov.L	r7, r2
 1054 0043 75 22 3F                		and #63, r2
 1055                             	.LVL85:
2350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		dataType  = ((Condition_SelDataStruct *)(ldVarTable.Data) )->dataType;
 1056                             		.loc 1 2350 0
 1057 0046 CD EF 01                		mov.B	1[r14], r15
2353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		switch(dataType)
 1058                             		.loc 1 2353 0
 1059 0049 75 2F 3F                		and #63, r15
 1060 004c 61 8F                   		cmp	#8, r15
 1061 004e 21 20                   		bne	.L129
 1062                             		.loc 1 2356 0
 1063 0050 5B 25                   		movu.B	r2, r5
 1064 0052 FD 83 5F                		shlr	#3, r5, r15
 1065 0055 64 77                   		and #7, r7
 1066 0057 EF BC                   		mov.L	r11, r12
 1067 0059 FD 62 7C                		shll	r7, r12
 1068 005c EF C7                   		mov.L	r12, r7
 1069 005e FE 4F 3C                		mov.B	[r15,r3], r12
 1070 0061 57 C7                   		or	r12, r7
 1071 0063 FE 0F 37                		mov.B	r7, [r15,r3]
 1072 0066 5B 47                   		movu.B	r4, r7
 1073 0068 47 57                   		cmp	r5, r7
 1074 006a 22 04                   		bgeu	.L129
 1075 006c CF 24                   		mov.B	r2, r4
 1076                             		.balign 2,3,1
 1077                             	.L129:
2347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for(i=0; i<ldVarTable.DataLenght; i++)
 1078                             		.loc 1 2347 0
 1079 006e 62 11                   		add	#1, r1
 1080                             	.LVL86:
 1081 0070 62 2E                   		add	#2, r14
 1082                             	.LVL87:
 1083                             		.balign 2,3,1
 1084                             	.L128:
2347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	for(i=0; i<ldVarTable.DataLenght; i++)
 1085                             		.loc 1 2347 0 is_stmt 0 discriminator 1
 1086 0072 5B 17                   		movu.B	r1, r7
 1087 0074 47 A7                   		cmp	r10, r7
 1088 0076 23 C9                   		bltu	.L132
 1089 0078 FB 72 00 00 00 00       		mov.L	#_maxFuncIndex, r7
 1090 007e C3 74                   		mov.B	r4, [r7]
 1091                             	.LVL88:
 1092                             		.balign 2,3,2
 1093                             	.L126:
2357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* update max index */
2358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if( dataIndex > maxFuncIndex )
2359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				{
2360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					maxFuncIndex=dataIndex;
2361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				}
2362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
2363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
2364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		ldVarTable.Data += sizeof(Condition_SelDataStruct);
2366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 1094                             		.loc 1 2367 0 is_stmt 1
 1095 0080 3F 7C 08                		rtsd	#32, r7-r12
 1096                             	.LFE28:
 1098 0083 03                      		.section	.text.SPV_getPowerProfileIndex,"ax",@progbits
 1099                             		.global	_SPV_getPowerProfileIndex
 1101                             	_SPV_getPowerProfileIndex:
 1102                             	.LFB29:
2368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   Returns the Power Profile Index from the current Program Heading
2372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \return     Power Profile Index
2373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** x
2374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \param [in]  cycle cycle number to search
2375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \param [in]  mSetting mSetting index
2376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \author     Michele Tanzi
2378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \date       16/10/2012
2379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \version    1.0.0
2380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \author     Pietro Loschiavo
2382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \date       08/03/2013
2383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   \version    1.1.0
2384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** PM_PowerProfile_ProfileIndexType SPV_getPowerProfileIndex(uint8_t cycle, uint8_t mSetting)
2387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 1103                             		.loc 1 2387 0
 1104                             	.LVL89:
 1105 0000 60 80                   		sub	#8, r0
 1106                             	.LCFI17:
2388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Loader_Struct prgHeader;
2389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( MSettingBasicLoader(mSetting,
 1107                             		.loc 1 2390 0
 1108 0002 5B 13                   		movu.B	r1, r3
 1109 0004 CF 21                   		mov.B	r2, r1
 1110                             	.LVL90:
 1111 0006 75 42 54                		mov	#0x54, r2
 1112                             	.LVL91:
 1113 0009 EF 04                   		mov.L	r0, r4
 1114 000b 05 00 00 00             		bsr	_MSettingBasicLoader
 1115                             	.LVL92:
 1116 000f 5B 11                   		movu.B	r1, r1
 1117 0011 61 01                   		cmp	#0, r1
 1118 0013 21 0F                   		bne	.L137
2391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							(uint8_t) PTR_PROGRAM_HEADING, cycle, &prgHeader ) != S_OK )
2392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return 0;
2394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (prgHeader.DataLenght < PROGRAM_HEADING_ITEM_SIZE_WITH_PP)
 1119                             		.loc 1 2396 0
 1120 0015 5D 0E 02                		movu.W	4[r0], r14
 1121 0018 61 2E                   		cmp	#2, r14
 1122 001a 25 0A                   		bleu	.L136
2397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return 0;
2399:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2400:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	return ( OFFS_B(prgHeader.Data, PP_INDEX_OFFSET));
 1123                             		.loc 1 2401 0
 1124 001c EC 0E                   		mov.L	[r0], r14
 1125 001e CD E1 07                		mov.B	7[r14], r1
 1126 0021 0B                      		bra	.L136
 1127                             	.L137:
2393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		return 0;
 1128                             		.loc 1 2393 0
 1129 0022 66 01                   		mov	#0, r1
 1130                             		.balign 2,3,1
 1131                             	.L136:
2402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 1132                             		.loc 1 2402 0
 1133 0024 5B 11                   		movu.B	r1, r1
 1134 0026 67 02                   		rtsd	#8
 1135                             	.LFE29:
 1137                             		.section	.text.Set_UpCounter,"ax",@progbits
 1138                             		.global	_Set_UpCounter
 1140                             	_Set_UpCounter:
 1141                             	.LFB30:
2403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_PM_POWER_PROFILE_SUPPORT */
2404:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2405:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Configura il contatore specificato in ingresso per un uso come Up Counter,
2408:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** lo inizializza e lo disabilita.
2409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		counterSize e' la size SHORT/MEDIUM/LARGE_COUNTER del contatore da inizializzare
2411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		counterId e' l'identificatore del contatore da inizializzare
2412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \param [in]		opCode e' la base tempi del contatore
2413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \return			void
2415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \retval			none
2417:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \warning		none
2419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2420:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author			Michele Tanzi
2421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date			18/07/2012
2422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
2423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \bug			none
2425:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \todo			nothing
2427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2428:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \note			none
2429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2430:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void Set_UpCounter(uint8_t counterSize, SWTC_CountersType counterId, SWTC_PrescalerType opCode)
2431:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 1142                             		.loc 1 2431 0
 1143                             	.LVL93:
 1144 0000 6E 7B                   		pushm	r7-r11
 1145                             	.LCFI18:
 1146 0002 CF 1A                   		mov.B	r1, r10
 1147 0004 CF 27                   		mov.B	r2, r7
 1148 0006 CF 3B                   		mov.B	r3, r11
2432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SWTC_Stop(counterId);
 1149                             		.loc 1 2432 0
 1150 0008 CF 21                   		mov.B	r2, r1
 1151                             	.LVL94:
 1152 000a 05 00 00 00             		bsr	_SWTC_Stop
 1153                             	.LVL95:
2433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SWTC_SetPrescaler(counterId, opCode);
 1154                             		.loc 1 2433 0
 1155 000e CF 71                   		mov.B	r7, r1
 1156 0010 CF B2                   		mov.B	r11, r2
 1157 0012 05 00 00 00             		bsr	_SWTC_SetPrescaler
 1158                             	.LVL96:
2434:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	/* The counter is actually a down-counter and it must start from its maximum value
2435:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 * in order to take the correct elapsed time with the SWTC_GetElapsedTime().
2436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 * Value 0 is used to force the timer expiring because retrigger works
2437:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 * only on an expired timer.
2438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	 */
2439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	switch (counterSize)
 1159                             		.loc 1 2439 0
 1160 0016 5B A1                   		movu.B	r10, r1
 1161 0018 61 11                   		cmp	#1, r1
 1162 001a 16                      		beq	.L142
 1163 001b 61 21                   		cmp	#2, r1
 1164 001d 21 15                   		bne	.L141
 1165 001f 0A                      		bra	.L143
 1166                             	.L142:
2440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	{
2441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		case SHORT_COUNTER:
2442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SWTC_SetSValue(counterId, (SWTC_SCounterValue) 0);
 1167                             		.loc 1 2442 0
 1168 0020 CF 71                   		mov.B	r7, r1
 1169 0022 66 02                   		mov	#0, r2
 1170 0024 05 00 00 00             		bsr	_SWTC_SetSValue
 1171                             	.LVL97:
2443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
 1172                             		.loc 1 2443 0
 1173 0028 0A                      		bra	.L141
 1174                             	.L143:
2444:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		case MEDIUM_COUNTER:
2445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SWTC_SetMValue(counterId, (SWTC_MCounterValue) 0);
 1175                             		.loc 1 2445 0
 1176 0029 CF 71                   		mov.B	r7, r1
 1177 002b 66 02                   		mov	#0, r2
 1178 002d 05 00 00 00             		bsr	_SWTC_SetMValue
 1179                             	.LVL98:
 1180 0031 03                      		.balign 2,3,1
 1181                             	.L141:
2446:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
2447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #if defined(SWTC_L_ENABLED)
2448:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		case LARGE_COUNTER:
2449:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SWTC_SetLValue(counterId, (SWTC_LCounterValue) 0);
2450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
2451:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** #endif
2452:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		default:
2454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
2455:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	}
2456:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	(void)SWTC_Retrigger(counterId);
 1182                             		.loc 1 2457 0
 1183 0032 CF 71                   		mov.B	r7, r1
2458:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 1184                             		.loc 1 2458 0
 1185 0034 6F 7B                   		popm	r7-r11
 1186                             	.LVL99:
2457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	(void)SWTC_Retrigger(counterId);
 1187                             		.loc 1 2457 0
 1188 0036 04 00 00 00             		bra	_SWTC_Retrigger
 1189                             	.LVL100:
 1190                             	.LFE30:
 1192                             		.section	.text.SPV_updatePowerProfile,"ax",@progbits
 1193                             		.global	_SPV_updatePowerProfile
 1195                             	_SPV_updatePowerProfile:
 1196                             	.LFB32:
2459:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**/
2462:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2463:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Updates the Time-To-End estimation.
2464:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2465:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author      Andrea Zoppi
2466:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date        28/05/2014
2467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version     1.0.0
2468:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_updateTimeToEnd(void)
2470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
2471:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   PM_PowerProfile_ProfileIndexType powerProfileIndex;
2472:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   SWTC_TimeType elapsedTime;
2473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		switch ( Interpreter_Data[0].completeLabel.s.label )
2475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		{
2476:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case LBL_PROGRAMMING:
2477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case LBL_DELAY:
2478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
2479:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Ensure the counter is reset */
2480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
2481:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2482:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* TTE always computed from the beginning of the cycle */
2483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				powerProfileIndex = SPV_getPowerProfileIndex(Interpreter_Data[0].phase, Interpreter_Data[0].mSe
2484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Interpreter_Data[0].mSetting, 0, powerProfileI
2485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				break;
2486:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
2487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case LBL_RUN:
2488:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
2489:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2490:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Ensure the counter is running */
2491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
2492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2493:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				elapsedTime = SWTC_GetElapsedTime(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
2494:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2495:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2496:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Update TTE estimation */
2497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				powerProfileIndex = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSe
2498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Interpreter_Data[0].mSetting, 0, powerProfileI
2499:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				break;
2501:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
2502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case LBL_END:
2503:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case LBL_FAULT:
2504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
2505:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Ensure the counter is reset */
2506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
2507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2508:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Ensure there is no more time left */
2509:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				TTEEstimation = 0;
2510:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				break;
2511:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
2512:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			case LBL_PAUSE:
2513:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			{
2514:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Ensure the counter is paused */
2515:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
2516:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2517:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2518:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  if ( LBL_RUN == Paused_Intpt_Data[0].completeLabel.s.label )
2519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  {
2520:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Pause from RUN, recompute TTE estimation */
2521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					powerProfileIndex = SPV_getPowerProfileIndex(Paused_Intpt_Data[0].cycle, Paused_Intpt_Data[0].
2522:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					elapsedTime = SWTC_GetElapsedTime(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
2523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Paused_Intpt_Data[0].mSetting, 0, powerProfil
2524:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  }
2525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  else
2526:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  {
2527:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Pause from DELAY, TTE always computed from the beginning of the cycle */
2528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					powerProfileIndex = SPV_getPowerProfileIndex(Paused_Intpt_Data[0].phase, Paused_Intpt_Data[0].
2529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Paused_Intpt_Data[0].mSetting, 0, powerProfil
2530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2531:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					/* Ensure the counter is reset */
2532:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
2533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  }
2534:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				break;
2535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			}
2536:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			  default:
2537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			  {
2538:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				/* Error state, reset */
2539:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
2540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				TTEEstimation = 0;
2541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				break;
2542:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			  }
2543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		}
2544:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
2545:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2546:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2547:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** /**
2548:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** Updates the Power Profile.
2549:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2550:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \author      Andrea Zoppi
2551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \date        12/06/2014
2552:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** \version     1.0.0
2553:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** */
2554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** void SPV_updatePowerProfile(uint8_t oldLabel, uint8_t oldPhaseIndex)
2555:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 1197                             		.loc 1 2555 0
 1198                             	.LVL101:
 1199 0000 6E 7D                   		pushm	r7-r13
 1200                             	.LCFI19:
 1201 0002 71 00 F0                		add	#-16, r0
 1202                             	.LCFI20:
 1203 0005 CF 1B                   		mov.B	r1, r11
 1204 0007 CF 2D                   		mov.B	r2, r13
 1205                             	.LVL102:
2556:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   bool_t recomputationRequest = FALSE;
2557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   uint8_t cycleIndex = 0;
2558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   uint8_t phaseIndex = 0;
2559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   uint8_t mSetting = MAIN_SF_INDEX;
2560:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   PM_PowerProfile_ProfileIndexType powerProfileIndex;
2561:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   PM_PowerProfile_PowerProfileSizeType powerProfileSize;
2562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   PM_PowerProfile_EnergyType totalProfileEnergy;
2563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   PM_PowerProfile_EnergyPhaseType *firstEnergyPhasePtr;
2564:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   bool_t regulationsChanged = PM_PowerProfile_IsRecomputationReady(bRegsChanged);
 1206                             		.loc 1 2564 0
 1207 0009 FB 72 00 00 00 00       		mov.L	#_bRegsChanged, r7
 1208 000f EC 71                   		mov.L	[r7], r1
 1209                             	.LVL103:
 1210 0011 05 00 00 00             		bsr	_PM_PowerProfile_IsRecomputationReady
 1211                             	.LVL104:
2565:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2566:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if ( oldLabel != Interpreter_Data[0].completeLabel.s.label )
 1212                             		.loc 1 2566 0
 1213 0015 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1214 001b CC 7C                   		mov.B	[r7], r12
 1215 001d 64 FC                   		and #15, r12
 1216 001f 5B BB                   		movu.B	r11, r11
 1217 0021 5B CA                   		movu.B	r12, r10
 1218 0023 47 AB                   		cmp	r10, r11
 1219 0025 3A 93 00                		beq	.L146
2567:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
2568:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Running state changed */
2569:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     cycleIndex = Interpreter_Data[0].phase;
 1220                             		.loc 1 2569 0
 1221 0028 CD 7C 02                		mov.B	2[r7], r12
 1222                             	.LVL105:
2570:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     phaseIndex = 0;
2571:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     mSetting = Interpreter_Data[0].mSetting;
 1223                             		.loc 1 2571 0
 1224 002b CD 7A 05                		mov.B	5[r7], r10
 1225                             	.LVL106:
2572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     powerProfileIndex = SPV_getPowerProfileIndex(cycleIndex, mSetting);
 1226                             		.loc 1 2572 0
 1227 002e CF C1                   		mov.B	r12, r1
 1228                             	.LVL107:
 1229 0030 CF A2                   		mov.B	r10, r2
 1230 0032 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 1231                             	.LVL108:
 1232 0036 EF 1B                   		mov.L	r1, r11
 1233                             	.LVL109:
2573:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if ( LBL_END == Interpreter_Data[0].completeLabel.s.label )
 1234                             		.loc 1 2574 0
 1235 0038 CC 77                   		mov.B	[r7], r7
 1236 003a EF 73                   		mov.L	r7, r3
 1237 003c 64 F3                   		and #15, r3
 1238 003e EF 31                   		mov.L	r3, r1
 1239 0040 61 33                   		cmp	#3, r3
 1240 0042 21 57                   		bne	.L147
2575:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2576:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       /* Entered END state */
2577:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       /* - aggiornare le info del PowerProfile perché se ci sono state richieste di PowerProfile l
2578:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****          - azzerare il counter del power profile e il bit DelayPhaseTransition nel byte di stato */
2579:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       APP_AlphaCoefficientsComputation();
 1241                             		.loc 1 2579 0
 1242 0044 05 00 00 00             		bsr	_APP_AlphaCoefficientsComputation
 1243                             	.LVL110:
2580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       PM_PowerProfile_GetPowerProfile(powerProfileIndex, 1, cycleIndex, mSetting, &firstEnergyPhase
 1244                             		.loc 1 2580 0
 1245 0048 66 87                   		mov.L	#8, r7
 1246 004a 4B 07                   		add	r0, r7
 1247 004c E3 07                   		mov.L	r7, [r0]
 1248 004e 71 07 0E                		add	#14, r0, r7
 1249 0051 A0 0F                   		mov.L	r7, 4[r0]
 1250 0053 CF B1                   		mov.B	r11, r1
 1251 0055 66 12                   		mov	#1, r2
 1252 0057 CF C3                   		mov.B	r12, r3
 1253 0059 CF A4                   		mov.B	r10, r4
 1254 005b 05 00 00 00             		bsr	_PM_PowerProfile_GetPowerProfile
 1255                             	.LVL111:
2581:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2582:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, powerProfileIndex, phase
 1256                             		.loc 1 2582 0
 1257 005f 3C 00 01                		mov.B	#1, [r0]
 1258 0062 3C 01 00                		mov.B	#0, 1[r0]
 1259 0065 FB 72 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r7
 1260 006b C4 70 02                		mov.B	[r7], 2[r0]
 1261 006e 66 01                   		mov	#0, r1
 1262 0070 CF B2                   		mov.B	r11, r2
 1263 0072 CF 13                   		mov.B	r1, r3
 1264 0074 CF A4                   		mov.B	r10, r4
 1265 0076 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 1266                             	.LVL112:
 1267 007a C3 71                   		mov.B	r1, [r7]
2583:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       PM_PowerProfile_TotalProfileEnergy(1, &totalProfileEnergy);
 1268                             		.loc 1 2583 0
 1269 007c 66 11                   		mov	#1, r1
 1270 007e 71 02 0C                		add	#12, r0, r2
 1271 0081 05 00 00 00             		bsr	_PM_PowerProfile_TotalProfileEnergy
 1272                             	.LVL113:
2584:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       totalEnergyEst = (uint8_t)((totalProfileEnergy + 50) / 100);  /* Con approssimazione a 0.5 */
 1273                             		.loc 1 2584 0
 1274 0085 B9 87                   		movu.W	12[r0], r7
 1275                             	.LVL114:
 1276 0087 71 77 32                		add	#50, r7
 1277                             	.LVL115:
 1278 008a FD 74 87 64             		div	#0x64, r7
 1279 008e FB A2 00 00 00 00       		mov.L	#_totalEnergyEst, r10
 1280                             	.LVL116:
 1281 0094 C3 A7                   		mov.B	r7, [r10]
 1282 0096 38 0F 01                		bra	.L148
 1283                             	.LVL117:
 1284                             	.L147:
2585:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2586:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     else if ( LBL_PROGRAMMING == Interpreter_Data[0].completeLabel.s.label )
 1285                             		.loc 1 2586 0
 1286 0099 61 03                   		cmp	#0, r3
 1287 009b 3B 0A 01                		bne	.L148
2587:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2588:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       /* Entered PROGRAMMING state */
2589:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, powerProfileIndex, phase
 1288                             		.loc 1 2589 0
 1289 009e C3 03                   		mov.B	r3, [r0]
 1290 00a0 80 0B                   		mov.B	r3, 1[r0]
 1291 00a2 FB C2 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r12
 1292                             	.LVL118:
 1293 00a8 C4 C0 02                		mov.B	[r12], 2[r0]
 1294 00ab CF B2                   		mov.B	r11, r2
 1295 00ad CF A4                   		mov.B	r10, r4
 1296 00af 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 1297                             	.LVL119:
 1298 00b3 C3 C1                   		mov.B	r1, [r12]
 1299 00b5 38 F0 00                		bra	.L148
 1300                             	.LVL120:
 1301                             	.L146:
2590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     else
2592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2593:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       /* Do nothing */
2594:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
2596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   else if ( (LBL_PROGRAMMING == Interpreter_Data[0].completeLabel.s.label) && (oldPhaseIndex != Int
 1302                             		.loc 1 2596 0
 1303 00b8 61 0B                   		cmp	#0, r11
 1304 00ba 21 0E                   		bne	.L150
 1305                             		.loc 1 2596 0 is_stmt 0 discriminator 1
 1306 00bc CD 7A 02                		mov.B	2[r7], r10
 1307 00bf 5B DD                   		movu.B	r13, r13
 1308 00c1 5B AE                   		movu.B	r10, r14
 1309 00c3 47 ED                   		cmp	r14, r13
 1310 00c5 13                      		beq	.L150
 1311                             	.LVL121:
 1312 00c6 2E 60                   		bra	.L175
 1313                             	.LVL122:
 1314                             	.L150:
2597:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
2598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Another cycle was chosen in programming mode */
2599:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     recomputationRequest = TRUE;
2600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     cycleIndex = Interpreter_Data[0].phase;
2601:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     phaseIndex = 0;
2602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     mSetting = Interpreter_Data[0].mSetting;
2603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
2604:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   else if ( regulationsChanged || APP_PowerUp_flg )
 1315                             		.loc 1 2604 0 is_stmt 1
 1316 00c8 61 01                   		cmp	#0, r1
 1317 00ca 21 10                   		bne	.L152
 1318                             		.loc 1 2604 0 is_stmt 0 discriminator 1
 1319 00cc FB 72 00 00 00 00       		mov.L	#_APP_PowerUp_flg, r7
 1320 00d2 EC 77                   		mov.L	[r7], r7
 1321 00d4 61 07                   		cmp	#0, r7
 1322 00d6 3A CF 00                		beq	.L148
 1323 00d9 03                      		.balign 2,3,1
 1324                             	.L152:
 1325                             	.LVL123:
2605:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
2606:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Regulations changed, or the interpreter state was resumed from power loss (RMR) */
2607:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     recomputationRequest = TRUE;
2608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     switch ( Interpreter_Data[0].completeLabel.s.label )
 1326                             		.loc 1 2608 0 is_stmt 1
 1327 00da 5B C7                   		movu.B	r12, r7
 1328 00dc 61 17                   		cmp	#1, r7
 1329 00de 20 3B                   		beq	.L154
 1330 00e0 2A 09                   		bgt	.L156
 1331 00e2 61 07                   		cmp	#0, r7
 1332 00e4 20 0F                   		beq	.L153
 1333 00e6 38 C3 00                		bra	.L162
 1334                             	.L156:
 1335 00e9 61 27                   		cmp	#2, r7
 1336 00eb 10                      		beq	.L153
 1337 00ec 61 47                   		cmp	#4, r7
 1338 00ee 3B BB 00                		bne	.L162
 1339 00f1 2E 12                   		bra	.L155
 1340                             	.L153:
2609:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2610:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     case LBL_PROGRAMMING:
2611:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     case LBL_DELAY:
2612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       cycleIndex = Interpreter_Data[0].phase;
 1341                             		.loc 1 2613 0
 1342 00f3 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1343 00f9 CD 7A 02                		mov.B	2[r7], r10
 1344                             	.LVL124:
2614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       phaseIndex = 0;
2615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       mSetting = Interpreter_Data[0].mSetting;
 1345                             		.loc 1 2615 0
 1346 00fc 89 7F                   		mov.B	5[r7], r7
 1347                             	.LVL125:
2614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       phaseIndex = 0;
 1348                             		.loc 1 2614 0
 1349 00fe 66 0B                   		mov	#0, r11
2616:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       break;
 1350                             		.loc 1 2616 0
 1351 0100 38 B0 00                		bra	.L151
 1352                             	.LVL126:
 1353                             	.L155:
2617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2618:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     case LBL_PAUSE:
2619:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2620:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2621:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         if ( LBL_RUN == Paused_Intpt_Data[0].completeLabel.s.label )
 1354                             		.loc 1 2621 0
 1355 0103 FB 72 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r7
 1356 0109 CC 7A                   		mov.B	[r7], r10
 1357 010b 64 FA                   		and #15, r10
 1358 010d 61 1A                   		cmp	#1, r10
 1359 010f 1B                      		bne	.L157
 1360 0110 2E 10                   		bra	.L176
 1361                             	.L157:
2622:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         {
2623:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           /* Pause from RUN */
2624:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           cycleIndex = Paused_Intpt_Data[0].cycle;
2625:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           phaseIndex = Paused_Intpt_Data[0].phase;
2626:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         }
2627:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         else
2628:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         {
2629:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           /* Pause from DELAY */
2630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           cycleIndex = Paused_Intpt_Data[0].phase;
 1362                             		.loc 1 2630 0
 1363 0112 CD 7A 02                		mov.B	2[r7], r10
 1364                             	.LVL127:
2631:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           phaseIndex = 0;
 1365                             		.loc 1 2631 0
 1366 0115 66 0B                   		mov	#0, r11
 1367                             	.LVL128:
 1368 0117 2E 0F                   		bra	.L175
 1369                             	.LVL129:
 1370                             	.L154:
2632:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         }
2633:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         mSetting = Paused_Intpt_Data[0].mSetting;
2634:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2635:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       break;
2636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2637:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     case LBL_RUN:
2638:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2640:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         cycleIndex = Interpreter_Data[0].cycle;
 1371                             		.loc 1 2640 0
 1372 0119 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1373 011f 03                      		.balign 2,3,5
 1374                             	.L176:
 1375 0120 CD 7A 01                		mov.B	1[r7], r10
 1376                             	.LVL130:
2641:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         phaseIndex = Interpreter_Data[0].phase;
 1377                             		.loc 1 2641 0
 1378 0123 CD 7B 02                		mov.B	2[r7], r11
 1379                             	.LVL131:
 1380                             		.balign 2,3,5
 1381                             	.L175:
2642:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         mSetting = Interpreter_Data[0].mSetting;
 1382                             		.loc 1 2642 0
 1383 0126 89 7F                   		mov.B	5[r7], r7
 1384                             	.LVL132:
2643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       break;
 1385                             		.loc 1 2644 0
 1386 0128 38 88 00                		bra	.L151
 1387                             	.LVL133:
 1388                             	.L161:
2645:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2646:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     default:
2647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2648:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       /* Error */
2649:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       break;
2650:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2652:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
2653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   else
2654:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
2655:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     /* Do nothing */
2656:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
2657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2658:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   if ( recomputationRequest )
2659:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   {
2660:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     SVP_BuildBmpFunctionsActingAsMofifiers();
2661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2662:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if ( 0 != cycleIndex )  /* Ignore the dummy cycle */
2663:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     {
2664:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       /* Do not update the (backupped) alpha coefficients when resuming from power loss (RMR) */
2665:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       if ( FALSE == APP_PowerUp_flg )
 1389                             		.loc 1 2665 0
 1390 012b FB C2 00 00 00 00       		mov.L	#_APP_PowerUp_flg, r12
 1391 0131 EC CC                   		mov.L	[r12], r12
 1392 0133 61 0C                   		cmp	#0, r12
 1393 0135 1D                      		bne	.L159
2666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       {
2667:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     	  APP_AlphaCoefficientsComputation();
 1394                             		.loc 1 2667 0
 1395 0136 05 00 00 00             		bsr	_APP_AlphaCoefficientsComputation
 1396                             	.LVL134:
 1397                             		.balign 2,3,1
 1398                             	.L159:
2668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       }
2669:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       powerProfileIndex = SPV_getPowerProfileIndex(cycleIndex, mSetting);
 1399                             		.loc 1 2670 0
 1400 013a CF A1                   		mov.B	r10, r1
 1401 013c CF 72                   		mov.B	r7, r2
 1402 013e 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 1403                             	.LVL135:
 1404 0142 EF 1C                   		mov.L	r1, r12
2671:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       PM_PowerProfile_GetPowerProfile(powerProfileIndex, 1, cycleIndex, mSetting, &firstEnergyPhase
 1405                             		.loc 1 2671 0
 1406 0144 66 8D                   		mov.L	#8, r13
 1407 0146 4B 0D                   		add	r0, r13
 1408 0148 E3 0D                   		mov.L	r13, [r0]
 1409 014a 71 0D 0E                		add	#14, r0, r13
 1410 014d E7 0D 01                		mov.L	r13, 4[r0]
 1411 0150 66 12                   		mov	#1, r2
 1412 0152 CF A3                   		mov.B	r10, r3
 1413 0154 CF 74                   		mov.B	r7, r4
 1414 0156 05 00 00 00             		bsr	_PM_PowerProfile_GetPowerProfile
 1415                             	.LVL136:
2672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2673:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, powerProfileIndex, phase
 1416                             		.loc 1 2673 0
 1417 015a 3C 00 00                		mov.B	#0, [r0]
 1418 015d 3C 01 00                		mov.B	#0, 1[r0]
 1419 0160 FB A2 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r10
 1420                             	.LVL137:
 1421 0166 C4 A0 02                		mov.B	[r10], 2[r0]
 1422 0169 66 01                   		mov	#0, r1
 1423 016b CF C2                   		mov.B	r12, r2
 1424 016d CF B3                   		mov.B	r11, r3
 1425 016f CF 74                   		mov.B	r7, r4
 1426 0171 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 1427                             	.LVL138:
 1428 0175 C3 A1                   		mov.B	r1, [r10]
2674:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       PM_PowerProfile_TotalProfileEnergy(1, &totalProfileEnergy);
 1429                             		.loc 1 2674 0
 1430 0177 66 11                   		mov	#1, r1
 1431 0179 71 02 0C                		add	#12, r0, r2
 1432 017c 05 00 00 00             		bsr	_PM_PowerProfile_TotalProfileEnergy
 1433                             	.LVL139:
2675:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****       totalEnergyEst = (uint8_t)((totalProfileEnergy + 50) / 100);  /* Con approssimazione a 0.5 */
 1434                             		.loc 1 2675 0
 1435 0180 B9 87                   		movu.W	12[r0], r7
 1436                             	.LVL140:
 1437 0182 71 77 32                		add	#50, r7
 1438                             	.LVL141:
 1439 0185 FD 74 87 64             		div	#0x64, r7
 1440 0189 FB A2 00 00 00 00       		mov.L	#_totalEnergyEst, r10
 1441 018f C3 A7                   		mov.B	r7, [r10]
 1442 0191 03                      		.balign 2,3,1
 1443                             	.L174:
 1444 0192 66 12                   		mov.L	#1, r2
 1445                             	.LVL142:
 1446                             		.balign 2,3,1
 1447                             	.L160:
2676:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2677:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2678:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     }
2679:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   }
2680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2681:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   /* The SID might be updated */
2682:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   PM_PowerProfile_UpdateTemporalFilters(0, recomputationRequest);
 1448                             		.loc 1 2682 0
 1449 0194 66 01                   		mov	#0, r1
 1450 0196 05 00 00 00             		bsr	_PM_PowerProfile_UpdateTemporalFilters
 1451                             	.LVL143:
2683:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 
2684:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   APP_PowerUp_flg = FALSE;
 1452                             		.loc 1 2684 0
 1453 019a FB 72 00 00 00 00       		mov.L	#_APP_PowerUp_flg, r7
 1454 01a0 3E 70 00                		mov.L	#0, [r7]
 1455 01a3 2E 1A                   		bra	.L172
 1456                             	.LVL144:
 1457                             	.L148:
2631:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****           phaseIndex = 0;
 1458                             		.loc 1 2631 0
 1459 01a5 66 02                   		mov.L	#0, r2
 1460 01a7 2E ED                   		bra	.L160
 1461                             	.LVL145:
 1462                             	.L162:
2559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   uint8_t mSetting = MAIN_SF_INDEX;
 1463                             		.loc 1 2559 0
 1464 01a9 66 07                   		mov	#0, r7
2558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   uint8_t phaseIndex = 0;
 1465                             		.loc 1 2558 0
 1466 01ab CF 7B                   		mov.B	r7, r11
2557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   uint8_t cycleIndex = 0;
 1467                             		.loc 1 2557 0
 1468 01ad CF 7A                   		mov.B	r7, r10
 1469                             	.LVL146:
 1470 01af 03                      		.balign 2,3,3
 1471                             	.L151:
2660:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     SVP_BuildBmpFunctionsActingAsMofifiers();
 1472                             		.loc 1 2660 0
 1473 01b0 05 00 00 00             		bsr	_SVP_BuildBmpFunctionsActingAsMofifiers
 1474                             	.LVL147:
2662:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if ( 0 != cycleIndex )  /* Ignore the dummy cycle */
 1475                             		.loc 1 2662 0
 1476 01b4 5B AC                   		movu.B	r10, r12
 1477 01b6 61 0C                   		cmp	#0, r12
 1478 01b8 3B 73 FF                		bne	.L161
 1479 01bb 2E D7                   		bra	.L174
 1480                             	.LVL148:
 1481                             	.L172:
2685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }
 1482                             		.loc 1 2685 0
 1483 01bd 3F 7D 0B                		rtsd	#44, r7-r13
 1484                             	.LFE32:
 1486                             		.section	.text.SPV_superVisor,"ax",@progbits
 1487                             		.global	_SPV_superVisor
 1489                             	_SPV_superVisor:
 1490                             	.LFB0:
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** {
 1491                             		.loc 1 135 0
 1492 0000 6E 7D                   		pushm	r7-r13
 1493                             	.LCFI21:
 1494 0002 71 00 EC                		add	#-20, r0
 1495                             	.LCFI22:
 1496                             	.LVL149:
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	oldLabel = Interpreter_Data[0].completeLabel.s.label;
 1497                             		.loc 1 165 0
 1498 0005 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1499 000b CC 7B                   		mov.B	[r7], r11
 1500 000d 64 FB                   		and #15, r11
 1501                             	.LVL150:
 167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	oldPhase = Interpreter_Data[0].phase;
 1502                             		.loc 1 167 0
 1503 000f CD 7C 02                		mov.B	2[r7], r12
 1504                             	.LVL151:
 169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	bRegsChanged = SPV_RegulationsMonitor(BufOldReg, BufNewReg);
 1505                             		.loc 1 169 0
 1506 0012 FB 12 00 00 00 00       		mov.L	#_BufOldReg, r1
 1507 0018 FB 22 00 00 00 00       		mov.L	#_BufNewReg, r2
 1508 001e 05 00 00 00             		bsr	_SPV_RegulationsMonitor
 1509                             	.LVL152:
 1510 0022 FB A2 00 00 00 00       		mov.L	#_bRegsChanged, r10
 1511 0028 E3 A1                   		mov.L	r1, [r10]
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_SELECTOR)) == REG_CHANGED )
 1512                             		.loc 1 176 0
 1513 002a 66 11                   		mov	#1, r1
 1514 002c 05 00 00 00             		bsr	_REG_checkIfChanged
 1515                             	.LVL153:
 1516 0030 5B 11                   		movu.B	r1, r1
 1517 0032 61 11                   		cmp	#1, r1
 1518 0034 21 40                   		bne	.L179
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_SELECTOR), &tempFuncValue);
 1519                             		.loc 1 178 0
 1520 0036 71 02 10                		add	#16, r0, r2
 1521 0039 05 00 00 00             		bsr	_REG_getFunctionValueByID
 1522                             	.LVL154:
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 1523                             		.loc 1 180 0
 1524 003d 5B 11                   		movu.B	r1, r1
 1525 003f 61 01                   		cmp	#0, r1
 1526 0041 21 2E                   		bne	.L180
 1527                             	.LVL155:
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( (uint8_t)(tempFuncValue) < PHASES_PROGRAMMING_NUM )
 1528                             		.loc 1 182 0
 1529 0043 DD 0A 08                		mov.W	16[r0], r10
 1530 0046 FB D2 00 00 00 00       		mov.L	#_Tab_HWCCyclesNum, r13
 1531 004c EC DD                   		mov.L	[r13], r13
 1532 004e 5B AE                   		movu.B	r10, r14
 1533                             	.LVL156:
 1534 0050 44 DE                   		cmp	[r13].UB, r14
 1535                             	.LVL157:
 1536 0052 22 22                   		bgeu	.L179
 184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SelectorFunctionValue = (uint8_t)(tempFuncValue);
 1537                             		.loc 1 184 0
 1538 0054 FB D2 00 00 00 00       		mov.L	#_SelectorFunctionValue, r13
 1539 005a C3 DA                   		mov.B	r10, [r13]
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 1540                             		.loc 1 185 0
 1541 005c CC 71                   		mov.B	[r7], r1
 1542                             	.LVL158:
 1543 005e 64 F1                   		and	#15, r1
 1544 0060 18                      		bne	.L182
 187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase = SelectorFunctionValue;
 1545                             		.loc 1 187 0
 1546 0061 C7 7A 02                		mov.B	r10, 2[r7]
 188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));			    
 1547                             		.loc 1 188 0
 1548 0064 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1549                             	.LVL159:
 1550                             		.balign 2,3,1
 1551                             	.L182:
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				REG_updateOldReg((uint8_t)(FUNC_ID_SELECTOR));
 1552                             		.loc 1 192 0
 1553 0068 66 11                   		mov	#1, r1
 1554 006a 05 00 00 00             		bsr	_REG_updateOldReg
 1555                             	.LVL160:
 1556 006e 0E                      		bra	.L179
 1557                             	.LVL161:
 1558                             	.L180:
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 1559                             		.loc 1 199 0
 1560 006f 75 51 CB                		cmp	#0xcb, r1
 1561 0072 20 F6                   		beq	.L182
 1562                             	.LVL162:
 1563                             		.balign 2,3,1
 1564                             	.L179:
 218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_START)) == REG_CHANGED )
 1565                             		.loc 1 218 0
 1566 0074 66 21                   		mov	#2, r1
 1567 0076 05 00 00 00             		bsr	_REG_checkIfChanged
 1568                             	.LVL163:
 1569 007a 5B 11                   		movu.B	r1, r1
 1570 007c 61 11                   		cmp	#1, r1
 1571 007e 3B 38 03                		bne	.L273
 1572                             	.LVL164:
 1573                             	.LBB47:
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_START), &tempFuncValue);
 1574                             		.loc 1 223 0
 1575 0081 66 21                   		mov	#2, r1
 1576 0083 71 02 10                		add	#16, r0, r2
 1577 0086 05 00 00 00             		bsr	_REG_getFunctionValueByID
 1578                             	.LVL165:
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if ((retCode == S_OK) || (retCode == REG_WRN_OUT_OF_RANGE_INDEX))
 1579                             		.loc 1 227 0
 1580 008a 5B 11                   		movu.B	r1, r1
 1581 008c 61 01                   		cmp	#0, r1
 1582 008e 10                      		beq	.L184
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     if ((retCode == S_OK) || (retCode == REG_WRN_OUT_OF_RANGE_INDEX))
 1583                             		.loc 1 227 0 is_stmt 0 discriminator 1
 1584 008f 75 51 48                		cmp	#0x48, r1
 1585 0092 3B 1D 03                		bne	.L185
 1586 0095 03                      		.balign 2,3,5
 1587                             	.L184:
 232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			startFunctionValue = (uint8_t)(tempFuncValue);
 1588                             		.loc 1 232 0 is_stmt 1
 1589 0096 CD 0D 11                		mov.B	17[r0], r13
 1590                             	.LVL166:
 234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			switch(startFunctionValue)
 1591                             		.loc 1 234 0
 1592 0099 71 D7 FF                		add	#-1, r13, r7
 1593 009c 5B 77                   		movu.B	r7, r7
 1594 009e 61 67                   		cmp	#6, r7
 1595 00a0 25 05 38 F4 0A          		bgtu	.L274
 1596 00a5 FB A2 00 00 00 00       		mov.L	#.L193, r10
 1597 00ab FE 67 A7                		mov.L	[r7,r10], r7
 1598 00ae FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 1599                             		
 1600 00b4 7F 07                   	1:jmp	r7
 1601                             		.section	.rodata.SPV_superVisor,"a",@progbits
 1602                             		.balign 4
 1603                             		.balign 4
 1604                             	.L193:
 1605 0000 00 00 00 B6             		.long .L187
 1606 0004 00 00 01 6E             		.long .L188
 1607 0008 00 00 02 CB             		.long .L189
 1608 000c 00 00 01 6E             		.long .L188
 1609 0010 00 00 02 7B             		.long .L190
 1610 0014 00 00 03 34             		.long .L191
 1611 0018 00 00 03 5A             		.long .L192
 1612                             		.section	.text.SPV_superVisor
 1613                             	.L187:
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if(Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 1614                             		.loc 1 238 0
 1615 00b6 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1616 00bc CC AD                   		mov.B	[r10], r13
 1617                             	.LVL167:
 1618 00be 64 FD                   		and	#15, r13
 1619 00c0 21 3F                   		bne	.L194
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  SPV_startCycle();
 1620                             		.loc 1 246 0
 1621 00c2 05 00 00 00             		bsr	_SPV_startCycle
 1622                             	.LVL168:
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 1623                             		.loc 1 248 0
 1624 00c6 66 11                   		mov	#1, r1
 1625 00c8 75 42 2B                		mov	#43, r2
 1626 00cb 66 63                   		mov	#6, r3
 1627 00cd 05 00 00 00             		bsr	_Set_UpCounter
 1628                             	.LVL169:
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 1629                             		.loc 1 249 0
 1630 00d1 66 11                   		mov	#1, r1
 1631 00d3 75 42 2D                		mov	#45, r2
 1632 00d6 66 63                   		mov	#6, r3
 1633 00d8 05 00 00 00             		bsr	_Set_UpCounter
 1634                             	.LVL170:
 250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  (void)SWTC_Run((SWTC_CountersType)PP_ENPHELAPSEDTIME_UPCOUNTER);
 1635                             		.loc 1 250 0
 1636 00dc 75 41 2B                		mov	#43, r1
 1637 00df 05 00 00 00             		bsr	_SWTC_Run
 1638                             	.LVL171:
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  (void)SWTC_Run((SWTC_CountersType)PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 1639                             		.loc 1 251 0
 1640 00e3 75 41 2D                		mov	#45, r1
 1641 00e6 05 00 00 00             		bsr	_SWTC_Run
 1642                             	.LVL172:
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  uiSavedEnPhElapsedTime_Counter = 0;
 1643                             		.loc 1 254 0
 1644 00ea FB 72 00 00 00 00       		mov.L	#_uiSavedEnPhElapsedTime_Counter, r7
 1645 00f0 C3 7D                   		mov.B	r13, [r7]
 1646                             	.LVL173:
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  cycle_loaded_water = 0;	/*Reset variable water loaded*/
 1647                             		.loc 1 262 0
 1648 00f2 FB 72 00 00 00 00       		mov.L	#_cycle_loaded_water, r7
 1649 00f8 E3 7D                   		mov.L	r13, [r7]
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					  started_cycle = TRUE;
 1650                             		.loc 1 261 0
 1651 00fa 66 17                   		mov.L	#1, r7
 1652 00fc 38 9C 0A                		bra	.L186
 1653                             	.LVL174:
 1654                             	.L194:
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )
 1655                             		.loc 1 265 0
 1656 00ff 61 4D                   		cmp	#4, r13
 1657 0101 14                      		beq	.L195
 1658 0102 38 94 0A                		bra	.L274
 1659                             	.L195:
 1660                             	.LVL175:
 1661                             	.LBB48:
 1662                             	.LBB49:
1472:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0] = *pSourceBuffer;
 1663                             		.loc 1 1472 0
 1664 0105 EF 71                   		mov.L	r7, r1
 1665                             	.LVL176:
 1666 0107 FB 22 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r2
 1667 010d 66 63                   		mov.L	#6, r3
 1668 010f 7F 8F                   		smovf
1475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	JmpPhase[0] = Paused_JmpPhase[0];
 1669                             		.loc 1 1475 0
 1670 0111 FB 12 00 00 00 00       		mov.L	#_JmpPhase, r1
 1671 0117 FB 22 00 00 00 00       		mov.L	#_Paused_JmpPhase, r2
 1672 011d 66 53                   		mov.L	#5, r3
 1673 011f 7F 8F                   		smovf
1478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].jumpIF_phase_ctrl = 1;
 1674                             		.loc 1 1478 0
 1675 0121 CD 7A 04                		mov.B	4[r7], r10
 1676 0124 78 3A                   		bset	#3, r10
 1677 0126 C7 7A 04                		mov.B	r10, 4[r7]
 1678                             	.LBE49:
 1679                             	.LBE48:
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_PARTIAL_INIT));
 1680                             		.loc 1 269 0
 1681 0129 66 11                   		mov	#1, r1
 1682 012b 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1683                             	.LVL177:
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
 1684                             		.loc 1 273 0
 1685 012f 75 41 2B                		mov	#43, r1
 1686 0132 05 00 00 00             		bsr	_SWTC_Run
 1687                             	.LVL178:
 274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 1688                             		.loc 1 274 0
 1689 0136 75 41 2D                		mov	#45, r1
 1690 0139 05 00 00 00             		bsr	_SWTC_Run
 1691                             	.LVL179:
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if (ApplPowerProfileStatus & PM_POWER_PROFILE_STATUS__DELAY_PHASE_TRANSITION_MSK)
 1692                             		.loc 1 276 0
 1693 013d FB A2 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r10
 1694 0143 CC AD                   		mov.B	[r10], r13
 1695 0145 61 0D                   		cmp	#0, r13
 1696 0147 29 05 38 4D 0A          		bge	.L274
 278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
 1697                             		.loc 1 278 0
 1698 014c 88 79                   		mov.B	1[r7], r1
 1699 014e 89 7A                   		mov.B	5[r7], r2
 1700 0150 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 1701                             	.LVL180:
 1702 0154 EF 12                   		mov.L	r1, r2
 1703                             	.LVL181:
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Data
 1704                             		.loc 1 279 0
 1705 0156 88 F3                   		mov.B	2[r7], r3
 1706 0158 89 7C                   		mov.B	5[r7], r4
 1707 015a 3C 00 00                		mov.B	#0, [r0]
 1708 015d 3C 01 00                		mov.B	#0, 1[r0]
 1709 0160 C4 A0 02                		mov.B	[r10], 2[r0]
 1710 0163 66 01                   		mov	#0, r1
 1711 0165 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 1712                             	.LVL182:
 1713 0169 C3 A1                   		mov.B	r1, [r10]
 1714 016b 38 2B 0A                		bra	.L274
 1715                             	.LVL183:
 1716                             	.L188:
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_PROGRAMMING, &destinationCycle) == S_OK )
 1717                             		.loc 1 296 0
 1718 016e 66 01                   		mov	#0, r1
 1719                             	.LVL184:
 1720 0170 71 02 12                		add	#18, r0, r2
 1721 0173 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 1722                             	.LVL185:
 1723 0177 EF 17                   		mov.L	r1, r7
 1724 0179 71 1A 00                		add	#0, r1, r10
 1725 017c 3B F8 00                		bne	.L197
 298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == REG_RESET_CONDITION )
 1726                             		.loc 1 298 0
 1727 017f 5B DD                   		movu.B	r13, r13
 1728 0181 61 2D                   		cmp	#2, r13
 1729 0183 21 61                   		bne	.L198
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);								
 1730                             		.loc 1 308 0
 1731 0185 75 41 2B                		mov	#43, r1
 1732 0188 05 00 00 00             		bsr	_SWTC_Stop
 1733                             	.LVL186:
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								SWTC_SetSValue(PP_ENPHELAPSEDTIME_UPCOUNTER, INT8_T_MAX);
 1734                             		.loc 1 309 0
 1735 018c 75 41 2B                		mov	#43, r1
 1736 018f 75 42 7F                		mov	#0x7f, r2
 1737 0192 05 00 00 00             		bsr	_SWTC_SetSValue
 1738                             	.LVL187:
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 1739                             		.loc 1 310 0
 1740 0196 66 11                   		mov	#1, r1
 1741 0198 75 42 2D                		mov	#45, r2
 1742 019b 66 63                   		mov	#6, r3
 1743 019d 05 00 00 00             		bsr	_Set_UpCounter
 1744                             	.LVL188:
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								uiSavedEnPhElapsedTime_Counter = 0;
 1745                             		.loc 1 312 0
 1746 01a1 FB A2 00 00 00 00       		mov.L	#_uiSavedEnPhElapsedTime_Counter, r10
 1747 01a7 C3 A7                   		mov.B	r7, [r10]
 314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER))
 1748                             		.loc 1 314 0
 1749 01a9 75 41 2C                		mov	#44, r1
 1750 01ac 05 00 00 00             		bsr	_SWTC_IsStopped
 1751                             	.LVL189:
 1752 01b0 61 01                   		cmp	#0, r1
 1753 01b2 21 18                   		bne	.L199
 317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Interpreter_Data[0].phase++;
 1754                             		.loc 1 317 0
 1755 01b4 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1756 01ba CD 7A 02                		mov.B	2[r7], r10
 1757 01bd 62 1A                   		add	#1, r10
 1758 01bf C7 7A 02                		mov.B	r10, 2[r7]
 319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 1759                             		.loc 1 319 0
 1760 01c2 75 41 2C                		mov	#44, r1
 1761 01c5 05 00 00 00             		bsr	_SWTC_Stop
 1762                             	.LVL190:
 1763 01c9 03                      		.balign 2,3,5
 1764                             	.L199:
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == CMPLT_LBL_END )
 1765                             		.loc 1 326 0
 1766 01ca FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1767 01d0 CC 77                   		mov.B	[r7], r7
 1768 01d2 64 F7                   		and #15, r7
 1769 01d4 61 37                   		cmp	#3, r7
 1770 01d6 20 7E                   		beq	.L272
 341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								IncWordWithCheck(&MachineStatistics.globalStats.user_cycle_reset);
 1771                             		.loc 1 341 0
 1772 01d8 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+94, r1
 1773 01de 05 00 00 00             		bsr	_IncWordWithCheck
 1774                             	.LVL191:
 1775 01e2 2E 72                   		bra	.L272
 1776                             	.LVL192:
 1777                             	.L198:
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == REG_RESET_FAULT )
 1778                             		.loc 1 347 0
 1779 01e4 61 4D                   		cmp	#4, r13
 1780 01e6 3B D0 01                		bne	.L273
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
 1781                             		.loc 1 350 0
 1782 01e9 FB D2 00 00 00 00       		mov.L	#_Interpreter_Data, r13
 1783                             	.LVL193:
 1784 01ef CC DD                   		mov.B	[r13], r13
 1785 01f1 64 FD                   		and #15, r13
 1786 01f3 61 5D                   		cmp	#5, r13
 1787 01f5 3B C1 01                		bne	.L273
 1788                             	.LVL194:
 1789                             	.LBB50:
 1790                             	.LBB51:
2213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FLT_applCurrentFaultReset();
 1791                             		.loc 1 2213 0
 1792 01f8 05 00 00 00             		bsr	_FLT_applCurrentFaultReset
 1793                             	.LVL195:
2214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FLT_faultMgmtDataReset();
 1794                             		.loc 1 2214 0
 1795 01fc 05 00 00 00             		bsr	_FLT_faultMgmtDataReset
 1796                             	.LVL196:
2215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FLT_safetyBitmapReset();
 1797                             		.loc 1 2215 0
 1798 0200 05 00 00 00             		bsr	_FLT_safetyBitmapReset
 1799                             	.LVL197:
2216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsKO=0;
 1800                             		.loc 1 2216 0
 1801 0204 FB D2 00 00 00 00       		mov.L	#_FltFlagsKO, r13
 1802 020a D3 DA                   		mov.W	r10, [r13]
2226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltBLDCComm_Tout=0;
 1803                             		.loc 1 2226 0
 1804 020c FB D2 00 00 00 00       		mov.L	#_FltBLDCComm_Tout, r13
 1805 0212 C3 D7                   		mov.B	r7, [r13]
2227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltBLDCMotor_Tout = 0;
 1806                             		.loc 1 2227 0
 1807 0214 FB D2 00 00 00 00       		mov.L	#_FltBLDCMotor_Tout, r13
 1808 021a C3 D7                   		mov.B	r7, [r13]
2228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltHeatToutData.state = FLT_HEAT_TOUT_DISABLE;
 1809                             		.loc 1 2228 0
 1810 021c FB 72 00 00 00 00       		mov.L	#_FltHeatToutData, r7
 1811 0222 CC 7D                   		mov.B	[r7], r13
 1812 0224 75 2D 80                		and #0xffffff80, r13
 1813 0227 C3 7D                   		mov.B	r13, [r7]
2229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsVS.warninglostwater=0;
 1814                             		.loc 1 2229 0
 1815 0229 FB 72 00 00 00 00       		mov.L	#_FltFlagsVS, r7
2230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	FltFlagsVS.VScheckinconsistency=0;
 1816                             		.loc 1 2230 0
 1817 022f C3 7A                   		mov.B	r10, [r7]
2231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_1, JIF_FLAG1_UP_TERMINATED_KO_POS);
 1818                             		.loc 1 2231 0
 1819 0231 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 1820 0237 CC 7D                   		mov.B	[r7], r13
2232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_3, JIF_FLAG3_VIRTUALSENSOR_END_CYCLE);
 1821                             		.loc 1 2232 0
 1822 0239 FB A2 00 00 00 00       		mov.L	#_Flags_3, r10
 1823 023f F0 AD                   		bclr #5, [r10].B
2233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS);
 1824                             		.loc 1 2233 0
 1825 0241 EF DA                   		mov.L	r13, r10
 1826 0243 75 2A CF                		and #-49, r10
 1827 0246 C3 7A                   		mov.B	r10, [r7]
2234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2, FLAG2_VIRTUALSENSOR_TEST_STARTED_FLAG);
 1828                             		.loc 1 2234 0
 1829 0248 FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 1830 024e F0 7C                   		bclr #4, [r7].B
 1831                             	.LBE51:
 1832                             	.LBE50:
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								FLT_updateGlobalFaultCode();
 1833                             		.loc 1 367 0
 1834 0250 05 00 00 00             		bsr	_FLT_updateGlobalFaultCode
 1835                             	.LVL198:
 1836                             		.balign 2,3,5
 1837                             	.L272:
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].cycle = destinationCycle;
 1838                             		.loc 1 373 0
 1839 0254 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1840                             	.LVL199:
 1841 025a C5 07 12 01             		mov.B	18[r0], 1[r7]
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase = SelectorFunctionValue;
 1842                             		.loc 1 374 0
 1843 025e FB A2 00 00 00 00       		mov.L	#_SelectorFunctionValue, r10
 1844 0264 C4 A7 02                		mov.B	[r10], 2[r7]
 375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 1845                             		.loc 1 375 0
 1846 0267 66 01                   		mov	#0, r1
 1847 0269 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1848                             	.LVL200:
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							SPV_resetSensVariablesButDelay();
 1849                             		.loc 1 378 0
 1850 026d 05 00 00 00             		bsr	_SPV_resetSensVariablesButDelay
 1851                             	.LVL201:
 1852 0271 38 25 09                		bra	.L274
 1853                             	.LVL202:
 1854                             	.L197:
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_generateColdReset();
 1855                             		.loc 1 392 0
 1856 0274 05 00 00 00             		bsr	_SPV_generateColdReset
 1857                             	.LVL203:
 1858 0278 38 3E 01                		bra	.L273
 1859                             	.LVL204:
 1860                             	.L190:
 406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) &&
 1861                             		.loc 1 406 0
 1862 027b CC A7                   		mov.B	[r10], r7
 1863 027d 64 F7                   		and #15, r7
 1864 027f 61 17                   		cmp	#1, r7
 1865 0281 3B 35 01                		bne	.L273
 406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) &&
 1866                             		.loc 1 406 0 is_stmt 0 discriminator 1
 1867 0284 FB A2 00 00 00 00       		mov.L	#_SelectorFunctionValue, r10
 1868 028a 58 AD                   		movu.B	[r10], r13
 1869                             	.LVL205:
 1870 028c FB A2 00 00 00 00       		mov.L	#_StartedCycle, r10
 1871 0292 44 AD                   		cmp	[r10].UB, r13
 1872 0294 3A 22 01                		beq	.L273
 415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_resetSensVariablesButDelay();
 1873                             		.loc 1 415 0 is_stmt 1
 1874 0297 05 00 00 00             		bsr	_SPV_resetSensVariablesButDelay
 1875                             	.LVL206:
 419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_startCycle();
 1876                             		.loc 1 419 0
 1877 029b 05 00 00 00             		bsr	_SPV_startCycle
 1878                             	.LVL207:
 421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 1879                             		.loc 1 421 0
 1880 029f CF 71                   		mov.B	r7, r1
 1881 02a1 75 42 2B                		mov	#43, r2
 1882 02a4 66 63                   		mov	#6, r3
 1883 02a6 05 00 00 00             		bsr	_Set_UpCounter
 1884                             	.LVL208:
 422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 1885                             		.loc 1 422 0
 1886 02aa CF 71                   		mov.B	r7, r1
 1887 02ac 75 42 2D                		mov	#45, r2
 1888 02af 66 63                   		mov	#6, r3
 1889 02b1 05 00 00 00             		bsr	_Set_UpCounter
 1890                             	.LVL209:
 423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
 1891                             		.loc 1 423 0
 1892 02b5 75 41 2B                		mov	#43, r1
 1893 02b8 05 00 00 00             		bsr	_SWTC_Run
 1894                             	.LVL210:
 424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 1895                             		.loc 1 424 0
 1896 02bc 75 41 2D                		mov	#45, r1
 1897 02bf 05 00 00 00             		bsr	_SWTC_Run
 1898                             	.LVL211:
 426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						uiSavedEnPhElapsedTime_Counter = 0;
 1899                             		.loc 1 426 0
 1900 02c3 FB 72 00 00 00 00       		mov.L	#_uiSavedEnPhElapsedTime_Counter, r7
 1901 02c9 2E 65                   		bra	.L319
 1902                             	.LVL212:
 1903                             	.L189:
 440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
 1904                             		.loc 1 440 0
 1905 02cb 75 41 2B                		mov	#43, r1
 1906                             	.LVL213:
 1907 02ce 05 00 00 00             		bsr	_SWTC_Stop
 1908                             	.LVL214:
 441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 1909                             		.loc 1 441 0
 1910 02d2 75 41 2D                		mov	#45, r1
 1911 02d5 05 00 00 00             		bsr	_SWTC_Stop
 1912                             	.LVL215:
 443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
 1913                             		.loc 1 443 0
 1914 02d9 75 41 2C                		mov	#44, r1
 1915 02dc 05 00 00 00             		bsr	_SWTC_IsStopped
 1916                             	.LVL216:
 1917 02e0 71 1A 00                		add	#0, r1, r10
 1918 02e3 21 3B                   		bne	.L203
 445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase++;
 1919                             		.loc 1 445 0
 1920 02e5 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1921 02eb CD 7D 02                		mov.B	2[r7], r13
 1922                             	.LVL217:
 1923 02ee 62 1D                   		add	#1, r13
 1924 02f0 C7 7D 02                		mov.B	r13, 2[r7]
 447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 1925                             		.loc 1 447 0
 1926 02f3 75 41 2C                		mov	#44, r1
 1927 02f6 05 00 00 00             		bsr	_SWTC_Stop
 1928                             	.LVL218:
 448:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
 1929                             		.loc 1 448 0
 1930 02fa 88 79                   		mov.B	1[r7], r1
 1931 02fc 89 7A                   		mov.B	5[r7], r2
 1932 02fe 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 1933                             	.LVL219:
 1934 0302 EF 12                   		mov.L	r1, r2
 1935                             	.LVL220:
 449:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Data[
 1936                             		.loc 1 449 0
 1937 0304 88 F3                   		mov.B	2[r7], r3
 1938 0306 89 7C                   		mov.B	5[r7], r4
 1939 0308 C3 0A                   		mov.B	r10, [r0]
 1940 030a C7 0A 01                		mov.B	r10, 1[r0]
 1941 030d FB 72 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r7
 1942 0313 C4 70 02                		mov.B	[r7], 2[r0]
 1943 0316 CF A1                   		mov.B	r10, r1
 1944 0318 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 1945                             	.LVL221:
 1946 031c C3 71                   		mov.B	r1, [r7]
 1947                             		.balign 2,3,3
 1948                             	.L203:
 454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( TRUE == SPV_goingToSleepManager() )
 1949                             		.loc 1 454 0
 1950 031e 05 00 00 00             		bsr	_SPV_goingToSleepManager
 1951                             	.LVL222:
 1952 0322 61 11                   		cmp	#1, r1
 1953 0324 3B 72 08                		bne	.L274
 457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						EnergyPause_Status = PP_ENERGYPAUSE_STATUS_NO_PAUSE;
 1954                             		.loc 1 457 0
 1955 0327 FB 72 00 00 00 00       		mov.L	#_EnergyPause_Status, r7
 1956 032d 03                      		.balign 2,3,4
 1957                             	.L319:
 1958 032e 3C 70 00                		mov.B	#0, [r7]
 1959 0331 38 65 08                		bra	.L274
 1960                             	.LVL223:
 1961                             	.L191:
 469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
 1962                             		.loc 1 469 0
 1963 0334 75 41 2B                		mov	#43, r1
 1964                             	.LVL224:
 1965 0337 05 00 00 00             		bsr	_SWTC_Stop
 1966                             	.LVL225:
 470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 1967                             		.loc 1 470 0
 1968 033b 75 41 2D                		mov	#45, r1
 1969 033e 05 00 00 00             		bsr	_SWTC_Stop
 1970                             	.LVL226:
 473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( TRUE == SPV_goingToSleepManager() )
 1971                             		.loc 1 473 0
 1972 0342 05 00 00 00             		bsr	_SPV_goingToSleepManager
 1973                             	.LVL227:
 1974 0346 61 11                   		cmp	#1, r1
 1975 0348 3B 4E 08                		bne	.L274
 477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						EnergyPause_Status &= PP_ENERGYPAUSE_STATUS_PAUSE_OVERLOAD;
 1976                             		.loc 1 477 0
 1977 034b FB 72 00 00 00 00       		mov.L	#_EnergyPause_Status, r7
 1978 0351 CC 7A                   		mov.B [r7], r10
 1979 0353 64 2A                   		and #2, r10
 1980 0355 C3 7A                   		mov.B	r10, [r7]
 1981 0357 38 3F 08                		bra	.L274
 1982                             	.LVL228:
 1983                             	.L192:
 489:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
 1984                             		.loc 1 489 0
 1985 035a 75 41 2B                		mov	#43, r1
 1986                             	.LVL229:
 1987 035d 05 00 00 00             		bsr	_SWTC_Stop
 1988                             	.LVL230:
 490:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 1989                             		.loc 1 490 0
 1990 0361 75 41 2D                		mov	#45, r1
 1991 0364 05 00 00 00             		bsr	_SWTC_Stop
 1992                             	.LVL231:
 492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if (( Interpreter_Data[0].completeLabel.s.label == LBL_RUN) || (Interpreter_Data[0].completeLa
 1993                             		.loc 1 492 0
 1994 0368 FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 1995 036e CC A7                   		mov.B	[r10], r7
 1996 0370 64 F7                   		and #15, r7
 1997 0372 60 17                   		sub	#1, r7
 1998 0374 61 17                   		cmp	#1, r7
 1999 0376 25 05 38 1E 08          		bgtu	.L274
 495:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
 2000                             		.loc 1 495 0
 2001 037b 75 41 2C                		mov	#44, r1
 2002 037e 05 00 00 00             		bsr	_SWTC_IsStopped
 2003                             	.LVL232:
 2004 0382 71 17 00                		add	#0, r1, r7
 2005 0385 3B 11 08                		bne	.L274
 497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase++;
 2006                             		.loc 1 497 0
 2007 0388 CD AD 02                		mov.B	2[r10], r13
 2008                             	.LVL233:
 2009 038b 62 1D                   		add	#1, r13
 2010 038d C7 AD 02                		mov.B	r13, 2[r10]
 498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 2011                             		.loc 1 498 0
 2012 0390 75 41 2C                		mov	#44, r1
 2013 0393 05 00 00 00             		bsr	_SWTC_Stop
 2014                             	.LVL234:
 500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if ( TRUE == SPV_goingToSleepManager() )
 2015                             		.loc 1 500 0
 2016 0397 05 00 00 00             		bsr	_SPV_goingToSleepManager
 2017                             	.LVL235:
 2018 039b 61 11                   		cmp	#1, r1
 2019 039d 3B F9 07                		bne	.L274
 504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								EnergyPause_Status &= PP_ENERGYPAUSE_STATUS_PAUSE_EN_PHASES;
 2020                             		.loc 1 504 0
 2021 03a0 FB A2 00 00 00 00       		mov.L	#_EnergyPause_Status, r10
 2022 03a6 CC AD                   		mov.B [r10], r13
 2023 03a8 64 1D                   		and #1, r13
 2024 03aa C3 AD                   		mov.B	r13, [r10]
 2025 03ac 38 EC 07                		bra	.L186
 2026                             	.LVL236:
 2027                             	.L185:
 523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 2028                             		.loc 1 523 0
 2029 03af 75 51 CB                		cmp	#0xcb, r1
 2030 03b2 1C                      		bne	.L273
 2031 03b3 38 E3 07                		bra	.L274
 2032                             	.LVL237:
 2033                             	.L273:
 2034                             	.LBE47:
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	started_cycle = FALSE;
 2035                             		.loc 1 216 0
 2036 03b6 66 07                   		mov.L	#0, r7
 2037                             	.LVL238:
 2038                             		.balign 2,3,3
 2039                             	.L183:
 541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 2040                             		.loc 1 541 0
 2041 03b8 05 00 00 00             		bsr	_SPV_updateCycleLabel
 2042                             	.LVL239:
 550:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_HH);
 2043                             		.loc 1 550 0
 2044 03bc 75 41 13                		mov	#19, r1
 2045 03bf 05 00 00 00             		bsr	_REG_checkIfChanged
 2046                             	.LVL240:
 2047 03c3 EF 1A                   		mov.L	r1, r10
 2048                             	.LVL241:
 551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode |= REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_MM);
 2049                             		.loc 1 551 0
 2050 03c5 75 41 14                		mov	#20, r1
 2051                             	.LVL242:
 2052 03c8 05 00 00 00             		bsr	_REG_checkIfChanged
 2053                             	.LVL243:
 2054 03cc 57 A1                   		or	r10, r1
 2055                             	.LVL244:
 555:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (retCode & REG_CHANGED )&& ( (retCode & REG_NOT_EXIST)==0))
 2056                             		.loc 1 555 0
 2057 03ce FD 74 C1 01             		tst	#1, r1
 2058 03d2 20 4A                   		beq	.L205
 558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_HH), &tempFuncValue);
 2059                             		.loc 1 558 0
 2060 03d4 75 41 13                		mov	#19, r1
 2061 03d7 71 02 10                		add	#16, r0, r2
 2062 03da 05 00 00 00             		bsr	_REG_getFunctionValueByID
 2063                             	.LVL245:
 2064 03de EF 1A                   		mov.L	r1, r10
 2065                             	.LVL246:
 559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode |= REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_MM), &tempFuncValue2);
 2066                             		.loc 1 559 0
 2067 03e0 75 41 14                		mov	#20, r1
 2068                             	.LVL247:
 2069 03e3 71 02 0E                		add	#14, r0, r2
 2070 03e6 05 00 00 00             		bsr	_REG_getFunctionValueByID
 2071                             	.LVL248:
 2072 03ea 57 A1                   		or	r10, r1
 2073                             	.LVL249:
 560:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( (retCode == S_OK )&& ((retCode & REG_NULL_INDEX)==0))
 2074                             		.loc 1 560 0
 2075 03ec 5B 11                   		movu.B	r1, r1
 2076 03ee 61 01                   		cmp	#0, r1
 2077 03f0 21 19                   		bne	.L206
 563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			DelayInMinutes = (uint16_t)(tempFuncValue) * 60 + tempFuncValue2; /* aggiornamento delay in ore 
 2078                             		.loc 1 563 0 discriminator 1
 2079 03f2 DD 0D 08                		mov.W	16[r0], r13
 2080 03f5 75 1D 3C                		mul	#60, r13
 2081                             	.LVL250:
 2082 03f8 06 49 0D 07             		add	14[r0].W, r13
 2083 03fc FB A2 00 00 00 00       		mov.L	#_DelayInMinutes, r10
 2084 0402 D3 AD                   		mov.W	r13, [r10]
 566:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_setupDelayCounter();
 2085                             		.loc 1 566 0 discriminator 1
 2086 0404 05 00 00 00             		bsr	_SPV_setupDelayCounter
 2087                             	.LVL251:
 2088 0408 0E                      		bra	.L312
 2089                             	.LVL252:
 2090                             	.L206:
 572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 2091                             		.loc 1 572 0
 2092 0409 75 51 CB                		cmp	#0xcb, r1
 2093 040c 21 10                   		bne	.L205
 2094                             	.LVL253:
 2095                             		.balign 2,3,2
 2096                             	.L312:
 574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 2097                             		.loc 1 574 0
 2098 040e 75 41 13                		mov	#19, r1
 2099 0411 05 00 00 00             		bsr	_REG_updateOldReg
 2100                             	.LVL254:
 575:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 2101                             		.loc 1 575 0
 2102 0415 75 41 14                		mov	#20, r1
 2103 0418 05 00 00 00             		bsr	_REG_updateOldReg
 2104                             	.LVL255:
 2105                             		.balign 2,3,1
 2106                             	.L205:
 590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged((uint8_t)FUNC_ID_CLOCK_HH);
 2107                             		.loc 1 590 0
 2108 041c 66 41                   		mov	#4, r1
 2109 041e 05 00 00 00             		bsr	_REG_checkIfChanged
 2110                             	.LVL256:
 2111 0422 EF 1A                   		mov.L	r1, r10
 2112                             	.LVL257:
 591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	retCode |= REG_checkIfChanged((uint8_t)FUNC_ID_CLOCK_MM);
 2113                             		.loc 1 591 0
 2114 0424 66 51                   		mov	#5, r1
 2115                             	.LVL258:
 2116 0426 05 00 00 00             		bsr	_REG_checkIfChanged
 2117                             	.LVL259:
 2118 042a 57 A1                   		or	r10, r1
 2119                             	.LVL260:
 593:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (retCode & REG_CHANGED )&& ( (retCode & REG_NOT_EXIST)==0))
 2120                             		.loc 1 593 0
 2121 042c FD 74 C1 01             		tst	#1, r1
 2122 0430 20 6A                   		beq	.L209
 595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_CLOCK_HH), &tempFuncValue);
 2123                             		.loc 1 595 0
 2124 0432 66 41                   		mov	#4, r1
 2125 0434 71 02 10                		add	#16, r0, r2
 2126 0437 05 00 00 00             		bsr	_REG_getFunctionValueByID
 2127                             	.LVL261:
 596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 2128                             		.loc 1 596 0
 2129 043b 5B 11                   		movu.B	r1, r1
 2130 043d 61 01                   		cmp	#0, r1
 2131 043f 21 12                   		bne	.L210
 598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockHH = tempFuncValue+1;
 2132                             		.loc 1 598 0
 2133 0441 CD 0D 11                		mov.B	17[r0], r13
 2134 0444 62 1D                   		add	#1, r13
 2135 0446 FB A2 00 00 00 00       		mov.L	#_TempCycle_Stats, r10
 2136 044c C7 AD 06                		mov.B	r13, 6[r10]
 2137 044f 2E 17                   		bra	.L211
 2138                             	.L210:
 600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 2139                             		.loc 1 600 0
 2140 0451 75 51 CB                		cmp	#0xcb, r1
 2141 0454 21 12                   		bne	.L211
 602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_CLOCK_HH));
 2142                             		.loc 1 602 0
 2143 0456 66 41                   		mov	#4, r1
 2144                             	.LVL262:
 2145 0458 05 00 00 00             		bsr	_REG_updateOldReg
 2146                             	.LVL263:
 603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockHH = DUMMY_CLOCK_VALUE;
 2147                             		.loc 1 603 0
 2148 045c FB A2 00 00 00 00       		mov.L	#_TempCycle_Stats, r10
 2149 0462 F9 A4 06 00             		mov.B	#0, 6[r10]
 2150                             		.balign 2,3,1
 2151                             	.L211:
 605:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		retCodeAux = REG_getFunctionValueByID((uint8_t)(FUNC_ID_CLOCK_MM), &tempFuncValue2);
 2152                             		.loc 1 605 0
 2153 0466 66 51                   		mov	#5, r1
 2154 0468 71 02 0E                		add	#14, r0, r2
 2155 046b 05 00 00 00             		bsr	_REG_getFunctionValueByID
 2156                             	.LVL264:
 606:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(retCodeAux == S_OK )
 2157                             		.loc 1 606 0
 2158 046f 5B 11                   		movu.B	r1, r1
 2159 0471 61 01                   		cmp	#0, r1
 2160 0473 21 12                   		bne	.L212
 608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockMM = tempFuncValue2+1;
 2161                             		.loc 1 608 0
 2162 0475 DD 0D 07                		mov.W	14[r0], r13
 2163 0478 62 1D                   		add	#1, r13
 2164 047a FB A2 00 00 00 00       		mov.L	#_TempCycle_Stats, r10
 2165 0480 C7 AD 07                		mov.B	r13, 7[r10]
 2166 0483 2E 17                   		bra	.L209
 2167                             	.L212:
 610:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		else if( retCodeAux == REG_NULL_INDEX )
 2168                             		.loc 1 610 0
 2169 0485 75 51 CB                		cmp	#0xcb, r1
 2170 0488 21 12                   		bne	.L209
 612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_CLOCK_MM));
 2171                             		.loc 1 612 0
 2172 048a 66 51                   		mov	#5, r1
 2173                             	.LVL265:
 2174 048c 05 00 00 00             		bsr	_REG_updateOldReg
 2175                             	.LVL266:
 613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			TempCycle_Stats.clockMM = DUMMY_CLOCK_VALUE;
 2176                             		.loc 1 613 0
 2177 0490 FB A2 00 00 00 00       		mov.L	#_TempCycle_Stats, r10
 2178 0496 F9 A4 07 00             		mov.B	#0, 7[r10]
 2179                             		.balign 2,3,2
 2180                             	.L209:
 622:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_ENERGY_REMOTE_CONTROL), &Join_Leave_Reg) == S_FALSE)
 2181                             		.loc 1 622 0
 2182 049a 75 41 6F                		mov	#0x6f, r1
 2183 049d FB 22 00 00 00 00       		mov.L	#_Join_Leave_Reg, r2
 2184 04a3 05 00 00 00             		bsr	_SPV_updateFunctionValue
 2185                             	.LVL267:
 2186 04a7 5B 11                   		movu.B	r1, r1
 2187 04a9 61 11                   		cmp	#1, r1
 2188 04ab 21 0B                   		bne	.L214
 624:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Join_Leave_Reg = JOIN_LEAVE_REG_DFLT_VALUE;
 2189                             		.loc 1 624 0
 2190 04ad FB A2 00 00 00 00       		mov.L	#_Join_Leave_Reg, r10
 2191 04b3 F8 A4 00                		mov.B	#0, [r10]
 2192                             		.balign 2,3,5
 2193                             	.L214:
 634:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) 
 2194                             		.loc 1 634 0
 2195 04b6 FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 2196 04bc CC AD                   		mov.B	[r10], r13
 2197 04be 64 FD                   		and #15, r13
 2198 04c0 61 1D                   		cmp	#1, r13
 2199 04c2 21 42                   		bne	.L215
 636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( DelayInMinutes != 0)
 2200                             		.loc 1 636 0
 2201 04c4 FB D2 00 00 00 00       		mov.L	#_DelayInMinutes, r13
 2202 04ca 5C DE                   		movu.W	[r13], r14
 2203 04cc 61 0E                   		cmp	#0, r14
 2204 04ce 3A 98 00                		beq	.L216
 639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( SPV_searchCycleByLabel(CMPLT_LBL_DELAY, &destinationCycle) == S_OK )
 2205                             		.loc 1 639 0
 2206 04d1 66 21                   		mov	#2, r1
 2207 04d3 71 02 12                		add	#18, r0, r2
 2208 04d6 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 2209                             	.LVL268:
 2210 04da 5B 19                   		movu.B	r1, r9
 2211 04dc 61 09                   		cmp	#0, r9
 2212 04de 21 21                   		bne	.L217
 643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				IncWordWithCheck(&MachineStatistics.globalStats.delayedCycles_Num);
 2213                             		.loc 1 643 0
 2214 04e0 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+66, r1
 2215 04e6 05 00 00 00             		bsr	_IncWordWithCheck
 2216                             	.LVL269:
 647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SPV_setupDelayCounter();
 2217                             		.loc 1 647 0
 2218 04ea 05 00 00 00             		bsr	_SPV_setupDelayCounter
 2219                             	.LVL270:
 650:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 2220                             		.loc 1 650 0
 2221 04ee C5 0A 12 01             		mov.B	18[r0], 1[r10]
 651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = StartedCycle;
 2222                             		.loc 1 651 0
 2223 04f2 FB D2 00 00 00 00       		mov.L	#_StartedCycle, r13
 2224 04f8 C4 DA 02                		mov.B	[r13], 2[r10]
 652:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));
 2225                             		.loc 1 652 0
 2226 04fb CF 91                   		mov.B	r9, r1
 2227 04fd 2E 65                   		bra	.L313
 2228                             	.L217:
 657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				DelayInMinutes = 0;
 2229                             		.loc 1 657 0
 2230 04ff F8 D5 00                		mov.W	#0, [r13]
 2231 0502 2E 64                   		bra	.L216
 2232                             	.L215:
 661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_DELAY )
 2233                             		.loc 1 661 0
 2234 0504 61 2D                   		cmp	#2, r13
 2235 0506 21 60                   		bne	.L216
 663:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( DelayInMinutes == 0)
 2236                             		.loc 1 663 0
 2237 0508 FB A2 00 00 00 00       		mov.L	#_DelayInMinutes, r10
 2238 050e 5C AA                   		movu.W	[r10], r10
 2239 0510 61 0A                   		cmp	#0, r10
 2240 0512 21 54                   		bne	.L216
 668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			retCode = REG_getFunctionValueByID((uint16_t)(FUNC_ID_CLOCK_HH), &tempFuncValue);
 2241                             		.loc 1 668 0
 2242 0514 66 41                   		mov	#4, r1
 2243 0516 71 02 10                		add	#16, r0, r2
 2244 0519 05 00 00 00             		bsr	_REG_getFunctionValueByID
 2245                             	.LVL271:
 669:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if (retCode == S_OK)
 2246                             		.loc 1 669 0
 2247 051d 5B 11                   		movu.B	r1, r1
 2248 051f FB D2 00 00 00 00       		mov.L	#_MachineStatistics, r13
 2249 0525 61 01                   		cmp	#0, r1
 2250 0527 1F                      		bne	.L218
 672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayHH = tempFuncValue+1;
 2251                             		.loc 1 672 0
 2252 0528 CD 0A 11                		mov.B	17[r0], r10
 2253 052b 62 1A                   		add	#1, r10
 2254 052d 03                      		.balign 2,3,5
 2255                             	.L218:
 680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayHH = DUMMY_CLOCK_VALUE;
 2256                             		.loc 1 680 0
 2257 052e C7 DA 88                		mov.B	r10, 136[r13]
 682:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			retCodeAux = REG_getFunctionValueByID((uint16_t)(FUNC_ID_CLOCK_MM), &tempFuncValue2);
 2258                             		.loc 1 682 0
 2259 0531 66 51                   		mov	#5, r1
 2260                             	.LVL272:
 2261 0533 71 02 0E                		add	#14, r0, r2
 2262 0536 05 00 00 00             		bsr	_REG_getFunctionValueByID
 2263                             	.LVL273:
 683:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( retCodeAux == S_OK )
 2264                             		.loc 1 683 0
 2265 053a 5B 11                   		movu.B	r1, r1
 2266 053c FB A2 00 00 00 00       		mov.L	#_MachineStatistics, r10
 2267 0542 61 01                   		cmp	#0, r1
 2268 0544 1A                      		bne	.L220
 685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayMM = tempFuncValue2+1;
 2269                             		.loc 1 685 0
 2270 0545 DD 0D 07                		mov.W	14[r0], r13
 2271 0548 62 1D                   		add	#1, r13
 2272                             	.LVL274:
 2273 054a C7 AD 89                		mov.B	r13, 137[r10]
 2274 054d 0D                      		bra	.L221
 2275                             	.L220:
 693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].delayMM = DUMMY_CLOCK_VALUE;
 2276                             		.loc 1 693 0
 2277 054e F9 A4 89 00             		mov.B	#0, 137[r10]
 2278                             		.balign 2,3,5
 2279                             	.L221:
 696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = Interpreter_Data[0].phase;
 2280                             		.loc 1 696 0
 2281 0552 FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 2282 0558 C5 AA 02 01             		mov.B	2[r10], 1[r10]
 697:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
 2283                             		.loc 1 697 0
 2284 055c F9 A4 02 00             		mov.B	#0, 2[r10]
 698:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));									
 2285                             		.loc 1 698 0
 2286 0560 66 01                   		mov	#0, r1
 2287                             	.LVL275:
 2288                             		.balign 2,3,3
 2289                             	.L313:
 2290 0562 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 2291                             	.LVL276:
 2292                             		.balign 2,3,3
 2293                             	.L216:
 708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 2294                             		.loc 1 708 0
 2295 0566 05 00 00 00             		bsr	_SPV_updateCycleLabel
 2296                             	.LVL277:
 2297                             	.LBB52:
 2298                             	.LBB53:
1562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
 2299                             		.loc 1 1562 0
 2300 056a FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 2301 0570 CC AA                   		mov.B	[r10], r10
 2302 0572 64 FA                   		and #15, r10
 2303 0574 61 2A                   		cmp	#2, r10
 2304 0576 20 14                   		beq	.L222
 2305 0578 61 4A                   		cmp	#4, r10
 2306 057a 21 18                   		bne	.L223
1563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	((Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE) && (Paused_Intpt_Data[0].completeLabel.s
 2307                             		.loc 1 1563 0
 2308 057c FB A2 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r10
 2309 0582 CC AA                   		mov.B	[r10], r10
 2310 0584 64 FA                   		and #15, r10
 2311 0586 61 2A                   		cmp	#2, r10
 2312 0588 1A                      		bne	.L223
 2313 0589 03                      		.balign 2,3,2
 2314                             	.L222:
1567:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SWTC_Run((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
 2315                             		.loc 1 1567 0
 2316 058a 75 41 15                		mov	#21, r1
 2317 058d 05 00 00 00             		bsr	_SWTC_Run
 2318                             	.LVL278:
 2319 0591 09                      		bra	.L224
 2320                             	.L223:
1571:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
 2321                             		.loc 1 1571 0
 2322 0592 75 41 15                		mov	#21, r1
 2323 0595 05 00 00 00             		bsr	_SWTC_Stop
 2324                             	.LVL279:
 2325 0599 03                      		.balign 2,3,2
 2326                             	.L224:
1574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER))
 2327                             		.loc 1 1574 0
 2328 059a 75 41 15                		mov	#21, r1
 2329 059d 05 00 00 00             		bsr	_SWTC_IsExpired
 2330                             	.LVL280:
 2331 05a1 61 01                   		cmp	#0, r1
 2332 05a3 20 1F                   		beq	.L225
1578:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( DelayInMinutes )
 2333                             		.loc 1 1578 0
 2334 05a5 FB A2 00 00 00 00       		mov.L	#_DelayInMinutes, r10
 2335 05ab DC AD                   		mov.W	[r10], r13
 2336 05ad 5F DE                   		movu.W	r13, r14
 2337 05af 61 0E                   		cmp	#0, r14
 2338 05b1 12                      		beq	.L226
1580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			DelayInMinutes --;
 2339                             		.loc 1 1580 0
 2340 05b2 60 1D                   		sub	#1, r13
 2341 05b4 D3 AD                   		mov.W	r13, [r10]
1581:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			SPV_setupDelayCounter();
 2342                             		.loc 1 1581 0
 2343 05b6 05 00 00 00             		bsr	_SPV_setupDelayCounter
 2344                             	.LVL281:
 2345 05ba 08                      		bra	.L225
 2346                             	.L226:
1586:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				(void)SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
 2347                             		.loc 1 1586 0
 2348 05bb 75 41 15                		mov	#21, r1
 2349 05be 05 00 00 00             		bsr	_SWTC_Stop
 2350                             	.LVL282:
 2351                             		.balign 2,3,5
 2352                             	.L225:
 2353                             	.LBE53:
 2354                             	.LBE52:
 728:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( CurrentFault[0].code != CODE_NO_FAULT )
 2355                             		.loc 1 728 0
 2356 05c2 FB D2 00 00 00 00       		mov.L	#_CurrentFault, r13
 2357 05c8 CC DE                   		mov.B	[r13], r14
 2358 05ca 5B E4                   		movu.B	r14, r4
 2359 05cc 61 04                   		cmp	#0, r4
 2360 05ce 20 52                   		beq	.L227
 731:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if( Interpreter_Data[0].completeLabel.s.label != LBL_FAULT )
 2361                             		.loc 1 731 0
 2362 05d0 FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 2363 05d6 CC A3                   		mov.B	[r10], r3
 2364 05d8 64 F3                   		and #15, r3
 2365 05da 61 53                   		cmp	#5, r3
 2366 05dc 20 2F                   		beq	.L228
 736:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if( SPV_searchCycleByLabel(CMPLT_LBL_FAULT, &destinationCycle) == S_OK )
 2367                             		.loc 1 736 0
 2368 05de 66 51                   		mov	#5, r1
 2369 05e0 71 02 12                		add	#18, r0, r2
 2370 05e3 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 2371                             	.LVL283:
 2372 05e7 5B 19                   		movu.B	r1, r9
 2373 05e9 61 09                   		cmp	#0, r9
 2374 05eb 21 1A                   		bne	.L229
 741:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				STC_updateLastCycleStat_END(1);
 2375                             		.loc 1 741 0
 2376 05ed 66 11                   		mov	#1, r1
 2377 05ef 05 00 00 00             		bsr	_STC_updateLastCycleStat_END
 2378                             	.LVL284:
 745:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 2379                             		.loc 1 745 0
 2380 05f3 C5 0A 12 01             		mov.B	18[r0], 1[r10]
 748:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = CurrentFault[0].code;
 2381                             		.loc 1 748 0
 2382 05f7 C4 DA 02                		mov.B	[r13], 2[r10]
 750:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));									
 2383                             		.loc 1 750 0
 2384 05fa CF 91                   		mov.B	r9, r1
 2385 05fc 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 2386                             	.LVL285:
 752:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].completeLabel.b = CMPLT_LBL_FAULT;
 2387                             		.loc 1 752 0
 2388 0600 F8 A4 05                		mov.B	#5, [r10]
 2389 0603 2E 19                   		bra	.L314
 2390                             	.L229:
 767:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SPV_generateColdReset();
 2391                             		.loc 1 767 0
 2392 0605 05 00 00 00             		bsr	_SPV_generateColdReset
 2393                             	.LVL286:
 2394 0609 2E 17                   		bra	.L227
 2395                             	.L228:
 773:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			if ( Interpreter_Data[0].phase != CurrentFault[0].code )
 2396                             		.loc 1 773 0
 2397 060b 59 AD 02                		movu.B	2[r10], r13
 2398 060e 47 4D                   		cmp	r4, r13
 2399 0610 20 10                   		beq	.L227
 776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = CurrentFault[0].code;   /*aggiornamento fase*/
 2400                             		.loc 1 776 0
 2401 0612 C7 AE 02                		mov.B	r14, 2[r10]
 778:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));	
 2402                             		.loc 1 778 0
 2403 0615 66 01                   		mov	#0, r1
 2404 0617 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 2405                             	.LVL287:
 2406 061b 03                      		.balign 2,3,3
 2407                             	.L314:
 780:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SPV_resetSensVariables();
 2408                             		.loc 1 780 0
 2409 061c 05 00 00 00             		bsr	_SPV_resetSensVariables
 2410                             	.LVL288:
 2411                             		.balign 2,3,2
 2412                             	.L227:
 802:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_BASKET), &DishRackFunctionValue) == S_FALSE)
 2413                             		.loc 1 802 0
 2414 0620 75 41 1C                		mov	#28, r1
 2415 0623 FB 22 00 00 00 00       		mov.L	#_DishRackFunctionValue, r2
 2416 0629 05 00 00 00             		bsr	_SPV_updateFunctionValue
 2417                             	.LVL289:
 2418 062d 5B 11                   		movu.B	r1, r1
 2419 062f 61 11                   		cmp	#1, r1
 2420 0631 21 0B                   		bne	.L230
 804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		DishRackFunctionValue = DISH_RACK_DFLT_VALUE;
 2421                             		.loc 1 804 0
 2422 0633 FB A2 00 00 00 00       		mov.L	#_DishRackFunctionValue, r10
 2423 0639 F8 A4 00                		mov.B	#0, [r10]
 2424                             		.balign 2,3,2
 2425                             	.L230:
 814:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_WATER_HARDNESS), &WaterForRegenerate) == S_FALSE)
 2426                             		.loc 1 814 0
 2427 063c 75 41 39                		mov	#57, r1
 2428 063f FB 22 00 00 00 00       		mov.L	#_WaterForRegenerate, r2
 2429 0645 05 00 00 00             		bsr	_SPV_updateFunctionValue
 2430                             	.LVL290:
 2431 0649 5B 11                   		movu.B	r1, r1
 2432 064b 61 11                   		cmp	#1, r1
 2433 064d 21 0B                   		bne	.L231
 816:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		WaterForRegenerate = REGENERATE_WATER_DFLT_VALUE;
 2434                             		.loc 1 816 0
 2435 064f FB A2 00 00 00 00       		mov.L	#_WaterForRegenerate, r10
 2436 0655 F8 A4 41                		mov.B	#0x41, [r10]
 2437                             		.balign 2,3,2
 2438                             	.L231:
 827:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_ZONE_WASH), &ZoneWashFunctionValue) == S_FALSE)
 2439                             		.loc 1 827 0
 2440 0658 75 41 3D                		mov	#61, r1
 2441 065b FB 22 00 00 00 00       		mov.L	#_ZoneWashFunctionValue, r2
 2442 0661 05 00 00 00             		bsr	_SPV_updateFunctionValue
 2443                             	.LVL291:
 2444 0665 5B 11                   		movu.B	r1, r1
 2445 0667 61 11                   		cmp	#1, r1
 2446 0669 21 0B                   		bne	.L232
 829:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		ZoneWashFunctionValue = ZONE_WASH_DFLT_VALUE;
 2447                             		.loc 1 829 0
 2448 066b FB A2 00 00 00 00       		mov.L	#_ZoneWashFunctionValue, r10
 2449 0671 F8 A4 00                		mov.B	#0, [r10]
 2450                             		.balign 2,3,2
 2451                             	.L232:
 839:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_RINSE_AID), &RinseAidFunctionValue) == S_FALSE)
 2452                             		.loc 1 839 0
 2453 0674 75 41 38                		mov	#56, r1
 2454 0677 FB 22 00 00 00 00       		mov.L	#_RinseAidFunctionValue, r2
 2455 067d 05 00 00 00             		bsr	_SPV_updateFunctionValue
 2456                             	.LVL292:
 2457 0681 61 11                   		cmp	#1, r1
 2458 0683 19                      		bne	.L233
 841:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		RinseAidFunctionValue = RINSE_AID_DFLT_VALUE;
 2459                             		.loc 1 841 0
 2460 0684 FB A2 00 00 00 00       		mov.L	#_RinseAidFunctionValue, r10
 2461 068a C3 A1                   		mov.B	r1, [r10]
 2462                             		.balign 2,3,1
 2463                             	.L233:
 852:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if ( started_cycle == TRUE )
 2464                             		.loc 1 852 0
 2465 068c 61 17                   		cmp	#1, r7
 2466 068e 21 16                   		bne	.L234
 854:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    if ( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 2467                             		.loc 1 854 0
 2468 0690 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 2469                             	.LVL293:
 2470 0696 CC 77                   		mov.B	[r7], r7
 2471 0698 76 27 F0 00             		and #0xf0, r7
 2472 069c 75 57 20                		cmp	#32, r7
 2473 069f 1D                      		bne	.L234
 857:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	      FLT_faultMgmtDataReset();  
 2474                             		.loc 1 857 0
 2475 06a0 05 00 00 00             		bsr	_FLT_faultMgmtDataReset
 2476                             	.LVL294:
 2477                             		.balign 2,3,5
 2478                             	.L234:
 862:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (uP_AltCtrl_Data.SV_invalid_4alt == TRUE) || !(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_V
 2479                             		.loc 1 862 0
 2480 06a4 FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 2481 06aa 89 77                   		mov.B	4[r7], r7
 2482 06ac FD 74 C7 01             		tst	#1, r7
 2483 06b0 21 14                   		bne	.L235
 862:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if( (uP_AltCtrl_Data.SV_invalid_4alt == TRUE) || !(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_V
 2484                             		.loc 1 862 0 is_stmt 0 discriminator 1
 2485 06b2 FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 2486 06b8 DC 77                   		mov.W	[r7], r7
 2487 06ba 76 27 00 04             		and #0x400, r7
 2488 06be 5F 77                   		movu.W	r7, r7
 2489 06c0 61 07                   		cmp	#0, r7
 2490 06c2 21 0D                   		bne	.L236
 2491                             		.balign 2,3,5
 2492                             	.L235:
 864:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=0xFF;
 2493                             		.loc 1 864 0 is_stmt 1
 2494 06c4 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value_jumpifcopy, r7
 2495 06ca F8 74 FF                		mov.B	#-1, [r7]
 2496 06cd 2E 11                   		bra	.L237
 2497                             	.L236:
 868:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WA
 2498                             		.loc 1 868 0
 2499 06cf FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 2500 06d5 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value_jumpifcopy, r7
 2501 06db C0 A7                   		mov.B	[r10], [r7]
 2502 06dd 03                      		.balign 2,3,5
 2503                             	.L237:
 872:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if(!(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_DRAIN))) )
 2504                             		.loc 1 872 0
 2505 06de FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 2506 06e4 DC 7A                   		mov.W	[r7], r10
 2507 06e6 76 2A 00 08             		and #0x800, r10
 2508 06ea 5F AA                   		movu.W	r10, r10
 2509 06ec FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value_jumpifcopy, r7
 2510 06f2 61 0A                   		cmp	#0, r10
 2511 06f4 1F                      		bne	.L238
 874:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=0xFF;
 2512                             		.loc 1 874 0
 2513 06f5 F9 74 01 FF             		mov.B	#-1, 1[r7]
 2514 06f9 2E 0D                   		bra	.L239
 2515                             	.L238:
 878:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_D
 2516                             		.loc 1 878 0
 2517 06fb FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 2518 0701 C5 A7 01 01             		mov.B	1[r10], 1[r7]
 2519 0705 03                      		.balign 2,3,3
 2520                             	.L239:
 887:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	interpreterResult = ITP_programFlowInterpreter();
 2521                             		.loc 1 887 0
 2522 0706 05 00 00 00             		bsr	_ITP_programFlowInterpreter
 2523                             	.LVL295:
 2524 070a CF 1A                   		mov.B	r1, r10
 2525                             	.LVL296:
 889:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if((interpreterResult & ERR_CODE) == 0)
 2526                             		.loc 1 889 0
 2527 070c CF 17                   		mov.B	r1, r7
 2528 070e 61 07                   		cmp	#0, r7
 2529 0710 28 05 38 3D 03          		blt	.L240
 892:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_updateCycleLabel();
 2530                             		.loc 1 892 0
 2531 0715 05 00 00 00             		bsr	_SPV_updateCycleLabel
 2532                             	.LVL297:
 896:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		if(Interpreter_Data[0].completeLabel.s.label == LBL_RUN) {
 2533                             		.loc 1 896 0
 2534 0719 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 2535 071f CC 77                   		mov.B	[r7], r7
 2536 0721 64 F7                   		and #15, r7
 2537 0723 61 17                   		cmp	#1, r7
 2538 0725 21 18                   		bne	.L241
 898:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			PM_PowerProfile_SetDuration(1, (PM_PowerProfile_DurationType)SWTC_GetElapsedTime(PP_ENPHELAPSEDT
 2539                             		.loc 1 898 0
 2540 0727 75 41 2B                		mov	#43, r1
 2541 072a 05 00 00 00             		bsr	_SWTC_GetElapsedTime
 2542                             	.LVL298:
 2543 072e EF 12                   		mov.L	r1, r2
 2544 0730 CF 71                   		mov.B	r7, r1
 2545 0732 05 00 00 00             		bsr	_PM_PowerProfile_SetDuration
 2546                             	.LVL299:
 900:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			PM_PowerProfile_SetForceReload(1);
 2547                             		.loc 1 900 0
 2548 0736 CF 71                   		mov.B	r7, r1
 2549 0738 05 00 00 00             		bsr	_PM_PowerProfile_SetForceReload
 2550                             	.LVL300:
 2551 073c 08                      		bra	.L242
 2552                             	.L241:
 904:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			PM_PowerProfile_ResetForceReload(1);
 2553                             		.loc 1 904 0
 2554 073d 66 11                   		mov	#1, r1
 2555 073f 05 00 00 00             		bsr	_PM_PowerProfile_ResetForceReload
 2556                             	.LVL301:
 2557 0743 03                      		.balign 2,3,1
 2558                             	.L242:
 909:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		switch( interpreterResult )
 2559                             		.loc 1 909 0
 2560 0744 5B A1                   		movu.B	r10, r1
 2561 0746 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 2562 074c 61 31                   		cmp	#3, r1
 2563 074e 24 0F                   		bgtu	.L247
 2564 0750 61 21                   		cmp	#2, r1
 2565 0752 23 05 38 22 01          		bgeu	.L245
 2566 0757 61 11                   		cmp	#1, r1
 2567 0759 3B FB 02                		bne	.L243
 2568 075c 09                      		bra	.L244
 2569                             	.L247:
 2570 075d 61 51                   		cmp	#5, r1
 2571 075f 3B F5 02                		bne	.L243
 2572 0762 38 B0 01                		bra	.L246
 2573                             	.L244:
 915:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
 2574                             		.loc 1 915 0
 2575 0765 88 79                   		mov.B	1[r7], r1
 2576 0767 89 7A                   		mov.B	5[r7], r2
 2577 0769 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 2578                             	.LVL302:
 2579 076d EF 1D                   		mov.L	r1, r13
 917:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if(Interpreter_Data[0].completeLabel.s.label == LBL_RUN) {
 2580                             		.loc 1 917 0
 2581 076f CC 79                   		mov.B	[r7], r9
 2582 0771 64 F9                   		and #15, r9
 2583 0773 61 19                   		cmp	#1, r9
 2584 0775 3B F0 00                		bne	.L248
 919:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
 2585                             		.loc 1 919 0
 2586 0778 75 41 2C                		mov	#44, r1
 2587 077b 05 00 00 00             		bsr	_SWTC_IsStopped
 2588                             	.LVL303:
 2589 077f 71 1A 00                		add	#0, r1, r10
 2590                             	.LVL304:
 2591 0782 21 3F                   		bne	.L249
 920:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if (SWTC_IsExpired(PP_TIMEBTWPHASES_COUNTER)) {
 2592                             		.loc 1 920 0
 2593 0784 75 41 2C                		mov	#44, r1
 2594 0787 05 00 00 00             		bsr	_SWTC_IsExpired
 2595                             	.LVL305:
 2596 078b 61 01                   		cmp	#0, r1
 2597 078d 20 2D                   		beq	.L250
 923:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase++;
 2598                             		.loc 1 923 0
 2599 078f CD 7E 02                		mov.B	2[r7], r14
 2600 0792 62 1E                   		add	#1, r14
 2601 0794 C7 7E 02                		mov.B	r14, 2[r7]
 924:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 2602                             		.loc 1 924 0
 2603 0797 75 41 2C                		mov	#44, r1
 2604 079a 05 00 00 00             		bsr	_SWTC_Stop
 2605                             	.LVL306:
 925:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Data
 2606                             		.loc 1 925 0
 2607 079e 88 F3                   		mov.B	2[r7], r3
 2608 07a0 89 7C                   		mov.B	5[r7], r4
 2609 07a2 C3 0A                   		mov.B	r10, [r0]
 2610 07a4 C7 0A 01                		mov.B	r10, 1[r0]
 2611 07a7 FB 72 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r7
 2612 07ad C4 70 02                		mov.B	[r7], 2[r0]
 2613 07b0 CF A1                   		mov.B	r10, r1
 2614 07b2 CF D2                   		mov.B	r13, r2
 2615 07b4 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 2616                             	.LVL307:
 2617 07b8 C3 71                   		mov.B	r1, [r7]
 2618                             		.balign 2,3,3
 2619                             	.L250:
 936:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							ITP_loadsMgmt();
 2620                             		.loc 1 936 0
 2621 07ba 05 00 00 00             		bsr	_ITP_loadsMgmt
 2622                             	.LVL308:
 2623 07be 38 96 02                		bra	.L243
 2624                             	.L249:
 2625                             	.LBB54:
 942:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						bool_t newEnergyPhase = FALSE;
 2626                             		.loc 1 942 0
 2627 07c1 3E 02 00                		mov.L	#0, 8[r0]
 2628                             	.LVL309:
 943:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						uint16_t maxActivationDelay = 0x0000;
 2629                             		.loc 1 943 0
 2630 07c4 3D 06 00                		mov.W	#0, 12[r0]
 2631                             	.LVL310:
 947:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										(/*powerProfileID*/ 1,
 2632                             		.loc 1 947 0
 2633 07c7 88 F3                   		mov.B	2[r7], r3
 2634 07c9 89 7C                   		mov.B	5[r7], r4
 2635 07cb 66 8E                   		mov.L	#8, r14
 2636 07cd 4B 0E                   		add	r0, r14
 2637 07cf E3 0E                   		mov.L	r14, [r0]
 2638 07d1 71 0A 0C                		add	#12, r0, r10
 2639 07d4 E7 0A 01                		mov.L	r10, 4[r0]
 2640 07d7 CF 91                   		mov.B	r9, r1
 2641 07d9 CF D2                   		mov.B	r13, r2
 2642 07db 05 00 00 00             		bsr	_PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
 2643                             	.LVL311:
 2644 07df EF 19                   		mov.L	r1, r9
 946:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if (PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
 2645                             		.loc 1 946 0
 2646 07e1 71 18 00                		add	#0, r1, r8
 2647 07e4 3B 70 02                		bne	.L243
 958:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if (newEnergyPhase == TRUE) {
 2648                             		.loc 1 958 0
 2649 07e7 ED 0A 02                		mov.L	8[r0], r10
 2650 07ea 61 1A                   		cmp	#1, r10
 2651 07ec 3B 68 02                		bne	.L243
 2652                             	.LVL312:
 961:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 2653                             		.loc 1 961 0
 2654 07ef CF A1                   		mov.B	r10, r1
 2655 07f1 75 42 2B                		mov	#43, r2
 2656 07f4 66 63                   		mov	#6, r3
 2657 07f6 05 00 00 00             		bsr	_Set_UpCounter
 2658                             	.LVL313:
 962:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 2659                             		.loc 1 962 0
 2660 07fa CF A1                   		mov.B	r10, r1
 2661 07fc 75 42 2D                		mov	#45, r2
 2662 07ff 66 63                   		mov	#6, r3
 2663 0801 05 00 00 00             		bsr	_Set_UpCounter
 2664                             	.LVL314:
 963:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	              				SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
 2665                             		.loc 1 963 0
 2666 0805 75 41 2B                		mov	#43, r1
 2667 0808 05 00 00 00             		bsr	_SWTC_Run
 2668                             	.LVL315:
 964:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	              				SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 2669                             		.loc 1 964 0
 2670 080c 75 41 2D                		mov	#45, r1
 2671 080f 05 00 00 00             		bsr	_SWTC_Run
 2672                             	.LVL316:
 966:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								uiSavedEnPhElapsedTime_Counter = 0;
 2673                             		.loc 1 966 0
 2674 0813 FB E2 00 00 00 00       		mov.L	#_uiSavedEnPhElapsedTime_Counter, r14
 2675 0819 C3 E9                   		mov.B	r9, [r14]
 970:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								if (maxActivationDelay != 0) {
 2676                             		.loc 1 970 0
 2677 081b B9 81                   		movu.W	12[r0], r1
 2678                             	.LVL317:
 971:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Da
 2679                             		.loc 1 971 0
 2680 081d 88 F3                   		mov.B	2[r7], r3
 2681 081f 89 7C                   		mov.B	5[r7], r4
 970:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								if (maxActivationDelay != 0) {
 2682                             		.loc 1 970 0
 2683 0821 61 01                   		cmp	#0, r1
 2684                             	.LVL318:
 2685 0823 20 30                   		beq	.L252
 971:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Da
 2686                             		.loc 1 971 0
 2687 0825 C3 09                   		mov.B	r9, [r0]
 2688 0827 C7 0A 01                		mov.B	r10, 1[r0]
 2689 082a FB 92 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r9
 2690 0830 C4 90 02                		mov.B	[r9], 2[r0]
 2691 0833 CF 81                   		mov.B	r8, r1
 2692                             	.LVL319:
 2693 0835 CF D2                   		mov.B	r13, r2
 2694 0837 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 2695                             	.LVL320:
 2696 083b C3 91                   		mov.B	r1, [r9]
 975:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Interpreter_Data[0].phase--;
 2697                             		.loc 1 975 0
 2698 083d CD 7D 02                		mov.B	2[r7], r13
 2699 0840 60 1D                   		sub	#1, r13
 2700 0842 C7 7D 02                		mov.B	r13, 2[r7]
 977:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Set_UpCounter(SHORT_COUNTER, PP_TIMEBTWPHASES_COUNTER, COUNTERS2_TBASE_1MIN); /*AE TODO ve
 2701                             		.loc 1 977 0
 2702 0845 CF A1                   		mov.B	r10, r1
 2703 0847 75 42 2C                		mov	#44, r2
 2704 084a 66 63                   		mov	#6, r3
 2705 084c 05 00 00 00             		bsr	_Set_UpCounter
 2706                             	.LVL321:
 2707 0850 38 E6 01                		bra	.L317
 2708                             	.LVL322:
 2709                             	.L252:
 981:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Da
 2710                             		.loc 1 981 0
 2711 0853 C3 01                   		mov.B	r1, [r0]
 2712 0855 80 09                   		mov.B	r1, 1[r0]
 2713 0857 FB 72 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r7
 2714 085d C4 70 02                		mov.B	[r7], 2[r0]
 2715 0860 CF D2                   		mov.B	r13, r2
 2716 0862 38 30 01                		bra	.L315
 2717                             	.LVL323:
 2718                             	.L248:
 2719                             	.LBE54:
1000:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase --;
 2720                             		.loc 1 1000 0
 2721 0865 CD 7A 02                		mov.B	2[r7], r10
 2722                             	.LVL324:
 2723 0868 60 1A                   		sub	#1, r10
 2724 086a C7 7A 02                		mov.B	r10, 2[r7]
1001:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));									
 2725                             		.loc 1 1001 0
 2726 086d 66 01                   		mov	#0, r1
 2727 086f 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 2728                             	.LVL325:
 2729 0873 38 E1 01                		bra	.L243
 2730                             	.LVL326:
 2731                             	.L245:
1010:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label != LBL_RUN )
 2732                             		.loc 1 1010 0
 2733 0876 CC 7A                   		mov.B	[r7], r10
 2734                             	.LVL327:
 2735 0878 64 FA                   		and #15, r10
 2736 087a 61 1A                   		cmp	#1, r10
 2737 087c 20 0E                   		beq	.L253
1012:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  if (Interpreter_Data[0].completeLabel.s.label != LBL_FAULT)
 2738                             		.loc 1 1012 0
 2739 087e 61 5A                   		cmp	#5, r10
 2740 0880 20 6E                   		beq	.L254
1016:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****   					ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));
 2741                             		.loc 1 1016 0
 2742 0882 66 01                   		mov	#0, r1
 2743                             	.LVL328:
 2744 0884 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 2745                             	.LVL329:
 2746 0888 2E 66                   		bra	.L254
 2747                             	.LVL330:
 2748                             	.L253:
1024:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_END, &destinationCycle) == S_OK )
 2749                             		.loc 1 1024 0
 2750 088a 66 31                   		mov	#3, r1
 2751                             	.LVL331:
 2752 088c 71 02 12                		add	#18, r0, r2
 2753 088f 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 2754                             	.LVL332:
 2755 0893 5B 11                   		movu.B	r1, r1
 2756 0895 61 01                   		cmp	#0, r1
 2757 0897 21 52                   		bne	.L255
1028:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						STC_updateLastCycleStat_END(0);
 2758                             		.loc 1 1028 0
 2759 0899 05 00 00 00             		bsr	_STC_updateLastCycleStat_END
 2760                             	.LVL333:
1032:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			            if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 2761                             		.loc 1 1032 0
 2762 089d CC 77                   		mov.B	[r7], r7
 2763 089f 76 27 F0 00             		and #0xf0, r7
 2764 08a3 75 57 20                		cmp	#32, r7
 2765 08a6 21 14                   		bne	.L256
1034:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			                FLT_lastFaultUpdate(No_Fault, &MachineStatistics.lastFault[0]);
 2766                             		.loc 1 1034 0
 2767 08a8 FB 72 00 00 00 00       		mov.L	#_No_Fault, r7
 2768 08ae D0 70                   		mov.W	[r7], [r0]
 2769 08b0 FB 22 00 00 00 00       		mov.L	#_MachineStatistics+352, r2
 2770 08b6 05 00 00 00             		bsr	_FLT_lastFaultUpdate
 2771                             	.LVL334:
 2772                             		.balign 2,3,5
 2773                             	.L256:
1039:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = StartedCycle;
 2774                             		.loc 1 1039 0
 2775 08ba FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 2776 08c0 FB A2 00 00 00 00       		mov.L	#_StartedCycle, r10
 2777 08c6 C4 A7 02                		mov.B	[r10], 2[r7]
1047:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].cycle = destinationCycle;
 2778                             		.loc 1 1047 0
 2779 08c9 C5 07 12 01             		mov.B	18[r0], 1[r7]
1048:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));										
 2780                             		.loc 1 1048 0
 2781 08cd 66 01                   		mov	#0, r1
 2782 08cf 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 2783                             	.LVL335:
1050:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_END;
 2784                             		.loc 1 1050 0
 2785 08d3 3C 70 03                		mov.B	#3, [r7]
 2786                             	.LBB55:
 2787                             	.LBB56:
2062:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
 2788                             		.loc 1 2062 0
 2789 08d6 FB 72 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r7
 2790 08dc 3C 70 00                		mov.B	#0, [r7]
2063:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp[0] = 0;
 2791                             		.loc 1 2063 0
 2792 08df FB 72 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r7
 2793 08e5 3C 70 00                		mov.B	#0, [r7]
 2794 08e8 0E                      		bra	.L254
 2795                             	.L255:
 2796                             	.LBE56:
 2797                             	.LBE55:
1069:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						SPV_generateColdReset(); /*ForceColdReset();*/
 2798                             		.loc 1 1069 0
 2799 08e9 05 00 00 00             		bsr	_SPV_generateColdReset
 2800                             	.LVL336:
 2801 08ed 03                      		.balign 2,3,2
 2802                             	.L254:
1081:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         SWTC_Stop(PP_ENPHELAPSEDTIME_UPCOUNTER);
 2803                             		.loc 1 1081 0
 2804 08ee 75 41 2B                		mov	#43, r1
 2805 08f1 05 00 00 00             		bsr	_SWTC_Stop
 2806                             	.LVL337:
1082:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 2807                             		.loc 1 1082 0
 2808 08f5 75 41 2D                		mov	#45, r1
 2809 08f8 05 00 00 00             		bsr	_SWTC_Stop
 2810                             	.LVL338:
1083:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****         SWTC_SetSValue(PP_ENPHELAPSEDTIME_UPCOUNTER, INT8_T_MAX);
 2811                             		.loc 1 1083 0
 2812 08fc 75 41 2B                		mov	#43, r1
 2813 08ff 75 42 7F                		mov	#0x7f, r2
 2814 0902 05 00 00 00             		bsr	_SWTC_SetSValue
 2815                             	.LVL339:
1086:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				uiSavedEnPhElapsedTime_Counter = 0;
 2816                             		.loc 1 1086 0
 2817 0906 FB 72 00 00 00 00       		mov.L	#_uiSavedEnPhElapsedTime_Counter, r7
 2818 090c 3C 70 00                		mov.B	#0, [r7]
1089:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			break;
 2819                             		.loc 1 1089 0
 2820 090f 38 45 01                		bra	.L243
 2821                             	.LVL340:
 2822                             	.L246:
1099:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if (( bkp_CompItpDataCycle == Interpreter_Data[0].cycle ) &&
 2823                             		.loc 1 1099 0
 2824 0912 88 79                   		mov.B	1[r7], r1
 2825 0914 FB A2 00 00 00 00       		mov.L	#_bkp_CompItpDataCycle, r10
 2826                             	.LVL341:
 2827 091a 58 AD                   		movu.B	[r10], r13
 2828 091c 5B 1A                   		movu.B	r1, r10
 2829 091e 47 AD                   		cmp	r10, r13
 2830 0920 21 1E                   		bne	.L257
1099:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				if (( bkp_CompItpDataCycle == Interpreter_Data[0].cycle ) &&
 2831                             		.loc 1 1099 0 is_stmt 0 discriminator 1
 2832 0922 FB A2 00 00 00 00       		mov.L	#_bkp_CompItpDataPhase, r10
 2833 0928 58 AD                   		movu.B	[r10], r13
 2834 092a 45 7D 02                		cmp	2[r7].UB, r13
 2835 092d 21 11                   		bne	.L257
1100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					( bkp_CompItpDataPhase == Interpreter_Data[0].phase ) &&
 2836                             		.loc 1 1100 0 is_stmt 1
 2837 092f FB A2 00 00 00 00       		mov.L	#_bkp_CompItpDatamSetting, r10
 2838 0935 58 AA                   		movu.B	[r10], r10
 2839 0937 45 7A 05                		cmp	5[r7].UB, r10
 2840 093a 3A 1A 01                		beq	.L243
 2841 093d 03                      		.balign 2,3,5
 2842                             	.L257:
1107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					index = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSetting);
 2843                             		.loc 1 1107 0
 2844 093e FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 2845 0944 89 7A                   		mov.B	5[r7], r2
 2846 0946 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 2847                             	.LVL342:
 2848 094a EF 1A                   		mov.L	r1, r10
1109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					if(Interpreter_Data[0].completeLabel.s.label == LBL_RUN) {
 2849                             		.loc 1 1109 0
 2850 094c CC 79                   		mov.B	[r7], r9
 2851 094e 64 F9                   		and #15, r9
 2852 0950 61 19                   		cmp	#1, r9
 2853 0952 3B 02 01                		bne	.L243
1111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						if ( ! SWTC_IsStopped(PP_TIMEBTWPHASES_COUNTER)) {
 2854                             		.loc 1 1111 0
 2855 0955 75 41 2C                		mov	#44, r1
 2856 0958 05 00 00 00             		bsr	_SWTC_IsStopped
 2857                             	.LVL343:
 2858 095c 71 1D 00                		add	#0, r1, r13
 2859 095f 21 3C                   		bne	.L259
1112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if (SWTC_IsExpired(PP_TIMEBTWPHASES_COUNTER)) {
 2860                             		.loc 1 1112 0
 2861 0961 75 41 2C                		mov	#44, r1
 2862 0964 05 00 00 00             		bsr	_SWTC_IsExpired
 2863                             	.LVL344:
 2864 0968 61 01                   		cmp	#0, r1
 2865 096a 3A EA 00                		beq	.L243
1115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								Interpreter_Data[0].phase++;
 2866                             		.loc 1 1115 0
 2867 096d CD 7E 02                		mov.B	2[r7], r14
 2868 0970 62 1E                   		add	#1, r14
 2869 0972 C7 7E 02                		mov.B	r14, 2[r7]
1116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								SWTC_Stop(PP_TIMEBTWPHASES_COUNTER);
 2870                             		.loc 1 1116 0
 2871 0975 75 41 2C                		mov	#44, r1
 2872 0978 05 00 00 00             		bsr	_SWTC_Stop
 2873                             	.LVL345:
1117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_Dat
 2874                             		.loc 1 1117 0
 2875 097c 88 F3                   		mov.B	2[r7], r3
 2876 097e 89 7C                   		mov.B	5[r7], r4
 2877 0980 C3 0D                   		mov.B	r13, [r0]
 2878 0982 C7 0D 01                		mov.B	r13, 1[r0]
 2879 0985 FB 72 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r7
 2880 098b C4 70 02                		mov.B	[r7], 2[r0]
 2881 098e CF D1                   		mov.B	r13, r1
 2882                             	.LVL346:
 2883                             		.balign 2,3,1
 2884                             	.L316:
 2885 0990 CF A2                   		mov.B	r10, r2
 2886                             	.LVL347:
 2887                             		.balign 2,3,3
 2888                             	.L315:
 2889 0992 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 2890                             	.LVL348:
 2891 0996 C3 71                   		mov.B	r1, [r7]
 2892 0998 38 BC 00                		bra	.L243
 2893                             	.LVL349:
 2894                             	.L259:
 2895                             	.LBB57:
1127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 						(/*powerProfileID*/ 1,
 2896                             		.loc 1 1127 0
 2897 099b 88 F3                   		mov.B	2[r7], r3
 2898 099d 89 7C                   		mov.B	5[r7], r4
 2899 099f 66 8D                   		mov.L	#8, r13
 2900 09a1 4B 0D                   		add	r0, r13
 2901 09a3 E3 0D                   		mov.L	r13, [r0]
 2902 09a5 71 0D 0C                		add	#12, r0, r13
 2903 09a8 E7 0D 01                		mov.L	r13, 4[r0]
 2904 09ab CF 91                   		mov.B	r9, r1
 2905 09ad CF A2                   		mov.B	r10, r2
 2906 09af 05 00 00 00             		bsr	_PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
 2907                             	.LVL350:
 2908 09b3 EF 19                   		mov.L	r1, r9
1126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 							if (PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
 2909                             		.loc 1 1126 0
 2910 09b5 71 18 00                		add	#0, r1, r8
 2911 09b8 3B 9C 00                		bne	.L243
 2912                             	.LVL351:
1138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								if (newEnergyPhase == TRUE) {
 2913                             		.loc 1 1138 0
 2914 09bb ED 0D 02                		mov.L	8[r0], r13
 2915 09be 61 1D                   		cmp	#1, r13
 2916 09c0 3B 94 00                		bne	.L243
 2917                             	.LVL352:
1140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Set_UpCounter(SHORT_COUNTER, PP_ENPHELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 2918                             		.loc 1 1140 0
 2919 09c3 CF D1                   		mov.B	r13, r1
 2920 09c5 75 42 2B                		mov	#43, r2
 2921 09c8 66 63                   		mov	#6, r3
 2922 09ca 05 00 00 00             		bsr	_Set_UpCounter
 2923                             	.LVL353:
1141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN)
 2924                             		.loc 1 1141 0
 2925 09ce CF D1                   		mov.B	r13, r1
 2926 09d0 75 42 2D                		mov	#45, r2
 2927 09d3 66 63                   		mov	#6, r3
 2928 09d5 05 00 00 00             		bsr	_Set_UpCounter
 2929                             	.LVL354:
1142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									SWTC_Run(PP_ENPHELAPSEDTIME_UPCOUNTER);
 2930                             		.loc 1 1142 0
 2931 09d9 75 41 2B                		mov	#43, r1
 2932 09dc 05 00 00 00             		bsr	_SWTC_Run
 2933                             	.LVL355:
1143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 								    SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 2934                             		.loc 1 1143 0
 2935 09e0 75 41 2D                		mov	#45, r1
 2936 09e3 05 00 00 00             		bsr	_SWTC_Run
 2937                             	.LVL356:
1145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									uiSavedEnPhElapsedTime_Counter = 0;
 2938                             		.loc 1 1145 0
 2939 09e7 FB E2 00 00 00 00       		mov.L	#_uiSavedEnPhElapsedTime_Counter, r14
 2940 09ed C3 E9                   		mov.B	r9, [r14]
 2941                             	.LVL357:
1149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									if (maxActivationDelay != 0) {
 2942                             		.loc 1 1149 0
 2943 09ef B9 81                   		movu.W	12[r0], r1
 2944                             	.LVL358:
1150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_D
 2945                             		.loc 1 1150 0
 2946 09f1 88 F3                   		mov.B	2[r7], r3
 2947 09f3 89 7C                   		mov.B	5[r7], r4
1149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 									if (maxActivationDelay != 0) {
 2948                             		.loc 1 1149 0
 2949 09f5 61 01                   		cmp	#0, r1
 2950                             	.LVL359:
 2951 09f7 20 48                   		beq	.L261
1150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_D
 2952                             		.loc 1 1150 0
 2953 09f9 C3 09                   		mov.B	r9, [r0]
 2954 09fb C7 0D 01                		mov.B	r13, 1[r0]
 2955 09fe FB D2 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r13
 2956                             	.LVL360:
 2957 0a04 C4 D0 02                		mov.B	[r13], 2[r0]
 2958 0a07 CF 81                   		mov.B	r8, r1
 2959                             	.LVL361:
 2960 0a09 CF A2                   		mov.B	r10, r2
 2961 0a0b 05 00 00 00             		bsr	_PM_PowerProfile_UpdatePowerProfileStatus
 2962                             	.LVL362:
 2963 0a0f C3 D1                   		mov.B	r1, [r13]
1154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].cycle = bkp_CompItpDataCycle;
 2964                             		.loc 1 1154 0
 2965 0a11 FB A2 00 00 00 00       		mov.L	#_bkp_CompItpDataCycle, r10
 2966 0a17 C4 A7 01                		mov.B	[r10], 1[r7]
1155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].phase = bkp_CompItpDataPhase;
 2967                             		.loc 1 1155 0
 2968 0a1a FB A2 00 00 00 00       		mov.L	#_bkp_CompItpDataPhase, r10
 2969 0a20 C4 A7 02                		mov.B	[r10], 2[r7]
1156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].mSetting= bkp_CompItpDatamSetting;
 2970                             		.loc 1 1156 0
 2971 0a23 FB A2 00 00 00 00       		mov.L	#_bkp_CompItpDatamSetting, r10
 2972 0a29 C4 A7 05                		mov.B	[r10], 5[r7]
1157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										Interpreter_Data[0].first_statement = bkp_CompItpDataFirstStatement;
 2973                             		.loc 1 1157 0
 2974 0a2c FB A2 00 00 00 00       		mov.L	#_bkp_CompItpDataFirstStatement, r10
 2975 0a32 C4 A7 03                		mov.B	[r10], 3[r7]
 2976                             	.LVL363:
 2977 0a35 03                      		.balign 2,3,2
 2978                             	.L317:
1159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										SWTC_Run(PP_TIMEBTWPHASES_COUNTER);
 2979                             		.loc 1 1159 0
 2980 0a36 75 41 2C                		mov	#44, r1
 2981 0a39 05 00 00 00             		bsr	_SWTC_Run
 2982                             	.LVL364:
 2983 0a3d 2E 17                   		bra	.L243
 2984                             	.LVL365:
 2985                             	.L261:
1162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 										ApplPowerProfileStatus = PM_PowerProfile_UpdatePowerProfileStatus(0, index, Interpreter_D
 2986                             		.loc 1 1162 0
 2987 0a3f C3 01                   		mov.B	r1, [r0]
 2988 0a41 80 09                   		mov.B	r1, 1[r0]
 2989 0a43 FB 72 00 00 00 00       		mov.L	#_ApplPowerProfileStatus, r7
 2990 0a49 C4 70 02                		mov.B	[r7], 2[r0]
 2991 0a4c 38 44 FF                		bra	.L316
 2992                             	.LVL366:
 2993                             	.L240:
 2994                             	.LBE57:
1189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_generateColdReset();
 2995                             		.loc 1 1189 0
 2996 0a4f 05 00 00 00             		bsr	_SPV_generateColdReset
 2997                             	.LVL367:
 2998 0a53 03                      		.balign 2,3,3
 2999                             	.L243:
1195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	STC_superVisorUpdateStatistics();
 3000                             		.loc 1 1195 0
 3001 0a54 05 00 00 00             		bsr	_STC_superVisorUpdateStatistics
 3002                             	.LVL368:
1206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c ****     REG_updateFuncToMainOldReg();
 3003                             		.loc 1 1206 0
 3004 0a58 05 00 00 00             		bsr	_REG_updateFuncToMainOldReg
 3005                             	.LVL369:
1209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	memcpy(&BufOldReg[FUNC_NUM_TO_MAIN], &BufNewReg[FUNC_NUM_TO_MAIN], (uint8_t)(FUNC_NUM_ALL - FUNC_N
 3006                             		.loc 1 1209 0
 3007 0a5c FB 72 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r7
 3008 0a62 EC 7A                   		mov.L	[r7], r10
 3009                             	.LVL370:
 3010 0a64 CC A7                   		mov.B	[r10], r7
 3011 0a66 5B 72                   		movu.B	r7, r2
 3012 0a68 CD AA 01                		mov.B	1[r10], r10
 3013 0a6b FF 03 7A                		sub	r7, r10, r3
 3014 0a6e 70 21 00 00 00 00       		add	#_BufOldReg, r2, r1
 3015 0a74 70 22 00 00 00 00       		add	#_BufNewReg, r2
 3016 0a7a 5B 33                   		movu.B	r3, r3
 3017 0a7c 7F 8F                   		smovf
1224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
 3018                             		.loc 1 1224 0
 3019 0a7e FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
1226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    || ( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 3020                             		.loc 1 1226 0
 3021 0a84 CC 77                   		mov.B	[r7], r7
1224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	if (( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
 3022                             		.loc 1 1224 0
 3023 0a86 64 F7                   		and #15, r7
 3024 0a88 61 27                   		cmp	#2, r7
 3025 0a8a 25 0A                   		bleu	.L262
1227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    || ( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
 3026                             		.loc 1 1227 0
 3027 0a8c 61 57                   		cmp	#5, r7
 3028 0a8e 16                      		beq	.L262
1228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	    || ( Interpreter_Data[0].completeLabel.s.label == LBL_END )
 3029                             		.loc 1 1228 0
 3030 0a8f 61 37                   		cmp	#3, r7
 3031 0a91 21 0D                   		bne	.L263
 3032 0a93 03                      		.balign 2,3,5
 3033                             	.L262:
1231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		EnergyPause_Status=PP_ENERGYPAUSE_STATUS_NO_PAUSE;
 3034                             		.loc 1 1231 0
 3035 0a94 FB 72 00 00 00 00       		mov.L	#_EnergyPause_Status, r7
 3036 0a9a 3C 70 00                		mov.B	#0, [r7]
 3037 0a9d 03                      		.balign 2,3,1
 3038                             	.L263:
1236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		SPV_updatePowerProfile(oldLabel, oldPhase);
 3039                             		.loc 1 1236 0
 3040 0a9e CF B1                   		mov.B	r11, r1
 3041 0aa0 CF C2                   		mov.B	r12, r2
 3042 0aa2 05 00 00 00             		bsr	_SPV_updatePowerProfile
 3043                             	.LVL371:
 3044                             	.LBB58:
 3045                             	.LBB59:
2474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 		switch ( Interpreter_Data[0].completeLabel.s.label )
 3046                             		.loc 1 2474 0
 3047 0aa6 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 3048 0aac CC 77                   		mov.B	[r7], r7
 3049 0aae 64 F7                   		and #15, r7
 3050 0ab0 61 57                   		cmp	#5, r7
 3051 0ab2 25 05 38 CC 00          		bgtu	.L264
 3052 0ab7 FB A2 1C 00 00 00       		mov.L	#.L269, r10
 3053 0abd FE 67 A7                		mov.L	[r7,r10], r7
 3054                             		
 3055 0ac0 7F 07                   	1:jmp	r7
 3056                             		.section	.rodata.SPV_superVisor
 3057                             		.balign 4
 3058                             		.balign 4
 3059                             	.L269:
 3060 001c 00 00 0A C2             		.long .L265
 3061 0020 00 00 0A E8             		.long .L266
 3062 0024 00 00 0A C2             		.long .L265
 3063 0028 00 00 0B 80             		.long .L264
 3064 002c 00 00 0B 12             		.long .L268
 3065 0030 00 00 0B 80             		.long .L264
 3066                             		.section	.text.SPV_superVisor
 3067                             	.L265:
2480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 3068                             		.loc 1 2480 0
 3069 0ac2 66 11                   		mov	#1, r1
 3070 0ac4 75 42 2D                		mov	#45, r2
 3071 0ac7 66 63                   		mov	#6, r3
 3072 0ac9 05 00 00 00             		bsr	_Set_UpCounter
 3073                             	.LVL372:
2483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				powerProfileIndex = SPV_getPowerProfileIndex(Interpreter_Data[0].phase, Interpreter_Data[0].mSe
 3074                             		.loc 1 2483 0
 3075 0acd FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 3076 0ad3 88 F1                   		mov.B	2[r7], r1
 3077 0ad5 89 7A                   		mov.B	5[r7], r2
 3078 0ad7 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 3079                             	.LVL373:
 3080 0adb EF 13                   		mov.L	r1, r3
2484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Interpreter_Data[0].mSetting, 0, powerProfileI
 3081                             		.loc 1 2484 0
 3082 0add 89 79                   		mov.B	5[r7], r1
 3083 0adf 3D 00 00                		mov.W	#0, [r0]
 3084 0ae2 66 02                   		mov	#0, r2
 3085 0ae4 CF 24                   		mov.B	r2, r4
 3086 0ae6 2E 60                   		bra	.L318
 3087                             	.L266:
2491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SWTC_Run(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 3088                             		.loc 1 2491 0
 3089 0ae8 75 41 2D                		mov	#45, r1
 3090 0aeb 05 00 00 00             		bsr	_SWTC_Run
 3091                             	.LVL374:
2493:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				elapsedTime = SWTC_GetElapsedTime(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 3092                             		.loc 1 2493 0
 3093 0aef 75 41 2D                		mov	#45, r1
 3094 0af2 05 00 00 00             		bsr	_SWTC_GetElapsedTime
 3095                             	.LVL375:
 3096 0af6 EF 1A                   		mov.L	r1, r10
 3097                             	.LVL376:
2497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				powerProfileIndex = SPV_getPowerProfileIndex(Interpreter_Data[0].cycle, Interpreter_Data[0].mSe
 3098                             		.loc 1 2497 0
 3099 0af8 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 3100 0afe 88 79                   		mov.B	1[r7], r1
 3101                             	.LVL377:
 3102 0b00 89 7A                   		mov.B	5[r7], r2
 3103 0b02 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 3104                             	.LVL378:
 3105 0b06 EF 13                   		mov.L	r1, r3
2498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Interpreter_Data[0].mSetting, 0, powerProfileI
 3106                             		.loc 1 2498 0
 3107 0b08 89 79                   		mov.B	5[r7], r1
 3108 0b0a 88 F4                   		mov.B	2[r7], r4
 3109 0b0c D3 0A                   		mov.W	r10, [r0]
 3110 0b0e 66 02                   		mov	#0, r2
 3111 0b10 2E 36                   		bra	.L318
 3112                             	.LVL379:
 3113                             	.L268:
2515:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				SWTC_Stop(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 3114                             		.loc 1 2515 0
 3115 0b12 75 41 2D                		mov	#45, r1
 3116 0b15 05 00 00 00             		bsr	_SWTC_Stop
 3117                             	.LVL380:
2518:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				  if ( LBL_RUN == Paused_Intpt_Data[0].completeLabel.s.label )
 3118                             		.loc 1 2518 0
 3119 0b19 FB 72 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r7
 3120 0b1f CC 7A                   		mov.B	[r7], r10
 3121 0b21 64 FA                   		and #15, r10
 3122 0b23 61 1A                   		cmp	#1, r10
 3123 0b25 21 2F                   		bne	.L271
2521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					powerProfileIndex = SPV_getPowerProfileIndex(Paused_Intpt_Data[0].cycle, Paused_Intpt_Data[0].
 3124                             		.loc 1 2521 0
 3125 0b27 88 79                   		mov.B	1[r7], r1
 3126 0b29 89 7A                   		mov.B	5[r7], r2
 3127 0b2b 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 3128                             	.LVL381:
 3129 0b2f EF 1A                   		mov.L	r1, r10
2522:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					elapsedTime = SWTC_GetElapsedTime(PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER);
 3130                             		.loc 1 2522 0
 3131 0b31 75 41 2D                		mov	#45, r1
 3132 0b34 05 00 00 00             		bsr	_SWTC_GetElapsedTime
 3133                             	.LVL382:
2523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Paused_Intpt_Data[0].mSetting, 0, powerProfil
 3134                             		.loc 1 2523 0
 3135 0b38 CD 7B 05                		mov.B	5[r7], r11
 3136                             	.LVL383:
 3137 0b3b 88 F4                   		mov.B	2[r7], r4
 3138 0b3d D3 01                   		mov.W	r1, [r0]
 3139 0b3f CF B1                   		mov.B	r11, r1
 3140                             	.LVL384:
 3141 0b41 66 02                   		mov	#0, r2
 3142 0b43 CF A3                   		mov.B	r10, r3
 3143 0b45 03                      		.balign 2,3,3
 3144                             	.L318:
 3145 0b46 05 00 00 00             		bsr	_PM_PowerProfile_ComputeTimeToEnd
 3146                             	.LVL385:
 3147 0b4a FB 72 00 00 00 00       		mov.L	#_TTEEstimation, r7
 3148 0b50 D3 71                   		mov.W	r1, [r7]
 3149 0b52 2E 4F                   		bra	.L177
 3150                             	.LVL386:
 3151                             	.L271:
2528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					powerProfileIndex = SPV_getPowerProfileIndex(Paused_Intpt_Data[0].phase, Paused_Intpt_Data[0].
 3152                             		.loc 1 2528 0
 3153 0b54 88 F1                   		mov.B	2[r7], r1
 3154 0b56 89 7A                   		mov.B	5[r7], r2
 3155 0b58 05 00 00 00             		bsr	_SPV_getPowerProfileIndex
 3156                             	.LVL387:
 3157 0b5c EF 13                   		mov.L	r1, r3
2529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					TTEEstimation = PM_PowerProfile_ComputeTimeToEnd(Paused_Intpt_Data[0].mSetting, 0, powerProfil
 3158                             		.loc 1 2529 0
 3159 0b5e 89 79                   		mov.B	5[r7], r1
 3160 0b60 3D 00 00                		mov.W	#0, [r0]
 3161 0b63 66 02                   		mov	#0, r2
 3162 0b65 CF 24                   		mov.B	r2, r4
 3163 0b67 05 00 00 00             		bsr	_PM_PowerProfile_ComputeTimeToEnd
 3164                             	.LVL388:
 3165 0b6b FB 72 00 00 00 00       		mov.L	#_TTEEstimation, r7
 3166 0b71 D3 71                   		mov.W	r1, [r7]
2532:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 					Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 3167                             		.loc 1 2532 0
 3168 0b73 66 11                   		mov	#1, r1
 3169 0b75 75 42 2D                		mov	#45, r2
 3170 0b78 66 63                   		mov	#6, r3
 3171 0b7a 05 00 00 00             		bsr	_Set_UpCounter
 3172                             	.LVL389:
 3173 0b7e 2E 23                   		bra	.L177
 3174                             	.L264:
2539:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				Set_UpCounter(SHORT_COUNTER, PP_ENPHNOSPECIALSELAPSEDTIME_UPCOUNTER, COUNTERS2_TBASE_1MIN);
 3175                             		.loc 1 2539 0
 3176 0b80 66 11                   		mov	#1, r1
 3177 0b82 75 42 2D                		mov	#45, r2
 3178 0b85 66 63                   		mov	#6, r3
 3179 0b87 05 00 00 00             		bsr	_Set_UpCounter
 3180                             	.LVL390:
2540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 				TTEEstimation = 0;
 3181                             		.loc 1 2540 0
 3182 0b8b FB 72 00 00 00 00       		mov.L	#_TTEEstimation, r7
 3183 0b91 3D 70 00                		mov.W	#0, [r7]
 3184 0b94 2E 0D                   		bra	.L177
 3185                             	.LVL391:
 3186                             	.L274:
 3187                             	.LBE59:
 3188                             	.LBE58:
 3189                             	.LBB60:
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 	started_cycle = FALSE;
 3190                             		.loc 1 216 0
 3191 0b96 66 07                   		mov.L	#0, r7
 3192                             	.LVL392:
 3193                             		.balign 2,3,1
 3194                             	.L186:
 535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_START));
 3195                             		.loc 1 535 0
 3196 0b98 66 21                   		mov	#2, r1
 3197 0b9a 05 00 00 00             		bsr	_REG_updateOldReg
 3198                             	.LVL393:
 3199 0b9e 38 1A F8                		bra	.L183
 3200                             	.LVL394:
 3201                             	.L177:
 3202                             	.LBE60:
1241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\DW_SuperVisor.c **** }/*end supervisor*/
 3203                             		.loc 1 1241 0
 3204 0ba1 3F 7D 0C                		rtsd	#48, r7-r13
 3205                             	.LFE0:
 3207                             		.section	.bss.bRegsChanged,"aw",@nobits
 3208                             		.balign 4
 3211                             	_bRegsChanged:
 3212 0000 00 00 00 00             		.zero	4
 3213                             		.section	.bss.maxFuncIndex,"aw",@nobits
 3216                             	_maxFuncIndex:
 3217 0000 00                      		.zero	1
 3218                             		.section	.bss.regBmp,"aw",@nobits
 3221                             	_regBmp:
 3222 0000 00 00 00 00 00          		.zero	5
 3223                             		.section	.bss.regs_filter.11974,"aw",@nobits
 3226                             	_regs_filter.11974:
 3227 0000 00                      		.zero	1
 3228                             		.section	.bss.regs_changed.11975,"aw",@nobits
 3231                             	_regs_changed.11975:
 3232 0000 00                      		.zero	1
 3643                             	.Letext0:
 3644                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 3645                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_SwTimersCounters/SwTimersCo
 3646                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 3647                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/ProductSafety_cfg.
 3648                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmDefines.h"
 3649                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Types.h"
 3650                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers/IO_driver.h"
 3651                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_General.h"
 3652                             		.file 10 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/BusCommPltf_cfg.h
 3653                             		.file 11 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmTypes.h"
 3654                             		.file 12 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmGlobal.h"
 3655                             		.file 13 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\Modules/AlternateControl.h"
 3656                             		.file 14 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\Modules/SparklingAid.h"
 3657                             		.file 15 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_PowerProfile/PM_PowerProfi
 3658                             		.file 16 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_BusCommMng.h"
 3659                             		.file 17 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Global.h"
 3660                             		.file 18 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Fault.h"
 3661                             		.file 19 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\Control/DW_Statistics.h"
 3662                             		.file 20 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Interpreter.h"
 3663                             		.file 21 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_BackUp/LIB_BackUpExp.h"
 3664                             		.file 22 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Reset/LIB_ResetExp.h"
 3665                             		.file 23 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\UserInterface/DW_Regulations.h"
 3666                             		.file 24 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_FuncLib.h"
 3667                             		.file 25 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmFuncLib.h"
 3668                             		.file 26 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Alternato/PM_AlternatoExp.
 3669                             		.file 27 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_callback.h"
DEFINED SYMBOLS
                            *ABS*:00000000 DW_SuperVisor.c
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:6      .text.SPV_resetSensVariablesButDelay:00000000 _SPV_resetSensVariablesButDelay
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:11     .text.SPV_resetSensVariablesButDelay:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:50     .text.SPV_startCycleInit:00000000 _SPV_startCycleInit
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:54     .text.SPV_startCycleInit:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:187    .text.SPV_startCycle:00000000 _SPV_startCycle
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:191    .text.SPV_startCycle:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:212    .text.SPV_generateColdReset:00000000 _SPV_generateColdReset
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:216    .text.SPV_generateColdReset:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:228    .text.SPV_updateFunctionValue:00000000 _SPV_updateFunctionValue
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:232    .text.SPV_updateFunctionValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:298    .text.SPV_getCycleHeaderPtr:00000000 _SPV_getCycleHeaderPtr
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:302    .text.SPV_getCycleHeaderPtr:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:341    .text.SPV_updateCycleLabel:00000000 _SPV_updateCycleLabel
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:344    .text.SPV_updateCycleLabel:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:375    .text.SPV_searchCycleByLabel:00000000 _SPV_searchCycleByLabel
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:379    .text.SPV_searchCycleByLabel:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:443    .text.SPV_getRefCycleForFuncValue:00000000 _SPV_getRefCycleForFuncValue
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:447    .text.SPV_getRefCycleForFuncValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:486    .text.SPV_testRefCycleLabel:00000000 _SPV_testRefCycleLabel
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:490    .text.SPV_testRefCycleLabel:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:532    .text.SPV_setupDelayCounter:00000000 _SPV_setupDelayCounter
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:536    .text.SPV_setupDelayCounter:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:569    .text.SPV_isCycleRunning:00000000 _SPV_isCycleRunning
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:573    .text.SPV_isCycleRunning:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:594    .text.SPV_isCycleWithLabelRunning:00000000 _SPV_isCycleWithLabelRunning
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:599    .text.SPV_isCycleWithLabelRunning:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:620    .text.SPV_isAutotestRunning:00000000 _SPV_isAutotestRunning
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:624    .text.SPV_isAutotestRunning:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:632    .text.SPV_isAutotestOrTestRunning:00000000 _SPV_isAutotestOrTestRunning
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:636    .text.SPV_isAutotestOrTestRunning:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:659    .text.SPV_manageRequestFromRemote:00000000 _SPV_manageRequestFromRemote
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:662    .text.SPV_manageRequestFromRemote:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:765    .text.SPV_goingToSleepManager:00000000 _SPV_goingToSleepManager
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:768    .text.SPV_goingToSleepManager:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:870    .text.SPV_resetSensVariables:00000000 _SPV_resetSensVariables
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:874    .text.SPV_resetSensVariables:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:884    .text.SPV_calcReqNewPP:00000000 _SPV_calcReqNewPP
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:888    .text.SPV_calcReqNewPP:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3211   .bss.bRegsChanged:00000000 _bRegsChanged
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:896    .text.SPV_RegulationsMonitor:00000000 _SPV_RegulationsMonitor
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:900    .text.SPV_RegulationsMonitor:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3216   .bss.maxFuncIndex:00000000 _maxFuncIndex
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3226   .bss.regs_filter.11974:00000000 _regs_filter.11974
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3231   .bss.regs_changed.11975:00000000 _regs_changed.11975
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3221   .bss.regBmp:00000000 _regBmp
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1015   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000000 _SVP_BuildBmpFunctionsActingAsMofifiers
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1018   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1101   .text.SPV_getPowerProfileIndex:00000000 _SPV_getPowerProfileIndex
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1105   .text.SPV_getPowerProfileIndex:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1140   .text.Set_UpCounter:00000000 _Set_UpCounter
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1144   .text.Set_UpCounter:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1195   .text.SPV_updatePowerProfile:00000000 _SPV_updatePowerProfile
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1199   .text.SPV_updatePowerProfile:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1489   .text.SPV_superVisor:00000000 _SPV_superVisor
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1492   .text.SPV_superVisor:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1604   .rodata.SPV_superVisor:00000000 .L193
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3059   .rodata.SPV_superVisor:0000001c .L269
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1613   .text.SPV_superVisor:000000b6 .L187
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1716   .text.SPV_superVisor:0000016e .L188
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1903   .text.SPV_superVisor:000002cb .L189
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1860   .text.SPV_superVisor:0000027b .L190
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1961   .text.SPV_superVisor:00000334 .L191
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1983   .text.SPV_superVisor:0000035a .L192
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3067   .text.SPV_superVisor:00000ac2 .L265
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3087   .text.SPV_superVisor:00000ae8 .L266
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3174   .text.SPV_superVisor:00000b80 .L264
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3113   .text.SPV_superVisor:00000b12 .L268
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3234   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:7      .text.SPV_resetSensVariablesButDelay:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:51     .text.SPV_startCycleInit:00000000 .LFB20
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:188    .text.SPV_startCycle:00000000 .LFB22
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:213    .text.SPV_generateColdReset:00000000 .LFB24
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:229    .text.SPV_updateFunctionValue:00000000 .LFB23
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:299    .text.SPV_getCycleHeaderPtr:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:342    .text.SPV_updateCycleLabel:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:376    .text.SPV_searchCycleByLabel:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:444    .text.SPV_getRefCycleForFuncValue:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:487    .text.SPV_testRefCycleLabel:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:533    .text.SPV_setupDelayCounter:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:570    .text.SPV_isCycleRunning:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:595    .text.SPV_isCycleWithLabelRunning:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:621    .text.SPV_isAutotestRunning:00000000 .LFB14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:633    .text.SPV_isAutotestOrTestRunning:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:660    .text.SPV_manageRequestFromRemote:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:766    .text.SPV_goingToSleepManager:00000000 .LFB17
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:871    .text.SPV_resetSensVariables:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:885    .text.SPV_calcReqNewPP:00000000 .LFB26
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:897    .text.SPV_RegulationsMonitor:00000000 .LFB27
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1016   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000000 .LFB28
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1102   .text.SPV_getPowerProfileIndex:00000000 .LFB29
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1141   .text.Set_UpCounter:00000000 .LFB30
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1196   .text.SPV_updatePowerProfile:00000000 .LFB32
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1490   .text.SPV_superVisor:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:11393  .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15184  .debug_str:00002260 .LASF631
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14776  .debug_str:00001414 .LASF632
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14130  .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14208  .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14910  .debug_str:000018fc .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15270  .debug_str:000025ea .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15246  .debug_str:0000251a .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14530  .debug_str:00000b48 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15396  .debug_str:00002a1a .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15346  .debug_str:00002877 .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14742  .debug_str:000012ce .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14272  .debug_str:0000021d .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14410  .debug_str:00000742 .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15078  .debug_str:00001eaa .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14842  .debug_str:000016b2 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14488  .debug_str:00000a0c .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14508  .debug_str:00000a83 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14214  .debug_str:00000022 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14484  .debug_str:000009f3 .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14964  .debug_str:00001abe .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15292  .debug_str:000026b3 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14896  .debug_str:00001870 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15238  .debug_str:000024ba .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14254  .debug_str:00000164 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14962  .debug_str:00001ab0 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14226  .debug_str:00000080 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15046  .debug_str:00001d92 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15178  .debug_str:00002247 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14396  .debug_str:000006d8 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15048  .debug_str:00001da4 .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15124  .debug_str:0000206e .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15300  .debug_str:000026e0 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14708  .debug_str:00001176 .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14354  .debug_str:00000548 .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15226  .debug_str:0000243a .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14790  .debug_str:000014b8 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14648  .debug_str:00000f8a .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15128  .debug_str:00002093 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15012  .debug_str:00001c94 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15440  .debug_str:00002b7c .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15058  .debug_str:00001df2 .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14748  .debug_str:00001303 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14222  .debug_str:0000004c .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15298  .debug_str:000026cd .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14844  .debug_str:000016c0 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14728  .debug_str:00001242 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15206  .debug_str:00002357 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14448  .debug_str:00000871 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15284  .debug_str:00002664 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14942  .debug_str:00001a15 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14304  .debug_str:0000034f .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14320  .debug_str:00000401 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14458  .debug_str:000008f1 .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15436  .debug_str:00002b5b .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14646  .debug_str:00000f75 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15010  .debug_str:00001c82 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14770  .debug_str:000013d2 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14906  .debug_str:000018de .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14512  .debug_str:00000a9e .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15336  .debug_str:00002825 .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14382  .debug_str:00000651 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15446  .debug_str:00002bd3 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15212  .debug_str:000023a5 .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15372  .debug_str:0000295f .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15084  .debug_str:00001ee8 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14640  .debug_str:00000f4c .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14662  .debug_str:0000100a .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14394  .debug_str:000006c5 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14390  .debug_str:000006a4 .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15198  .debug_str:00002313 .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15104  .debug_str:00001fa7 .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14356  .debug_str:00000556 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14504  .debug_str:00000a65 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14314  .debug_str:000003bb .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14836  .debug_str:0000167d .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15262  .debug_str:000025ae .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15388  .debug_str:000029df .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14818  .debug_str:000015ca .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15386  .debug_str:000029d3 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15286  .debug_str:0000266a .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15080  .debug_str:00001ec1 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15310  .debug_str:0000273c .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15234  .debug_str:0000248c .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14302  .debug_str:0000033a .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14758  .debug_str:00001360 .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14670  .debug_str:00001059 .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14582  .debug_str:00000d30 .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15244  .debug_str:00002502 .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14768  .debug_str:000013bc .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15076  .debug_str:00001e99 .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14678  .debug_str:00001082 .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14704  .debug_str:00001157 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15156  .debug_str:00002186 .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15430  .debug_str:00002b3a .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14416  .debug_str:00000766 .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15254  .debug_str:00002567 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15214  .debug_str:000023ba .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14966  .debug_str:00001ac6 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15324  .debug_str:000027ba .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14542  .debug_str:00000b9a .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14536  .debug_str:00000b6f .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15278  .debug_str:00002624 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14616  .debug_str:00000e64 .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15306  .debug_str:00002717 .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14586  .debug_str:00000d5b .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14656  .debug_str:00000fc5 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14454  .debug_str:000008b3 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14310  .debug_str:00000388 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14478  .debug_str:000009af .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14238  .debug_str:000000d3 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15002  .debug_str:00001c40 .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14556  .debug_str:00000c29 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14324  .debug_str:0000042c .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14922  .debug_str:00001986 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14330  .debug_str:00000467 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15296  .debug_str:000026c4 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15424  .debug_str:00002b17 .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14464  .debug_str:00000929 .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14518  .debug_str:00000adc .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15338  .debug_str:0000283a .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14384  .debug_str:00000667 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14978  .debug_str:00001b43 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14476  .debug_str:000009a3 .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15406  .debug_str:00002a69 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15364  .debug_str:00002907 .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15196  .debug_str:00002301 .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14336  .debug_str:000004a1 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14870  .debug_str:000017c3 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15112  .debug_str:00001ff6 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14296  .debug_str:0000030f .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15160  .debug_str:000021a0 .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14408  .debug_str:0000072e .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15472  .debug_str:00002cfa .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14700  .debug_str:00001140 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14266  .debug_str:000001d6 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15344  .debug_str:0000285e .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15354  .debug_str:000028a2 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15168  .debug_str:000021f8 .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15026  .debug_str:00001cef .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14720  .debug_str:000011f7 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14880  .debug_str:00001814 .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14316  .debug_str:000003d5 .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15470  .debug_str:00002ce3 .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14236  .debug_str:000000c8 .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15342  .debug_str:00002852 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14500  .debug_str:00000a4d .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14246  .debug_str:00000114 .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14588  .debug_str:00000d76 .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15090  .debug_str:00001f30 .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15064  .debug_str:00001e26 .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14804  .debug_str:0000153e .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14568  .debug_str:00000cbf .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14604  .debug_str:00000df2 .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14846  .debug_str:000016c8 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14392  .debug_str:000006b3 .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15072  .debug_str:00001e74 .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15460  .debug_str:00002c66 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14666  .debug_str:0000102d .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14858  .debug_str:00001758 .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14664  .debug_str:00001020 .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14968  .debug_str:00001ad4 .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14292  .debug_str:000002e8 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15332  .debug_str:00002805 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15140  .debug_str:0000210f .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15008  .debug_str:00001c71 .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15150  .debug_str:0000215c .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14756  .debug_str:00001352 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14218  .debug_str:00000034 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14718  .debug_str:000011e8 .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14444  .debug_str:00000851 .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15060  .debug_str:00001e04 .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14286  .debug_str:000002ac .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15400  .debug_str:00002a39 .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14630  .debug_str:00000eef .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15144  .debug_str:0000212e .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15454  .debug_str:00002c1b .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14650  .debug_str:00000f9f .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15154  .debug_str:0000217d .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14308  .debug_str:0000037f .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14854  .debug_str:00001739 .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14868  .debug_str:000017b5 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14474  .debug_str:00000994 .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14610  .debug_str:00000e2c .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14402  .debug_str:00000703 .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15260  .debug_str:000025a3 .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14926  .debug_str:000019a6 .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14300  .debug_str:00000323 .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14608  .debug_str:00000e17 .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15070  .debug_str:00001e66 .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14750  .debug_str:00001311 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14350  .debug_str:00000524 .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14490  .debug_str:00000a14 .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15190  .debug_str:000022ca .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15180  .debug_str:0000224c .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14900  .debug_str:0000189d .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14452  .debug_str:0000089d .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14398  .debug_str:000006e0 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14248  .debug_str:00000120 .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15172  .debug_str:0000221a .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15056  .debug_str:00001dea .LASF195
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14274  .debug_str:00000225 .LASF196
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15138  .debug_str:000020f7 .LASF197
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14824  .debug_str:00001609 .LASF198
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14342  .debug_str:000004e1 .LASF199
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15382  .debug_str:000029c6 .LASF200
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14682  .debug_str:000010a9 .LASF201
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14414  .debug_str:0000075a .LASF202
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15106  .debug_str:00001fb8 .LASF203
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14946  .debug_str:00001a40 .LASF204
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14930  .debug_str:000019c3 .LASF205
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15074  .debug_str:00001e8b .LASF206
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14660  .debug_str:00000ff8 .LASF207
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15428  .debug_str:00002b34 .LASF208
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14480  .debug_str:000009c0 .LASF209
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15062  .debug_str:00001e17 .LASF210
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14746  .debug_str:000012f3 .LASF211
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14960  .debug_str:00001aa2 .LASF212
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14598  .debug_str:00000dcc .LASF213
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14672  .debug_str:0000106c .LASF214
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15038  .debug_str:00001d58 .LASF215
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14998  .debug_str:00001c2a .LASF216
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15398  .debug_str:00002a2d .LASF217
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14734  .debug_str:00001285 .LASF218
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14612  .debug_str:00000e44 .LASF219
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15142  .debug_str:0000211c .LASF220
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14574  .debug_str:00000cef .LASF221
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14328  .debug_str:0000045d .LASF222
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14366  .debug_str:000005cf .LASF223
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15024  .debug_str:00001ce6 .LASF224
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14892  .debug_str:00001861 .LASF225
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14972  .debug_str:00001b03 .LASF266
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14602  .debug_str:00000dec .LASF226
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15302  .debug_str:000026f1 .LASF227
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14590  .debug_str:00000d7c .LASF228
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14506  .debug_str:00000a72 .LASF229
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15304  .debug_str:00002702 .LASF230
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14596  .debug_str:00000dba .LASF231
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14936  .debug_str:000019e4 .LASF232
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14984  .debug_str:00001b8b .LASF233
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14442  .debug_str:00000842 .LASF234
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14524  .debug_str:00000afb .LASF235
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14234  .debug_str:000000b2 .LASF236
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15000  .debug_str:00001c34 .LASF237
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14884  .debug_str:0000182a .LASF238
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14686  .debug_str:000010c4 .LASF239
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14216  .debug_str:00000029 .LASF240
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14552  .debug_str:00000c02 .LASF241
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14412  .debug_str:0000074b .LASF242
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14974  .debug_str:00001b10 .LASF243
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14496  .debug_str:00000a3d .LASF244
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14322  .debug_str:0000041a .LASF245
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15326  .debug_str:000027c9 .LASF246
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15288  .debug_str:0000267f .LASF247
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14318  .debug_str:000003ed .LASF248
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14916  .debug_str:00001938 .LASF249
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14934  .debug_str:000019dd .LASF250
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15102  .debug_str:00001f90 .LASF251
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14866  .debug_str:000017aa .LASF252
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15094  .debug_str:00001f4b .LASF253
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14806  .debug_str:00001550 .LASF254
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14264  .debug_str:000001bb .LASF255
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15294  .debug_str:000026ba .LASF256
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15126  .debug_str:0000207d .LASF257
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14220  .debug_str:00000041 .LASF258
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15274  .debug_str:000025fb .LASF259
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14992  .debug_str:00001bfb .LASF260
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14338  .debug_str:000004b9 .LASF261
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15036  .debug_str:00001d40 .LASF262
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14780  .debug_str:0000146d .LASF263
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15438  .debug_str:00002b73 .LASF264
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14424  .debug_str:000007a9 .LASF265
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15478  .debug_str:00002d21 .LASF267
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14468  .debug_str:00000947 .LASF268
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14982  .debug_str:00001b61 .LASF269
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14492  .debug_str:00000a23 .LASF270
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14532  .debug_str:00000b51 .LASF271
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14372  .debug_str:000005f7 .LASF272
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15222  .debug_str:00002415 .LASF273
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14564  .debug_str:00000c8f .LASF274
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14652  .debug_str:00000fa6 .LASF275
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14470  .debug_str:00000970 .LASF276
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14724  .debug_str:0000121e .LASF277
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14778  .debug_str:0000145b .LASF278
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14722  .debug_str:00001204 .LASF279
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15044  .debug_str:00001d8a .LASF280
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14510  .debug_str:00000a91 .LASF281
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14466  .debug_str:0000093d .LASF282
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14378  .debug_str:00000626 .LASF283
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15418  .debug_str:00002aca .LASF284
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14764  .debug_str:00001393 .LASF285
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14830  .debug_str:00001640 .LASF286
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14578  .debug_str:00000d14 .LASF287
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14376  .debug_str:0000061e .LASF288
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14644  .debug_str:00000f6d .LASF289
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14732  .debug_str:00001270 .LASF290
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14706  .debug_str:00001165 .LASF291
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14798  .debug_str:00001507 .LASF292
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15318  .debug_str:0000278f .LASF293
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14796  .debug_str:000014ef .LASF294
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14404  .debug_str:0000070e .LASF295
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14364  .debug_str:000005af .LASF296
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15402  .debug_str:00002a4d .LASF297
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15322  .debug_str:000027b1 .LASF298
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15464  .debug_str:00002c9b .LASF299
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15130  .debug_str:000020aa .LASF300
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15032  .debug_str:00001d1c .LASF301
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14558  .debug_str:00000c36 .LASF302
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15030  .debug_str:00001d0f .LASF303
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14428  .debug_str:000007d4 .LASF304
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14282  .debug_str:00000275 .LASF305
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15174  .debug_str:0000221f .LASF306
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15434  .debug_str:00002b53 .LASF307
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14786  .debug_str:0000149f .LASF308
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14572  .debug_str:00000ce7 .LASF309
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14782  .debug_str:00001481 .LASF310
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14684  .debug_str:000010b6 .LASF311
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14494  .debug_str:00000a2f .LASF312
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14232  .debug_str:000000a8 .LASF313
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14642  .debug_str:00000f61 .LASF314
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14754  .debug_str:0000133b .LASF315
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14994  .debug_str:00001c0d .LASF316
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15380  .debug_str:000029b4 .LASF317
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14924  .debug_str:00001995 .LASF318
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14894  .debug_str:0000186a .LASF319
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15474  .debug_str:00002d05 .LASF320
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14862  .debug_str:00001789 .LASF321
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14418  .debug_str:00000777 .LASF322
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15410  .debug_str:00002a98 .LASF323
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14422  .debug_str:0000079f .LASF324
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14262  .debug_str:000001af .LASF325
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14814  .debug_str:000015a7 .LASF326
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14370  .debug_str:000005ef .LASF327
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14212  .debug_str:00000019 .LASF328
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14912  .debug_str:00001909 .LASF329
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15146  .debug_str:00002141 .LASF330
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15320  .debug_str:000027a5 .LASF331
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15350  .debug_str:00002889 .LASF332
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14544  .debug_str:00000bab .LASF333
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14726  .debug_str:00001238 .LASF334
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15152  .debug_str:0000216d .LASF335
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15276  .debug_str:00002608 .LASF336
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14600  .debug_str:00000dd1 .LASF337
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14280  .debug_str:00000262 .LASF338
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15082  .debug_str:00001edc .LASF339
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14498  .debug_str:00000a42 .LASF340
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14522  .debug_str:00000af1 .LASF341
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14810  .debug_str:00001578 .LASF342
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14432  .debug_str:000007f9 .LASF343
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14772  .debug_str:000013ea .LASF344
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15312  .debug_str:0000274d .LASF345
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14450  .debug_str:0000088f .LASF346
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14740  .debug_str:000012b8 .LASF347
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14268  .debug_str:000001e9 .LASF348
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14270  .debug_str:00000203 .LASF349
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14638  .debug_str:00000f39 .LASF350
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15468  .debug_str:00002cbf .LASF351
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15330  .debug_str:000027f1 .LASF352
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14446  .debug_str:0000085c .LASF353
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14482  .debug_str:000009d1 .LASF354
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15462  .debug_str:00002c7f .LASF355
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15374  .debug_str:00002974 .LASF356
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14420  .debug_str:00000784 .LASF357
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15358  .debug_str:000028d7 .LASF358
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15188  .debug_str:000022af .LASF359
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14712  .debug_str:000011a4 .LASF360
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15442  .debug_str:00002b8f .LASF361
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14240  .debug_str:000000e2 .LASF362
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15164  .debug_str:000021c4 .LASF363
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15220  .debug_str:000023fb .LASF364
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14566  .debug_str:00000ca6 .LASF365
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14626  .debug_str:00000ec6 .LASF366
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14312  .debug_str:0000039c .LASF367
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15422  .debug_str:00002af9 .LASF368
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14762  .debug_str:0000137b .LASF369
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15366  .debug_str:00002913 .LASF370
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14340  .debug_str:000004d1 .LASF371
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14820  .debug_str:000015d9 .LASF372
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14636  .debug_str:00000f23 .LASF373
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14822  .debug_str:000015f1 .LASF374
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15136  .debug_str:000020e0 .LASF375
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15052  .debug_str:00001dc0 .LASF376
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14920  .debug_str:0000196a .LASF377
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14516  .debug_str:00000ac6 .LASF378
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15022  .debug_str:00001cd0 .LASF379
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15256  .debug_str:00002574 .LASF380
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14808  .debug_str:00001561 .LASF381
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15242  .debug_str:000024de .LASF382
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14850  .debug_str:000016f0 .LASF383
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14752  .debug_str:00001318 .LASF384
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15248  .debug_str:00002524 .LASF385
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15042  .debug_str:00001d6d .LASF386
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15236  .debug_str:000024a1 .LASF387
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15444  .debug_str:00002bac .LASF388
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15098  .debug_str:00001f75 .LASF389
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15378  .debug_str:000029a5 .LASF390
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14294  .debug_str:000002f5 .LASF391
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14996  .debug_str:00001c13 .LASF392
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15408  .debug_str:00002a7f .LASF393
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14702  .debug_str:00001146 .LASF394
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14856  .debug_str:0000174b .LASF395
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15166  .debug_str:000021e9 .LASF396
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14550  .debug_str:00000bf0 .LASF397
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14980  .debug_str:00001b53 .LASF398
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15360  .debug_str:000028ef .LASF399
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14832  .debug_str:00001653 .LASF400
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14688  .debug_str:000010cc .LASF401
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14834  .debug_str:00001668 .LASF402
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14690  .debug_str:000010d8 .LASF403
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14230  .debug_str:00000093 .LASF404
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15362  .debug_str:000028fb .LASF405
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15132  .debug_str:000020b7 .LASF406
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15204  .debug_str:00002348 .LASF407
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14456  .debug_str:000008cf .LASF408
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14594  .debug_str:00000d9d .LASF409
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14914  .debug_str:0000191a .LASF410
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15216  .debug_str:000023c9 .LASF411
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15118  .debug_str:0000201d .LASF412
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15208  .debug_str:00002371 .LASF413
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14766  .debug_str:000013a2 .LASF414
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14224  .debug_str:0000005f .LASF415
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15250  .debug_str:00002542 .LASF416
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14898  .debug_str:00001877 .LASF417
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15420  .debug_str:00002ad4 .LASF418
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14288  .debug_str:000002b9 .LASF419
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14592  .debug_str:00000d8f .LASF420
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15100  .debug_str:00001f83 .LASF421
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14888  .debug_str:0000183d .LASF422
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15432  .debug_str:00002b49 .LASF423
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14802  .debug_str:00001537 .LASF424
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14744  .debug_str:000012e0 .LASF425
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15186  .debug_str:00002286 .LASF426
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14622  .debug_str:00000e98 .LASF427
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14306  .debug_str:0000036a .LASF428
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15458  .debug_str:00002c4c .LASF429
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14654  .debug_str:00000fb0 .LASF430
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14560  .debug_str:00000c4d .LASF431
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14426  .debug_str:000007b8 .LASF432
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15356  .debug_str:000028a8 .LASF433
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14976  .debug_str:00001b20 .LASF434
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14326  .debug_str:0000043c .LASF435
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15290  .debug_str:00002692 .LASF436
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14528  .debug_str:00000b25 .LASF437
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14918  .debug_str:0000194a .LASF438
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15096  .debug_str:00001f5b .LASF439
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14284  .debug_str:00000285 .LASF440
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15394  .debug_str:00002a02 .LASF457
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15016  .debug_str:00001ca2 .LASF441
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15416  .debug_str:00002ac0 .LASF442
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15268  .debug_str:000025e2 .LASF443
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14438  .debug_str:00000822 .LASF444
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14928  .debug_str:000019ad .LASF580
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14710  .debug_str:0000118c .LASF578
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15192  .debug_str:000022d6 .LASF445
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14828  .debug_str:0000162d .LASF447
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14958  .debug_str:00001a8f .LASF446
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14348  .debug_str:0000050e .LASF448
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15120  .debug_str:00002044 .LASF449
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15370  .debug_str:00002940 .LASF633
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:46     .text.SPV_resetSensVariablesButDelay:0000005b .LFE18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14358  .debug_str:0000056d .LASF450
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:183    .text.SPV_startCycleInit:00000100 .LFE20
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:91     .text.SPV_startCycleInit:0000005e .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:93     .text.SPV_startCycleInit:00000062 .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:108    .text.SPV_startCycleInit:00000082 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:113    .text.SPV_startCycleInit:00000089 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:128    .text.SPV_startCycleInit:000000a6 .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:153    .text.SPV_startCycleInit:000000da .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:160    .text.SPV_startCycleInit:000000e4 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:167    .text.SPV_startCycleInit:000000ec .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:170    .text.SPV_startCycleInit:000000f0 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:173    .text.SPV_startCycleInit:000000f4 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:176    .text.SPV_startCycleInit:000000f8 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:179    .text.SPV_startCycleInit:000000fc .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:182    .text.SPV_startCycleInit:00000100 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14668  .debug_str:0000104a .LASF451
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:208    .text.SPV_startCycle:00000027 .LFE22
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:204    .text.SPV_startCycle:00000023 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:207    .text.SPV_startCycle:00000027 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14784  .debug_str:00001489 .LASF452
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:224    .text.SPV_generateColdReset:0000000c .LFE24
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:217    .text.SPV_generateColdReset:00000004 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:220    .text.SPV_generateColdReset:00000008 .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:223    .text.SPV_generateColdReset:0000000c .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:293    .text.SPV_updateFunctionValue:0000003d .LFE23
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12754  .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12772  .debug_loc:0000002c .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12783  .debug_loc:0000004a .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12794  .debug_loc:00000068 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:249    .text.SPV_updateFunctionValue:00000016 .LBB4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:280    .text.SPV_updateFunctionValue:00000033 .LBE4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12805  .debug_loc:00000086 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12812  .debug_loc:00000099 .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:250    .text.SPV_updateFunctionValue:00000016 .LBB5
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:279    .text.SPV_updateFunctionValue:00000033 .LBE5
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12819  .debug_loc:000000ac .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:256    .text.SPV_updateFunctionValue:0000001e .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:275    .text.SPV_updateFunctionValue:00000032 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:240    .text.SPV_updateFunctionValue:0000000c .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15202  .debug_str:00002332 .LASF459
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:337    .text.SPV_getCycleHeaderPtr:0000002d .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12826  .debug_loc:000000bf .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12844  .debug_loc:000000eb .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14692  .debug_str:000010e4 .LASF453
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12862  .debug_loc:00000117 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15352  .debug_str:00002898 .LASF455
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:314    .text.SPV_getCycleHeaderPtr:00000011 .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14344  .debug_str:000004f0 .LASF454
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:370    .text.SPV_updateCycleLabel:00000025 .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12873  .debug_loc:00000135 .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15476  .debug_str:00002d14 .LASF456
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12891  .debug_loc:00000161 .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:353    .text.SPV_updateCycleLabel:00000012 .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:365    .text.SPV_updateCycleLabel:00000021 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15210  .debug_str:00002392 .LASF458
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15426  .debug_str:00002b1d .LASF460
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:438    .text.SPV_searchCycleByLabel:0000003f .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12903  .debug_loc:00000180 .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12921  .debug_loc:000001ac .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14520  .debug_str:00000aea .LASF461
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12932  .debug_loc:000001ca .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12943  .debug_loc:000001e8 .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:388    .text.SPV_searchCycleByLabel:0000000e .LBB8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12955  .debug_loc:00000207 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:404    .text.SPV_searchCycleByLabel:0000001a .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14472  .debug_str:00000978 .LASF463
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:482    .text.SPV_getRefCycleForFuncValue:00000031 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14860  .debug_str:00001773 .LASF465
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:527    .text.SPV_testRefCycleLabel:00000029 .LFE11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12962  .debug_loc:0000021a .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:12980  .debug_loc:00000246 .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15264  .debug_str:000025c8 .LASF462
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:498    .text.SPV_testRefCycleLabel:0000000a .LBB14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:524    .text.SPV_testRefCycleLabel:00000026 .LBE14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13006  .debug_loc:00000288 .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:499    .text.SPV_testRefCycleLabel:0000000a .LBB15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:523    .text.SPV_testRefCycleLabel:00000026 .LBE15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13028  .debug_loc:000002bf .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:503    .text.SPV_testRefCycleLabel:00000010 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:497    .text.SPV_testRefCycleLabel:0000000a .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:564    .text.SPV_setupDelayCounter:0000001c .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:540    .text.SPV_setupDelayCounter:00000009 .LBB18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:538    .text.SPV_setupDelayCounter:00000007 .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:563    .text.SPV_setupDelayCounter:0000001c .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15448  .debug_str:00002be9 .LASF464
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:590    .text.SPV_isCycleRunning:0000001d .LFE12
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15134  .debug_str:000020c4 .LASF466
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:615    .text.SPV_isCycleWithLabelRunning:00000015 .LFE13
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13040  .debug_loc:000002de .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:600    .text.SPV_isCycleWithLabelRunning:00000004 .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:605    .text.SPV_isCycleWithLabelRunning:0000000c .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14276  .debug_str:0000023c .LASF467
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:627    .text.SPV_isAutotestRunning:00000007 .LFE14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:626    .text.SPV_isAutotestRunning:00000007 .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15122  .debug_str:00002052 .LASF468
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:654    .text.SPV_isAutotestOrTestRunning:0000001b .LFE15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:638    .text.SPV_isAutotestOrTestRunning:00000007 .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:644    .text.SPV_isAutotestOrTestRunning:00000012 .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14334  .debug_str:00000485 .LASF470
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:760    .text.SPV_manageRequestFromRemote:00000093 .LFE16
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13054  .debug_loc:000002ff .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14714  .debug_str:000011be .LASF469
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13072  .debug_loc:0000032b .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:727    .text.SPV_manageRequestFromRemote:0000005e .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:744    .text.SPV_manageRequestFromRemote:0000007f .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:747    .text.SPV_manageRequestFromRemote:00000083 .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14514  .debug_str:00000ab0 .LASF498
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:865    .text.SPV_goingToSleepManager:0000009b .LFE17
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13079  .debug_loc:0000033e .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:779    .text.SPV_goingToSleepManager:00000017 .LBB28
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:857    .text.SPV_goingToSleepManager:00000096 .LBE28
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:780    .text.SPV_goingToSleepManager:00000017 .LBB29
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:856    .text.SPV_goingToSleepManager:00000096 .LBE29
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13097  .debug_loc:0000036a .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:788    .text.SPV_goingToSleepManager:00000025 .LBB30
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:823    .text.SPV_goingToSleepManager:0000005c .LBE30
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:792    .text.SPV_goingToSleepManager:00000029 .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:824    .text.SPV_goingToSleepManager:0000005c .LBB32
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:838    .text.SPV_goingToSleepManager:0000007e .LBE32
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:825    .text.SPV_goingToSleepManager:0000005c .LBB33
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:837    .text.SPV_goingToSleepManager:0000007e .LBE33
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:785    .text.SPV_goingToSleepManager:0000001f .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:848    .text.SPV_goingToSleepManager:00000090 .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15176  .debug_str:00002230 .LASF471
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:879    .text.SPV_resetSensVariables:0000000d .LFE19
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:878    .text.SPV_resetSensVariables:0000000d .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15018  .debug_str:00001ca9 .LASF634
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:891    .text.SPV_calcReqNewPP:0000000a .LFE26
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15034  .debug_str:00001d29 .LASF472
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1010   .text.SPV_RegulationsMonitor:000000a9 .LFE27
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13110  .debug_loc:0000038a .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15348  .debug_str:00002880 .LASF473
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13123  .debug_loc:000003aa .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15014  .debug_str:00001c99 .LASF474
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14886  .debug_str:00001837 .LASF475
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13137  .debug_loc:000003cb .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14244  .debug_str:0000010d .LASF476
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14954  .debug_str:00001a74 .LASF477
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13145  .debug_loc:000003df .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14436  .debug_str:00000816 .LASF478
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15308  .debug_str:0000272f .LASF479
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14852  .debug_str:00001712 .LASF480
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1096   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000083 .LFE28
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13157  .debug_loc:000003fe .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13175  .debug_loc:0000042a .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14952  .debug_str:00001a69 .LASF481
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13182  .debug_loc:0000043d .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13189  .debug_loc:00000450 .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13206  .debug_loc:0000046d .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1035   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000022 .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14990  .debug_str:00001be2 .LASF482
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1135   .text.SPV_getPowerProfileIndex:00000028 .LFE29
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13218  .debug_loc:0000048c .LLST35
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13231  .debug_loc:000004ac .LLST36
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13249  .debug_loc:000004d8 .LLST37
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1115   .text.SPV_getPowerProfileIndex:0000000f .LVL92
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15414  .debug_str:00002ab2 .LASF483
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1190   .text.Set_UpCounter:0000003a .LFE30
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13267  .debug_loc:00000504 .LLST38
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15280  .debug_str:0000263f .LASF484
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13280  .debug_loc:00000524 .LLST39
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14228  .debug_str:00000089 .LASF485
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13298  .debug_loc:00000550 .LLST40
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14876  .debug_str:000017f1 .LASF486
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13320  .debug_loc:00000587 .LLST41
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1153   .text.Set_UpCounter:0000000e .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1158   .text.Set_UpCounter:00000016 .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1171   .text.Set_UpCounter:00000028 .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1179   .text.Set_UpCounter:00000031 .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1189   .text.Set_UpCounter:0000003a .LVL100
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15218  .debug_str:000023e4 .LASF487
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1484   .text.SPV_updatePowerProfile:000001c0 .LFE32
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13338  .debug_loc:000005b3 .LLST42
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14346  .debug_str:00000505 .LASF488
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13356  .debug_loc:000005df .LLST43
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14434  .debug_str:00000808 .LASF489
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13374  .debug_loc:0000060b .LLST44
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14614  .debug_str:00000e4f .LASF490
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13392  .debug_loc:00000637 .LLST45
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15004  .debug_str:00001c51 .LASF491
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13425  .debug_loc:00000687 .LLST46
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14788  .debug_str:000014ad .LASF492
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13482  .debug_loc:00000719 .LLST47
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13512  .debug_loc:00000766 .LLST48
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15092  .debug_str:00001f39 .LASF493
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15068  .debug_str:00001e55 .LASF494
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14890  .debug_str:0000184e .LASF495
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13555  .debug_loc:000007d5 .LLST49
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14534  .debug_str:00000b5b .LASF496
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15086  .debug_str:00001efe .LASF497
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13568  .debug_loc:000007f5 .LLST50
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1211   .text.SPV_updatePowerProfile:00000015 .LVL104
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1231   .text.SPV_updatePowerProfile:00000036 .LVL108
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1243   .text.SPV_updatePowerProfile:00000048 .LVL110
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1255   .text.SPV_updatePowerProfile:0000005f .LVL111
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1266   .text.SPV_updatePowerProfile:0000007a .LVL112
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1272   .text.SPV_updatePowerProfile:00000085 .LVL113
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1297   .text.SPV_updatePowerProfile:000000b3 .LVL119
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1396   .text.SPV_updatePowerProfile:0000013a .LVL134
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1403   .text.SPV_updatePowerProfile:00000142 .LVL135
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1415   .text.SPV_updatePowerProfile:0000015a .LVL136
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1427   .text.SPV_updatePowerProfile:00000175 .LVL138
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1433   .text.SPV_updatePowerProfile:00000180 .LVL139
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1451   .text.SPV_updatePowerProfile:0000019a .LVL143
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1474   .text.SPV_updatePowerProfile:000001b4 .LVL147
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14400  .debug_str:000006ec .LASF499
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14620  .debug_str:00000e80 .LASF500
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14352  .debug_str:00000532 .LASF501
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14606  .debug_str:00000e03 .LASF502
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15108  .debug_str:00001fc1 .LASF503
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15314  .debug_str:0000275f .LASF504
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3205   .text.SPV_superVisor:00000ba4 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13583  .debug_loc:0000081e .LLST51
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13601  .debug_loc:0000084a .LLST52
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15182  .debug_str:00002251 .LASF505
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13614  .debug_loc:0000086a .LLST53
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14368  .debug_str:000005dd .LASF506
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13632  .debug_loc:00000896 .LLST54
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13671  .debug_loc:00000901 .LLST55
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14956  .debug_str:00001a7c .LASF507
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13684  .debug_loc:00000921 .LLST56
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13722  .debug_loc:00000984 .LLST57
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15054  .debug_str:00001ddf .LASF508
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13823  .debug_loc:00000a88 .LLST58
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15452  .debug_str:00002c08 .LASF509
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14950  .debug_str:00001a5b .LASF510
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13834  .debug_loc:00000aa6 .LLST59
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13865  .debug_loc:00000af4 .LLST60
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14540  .debug_str:00000b91 .LASF511
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13876  .debug_loc:00000b12 .LLST61
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15116  .debug_str:00002015 .LASF512
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15340  .debug_str:00002840 .LASF513
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14460  .debug_str:0000090a .LASF514
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13894  .debug_loc:00000b3e .LLST62
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1661   .text.SPV_superVisor:00000105 .LBB48
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1679   .text.SPV_superVisor:00000129 .LBE48
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1662   .text.SPV_superVisor:00000105 .LBB49
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1678   .text.SPV_superVisor:00000129 .LBE49
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1789   .text.SPV_superVisor:000001f8 .LBB50
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1832   .text.SPV_superVisor:00000250 .LBE50
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1793   .text.SPV_superVisor:000001fc .LVL195
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1796   .text.SPV_superVisor:00000200 .LVL196
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1799   .text.SPV_superVisor:00000204 .LVL197
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1578   .text.SPV_superVisor:0000008a .LVL165
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1622   .text.SPV_superVisor:000000c6 .LVL168
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1628   .text.SPV_superVisor:000000d1 .LVL169
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1634   .text.SPV_superVisor:000000dc .LVL170
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1638   .text.SPV_superVisor:000000e3 .LVL171
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1642   .text.SPV_superVisor:000000ea .LVL172
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1683   .text.SPV_superVisor:0000012f .LVL177
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1687   .text.SPV_superVisor:00000136 .LVL178
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1691   .text.SPV_superVisor:0000013d .LVL179
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1701   .text.SPV_superVisor:00000154 .LVL180
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1712   .text.SPV_superVisor:00000169 .LVL182
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1722   .text.SPV_superVisor:00000177 .LVL185
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1733   .text.SPV_superVisor:0000018c .LVL186
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1738   .text.SPV_superVisor:00000196 .LVL187
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1744   .text.SPV_superVisor:000001a1 .LVL188
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1751   .text.SPV_superVisor:000001b0 .LVL189
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1762   .text.SPV_superVisor:000001c9 .LVL190
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1774   .text.SPV_superVisor:000001e2 .LVL191
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1835   .text.SPV_superVisor:00000254 .LVL198
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1848   .text.SPV_superVisor:0000026d .LVL200
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1851   .text.SPV_superVisor:00000271 .LVL201
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1857   .text.SPV_superVisor:00000278 .LVL203
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1875   .text.SPV_superVisor:0000029b .LVL206
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1878   .text.SPV_superVisor:0000029f .LVL207
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1884   .text.SPV_superVisor:000002aa .LVL208
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1890   .text.SPV_superVisor:000002b5 .LVL209
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1894   .text.SPV_superVisor:000002bc .LVL210
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1898   .text.SPV_superVisor:000002c3 .LVL211
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1908   .text.SPV_superVisor:000002d2 .LVL214
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1912   .text.SPV_superVisor:000002d9 .LVL215
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1916   .text.SPV_superVisor:000002e0 .LVL216
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1928   .text.SPV_superVisor:000002fa .LVL218
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1933   .text.SPV_superVisor:00000302 .LVL219
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1945   .text.SPV_superVisor:0000031c .LVL221
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1951   .text.SPV_superVisor:00000322 .LVL222
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1966   .text.SPV_superVisor:0000033b .LVL225
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1970   .text.SPV_superVisor:00000342 .LVL226
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1973   .text.SPV_superVisor:00000346 .LVL227
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1988   .text.SPV_superVisor:00000361 .LVL230
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1992   .text.SPV_superVisor:00000368 .LVL231
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2003   .text.SPV_superVisor:00000382 .LVL232
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2014   .text.SPV_superVisor:00000397 .LVL234
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2017   .text.SPV_superVisor:0000039b .LVL235
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3198   .text.SPV_superVisor:00000b9e .LVL393
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2297   .text.SPV_superVisor:0000056a .LBB52
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2354   .text.SPV_superVisor:000005c2 .LBE52
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2318   .text.SPV_superVisor:00000591 .LVL278
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2324   .text.SPV_superVisor:00000599 .LVL279
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2330   .text.SPV_superVisor:000005a1 .LVL280
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2344   .text.SPV_superVisor:000005ba .LVL281
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2350   .text.SPV_superVisor:000005c2 .LVL282
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2625   .text.SPV_superVisor:000007c1 .LBB54
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2719   .text.SPV_superVisor:00000865 .LBE54
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15328  .debug_str:000027e2 .LASF515
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13937  .debug_loc:00000ba6 .LLST63
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:13971  .debug_loc:00000bfe .LLST64
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2643   .text.SPV_superVisor:000007df .LVL311
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2658   .text.SPV_superVisor:000007fa .LVL313
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2664   .text.SPV_superVisor:00000805 .LVL314
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2668   .text.SPV_superVisor:0000080c .LVL315
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2672   .text.SPV_superVisor:00000813 .LVL316
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2695   .text.SPV_superVisor:0000083b .LVL320
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2706   .text.SPV_superVisor:00000850 .LVL321
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2786   .text.SPV_superVisor:000008d6 .LBB55
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2797   .text.SPV_superVisor:000008e9 .LBE55
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2895   .text.SPV_superVisor:0000099b .LBB57
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2994   .text.SPV_superVisor:00000a4f .LBE57
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14001  .debug_loc:00000c4b .LLST65
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14034  .debug_loc:00000ca2 .LLST66
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2907   .text.SPV_superVisor:000009b3 .LVL350
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2923   .text.SPV_superVisor:000009ce .LVL353
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2929   .text.SPV_superVisor:000009d9 .LVL354
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2933   .text.SPV_superVisor:000009e0 .LVL355
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2937   .text.SPV_superVisor:000009e7 .LVL356
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2962   .text.SPV_superVisor:00000a0f .LVL362
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2982   .text.SPV_superVisor:00000a3d .LVL364
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3044   .text.SPV_superVisor:00000aa6 .LBB58
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3188   .text.SPV_superVisor:00000b96 .LBE58
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3045   .text.SPV_superVisor:00000aa6 .LBB59
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3187   .text.SPV_superVisor:00000b96 .LBE59
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14054  .debug_loc:00000cd7 .LLST67
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3073   .text.SPV_superVisor:00000acd .LVL372
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3079   .text.SPV_superVisor:00000adb .LVL373
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3091   .text.SPV_superVisor:00000aef .LVL374
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3095   .text.SPV_superVisor:00000af6 .LVL375
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3104   .text.SPV_superVisor:00000b06 .LVL378
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3117   .text.SPV_superVisor:00000b19 .LVL380
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3128   .text.SPV_superVisor:00000b2f .LVL381
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3133   .text.SPV_superVisor:00000b38 .LVL382
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3146   .text.SPV_superVisor:00000b4a .LVL385
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3156   .text.SPV_superVisor:00000b5c .LVL387
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3164   .text.SPV_superVisor:00000b6b .LVL388
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3172   .text.SPV_superVisor:00000b7e .LVL389
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3180   .text.SPV_superVisor:00000b8b .LVL390
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1509   .text.SPV_superVisor:00000022 .LVL152
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1515   .text.SPV_superVisor:00000030 .LVL153
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1522   .text.SPV_superVisor:0000003d .LVL154
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1549   .text.SPV_superVisor:00000068 .LVL159
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1555   .text.SPV_superVisor:0000006e .LVL160
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1568   .text.SPV_superVisor:0000007a .LVL163
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2042   .text.SPV_superVisor:000003bc .LVL239
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2046   .text.SPV_superVisor:000003c3 .LVL240
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2053   .text.SPV_superVisor:000003cc .LVL243
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2063   .text.SPV_superVisor:000003de .LVL245
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2071   .text.SPV_superVisor:000003ea .LVL248
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2087   .text.SPV_superVisor:00000408 .LVL251
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2100   .text.SPV_superVisor:00000415 .LVL254
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2104   .text.SPV_superVisor:0000041c .LVL255
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2110   .text.SPV_superVisor:00000422 .LVL256
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2117   .text.SPV_superVisor:0000042a .LVL259
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2127   .text.SPV_superVisor:0000043b .LVL261
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2146   .text.SPV_superVisor:0000045c .LVL263
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2156   .text.SPV_superVisor:0000046f .LVL264
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2175   .text.SPV_superVisor:00000490 .LVL266
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2185   .text.SPV_superVisor:000004a7 .LVL267
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2209   .text.SPV_superVisor:000004da .LVL268
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2216   .text.SPV_superVisor:000004ea .LVL269
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2219   .text.SPV_superVisor:000004ee .LVL270
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2245   .text.SPV_superVisor:0000051d .LVL271
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2263   .text.SPV_superVisor:0000053a .LVL273
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2291   .text.SPV_superVisor:00000566 .LVL276
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2296   .text.SPV_superVisor:0000056a .LVL277
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2371   .text.SPV_superVisor:000005e7 .LVL283
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2378   .text.SPV_superVisor:000005f3 .LVL284
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2386   .text.SPV_superVisor:00000600 .LVL285
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2393   .text.SPV_superVisor:00000609 .LVL286
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2405   .text.SPV_superVisor:0000061b .LVL287
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2410   .text.SPV_superVisor:00000620 .LVL288
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2417   .text.SPV_superVisor:0000062d .LVL289
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2430   .text.SPV_superVisor:00000649 .LVL290
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2443   .text.SPV_superVisor:00000665 .LVL291
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2456   .text.SPV_superVisor:00000681 .LVL292
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2476   .text.SPV_superVisor:000006a4 .LVL294
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2523   .text.SPV_superVisor:0000070a .LVL295
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2532   .text.SPV_superVisor:00000719 .LVL297
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2542   .text.SPV_superVisor:0000072e .LVL298
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2546   .text.SPV_superVisor:00000736 .LVL299
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2550   .text.SPV_superVisor:0000073c .LVL300
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2556   .text.SPV_superVisor:00000743 .LVL301
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2578   .text.SPV_superVisor:0000076d .LVL302
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2588   .text.SPV_superVisor:0000077f .LVL303
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2595   .text.SPV_superVisor:0000078b .LVL305
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2605   .text.SPV_superVisor:0000079e .LVL306
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2616   .text.SPV_superVisor:000007b8 .LVL307
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2622   .text.SPV_superVisor:000007be .LVL308
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2728   .text.SPV_superVisor:00000873 .LVL325
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2745   .text.SPV_superVisor:00000888 .LVL329
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2754   .text.SPV_superVisor:00000893 .LVL332
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2760   .text.SPV_superVisor:0000089d .LVL333
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2771   .text.SPV_superVisor:000008ba .LVL334
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2783   .text.SPV_superVisor:000008d3 .LVL335
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2800   .text.SPV_superVisor:000008ed .LVL336
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2806   .text.SPV_superVisor:000008f5 .LVL337
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2810   .text.SPV_superVisor:000008fc .LVL338
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2815   .text.SPV_superVisor:00000906 .LVL339
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2847   .text.SPV_superVisor:0000094a .LVL342
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2857   .text.SPV_superVisor:0000095c .LVL343
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2863   .text.SPV_superVisor:00000968 .LVL344
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2873   .text.SPV_superVisor:0000097c .LVL345
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2890   .text.SPV_superVisor:00000996 .LVL348
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2997   .text.SPV_superVisor:00000a53 .LVL367
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3002   .text.SPV_superVisor:00000a58 .LVL368
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3005   .text.SPV_superVisor:00000a5c .LVL369
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3043   .text.SPV_superVisor:00000aa6 .LVL371
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14486  .debug_str:000009ff .LASF516
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15252  .debug_str:00002560 .LASF517
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15392  .debug_str:000029f5 .LASF518
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15412  .debug_str:00002aaa .LASF519
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14826  .debug_str:0000161d .LASF520
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14570  .debug_str:00000cd0 .LASF521
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14948  .debug_str:00001a4c .LASF522
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15228  .debug_str:0000244c .LASF523
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15088  .debug_str:00001f11 .LASF524
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14680  .debug_str:00001094 .LASF525
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15368  .debug_str:0000292b .LASF526
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14658  .debug_str:00000fe0 .LASF527
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14386  .debug_str:0000066d .LASF528
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15334  .debug_str:00002812 .LASF529
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15376  .debug_str:00002994 .LASF530
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15272  .debug_str:000025f2 .LASF531
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14838  .debug_str:00001691 .LASF532
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14548  .debug_str:00000bdd .LASF533
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14526  .debug_str:00000b0e .LASF534
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15028  .debug_str:00001cf9 .LASF535
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14580  .debug_str:00000d23 .LASF536
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15200  .debug_str:00002323 .LASF537
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14628  .debug_str:00000ee6 .LASF538
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14792  .debug_str:000014ce .LASF539
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14816  .debug_str:000015b7 .LASF540
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14360  .debug_str:00000580 .LASF541
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14554  .debug_str:00000c13 .LASF542
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14634  .debug_str:00000f0d .LASF543
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15020  .debug_str:00001cba .LASF544
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14502  .debug_str:00000a52 .LASF545
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14332  .debug_str:00000476 .LASF546
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14882  .debug_str:0000181d .LASF547
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14932  .debug_str:000019ce .LASF548
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15384  .debug_str:000029cb .LASF549
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15006  .debug_str:00001c5c .LASF550
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14696  .debug_str:00001107 .LASF551
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14256  .debug_str:0000016f .LASF552
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15266  .debug_str:000025d1 .LASF553
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14210  .debug_str:00000000 .LASF554
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15450  .debug_str:00002bfc .LASF555
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14406  .debug_str:0000071e .LASF556
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15390  .debug_str:000029ee .LASF557
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15114  .debug_str:0000200b .LASF558
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14940  .debug_str:00001a0a .LASF559
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15404  .debug_str:00002a5e .LASF560
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14298  .debug_str:00000318 .LASF561
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14258  .debug_str:0000017e .LASF562
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15040  .debug_str:00001d5d .LASF563
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14632  .debug_str:00000efc .LASF564
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14944  .debug_str:00001a2e .LASF565
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14872  .debug_str:000017d3 .LASF566
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15224  .debug_str:0000242a .LASF567
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14694  .debug_str:000010f2 .LASF568
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15050  .debug_str:00001db6 .LASF569
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14736  .debug_str:00001293 .LASF570
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14440  .debug_str:00000830 .LASF571
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14242  .debug_str:000000fc .LASF572
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14278  .debug_str:00000252 .LASF573
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14908  .debug_str:000018ec .LASF574
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14674  .debug_str:00001072 .LASF575
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14676  .debug_str:0000107a .LASF576
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14760  .debug_str:00001373 .LASF577
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14624  .debug_str:00000eb2 .LASF622
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14252  .debug_str:00000151 .LASF582
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14698  .debug_str:00001127 .LASF579
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14904  .debug_str:000018c7 .LASF581
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15158  .debug_str:00002196 .LASF583
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14864  .debug_str:00001793 .LASF584
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14362  .debug_str:00000596 .LASF585
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14812  .debug_str:00001585 .LASF586
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14250  .debug_str:0000012d .LASF587
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14970  .debug_str:00001ae1 .LASF588
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14538  .debug_str:00000b7b .LASF589
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15282  .debug_str:0000264b .LASF590
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14848  .debug_str:000016d5 .LASF591
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15170  .debug_str:00002203 .LASF592
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15066  .debug_str:00001e3c .LASF593
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14388  .debug_str:0000068b .LASF594
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14902  .debug_str:000018b6 .LASF595
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15148  .debug_str:00002149 .LASF596
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14462  .debug_str:0000091d .LASF597
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14840  .debug_str:000016a1 .LASF598
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15466  .debug_str:00002ca9 .LASF599
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14576  .debug_str:00000d00 .LASF600
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15230  .debug_str:0000245a .LASF601
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14794  .debug_str:000014e0 .LASF602
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14374  .debug_str:0000060f .LASF603
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14380  .debug_str:00000642 .LASF604
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14562  .debug_str:00000c6a .LASF605
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15456  .debug_str:00002c2b .LASF606
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15232  .debug_str:0000246c .LASF607
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15110  .debug_str:00001fcd .LASF608
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14800  .debug_str:00001514 .LASF609
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14546  .debug_str:00000bb7 .LASF610
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15194  .debug_str:000022e7 .LASF611
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14938  .debug_str:000019f4 .LASF612
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14618  .debug_str:00000e77 .LASF613
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14290  .debug_str:000002d9 .LASF614
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15162  .debug_str:000021b3 .LASF615
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15258  .debug_str:00002589 .LASF616
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14874  .debug_str:000017e2 .LASF617
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14988  .debug_str:00001bb1 .LASF618
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14730  .debug_str:0000125c .LASF619
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15316  .debug_str:0000276e .LASF620
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14878  .debug_str:000017f8 .LASF621
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14738  .debug_str:0000129d .LASF623
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14774  .debug_str:000013f8 .LASF624
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:15240  .debug_str:000024bf .LASF625
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14260  .debug_str:0000018e .LASF626
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14716  .debug_str:000011da .LASF627
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14584  .debug_str:00000d47 .LASF628
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14986  .debug_str:00001b92 .LASF629
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:14430  .debug_str:000007de .LASF630
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:233    .text.SPV_updateFunctionValue:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:235    .text.SPV_updateFunctionValue:00000004 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:231    .text.SPV_updateFunctionValue:00000000 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:253    .text.SPV_updateFunctionValue:00000018 .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:277    .text.SPV_updateFunctionValue:00000033 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:283    .text.SPV_updateFunctionValue:00000035 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:248    .text.SPV_updateFunctionValue:00000016 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:273    .text.SPV_updateFunctionValue:0000002e .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:303    .text.SPV_getCycleHeaderPtr:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:305    .text.SPV_getCycleHeaderPtr:00000004 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:301    .text.SPV_getCycleHeaderPtr:00000000 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:311    .text.SPV_getCycleHeaderPtr:0000000b .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:309    .text.SPV_getCycleHeaderPtr:00000008 .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:345    .text.SPV_updateCycleLabel:00000002 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:347    .text.SPV_updateCycleLabel:00000004 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:356    .text.SPV_updateCycleLabel:00000017 .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:361    .text.SPV_updateCycleLabel:0000001d .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:380    .text.SPV_searchCycleByLabel:00000002 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:382    .text.SPV_searchCycleByLabel:00000004 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:378    .text.SPV_searchCycleByLabel:00000000 .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:396    .text.SPV_searchCycleByLabel:00000012 .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:384    .text.SPV_searchCycleByLabel:00000006 .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:423    .text.SPV_searchCycleByLabel:0000002e .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:491    .text.SPV_testRefCycleLabel:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:493    .text.SPV_testRefCycleLabel:00000004 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:489    .text.SPV_testRefCycleLabel:00000000 .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:511    .text.SPV_testRefCycleLabel:0000001d .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:516    .text.SPV_testRefCycleLabel:00000023 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:520    .text.SPV_testRefCycleLabel:00000025 .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:506    .text.SPV_testRefCycleLabel:00000016 .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:597    .text.SPV_isCycleWithLabelRunning:00000000 .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:663    .text.SPV_manageRequestFromRemote:00000002 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:665    .text.SPV_manageRequestFromRemote:00000004 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:714    .text.SPV_manageRequestFromRemote:0000004e .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:754    .text.SPV_manageRequestFromRemote:0000008c .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:769    .text.SPV_goingToSleepManager:00000002 .LCFI12
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:771    .text.SPV_goingToSleepManager:00000004 .LCFI13
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:842    .text.SPV_goingToSleepManager:00000087 .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:854    .text.SPV_goingToSleepManager:00000096 .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:860    .text.SPV_goingToSleepManager:00000098 .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:901    .text.SPV_RegulationsMonitor:00000002 .LCFI14
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:899    .text.SPV_RegulationsMonitor:00000000 .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:990    .text.SPV_RegulationsMonitor:00000090 .LVL81
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:958    .text.SPV_RegulationsMonitor:0000005c .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:967    .text.SPV_RegulationsMonitor:00000065 .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:902    .text.SPV_RegulationsMonitor:00000002 .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:919    .text.SPV_RegulationsMonitor:0000002c .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:970    .text.SPV_RegulationsMonitor:0000006b .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1019   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000002 .LCFI15
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1021   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000004 .LCFI16
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1049   .text.SVP_BuildBmpFunctionsActingAsMofifiers:0000003f .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1091   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000080 .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1055   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000046 .LVL85
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1082   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000072 .LVL87
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1022   .text.SVP_BuildBmpFunctionsActingAsMofifiers:00000004 .LVL82
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1106   .text.SPV_getPowerProfileIndex:00000002 .LCFI17
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1104   .text.SPV_getPowerProfileIndex:00000000 .LVL89
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1110   .text.SPV_getPowerProfileIndex:00000006 .LVL90
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1112   .text.SPV_getPowerProfileIndex:00000009 .LVL91
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1145   .text.Set_UpCounter:00000002 .LCFI18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1143   .text.Set_UpCounter:00000000 .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1151   .text.Set_UpCounter:0000000a .LVL94
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1186   .text.Set_UpCounter:00000036 .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1200   .text.SPV_updatePowerProfile:00000002 .LCFI19
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1202   .text.SPV_updatePowerProfile:00000005 .LCFI20
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1198   .text.SPV_updatePowerProfile:00000000 .LVL101
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1209   .text.SPV_updatePowerProfile:00000011 .LVL103
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1233   .text.SPV_updatePowerProfile:00000038 .LVL109
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1313   .text.SPV_updatePowerProfile:000000c8 .LVL122
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1205   .text.SPV_updatePowerProfile:00000009 .LVL102
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1311   .text.SPV_updatePowerProfile:000000c6 .LVL121
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1325   .text.SPV_updatePowerProfile:000000da .LVL123
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1445   .text.SPV_updatePowerProfile:00000194 .LVL142
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1456   .text.SPV_updatePowerProfile:000001a5 .LVL144
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1461   .text.SPV_updatePowerProfile:000001a9 .LVL145
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1480   .text.SPV_updatePowerProfile:000001bd .LVL148
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1222   .text.SPV_updatePowerProfile:0000002b .LVL105
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1292   .text.SPV_updatePowerProfile:000000a8 .LVL118
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1300   .text.SPV_updatePowerProfile:000000b8 .LVL120
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1344   .text.SPV_updatePowerProfile:000000fc .LVL124
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1352   .text.SPV_updatePowerProfile:00000103 .LVL126
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1364   .text.SPV_updatePowerProfile:00000115 .LVL127
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1369   .text.SPV_updatePowerProfile:00000119 .LVL129
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1376   .text.SPV_updatePowerProfile:00000123 .LVL130
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1420   .text.SPV_updatePowerProfile:00000166 .LVL137
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1469   .text.SPV_updatePowerProfile:000001af .LVL146
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1367   .text.SPV_updatePowerProfile:00000117 .LVL128
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1379   .text.SPV_updatePowerProfile:00000126 .LVL131
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1225   .text.SPV_updatePowerProfile:0000002e .LVL106
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1280   .text.SPV_updatePowerProfile:00000094 .LVL116
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1283   .text.SPV_updatePowerProfile:00000099 .LVL117
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1347   .text.SPV_updatePowerProfile:000000fe .LVL125
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1384   .text.SPV_updatePowerProfile:00000128 .LVL132
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1436   .text.SPV_updatePowerProfile:00000182 .LVL140
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1275   .text.SPV_updatePowerProfile:00000087 .LVL114
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1228   .text.SPV_updatePowerProfile:00000030 .LVL107
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1387   .text.SPV_updatePowerProfile:0000012b .LVL133
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1493   .text.SPV_superVisor:00000002 .LCFI21
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1495   .text.SPV_superVisor:00000005 .LCFI22
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1527   .text.SPV_superVisor:00000043 .LVL155
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1557   .text.SPV_superVisor:0000006f .LVL161
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1562   .text.SPV_superVisor:00000074 .LVL162
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2081   .text.SPV_superVisor:000003f8 .LVL250
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2089   .text.SPV_superVisor:00000409 .LVL252
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2094   .text.SPV_superVisor:0000040e .LVL253
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3185   .text.SPV_superVisor:00000b96 .LVL391
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3200   .text.SPV_superVisor:00000ba1 .LVL394
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2525   .text.SPV_superVisor:0000070c .LVL296
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2590   .text.SPV_superVisor:00000782 .LVL304
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2717   .text.SPV_superVisor:00000865 .LVL323
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2722   .text.SPV_superVisor:00000868 .LVL324
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2730   .text.SPV_superVisor:00000876 .LVL326
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2734   .text.SPV_superVisor:00000878 .LVL327
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2743   .text.SPV_superVisor:00000884 .LVL328
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2747   .text.SPV_superVisor:0000088a .LVL330
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2751   .text.SPV_superVisor:0000088c .LVL331
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2821   .text.SPV_superVisor:00000912 .LVL340
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2826   .text.SPV_superVisor:0000091a .LVL341
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2992   .text.SPV_superVisor:00000a4f .LVL366
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1840   .text.SPV_superVisor:0000025a .LVL199
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1853   .text.SPV_superVisor:00000274 .LVL202
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2037   .text.SPV_superVisor:000003b8 .LVL238
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1590   .text.SPV_superVisor:00000099 .LVL166
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1617   .text.SPV_superVisor:000000be .LVL167
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1653   .text.SPV_superVisor:000000ff .LVL174
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1715   .text.SPV_superVisor:0000016e .LVL183
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1783   .text.SPV_superVisor:000001ef .LVL193
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1869   .text.SPV_superVisor:0000028c .LVL205
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1902   .text.SPV_superVisor:000002cb .LVL212
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1922   .text.SPV_superVisor:000002ee .LVL217
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1960   .text.SPV_superVisor:00000334 .LVL223
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2008   .text.SPV_superVisor:0000038b .LVL233
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1542   .text.SPV_superVisor:0000005e .LVL158
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1665   .text.SPV_superVisor:00000107 .LVL176
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1719   .text.SPV_superVisor:00000170 .LVL184
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1859   .text.SPV_superVisor:0000027b .LVL204
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1906   .text.SPV_superVisor:000002ce .LVL213
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1964   .text.SPV_superVisor:00000337 .LVL224
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1982   .text.SPV_superVisor:0000035a .LVL228
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1986   .text.SPV_superVisor:0000035d .LVL229
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2026   .text.SPV_superVisor:000003af .LVL236
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2032   .text.SPV_superVisor:000003b6 .LVL237
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2048   .text.SPV_superVisor:000003c5 .LVL241
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2051   .text.SPV_superVisor:000003c8 .LVL242
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2055   .text.SPV_superVisor:000003ce .LVL244
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2065   .text.SPV_superVisor:000003e0 .LVL246
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2068   .text.SPV_superVisor:000003e3 .LVL247
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2073   .text.SPV_superVisor:000003ec .LVL249
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2112   .text.SPV_superVisor:00000424 .LVL257
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2115   .text.SPV_superVisor:00000426 .LVL258
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2119   .text.SPV_superVisor:0000042c .LVL260
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2144   .text.SPV_superVisor:00000458 .LVL262
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2260   .text.SPV_superVisor:00000533 .LVL272
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2173   .text.SPV_superVisor:0000048c .LVL265
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2287   .text.SPV_superVisor:00000562 .LVL275
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1646   .text.SPV_superVisor:000000f2 .LVL173
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2469   .text.SPV_superVisor:00000696 .LVL293
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3192   .text.SPV_superVisor:00000b98 .LVL392
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1501   .text.SPV_superVisor:0000000f .LVL150
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3136   .text.SPV_superVisor:00000b3b .LVL383
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3150   .text.SPV_superVisor:00000b54 .LVL386
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1496   .text.SPV_superVisor:00000005 .LVL149
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1703   .text.SPV_superVisor:00000156 .LVL181
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1935   .text.SPV_superVisor:00000304 .LVL220
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1572   .text.SPV_superVisor:00000081 .LVL164
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1776   .text.SPV_superVisor:000001e4 .LVL192
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1788   .text.SPV_superVisor:000001f8 .LVL194
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2628   .text.SPV_superVisor:000007c4 .LVL309
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2652   .text.SPV_superVisor:000007ef .LVL312
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2886   .text.SPV_superVisor:00000992 .LVL347
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2893   .text.SPV_superVisor:0000099b .LVL349
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2976   .text.SPV_superVisor:00000a35 .LVL363
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2984   .text.SPV_superVisor:00000a3f .LVL365
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3009   .text.SPV_superVisor:00000a64 .LVL370
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2631   .text.SPV_superVisor:000007c7 .LVL310
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2678   .text.SPV_superVisor:0000081d .LVL317
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2684   .text.SPV_superVisor:00000823 .LVL318
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2692   .text.SPV_superVisor:00000835 .LVL319
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2708   .text.SPV_superVisor:00000853 .LVL322
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2882   .text.SPV_superVisor:00000990 .LVL346
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2912   .text.SPV_superVisor:000009bb .LVL351
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2917   .text.SPV_superVisor:000009c3 .LVL352
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2956   .text.SPV_superVisor:00000a04 .LVL360
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2941   .text.SPV_superVisor:000009ef .LVL357
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2944   .text.SPV_superVisor:000009f1 .LVL358
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2950   .text.SPV_superVisor:000009f7 .LVL359
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2959   .text.SPV_superVisor:00000a09 .LVL361
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3097   .text.SPV_superVisor:00000af8 .LVL376
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3101   .text.SPV_superVisor:00000b00 .LVL377
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3112   .text.SPV_superVisor:00000b12 .LVL379
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3140   .text.SPV_superVisor:00000b41 .LVL384
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3671   .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:393    .text.SPV_searchCycleByLabel:00000010 .LBE8
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:398    .text.SPV_searchCycleByLabel:00000012 .LBB11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:412    .text.SPV_searchCycleByLabel:00000025 .LBE11
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:389    .text.SPV_searchCycleByLabel:0000000e .LBB9
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:392    .text.SPV_searchCycleByLabel:00000010 .LBE9
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:399    .text.SPV_searchCycleByLabel:00000012 .LBB10
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:411    .text.SPV_searchCycleByLabel:00000025 .LBE10
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:545    .text.SPV_setupDelayCounter:0000000c .LBE18
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:549    .text.SPV_setupDelayCounter:0000000f .LBB21
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:556    .text.SPV_setupDelayCounter:00000012 .LBE21
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:1573   .text.SPV_superVisor:00000081 .LBB47
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:2034   .text.SPV_superVisor:000003b6 .LBE47
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3189   .text.SPV_superVisor:00000b96 .LBB60
C:\Users\Andrea\AppData\Local\Temp\ccH8Hw0O.s:3202   .text.SPV_superVisor:00000ba1 .LBE60

UNDEFINED SYMBOLS
_Flag_levTOtimeRef_update
_FltLoadToutData
_FltWarning
_ActiveAlgorithmBmp
_TerminatedAlgorithmBmp
_Flags_2
_HWC_Flags
_State5
_ActiveAlgorithmBmpOld
_ReadVS_Data
_dirty_foam_Data
_PM_ALT_getPosNotDef
_HIO_SetAltPosition
_FltFlagsKO
_FLT_checkForCurrentFault
_FLT_faultMgmtDataReset
_FltFlagsVS
_Pump_Load_Data
_SWTC_Stop
_Flags_1
_Flags_3
_FaultMgmt_Data
_STC_LastCycleStat_Init
_STC_LastCyclesArray_Init
_STC_functionValueUpdateStatistics
_STC_userDishRack_H2oHardness_Update
_STC_regenerate_spaklingAid_Update
_ITP_phaseTrackerReset
_SelectorFunctionValue
_StartedCycle
_Interpreter_Data
_ITP_interpreterFlagsInit
_LIB_Backup_SetBackupSource
_LIB_Backup_ForceBackup
_LIB_Reset_ForceColdReset
_REG_checkIfChanged
_REG_getFunctionValueByID
_REG_updateOldReg
_BasicLoader
_Tab_HWCCyclesNum
_Paused_Intpt_Data
_Set_SmallCounter
_ApplicationState
_ExternalRequest
_StopMicroprogCounters
_uP_AltCtrl_Data
_uP_SparklingAid_Data
_Paused_JmpPhase
_JmpPhase
_DelayInMinutes
_MSettingBasicLoader
_SWTC_SetPrescaler
_SWTC_SetSValue
_SWTC_SetMValue
_SWTC_Retrigger
_PM_PowerProfile_IsRecomputationReady
_APP_AlphaCoefficientsComputation
_PM_PowerProfile_GetPowerProfile
_ApplPowerProfileStatus
_PM_PowerProfile_UpdatePowerProfileStatus
_PM_PowerProfile_TotalProfileEnergy
_totalEnergyEst
_APP_PowerUp_flg
_PM_PowerProfile_UpdateTemporalFilters
_BufOldReg
_BufNewReg
_SWTC_Run
_uiSavedEnPhElapsedTime_Counter
_cycle_loaded_water
_SWTC_IsStopped
_MachineStatistics
_IncWordWithCheck
_FLT_applCurrentFaultReset
_FLT_safetyBitmapReset
_FltBLDCComm_Tout
_FltBLDCMotor_Tout
_FltHeatToutData
_FLT_updateGlobalFaultCode
_EnergyPause_Status
_TempCycle_Stats
_Join_Leave_Reg
_SWTC_IsExpired
_CurrentFault
_STC_updateLastCycleStat_END
_DishRackFunctionValue
_WaterForRegenerate
_ZoneWashFunctionValue
_RinseAidFunctionValue
_GIValid
_Virtual_Sensor_Value_jumpifcopy
_Virtual_Sensor_Value
_ITP_programFlowInterpreter
_SWTC_GetElapsedTime
_PM_PowerProfile_SetDuration
_PM_PowerProfile_SetForceReload
_PM_PowerProfile_ResetForceReload
_ITP_loadsMgmt
_PM_PowerProfile_GetEnergyPhaseMaxActivationDelay
_No_Fault
_FLT_lastFaultUpdate
_bkp_CompItpDataCycle
_bkp_CompItpDataPhase
_bkp_CompItpDatamSetting
_bkp_CompItpDataFirstStatement
_STC_superVisorUpdateStatistics
_REG_updateFuncToMainOldReg
_Tab_HWCFuncNum
_PM_PowerProfile_ComputeTimeToEnd
_TTEEstimation
