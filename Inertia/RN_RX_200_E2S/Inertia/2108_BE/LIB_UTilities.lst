   1                             		.file	"LIB_UTilities.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.Endian16_Swap,"ax",@progbits
   5                             		.global	_Endian16_Swap
   7                             	_Endian16_Swap:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library/LIB_UTilities.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Copyright (c) 2009-2010, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
   7:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
   8:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \par		Descrizione
   9:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Implementazione funzioni di utilit√†.
  10:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  11:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \file		LIB_Utilities.c
  12:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \ingroup	PM_Library
  13:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		12/05/2009
  14:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	01.00.00
  15:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author		Roberto Fioravanti
  16:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  17:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  18:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \par		History
  19:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  20:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.75
  21:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		25/10/2010
  22:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Roberto Fioravanti
  23:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  24:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- addition of SFGetDisplacementNumber method
  25:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  26:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.59
  27:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		03/09/2010
  28:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Stefano Ughi
  29:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  30:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- added uint8_t WboxLoader(uint8_t displacement, Loader_Struct* pDataOut);
  31:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  32:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.58
  33:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		01/09/2010
  34:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Stefano Ughi
  35:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  36:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- added uint8_t BasicLoader(settingPntr_t pointer, uint8_t displacement, Loader_Struct* pDataO
  37:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  38:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.55
  39:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		30/07/2010
  40:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Roberto Fioravanti
  41:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  42:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- LIB_ComputeSettingFileCheckSum available #if defined(HAL_FLS_SUPPORT)
  43:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  44:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.39
  45:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		12/04/2010
  46:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Roberto Fioravanti
  47:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  48:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- addiction LIB_ChkComputation
  49:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  50:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.26
  51:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		12/01/2010
  52:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Stefano Ughi
  53:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  54:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- LIB_ComputeSettingFileCheckSum added
  55:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n      - LIB_ConvTwoByteInWord added
  56:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  57:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.25
  58:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		08/01/2009
  59:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Roberto Fioravanti
  60:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  61:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- LIB_Delay_us
  62:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  63:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.12
  64:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		08/10/2009
  65:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Roberto Fioravanti
  66:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  67:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- _NOP_();
  68:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n
  69:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		00.00.05
  70:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		26/06/2009
  71:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		Roberto Fioravanti
  72:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n		changes
  73:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- LIB_Delay_us
  74:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n 		- LIB_MemcpyFromLast
  75:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  76:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \n etc.
  77:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
  78:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  79:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  80:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  81:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  82:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  83:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ******** */
  84:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Includes */
  85:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ******** */
  86:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #include "LIB_Utilities.h"
  87:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #include "LIB_Setting.h"
  88:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #include "LIB_Generic.h"
  89:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #include "LIB_crcExp.h"
  90:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ****************** */
  91:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Defines and Macros */
  92:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ****************** */
  93:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /** Setting file pointer Checksum */
  94:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  95:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if !defined(FCT_START_ADDR) && defined(APPL_WBOX_ADDRESS)
  96:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #define FCT_START_ADDR        APPL_WBOX_ADDRESS
  97:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
  98:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
  99:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* *************************** */
 101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Typedef, Structs and Unions */
 102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* *************************** */
 103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* **************************** */
 106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Prototype of local functions */
 107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* **************************** */
 108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ****************** */
 111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Exported variables */
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ****************** */
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** extern const unsigned char Eeprom[];
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_SETTING_CALIBRATION_ON_WBOX)
 116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** extern const uint16_t WBOXData[];
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* **************** */
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Global variables */
 120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* **************** */
 121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ***************** */
 124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Exported function */
 125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* ***************** */
 126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t Endian16_Swap(uint16_t value)
 128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
  10                             		.loc 1 128 0
  11                             	.LVL0:
 129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return (uint16_t)(((value & (uint16_t)0x00FF) << 8) | ((value & (uint16_t)0xFF00) >> 8));
  12                             		.loc 1 129 0
  13 0000 5F 11                   		movu.W	r1, r1
  14 0002 FD C8 1E                		shll	#8, r1, r14
  15 0005 68 81                   		shlr	#8, r1
  16                             	.LVL1:
  17 0007 57 E1                   		or	r14, r1
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
  18                             		.loc 1 130 0
  19 0009 5F 11                   		movu.W	r1, r1
  20 000b 02                      		rts
  21                             	.LFE0:
  23                             		.section	.text.LIB_MemcpyFromLast,"ax",@progbits
  24                             		.global	_LIB_MemcpyFromLast
  26                             	_LIB_MemcpyFromLast:
  27                             	.LFB1:
 131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Copies until 255 bytes from last.
 135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \warning
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version		1.0.0
 139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date 			06/07/2009
 140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author			Roberto Fioravanti
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** void LIB_MemcpyFromLast
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** (
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   void *pDst, 					/* Destination buffer */
 145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   const void *pSrc, 		/* Source buffer */
 146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t n   					/* Byte count */
 147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** )
 148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
  28                             		.loc 1 148 0
  29                             	.LVL2:
  30 0000 7E A7                   		push.l	r7
  31                             	.LCFI0:
 149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t * sd = (uint8_t *)pDst+n-1;
  32                             		.loc 1 149 0
  33 0002 5B 3E                   		movu.B	r3, r14
  34                             	.LVL3:
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** void LIB_MemcpyFromLast
  35                             		.loc 1 142 0
  36 0004 4B E2                   		add	r14, r2
  37                             	.LVL4:
  38 0006 4B E1                   		add	r14, r1
  39                             	.LVL5:
 150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   const uint8_t * ss = (const uint8_t *)pSrc+n-1;
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	while(n--)
  40                             		.loc 1 151 0
  41 0008 08                      		bra	.L3
  42                             	.LVL6:
  43                             	.L4:
 152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  *sd--=*ss--;
  44                             		.loc 1 153 0
  45 0009 FD 2C 27                		mov.B	[-r2], r7
  46 000c FD 24 17                		mov.B	r7, [-r1]
  47 000f 03                      		.balign 2,3,1
  48                             	.L3:
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	while(n--)
  49                             		.loc 1 151 0 discriminator 1
  50 0010 60 13                   		sub	#1, r3
  51                             	.LVL7:
  52 0012 5B 34                   		movu.B	r3, r4
  53 0014 75 54 FF                		cmp	#0xff, r4
  54 0017 21 F2                   		bne	.L4
 154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
  55                             		.loc 1 155 0
  56 0019 3F 77 01                		rtsd	#4, r7-r7
  57                             	.LFE1:
  59                             		.section	.text.LIB_ComputeSettingFileCheckSum,"ax",@progbits
  60                             		.global	_LIB_ComputeSettingFileCheckSum
  62                             	_LIB_ComputeSettingFileCheckSum:
  63                             	.LFB2:
 156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Setting File CheckSum Computation.
 158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		Start checksum start point computation.
 160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		End checksum end point computation.
 161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \attention \b  SF_NUM_BYTES_TO_CHECK must be fit by user.
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	LIB_CompChkType
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval		jobDone TRUE/FALSE if TRUE checkSum avaible.
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval		checkSum checksum computed.
 168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	stefano.ughi
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Jan 12, 2010
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by stefano.ughi
 175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(HAL_FLS_SUPPORT)
 177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** LIB_CompChkType LIB_ComputeSettingFileCheckSum(FLS_positionType Start,FLS_positionType End)
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
  64                             		.loc 1 178 0
  65                             	.LVL8:
 179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** LIB_CompChkType libCompChk;
 180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** LIB_NumBytesToCheckType i;
 181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** static uint16_t PartialChecksum;
 182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** static enum CompChkStateTag
 183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     COMP_CHK_INIT=0,
 185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     COMP_CHK_RUN,
 186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     COMP_CHK_END
 187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }CompChkState={COMP_CHK_INIT};
 188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** static const uint8_t *pData;
 189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	libCompChk.jobDone = FALSE;
 191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     switch(CompChkState)
  66                             		.loc 1 191 0
  67 0000 FB E2 00 00 00 00       		mov.L	#_CompChkState.9375, r14
  68 0006 EC E4                   		mov.L	[r14], r4
  69 0008 61 14                   		cmp	#1, r4
  70 000a 20 1E                   		beq	.L9
  71 000c 61 04                   		cmp	#0, r4
  72 000e 17                      		beq	.L8
  73 000f 61 24                   		cmp	#2, r4
  74 0011 21 7C                   		bne	.L19
  75 0013 2E 6C                   		bra	.L10
  76                             	.L8:
 192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         case COMP_CHK_INIT:
 194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             PartialChecksum = 0;
  77                             		.loc 1 194 0
  78 0015 FB 32 00 00 00 00       		mov.L	#_PartialChecksum.9370, r3
  79 001b D3 34                   		mov.W	r4, [r3]
 195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             pData = (uint8_t*)Start;
  80                             		.loc 1 195 0
  81 001d FB 42 00 00 00 00       		mov.L	#_pData.9376, r4
  82 0023 E3 41                   		mov.L	r1, [r4]
 196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             CompChkState = COMP_CHK_RUN;
  83                             		.loc 1 196 0
  84 0025 F8 E6 01                		mov.L	#1, [r14]
  85                             		.balign 2,3,5
  86                             	.L9:
  87                             	.LVL9:
  88 0028 FB E2 00 00 00 00       		mov.L	#_pData.9376, r14
  89 002e EC EE                   		mov.L	[r14], r14
  90 0030 FB 42 00 00 00 00       		mov.L	#_PartialChecksum.9370, r4
  91 0036 DC 43                   		mov.W	[r4], r3
  92 0038 FB 42 00 00 00 00       		mov.L	#_CompChkState.9375, r4
  93 003e EC 41                   		mov.L	[r4], r1
  94                             	.LVL10:
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
  95                             		.loc 1 178 0 discriminator 1
  96 0040 66 04                   		mov	#0, r4
  97                             	.LVL11:
  98                             		.balign 2,3,1
  99                             	.L12:
 197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             /*lint -fallthrough */
 198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         case COMP_CHK_RUN:
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             for ( i = 0; i < SF_NUM_BYTES_TO_CHECK; i++ )
 200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             {
 201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                 if ( pData < (uint8_t*)End )
 100                             		.loc 1 201 0
 101 0042 47 2E                   		cmp	r2, r14
 102 0044 22 12                   		bgeu	.L14
 202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                 {
 203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                     PartialChecksum ^= *pData;
 103                             		.loc 1 203 0
 104 0046 FD 38 EF                		movu.B	[r14+], r15
 105 0049 FC 37 F3                		xor	r15, r3
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                     PartialChecksum = (uint16_t)(((PartialChecksum & 0x8000) ? 1 : 0) | (PartialChe
 106                             		.loc 1 204 0
 107 004c 5F 33                   		movu.W	r3, r3
 108 004e FD 8F 3F                		shlr	#15, r3, r15
 109 0051 4B 33                   		add	r3, r3
 110 0053 57 F3                   		or	r15, r3
 111 0055 0F                      		bra	.L11
 112                             	.L14:
 205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                     pData++;
 206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                 }
 207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                 else
 208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                 {
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                     i = SF_NUM_BYTES_TO_CHECK;
 210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                     CompChkState = COMP_CHK_END;
 113                             		.loc 1 210 0
 114 0056 66 21                   		mov.L	#2, r1
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                     i = SF_NUM_BYTES_TO_CHECK;
 115                             		.loc 1 209 0
 116 0058 75 44 40                		mov	#64, r4
 117 005b 03                      		.balign 2,3,1
 118                             	.L11:
 119                             	.LVL12:
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             for ( i = 0; i < SF_NUM_BYTES_TO_CHECK; i++ )
 120                             		.loc 1 199 0
 121 005c 62 14                   		add	#1, r4
 122                             	.LVL13:
 123 005e 5B 4F                   		movu.B	r4, r15
 124 0060 75 5F 3F                		cmp	#63, r15
 125 0063 25 DF                   		bleu	.L12
 126 0065 FB 42 00 00 00 00       		mov.L	#_pData.9376, r4
 127                             	.LVL14:
 128 006b E3 4E                   		mov.L	r14, [r4]
 129 006d FB E2 00 00 00 00       		mov.L	#_PartialChecksum.9370, r14
 130 0073 D3 E3                   		mov.W	r3, [r14]
 131 0075 FB E2 00 00 00 00       		mov.L	#_CompChkState.9375, r14
 132 007b E3 E1                   		mov.L	r1, [r14]
 133 007d 2E 13                   		bra	.L20
 134                             	.LVL15:
 135                             	.L10:
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                 }
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             }
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             break;
 214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         case COMP_CHK_END:
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         	libCompChk.jobDone = TRUE;
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         	libCompChk.checkSum = PartialChecksum;
 136                             		.loc 1 216 0
 137 007f FB 42 00 00 00 00       		mov.L	#_PartialChecksum.9370, r4
 138 0085 DC 45                   		mov.W	[r4], r5
 139                             	.LVL16:
 217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         	/* Restore machine state for the next call */
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         	CompChkState = COMP_CHK_INIT;
 140                             		.loc 1 218 0
 141 0087 F8 E6 00                		mov.L	#0, [r14]
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         	libCompChk.jobDone = TRUE;
 142                             		.loc 1 215 0
 143 008a 66 11                   		mov.L	#1, r1
 144                             	.LVL17:
 219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             break;
 145                             		.loc 1 219 0
 146 008c 0E                      		bra	.L13
 147                             	.LVL18:
 148                             	.L19:
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         default:
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             CompChkState = COMP_CHK_INIT;
 149                             		.loc 1 221 0
 150 008d F8 E6 00                		mov.L	#0, [r14]
 151                             	.LVL19:
 152                             		.balign 2,3,1
 153                             	.L20:
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	libCompChk.jobDone = FALSE;
 154                             		.loc 1 190 0
 155 0090 66 01                   		mov.L	#0, r1
 156                             	.LVL20:
 157                             		.balign 2,3,2
 158                             	.L13:
 222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             break;
 223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return(libCompChk);
 225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 159                             		.loc 1 225 0
 160 0092 FD D0 52                		shll	#16, r5, r2
 161                             	.LVL21:
 162 0095 02                      		rts
 163                             	.LFE2:
 165                             		.section	.text.LIB_SettingFileChecksumCalculate,"ax",@progbits
 166                             		.global	_LIB_SettingFileChecksumCalculate
 168                             	_LIB_SettingFileChecksumCalculate:
 169                             	.LFB3:
 226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Calculate partial checksum - setting file algorithm.
 229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]            Length of chunk to process
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]            Pointer to actual position
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]            Partial 16-bit checksum (given from a previous call - 0 for first time)
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return         uint16_t - (partial) Checksum updated
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author         Alessandro Sabbatini
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date           Aug 30, 2012
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version        1.0.0
 240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t LIB_SettingFileChecksumCalculate(uint16_t len, uint8_t *pSource, uint16_t partialChecksum)
 243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 170                             		.loc 1 243 0
 171                             	.LVL22:
 244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     int i;
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     for( i=0; i<len; i++)
 172                             		.loc 1 245 0
 173 0000 EF 2E                   		mov.L	r2, r14
 174 0002 5F 11                   		movu.W	r1, r1
 175 0004 2E 12                   		bra	.L22
 176                             	.LVL23:
 177                             	.L23:
 246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         partialChecksum ^= *pSource;
 178                             		.loc 1 247 0
 179 0006 FD 38 E4                		movu.B	[r14+], r4
 180                             	.LVL24:
 181 0009 FC 37 43                		xor	r4, r3
 182                             	.LVL25:
 248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         partialChecksum = (uint16_t) (((partialChecksum & 0x8000)? 1 : 0) | (partialChecksum<<1));
 183                             		.loc 1 248 0
 184 000c 5F 33                   		movu.W	r3, r3
 185 000e FD 8F 34                		shlr	#15, r3, r4
 186 0011 4B 33                   		add	r3, r3
 187                             	.LVL26:
 188 0013 57 43                   		or	r4, r3
 189                             	.LVL27:
 190 0015 03                      		.balign 2,3,2
 191                             	.L22:
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t LIB_SettingFileChecksumCalculate(uint16_t len, uint8_t *pSource, uint16_t partialChecksum)
 192                             		.loc 1 242 0 discriminator 1
 193 0016 FF 04 2E                		sub	r2, r14, r4
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     for( i=0; i<len; i++)
 194                             		.loc 1 245 0 discriminator 1
 195 0019 47 14                   		cmp	r1, r4
 196 001b 29 EB                   		blt	.L23
 249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         pSource++;
 250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return partialChecksum;
 253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 197                             		.loc 1 253 0
 198 001d 5F 31                   		movu.W	r3, r1
 199                             	.LVL28:
 200 001f 02                      		rts
 201                             	.LFE3:
 203                             		.section	.text.LIB_ConvTwoByteInWord,"ax",@progbits
 204                             		.global	_LIB_ConvTwoByteInWord
 206                             	_LIB_ConvTwoByteInWord:
 207                             	.LFB4:
 254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Converts two consecutive bytes in a word
 261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		pBuf pointer to first byte M.S.B.
 263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint16_t
 265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval		1th byte*256+2nd byte
 267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	stefano.ughi
 269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Jan 14, 2010
 270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by stefano.ughi
 274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t LIB_ConvTwoByteInWord(const uint8_t *const pBuf)
 277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 208                             		.loc 1 277 0
 209                             	.LVL29:
 278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return (uint16_t) ((*pBuf << 8) | *(pBuf + 1));
 210                             		.loc 1 278 0
 211 0000 58 14                   		movu.B	[r1], r4
 212 0002 6C 84                   		shll	#8, r4
 213 0004 B0 19                   		movu.B	1[r1], r1
 214                             	.LVL30:
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 215                             		.loc 1 279 0
 216 0006 57 41                   		or	r4, r1
 217 0008 02                      		rts
 218                             	.LFE4:
 220                             		.section	.text.LIB_SwapWord,"ax",@progbits
 221                             		.global	_LIB_SwapWord
 223                             	_LIB_SwapWord:
 224                             	.LFB5:
 280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Swap a data word.
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]	data
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint16_t
 286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	stefano.ughi
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Feb 01, 2010
 289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by stefano.ughi
 293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t LIB_SwapWord(uint16_t data)
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 225                             		.loc 1 296 0
 226                             	.LVL31:
 297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t swapWord;
 298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     swapWord = (uint16_t)(((uint16_t)(data << 8) | (data >> 8)));
 227                             		.loc 1 298 0
 228 0000 FD C8 1E                		shll	#8, r1, r14
 229 0003 5F 11                   		movu.W	r1, r1
 230 0005 68 81                   		shlr	#8, r1
 231                             	.LVL32:
 232 0007 57 E1                   		or	r14, r1
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return (swapWord);
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 233                             		.loc 1 300 0
 234 0009 5F 11                   		movu.W	r1, r1
 235 000b 02                      		rts
 236                             	.LFE5:
 238                             		.section	.text.GetDefaultSettingStartAddress,"ax",@progbits
 239                             		.global	_GetDefaultSettingStartAddress
 241                             	_GetDefaultSettingStartAddress:
 242                             	.LFB6:
 301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Setting file manipulation Utilities */
 303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Returns the start address of the setting.
 306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint16_t *		Pointer to Setting file area
 308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Roberto Fioravanti
 310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Apr 18,2013
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t* GetDefaultSettingStartAddress(void)
 314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 243                             		.loc 1 314 0
 315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return (uint16_t*)(&Eeprom[0]);
 316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 244                             		.loc 1 316 0
 245 0000 FB 12 00 00 00 00       		mov.L	#_Eeprom, r1
 246 0006 02                      		rts
 247                             	.LFE6:
 249                             		.section	.text.SFBasicLoader,"ax",@progbits
 250                             		.global	_SFBasicLoader
 252                             	_SFBasicLoader:
 253                             	.LFB7:
 317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function extract address and size of data related to a given displacement
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** of a given pointer belonging to a setting file.
 323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** The start address of the Setting file is provided as parameter .
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		pdataStartAddr: start address of the setting file.
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	  pointer: Setting file pointer. This value corresponds to the position in word
 327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                 respect to the SF start address of the pointer value.(see setting file documentatio
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	  displacement: index of the displscement. (see setting file documentation)
 329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [out] 	pDataOut: is composed by the absolute address and the size (in words) of the returne
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint8_t
 332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 SF_OK : OK
 334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_DISPL: invalid displ value
 335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_POINTER: invalid pointer value
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_OVFL_EXTRAPTR: too many extrapointers respect to a MAX defined value
 337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_ENDOFPOINTER: displacement is > of the last available displacement
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_WRN_LENGHT : data has length =0
 339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Andrea.Mantovani
 342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Feb X, 2010
 343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Andrea.Mantovani
 347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t SFBasicLoader(uint16_t* pdataStartAddr, uint8_t pointer, uint8_t displacement, Loader_Struc
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 254                             		.loc 1 350 0
 351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint16_t* pDataTmp;
 352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint16_t nPage, pointerVal, ui16DisplNum;
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t* pData, *pData2;
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t nExtraPointerWords;
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t i;
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (0xFF == displacement)
 255                             		.loc 1 359 0
 256 0000 5B 3F                   		movu.B	r3, r15
 257 0002 75 5F FF                		cmp	#0xff, r15
 258 0005 3A 88 00                		beq	.L33
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 259                             		.loc 1 350 0
 260 0008 6E 7A                   		pushm	r7-r10
 261                             	.LCFI1:
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
 361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /**
 362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       0xFF is the last admitted value and is an odd value and for this reason it must be a dummy
 363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       displacemnt cause the size cannot be calculated
 364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       */
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_DISPL;
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
 367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataTmp  = pdataStartAddr ;
 370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataTmp += pointer;
 262                             		.loc 1 370 0
 263 000a 5B 22                   		movu.B	r2, r2
 371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pointerVal = *(pDataTmp);
 264                             		.loc 1 372 0
 265 000c 4B 22                   		add	r2, r2
 266 000e 4B 12                   		add	r1, r2
 267 0010 DC 22                   		mov.W	[r2], r2
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if ((NULL_POINTER == pointerVal) || (INVALID_POINTER == pointerVal))
 268                             		.loc 1 375 0
 269 0012 71 27 FF                		add	#-1, r2, r7
 270 0015 5F 77                   		movu.W	r7, r7
 271 0017 77 07 FD FF 00          		cmp	#0xfffd, r7
 272 001c 24 76                   		bgtu	.L34
 376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_INVALID_POINTER;
 378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pdataStartAddr += pointerVal;
 273                             		.loc 1 381 0
 274 001e 5F 22                   		movu.W	r2, r2
 275 0020 4B 22                   		add	r2, r2
 276 0022 4B 12                   		add	r1, r2
 382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pData = (uint8_t*)(pdataStartAddr);
 383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   nExtraPointerWords = *pData;
 277                             		.loc 1 383 0
 278 0024 CC 21                   		mov.B	[r2], r1
 384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (nExtraPointerWords > N_MAX_EXTRAPTR_WORDS)
 279                             		.loc 1 387 0
 280 0026 CF 17                   		mov.B	r1, r7
 281 0028 61 07                   		cmp	#0, r7
 282 002a 29 6B                   		blt	.L35
 388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_OVFL_EXTRAPTR;
 390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  /* Checks the ExtraPointer and calculates the page */
 395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   nPage = 0;
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 283                             		.loc 1 396 0
 284 002c 5B 11                   		movu.B	r1, r1
 285 002e 4B 11                   		add	r1, r1
 286 0030 66 15                   		mov	#1, r5
 287 0032 66 0E                   		mov	#0, r14
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /* displacement < 0xFF */
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (displacement >= OFFS_B(pData, i))
 288                             		.loc 1 399 0
 289 0034 EF F7                   		mov.L	r15, r7
 290 0036 2E 10                   		bra	.L29
 291                             	.L31:
 292 0038 FE CF 2A                		movu.B	[r15,r2], r10
 293 003b 47 A7                   		cmp	r10, r7
 294 003d 23 07                   		bltu	.L30
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       nPage += 0x0100U;
 295                             		.loc 1 401 0
 296 003f 72 EE 00 01             		add	#0x100, r14
 297 0043 03                      		.balign 2,3,1
 298                             	.L30:
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 299                             		.loc 1 396 0
 300 0044 62 15                   		add	#1, r5
 301                             		.balign 2,3,1
 302                             	.L29:
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 303                             		.loc 1 396 0 is_stmt 0 discriminator 1
 304 0046 5B 5F                   		movu.B	r5, r15
 305 0048 47 1F                   		cmp	r1, r15
 306 004a 29 EE                   		blt	.L31
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* pData points to the fist byte of the displacement area */
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pData += (2 * nExtraPointerWords);
 307                             		.loc 1 406 0 is_stmt 1
 308 004c 4B 21                   		add	r2, r1
 407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    ui16DisplNum = (uint16_t)((2*(uint8_t)(*pData)) - 1);
 309                             		.loc 1 409 0
 310 004e 58 15                   		movu.B	[r1], r5
 311 0050 4B 55                   		add	r5, r5
 312 0052 71 52 FF                		add	#-1, r5, r2
 410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   /* pData2 points to the last dummy displacement */
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    pData2 =pData+ui16DisplNum;
 313                             		.loc 1 412 0
 314 0055 5F 2F                   		movu.W	r2, r15
 315 0057 4B 1F                   		add	r1, r15
 413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    if (*pData2 == *(pData2-1))
 316                             		.loc 1 413 0
 317 0059 71 FA FF                		add	#-1, r15, r10
 318 005c 58 F7                   		movu.B	[r15], r7
 319 005e 44 A7                   		cmp	[r10].UB, r7
 320 0060 1C                      		bne	.L32
 414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    {
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       ui16DisplNum -=1;
 321                             		.loc 1 415 0
 322 0061 71 52 FE                		add	#-2, r5, r2
 323                             		.balign 2,3,1
 324                             	.L32:
 416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    }
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (displacement >= ui16DisplNum)
 325                             		.loc 1 418 0
 326 0064 5B 33                   		movu.B	r3, r3
 327 0066 5F 22                   		movu.W	r2, r2
 328 0068 47 23                   		cmp	r2, r3
 329 006a 22 2E                   		bgeu	.L36
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_ENDOFPOINTER;
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   /*
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     Calculation is valid also in case *( EepData + Displacement + 1 ) < *( EepData + Displacement )
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     cause an overflow page occurs.
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   */
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataOut->DataLenght = (uint8_t)( *( pData + displacement + 1 ) - *( pData + displacement ) );
 330                             		.loc 1 428 0
 331 006c 4B 13                   		add	r1, r3
 332 006e 88 3D                   		mov.B	1[r3], r5
 333 0070 CC 32                   		mov.B	[r3], r2
 334 0072 FF 02 25                		sub	r2, r5, r2
 335 0075 5B 22                   		movu.B	r2, r2
 336 0077 90 C2                   		mov.W	r2, 4[r4]
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataOut->Data = pData + (2 * (*(pData + displacement) + nPage));
 337                             		.loc 1 429 0
 338 0079 58 33                   		movu.B	[r3], r3
 339 007b 5F EE                   		movu.W	r14, r14
 340 007d 4B 3E                   		add	r3, r14
 341 007f 4B EE                   		add	r14, r14
 342 0081 4B E1                   		add	r14, r1
 343 0083 E3 41                   		mov.L	r1, [r4]
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (0 == pDataOut->DataLenght)
 344                             		.loc 1 430 0
 345 0085 61 02                   		cmp	#0, r2
 346 0087 21 14                   		bne	.L37
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
 432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_WRN_LENGHT;
 347                             		.loc 1 432 0
 348 0089 66 71                   		mov	#7, r1
 349 008b 2E 13                   		bra	.L28
 350                             	.L33:
 351                             	.LCFI2:
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_DISPL;
 352                             		.loc 1 365 0
 353 008d 66 11                   		mov	#1, r1
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   return SF_OK;
 436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 354                             		.loc 1 437 0
 355 008f 64 71                   		and #7, r1
 356 0091 02                      		rts
 357                             	.L34:
 358                             	.LCFI3:
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_INVALID_POINTER;
 359                             		.loc 1 377 0
 360 0092 66 21                   		mov	#2, r1
 361 0094 0A                      		bra	.L28
 362                             	.L35:
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_OVFL_EXTRAPTR;
 363                             		.loc 1 389 0
 364 0095 66 31                   		mov	#3, r1
 365 0097 0F                      		bra	.L28
 366                             	.L36:
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_ENDOFPOINTER;
 367                             		.loc 1 420 0
 368 0098 66 51                   		mov	#5, r1
 369 009a 0C                      		bra	.L28
 370                             	.L37:
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   return SF_OK;
 371                             		.loc 1 435 0
 372 009b 66 01                   		mov	#0, r1
 373 009d 03                      		.balign 2,3,1
 374                             	.L28:
 375                             		.loc 1 437 0
 376 009e 64 71                   		and #7, r1
 377 00a0 3F 7A 04                		rtsd	#16, r7-r10
 378                             	.LFE7:
 380 00a3 03                      		.section	.text.SFBasicLoaderGetPage,"ax",@progbits
 381                             		.global	_SFBasicLoaderGetPage
 383                             	_SFBasicLoaderGetPage:
 384                             	.LFB8:
 438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function extract the page related to a given displacement belonging to a setting file.
 443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** The start address of the Extrapointers area is provided as parameter.
 444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function performs a subset of functionality of the SFBasicLoader.
 445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		pdataStartAddr: start address of the extrapointers area.
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	  displacement: index of the displscement. (see setting file documentation)
 448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [out] 	ui16Page: start address of the page related to the displacement (see setting file do
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint8_t
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 SF_OK : OK
 453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_DISPL: invalid displ value
 454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_POINTER: invalid pointer value
 455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_OVFL_EXTRAPTR: too many extrapointers respect to a MAX defined value
 456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_ENDOFPOINTER: displacement is > of the last available displacement
 457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_WRN_LENGHT : data has length =0
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Andrea.Mantovani
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Feb X, 2010
 462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Andrea.Mantovani
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t SFBasicLoaderGetPage(uint16_t* pdataStartAddr, uint8_t displacement,uint16_t* ui16Page)
 469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 385                             		.loc 1 469 0
 386                             	.LVL33:
 470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint16_t nPage;
 471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t* pData;
 472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t nExtraPointerWords;
 473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t i;
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (0xFF == displacement)
 387                             		.loc 1 476 0
 388 0000 5B 22                   		movu.B	r2, r2
 389 0002 75 52 FF                		cmp	#0xff, r2
 390 0005 20 2E                   		beq	.L44
 391                             	.LVL34:
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /**
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       0xFF  l'ultimo indice consentito per un displacement tuttavia, essendo dispari,
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****        anche l'ultimo displacement in assoluto quindi non  uno spiazzamento valido
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       in quanto non  possibile specificare la sua lunghezza.
 482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       */
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_DISPL;
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
 485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pData = (uint8_t*)(pdataStartAddr);
 487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   nExtraPointerWords = *pData;
 392                             		.loc 1 487 0
 393 0007 CC 1E                   		mov.B	[r1], r14
 394                             	.LVL35:
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (nExtraPointerWords > N_MAX_EXTRAPTR_WORDS)
 395                             		.loc 1 490 0
 396 0009 CF E4                   		mov.B	r14, r4
 397 000b 61 04                   		cmp	#0, r4
 398 000d 29 29                   		blt	.L45
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_OVFL_EXTRAPTR;
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* Checks the ExtraPointer and calculates the page */
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   nPage = 0;
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 399                             		.loc 1 497 0
 400 000f 5B EE                   		movu.B	r14, r14
 401 0011 FF 2F EE                		add	r14, r14, r15
 402 0014 66 14                   		mov	#1, r4
 403 0016 66 0E                   		mov	#0, r14
 404                             	.LVL36:
 405 0018 2E 10                   		bra	.L41
 406                             	.LVL37:
 407                             	.L43:
 498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
 499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /* displacement < 0xFF */
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (displacement >= OFFS_B(pData, i))
 408                             		.loc 1 500 0
 409 001a FE C5 15                		movu.B	[r5,r1], r5
 410 001d 47 52                   		cmp	r5, r2
 411 001f 23 07                   		bltu	.L42
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       nPage += 0x0100U;
 412                             		.loc 1 502 0
 413 0021 72 EE 00 01             		add	#0x100, r14
 414                             	.LVL38:
 415 0025 03                      		.balign 2,3,1
 416                             	.L42:
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 417                             		.loc 1 497 0
 418 0026 62 14                   		add	#1, r4
 419                             	.LVL39:
 420                             		.balign 2,3,1
 421                             	.L41:
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 422                             		.loc 1 497 0 is_stmt 0 discriminator 1
 423 0028 5B 45                   		movu.B	r4, r5
 424 002a 47 F5                   		cmp	r15, r5
 425 002c 29 EE                   		blt	.L43
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  *ui16Page= nPage;
 426                             		.loc 1 506 0 is_stmt 1
 427 002e D3 3E                   		mov.W	r14, [r3]
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  return SF_OK;
 428                             		.loc 1 507 0
 429 0030 66 01                   		mov	#0, r1
 430                             	.LVL40:
 431 0032 0E                      		bra	.L40
 432                             	.LVL41:
 433                             	.L44:
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_DISPL;
 434                             		.loc 1 483 0
 435 0033 66 11                   		mov	#1, r1
 436                             	.LVL42:
 437 0035 0B                      		bra	.L40
 438                             	.LVL43:
 439                             	.L45:
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_OVFL_EXTRAPTR;
 440                             		.loc 1 492 0
 441 0036 66 31                   		mov	#3, r1
 442                             	.LVL44:
 443                             		.balign 2,3,1
 444                             	.L40:
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 445                             		.loc 1 508 0
 446 0038 64 31                   		and #3, r1
 447 003a 02                      		rts
 448                             	.LFE8:
 450 003b 03                      		.section	.text.SFBasicLoaderGetDisplOffset,"ax",@progbits
 451                             		.global	_SFBasicLoaderGetDisplOffset
 453                             	_SFBasicLoaderGetDisplOffset:
 454                             	.LFB9:
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function simply calculates the address and size of data related to the given displacement.
 513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Also the displacement page must be rpovided as parameter.
 514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function performs a subset of functionality of the SFBasicLoader.
 515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		ui16Displ: being a uint16 and each displacement is only one byte the MSByte represent
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                            Displ while LSByte the Displ+1
 518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	  ui16Page: Page related to the Displ (see setting file documentation)
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [out] 	pDataOut: is composed by the address and the size (in words) of the returned data.
 520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                           the address isnot absolute but is the offset respect to the first displac
 521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****                           To get the absolute address you must add Eepadd+pointer+numextrapointers 
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint8_t
 524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 SF_OK : OK
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_DISPL: invalid displ value
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_POINTER: invalid pointer value
 528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_OVFL_EXTRAPTR: too many extrapointers respect to a MAX defined value
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_ENDOFPOINTER: displacement is > of the last available displacement
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_WRN_LENGHT : data has length =0
 531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Andrea.Mantovani
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Feb X, 2010
 535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \todo
 538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Andrea.Mantovani
 540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t SFBasicLoaderGetDisplOffset(uint16_t ui16Displ,uint16_t ui16Page,Loader_Struct* pDataOut)
 543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 455                             		.loc 1 543 0
 456                             	.LVL45:
 544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  /* The MSByte of ui16Displ is the displ while the LSByte is the displ+1 that is used to calculate 
 545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  /* The Data length is in Word ! */
 546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  /* pDataOut->Data is the diaplacement offset respect to the first displacement
 547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     to get the absolute address you must add Eepadd+pointer+numextrapointers
 548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  */
 549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataOut->DataLenght = (uint8_t)((uint8_t)(ui16Displ & 0x00FF) - (uint8_t)((ui16Displ & 0xFF00) >
 457                             		.loc 1 549 0
 458 0000 5F 1E                   		movu.W	r1, r14
 459 0002 68 8E                   		shlr	#8, r14
 460 0004 43 E1                   		sub	r14, r1
 461                             	.LVL46:
 462 0006 5B 11                   		movu.B	r1, r1
 463 0008 90 B1                   		mov.W	r1, 4[r3]
 550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataOut->Data = (uint8_t*)(2 * (((ui16Displ&0xFF00)>>8) + ui16Page));
 464                             		.loc 1 550 0
 465 000a 5F EE                   		movu.W	r14, r14
 466 000c 5F 22                   		movu.W	r2, r2
 467 000e 4B 2E                   		add	r2, r14
 468 0010 4B EE                   		add	r14, r14
 469 0012 E3 3E                   		mov.L	r14, [r3]
 551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   return SF_OK;
 552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 470                             		.loc 1 552 0
 471 0014 66 01                   		mov.L	#0, r1
 472 0016 02                      		rts
 473                             	.LFE9:
 475                             		.section	.text.LIB_SEF_GetBEWrdRelShort_Ptr,"ax",@progbits
 476                             		.global	_LIB_SEF_GetBEWrdRelShort_Ptr
 478                             	_LIB_SEF_GetBEWrdRelShort_Ptr:
 479                             	.LFB11:
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** E' la funzione di base per il caricamento di dati dal file di setting: a partire
 558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** dai parametri indicati in ingresso (puntatore e spiazzamento) restituisce
 559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** un puntatore al record dei dati cercati e lunghezza in word dello stesso.
 560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param [in]		pointer e' il puntatore del file di setting da cui caricare i dati
 562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param [in]		displacement e' lo spiazzamento relativo al puntatore pointer
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				da cui caricare i dati
 564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param [out]	pDataOut punta alla tabella dati individuata dai parametri
 565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				specificati in input
 566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \attention 		Eeprom (global, buffer area dedicata al file di setting) e'
 567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				usata come input
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return			BSLDR_OK se la funzione e' stata eseguita correttamente, un codice
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				d'errore altrimenti.
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \warning		none
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \todo			il nome della funzione e i campi del tipo Loader_Struct sono difformi dalle
 575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				convenzioni adottate nel resto del modulo per garantire la compatibilita'
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				all'indietro con il modulo I/O Manager che sfrutta la funzione BasicLoader
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				e ne specifica il prototipo tramite extern.
 578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				Anche il type Loader_Struct e' definito in SkeletonTypes.h, tuttavia sarebbe
 579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				opportuno cambiare i nomi dei campi, in particolare correggere l'errore
 580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				"DataLenght".
 581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version		1.0.0
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date 			04/01/2006
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author			Simone Costantini
 585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined (IO_MANAGER_BASICLOADER_CSTM) 
 587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if ( IO_MANAGER_BASICLOADER_CSTM == FALSE )
 588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t BasicLoader(settingPntr_t pointer, uint16_t displacement, Loader_Struct* pDataOut)
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t retVal = BSLDR_ERR_INVALID_POINTER;
 592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t* dataStartAddr = GetDefaultSettingStartAddress();
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	dataStartAddr = LIB_SEF_GetBEWrdRelShort_Ptr(dataStartAddr, pointer);
 595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (dataStartAddr != NULL)
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		retVal = LIB_SEF_GetDisplData(dataStartAddr, displacement, pDataOut);
 598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return retVal;
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This routine give absolute address in a big endian 16-bit pointers table
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]    pDataStartAddr		Pointer of pointers table
 607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]	pointer				Pointer item to read
 608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint16_t *	- Absolute address of pointer desired
 611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  	 	 	 NULL if starting address or pointer is invalid
 612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Alessandro Sabbatini
 614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		19/06/2014
 615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Alessandro Sabbatini
 620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t *LIB_SEF_GetBEWrdRelShort_Ptr(uint16_t *pDataStartAddr, settingPntr_t pointer)
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 480                             		.loc 1 623 0
 481                             	.LVL47:
 624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *tmpAddr = NULL;
 625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if ((pointer != INVALID_POINTER) && (pDataStartAddr != NULL))
 482                             		.loc 1 626 0
 483 0000 5F 22                   		movu.W	r2, r2
 484 0002 77 02 FF FF 00          		cmp	#0xffff, r2
 485 0007 20 1F                   		beq	.L51
 486                             		.loc 1 626 0 is_stmt 0 discriminator 1
 487 0009 61 01                   		cmp	#0, r1
 488 000b 20 1D                   		beq	.L48
 489                             	.LBB11:
 627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		uint16_t pointerVal = EndianU16_BToN((pDataStartAddr[pointer]));
 490                             		.loc 1 628 0 is_stmt 1
 491 000d 4B 22                   		add	r2, r2
 492                             	.LVL48:
 493 000f 4B 12                   		add	r1, r2
 494 0011 DC 2E                   		mov.W	[r2], r14
 495                             	.LVL49:
 629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		if ((NULL_POINTER != pointerVal) && (INVALID_POINTER != pointerVal))
 496                             		.loc 1 630 0
 497 0013 71 E4 FF                		add	#-1, r14, r4
 498 0016 5F 44                   		movu.W	r4, r4
 499 0018 77 04 FD FF 00          		cmp	#0xfffd, r4
 500 001d 24 09                   		bgtu	.L51
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			tmpAddr = pDataStartAddr + pointerVal;
 501                             		.loc 1 632 0
 502 001f 5F EE                   		movu.W	r14, r14
 503 0021 4B EE                   		add	r14, r14
 504                             	.LVL50:
 505 0023 4B E1                   		add	r14, r1
 506                             	.LVL51:
 507 0025 02                      		rts
 508                             	.LVL52:
 509                             	.L51:
 624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *tmpAddr = NULL;
 510                             		.loc 1 624 0
 511 0026 66 01                   		mov.L	#0, r1
 512                             	.LVL53:
 513                             	.L48:
 514                             	.LBE11:
 633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return tmpAddr;
 638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 515                             		.loc 1 638 0
 516 0028 02                      		rts
 517                             	.LFE11:
 519                             		.section	.text.LIB_SEF_GetMsettingStartAddr,"ax",@progbits
 520                             		.global	_LIB_SEF_GetMsettingStartAddr
 522                             	_LIB_SEF_GetMsettingStartAddr:
 523                             	.LFB12:
 639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t *LIB_SEF_GetMsettingStartAddr(uint8_t SFIndex)
 641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 524                             		.loc 1 641 0
 525                             	.LVL54:
 526 0000 6E 7A                   		pushm	r7-r10
 527                             	.LCFI4:
 642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *tmpAddr = GetDefaultSettingStartAddress();	/**< Pointer to mSetting */
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t pMapNul = EndianU16_BToN(*(tmpAddr+SF_PTR_MAP_LENGTH));
 528                             		.loc 1 643 0
 529 0002 FB E2 00 00 00 00       		mov.L	#_Eeprom, r14
 530 0008 DD EA 07                		mov.W	14[r14], r10
 531                             	.LVL55:
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *pMappIndex;
 645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t pMapIdx;
 646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if ( SFIndex != 0 )
 532                             		.loc 1 647 0
 533 000b 5B 17                   		movu.B	r1, r7
 648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		pMappIndex= LIB_SEF_GetBEWrdRelShort_Ptr(tmpAddr, SF_PTR_MAP_LENGTH);
 534                             		.loc 1 649 0
 535 000d EF E1                   		mov.L	r14, r1
 536                             	.LVL56:
 647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if ( SFIndex != 0 )
 537                             		.loc 1 647 0
 538 000f 61 07                   		cmp	#0, r7
 539 0011 20 35                   		beq	.L53
 540                             		.loc 1 649 0
 541 0013 66 72                   		mov	#7, r2
 542 0015 05 00 00 00             		bsr	_LIB_SEF_GetBEWrdRelShort_Ptr
 543                             	.LVL57:
 650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		pMapIdx = EndianU16_BToN(*pMappIndex);
 544                             		.loc 1 650 0
 545 0019 DC 1E                   		mov.W	[r1], r14
 546                             	.LVL58:
 651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		if ( (INVALID_POINTER != pMapNul ) && (NULL_POINTER != pMapNul)
 547                             		.loc 1 652 0
 548 001b 71 A4 FF                		add	#-1, r10, r4
 549 001e 5F 44                   		movu.W	r4, r4
 550 0020 77 04 FD FF 00          		cmp	#0xfffd, r4
 551 0025 24 1E                   		bgtu	.L56
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				&& (SFIndex < (pMapIdx - pMapNul)))
 552                             		.loc 1 653 0
 553 0027 5F EE                   		movu.W	r14, r14
 554 0029 5F AA                   		movu.W	r10, r10
 555 002b FF 0A AE                		sub	r10, r14, r10
 556                             	.LVL59:
 557 002e 47 A7                   		cmp	r10, r7
 558 0030 28 13                   		bge	.L56
 559                             	.LVL60:
 654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
 655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			pMapIdx = EndianU16_BToN(*(pMappIndex+(SFIndex - 1)));
 560                             		.loc 1 655 0
 561 0032 60 17                   		sub	#1, r7
 562                             	.LVL61:
 563 0034 4B 77                   		add	r7, r7
 564                             	.LVL62:
 565 0036 4B 71                   		add	r7, r1
 566                             	.LVL63:
 656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			tmpAddr += pMapIdx;
 567                             		.loc 1 656 0
 568 0038 5C 11                   		movu.W	[r1], r1
 569 003a 4B 11                   		add	r1, r1
 570 003c 70 11 00 00 00 00       		add	#_Eeprom, r1
 571                             	.LVL64:
 572 0042 0C                      		bra	.L53
 573                             	.LVL65:
 574                             	.L56:
 657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
 658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		else
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
 660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			tmpAddr = NULL;
 575                             		.loc 1 660 0
 576 0043 66 01                   		mov.L	#0, r1
 577                             	.LVL66:
 578 0045 03                      		.balign 2,3,2
 579                             	.L53:
 661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
 662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return tmpAddr;
 665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 580                             		.loc 1 666 0
 581 0046 3F 7A 04                		rtsd	#16, r7-r10
 582                             	.LFE12:
 584 0049 03                      		.section	.text.LIB_SEF_GetMaxMsettings,"ax",@progbits
 585                             		.global	_LIB_SEF_GetMaxMsettings
 587                             	_LIB_SEF_GetMaxMsettings:
 588                             	.LFB13:
 667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t LIB_SEF_GetMaxMsettings(void)
 669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 589                             		.loc 1 669 0
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *tmpAddr = GetDefaultSettingStartAddress();	/**< Pointer to mSetting */
 671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *pMappIndex= LIB_SEF_GetBEWrdRelShort_Ptr(tmpAddr, SF_PTR_MAP_LENGTH);
 590                             		.loc 1 671 0
 591 0000 FB 12 00 00 00 00       		mov.L	#_Eeprom, r1
 592 0006 66 72                   		mov	#7, r2
 593 0008 05 00 00 00             		bsr	_LIB_SEF_GetBEWrdRelShort_Ptr
 594                             	.LVL67:
 672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t pMapNul = EndianU16_BToN(*pMappIndex);
 595                             		.loc 1 672 0
 596 000c DC 1E                   		mov.W	[r1], r14
 597                             	.LVL68:
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t retVal = 0;
 674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if ( (INVALID_POINTER != pMapNul) && (NULL_POINTER != pMapNul))
 598                             		.loc 1 675 0
 599 000e 71 E4 FF                		add	#-1, r14, r4
 600 0011 5F 44                   		movu.W	r4, r4
 601 0013 77 04 FD FF 00          		cmp	#0xfffd, r4
 602 0018 24 0F                   		bgtu	.L60
 603                             	.LVL69:
 604                             	.LBB12:
 676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		uint16_t pMapIdx = EndianU16_BToN(*(tmpAddr+SF_PTR_MAP_LENGTH));
 678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		retVal = pMapNul - pMapIdx - 1;
 605                             		.loc 1 679 0
 606 001a FB 42 00 00 00 00       		mov.L	#_Eeprom, r4
 607 0020 99 C9                   		mov.W	14[r4], r1
 608                             	.LVL70:
 609 0022 7E 01                   		not	r1
 610 0024 4B E1                   		add	r14, r1
 611                             	.LVL71:
 612 0026 0C                      		bra	.L59
 613                             	.LVL72:
 614                             	.L60:
 615                             	.LBE12:
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t retVal = 0;
 616                             		.loc 1 673 0
 617 0027 66 01                   		mov	#0, r1
 618                             	.LVL73:
 619 0029 03                      		.balign 2,3,1
 620                             	.L59:
 680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return retVal;
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 621                             		.loc 1 683 0
 622 002a 5B 11                   		movu.B	r1, r1
 623 002c 02                      		rts
 624                             	.LFE13:
 626 002d 03                      		.section	.text.LIB_SEF_IsExtdDisplPtr,"ax",@progbits
 627                             		.global	_LIB_SEF_IsExtdDisplPtr
 629                             	_LIB_SEF_IsExtdDisplPtr:
 630                             	.LFB14:
 684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** bool_t LIB_SEF_IsExtdDisplPtr(uint8_t SFIndex, settingPntr_t pointer )
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 631                             		.loc 1 686 0
 632                             	.LVL74:
 633 0000 60 40                   		sub	#4, r0
 634                             	.LCFI5:
 635                             	.LVL75:
 687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	bool_t retVal = FALSE;
 688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_SETTING_EXTD_DISPL)
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *tmpAddr = LIB_SEF_GetMsettingStartAddr(SFIndex);
 636                             		.loc 1 689 0
 637 0002 E3 02                   		mov.L	r2, [r0]
 638 0004 05 00 00 00             		bsr	_LIB_SEF_GetMsettingStartAddr
 639                             	.LVL76:
 690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	tmpAddr = LIB_SEF_GetBEWrdRelShort_Ptr(tmpAddr, pointer);
 640                             		.loc 1 691 0
 641 0008 EC 02                   		mov.L	[r0], r2
 642 000a 05 00 00 00             		bsr	_LIB_SEF_GetBEWrdRelShort_Ptr
 643                             	.LVL77:
 692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (tmpAddr != NULL)
 644                             		.loc 1 693 0
 645 000e 61 01                   		cmp	#0, r1
 646 0010 16                      		beq	.L62
 694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		retVal = (*((uint8_t *)tmpAddr) & 0x80) != 0;
 647                             		.loc 1 695 0
 648 0011 CC 11                   		mov.B	[r1], r1
 649                             	.LVL78:
 650 0013 69 F1                   		shlr	#31, r1
 651                             	.LVL79:
 652 0015 03                      		.balign 2,3,1
 653                             	.L62:
 696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return retVal;
 699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 654                             		.loc 1 699 0
 655 0016 67 01                   		rtsd	#4
 656                             	.LFE14:
 658                             		.section	.text.LIB_SEF_GetDisplData,"ax",@progbits
 659                             		.global	_LIB_SEF_GetDisplData
 661                             	_LIB_SEF_GetDisplData:
 662                             	.LFB15:
 700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t LIB_SEF_GetDisplData(uint16_t* dataStartAddr, uint16_t displacement, Loader_Struct* pDataOu
 703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 663                             		.loc 1 703 0
 664                             	.LVL80:
 704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_SETTING_EXTD_DISPL)
 705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	bool_t isExtDispl = FALSE;
 706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t maxDispl = 0xFF;
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t nMaxExtraPointerWords = N_MAX_EXTRAPTR_WORDS;
 709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t nPage;
 710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t nExtraPointerWords;
 711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t i;
 712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_SETTING_EXTD_DISPL)
 714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	isExtDispl = (*((uint8_t *)dataStartAddr) & 0x80) != 0;
 665                             		.loc 1 714 0
 666 0000 CC 1E                   		mov.B	[r1], r14
 667 0002 CF E4                   		mov.B	r14, r4
 668 0004 69 F4                   		shlr	#31, r4
 669                             	.LVL81:
 715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (isExtDispl)
 670                             		.loc 1 716 0
 671 0006 20 10                   		beq	.L66
 672                             	.LVL82:
 717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		/* Extended Displacement => 16 bit */
 719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		maxDispl = 0xFFFF;
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		nMaxExtraPointerWords = N_MAX_EXTRAPTR16_WORDS;
 721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		nExtraPointerWords = (*dataStartAddr) & 0x7FFF;  /* Rimozione bit di formato a 16 bit (bit 15) */
 673                             		.loc 1 721 0
 674 0008 DC 1E                   		mov.W	[r1], r14
 675 000a 76 2E FF 7F             		and #0x7fff, r14
 676                             	.LVL83:
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		nMaxExtraPointerWords = N_MAX_EXTRAPTR16_WORDS;
 677                             		.loc 1 720 0
 678 000e FB 5A FE 7F             		mov	#0x7ffe, r5
 719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		maxDispl = 0xFFFF;
 679                             		.loc 1 719 0
 680 0012 FB F6 FF                		mov	#-1, r15
 681 0015 09                      		bra	.L67
 682                             	.LVL84:
 683                             	.L66:
 722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	else
 724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif /* defined(CONFIG_LIB_SETTING_EXTD_DISPL) */
 725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		nExtraPointerWords =(uint16_t) *(uint8_t*)(dataStartAddr);
 684                             		.loc 1 726 0
 685 0016 5B EE                   		movu.B	r14, r14
 686                             	.LVL85:
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t nMaxExtraPointerWords = N_MAX_EXTRAPTR_WORDS;
 687                             		.loc 1 708 0
 688 0018 75 45 7F                		mov	#0x7f, r5
 707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t maxDispl = 0xFF;
 689                             		.loc 1 707 0
 690 001b 75 4F FF                		mov	#0xff, r15
 691                             	.LVL86:
 692                             		.balign 2,3,1
 693                             	.L67:
 727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #ifdef _BSLDR_ENABLE_ERROR_MNG_
 730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (maxDispl == displacement)
 694                             		.loc 1 731 0
 695 001e 5F FF                   		movu.W	r15, r15
 696 0020 5F 22                   		movu.W	r2, r2
 697 0022 47 2F                   		cmp	r2, r15
 698 0024 3A 9F 00                		beq	.L80
 732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		/**
 734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		0xFF / 0xFFFF e' l'ultimo indice consentito per un displacement tuttavia, essendo dispari,
 735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  e' anche l'ultimo displacement in assoluto quindi non e' uno spiazzamento valido
 736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		in quanto non e' possibile specificare la sua lunghezza.
 737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		*/
 738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		return BSLDR_ERR_INVALID_DISPL;
 739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #ifdef _BSLDR_ENABLE_ERROR_MNG_
 744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (nExtraPointerWords > nMaxExtraPointerWords)
 699                             		.loc 1 745 0
 700 0027 5F EE                   		movu.W	r14, r14
 701 0029 5F 55                   		movu.W	r5, r5
 702 002b 47 5E                   		cmp	r5, r14
 703 002d 25 05 38 90 00          		bgtu	.L77
 704                             	.LVL87:
 746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		return BSLDR_ERR_OVFL_EXTRAPTR;
 748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	/* Controlla gli ExtraPointer e imposta la pagina di conseguenza */
 752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	nPage = 0;
 753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_SETTING_EXTD_DISPL)
 755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (isExtDispl)
 705                             		.loc 1 755 0
 706 0032 61 04                   		cmp	#0, r4
 707 0034 21 19                   		bne	.L78
 708                             	.LBB13:
 756:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  for ( i = 1; i < nExtraPointerWords; i++ )
 758:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  {
 759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		    if ( displacement >= EndianU16_BToN(dataStartAddr[i]) )
 760:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		    {
 761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		      nPage += 0x100U;
 762:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		    }
 763:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  }
 764:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 765:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  /* dataStartAddr punta all'inizio dell'array dei displacement */
 766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  dataStartAddr += nExtraPointerWords;
 767:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 768:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		#ifdef _BSLDR_ENABLE_ERROR_MNG_
 769:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  if ( (displacement + 2) > EndianU16_BToN(*dataStartAddr) )
 771:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  {
 772:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		    return BSLDR_ERR_INVALID_DISPL;
 773:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  }
 774:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 775:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		#endif
 776:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 777:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  /*
 778:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  Il calcolo e' valido anche nel caso in cui  *( EepData + Displacement + 1 ) < *( EepData + Disp
 779:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  a causa di un'overflow page
 780:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  */
 781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  pDataOut->DataLenght = EndianU16_BToN(dataStartAddr[displacement + 1]) - EndianU16_BToN(dataSta
 782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  pDataOut->Data = (uint8_t *)&dataStartAddr[EndianU16_BToN(dataStartAddr[displacement]) + nPage]
 783:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 784:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 785:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	else
 786:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 787:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 788:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		uint8_t* pData = (uint8_t *)(dataStartAddr);
 789:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		for (i = 1; i < (2 * nExtraPointerWords); i++)
 709                             		.loc 1 790 0
 710 0036 4B EE                   		add	r14, r14
 711                             	.LVL88:
 712 0038 66 15                   		mov	#1, r5
 713                             	.LVL89:
 714 003a 2E 4E                   		bra	.L70
 715                             	.LVL90:
 716                             	.L72:
 717                             	.LBE13:
 759:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		    if ( displacement >= EndianU16_BToN(dataStartAddr[i]) )
 718                             		.loc 1 759 0
 719 003c 4B 55                   		add	r5, r5
 720 003e 4B 15                   		add	r1, r5
 721 0040 06 C4 52                		cmp	[r5].UW, r2
 722 0043 23 07                   		bltu	.L71
 761:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		      nPage += 0x100U;
 723                             		.loc 1 761 0
 724 0045 72 44 00 01             		add	#0x100, r4
 725                             	.LVL91:
 726 0049 03                      		.balign 2,3,1
 727                             	.L71:
 757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  for ( i = 1; i < nExtraPointerWords; i++ )
 728                             		.loc 1 757 0
 729 004a 62 1F                   		add	#1, r15
 730                             	.LVL92:
 731 004c 0E                      		bra	.L69
 732                             	.LVL93:
 733                             	.L78:
 755:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (isExtDispl)
 734                             		.loc 1 755 0
 735 004d 66 1F                   		mov	#1, r15
 736                             	.LVL94:
 737 004f 66 04                   		mov	#0, r4
 738                             	.LVL95:
 739 0051 03                      		.balign 2,3,1
 740                             	.L69:
 757:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  for ( i = 1; i < nExtraPointerWords; i++ )
 741                             		.loc 1 757 0 discriminator 1
 742 0052 5B F5                   		movu.B	r15, r5
 743 0054 47 E5                   		cmp	r14, r5
 744 0056 23 E6                   		bltu	.L72
 766:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  dataStartAddr += nExtraPointerWords;
 745                             		.loc 1 766 0
 746 0058 4B EE                   		add	r14, r14
 747                             	.LVL96:
 748 005a 4B E1                   		add	r14, r1
 749                             	.LVL97:
 770:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  if ( (displacement + 2) > EndianU16_BToN(*dataStartAddr) )
 750                             		.loc 1 770 0
 751 005c 71 2E 01                		add	#1, r2, r14
 752 005f 06 C4 1E                		cmp	[r1].UW, r14
 753 0062 28 61                   		bge	.L80
 781:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  pDataOut->DataLenght = EndianU16_BToN(dataStartAddr[displacement + 1]) - EndianU16_BToN(dataSta
 754                             		.loc 1 781 0
 755 0064 4B 22                   		add	r2, r2
 756                             	.LVL98:
 757 0066 4B 12                   		add	r1, r2
 758 0068 4B EE                   		add	r14, r14
 759                             	.LVL99:
 760 006a 4B 1E                   		add	r1, r14
 761 006c DC E5                   		mov.W	[r14], r5
 762 006e DC 2E                   		mov.W	[r2], r14
 763 0070 FF 0E E5                		sub	r14, r5, r14
 764 0073 D7 3E 02                		mov.W	r14, 4[r3]
 782:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		  pDataOut->Data = (uint8_t *)&dataStartAddr[EndianU16_BToN(dataStartAddr[displacement]) + nPage]
 765                             		.loc 1 782 0
 766 0076 5C 2E                   		movu.W	[r2], r14
 767 0078 2E 32                   		bra	.L82
 768                             	.LVL100:
 769                             	.L75:
 770                             	.LBB14:
 791:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
 792:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			/* displacement < 0xFF */
 793:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			if (displacement >= OFFS_B(pData, i))
 771                             		.loc 1 793 0
 772 007a FE CF 1F                		movu.B	[r15,r1], r15
 773 007d 47 F2                   		cmp	r15, r2
 774 007f 23 07                   		bltu	.L74
 794:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			{
 795:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				nPage += 0x0100U;
 775                             		.loc 1 795 0
 776 0081 72 44 00 01             		add	#0x100, r4
 777                             	.LVL101:
 778 0085 03                      		.balign 2,3,1
 779                             	.L74:
 790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		for (i = 1; i < (2 * nExtraPointerWords); i++)
 780                             		.loc 1 790 0
 781 0086 62 15                   		add	#1, r5
 782                             	.LVL102:
 783                             		.balign 2,3,1
 784                             	.L70:
 790:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		for (i = 1; i < (2 * nExtraPointerWords); i++)
 785                             		.loc 1 790 0 is_stmt 0 discriminator 1
 786 0088 5B 5F                   		movu.B	r5, r15
 787 008a 47 EF                   		cmp	r14, r15
 788 008c 29 EE                   		blt	.L75
 796:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			}
 797:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 798:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
 799:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 800:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		pData += (2 * nExtraPointerWords);		/* pData points to the begin of displacement */
 789                             		.loc 1 800 0 is_stmt 1
 790 008e 4B E1                   		add	r14, r1
 791                             	.LVL103:
 801:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 802:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	#ifdef _BSLDR_ENABLE_ERROR_MNG_
 803:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 804:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		if (displacement >= ((2 * (*pData)) - 1))
 792                             		.loc 1 804 0
 793 0090 58 1E                   		movu.B	[r1], r14
 794 0092 4B EE                   		add	r14, r14
 795 0094 60 1E                   		sub	#1, r14
 796 0096 47 E2                   		cmp	r14, r2
 797 0098 28 2B                   		bge	.L80
 805:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
 806:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			return BSLDR_ERR_INVALID_DISPL;
 807:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
 808:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 809:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	#endif
 810:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 811:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		/*
 812:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		Il calcolo √® valido anche nel caso in cui  *( EepData + Displacement + 1 ) < *( EepData + Displa
 813:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		a causa di un'overflow page
 814:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		*/
 815:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		pDataOut->DataLenght = (uint8_t)( *( pData + displacement + 1 ) - *( pData + displacement ) );
 798                             		.loc 1 815 0
 799 009a 4B 12                   		add	r1, r2
 800 009c 88 2D                   		mov.B	1[r2], r5
 801                             	.LVL104:
 802 009e CC 2E                   		mov.B	[r2], r14
 803 00a0 FF 0E E5                		sub	r14, r5, r14
 804 00a3 5B EE                   		movu.B	r14, r14
 805 00a5 D7 3E 02                		mov.W	r14, 4[r3]
 816:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		pDataOut->Data = pData + (2 * (*(pData + displacement) + nPage));
 806                             		.loc 1 816 0
 807 00a8 58 2E                   		movu.B	[r2], r14
 808                             	.LVL105:
 809                             		.balign 2,3,1
 810                             	.L82:
 811 00aa 5F 44                   		movu.W	r4, r4
 812 00ac 4B E4                   		add	r14, r4
 813                             	.LVL106:
 814 00ae 4B 44                   		add	r4, r4
 815 00b0 4B 41                   		add	r4, r1
 816 00b2 E3 31                   		mov.L	r1, [r3]
 817                             	.LBE14:
 817:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 818:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 819:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (0 == pDataOut->DataLenght)
 818                             		.loc 1 819 0
 819 00b4 B8 B1                   		movu.W	4[r3], r1
 820:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
 821:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		return BSLDR_WRN_LENGHT;
 820                             		.loc 1 821 0
 821 00b6 61 01                   		cmp	#0, r1
 822 00b8 66 01                   		mov.L	#0, r1
 823 00ba FD 74 E1 02             		stz	#2, r1
 824 00be 08                      		bra	.L68
 825                             	.LVL107:
 826                             	.L77:
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		return BSLDR_ERR_OVFL_EXTRAPTR;
 827                             		.loc 1 747 0
 828 00bf FB 16 88                		mov	#0xffffff88, r1
 829                             	.LVL108:
 830 00c2 0C                      		bra	.L68
 831                             	.LVL109:
 832                             	.L80:
 833                             	.LBB15:
 738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		return BSLDR_ERR_INVALID_DISPL;
 834                             		.loc 1 738 0
 835 00c3 FB 16 82                		mov	#0xffffff82, r1
 836                             		.balign 2,3,3
 837                             	.L68:
 838                             	.LBE15:
 822:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
 823:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 824:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return BSLDR_OK;
 825:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 839                             		.loc 1 825 0
 840 00c6 76 21 8B 00             		and #0x8b, r1
 841 00ca 02                      		rts
 842                             	.LFE15:
 844 00cb 03                      		.section	.text.BasicLoader,"ax",@progbits
 845                             		.global	_BasicLoader
 847                             	_BasicLoader:
 848                             	.LFB10:
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 849                             		.loc 1 590 0
 850 0000 7E A7                   		push.l	r7
 851                             	.LCFI6:
 852 0002 60 40                   		sub	#4, r0
 853                             	.LCFI7:
 854 0004 DF 1E                   		mov.W	r1, r14
 855 0006 DF 27                   		mov.W	r2, r7
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	dataStartAddr = LIB_SEF_GetBEWrdRelShort_Ptr(dataStartAddr, pointer);
 856                             		.loc 1 594 0
 857 0008 FB 12 00 00 00 00       		mov.L	#_Eeprom, r1
 858 000e DF E2                   		mov.W	r14, r2
 859 0010 E3 03                   		mov.L	r3, [r0]
 860 0012 05 00 00 00             		bsr	_LIB_SEF_GetBEWrdRelShort_Ptr
 595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (dataStartAddr != NULL)
 861                             		.loc 1 595 0
 862 0016 EC 03                   		mov.L	[r0], r3
 863 0018 61 01                   		cmp	#0, r1
 864 001a 20 0C                   		beq	.L84
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		retVal = LIB_SEF_GetDisplData(dataStartAddr, displacement, pDataOut);
 865                             		.loc 1 597 0
 866 001c DF 72                   		mov.W	r7, r2
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 867                             		.loc 1 601 0
 868 001e 62 40                   		add	#4, r0
 869 0020 7E B7                   		pop	r7
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		retVal = LIB_SEF_GetDisplData(dataStartAddr, displacement, pDataOut);
 870                             		.loc 1 597 0
 871 0022 04 00 00 00             		bra	_LIB_SEF_GetDisplData
 872                             	.L84:
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 873                             		.loc 1 601 0
 874 0026 75 41 89                		mov.L	#0x89, r1
 875 0029 3F 77 02                		rtsd	#8, r7-r7
 876                             	.LFE10:
 878                             		.section	.text.MSettingBasicLoader,"ax",@progbits
 879                             		.global	_MSettingBasicLoader
 881                             	_MSettingBasicLoader:
 882                             	.LFB16:
 826:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 827:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 828:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /*!
 829:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 830:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \brief Extended Basic Loader
 831:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param[in,out]
 832:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return
 833:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date
 834:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author
 835:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version
 836:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \ingroup
 837:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \attention
 838:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \warning
 839:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 840:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t MSettingBasicLoader( uint8_t SFIndex, settingPntr_t pointer, uint16_t displacement,  Loader
 841:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 883                             		.loc 1 841 0
 884 0000 6E 7A                   		pushm	r7-r10
 885                             	.LCFI8:
 886 0002 60 40                   		sub	#4, r0
 887                             	.LCFI9:
 888 0004 DF 37                   		mov.W	r3, r7
 889 0006 EF 4A                   		mov.L	r4, r10
 842:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t *pmSetting = LIB_SEF_GetMsettingStartAddr(SFIndex);	/**< Pointer to mSetting */
 890                             		.loc 1 842 0
 891 0008 E3 02                   		mov.L	r2, [r0]
 892 000a 05 00 00 00             		bsr	_LIB_SEF_GetMsettingStartAddr
 843:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t errorSFCode = BSLDR_ERR_INVALID_POINTER;	/**< Error code for SFBasicLoader and SFmSettingP
 844:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 845:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	pmSetting = LIB_SEF_GetBEWrdRelShort_Ptr(pmSetting, pointer);
 893                             		.loc 1 845 0
 894 000e EC 02                   		mov.L	[r0], r2
 895 0010 05 00 00 00             		bsr	_LIB_SEF_GetBEWrdRelShort_Ptr
 846:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 847:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (pmSetting != NULL)
 896                             		.loc 1 847 0
 897 0014 61 01                   		cmp	#0, r1
 898 0016 20 0E                   		beq	.L87
 848:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		errorSFCode = LIB_SEF_GetDisplData(pmSetting, displacement, pDataOut);
 899                             		.loc 1 849 0
 900 0018 DF 72                   		mov.W	r7, r2
 901 001a EF A3                   		mov.L	r10, r3
 850:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 851:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 852:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return errorSFCode;
 853:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 902                             		.loc 1 853 0
 903 001c 62 40                   		add	#4, r0
 904 001e 6F 7A                   		popm	r7-r10
 849:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		errorSFCode = LIB_SEF_GetDisplData(pmSetting, displacement, pDataOut);
 905                             		.loc 1 849 0
 906 0020 04 00 00 00             		bra	_LIB_SEF_GetDisplData
 907                             	.L87:
 908                             		.loc 1 853 0
 909 0024 75 41 89                		mov.L	#0x89, r1
 910 0027 3F 7A 05                		rtsd	#20, r7-r10
 911                             	.LFE16:
 913                             		.section	.text.LIB_CAL_GetCalibData,"ax",@progbits
 914                             		.global	_LIB_CAL_GetCalibData
 916                             	_LIB_CAL_GetCalibData:
 917                             	.LFB17:
 854:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 855:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 856:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 857:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This routine perform access to Calibration data (WBOX or not).
 858:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 859:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]    caliBoxID 	Calibration box to be used (ID_CAL_PNTR_ELECT_SUPP, ID_CAL_PNTR_FACTORY)
 860:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [out]	pDataOut	pointer and data length of the requested field
 861:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 862:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 863:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint8_t
 864:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 865:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval		BSLDR_ERR_INVALID_DISPL
 866:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval		BSLDR_ERR_OVFL_EXTRAPTR
 867:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval		BSLDR_WRN_LENGHT
 868:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval		BSLDR_OK
 869:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		 	 		
 870:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 871:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Platform's Group
 872:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		02/09/2010
 873:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
 874:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 875:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 876:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Platform's Group
 877:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		13/09/2010
 878:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.1
 879:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 880:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Alessandro Sabbatini
 881:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		28/05/2013
 882:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.1.0
 883:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    
 884:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
 885:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Stefano Ughi\n
 886:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			\par \b Note 2:
 887:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			13/09/2010
 888:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             pDataOut->Data = pData + (2 * (*(pData + displacement) + nPage)) + 3 + ((nWriting-1) * 
 889:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             becames\n
 890:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****             pDataOut->Data = pData + (2 * (*(pData + displacement) + nPage)) + 4 + ((nWriting-1) * 
 891:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			\par \b Note 3:
 892:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			Update by Alessandro Sabbatini
 893:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			LIB_CAL_GetCalibData() is the new function to get calibration data
 894:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 895:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 896:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 897:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t LIB_CAL_GetCalibData(uint8_t caliBoxID, Loader_Struct* pDataOut)
 898:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 918                             		.loc 1 898 0
 919                             	.LVL110:
 920 0000 7E A7                   		push.l	r7
 921                             	.LCFI10:
 922 0002 EF 27                   		mov.L	r2, r7
 923                             	.LVL111:
 924 0004 5B 11                   		movu.B	r1, r1
 925 0006 61 11                   		cmp	#1, r1
 926 0008 24 0B                   		bgtu	.L96
 927 000a 70 11 00 00 00 00       		add	#_CSWTCH.40, r1
 928                             	.LVL112:
 929 0010 CC 12                   		mov.B	[r1], r2
 930                             	.LVL113:
 931 0012 0C                      		bra	.L90
 932                             	.LVL114:
 933                             	.L96:
 934                             		.loc 1 898 0
 935 0013 FB 26 FF                		mov	#-1, r2
 936                             	.LVL115:
 937                             		.balign 2,3,1
 938                             	.L90:
 899:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t retVal = BSLDR_ERR_INVALID_POINTER;
 900:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t tmpDspl = 0xff;
 901:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t* pdataStartAddr;
 902:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 903:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_ADC_CALIBRATION)
 904:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 905:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_SETTING_CALIBRATION_ON_WBOX)
 906:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	pdataStartAddr = (uint16_t *) WBOXData;
 907:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #else
 908:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	pdataStartAddr = LIB_SEF_GetBEWrdRelShort_Ptr(GetDefaultSettingStartAddress(), CONFIG_LIB_SETTING_
 909:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
 910:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 911:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	switch (caliBoxID)
 912:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 913:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	case ID_CAL_PNTR_ELECT_SUPP:
 914:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 915:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		tmpDspl = CONFIG_LIB_SETTING_CALIB_EMS_DISPL;
 916:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 917:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	break;
 918:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 919:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	case ID_CAL_PNTR_FACTORY:
 920:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 921:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		tmpDspl = CONFIG_LIB_SETTING_CALIB_PLANT_DISPL;
 922:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 923:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	break;
 924:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 925:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	default:
 926:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 927:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	break;
 928:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 929:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 930:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	retVal = LIB_SEF_GetDisplData(pdataStartAddr, tmpDspl, pDataOut);
 939                             		.loc 1 930 0
 940 0016 5B 22                   		movu.B	r2, r2
 941 0018 FB 12 00 00 00 00       		mov.L	#_WBOXData, r1
 942 001e EF 73                   		mov.L	r7, r3
 943 0020 05 00 00 00             		bsr	_LIB_SEF_GetDisplData
 944                             	.LVL116:
 931:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	/* retVal = ExtendedBasicLoader(pdataStartAddr, CONFIG_LIB_SETTING_CALIB_PTR, tmpDspl, pDataOut); 
 932:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 933:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 934:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(CONFIG_LIB_SETTING_CALIBRATION_ON_WBOX)
 935:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 936:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (retVal == BSLDR_OK)
 945                             		.loc 1 936 0
 946 0024 5B 1E                   		movu.B	r1, r14
 947 0026 61 0E                   		cmp	#0, r14
 948 0028 21 38                   		bne	.L91
 949                             	.LVL117:
 950                             	.LBB16:
 937:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
 938:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		unsigned int i;
 939:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	unsigned int nWriting = 8;
 940:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	uint8_t *pData = pDataOut->Data;
 951                             		.loc 1 940 0
 952 002a EC 74                   		mov.L	[r7], r4
 953                             	.LVL118:
 941:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 942:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	/* Get unmber of writings done on Calibration area, according to bitmap */
 943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	for (i = 0; i < 8; i++)
 944:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	{
 945:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  		if( ( ( pData[0] >> i ) & 0x01 ) == 1 )
 954                             		.loc 1 945 0
 955 002c 58 43                   		movu.B	[r4], r3
 956                             	.LVL119:
 957                             		.balign 2,3,1
 958                             	.L93:
 959 002e EF 32                   		mov.L	r3, r2
 960 0030 FD 61 E2                		shar	r14, r2
 961 0033 FD 74 C2 01             		tst	#1, r2
 962 0037 1F                      		bne	.L92
 943:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	for (i = 0; i < 8; i++)
 963                             		.loc 1 943 0
 964 0038 62 1E                   		add	#1, r14
 965                             	.LVL120:
 966 003a 61 8E                   		cmp	#8, r14
 967 003c 21 F2                   		bne	.L93
 968                             	.LVL121:
 969                             		.balign 2,3,3
 970                             	.L92:
 946:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  		{
 947:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  			nWriting = i;
 948:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  			break;
 949:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  		}
 950:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	}
 951:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 952:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	/* Check if value found is not out of boundaries set by WBox structure */
 953:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	if( nWriting > pData[1] )
 971                             		.loc 1 953 0
 972 003e B0 4B                   		movu.B	1[r4], r3
 973 0040 47 3E                   		cmp	r3, r14
 974 0042 25 04                   		bleu	.L94
 975 0044 EF 3E                   		mov.L	r3, r14
 976                             	.LVL122:
 977                             		.balign 2,3,1
 978                             	.L94:
 954:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	{
 955:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  		nWriting = pData[1];
 956:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	  	}
 957:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 958:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	    if(nWriting != 0)
 979                             		.loc 1 958 0
 980 0046 61 0E                   		cmp	#0, r14
 981 0048 20 11                   		beq	.L95
 959:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	    {
 960:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	        pDataOut->DataLenght = pData[2];
 982                             		.loc 1 960 0
 983 004a B0 C3                   		movu.B	2[r4], r3
 984 004c 90 F3                   		mov.W	r3, 4[r7]
 961:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	        pDataOut->Data = pData + 4 + ((nWriting-1) * pDataOut->DataLenght);
 985                             		.loc 1 961 0
 986 004e 60 1E                   		sub	#1, r14
 987                             	.LVL123:
 988 0050 4F E3                   		mul	r14, r3
 989 0052 62 43                   		add	#4, r3
 990 0054 4B 34                   		add	r3, r4
 991                             	.LVL124:
 992 0056 E3 74                   		mov.L	r4, [r7]
 993 0058 08                      		bra	.L91
 994                             	.LVL125:
 995                             	.L95:
 962:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	    }
 963:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	    else
 964:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	    {
 965:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	        pDataOut->DataLenght = 0;
 996                             		.loc 1 965 0
 997 0059 D7 7E 02                		mov.W	r14, 4[r7]
 966:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	        pDataOut->Data       = (uint8_t *) NULL;
 998                             		.loc 1 966 0
 999 005c E3 7E                   		mov.L	r14, [r7]
 1000                             	.LVL126:
 967:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	        retVal = BSLDR_WRN_LENGHT;
 1001                             		.loc 1 967 0
 1002 005e 66 21                   		mov	#2, r1
 1003                             	.LVL127:
 1004                             		.balign 2,3,1
 1005                             	.L91:
 1006                             	.LBE16:
 968:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	    }
 969:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 970:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
 971:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif /* defined(CONFIG_LIB_SETTING_CALIBRATION_ON_WBOX) */
 972:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 973:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif /* defined(CONFIG_LIB_ADC_CALIBRATION) && defined(LIB_SETTING_CALIBRATION_ON_WBOX) */
 974:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 975:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return retVal;
 976:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1007                             		.loc 1 976 0
 1008 0060 5B 11                   		movu.B	r1, r1
 1009 0062 3F 77 01                		rtsd	#4, r7-r7
 1010                             	.LFE17:
 1012 0065 03                      		.section	.text.LIB_ChkComputation,"ax",@progbits
 1013                             		.global	_LIB_ChkComputation
 1015                             	_LIB_ChkComputation:
 1016                             	.LFB18:
 977:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 978:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif /* #if defined (IO_MANAGER_BASICLOADER_CSTM == FALSE) */
 979:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif /* #if defined (IO_MANAGER_BASICLOADER_CSTM) */
 980:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 981:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 982:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
 983:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** Computes the checksum as the sum of all \c len bytes starting form the pointer with initial seed.
 984:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 985:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param [in]		len number of bytes (>=0)
 986:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param [in]		data  pointer to data
 987:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param [in]		initial seed value
 988:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 989:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \warning
 990:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 991:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note
 992:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
 993:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version		1.0.0
 994:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date 			15/04/2009
 995:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author			Roberto Fioravanti
 996:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
 997:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint16_t LIB_ChkComputation (uint16_t  len, uint8_t * pdata, uint8_t seed)
 998:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1017                             		.loc 1 998 0
 1018                             	.LVL128:
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t  *_pdata=pdata;
1000:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t i;
1001:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1002:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint16_t chk;
1003:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	chk = seed;
 1019                             		.loc 1 1003 0
 1020 0000 5B 33                   		movu.B	r3, r3
 1021                             	.LVL129:
 999:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t  *_pdata=pdata;
 1022                             		.loc 1 999 0
 1023 0002 EF 2E                   		mov.L	r2, r14
1004:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1005:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	for(i=0; i<len; i++)
 1024                             		.loc 1 1005 0
 1025 0004 5F 11                   		movu.W	r1, r1
 1026 0006 0E                      		bra	.L101
 1027                             	.LVL130:
 1028                             	.L102:
1006:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
1007:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		chk+=*_pdata;
 1029                             		.loc 1 1007 0 discriminator 2
 1030 0007 FD 38 E4                		movu.B	[r14+], r4
 1031                             	.LVL131:
 1032 000a 4B 43                   		add	r4, r3
 1033                             	.LVL132:
 1034                             		.balign 2,3,2
 1035                             	.L101:
1005:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	for(i=0; i<len; i++)
 1036                             		.loc 1 1005 0 discriminator 1
 1037 000c FF 04 2E                		sub	r2, r14, r4
 1038 000f 5F 44                   		movu.W	r4, r4
 1039 0011 47 41                   		cmp	r4, r1
 1040 0013 24 F4                   		bgtu	.L102
1008:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		_pdata++;
1009:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
1010:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1011:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return chk;
1012:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1041                             		.loc 1 1012 0
 1042 0015 5F 31                   		movu.W	r3, r1
 1043                             	.LVL133:
 1044 0017 02                      		rts
 1045                             	.LFE18:
 1047                             		.section	.text.SFBasicLoaderPointer,"ax",@progbits
 1048                             		.global	_SFBasicLoaderPointer
 1050                             	_SFBasicLoaderPointer:
 1051                             	.LFB19:
1013:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
1014:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function extract address and size of data related to a given displacement 
1015:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** of a given pointer belonging to a setting file.
1016:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** The start address of the Pointer is provided as parameter.
1017:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1018:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		pPointerAddr: start address of the pointer area
1019:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	  displacement: index of the displscement. (see setting file documentation)
1020:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [out] 	pDataOut: is composed by the absolute address and the size (in words) of the returne
1021:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1022:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint8_t
1023:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1024:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 SF_OK : OK
1025:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_DISPL: invalid displ value
1026:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_POINTER: invalid pointer value
1027:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_OVFL_EXTRAPTR: too many extrapointers respect to a MAX defined value
1028:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_ENDOFPOINTER: displacement is > of the last available displacement
1029:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_WRN_LENGHT : data has length =0
1030:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  
1031:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1032:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Andrea.Mantovani 
1033:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		Feb X, 2010 
1034:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
1035:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
1036:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Andrea.Mantovani
1037:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1038:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
1039:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t SFBasicLoaderPointer(uint8_t* pPointerAddr, uint8_t displacement, Loader_Struct* pDataOut) 
1040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1052                             		.loc 1 1040 0
1041:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint16_t nPage, ui16DisplNum;
1042:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t *pData2;
1043:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   
1044:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t nExtraPointerWords;
1045:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   uint8_t i;
1046:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1047:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     
1048:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (0xFF == displacement)
 1053                             		.loc 1 1048 0
 1054 0000 5B 2F                   		movu.B	r2, r15
 1055 0002 75 5F FF                		cmp	#0xff, r15
 1056 0005 20 78                   		beq	.L109
1049:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
1050:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /**
1051:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       0xFF is the last admitted value and is an odd value and for this reason it must be a dummy 
1052:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       displacement cause the size cannot be calculated
1053:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       */
1054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_DISPL;
1055:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
1056:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  
1057:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   
1058:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (((uint8_t*)NULL_POINTER == pPointerAddr) || ((uint8_t*)INVALID_POINTER == pPointerAddr))
 1057                             		.loc 1 1058 0
 1058 0007 61 01                   		cmp	#0, r1
 1059 0009 20 7A                   		beq	.L111
 1060                             		.loc 1 1058 0 is_stmt 0 discriminator 1
 1061 000b 77 01 FF FF 00          		cmp	#0xffff, r1
 1062 0010 20 73                   		beq	.L111
1040:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1063                             		.loc 1 1040 0 is_stmt 1
 1064 0012 6E 7A                   		pushm	r7-r10
 1065                             	.LCFI11:
1059:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
1060:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_POINTER;
1061:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
1062:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  
1063:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   nExtraPointerWords = *pPointerAddr;
 1066                             		.loc 1 1063 0
 1067 0014 CC 15                   		mov.B	[r1], r5
1064:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   
1065:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (nExtraPointerWords > N_MAX_EXTRAPTR_WORDS)
 1068                             		.loc 1 1065 0
 1069 0016 CF 57                   		mov.B	r5, r7
 1070 0018 61 07                   		cmp	#0, r7
 1071 001a 29 6D                   		blt	.L112
1066:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_OVFL_EXTRAPTR;
1068:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
1069:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1070:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  /* Checks the ExtraPointer and calculates the page */
1071:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   nPage = 0;
1072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 1072                             		.loc 1 1072 0
 1073 001c 5B 55                   		movu.B	r5, r5
 1074 001e 4B 55                   		add	r5, r5
 1075 0020 66 14                   		mov	#1, r4
 1076 0022 66 0E                   		mov	#0, r14
1073:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
1074:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /* displacement < 0xFF */
1075:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (displacement >= OFFS_B(pPointerAddr, i))
 1077                             		.loc 1 1075 0
 1078 0024 EF F7                   		mov.L	r15, r7
 1079 0026 2E 10                   		bra	.L105
 1080                             	.L107:
 1081 0028 FE CF 1A                		movu.B	[r15,r1], r10
 1082 002b 47 A7                   		cmp	r10, r7
 1083 002d 23 07                   		bltu	.L106
1076:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
1077:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       nPage += 0x0100U;
 1084                             		.loc 1 1077 0
 1085 002f 72 EE 00 01             		add	#0x100, r14
 1086 0033 03                      		.balign 2,3,1
 1087                             	.L106:
1072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 1088                             		.loc 1 1072 0
 1089 0034 62 14                   		add	#1, r4
 1090                             		.balign 2,3,1
 1091                             	.L105:
1072:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   for (i = 1; i < (2 * nExtraPointerWords); i++)
 1092                             		.loc 1 1072 0 is_stmt 0 discriminator 1
 1093 0036 5B 4F                   		movu.B	r4, r15
 1094 0038 47 5F                   		cmp	r5, r15
 1095 003a 29 EE                   		blt	.L107
1078:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
1079:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
1080:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1081:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /* pData points to the first byte of the displacement area */
1082:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pPointerAddr += (2 * nExtraPointerWords); 
 1096                             		.loc 1 1082 0 is_stmt 1
 1097 003c 4B 51                   		add	r5, r1
1083:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1084:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1085:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    ui16DisplNum = (uint16_t)((2*(uint8_t)(*pPointerAddr))-1);
 1098                             		.loc 1 1085 0
 1099 003e 58 15                   		movu.B	[r1], r5
 1100 0040 4B 55                   		add	r5, r5
 1101 0042 71 54 FF                		add	#-1, r5, r4
1086:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    
1087:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   /* pData2 points to the last dummy displacement */
1088:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    pData2 =pPointerAddr+ui16DisplNum;
 1102                             		.loc 1 1088 0
 1103 0045 5F 4F                   		movu.W	r4, r15
 1104 0047 4B 1F                   		add	r1, r15
1089:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    if (*pData2 == *(pData2-1)) 
 1105                             		.loc 1 1089 0
 1106 0049 71 FA FF                		add	#-1, r15, r10
 1107 004c 58 F7                   		movu.B	[r15], r7
 1108 004e 44 A7                   		cmp	[r10].UB, r7
 1109 0050 1C                      		bne	.L108
1090:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    {
1091:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       ui16DisplNum -=1;
 1110                             		.loc 1 1091 0
 1111 0051 71 54 FE                		add	#-2, r5, r4
 1112                             		.balign 2,3,1
 1113                             	.L108:
1092:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    }
1093:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    
1094:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (displacement >= ui16DisplNum)
 1114                             		.loc 1 1094 0
 1115 0054 5B 22                   		movu.B	r2, r2
 1116 0056 5F 44                   		movu.W	r4, r4
 1117 0058 47 42                   		cmp	r4, r2
 1118 005a 22 30                   		bgeu	.L113
1095:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
1096:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_ENDOFPOINTER;
1097:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
1098:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****  
1099:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   /*
1100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     Calculation is valid also in case *( EepData + Displacement + 1 ) < *( EepData + Displacement )
1101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     cause an overflow page occurs.
1102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   */
1103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataOut->DataLenght = (uint8_t)( *( pPointerAddr + displacement + 1 ) - *( pPointerAddr + displa
 1119                             		.loc 1 1104 0
 1120 005c 4B 12                   		add	r1, r2
 1121 005e 88 2D                   		mov.B	1[r2], r5
 1122 0060 CC 24                   		mov.B	[r2], r4
 1123 0062 FF 04 45                		sub	r4, r5, r4
 1124 0065 5B 44                   		movu.B	r4, r4
 1125 0067 90 B4                   		mov.W	r4, 4[r3]
1105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   pDataOut->Data = pPointerAddr + (2 * (*(pPointerAddr + displacement) + nPage));
 1126                             		.loc 1 1105 0
 1127 0069 58 22                   		movu.B	[r2], r2
 1128 006b 5F EE                   		movu.W	r14, r14
 1129 006d 4B 2E                   		add	r2, r14
 1130 006f 4B EE                   		add	r14, r14
 1131 0071 4B E1                   		add	r14, r1
 1132 0073 E3 31                   		mov.L	r1, [r3]
1106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   if (0 == pDataOut->DataLenght)
 1133                             		.loc 1 1106 0
 1134 0075 61 04                   		cmp	#0, r4
 1135 0077 21 16                   		bne	.L114
1107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   {
1108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_WRN_LENGHT;
 1136                             		.loc 1 1108 0
 1137 0079 66 71                   		mov	#7, r1
 1138 007b 2E 15                   		bra	.L104
 1139                             	.L109:
 1140                             	.LCFI12:
1054:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_DISPL;
 1141                             		.loc 1 1054 0
 1142 007d 66 11                   		mov	#1, r1
 1143 007f 03                      		.balign 2,3,1
 1144                             	.L116:
1109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   }
1110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   return SF_OK;
1112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1145                             		.loc 1 1113 0
 1146 0080 64 71                   		and #7, r1
 1147 0082 02                      		rts
 1148                             	.L111:
1060:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_INVALID_POINTER;
 1149                             		.loc 1 1060 0
 1150 0083 66 21                   		mov	#2, r1
 1151 0085 2E FB                   		bra	.L116
 1152                             	.L112:
 1153                             	.LCFI13:
1067:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_LDR_ERR_OVFL_EXTRAPTR;
 1154                             		.loc 1 1067 0
 1155 0087 66 31                   		mov	#3, r1
 1156 0089 0F                      		bra	.L104
 1157                             	.L113:
1096:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****       return SF_LDR_ERR_ENDOFPOINTER;
 1158                             		.loc 1 1096 0
 1159 008a 66 51                   		mov	#5, r1
 1160 008c 0C                      		bra	.L104
 1161                             	.L114:
1111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   return SF_OK;
 1162                             		.loc 1 1111 0
 1163 008d 66 01                   		mov	#0, r1
 1164 008f 03                      		.balign 2,3,1
 1165                             	.L104:
 1166                             		.loc 1 1113 0
 1167 0090 64 71                   		and #7, r1
 1168 0092 3F 7A 04                		rtsd	#16, r7-r10
 1169                             	.LFE19:
 1171 0095 03                      		.section	.text.SFGetDisplacementNumber,"ax",@progbits
 1172                             		.global	_SFGetDisplacementNumber
 1174                             	_SFGetDisplacementNumber:
 1175                             	.LFB20:
1114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
1117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function the number of displacements for a give setting file pointer passed by its memory poin
1118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		pPointerAddr: start address of the pointer area
1120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [out] 	    pDisplNum: number of displacement
1121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint8_t
1124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 SF_OK : OK
1126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_POINTER: invalid pointer value (*pDisplNum not changed)
1127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_OVFL_EXTRAPTR: too many extrapointers respect to a MAX defined value (*pDisplNu
1128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Roberto Fioravanti
1131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		21/10/2010
1132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0	
1133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****    
1134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
1135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Roberto Fioravanti
1136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
1138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t SFGetDisplacementNumber(uint8_t* pPointerAddr, uint8_t *pDisplNum)
1139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1176                             		.loc 1 1139 0
 1177                             	.LVL134:
1140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     uint16_t ui16DisplNum;
1141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     uint8_t *pData2;
1142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     uint8_t nExtraPointerWords;
1144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****   
1145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (((uint8_t*)NULL_POINTER == pPointerAddr))
 1178                             		.loc 1 1145 0
 1179 0000 61 01                   		cmp	#0, r1
 1180 0002 20 37                   		beq	.L121
1146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
1147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         return SF_LDR_ERR_INVALID_POINTER;
1148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
1149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     nExtraPointerWords = *pPointerAddr;
 1181                             		.loc 1 1150 0
 1182 0004 CC 1E                   		mov.B	[r1], r14
 1183                             	.LVL135:
1151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (nExtraPointerWords > N_MAX_EXTRAPTR_WORDS)
 1184                             		.loc 1 1152 0
 1185 0006 CF E4                   		mov.B	r14, r4
 1186 0008 61 04                   		cmp	#0, r4
 1187 000a 29 32                   		blt	.L122
1153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
1154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         return SF_LDR_ERR_OVFL_EXTRAPTR;
1155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
1156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     
1158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /* pData points to the first byte of the displacement area */
1159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     pPointerAddr += (2 * nExtraPointerWords); 
 1188                             		.loc 1 1159 0
 1189 000c 5B EE                   		movu.B	r14, r14
 1190 000e 4B EE                   		add	r14, r14
 1191                             	.LVL136:
 1192 0010 4B E1                   		add	r14, r1
 1193                             	.LVL137:
1160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     ui16DisplNum = (uint16_t)((2*(uint8_t)(*pPointerAddr)) - 1);
 1194                             		.loc 1 1162 0
 1195 0012 58 14                   		movu.B	[r1], r4
 1196                             	.LVL138:
 1197 0014 4B 44                   		add	r4, r4
 1198 0016 71 4E FF                		add	#-1, r4, r14
 1199                             	.LVL139:
1163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     /* pData2 points to the last dummy displacement */
1165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     pData2 =pPointerAddr+ui16DisplNum;
 1200                             		.loc 1 1165 0
 1201 0019 5F E3                   		movu.W	r14, r3
 1202 001b 4B 31                   		add	r3, r1
 1203                             	.LVL140:
1166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (*pData2 == *(pData2-1)) 
 1204                             		.loc 1 1166 0
 1205 001d 71 13 FF                		add	#-1, r1, r3
 1206 0020 58 11                   		movu.B	[r1], r1
 1207                             	.LVL141:
 1208 0022 44 31                   		cmp	[r3].UB, r1
 1209 0024 1C                      		bne	.L119
1167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     {
1168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         ui16DisplNum -=1;
 1210                             		.loc 1 1168 0
 1211 0025 71 4E FE                		add	#-2, r4, r14
 1212                             	.LVL142:
 1213                             		.balign 2,3,1
 1214                             	.L119:
1169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
1170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     
1171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     if (ui16DisplNum < 256) {
 1215                             		.loc 1 1171 0
 1216 0028 5F E4                   		movu.W	r14, r4
 1217 002a 75 54 FF                		cmp	#0xff, r4
 1218 002d 24 05                   		bgtu	.L120
1172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         *pDisplNum = (uint8_t) ui16DisplNum;  
 1219                             		.loc 1 1172 0
 1220 002f C3 2E                   		mov.B	r14, [r2]
 1221 0031 0D                      		bra	.L123
 1222                             	.L120:
1173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     }
1174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     else 
1175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
1176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		*pDisplNum = 255;
 1223                             		.loc 1 1176 0
 1224 0032 F8 24 FF                		mov.B	#-1, [r2]
 1225 0035 03                      		.balign 2,3,1
 1226                             	.L123:
1177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
1178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     
1179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****     return SF_OK;
 1227                             		.loc 1 1179 0
 1228 0036 66 01                   		mov	#0, r1
 1229 0038 0E                      		bra	.L118
 1230                             	.LVL143:
 1231                             	.L121:
1147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         return SF_LDR_ERR_INVALID_POINTER;
 1232                             		.loc 1 1147 0
 1233 0039 66 21                   		mov	#2, r1
 1234                             	.LVL144:
 1235 003b 0B                      		bra	.L118
 1236                             	.LVL145:
 1237                             	.L122:
1154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c ****         return SF_LDR_ERR_OVFL_EXTRAPTR;
 1238                             		.loc 1 1154 0
 1239 003c 66 31                   		mov	#3, r1
 1240                             	.LVL146:
 1241                             		.balign 2,3,1
 1242                             	.L118:
1180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1243                             		.loc 1 1180 0
 1244 003e 64 31                   		and #3, r1
 1245 0040 02                      		rts
 1246                             	.LFE20:
 1248 0041 03                      		.section	.text.LIB_SEF_GetFaultPriority,"ax",@progbits
 1249                             		.global	_LIB_SEF_GetFaultPriority
 1251                             	_LIB_SEF_GetFaultPriority:
 1252                             	.LFB21:
1181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
1183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function gives Fault Priority code according to
1184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		getApplTable: TRUE if Application Faults priority table to use
1186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	    fltCode: Fault code to search
1187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	    fltSubCode: Fault sub code to search
1188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [out] 	    fltPrio: Returns fault priority read from setting file (if all OK, unchanged oth
1189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	uint8_t
1192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 SF_OK : 	OK
1194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_INVALID_DISPL: invalid displacement (not found)
1195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  SF_LDR_ERR_NOT_FOUND: Fault priority value not found
1196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Alessandro Sabbatini
1199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		11/02/2013
1200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
1201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
1203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Alessandro Sabbatini
1204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t LIB_SEF_GetFaultPriority(bool_t getApplTable, uint8_t fltCode, uint8_t fltSubCode, uint8_t 
1207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1253                             		.loc 1 1207 0
 1254                             	.LVL147:
 1255 0000 6E 7B                   		pushm	r7-r11
 1256                             	.LCFI14:
 1257 0002 60 80                   		sub	#8, r0
 1258                             	.LCFI15:
 1259 0004 CF 2A                   		mov.B	r2, r10
 1260 0006 CF 37                   		mov.B	r3, r7
 1261 0008 EF 4B                   		mov.L	r4, r11
 1262                             	.LVL148:
1208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(SF_DISPL_FAULT_APP_PRIO) && defined(SF_DISPL_FAULT_PLT_PRIO)
1209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t resCode = SF_LDR_ERR_NOT_FOUND;
1210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t reqDispl;
1211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t tmpResVal;
1212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	Loader_Struct tmpLdrData;
1213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (getApplTable)
 1263                             		.loc 1 1214 0
 1264 000a 61 01                   		cmp	#0, r1
 1265 000c 14                      		beq	.L132
1215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
1216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		reqDispl = SF_DISPL_FAULT_APP_PRIO;
 1266                             		.loc 1 1216 0
 1267 000d 66 52                   		mov	#5, r2
 1268                             	.LVL149:
 1269 000f 0B                      		bra	.L125
 1270                             	.LVL150:
 1271                             	.L132:
1217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
1218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	else
1219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
1220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		reqDispl = SF_DISPL_FAULT_PLT_PRIO;
 1272                             		.loc 1 1220 0
 1273 0010 66 A2                   		mov	#10, r2
 1274                             	.LVL151:
 1275                             		.balign 2,3,2
 1276                             	.L125:
1221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
1222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	tmpResVal = BasicLoader(SF_PTR_FAULT, reqDispl, &tmpLdrData);
 1277                             		.loc 1 1223 0
 1278 0012 75 41 27                		mov	#39, r1
 1279                             	.LVL152:
 1280 0015 64 F2                   		and #15, r2
 1281                             	.LVL153:
 1282 0017 EF 03                   		mov.L	r0, r3
 1283                             	.LVL154:
 1284 0019 05 00 00 00             		bsr	_BasicLoader
 1285                             	.LVL155:
1224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #if defined(LIB_SETTINGFILE_CUSTOM_FAULT_PRIORITY)
1226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (tmpResVal != BSLDR_OK)
1227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
1228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		if (getApplTable)
1229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
1230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			tmpLdrData = CSTM_ApplFaultPriorities;
1231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
1232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		else
1233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
1234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			tmpLdrData = CSTM_PltFaultPriorities;
1235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
1236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		tmpResVal = BSLDR_OK;
1237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
1239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
1240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (tmpResVal == BSLDR_OK)
 1286                             		.loc 1 1241 0
 1287 001d 5B 11                   		movu.B	r1, r1
 1288 001f 61 01                   		cmp	#0, r1
 1289 0021 21 49                   		bne	.L133
 1290                             	.LBB17:
1242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
1243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		uint8_t numItems = ((tmpLdrData.DataLenght * 2) / 3);
 1291                             		.loc 1 1243 0
 1292 0023 5D 0E 02                		movu.W	4[r0], r14
 1293 0026 4B EE                   		add	r14, r14
 1294 0028 FD 74 8E 03             		div	#3, r14
 1295                             	.LVL156:
 1296                             	.LBB18:
1244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		uint8_t i;
1245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		for (i=0; i < numItems; i++)
1247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		{
1248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			uint8_t tmpFltCode = tmpLdrData.Data[2*i];
 1297                             		.loc 1 1248 0
 1298 002c EC 0F                   		mov.L	[r0], r15
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t LIB_SEF_GetFaultPriority(bool_t getApplTable, uint8_t fltCode, uint8_t fltSubCode, uint8_t 
 1299                             		.loc 1 1206 0
 1300 002e 71 F5 01                		add	#1, r15, r5
 1301                             	.LBE18:
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		for (i=0; i < numItems; i++)
 1302                             		.loc 1 1246 0
 1303 0031 5B E3                   		movu.B	r14, r3
 1304                             	.LBB19:
1249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			uint8_t tmpFltSubCode = tmpLdrData.Data[(2*i) + 1];
1250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			if ((tmpFltCode == fltCode) && ((tmpFltSubCode == fltSubCode) || (tmpFltSubCode == 0xFF)))
 1305                             		.loc 1 1251 0
 1306 0033 5B AA                   		movu.B	r10, r10
 1307 0035 5B 72                   		movu.B	r7, r2
 1308                             	.LBE19:
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		for (i=0; i < numItems; i++)
 1309                             		.loc 1 1246 0
 1310 0037 2E 2D                   		bra	.L127
 1311                             	.LVL157:
 1312                             	.L131:
 1313                             	.LBB20:
1249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			uint8_t tmpFltSubCode = tmpLdrData.Data[(2*i) + 1];
 1314                             		.loc 1 1249 0
 1315 0039 CC 57                   		mov.B	[r5], r7
 1316                             	.LVL158:
1206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t LIB_SEF_GetFaultPriority(bool_t getApplTable, uint8_t fltCode, uint8_t fltSubCode, uint8_t 
 1317                             		.loc 1 1206 0
 1318 003b 71 54 FF                		add	#-1, r5, r4
 1319                             	.LVL159:
 1320                             		.loc 1 1251 0
 1321 003e 58 44                   		movu.B	[r4], r4
 1322                             	.LVL160:
 1323 0040 47 A4                   		cmp	r10, r4
 1324 0042 21 1E                   		bne	.L128
 1325                             		.loc 1 1251 0 is_stmt 0 discriminator 1
 1326 0044 5B 77                   		movu.B	r7, r7
 1327                             	.LVL161:
 1328 0046 47 27                   		cmp	r2, r7
 1329 0048 21 13                   		bne	.L129
 1330                             		.balign 2,3,3
 1331                             	.L130:
1252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			{
1253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				*fltPrio = tmpLdrData.Data[(2*numItems)+i];
 1332                             		.loc 1 1253 0 is_stmt 1
 1333 004a 76 2E FF 00             		and #0xff, r14
 1334                             	.LVL162:
 1335 004e 4B EE                   		add	r14, r14
 1336 0050 4B E1                   		add	r14, r1
 1337 0052 FE 41 F1                		mov.B	[r1,r15], r1
 1338 0055 C3 B1                   		mov.B	r1, [r11]
 1339                             	.LVL163:
1254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				resCode = SF_OK;
 1340                             		.loc 1 1254 0
 1341 0057 66 01                   		mov	#0, r1
1255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 				break;
 1342                             		.loc 1 1255 0
 1343 0059 2E 13                   		bra	.L126
 1344                             	.LVL164:
 1345                             	.L129:
1251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			if ((tmpFltCode == fltCode) && ((tmpFltSubCode == fltSubCode) || (tmpFltSubCode == 0xFF)))
 1346                             		.loc 1 1251 0 discriminator 1
 1347 005b 75 57 FF                		cmp	#0xff, r7
 1348 005e 20 EC                   		beq	.L130
 1349                             	.LVL165:
 1350                             		.balign 2,3,1
 1351                             	.L128:
 1352 0060 62 11                   		add	#1, r1
 1353 0062 62 25                   		add	#2, r5
 1354                             	.LVL166:
 1355                             		.balign 2,3,1
 1356                             	.L127:
 1357                             	.LBE20:
1246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		for (i=0; i < numItems; i++)
 1358                             		.loc 1 1246 0 discriminator 1
 1359 0064 5B 14                   		movu.B	r1, r4
 1360 0066 47 43                   		cmp	r4, r3
 1361 0068 24 D1                   		bgtu	.L131
 1362                             	.LVL167:
 1363                             		.balign 2,3,1
 1364                             	.L133:
 1365                             	.LBE17:
1209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t resCode = SF_LDR_ERR_NOT_FOUND;
 1366                             		.loc 1 1209 0
 1367 006a 66 61                   		mov	#6, r1
 1368                             	.LVL168:
 1369                             		.balign 2,3,1
 1370                             	.L126:
1256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			}
1257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		}
1258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
1259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return resCode;
1261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #else
1263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return SF_LDR_ERR_NOT_FOUND;
1264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** #endif
1266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1371                             		.loc 1 1267 0
 1372 006c 64 61                   		and #6, r1
 1373                             	.LVL169:
 1374 006e 3F 7B 07                		rtsd	#28, r7-r11
 1375                             	.LFE21:
 1377 0071 03                      		.section	.text.LIB_SEF_FaultPriorityField,"ax",@progbits
 1378                             		.global	_LIB_SEF_FaultPriorityField
 1380                             	_LIB_SEF_FaultPriorityField:
 1381                             	.LFB22:
1268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
1270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function gives Fault Priority field from fault priority retrieved by setting file,
1271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** excluding Fault to display field.
1272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		faultPrio: Full fault priority item get from setting file table
1274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return uint8_t		Fault priority without Fault to display bit
1276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Alessandro Sabbatini
1278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		18/02/2013
1279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
1280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
1282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Alessandro Sabbatini
1283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
1285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** uint8_t LIB_SEF_FaultPriorityField(uint8_t faultPrio)
1286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1382                             		.loc 1 1286 0
 1383                             	.LVL170:
1287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return (uint8_t) (faultPrio & ((uint8_t) SF_FAULT_PRIO_MASK));
1288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1384                             		.loc 1 1288 0
 1385 0000 75 21 7F                		and #0x7f, r1
 1386                             	.LVL171:
 1387 0003 02                      		rts
 1388                             	.LFE22:
 1390                             		.section	.text.LIB_SEF_IsFaultToDisplayON,"ax",@progbits
 1391                             		.global	_LIB_SEF_IsFaultToDisplayON
 1393                             	_LIB_SEF_IsFaultToDisplayON:
 1394                             	.LFB23:
1289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
1292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function gives Fault To Display flag from fault priority retrieved by setting file
1293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		faultPrio: Full fault priority item get from setting file table
1295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	bool_t
1297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 TRUE		if Fault to display flag is set
1299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  FALSE		if Fault to display flag is not set
1300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Alessandro Sabbatini
1303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		18/02/2013
1304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
1305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
1307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Alessandro Sabbatini
1308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
1310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** bool_t LIB_SEF_IsFaultToDisplayON(uint8_t faultPrio)
1311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1395                             		.loc 1 1311 0
 1396                             	.LVL172:
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return (uint8_t) ((faultPrio & ((uint8_t) SF_FAULT_DISPL_MASK)) != 0);
 1397                             		.loc 1 1312 0
 1398 0000 CF 11                   		mov.B	r1, r1
1313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1399                             		.loc 1 1313 0
 1400 0002 69 F1                   		shlr	#31, r1
 1401                             	.LVL173:
 1402 0004 02                      		rts
 1403                             	.LFE23:
 1405                             		.section	.text.LIB_SEF_GetFaultToDisplay,"ax",@progbits
 1406                             		.global	_LIB_SEF_GetFaultToDisplay
 1408                             	_LIB_SEF_GetFaultToDisplay:
 1409                             	.LFB24:
1314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** /**
1316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** This function gives Fault To Display flag according to Fault code or sub code
1317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in]		getApplTable: TRUE if Application Faults priority table to use
1319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	    fltCode: Fault code to search
1320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \param  [in] 	    fltSubCode: Fault sub code to search
1321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \return 	bool_t
1324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval	 TRUE		if Fault to display flag is set
1326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \retval  FALSE		if Fault to display flag is not set or fault is not present
1327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \author 	Alessandro Sabbatini
1330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \date		18/02/2013
1331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \version	1.0.0
1332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** \note		\par \b Note 1:
1334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 			documentation by Alessandro Sabbatini
1335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** */
1337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** bool_t LIB_SEF_GetFaultToDisplay(bool_t getApplTable, uint8_t fltCode, uint8_t fltSubCode)
1338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** {
 1410                             		.loc 1 1338 0
 1411                             	.LVL174:
 1412 0000 60 40                   		sub	#4, r0
 1413                             	.LCFI16:
 1414                             	.LVL175:
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	bool_t resVal = FALSE;
1340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	uint8_t fltPrio = 0;
 1415                             		.loc 1 1340 0
 1416 0002 3C 00 00                		mov.B	#0, [r0]
 1417                             	.LVL176:
1341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	if (LIB_SEF_GetFaultPriority(getApplTable, fltCode, fltSubCode, &fltPrio) == SF_OK)
 1418                             		.loc 1 1342 0
 1419 0005 EF 04                   		mov.L	r0, r4
 1420 0007 05 00 00 00             		bsr	_LIB_SEF_GetFaultPriority
 1421                             	.LVL177:
 1422 000b 76 21 FF 00             		and #0xff, r1
 1423 000f 1E                      		bne	.L142
 1424                             	.LVL178:
 1425                             	.LBB21:
 1426                             	.LBB22:
1312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return (uint8_t) ((faultPrio & ((uint8_t) SF_FAULT_DISPL_MASK)) != 0);
 1427                             		.loc 1 1312 0
 1428 0010 CC 01                   		mov.B	[r0], r1
 1429                             	.LVL179:
 1430 0012 69 F1                   		shlr	#31, r1
 1431                             	.LVL180:
 1432 0014 0C                      		bra	.L141
 1433                             	.LVL181:
 1434                             	.L142:
 1435                             	.LBE22:
 1436                             	.LBE21:
1339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	bool_t resVal = FALSE;
 1437                             		.loc 1 1339 0
 1438 0015 66 01                   		mov.L	#0, r1
 1439                             	.LVL182:
 1440 0017 03                      		.balign 2,3,1
 1441                             	.L141:
1343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	{
1344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 		resVal = LIB_SEF_IsFaultToDisplayON(fltPrio);
1345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	}
1346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 
1347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** 	return resVal;
1348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library\LIB_UTilities.c **** }
 1442                             		.loc 1 1348 0
 1443 0018 67 01                   		rtsd	#4
 1444                             	.LFE24:
 1446                             		.section	.bss.CompChkState.9375,"aw",@nobits
 1447                             		.balign 4
 1450                             	_CompChkState.9375:
 1451 0000 00 00 00 00             		.zero	4
 1452                             		.section	.bss.PartialChecksum.9370,"aw",@nobits
 1453                             		.balign 2
 1456                             	_PartialChecksum.9370:
 1457 0000 00 00                   		.zero	2
 1458                             		.section	.bss.pData.9376,"aw",@nobits
 1459                             		.balign 4
 1462                             	_pData.9376:
 1463 0000 00 00 00 00             		.zero	4
 1464                             		.section	.rodata.CSWTCH.40,"a",@progbits
 1467                             	_CSWTCH.40:
 1468 0000 06                      		.byte	6
 1469 0001 07                      		.byte	7
 1828                             	.Letext0:
 1829                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 1830                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\RN_RX200/RN_RX200_cfg.h"
 1831                             		.file 4 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_Library/LIB_Utilities.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LIB_UTilities.c
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:7      .text.Endian16_Swap:00000000 _Endian16_Swap
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:13     .text.Endian16_Swap:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:26     .text.LIB_MemcpyFromLast:00000000 _LIB_MemcpyFromLast
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:30     .text.LIB_MemcpyFromLast:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:62     .text.LIB_ComputeSettingFileCheckSum:00000000 _LIB_ComputeSettingFileCheckSum
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:67     .text.LIB_ComputeSettingFileCheckSum:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1450   .bss.CompChkState.9375:00000000 _CompChkState.9375
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1456   .bss.PartialChecksum.9370:00000000 _PartialChecksum.9370
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1462   .bss.pData.9376:00000000 _pData.9376
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:168    .text.LIB_SettingFileChecksumCalculate:00000000 _LIB_SettingFileChecksumCalculate
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:173    .text.LIB_SettingFileChecksumCalculate:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:206    .text.LIB_ConvTwoByteInWord:00000000 _LIB_ConvTwoByteInWord
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:211    .text.LIB_ConvTwoByteInWord:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:223    .text.LIB_SwapWord:00000000 _LIB_SwapWord
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:228    .text.LIB_SwapWord:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:241    .text.GetDefaultSettingStartAddress:00000000 _GetDefaultSettingStartAddress
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:245    .text.GetDefaultSettingStartAddress:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:252    .text.SFBasicLoader:00000000 _SFBasicLoader
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:256    .text.SFBasicLoader:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:383    .text.SFBasicLoaderGetPage:00000000 _SFBasicLoaderGetPage
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:388    .text.SFBasicLoaderGetPage:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:453    .text.SFBasicLoaderGetDisplOffset:00000000 _SFBasicLoaderGetDisplOffset
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:458    .text.SFBasicLoaderGetDisplOffset:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:478    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000000 _LIB_SEF_GetBEWrdRelShort_Ptr
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:483    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:522    .text.LIB_SEF_GetMsettingStartAddr:00000000 _LIB_SEF_GetMsettingStartAddr
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:526    .text.LIB_SEF_GetMsettingStartAddr:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:587    .text.LIB_SEF_GetMaxMsettings:00000000 _LIB_SEF_GetMaxMsettings
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:591    .text.LIB_SEF_GetMaxMsettings:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:629    .text.LIB_SEF_IsExtdDisplPtr:00000000 _LIB_SEF_IsExtdDisplPtr
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:633    .text.LIB_SEF_IsExtdDisplPtr:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:661    .text.LIB_SEF_GetDisplData:00000000 _LIB_SEF_GetDisplData
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:666    .text.LIB_SEF_GetDisplData:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:847    .text.BasicLoader:00000000 _BasicLoader
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:850    .text.BasicLoader:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:881    .text.MSettingBasicLoader:00000000 _MSettingBasicLoader
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:884    .text.MSettingBasicLoader:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:916    .text.LIB_CAL_GetCalibData:00000000 _LIB_CAL_GetCalibData
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:920    .text.LIB_CAL_GetCalibData:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1467   .rodata.CSWTCH.40:00000000 _CSWTCH.40
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1015   .text.LIB_ChkComputation:00000000 _LIB_ChkComputation
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1020   .text.LIB_ChkComputation:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1050   .text.SFBasicLoaderPointer:00000000 _SFBasicLoaderPointer
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1054   .text.SFBasicLoaderPointer:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1174   .text.SFGetDisplacementNumber:00000000 _SFGetDisplacementNumber
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1179   .text.SFGetDisplacementNumber:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1251   .text.LIB_SEF_GetFaultPriority:00000000 _LIB_SEF_GetFaultPriority
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1255   .text.LIB_SEF_GetFaultPriority:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1380   .text.LIB_SEF_FaultPriorityField:00000000 _LIB_SEF_FaultPriorityField
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1385   .text.LIB_SEF_FaultPriorityField:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1393   .text.LIB_SEF_IsFaultToDisplayON:00000000 _LIB_SEF_IsFaultToDisplayON
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1398   .text.LIB_SEF_IsFaultToDisplayON:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1408   .text.LIB_SEF_GetFaultToDisplay:00000000 _LIB_SEF_GetFaultToDisplay
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1412   .text.LIB_SEF_GetFaultToDisplay:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1471   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:8      .text.Endian16_Swap:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:27     .text.LIB_MemcpyFromLast:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:63     .text.LIB_ComputeSettingFileCheckSum:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:169    .text.LIB_SettingFileChecksumCalculate:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:207    .text.LIB_ConvTwoByteInWord:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:224    .text.LIB_SwapWord:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:242    .text.GetDefaultSettingStartAddress:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:253    .text.SFBasicLoader:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:384    .text.SFBasicLoaderGetPage:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:454    .text.SFBasicLoaderGetDisplOffset:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:479    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:523    .text.LIB_SEF_GetMsettingStartAddr:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:588    .text.LIB_SEF_GetMaxMsettings:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:630    .text.LIB_SEF_IsExtdDisplPtr:00000000 .LFB14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:662    .text.LIB_SEF_GetDisplData:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:848    .text.BasicLoader:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:882    .text.MSettingBasicLoader:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:917    .text.LIB_CAL_GetCalibData:00000000 .LFB17
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1016   .text.LIB_ChkComputation:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1051   .text.SFBasicLoaderPointer:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1175   .text.SFGetDisplacementNumber:00000000 .LFB20
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1252   .text.LIB_SEF_GetFaultPriority:00000000 .LFB21
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1381   .text.LIB_SEF_FaultPriorityField:00000000 .LFB22
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1394   .text.LIB_SEF_IsFaultToDisplayON:00000000 .LFB23
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1409   .text.LIB_SEF_GetFaultToDisplay:00000000 .LFB24
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:3369   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5979   .debug_str:000001ea .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5987   .debug_str:00000232 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5833   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5903   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6069   .debug_str:000004a6 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5967   .debug_str:000001a8 .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6009   .debug_str:00000310 .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6081   .debug_str:000004f3 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6001   .debug_str:000002d6 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5957   .debug_str:00000140 .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5927   .debug_str:00000082 .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5947   .debug_str:00000101 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6131   .debug_str:0000066c .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6061   .debug_str:00000463 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5949   .debug_str:0000010f .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5953   .debug_str:00000129 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5991   .debug_str:0000029e .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5945   .debug_str:000000fa .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6133   .debug_str:00000674 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6027   .debug_str:0000038c .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6139   .debug_str:00000695 .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6029   .debug_str:00000397 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6091   .debug_str:0000051f .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6045   .debug_str:000003ea .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6137   .debug_str:00000682 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5905   .debug_str:00000000 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6107   .debug_str:0000059b .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6043   .debug_str:000003da .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6125   .debug_str:00000631 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5971   .debug_str:000001bf .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6157   .debug_str:0000072d .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5989   .debug_str:00000283 .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5941   .debug_str:000000cf .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5965   .debug_str:0000018f .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6129   .debug_str:00000654 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6013   .debug_str:0000032b .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5943   .debug_str:000000e8 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6093   .debug_str:00000524 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6109   .debug_str:000005a4 .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6151   .debug_str:000006fd .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5963   .debug_str:00000174 .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6149   .debug_str:000006f3 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6099   .debug_str:0000055e .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:21     .text.Endian16_Swap:0000000c .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5983   .debug_str:00000219 .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4066   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5925   .debug_str:0000006f .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:57     .text.LIB_MemcpyFromLast:0000001c .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4080   .debug_loc:00000021 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6075   .debug_str:000004c8 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4093   .debug_loc:00000041 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5993   .debug_str:000002ab .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4107   .debug_loc:00000062 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4121   .debug_loc:00000083 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4132   .debug_loc:000000a1 .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4158   .debug_loc:000000ce .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6105   .debug_str:0000057c .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:163    .text.LIB_ComputeSettingFileCheckSum:00000096 .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6039   .debug_str:000003ca .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4184   .debug_loc:000000fb .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4220   .debug_loc:0000014e .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6051   .debug_str:00000425 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4234   .debug_loc:0000016f .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4287   .debug_loc:000001cc .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5955   .debug_str:00000130 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6111   .debug_str:000005b2 .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5951   .debug_str:0000011b .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6023   .debug_str:0000036a .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6119   .debug_str:00000605 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5919   .debug_str:00000045 .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5975   .debug_str:000001cc .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6147   .debug_str:000006d2 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:201    .text.LIB_SettingFileChecksumCalculate:00000020 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4303   .debug_loc:000001f6 .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5921   .debug_str:00000052 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4317   .debug_loc:00000217 .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5907   .debug_str:00000008 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4338   .debug_loc:0000024d .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4353   .debug_loc:00000276 .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5961   .debug_str:0000015e .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:218    .text.LIB_ConvTwoByteInWord:00000009 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6103   .debug_str:00000577 .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4361   .debug_loc:0000028a .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6047   .debug_str:000003fb .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:236    .text.LIB_SwapWord:0000000c .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6007   .debug_str:0000030b .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4375   .debug_loc:000002ab .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6077   .debug_str:000004cd .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4389   .debug_loc:000002cc .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:247    .text.GetDefaultSettingStartAddress:00000007 .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5969   .debug_str:000001b1 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:378    .text.SFBasicLoader:000000a3 .LFE7
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4441   .debug_loc:00000317 .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6071   .debug_str:000004b0 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5935   .debug_str:000000b7 .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6065   .debug_str:0000048d .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5929   .debug_str:00000099 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5939   .debug_str:000000c6 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6153   .debug_str:0000071b .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6087   .debug_str:0000050e .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5933   .debug_str:000000aa .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5973   .debug_str:000001c5 .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6117   .debug_str:000005f2 .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5959   .debug_str:00000149 .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:448    .text.SFBasicLoaderGetPage:0000003b .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4464   .debug_loc:0000034f .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6055   .debug_str:0000043b .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4500   .debug_loc:000003a2 .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4507   .debug_loc:000003b5 .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4525   .debug_loc:000003e1 .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4547   .debug_loc:00000418 .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6063   .debug_str:00000471 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:473    .text.SFBasicLoaderGetDisplOffset:00000017 .LFE9
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6141   .debug_str:000006a3 .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4554   .debug_loc:0000042b .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6049   .debug_str:00000408 .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:517    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000029 .LFE11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6017   .debug_str:0000034b .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4568   .debug_loc:0000044c .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4593   .debug_loc:00000486 .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6085   .debug_str:00000506 .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4607   .debug_loc:000004a7 .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:489    .text.LIB_SEF_GetBEWrdRelShort_Ptr:0000000d .LBB11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:514    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000028 .LBE11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4628   .debug_loc:000004dd .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6079   .debug_str:000004d6 .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:582    .text.LIB_SEF_GetMsettingStartAddr:00000049 .LFE12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4640   .debug_loc:000004fc .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6019   .debug_str:0000035a .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4653   .debug_loc:0000051c .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4677   .debug_loc:00000555 .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6005   .debug_str:00000303 .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4688   .debug_loc:00000573 .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6127   .debug_str:00000649 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4695   .debug_loc:00000586 .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5917   .debug_str:0000003d .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4706   .debug_loc:000005a4 .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:543    .text.LIB_SEF_GetMsettingStartAddr:00000019 .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5977   .debug_str:000001d2 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:624    .text.LIB_SEF_GetMaxMsettings:0000002d .LFE13
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4718   .debug_loc:000005c3 .LLST35
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6037   .debug_str:000003c3 .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4729   .debug_loc:000005e1 .LLST36
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:604    .text.LIB_SEF_GetMaxMsettings:0000001a .LBB12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:615    .text.LIB_SEF_GetMaxMsettings:00000027 .LBE12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:594    .text.LIB_SEF_GetMaxMsettings:0000000c .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6115   .debug_str:000005db .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:656    .text.LIB_SEF_IsExtdDisplPtr:00000018 .LFE14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4750   .debug_loc:00000617 .LLST37
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4763   .debug_loc:00000637 .LLST38
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4777   .debug_loc:00000658 .LLST39
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4791   .debug_loc:00000679 .LLST40
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4803   .debug_loc:00000698 .LLST41
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:639    .text.LIB_SEF_IsExtdDisplPtr:00000008 .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:643    .text.LIB_SEF_IsExtdDisplPtr:0000000e .LVL77
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6059   .debug_str:0000044e .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:842    .text.LIB_SEF_GetDisplData:000000cb .LFE15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6031   .debug_str:000003a0 .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4810   .debug_loc:000006ab .LLST42
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4839   .debug_loc:000006f0 .LLST43
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6015   .debug_str:00000340 .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4859   .debug_loc:0000071e .LLST44
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6135   .debug_str:00000679 .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4966   .debug_loc:000007d4 .LLST45
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6121   .debug_str:00000612 .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:4999   .debug_loc:00000824 .LLST46
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5032   .debug_loc:00000875 .LLST47
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5053   .debug_loc:000008ab .LLST48
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5072   .debug_loc:000008df .LLST49
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5091   .debug_loc:00000913 .LLST50
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6155   .debug_str:00000721 .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:876    .text.BasicLoader:0000002c .LFE10
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5098   .debug_loc:00000926 .LLST51
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5999   .debug_str:000002c2 .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:911    .text.MSettingBasicLoader:0000002a .LFE16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5116   .debug_loc:00000952 .LLST52
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6057   .debug_str:00000444 .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6067   .debug_str:0000049a .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6025   .debug_str:00000377 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1010   .text.LIB_CAL_GetCalibData:00000065 .LFE17
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5134   .debug_loc:0000097e .LLST53
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6083   .debug_str:000004fc .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5147   .debug_loc:0000099e .LLST54
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5174   .debug_loc:000009dd .LLST55
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5193   .debug_loc:00000a11 .LLST56
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6021   .debug_str:00000362 .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5215   .debug_loc:00000a48 .LLST57
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:950    .text.LIB_CAL_GetCalibData:0000002a .LBB16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1006   .text.LIB_CAL_GetCalibData:00000060 .LBE16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5228   .debug_loc:00000a68 .LLST58
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6073   .debug_str:000004bf .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5240   .debug_loc:00000a87 .LLST59
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5262   .debug_loc:00000abe .LLST60
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:944    .text.LIB_CAL_GetCalibData:00000024 .LVL116
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5985   .debug_str:0000021f .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1045   .text.LIB_ChkComputation:00000018 .LFE18
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5278   .debug_loc:00000ae8 .LLST61
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6089   .debug_str:00000519 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5997   .debug_str:000002bd .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5292   .debug_loc:00000b09 .LLST62
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5915   .debug_str:00000036 .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5306   .debug_loc:00000b2a .LLST63
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5327   .debug_loc:00000b60 .LLST64
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5923   .debug_str:0000005a .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1169   .text.SFBasicLoaderPointer:00000095 .LFE19
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5335   .debug_loc:00000b74 .LLST65
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6145   .debug_str:000006c5 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6143   .debug_str:000006ad .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1246   .text.SFGetDisplacementNumber:00000041 .LFE20
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5358   .debug_loc:00000bac .LLST66
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6041   .debug_str:000003d0 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5409   .debug_loc:00000c0e .LLST67
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5416   .debug_loc:00000c21 .LLST68
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5429   .debug_loc:00000c41 .LLST69
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6113   .debug_str:000005c2 .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1375   .text.LIB_SEF_GetFaultPriority:00000071 .LFE21
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5450   .debug_loc:00000c77 .LLST70
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5995   .debug_str:000002b0 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5468   .debug_loc:00000ca3 .LLST71
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6011   .debug_str:00000323 .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5482   .debug_loc:00000cc4 .LLST72
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6053   .debug_str:00000430 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5508   .debug_loc:00000d06 .LLST73
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5931   .debug_str:000000a2 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5530   .debug_loc:00000d3d .LLST74
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6097   .debug_str:00000556 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5541   .debug_loc:00000d5b .LLST75
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5981   .debug_str:00000210 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5563   .debug_loc:00000d92 .LLST76
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5911   .debug_str:00000023 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5570   .debug_loc:00000da5 .LLST77
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6101   .debug_str:0000056c .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1290   .text.LIB_SEF_GetFaultPriority:00000023 .LBB17
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1365   .text.LIB_SEF_GetFaultPriority:0000006a .LBE17
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5913   .debug_str:0000002d .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5577   .debug_loc:00000db8 .LLST78
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5609   .debug_loc:00000df4 .LLST79
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5909   .debug_str:00000018 .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5617   .debug_loc:00000e08 .LLST80
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6035   .debug_str:000003b5 .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5635   .debug_loc:00000e34 .LLST81
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1285   .text.LIB_SEF_GetFaultPriority:0000001d .LVL155
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6003   .debug_str:000002e8 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1388   .text.LIB_SEF_FaultPriorityField:00000004 .LFE22
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5651   .debug_loc:00000e5e .LLST82
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1403   .text.LIB_SEF_IsFaultToDisplayON:00000005 .LFE23
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5665   .debug_loc:00000e7f .LLST83
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6095   .debug_str:0000053c .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1444   .text.LIB_SEF_GetFaultToDisplay:0000001a .LFE24
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5679   .debug_loc:00000ea0 .LLST84
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5692   .debug_loc:00000ec0 .LLST85
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5706   .debug_loc:00000ee1 .LLST86
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5720   .debug_loc:00000f02 .LLST87
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5937   .debug_str:000000bf .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5734   .debug_loc:00000f23 .LLST88
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5751   .debug_loc:00000f4e .LLST89
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1425   .text.LIB_SEF_GetFaultToDisplay:00000010 .LBB21
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1436   .text.LIB_SEF_GetFaultToDisplay:00000015 .LBE21
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:5764   .debug_loc:00000f6e .LLST90
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1421   .text.LIB_SEF_GetFaultToDisplay:0000000b .LVL177
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6033   .debug_str:000003ae .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:6123   .debug_str:00000628 .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:11     .text.Endian16_Swap:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:16     .text.Endian16_Swap:00000007 .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:31     .text.LIB_MemcpyFromLast:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:29     .text.LIB_MemcpyFromLast:00000000 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:39     .text.LIB_MemcpyFromLast:00000008 .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:37     .text.LIB_MemcpyFromLast:00000006 .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:51     .text.LIB_MemcpyFromLast:00000012 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:34     .text.LIB_MemcpyFromLast:00000004 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:42     .text.LIB_MemcpyFromLast:00000009 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:65     .text.LIB_ComputeSettingFileCheckSum:00000000 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:94     .text.LIB_ComputeSettingFileCheckSum:00000040 .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:134    .text.LIB_ComputeSettingFileCheckSum:0000007f .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:144    .text.LIB_ComputeSettingFileCheckSum:0000008c .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:147    .text.LIB_ComputeSettingFileCheckSum:0000008d .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:151    .text.LIB_ComputeSettingFileCheckSum:00000090 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:161    .text.LIB_ComputeSettingFileCheckSum:00000095 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:139    .text.LIB_ComputeSettingFileCheckSum:00000087 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:156    .text.LIB_ComputeSettingFileCheckSum:00000092 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:87     .text.LIB_ComputeSettingFileCheckSum:00000028 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:97     .text.LIB_ComputeSettingFileCheckSum:00000042 .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:119    .text.LIB_ComputeSettingFileCheckSum:0000005c .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:127    .text.LIB_ComputeSettingFileCheckSum:0000006b .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:171    .text.LIB_SettingFileChecksumCalculate:00000000 .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:199    .text.LIB_SettingFileChecksumCalculate:0000001f .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:176    .text.LIB_SettingFileChecksumCalculate:00000006 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:180    .text.LIB_SettingFileChecksumCalculate:00000009 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:189    .text.LIB_SettingFileChecksumCalculate:00000015 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:182    .text.LIB_SettingFileChecksumCalculate:0000000c .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:187    .text.LIB_SettingFileChecksumCalculate:00000013 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:209    .text.LIB_ConvTwoByteInWord:00000000 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:214    .text.LIB_ConvTwoByteInWord:00000006 .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:226    .text.LIB_SwapWord:00000000 .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:231    .text.LIB_SwapWord:00000007 .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:261    .text.SFBasicLoader:0000000a .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:351    .text.SFBasicLoader:0000008d .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:358    .text.SFBasicLoader:00000092 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:386    .text.SFBasicLoaderGetPage:00000000 .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:430    .text.SFBasicLoaderGetPage:00000032 .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:432    .text.SFBasicLoaderGetPage:00000033 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:436    .text.SFBasicLoaderGetPage:00000035 .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:438    .text.SFBasicLoaderGetPage:00000036 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:442    .text.SFBasicLoaderGetPage:00000038 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:406    .text.SFBasicLoaderGetPage:0000001a .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:391    .text.SFBasicLoaderGetPage:00000007 .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:394    .text.SFBasicLoaderGetPage:00000009 .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:404    .text.SFBasicLoaderGetPage:00000018 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:456    .text.SFBasicLoaderGetDisplOffset:00000000 .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:461    .text.SFBasicLoaderGetDisplOffset:00000006 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:481    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000000 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:506    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000025 .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:508    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000026 .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:512    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000028 .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:492    .text.LIB_SEF_GetBEWrdRelShort_Ptr:0000000f .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:495    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000013 .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:504    .text.LIB_SEF_GetBEWrdRelShort_Ptr:00000023 .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:527    .text.LIB_SEF_GetMsettingStartAddr:00000002 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:525    .text.LIB_SEF_GetMsettingStartAddr:00000000 .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:536    .text.LIB_SEF_GetMsettingStartAddr:0000000f .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:562    .text.LIB_SEF_GetMsettingStartAddr:00000034 .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:564    .text.LIB_SEF_GetMsettingStartAddr:00000036 .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:571    .text.LIB_SEF_GetMsettingStartAddr:00000042 .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:573    .text.LIB_SEF_GetMsettingStartAddr:00000043 .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:577    .text.LIB_SEF_GetMsettingStartAddr:00000045 .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:531    .text.LIB_SEF_GetMsettingStartAddr:0000000b .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:556    .text.LIB_SEF_GetMsettingStartAddr:0000002e .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:566    .text.LIB_SEF_GetMsettingStartAddr:00000038 .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:546    .text.LIB_SEF_GetMsettingStartAddr:0000001b .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:559    .text.LIB_SEF_GetMsettingStartAddr:00000032 .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:608    .text.LIB_SEF_GetMaxMsettings:00000022 .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:613    .text.LIB_SEF_GetMaxMsettings:00000027 .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:618    .text.LIB_SEF_GetMaxMsettings:00000029 .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:597    .text.LIB_SEF_GetMaxMsettings:0000000e .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:611    .text.LIB_SEF_GetMaxMsettings:00000026 .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:634    .text.LIB_SEF_IsExtdDisplPtr:00000002 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:632    .text.LIB_SEF_IsExtdDisplPtr:00000000 .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:635    .text.LIB_SEF_IsExtdDisplPtr:00000002 .LVL75
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:651    .text.LIB_SEF_IsExtdDisplPtr:00000015 .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:649    .text.LIB_SEF_IsExtdDisplPtr:00000013 .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:664    .text.LIB_SEF_GetDisplData:00000000 .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:749    .text.LIB_SEF_GetDisplData:0000005c .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:791    .text.LIB_SEF_GetDisplData:00000090 .LVL103
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:808    .text.LIB_SEF_GetDisplData:000000aa .LVL105
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:825    .text.LIB_SEF_GetDisplData:000000bf .LVL107
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:829    .text.LIB_SEF_GetDisplData:000000c2 .LVL108
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:831    .text.LIB_SEF_GetDisplData:000000c3 .LVL109
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:756    .text.LIB_SEF_GetDisplData:00000066 .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:759    .text.LIB_SEF_GetDisplData:0000006a .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:669    .text.LIB_SEF_GetDisplData:00000006 .LVL81
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:715    .text.LIB_SEF_GetDisplData:0000003c .LVL90
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:732    .text.LIB_SEF_GetDisplData:0000004d .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:738    .text.LIB_SEF_GetDisplData:00000051 .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:768    .text.LIB_SEF_GetDisplData:0000007a .LVL100
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:672    .text.LIB_SEF_GetDisplData:00000008 .LVL82
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:682    .text.LIB_SEF_GetDisplData:00000016 .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:691    .text.LIB_SEF_GetDisplData:0000001e .LVL86
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:736    .text.LIB_SEF_GetDisplData:0000004f .LVL94
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:713    .text.LIB_SEF_GetDisplData:0000003a .LVL89
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:704    .text.LIB_SEF_GetDisplData:00000032 .LVL87
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:813    .text.LIB_SEF_GetDisplData:000000ae .LVL106
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:676    .text.LIB_SEF_GetDisplData:0000000e .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:686    .text.LIB_SEF_GetDisplData:00000018 .LVL85
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:711    .text.LIB_SEF_GetDisplData:00000038 .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:747    .text.LIB_SEF_GetDisplData:0000005a .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:801    .text.LIB_SEF_GetDisplData:0000009e .LVL104
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:851    .text.BasicLoader:00000002 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:853    .text.BasicLoader:00000004 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:885    .text.MSettingBasicLoader:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:887    .text.MSettingBasicLoader:00000004 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:921    .text.LIB_CAL_GetCalibData:00000002 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:919    .text.LIB_CAL_GetCalibData:00000000 .LVL110
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:928    .text.LIB_CAL_GetCalibData:00000010 .LVL112
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:932    .text.LIB_CAL_GetCalibData:00000013 .LVL114
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:936    .text.LIB_CAL_GetCalibData:00000016 .LVL115
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:930    .text.LIB_CAL_GetCalibData:00000012 .LVL113
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:923    .text.LIB_CAL_GetCalibData:00000004 .LVL111
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1000   .text.LIB_CAL_GetCalibData:0000005e .LVL126
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1003   .text.LIB_CAL_GetCalibData:00000060 .LVL127
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:953    .text.LIB_CAL_GetCalibData:0000002c .LVL118
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:956    .text.LIB_CAL_GetCalibData:0000002e .LVL119
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:965    .text.LIB_CAL_GetCalibData:0000003a .LVL120
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:968    .text.LIB_CAL_GetCalibData:0000003e .LVL121
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:949    .text.LIB_CAL_GetCalibData:0000002a .LVL117
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:987    .text.LIB_CAL_GetCalibData:00000050 .LVL123
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:994    .text.LIB_CAL_GetCalibData:00000059 .LVL125
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:991    .text.LIB_CAL_GetCalibData:00000056 .LVL124
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1018   .text.LIB_ChkComputation:00000000 .LVL128
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1043   .text.LIB_ChkComputation:00000017 .LVL133
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1027   .text.LIB_ChkComputation:00000007 .LVL130
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1031   .text.LIB_ChkComputation:0000000a .LVL131
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1033   .text.LIB_ChkComputation:0000000c .LVL132
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1021   .text.LIB_ChkComputation:00000002 .LVL129
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1065   .text.SFBasicLoaderPointer:00000014 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1140   .text.SFBasicLoaderPointer:0000007d .LCFI12
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1153   .text.SFBasicLoaderPointer:00000087 .LCFI13
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1177   .text.SFGetDisplacementNumber:00000000 .LVL134
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1193   .text.SFGetDisplacementNumber:00000012 .LVL137
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1203   .text.SFGetDisplacementNumber:0000001d .LVL140
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1230   .text.SFGetDisplacementNumber:00000039 .LVL143
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1234   .text.SFGetDisplacementNumber:0000003b .LVL144
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1236   .text.SFGetDisplacementNumber:0000003c .LVL145
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1240   .text.SFGetDisplacementNumber:0000003e .LVL146
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1199   .text.SFGetDisplacementNumber:00000019 .LVL139
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1207   .text.SFGetDisplacementNumber:00000022 .LVL141
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1183   .text.SFGetDisplacementNumber:00000006 .LVL135
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1191   .text.SFGetDisplacementNumber:00000010 .LVL136
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1196   .text.SFGetDisplacementNumber:00000014 .LVL138
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1256   .text.LIB_SEF_GetFaultPriority:00000002 .LCFI14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1258   .text.LIB_SEF_GetFaultPriority:00000004 .LCFI15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1254   .text.LIB_SEF_GetFaultPriority:00000000 .LVL147
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1279   .text.LIB_SEF_GetFaultPriority:00000015 .LVL152
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1268   .text.LIB_SEF_GetFaultPriority:0000000f .LVL149
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1270   .text.LIB_SEF_GetFaultPriority:00000010 .LVL150
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1274   .text.LIB_SEF_GetFaultPriority:00000012 .LVL151
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1362   .text.LIB_SEF_GetFaultPriority:0000006a .LVL167
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1283   .text.LIB_SEF_GetFaultPriority:00000019 .LVL154
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1311   .text.LIB_SEF_GetFaultPriority:00000039 .LVL157
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1262   .text.LIB_SEF_GetFaultPriority:0000000a .LVL148
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1339   .text.LIB_SEF_GetFaultPriority:00000057 .LVL163
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1344   .text.LIB_SEF_GetFaultPriority:0000005b .LVL164
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1368   .text.LIB_SEF_GetFaultPriority:0000006c .LVL168
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1373   .text.LIB_SEF_GetFaultPriority:0000006e .LVL169
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1281   .text.LIB_SEF_GetFaultPriority:00000017 .LVL153
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1295   .text.LIB_SEF_GetFaultPriority:0000002c .LVL156
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1334   .text.LIB_SEF_GetFaultPriority:0000004e .LVL162
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1319   .text.LIB_SEF_GetFaultPriority:0000003e .LVL159
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1322   .text.LIB_SEF_GetFaultPriority:00000040 .LVL160
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1354   .text.LIB_SEF_GetFaultPriority:00000064 .LVL166
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1316   .text.LIB_SEF_GetFaultPriority:0000003b .LVL158
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1327   .text.LIB_SEF_GetFaultPriority:00000046 .LVL161
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1349   .text.LIB_SEF_GetFaultPriority:00000060 .LVL165
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1383   .text.LIB_SEF_FaultPriorityField:00000000 .LVL170
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1386   .text.LIB_SEF_FaultPriorityField:00000003 .LVL171
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1396   .text.LIB_SEF_IsFaultToDisplayON:00000000 .LVL172
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1401   .text.LIB_SEF_IsFaultToDisplayON:00000004 .LVL173
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1413   .text.LIB_SEF_GetFaultToDisplay:00000002 .LCFI16
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1411   .text.LIB_SEF_GetFaultToDisplay:00000000 .LVL174
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1414   .text.LIB_SEF_GetFaultToDisplay:00000002 .LVL175
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1431   .text.LIB_SEF_GetFaultToDisplay:00000014 .LVL180
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1433   .text.LIB_SEF_GetFaultToDisplay:00000015 .LVL181
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1439   .text.LIB_SEF_GetFaultToDisplay:00000017 .LVL182
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1417   .text.LIB_SEF_GetFaultToDisplay:00000005 .LVL176
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1429   .text.LIB_SEF_GetFaultToDisplay:00000012 .LVL179
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1424   .text.LIB_SEF_GetFaultToDisplay:00000010 .LVL178
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1833   .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:708    .text.LIB_SEF_GetDisplData:00000036 .LBB13
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:717    .text.LIB_SEF_GetDisplData:0000003c .LBE13
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:770    .text.LIB_SEF_GetDisplData:0000007a .LBB14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:817    .text.LIB_SEF_GetDisplData:000000b4 .LBE14
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:833    .text.LIB_SEF_GetDisplData:000000c3 .LBB15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:838    .text.LIB_SEF_GetDisplData:000000c6 .LBE15
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1296   .text.LIB_SEF_GetFaultPriority:0000002c .LBB18
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1301   .text.LIB_SEF_GetFaultPriority:00000031 .LBE18
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1304   .text.LIB_SEF_GetFaultPriority:00000033 .LBB19
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1308   .text.LIB_SEF_GetFaultPriority:00000037 .LBE19
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1313   .text.LIB_SEF_GetFaultPriority:00000039 .LBB20
C:\Users\Andrea\AppData\Local\Temp\ccnQxW6e.s:1357   .text.LIB_SEF_GetFaultPriority:00000064 .LBE20

UNDEFINED SYMBOLS
_Eeprom
_WBOXData
