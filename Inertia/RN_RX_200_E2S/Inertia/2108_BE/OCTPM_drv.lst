   1                             		.file	"OCTPM_drv.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.OCPWD_GetIntervalInTicks,"ax",@progbits
   6                             	_OCPWD_GetIntervalInTicks:
   7                             	.LFB54:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM/OCTPM_drv.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Copyright (c) 2004-2005, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
   7:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n
   8:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par		OCTPM_drv.c
   9:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n			Implementation of all functions necessary to achieve the aim.
  10:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n
  11:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \file		OCTPM_drv.c
  12:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \ingroup	OCTPM
  13:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \date		Oct 22, 2010
  14:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \version	01.00.00
  15:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \author		Jaroslav Musil,Stefano Ughi
  16:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n
  17:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n
  18:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par	History:
  19:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n
  20:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n 		01.00.03
  21:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Apr 4, 2011
  22:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Stefano Ughi
  23:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - added IO_ErrorType OCTPM_GetChannelSync(const IO_ModuleIOMapType *const pIOMap,uint8_t *p
  24:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      Roberto Fioravanti
  25:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - added ICU_GetModeSync(IO_ChannelType channel, ICU_EdgeModeType *pMode)
  26:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - added IO_ErrorType ICU_ToggleModeSync(IO_ChannelType channel)
  27:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n 		01.00.02
  28:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Mar 28, 2011
  29:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Stefano Ughi
  30:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - changed EnterCritical() with EnterCriticalSection()
  31:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - changed ExitCritical() with ExitCriticalSection()
  32:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n 		01.00.01
  33:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Dec 12, 2010
  34:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Stefano Ughi
  35:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - functions review plus linting
  36:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - added IO_HwTimerType OCHWCNTR_GetTicksSync(IO_ChannelType channel)
  37:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - added Period_ValueType OCHWCNTR_GetTimerModulus(IO_ChannelType channel)
  38:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n 		01.00.00
  39:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Oct 22, 2010
  40:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n		Jaroslav Musil
  41:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n      - creation on base of Stefano Ughi's specifications
  42:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
  43:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #define MODULE_BODY_OCTPM
  44:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ******** */
  45:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Includes */
  46:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ******** */
  47:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #include "OCTPM_drv.h"
  48:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #include "OCDIO_drv.h"
  49:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #include "LIB_ClassBVar.h"
  50:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #include "LIB_Trace.h"
  51:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #include "LIB_Error.h"
  52:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #include "LIB_TaskMonitoring.h"
  53:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  54:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ****************** */
  55:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Defines and Macros */
  56:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ****************** */
  57:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  58:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** OCTPM_PWD_TIMING_DEBUG can be defined to enable debugging information */
  59:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  60:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Capture Event (State Machine) */
  61:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #define PWD_FIRST_CAPT_EVENT    0
  62:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #define PWD_SECOND_CAPT_EVENT   1
  63:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #define PWD_THIRD_CAPT_EVENT    2
  64:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  65:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* *************************** */
  66:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Typedef, Structs and Unions */
  67:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* *************************** */
  68:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  69:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ********* */
  70:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Variables */
  71:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ********* */
  72:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  73:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Global */
  74:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  75:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Extern */
  76:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** extern const TMR_MapType 	TmrChToPinMap[NUM_HW_CNTR_CH];
  77:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** extern const HAL_TimerId_t	TmrCntMap[NUM_HW_CNTR];
  78:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** extern const TMR_ChMapType	TmrChMap[NUM_HW_CNTR_CH];
  79:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  80:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Static */
  81:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** Array of pointers to hardware counters config.*/
  82:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static const IO_HwCntrCfgType *pHwCntrCfgTable[NUM_HW_CNTR] = {(IO_HwCntrCfgType *)NULL};
  83:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** Stores Input Capture Channel Config. */
  84:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_ICU_CfgType TMR_IcuDefinition[NUM_HW_CNTR_CH];
  85:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** Stores Output Compare Channel Config. */
  86:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_OCU_CfgType TMR_OcuDefinition[NUM_HW_CNTR_CH];
  87:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** Stores the channel's Pwd Config.*/
  88:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_PWD_CfgType TMR_PwdDefinition[NUM_HW_CNTR_CH];
  89:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** typedef struct {
  90:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
  91:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_PWD_CfgType        TMR_Definition;	/** Stores the channel's Pwd Config.*/
  92:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t               TMR_Status;		/** Capture Event (State Machine) */
  93:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t               HwTmrTurns;		/** Hardware Counter Overflow */
  94:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** bool8_t               DecHwTmrTurns;	/** Flags, not used bitfield to be faster inside interrupt */
  95:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Comm_Notification     callback;		/** Stores the end PWD Event callbacks */
  96:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_HwTimerType        TMR_Start;		/** Stores the First Timer's Capture */
  97:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_HwTimerType        TMR_Filter;		/** Filter timer capture: minimum time accepted at each trigger 
  98:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_PWD_RawMeasureType Measurement;		/** Stores the PWD measures */
  99:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 100:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** } PWD_CtrlType;
 101:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 102:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** volatile PWD_CtrlType PWD_CtrlVar[NUM_HW_CNTR_CH];
 103:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 104:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static const IO_PWM_CfgType*          pPwmCfgTable[NUM_HW_CNTR_CH] = {(IO_PWM_CfgType *)NULL};
 105:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 106:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(OCTPM_PWD_TIMING_DEBUG)
 107:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 108:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t minTonCntr[NUM_HW_CNTR_CH];
 109:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t maxTonCntr[NUM_HW_CNTR_CH];
 110:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t minPeriodCntr[NUM_HW_CNTR_CH];
 111:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t maxPeriodCntr[NUM_HW_CNTR_CH];
 112:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_PWD_RawMeasureType PWD_DBG_MinMeasure[NUM_HW_CNTR_CH];
 113:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_PWD_RawMeasureType PWD_DBG_MaxMeasure[NUM_HW_CNTR_CH];
 114:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint32_t PWD_Timestamp[NUM_HW_CNTR_CH];
 115:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 116:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 117:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 118:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 119:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 120:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** ISR callback */
 121:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static Comm_Notification        TMR_Callback[NUM_HW_CNTR];
 122:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static Comm_Notification        TMR_CH_Callback[NUM_HW_CNTR_CH];
 123:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 124:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** Stores hw counter values
 125:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** first index hw counter ID, the same of TmrCntMap[] table.
 126:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** the second index is the value.
 127:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 128:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  volatile IO_HwTimerType TMR_CntTrigVal[NUM_HW_CNTR][NUM_HW_CNTR_COLLECTIONS];
 129:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 130:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 131:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** Structure defining that the timer channel is busy */
 132:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static TMR_ChResourceType TMR_ChResource = 0;
 133:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /** Structure defining that the timer channel is busy due to Pwd config. */
 134:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static TMR_ChResourceType TMR_PwdChResource = 0;
 135:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 136:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 137:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ******************* */
 138:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Functions Prototype */
 139:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* ******************* */
 140:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 141:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Local Function */
 142:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_ErrorType OCPWD_EdgeTime(IO_NotificationType notification, IO_ChannelType channel, IO_Err
 143:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_ErrorType OCPWD_HwTmrTurns(IO_NotificationType notification, IO_ChannelType channel, IO_E
 144:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static uint32_t OCPWD_GetIntervalInTicks(IO_ChannelType channel, IO_HwTimerType time);
 145:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* *************** */
 146:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Function Bodies */
 147:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* *************** */
 148:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 149:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /****************************************** Timer counter - begin *********************************
 150:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 151:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 152:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Driver global state initialization initialization.
 153:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  
 154:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \notes:			Call before using any other method
 155:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 156:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 157:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 158:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCTPM_InitSync(void)
 159:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 160:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 161:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     TMR_ChResource = 0;
 162:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
 163:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 164:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 165:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /* Exported function */
 166:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 167:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This function initialises the hardware counter driver. This functions marks the counter as busy.
 168:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The following parameters are set: prescaler, count direction and modulo.
 169:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 170:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	The pointer pHwCntrCfg specifies the init structure for the counter.
 171:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 172:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 173:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 174:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 175:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 176:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator \n
 177:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             or invalid channel as clearing resource.
 178:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_BUSY counter in use
 179:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval     IO_E_UNKNOWN_MODE Clearing Source unknown
 180:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 181:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 182:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note	    After Setting Up an Hardware Counter the function mark that Hardware Counter as busy.\n
 183:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             A new Initialization can be performed only after a OCHWCNTR_DeInitSync call.
 184:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 185:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 186:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 187:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCHWCNTR_InitSync(const IO_HwCntrCfgType *pHwCntrCfg)
 188:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 189:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType tmdId;
 190:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType  clrSrcChId;
 191:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 192:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if Hardware Counter ID is valid */
 193:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfg->hwCntrlId >= NUM_HW_CNTR  )
 194:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 195:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 196:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 197:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 198:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
 199:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmdId = TmrCntMap[pHwCntrCfg->hwCntrlId];
 200:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 201:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 202:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 203:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks if the timer module resource is busy */
 204:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[pHwCntrCfg->hwCntrlId] != NULL)
 205:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 206:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 207:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 208:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* the resource is busy, but it has been already initialized (eg. OS system timer )*/
 209:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(pHwCntrCfg->options.skipHWcntrConf)
 210:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
 211:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			return (IO_ErrorType)IO_E_OK;
 212:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 213:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 214:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_BUSY;
 215:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 216:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
 217:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check clearingSourceId */
 218:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_CheckClearSourceIdFailed(tmdId, pHwCntrCfg->clearingSourceId))
 219:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 220:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 221:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNKNOWN_MODE;
 222:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 223:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 224:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
 225:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #ifdef TMR_GetClearSourceCh
 226:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	clrSrcChId = TMR_GetClearSourceCh(tmdId, pHwCntrCfg->clearingSourceId);
 227:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if(clrSrcChId != NO_CHANNEL_ID)
 228:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 229:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		int i;
 230:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CHAddressType ch=NO_CHANNEL_ID;
 231:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* cerca la risorsa tra quelle configurabili*/
 232:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		for(i=0; i<NUM_HW_CNTR_CH ; i++){
 233:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( TmrChMap[i].Channel == clrSrcChId ){
 234:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ch = i ;
 235:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				break;	
 236:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}		
 237:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 238:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		clrSrcChId = ch;
 239:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 240:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #else
 241:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	clrSrcChId = pHwCntrCfg->clearingSourceId;
 242:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 243:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 244:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 245:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( clrSrcChId != NO_CHANNEL_ID ){
 246:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(TMR_ChResource & (1 << clrSrcChId)){
 247:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
 248:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			return (IO_ErrorType)IO_E_BUSY;
 249:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 250:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 251:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
 252:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 253:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 254:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_REGION_START();
 255:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Assigns the timer resource as busy filling pointer */
 256:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pHwCntrCfgTable[pHwCntrCfg->hwCntrlId] = pHwCntrCfg;
 257:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 258:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_UPDATE(pHwCntrCfgTable, pHwCntrCfg->hwCntrlId);
 259:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_REGION_END() ;
 260:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 261:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Assigns the timer clearing resource as busy  */
 262:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( clrSrcChId != NO_CHANNEL_ID){
 263:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ChResource |= (TMR_ChResourceType)(1<<clrSrcChId);		
 264:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 265:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
 266:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 267:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* If config. performed outside Eg. OS */
 268:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( pHwCntrCfg->options.skipHWcntrConf )
 269:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 270:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_OK;
 271:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 272:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 273:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Clock Gating */
 274:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_ClockGate(pHwCntrCfg->hwCntrlId, 1);
 275:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 276:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Sets the prescaler */
 277:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetPrescaler(tmdId, pHwCntrCfg->prescaler);
 278:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 279:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Sets counting direction */
 280:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetCountDir(tmdId, pHwCntrCfg->countingMode);
 281:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 282:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Sets the modulo period */
 283:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetModulo(tmdId, pHwCntrCfg->period, pHwCntrCfg->clearingSourceId);
 284:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
 285:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #ifdef TMR_GetTickResolution
 286:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* verifica che il tick resolution sia giusto */
 287:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( pHwCntrCfg->tickResolution != TMR_GetTickResolution(tmdId))
 288:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 289:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return IO_E_INVALID_VALUE;
 290:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 291:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif	
 292:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 293:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 294:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 295:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 296:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function deinitilizes the counter driver. Its setting is returned to its default values.
 297:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n If the counter is not in use, the function won't do anything.
 298:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 299:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 300:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 301:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 302:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 303:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 304:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 305:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 306:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \todo       deinit case clearing source id different from internal resource
 307:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 308:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCHWCNTR_DeInitSync(IO_ChannelType tmrId)
 309:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 310:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 311:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType halTmrId;
 312:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType  clrSrcChId;
 313:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
 314:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ASSERT(tmrId < NUM_HW_CNTR )
 315:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 316:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 317:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 318:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
 319:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[tmrId] != NULL)
 320:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 321:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 322:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 323:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* the timer pointer is assigned */
 324:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		halTmrId = TmrCntMap[tmrId];
 325:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 326:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* No input clock */
 327:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_StopClockSource(halTmrId);
 328:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 329:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Sets the prescaler to M.C.U. reset value */
 330:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetPrescalerDfltValue(halTmrId);
 331:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 332:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Sets counting direction to M.C.U. reset value */
 333:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetCountDirDfltValue(halTmrId);
 334:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 335:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Disable Overflow Interrupt */
 336:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DisableTI(halTmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 337:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clears interrupt flag */
 339:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClearTOF(halTmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 340:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 341:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Sets the modulo period to M.C.U. reset value */
 342:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetModuloDfltValue(halTmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 343:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 344:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Sets the Timer Counter to M.C.U. reset value */
 345:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetCounterDfltValue(halTmrId);
 346:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 347:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clock Gating */
 348:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClockGate((uint8_t)halTmrId,0);
 349:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #ifdef TMR_GetClearSourceCh
 350:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		clrSrcChId = TMR_GetClearSourceCh(tmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 351:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(clrSrcChId != NO_CHANNEL_ID)
 352:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
 353:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			int i;
 354:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_CHAddressType ch=NO_CHANNEL_ID;
 355:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* cerca la risorsa tra quelle configurabili*/
 356:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			for(i=0; i<NUM_HW_CNTR_CH ; i++){
 357:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				if( TmrChMap[i].Channel == clrSrcChId ){
 358:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					ch = i ;
 359:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					break;	
 360:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				}		
 361:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
 362:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			clrSrcChId = ch;
 363:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 364:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #else
 365:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		clrSrcChId = pHwCntrCfgTable[tmrId]->clearingSourceId;		
 366:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 367:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		
 368:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 369:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* clear resource channel */
 370:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(clrSrcChId != NO_CHANNEL_ID){
 371:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_ChResource &= ~(1u << clrSrcChId);
 372:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 373:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
 374:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Release the timer resource */
 375:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pHwCntrCfgTable[tmrId] = (IO_HwCntrCfgType *)NULL;
 376:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		
 377:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}else{
 378:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 379:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 380:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 381:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return; /* (IO_ErrorType)IO_E_OK; */
 382:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 383:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 384:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 385:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function returns the counter register value of the timer. This value is converted into nSec.
 386:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 387:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 388:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 389:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Correct tick resolution must be filled in the init structure
 390:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 391:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TimingValueType
 392:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 393:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		counter value
 394:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 395:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 396:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 397:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TimingValueType OCHWCNTR_GetSync(IO_ChannelType channel)
 398:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 399:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_cnt;
 400:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_TimingValueType time_nSec;
 401:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 402:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[channel];
 403:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	time_nSec = ((IO_TimingValueType)TMR_GetCounter(pTmr_cnt) * pHwCntrCfgTable[channel]->tickResoluti
 404:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return time_nSec;
 405:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 406:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 407:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function returns the counter register value of the timer. This value is in ticks.
 408:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 409:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 410:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 411:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TimingValueType
 412:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		counter value
 413:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 414:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 415:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 416:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_HwTimerType OCHWCNTR_GetTicksSync(IO_ChannelType timerId)
 417:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 418:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_cnt;
 419:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_HwTimerType timerValueInTicks;
 420:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 421:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[timerId];
 422:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerValueInTicks = TMR_GetCounter(pTmr_cnt);
 423:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return timerValueInTicks;
 424:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 425:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 426:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 427:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the counter value register of the timer. The input value is in nSec.
 428:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 429:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 430:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	timerValue - the counter value in nSec
 431:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 432:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Correct tick resolution must be filled in the init structure
 433:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 434:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 435:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 436:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 437:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 438:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
 439:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 440:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If tick resolution is 0, the application will crash by div by zero
 441:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 442:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \todo		not supported in HCS08 e AG128
 443:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 444:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 445:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 446:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCHWCNTR_SetSync(IO_ChannelType timerId, IO_TimingValueType timerValue)
 447:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 448:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 449:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_cnt;
 450:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 451:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (timerId >= NUM_HW_CNTR)
 452:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 453:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 454:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 455:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 456:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
 457:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[timerId] == NULL)
 458:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 459:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 460:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 461:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 462:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
 463:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[timerId];
 464:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 465:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetCounter(pTmr_cnt, (IO_HwTimerType)(timerValue / pHwCntrCfgTable[timerId]->tickResolution));
 466:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 467:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 468:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 469:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 470:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 471:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCHWCNTR_EnableMulti(uint32_t uBmp)
 472:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 473:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_StopClockSourceMulti(uBmp);
 474:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetClockSourceMulti(uBmp);
 475:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 476:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 477:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function enables and set the Timer Clock Source or disables the counter.
 478:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 479:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 480:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	enable - true enables the counter and set the clock source, false disables the counter
 481:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 482:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 483:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 484:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 485:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 486:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 487:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
 488:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 489:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 490:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 491:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCHWCNTR_Enable(IO_ChannelType tmrId, bool_t enable)
 492:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 493:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 494:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_cnt;
 495:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 496:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (tmrId >= NUM_HW_CNTR)
 497:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 498:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 499:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 500:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 501:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if hardware counter setup done */
 502:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[tmrId] == NULL)
 503:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 504:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 505:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 506:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 507:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
 508:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[tmrId];
 509:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 510:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (enable)
 511:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 512:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetClockSource(pTmr_cnt, pHwCntrCfgTable[tmrId]->clockSource);
 513:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 514:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	else
 515:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 516:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_StopClockSource(pTmr_cnt);
 517:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 518:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 519:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 520:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 521:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 522:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function enables or disables the ISR of the counter.
 523:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 524:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 525:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	enableISR - true enables the ISR, false disables the ISR
 526:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	callback - pointer to the callback function
 527:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 528:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 529:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 530:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 531:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 532:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION the channel is not configured
 533:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 534:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note       when passing enableISR=FALSE it's reccomanded to pass callbak=NULL
 535:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 536:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 537:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 538:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCHWCNTR_EnableISR(IO_ChannelType tmrId, bool_t enableISR, Comm_Notification callback)
 539:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 540:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 541:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_cnt;
 542:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 543:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (tmrId >= NUM_HW_CNTR)
 544:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 545:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 546:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 547:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 548:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if hardware counter setup done */
 549:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[tmrId] == NULL)
 550:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 551:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 552:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 553:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 554:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
 555:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[tmrId];
 556:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 557:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!enableISR)
 558:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 559:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	TMR_DisableTI(pTmr_cnt, pHwCntrCfgTable[tmrId]->clearingSourceId);
 560:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 561:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 562:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_Callback[tmrId] = callback;
 563:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 564:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (enableISR)
 565:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 566:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	TMR_ClearTOF(pTmr_cnt, pHwCntrCfgTable[tmrId]->clearingSourceId);
 567:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	TMR_EnableTI(pTmr_cnt, pHwCntrCfgTable[tmrId]->clearingSourceId);
 568:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 569:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 570:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 571:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 572:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 573:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 574:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the tick resolution relating to a channel
 575:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 576:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	ch - the identifier of the channel
 577:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 578:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TickResType
 579:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		tick resolution in nSec
 580:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 581:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 582:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 583:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TickResType OCHWCNTR_GetResolutionByTimerChannel(IO_ChannelType ch)
 584:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 585:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return OCHWCNTR_GetTickResolution(TmrChMap[ch].hwCntrlId);
 586:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 587:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 588:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 589:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the tick resolution.
 590:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 591:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the counter
 592:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 593:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TickResType
 594:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		tick resolution in nSec
 595:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 596:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 597:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 598:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TickResType OCHWCNTR_GetTickResolution(IO_ChannelType tmrId)
 599:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 600:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(TMR_GetTickResolution)
 601:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return TMR_GetTickResolution( pHwCntrCfgTable[tmrId]->hwCntrlId );	
 602:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #else
 603:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return ( pHwCntrCfgTable[tmrId]->tickResolution);
 604:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 605:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 606:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 607:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 608:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the timer's modulus.
 609:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 610:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 611:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 612:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	Period_ValueType
 613:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		period in ticks
 614:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 615:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 616:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 617:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Period_ValueType OCHWCNTR_GetTimerModulus(IO_ChannelType tmrId)
 618:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 619:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (pHwCntrCfgTable[tmrId]->period);
 620:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 621:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 622:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 623:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 624:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the timer period in nanoseconds
 625:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 626:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 627:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 628:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 629:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TimingValueType OCHWCNTR_GetPeriod(IO_ChannelType tmrId)
 630:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 631:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (pHwCntrCfgTable[tmrId]->period * pHwCntrCfgTable[tmrId]->tickResolution );
 632:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 633:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 634:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the maximum timer period in nanoseconds
 635:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 636:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 637:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 638:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 639:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TimingValueType OCHWCNTR_GetMaxPeriod(IO_ChannelType tmrId)
 640:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 641:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	 return( (IO_TimingValueType)pHwCntrCfgTable[tmrId]->tickResolution * 0xFFFF ); /*MS TODO: definir
 642:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 643:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 644:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 645:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the timer's modulus.
 646:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 647:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the counter
 648:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 649:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	Period_ValueType
 650:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		period in ticks
 651:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 652:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Period_ValueType OCHWCNTR_GetDelta(IO_ChannelType tmrId, Period_ValueType CntrVal_OLD, Period_Value
 653:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 654:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return TMR_GetDelta(TmrCntMap[tmrId], CntrVal_OLD, CntrVal_CURR);
 655:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 656:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 657:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 658:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** ISR of the counter with id channel. This function calls the callback function defined by the user.
 659:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param		[in] tmrID
 660:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 661:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note		This function must call inside interrupt vector
 662:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 663:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_2
 664:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 665:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void HWCNTR_ISR(IO_ChannelType tmrID)
 666:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 667:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_ENTER();
 668:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 669:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( tmrID < NUM_HW_CNTR )
 670:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 671:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* pointer to the timer module */
 672:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CNTAddressType pTmr_cnt = TmrCntMap[tmrID];
 673:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 674:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(TMR_Callback[tmrID] != 0)
 675:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
 676:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Calls the user callback */
 677:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)(TMR_Callback)[tmrID]((IO_NotificationType)IO_N_COMPLETED, (IO_ChannelType)tmrID, (IO_Erro
 678:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 679:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 680:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clears the interrupt flag */
 681:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     	TMR_ClearTOF(pTmr_cnt, pHwCntrCfgTable[tmrID]->clearingSourceId);
 682:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 683:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 684:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_EXIT();
 685:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 686:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if 0 /* NOTA: problemi di compatibilita? perchè è stato inserita questa modifica, ho ripristinat
 687:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* callback index */
 688:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     int callbackIndex = -1;
 689:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     /* pointer to the timer module */
 690:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_cnt = 0;
 691:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
 692:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( tmrID < NUM_HW_CNTR )
 693:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 694:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     /* pointer to the timer module */
 695:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     	if(pHwCntrCfgTable[TmrChMap[tmrID].hwCntrlId]->clearingSourceId == 0xFF)
 696:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     	{
 697:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	callbackIndex=tmrID;
 698:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_cnt = TmrCntMap[tmrID];
 699:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 700:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
 701:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
 702:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	callbackIndex = TmrChMap[tmrID].hwCntrlId;
 703:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	pTmr_cnt = TmrCntMap[TmrChMap[tmrID].hwCntrlId];
 704:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
 705:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     
 706:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(TMR_Callback[callbackIndex] != 0)
 707:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	    {
 708:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Calls the user callback */
 709:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)(TMR_Callback)[callbackIndex]((IO_NotificationType)IO_N_COMPLETED, (IO_ChannelType)callbac
 710:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	    }
 711:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
 712:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clears the interrupt flag */
 713:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     	TMR_ClearTOF(pTmr_cnt, pHwCntrCfgTable[tmrID]->clearingSourceId);
 714:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 715:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 716:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 717:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 718:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  * Set the base counter for trigger management
 719:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  \param [in]  triggID
 720:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  */
 721:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCHWCNTR_Trigger(OCTPM_TriggerIndexType triggID )
 722:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 723:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	int i=0;
 724:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((triggID>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 725:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 726:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for(i=0; i<(int)(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]));i++)
 727:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 728:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CntTrigVal[i][triggID]=OCHWCNTR_GetTicksSync(i);
 729:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 730:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 731:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 732:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 733:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /******************************************* Timer counter - end **********************************
 734:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 735:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*************************************** Timer input capture - begin ******************************
 736:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 737:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 738:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** This function initializes the hardware timer channel driver for the function of input capture.
 739:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** This functions marks the channel as busy.
 740:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 741:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	The pointer pICU_Cfg specifies the init structure for the channel.
 742:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 743:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 744:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 745:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 746:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identifier
 747:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION HW Timer channel is not yet configured
 748:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_BUSY counter in use
 749:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 750:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_3
 751:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 752:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 753:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCICU_InitSync(const IO_ICU_CfgType *pICU_Cfg)
 754:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 755:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 756:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_ch;
 757:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 758:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if Timer ID is in range */
 759:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pICU_Cfg -> ICU_Id >= NUM_HW_CNTR_CH)
 760:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 761:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 762:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 763:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 764:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if HW Timer has already been initialized */
 765:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( pHwCntrCfgTable[TmrChMap[pICU_Cfg -> ICU_Id].hwCntrlId] == NULL )
 766:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 767:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 768:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 769:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 770:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 771:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 772:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 773:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
 774:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_ChResource & (1 << pICU_Cfg->ICU_Id))
 775:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 776:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 777:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 778:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_BUSY;
 779:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 780:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 781:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Assigns the timer resource as busy */
 782:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_ChResource |= (1 << pICU_Cfg->ICU_Id);
 783:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 784:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 785:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 786:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 787:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_REGION_START();
 788:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Copy the timer structure */
 789:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_IcuDefinition[pICU_Cfg->ICU_Id] = *pICU_Cfg;
 790:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_UPDATE(TMR_IcuDefinition, pICU_Cfg->ICU_Id );
 791:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_REGION_END();
 792:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
 793:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[pICU_Cfg->ICU_Id].Channel;
 794:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 795:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Sets to default input capture */
 796:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelInputChapture(pTmr_ch);
 797:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 798:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 799:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 800:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 801:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 802:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function dispose of the channel of the timer. Its setting is returned to its default values.
 803:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n If the channel is not in use, the function won't do anything.
 804:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 805:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
 806:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 807:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 808:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 809:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 810:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 811:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCICU_DeInitSync(IO_ChannelType channel)
 812:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 813:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 814:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_ch;
 815:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 816:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 817:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 818:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 819:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 820:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 821:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 822:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 823:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 824:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer channel resource */
 825:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_ChResource & (1 << channel))
 826:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 827:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 828:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 829:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 830:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_START();
 831:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clears the timer structure */
 832:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		(void)memset (&TMR_IcuDefinition[channel], 0, sizeof(IO_ICU_CfgType));
 833:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_DATA_ELEM_UPDATE(TMR_IcuDefinition, channel);
 834:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_END();
 835:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* the timer pointer is assigned */
 836:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pTmr_ch = TmrChMap[channel].Channel;
 837:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 838:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DeInitChannel(pTmr_ch);
 839:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 840:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Release the timer resource */
 841:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ChResource &= (~(1u << channel));
 842:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 843:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	else
 844:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 845:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 846:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 847:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 848:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 849:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 850:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 851:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 852:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the captured value register of the channel converted in nSec.
 853:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 854:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
 855:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TimingValueType
 856:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		captured value converted in nsec
 857:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 858:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_3
 859:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 860:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TimingValueType OCICU_GetSync(IO_ChannelType channel)
 861:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 862:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
 863:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 864:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer channel */
 865:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 866:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 867:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_TimingValueType)TMR_GetChValue(pTmr_ch) * OCHWCNTR_GetTickResolution(TmrChMap[channel].
 868:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 869:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 870:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 871:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function get the raw counter value of the captured value of the channel
 872:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 873:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [in] channel
 874:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 875:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return  IO_HwTimerType
 876:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval captured value
 877:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 878:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_3
 879:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  */
 880:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_HwTimerType OCICU_GetTickSync(IO_ChannelType channel)
 881:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 882:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
 883:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 884:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer channel */
 885:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 886:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 887:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return TMR_GetChValue( pTmr_ch );
 888:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 889:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 890:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 891:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the edge type which triggers the capture event.
 892:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The edge can be rising, falling or both.
 893:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 894:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
 895:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	mode - 1 rising, 2 falling, 3 both
 896:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 897:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 898:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 899:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 900:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 901:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
 902:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 903:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_3
 904:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 905:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCICU_SetModeSync(IO_ChannelType channel, IO_ModeType mode)
 906:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 907:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 908:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_ch;
 909:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 910:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 911:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 912:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 913:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 914:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 915:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_CHECK(TMR_IcuDefinition, channel);
 916:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 917:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 918:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 919:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 920:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
 921:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!(TMR_ChResource & (1 << channel)))
 922:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 923:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 924:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 925:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 926:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 927:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 928:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 929:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
 930:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 931:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 932:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelEdgeMode(pTmr_ch, mode, TMR_IcuDefinition[channel].inverted);
 933:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 934:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 935:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 936:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 937:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 938:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Returns mode is rising or falling.
 939:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** If edge is set to both configuration remains unchanged.
 940:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 941:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
 942:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [out]	pMode mode:
 943:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \li		0   invalid
 944:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \li		1   rising
 945:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \li		2   falling
 946:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \li		3   both
 947:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 948:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 949:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 950:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK returned value is valid
 951:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 952:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
 953:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 954:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_3
 955:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
 956:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCICU_GetModeSync(IO_ChannelType channel, ICU_EdgeModeType *pMode)
 957:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 958:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
 959:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
 960:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t tmpRes;
 961:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 962:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 963:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 964:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 965:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 966:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 967:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
 968:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 969:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 970:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
 971:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!(TMR_ChResource & (1 << channel)))
 972:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
 973:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 974:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 975:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 976:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
 977:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 978:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 979:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
 980:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 981:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 982:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmpRes = TMR_GetChannelEdgeMode(pTmr_ch);
 983:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	*pMode = (ICU_EdgeModeType)tmpRes;
 984:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 985:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 986:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 987:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
 988:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Toggles edge type which triggers the capture event if mode is rising or falling.
 989:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** If edge is set to both configuration remains unchanged.
 990:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 991:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
 992:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 993:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
 994:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 995:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
 996:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
 997:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
 998:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
 999:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_3
1000:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1001:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCICU_ToggleModeSync(IO_ChannelType channel)
1002:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1003:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1004:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1005:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1006:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
1007:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1008:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1009:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1010:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1011:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
1012:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1013:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1014:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!(TMR_ChResource & (1 << channel)))
1015:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1016:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1017:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1018:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
1019:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1020:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1021:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
1022:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1023:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
1024:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1025:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_ToggleChannelEdgeMode(pTmr_ch);
1026:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1027:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
1028:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1029:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1030:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1031:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function enables or disables the ISR of the channel for input capture event.
1032:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1033:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1034:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	enableISR - true enables the ISR, false disables the ISR
1035:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	callback - pointer to the callback function
1036:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1037:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1038:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1039:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
1040:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
1041:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
1042:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1043:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_3
1044:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1045:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCICU_EnableISR(IO_ChannelType channel, bool_t enableISR, Comm_Notification callback)
1046:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1047:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1048:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1049:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1050:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
1051:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1052:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1053:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1054:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1055:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1056:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!(TMR_ChResource & (1 << channel)))
1057:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1058:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
1059:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1060:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1061:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1062:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
1063:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
1064:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1065:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!enableISR)
1066:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1067:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DisableCHI(pTmr_ch);
1068:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1069:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1070:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CH_Callback[channel] = callback;
1071:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1072:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (enableISR)
1073:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1074:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClearCHF(pTmr_ch);
1075:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_EnableCHI(pTmr_ch);
1076:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1077:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1078:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
1079:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1080:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*************************************** Timer input capture - end ********************************
1081:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1082:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /************************************** Timer output compare - begin ******************************
1083:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1084:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1085:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This function initialises the hardware timer channel driver for the function of output compare.
1086:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This functions marks the channel as busy.
1087:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The following parameters are set: Output compare mode.
1088:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1089:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	The pointer pOCU_Cfg specifies the init structure for the channel.
1090:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1091:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1092:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1093:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
1094:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
1095:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION HW Timer channel is not yet configured
1096:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_BUSY counter in use
1097:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1098:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1099:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1100:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCOCU_InitSync(IO_OCU_CfgType *pOCU_Cfg)
1101:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1102:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1103:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1104:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1105:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if Timer ID is in range */
1106:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pOCU_Cfg -> OCU_Id >= NUM_HW_CNTR_CH)
1107:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1108:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1109:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1110:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1111:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if HW Timer has already been initialized */
1112:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( pHwCntrCfgTable[TmrChMap[pOCU_Cfg -> OCU_Id].hwCntrlId] == NULL )
1113:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1114:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
1115:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1116:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1117:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1118:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
1119:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1120:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_ChResource & (1 << pOCU_Cfg->OCU_Id))
1121:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1122:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1123:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1124:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_BUSY;
1125:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1126:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1127:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Assigns the timer resource as busy */
1128:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_ChResource |= (1 << pOCU_Cfg->OCU_Id);
1129:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
1130:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1131:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1132:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Copy the timer structure */
1133:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_OcuDefinition[pOCU_Cfg->OCU_Id] = *pOCU_Cfg;
1134:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1135:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
1136:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[pOCU_Cfg->OCU_Id].Channel;
1137:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1138:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Sets to default output compare */
1139:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelOutputCompare(pTmr_ch);
1140:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1141:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
1142:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1143:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1144:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1145:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function deinitilizes the channel of the timer. Its setting is returned to its default value
1146:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n If the channel is not in use, the function won't do anything.
1147:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1148:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1149:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1150:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1151:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK de-initialization done
1152:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid channel identifier
1153:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1154:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1155:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1156:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCOCU_DeInitSync(IO_ChannelType channel)
1157:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1158:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1159:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1160:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1161:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1162:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
1163:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1164:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1165:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1166:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1167:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1168:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
1169:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1170:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_ChResource & (1 << channel))
1171:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1172:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1173:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1174:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1175:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clears the timer structure */
1176:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		(void)memset (&TMR_OcuDefinition[channel], 0, sizeof(IO_OCU_CfgType));
1177:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1178:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* the timer pointer is assigned */
1179:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pTmr_ch = TmrChMap[channel].Channel;
1180:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1181:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DeInitChannel(pTmr_ch);
1182:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1183:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Release the timer resource */
1184:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ChResource &= ~(1u << channel);
1185:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1186:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	else
1187:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1188:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1189:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1190:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1191:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
1192:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1193:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1194:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1195:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function returns the counter value. This value is converted into nSec.
1196:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1197:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1198:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1199:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TimingValueType
1200:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		counter value
1201:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1202:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1203:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1204:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TimingValueType OCOCU_GetSync(IO_ChannelType channel)
1205:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1206:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_TimingValueType)OCHWCNTR_GetSync(TmrChMap[channel].hwCntrlId);
1207:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1208:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1209:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1210:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function returns the counter value. This value is raw in ticks.
1211:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1212:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1213:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1214:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_HwTimerType
1215:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		counter value in ticks
1216:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1217:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1218:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1219:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_HwTimerType OCOCU_GetSyncTickResolution(IO_ChannelType channel)
1220:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1221:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_HwTimerType)OCHWCNTR_GetTicksSync(TmrChMap[channel].hwCntrlId);
1222:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1223:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1224:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1225:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the threshold 1 for the output compare event of the channel. The value is in n
1226:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1227:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1228:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	threshold1 - the threshold value 1 in nSec
1229:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1230:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If tick resolution is 0, the application will crash by div by zero
1231:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1232:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note		Correct tick resolution must be filled in the init structure.
1233:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1234:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1235:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1236:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCOCU_SetThreshold1Sync(IO_ChannelType channel, IO_TimingValueType threshold1)
1237:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1238:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1239:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1240:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint32_t tickRes;
1241:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint32_t tmrPeriod;
1242:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint32_t threshold;
1243:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1244:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1245:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1246:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1247:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1248:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1249:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1250:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1251:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1252:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1253:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1254:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
1255:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1256:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tickRes = OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
1257:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( TmrChMap[channel].hwCntrlId, channel);
1258:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			threshold = threshold1 / tickRes;
1259:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			
1260:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( threshold > tmrPeriod )
1261:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
1262:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				threshold -=tmrPeriod;
1263:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1264:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, (IO_HwTimerType)threshold);
1265:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1266:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1267:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
1268:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1269:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1270:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1271:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1272:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1273:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1274:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1275:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1276:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the treshold 1 for the output compare event of the channel. The value is raw i
1277:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1278:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1279:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	threshold1 - the treshold value 1
1280:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1281:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1282:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1283:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCOCU_SetThreshold1TickResolutionSync(IO_ChannelType channel, IO_HwTimerType threshold1)
1284:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1285:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1286:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1287:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	Period_ValueType tmrPeriod;
1288:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1289:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1290:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1291:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1292:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1293:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1294:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1295:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1296:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1297:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1298:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1299:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
1300:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( TmrChMap[channel].hwCntrlId, channel);
1301:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( threshold1 > tmrPeriod )
1302:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
1303:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				threshold1 -=tmrPeriod;
1304:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1305:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, threshold1);
1306:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1307:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1308:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
1309:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1310:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1311:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1312:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1313:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1314:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1315:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1316:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** bool8_t OCOCU_IsTickElapsed(IO_ChannelType channel, OCTPM_TriggerIndexType trigRefIndex, IO_TickRes
1317:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1318:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	bool8_t res = FALSE;
1319:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t tmrID = 0xFF;
1320:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_HwTimerType	ref, curr;
1321:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_HwTimerType diff1, diff2;
1322:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
1323:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
1324:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1325:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmrID = OCTPM_GetTimerIDFromChannelID_1(channel);
1326:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
1327:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1328:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	curr=OCHWCNTR_GetTicksSync(tmrID);
1329:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ref = (IO_HwTimerType)(TMR_CntTrigVal[tmrID][trigRefIndex]);
1330:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	diff1 = curr-ref;
1331:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	diff2 = tick-ref;
1332:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1333:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if((diff1)>=(diff2))
1334:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1335:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		res = TRUE;
1336:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1337:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1338:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return res;
1339:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1340:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1341:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*
1342:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Returns hw counter val in tick corresponding to an event specified by trigger ID index relating to 
1343:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1344:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_HwTimerType OCOCU_GetTickValByTriggerIndex(IO_ChannelType channel, OCTPM_TriggerIndexType trigRe
1345:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1346:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t tmrID = 0xFF;
1347:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_HwTimerType	ref;
1348:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1349:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
1350:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
1351:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1352:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmrID = OCTPM_GetTimerIDFromChannelID_1(channel);
1353:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
1354:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1355:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ref = (TMR_CntTrigVal[tmrID][trigRefIndex]);
1356:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1357:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return ref;
1358:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1359:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1360:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*
1361:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** Sets hw counter val relating to a channel by specifying trigegr ID index
1362:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1363:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCOCU_SetTickValByTriggerIndex(IO_ChannelType channel, OCTPM_TriggerIndexType trigRefIndex, IO
1364:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1365:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t tmrID = 0xFF;
1366:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1367:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
1368:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
1369:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1370:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmrID = OCTPM_GetTimerIDFromChannelID_1(channel);
1371:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
1372:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1373:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CntTrigVal[tmrID][trigRefIndex] = val;
1374:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1375:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1376:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1377:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n Sets an event with a delay [ns] respect to trigger
1378:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1379:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1380:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	trigRefIndex - trigger ID
1381:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	nsDelay - delay respect to the trigger in ns
1382:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1383:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1384:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1385:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCOCU_SetEventSync(IO_ChannelType channel, OCTPM_TriggerIndexType trigRefIndex, uint32_t nsDel
1386:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1387:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* resolution */
1388:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_TickResType timerRes = 0;
1389:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1390:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch = 0xFF;
1391:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_HwTimerType ticks=0;
1392:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1393:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t tmrID = 0xFF;
1394:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	Period_ValueType tmrPeriod;
1395:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1396:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1397:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
1398:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
1399:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1400:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1401:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmrID = OCTPM_GetTimerIDFromChannelID_1(channel);
1402:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1403:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
1404:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1405:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* tick resolution of the counter */
1406:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerRes = OCHWCNTR_GetTickResolution(tmrID);
1407:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1408:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((timerRes==0), PLT_ERROR_OCTPM_INVALID_PARAMS);
1409:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1410:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ticks = (IO_HwTimerType)(TMR_CntTrigVal[tmrID][trigRefIndex] + nsDelay/timerRes);
1411:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1412:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1413:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1414:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1415:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1416:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1417:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1418:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1419:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1420:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1421:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1422:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1423:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
1424:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( tmrID, channel);
1425:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( ticks > tmrPeriod )
1426:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
1427:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ticks -=tmrPeriod;
1428:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1429:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, ticks);
1430:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1431:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1432:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
1433:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1434:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1435:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1436:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1437:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1438:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1439:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1440:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1441:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n Sets an event with a delay [ns] respect to current compare match
1442:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1443:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1444:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	nsDelay - delay respect to the trigger in ns
1445:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1446:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1447:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1448:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCOCU_SetRelativeEventSync(IO_ChannelType channel, uint32_t nsDelay)
1449:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1450:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* resolution */
1451:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_TickResType timerRes = 0;
1452:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1453:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch = 0xFF;
1454:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_HwTimerType ticks=0;
1455:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1456:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t tmrID = 0xFF;
1457:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	Period_ValueType tmrPeriod;
1458:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1459:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel >= NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
1460:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1461:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmrID = OCTPM_GetTimerIDFromChannelID_1(channel);
1462:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1463:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID >= (sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_IN
1464:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1465:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* tick resolution of the counter */
1466:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerRes = OCHWCNTR_GetTickResolution(tmrID);
1467:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1468:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((timerRes==0), PLT_ERROR_OCTPM_INVALID_PARAMS);
1469:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1470:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ticks = (IO_HwTimerType)(OCICU_GetTickSync(channel) + nsDelay/timerRes);
1471:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1472:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1473:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1474:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1475:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1476:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1477:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1478:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1479:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1480:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1481:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1482:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1483:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
1484:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( tmrID, channel);
1485:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( ticks > tmrPeriod )
1486:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
1487:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ticks -=tmrPeriod;
1488:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1489:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, ticks);
1490:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1491:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1492:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
1493:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1494:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1495:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1496:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1497:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1498:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1499:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1500:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1501:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1502:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the threshold 2 for the output compare event of the channel. The value is in n
1503:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1504:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1505:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	threshold2 - the treshold value 2 in nSec
1506:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1507:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If tick resolution is 0, the application will crash by div by zero
1508:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1509:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note		Correct tick resolution must be filled in the init structure
1510:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1511:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1512:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1513:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCOCU_SetThreshold2Sync(IO_ChannelType channel, IO_TimingValueType threshold2)
1514:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1515:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1516:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1517:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1518:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1519:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1520:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1521:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1522:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1523:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1524:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1525:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if(FALSE == Threshold2SetUpUnsupported(channel))
1526:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
1527:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				TMR_SetThreshold2(TmrChMap[channel].Channel, threshold2 / OCHWCNTR_GetTickResolution(TmrChMap[c
1528:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1529:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1530:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1531:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
1532:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1533:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1534:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1535:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1536:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1537:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1538:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1539:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1540:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the threshold 2 for the output compare event of the channel. The value is raw 
1541:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1542:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1543:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	threshold2 - the threshold value 2
1544:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1545:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1546:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1547:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCOCU_SetThreshold2TickResolutionSync(IO_ChannelType channel, IO_HwTimerType threshold2)
1548:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1549:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1550:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1551:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1552:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1553:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1554:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1555:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1556:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1557:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1558:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1559:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if(FALSE == Threshold2SetUpUnsupported(channel))
1560:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
1561:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				TMR_SetThreshold2(TmrChMap[channel].Channel, threshold2);
1562:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1563:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1564:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1565:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
1566:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1567:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1568:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1569:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1570:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1571:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1572:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1573:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1574:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the edge type which will be generated on the compare event.
1575:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The level can be high, low or toggle with respect to the 2 possible threshold.
1576:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1577:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1578:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	mode - 4 no edge event, 5 toggle on T1, 6 toggle on T2, 7 set high, 8 set low
1579:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1580:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1581:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1582:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
1583:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
1584:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
1585:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval     IO_E_UNKNOWN_MODE mode not supported
1586:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1587:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_4
1588:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1589:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCOCU_SetModeSync(IO_ChannelType channel, IO_ModeType mode)
1590:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1591:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1592:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1593:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1594:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1595:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
1596:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1597:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1598:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1599:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1600:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (OutputCompareModeUnsupported(mode,TMR_OcuDefinition[channel].inverted))
1601:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1602:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNKNOWN_MODE;
1603:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1604:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1605:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
1606:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1607:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!(TMR_ChResource & (1 << channel)))
1608:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1609:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1610:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1611:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
1612:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1613:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1614:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
1615:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1616:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1617:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
1618:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1619:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelOutputMode(pTmr_ch, mode,TMR_OcuDefinition[channel].inverted);
1620:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1621:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
1622:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1623:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1624:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /************************************** Timer output compare - end ********************************
1625:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1626:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1627:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /************** Timer PWM - begin **************/
1628:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1629:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1630:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This function initializes the hardware timer channel driver for the function of PWM.
1631:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This functions marks the channel as busy.
1632:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The following parameters are set: PWM mode.
1633:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1634:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	The pointer pPWM_Cfg specifies the init structure for the channel.
1635:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1636:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1637:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1638:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
1639:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
1640:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION HW Timer channel is not yet configured
1641:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_BUSY counter in use
1642:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1643:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1644:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWM_InitSync(IO_PWM_CfgType *pPWM_Cfg)
1645:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1646:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1647:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1648:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1649:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if Timer ID is in range */
1650:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pPWM_Cfg -> PWM_Id >= NUM_HW_CNTR_CH)
1651:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1652:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1653:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1654:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1655:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if HW Timer has already been initialized */
1656:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( pHwCntrCfgTable[TmrChMap[pPWM_Cfg -> PWM_Id].hwCntrlId] == NULL )
1657:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1658:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
1659:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1660:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1661:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
1662:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1663:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1664:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_ChResource & (1 << pPWM_Cfg -> PWM_Id))
1665:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1666:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1667:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1668:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_BUSY;
1669:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1670:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1671:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Assigns the timer resource as busy */
1672:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_ChResource |= (1 << pPWM_Cfg -> PWM_Id);
1673:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1674:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
1675:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1676:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1677:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Assigns Config. Pointer */
1678:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pPwmCfgTable[pPWM_Cfg -> PWM_Id] = pPWM_Cfg;
1679:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1680:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1681:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* the timer pointer is assigned */
1682:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[pPWM_Cfg -> PWM_Id].Channel;
1683:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1684:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* PWM channel config. no activation! */
1685:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelPWM(pTmr_ch);
1686:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1687:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
1688:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1689:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1690:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function dispose of the channel of the timer. Its setting is returned to its default values.
1691:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n If the channel is not in use, the function won't do anything.
1692:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1693:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1694:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1695:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1696:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1697:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
1698:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
1699:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1700:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWM_DeInitSync(IO_ChannelType channel)
1701:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1702:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1703:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1704:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1705:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
1706:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1707:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1708:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1709:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1710:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
1711:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1712:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1713:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_ChResource & (1 << channel))
1714:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1715:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1716:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1717:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clears the timer structure */
1718:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pPwmCfgTable[channel]= (IO_PWM_CfgType *)NULL;
1719:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1720:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* the timer pointer is assigned */
1721:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pTmr_ch = TmrChMap[channel].Channel;
1722:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1723:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DeInitChannel(pTmr_ch);
1724:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1725:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Release the timer resource */
1726:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ChResource &= ~(1u << channel);
1727:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1728:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	else
1729:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1730:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
1731:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1732:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1733:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
1734:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1735:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1736:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1737:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the on-time of the PWM of the channel. The value is in nSec.
1738:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1739:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1740:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	tOn - the on-time value in nSec
1741:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1742:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If tick resolution is 0, the application will crash by div by zero
1743:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1744:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWM_SetSync(IO_ChannelType channel, IO_TimingValueType tOn)
1745:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1746:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1747:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1748:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType retVal = IO_E_OK;
1749:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1750:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1751:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1752:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1753:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1754:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1755:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1756:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1757:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1758:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1759:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1760:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
1761:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1762:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* verifica che il onTime non superi il periodo del timer*/
1763:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( tOn >= OCHWCNTR_GetPeriod(TmrChMap[channel].hwCntrlId) ){
1764:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				retVal = IO_E_INVALID_VALUE;
1765:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}else{
1766:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				/* Turns on the PWM mode */
1767:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				TMR_SetChannelPulses(pTmr_ch, pPwmCfgTable[channel]->inverted);
1768:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1769:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				/* Sets the on time */
1770:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				TMR_SetTimeOn(pTmr_ch, (IO_HwTimerType)(tOn / OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCn
1771:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1772:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1773:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1774:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
1775:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1776:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1777:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1778:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1779:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}else{
1780:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return retVal = IO_E_INVALID_CHANNEL_ID;
1781:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1782:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return retVal;
1783:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1784:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1785:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1786:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the on-time value in nSec.
1787:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1788:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1789:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1790:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TimingValueType
1791:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		on-time value
1792:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1793:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TimingValueType OCPWM_GetSync(IO_ChannelType channel)
1794:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1795:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_ch;
1796:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	Period_ValueType tOn;
1797:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
1798:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( channel >= NUM_HW_CNTR_CH )
1799:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return 0; /*TODO: gestion errore*/
1800:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1801:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1802:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
1803:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1804:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_GetTimeOn( pTmr_ch, &tOn); 
1805:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
1806:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_TimingValueType) tOn * OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
1807:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1808:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1809:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1810:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function returns the period value. This value is converted into nSec.
1811:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1812:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1813:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1814:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Correct tick resolution must be filled in the init structure of the counter
1815:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1816:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_TimingValueType
1817:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		period value
1818:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1819:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_TimingValueType OCPWM_GetPeriodSync(IO_ChannelType channel)
1820:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1821:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CHAddressType pTmr_cnt;
1822:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t hwCntr;
1823:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1824:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( channel >= NUM_HW_CNTR_CH )
1825:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return 0; /*TODO: gestion errore*/
1826:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		
1827:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	hwCntr = TmrChMap[channel].hwCntrlId;
1828:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1829:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[hwCntr];
1830:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1831:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     return (IO_TimingValueType)TMR_GetModulo(pTmr_cnt, channel) * OCHWCNTR_GetTickResolution(hwCntr
1832:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1833:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1834:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1835:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the period of the PWM of the channel. The value is in nSec.
1836:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1837:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
1838:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	period - the period value in nSec
1839:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1840:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Correct tick resolution must be filled in the init structure\n
1841:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Timer Modulo affected\n
1842:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1843:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If tick resolution is 0, the application will crash by div by zero
1844:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1845:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1846:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWM_SetPeriodSync(IO_ChannelType channel, IO_TimingValueType period)
1847:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1848:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CNTAddressType pTmr_cnt;
1849:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t hwCntrlId;
1850:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType retVal = IO_E_OK;
1851:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1852:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
1853:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1854:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1855:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		EnterCriticalSection();
1856:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1857:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Checks the timer module resource */
1858:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((TMR_ChResource & (1 << channel)))
1859:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
1860:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1861:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1862:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1863:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			hwCntrlId = TmrChMap[channel].hwCntrlId;
1864:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			EnterCriticalSection();
1865:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1866:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if ( pHwCntrCfgTable[hwCntrlId] != NULL )
1867:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
1868:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ExitCriticalSection();
1869:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1870:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				/* check for overflow*/
1871:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				if( period >= OCHWCNTR_GetMaxPeriod(TmrChMap[channel].hwCntrlId) ){
1872:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 						retVal = IO_E_INVALID_VALUE;
1873:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				}else{
1874:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					/* pointer to the timer module */
1875:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					pTmr_cnt = TmrCntMap[hwCntrlId];
1876:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1877:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					/* Sets the modulo */
1878:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					TMR_SetModulo(pTmr_cnt, (period / OCHWCNTR_GetTickResolution(hwCntrlId)), pHwCntrCfgTable[hwCn
1879:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				}
1880:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}else{
1881:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					ExitCriticalSection();
1882:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
1883:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1884:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}else{
1885:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			ExitCriticalSection();
1886:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
1887:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1888:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}else{
1889:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		retVal = IO_E_INVALID_CHANNEL_ID;
1890:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1891:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return retVal;
1892:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1893:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1894:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1895:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1896:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function sets the on-time and the period of the PWM of the channel. The value is in nSec.
1897:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1898:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1899:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	tOn - the on-time value in nSec
1900:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	period - the period value in nSec
1901:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1902:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1903:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Correct tick resolution must be filled in the init structure\n
1904:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Timer Modulo affected\n
1905:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1906:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If tick resolution is 0, the application will crash by div by zero
1907:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1908:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCPWM_SetAllSync(IO_ChannelType channel, IO_TimingValueType tOn, IO_TimingValueType period)
1909:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1910:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	OCPWM_SetSync(channel, tOn);
1911:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1912:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	OCPWM_SetPeriodSync(channel, period);
1913:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1914:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1915:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function enables or disables the ISR of the channel for PWM at the beginning of the new peri
1916:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1917:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
1918:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	enableISR - true enables the ISR, false disables the ISR
1919:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	callback - pointer to the callback function
1920:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1921:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b    the functions overwrites previous callback on hardware counter ISR
1922:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1923:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1924:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1925:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
1926:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
1927:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
1928:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1929:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWM_EnableT1ISR(IO_ChannelType channel, bool_t enableISR, Comm_Notification callback
1930:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1931:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1932:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
1933:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1934:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
1935:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1936:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1937:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Checks the timer module resource */
1938:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!(TMR_ChResource & (1 << channel)))
1939:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1940:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
1941:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1942:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1943:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)OCHWCNTR_EnableISR(TmrChMap[channel].hwCntrlId, enableISR, callback);
1944:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1945:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1946:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /************************************************ Timer PWM - end *********************************
1947:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1948:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1949:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*********************************************** Timer PWD - begin ********************************
1950:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1951:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
1952:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This function initialises the hardware timer channel driver for the function of PWD. It uses the
1953:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This functions marks the channel as busy.
1954:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The following parameters are set: PWD mode (input capture).
1955:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1956:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	The pointer pPWM_Cfg specifies the init structure for the channel.
1957:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1958:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
1959:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1960:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
1961:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
1962:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_BUSY counter in use
1963:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1964:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
1965:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
1966:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWD_InitSync(IO_PWD_CfgType *pPWD_Cfg)
1967:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
1968:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
1969:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ICU_CfgType icuCfg;
1970:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType returnInit;
1971:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1972:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1973:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	icuCfg.ICU_Id   = pPWD_Cfg->PWD_Id;
1974:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	icuCfg.inverted = pPWD_Cfg->inverted;
1975:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1976:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_InitSync(&icuCfg);
1977:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1978:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_REGION_START();
1979:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1980:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit == (IO_ErrorType)IO_E_OK)
1981:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
1982:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Copy the timer structure cfg. */
1983:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[pPWD_Cfg->PWD_Id] = *pPWD_Cfg;
1984:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[pPWD_Cfg->PWD_Id].in_use = 1;
1985:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[pPWD_Cfg->PWD_Id].noTon = 0;		/* by default , measure of  Ton is enabled*/
1986:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1987:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
1988:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdChResource |= (1u<<pPWD_Cfg -> PWD_Id);
1989:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
1990:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
1991:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1992:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_UPDATE( TMR_PwdDefinition, pPWD_Cfg->PWD_Id );
1993:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_UPDATE( PWD_CtrlVar, pPWD_Cfg->PWD_Id );
1994:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1995:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  	SAFETY_REGION_END();
1996:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
1997:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return returnInit;
1998:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
1999:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2000:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2001:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function dispose of the channel of the timer. Its setting is returned to its default values.
2002:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n If the channel is not in use, the function won't do anything.
2003:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2004:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
2005:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2006:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
2007:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2008:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK dispose of done
2009:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID
2010:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval     IO_E_UNEXPECTED_CONDITION
2011:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2012:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2013:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2014:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWD_DeInitSync(IO_ChannelType channel)
2015:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2016:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t hardwareTimerLinked;
2017:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType returnInit;
2018:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t i;
2019:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	bool_t disbleHwISR;
2020:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2021:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_DeInitSync(channel);
2022:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2023:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit == (IO_ErrorType)IO_E_OK)
2024:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2025:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_START();
2026:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Copy the timer structure */
2027:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		(void)memset (&TMR_PwdDefinition[channel], 0, sizeof(IO_PWD_CfgType));
2028:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2029:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_DATA_ELEM_UPDATE( TMR_PwdDefinition, channel );
2030:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_END();
2031:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
2032:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdChResource &= (~(1u<<channel));
2033:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif /* #if defined(CONFIG_OCTPM_RUNTIME_CHECK) */
2034:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Check if all pwd channels linked to an hardware timer are deinitialized */
2035:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2036:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Detect Hardware timer linked to the channel */
2037:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		hardwareTimerLinked = TmrChMap[channel].hwCntrlId;
2038:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2039:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		disbleHwISR = TRUE;
2040:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		i=0;
2041:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		while( i < NUM_HW_CNTR_CH )
2042:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2043:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* check if all pwd channels linked to the hardware timer are free */
2044:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (
2045:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(CONFIG_OCTPM_RUNTIME_CHECK)
2046:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					(TMR_PwdChResource & (1u<<i)) &&
2047:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
2048:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					(TmrChMap[i].hwCntrlId == hardwareTimerLinked))
2049:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2050:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				disbleHwISR = FALSE;
2051:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				i = NUM_HW_CNTR_CH; 
2052:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2053:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			else
2054:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2055:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				i++;
2056:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2057:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2058:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (disbleHwISR)
2059:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2060:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/*lint -e619 (Loss of precision arg. 3*/
2061:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)OCHWCNTR_EnableISR(hardwareTimerLinked, 0, (Comm_Notification)NULL);
2062:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/*lint +e619 */
2063:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2064:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2065:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2066:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2067:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return returnInit;
2068:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2069:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2070:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2071:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function starts the pulse-width demodulation.
2072:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n It uses the interrupts to read the times of the edges.
2073:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n It uses the Hardware Timer Overflow/Underflow Interrupt linked to the channel.
2074:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2075:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
2076:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	callback - pointer to the callback function
2077:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2078:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b    OCHWCNTR_EnableISR() overwrite TMR_Callback[channel]
2079:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2080:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
2081:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2082:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
2083:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
2084:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
2085:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2086:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If the the processor is slow and the duty cycle approches 0 % or 100 % then
2087:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             the pulses are narrow and it losses edges. An additional check should
2088:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             be put into a periodical time interrupt to see that the edges come. If the edges
2089:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             don't come (0 or 100%) than the driver doesn't recognize the state.
2090:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2091:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2092:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2093:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWD_StartSampleSync(IO_ChannelType channel, Comm_Notification callback)
2094:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2095:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType returnInit;
2096:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2097:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Sets the rising  edge,
2098:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	   in case of inversion OCICU_SetModeSync() will provide falling edge setting */
2099:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_SetModeSync(channel, TMR_CH_IC_POS_EDGE);
2100:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2101:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit != (IO_ErrorType)IO_E_OK)
2102:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2103:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return returnInit;
2104:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2105:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2106:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/*SAFETY_REGION_START(); i dati sono modificata da isr */
2107:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
2108:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2109:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_CHECK( PWD_CtrlVar, channel );
2110:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2111:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Init State of Capture */
2112:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PWD_CtrlVar[channel].TMR_Status = PWD_FIRST_CAPT_EVENT;
2113:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2114:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Saves the callback address */
2115:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PWD_CtrlVar[channel].callback = callback;
2116:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2117:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_UPDATE( PWD_CtrlVar, channel );
2118:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2119:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
2120:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* SAFETY_REGION_END(); i dati sono modificata da isr */
2121:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2122:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Programs the interrupt on linked HwCntr overflow/underflow */
2123:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCHWCNTR_EnableISR(TmrChMap[channel].hwCntrlId, 1, OCPWD_HwTmrTurns);
2124:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2125:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit != (IO_ErrorType)IO_E_OK)
2126:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2127:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return returnInit;
2128:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2129:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2130:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Programs the interrupt on capture */
2131:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_EnableISR(channel, 1, OCPWD_EdgeTime);
2132:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2133:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return returnInit;
2134:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2135:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2136:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2137:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function dispose of the channel of the timer. Its setting is returned to its default values.
2138:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n If the channel is not in use, the function won't do anything.
2139:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2140:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]		channel	- the identifier of the channel
2141:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]  newFilterTime	- new desired filter time (in ns)
2142:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2143:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
2144:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2145:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK dispose of done
2146:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID
2147:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2148:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2149:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note Do not use in interrupt
2150:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2151:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWD_SetFilterTime(IO_ChannelType channel, IO_TimingValueType newFilterTime)
2152:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2153:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType returnVal = (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
2154:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2155:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
2156:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2157:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_START();
2158:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_DATA_ELEM_CHECK( PWD_CtrlVar, channel );
2159:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		IO_TickResType timerRes = OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
2160:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].TMR_Filter = (newFilterTime / timerRes);
2161:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		returnVal = (IO_ErrorType) IO_E_OK;
2162:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_DATA_ELEM_UPDATE( PWD_CtrlVar, channel );
2163:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_END();
2164:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2165:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2166:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return returnVal;
2167:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2168:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2169:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2170:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2171:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function dispose of the channel of the timer. Its setting is returned to its default values.
2172:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n If the channel is not in use, the function won't do anything.
2173:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2174:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]		channel	- the identifier of the channel
2175:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]  		bTon	- TRUE if Ton measure is enabled.
2176:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2177:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
2178:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2179:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK dispose of done
2180:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID
2181:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2182:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2183:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note Do not use in interrupt
2184:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2185:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWD_SetTonMeasure(IO_ChannelType channel, bool8_t bTon)
2186:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2187:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType returnVal = (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
2188:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2189:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
2190:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2191:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_START();
2192:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_DATA_ELEM_CHECK( TMR_PwdDefinition, channel );
2193:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[channel].noTon = !(bTon==TRUE);
2194:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		returnVal = (IO_ErrorType) IO_E_OK;
2195:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_DATA_ELEM_UPDATE( TMR_PwdDefinition, channel );
2196:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		SAFETY_REGION_END();
2197:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2198:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2199:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return returnVal;
2200:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2201:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2202:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2203:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2204:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function is a local ISR that is called when an edge comes. This function calculates the
2205:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n period of the signal (if non-inverted the period is between two raising edges, if inverted
2206:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n than between two falling edges) and the lenght of the on-pulse (if non-inverted from the raising
2207:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n to falling edge, if inverted from falling to rising).
2208:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function generate a callback always when a new period edge comes.
2209:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2210:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]    notification
2211:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
2212:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	error
2213:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2214:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2215:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b    the functions return's values are not tested to be faster, we are inside interrupt!
2216:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2217:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
2218:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2219:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK
2220:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2221:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \warning	If the the processor is slow and the duty cycle approches 0 % or 100 % then
2222:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             the pulses are narrow and it losses edges. An additional check should
2223:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             be put into a periodical time interrupt to see that the edges come. If the edges
2224:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             don't come (0 or 100%) than the driver doesn't recognize the state.
2225:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2226:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2227:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2228:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_ErrorType OCPWD_EdgeTime(IO_NotificationType notification, IO_ChannelType channel, IO_Err
2229:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2230:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t hwTmrID = TmrChMap[channel].hwCntrlId;
2231:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Time of the edge */
2232:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_HwTimerType time;
2233:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	bool_t turnPendingFlag;
2234:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t pinIOlevel=0;
2235:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2236:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     (void) notification;
2237:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     (void) error;
2238:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2239:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	time = OCICU_GetTickSync(channel); 
2240:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2241:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Check if HwTmr (linked to the channel) Overflow/Underflow pending flag active */
2242:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
2243:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* 1) Get the pending flag */
2244:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     turnPendingFlag = TMR_GetTOF(TmrCntMap[hwTmrID], channel);
2245:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2246:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_CHECK( pHwCntrCfgTable, TmrChMap[channel].hwCntrlId);
2247:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2248:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_CHECK( TMR_PwdDefinition, channel );
2249:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_CHECK( PWD_CtrlVar, channel );
2250:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2251:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if !defined(CONFIG_OCPWD_DISABLE_PINCHK)
2252:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2253:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* PIN check: gets 5 I/O samples to validate level */
2254:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!TMR_PwdDefinition[channel].noTon)
2255:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2256:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint8_t i;
2257:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2258:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		for (i=0; i < 5; i++)
2259:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2260:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pinIOlevel += OCDIO_GetIOMapPinValueSync(&TmrChToPinMap[0], channel);
2261:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2262:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2263:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* If set to falling edge, inverts detection */
2264:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (TMR_PwdDefinition[channel].inverted)
2265:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2266:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pinIOlevel = 5 - pinIOlevel;
2267:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2268:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2269:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	else
2270:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
2271:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* PIN check disabled: it will always give expected value */
2272:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (PWD_CtrlVar[channel].TMR_Status != PWD_SECOND_CAPT_EVENT)
2273:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2274:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pinIOlevel = 5;
2275:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2276:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2277:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Which came first, the chicken or the egg? */
2278:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (turnPendingFlag && ( time < pHwCntrCfgTable[TmrChMap[channel].hwCntrlId]->period/2 ) )
2279:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2280:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* We assume the overlow/underflow came first so PW_HwTmrTurns[] is not update
2281:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		   it will be update exing from this interrupt */
2282:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].HwTmrTurns++;
2283:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Next Interrupt remember to dec. PW_HwTmrTurns[] */
2284:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].DecHwTmrTurns = TRUE;
2285:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2286:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	else
2287:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2288:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* No overlow/underflow or
2289:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		   overlow/underflow but time >= pHwCntrCfgTable[TmrChMap[channel].hwCntrlId]->period/2
2290:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		   and we assume that overlow/underflow came after edge */
2291:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( TRUE == PWD_CtrlVar[channel].DecHwTmrTurns )
2292:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2293:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].HwTmrTurns--;
2294:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].DecHwTmrTurns = FALSE;
2295:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2296:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2297:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2298:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	switch(PWD_CtrlVar[channel].TMR_Status)
2299:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2300:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	case PWD_FIRST_CAPT_EVENT:
2301:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2302:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].TMR_Start = time;
2303:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Sets the falling  edge, in case of inversion ICU_SetModeSync() will provide rising. edge setti
2304:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2305:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(TMR_PwdDefinition[channel].noTon)
2306:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2307:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].TMR_Status = PWD_THIRD_CAPT_EVENT;
2308:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2309:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
2310:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2311:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (pinIOlevel > 2)
2312:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2313:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				(void)OCICU_SetModeSync(channel, TMR_CH_IC_NEG_EDGE);
2314:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[channel].TMR_Status = PWD_SECOND_CAPT_EVENT;
2315:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2316:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2317:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2318:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].HwTmrTurns = 0;
2319:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2320:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(OCTPM_PWD_TIMING_DEBUG)
2321:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		maxTonCntr[channel] = 0;
2322:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		minTonCntr[channel] = 0;
2323:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		maxPeriodCntr[channel] = 0;
2324:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		minPeriodCntr[channel] = 0;
2325:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
2326:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2327:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		break;
2328:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2329:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	case PWD_SECOND_CAPT_EVENT:
2330:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2331:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint32_t tmpPeriod = OCPWD_GetIntervalInTicks(channel,time);
2332:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2333:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(OCTPM_PWD_TIMING_DEBUG)
2334:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((PWD_DBG_MaxMeasure[channel].tOn < tmpPeriod) || (maxTonCntr[channel] == 0))
2335:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2336:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_DBG_MaxMeasure[channel].tOn = tmpPeriod;
2337:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			maxTonCntr[channel] = 100;
2338:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2339:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
2340:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2341:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			maxTonCntr[channel]--;
2342:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2343:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2344:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((PWD_DBG_MinMeasure[channel].tOn > tmpPeriod) || (minTonCntr[channel] == 0))
2345:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2346:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_DBG_MinMeasure[channel].tOn = tmpPeriod;
2347:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			minTonCntr[channel] = 100;
2348:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2349:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
2350:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2351:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			minTonCntr[channel]--;
2352:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2353:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
2354:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2355:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( ( tmpPeriod >= PWD_CtrlVar[channel].TMR_Filter) && (pinIOlevel <= 2))
2356:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2357:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Check How many turns HwCounter did between first capture and the current capture */
2358:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].Measurement.tOn = tmpPeriod;
2359:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Sets the rising  edge, in case of inversion ICU_SetModeSync() will provide falling edge setti
2360:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)OCICU_SetModeSync(channel, TMR_CH_IC_POS_EDGE);
2361:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2362:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].TMR_Status = PWD_THIRD_CAPT_EVENT;
2363:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2364:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2365:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		break;
2366:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2367:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	case PWD_THIRD_CAPT_EVENT:
2368:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2369:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint32_t tmpPeriod = OCPWD_GetIntervalInTicks(channel,time);
2370:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint32_t tmpRef = PWD_CtrlVar[channel].TMR_Filter;
2371:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2372:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (!TMR_PwdDefinition[channel].noTon)
2373:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2374:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmpRef += PWD_CtrlVar[channel].Measurement.tOn;
2375:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2376:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2377:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #if defined(OCTPM_PWD_TIMING_DEBUG)
2378:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((PWD_DBG_MaxMeasure[channel].period < tmpPeriod) || (maxPeriodCntr[channel] == 0))
2379:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2380:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_DBG_MaxMeasure[channel].period = tmpPeriod;
2381:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			maxPeriodCntr[channel] = 100;
2382:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2383:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
2384:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2385:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			maxPeriodCntr[channel]--;
2386:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2387:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2388:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((PWD_DBG_MinMeasure[channel].period > tmpPeriod) || (minPeriodCntr[channel] == 0))
2389:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2390:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_DBG_MinMeasure[channel].period = tmpPeriod;
2391:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			minPeriodCntr[channel] = 100;
2392:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2393:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		else
2394:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2395:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			minPeriodCntr[channel]--;
2396:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2397:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** #endif
2398:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2399:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((pinIOlevel > 2) && (tmpPeriod >= tmpRef))
2400:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2401:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* period calculation */
2402:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].Measurement.period = tmpPeriod;
2403:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2404:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].TMR_Start = time;
2405:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2406:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Reset  # overflows/underflows */
2407:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].HwTmrTurns = 0;
2408:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2409:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if(TMR_PwdDefinition[channel].noTon)
2410:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2411:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				/* Dummy value set as half period only for compatibility */
2412:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[channel].Measurement.tOn = tmpPeriod/2;
2413:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2414:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			else
2415:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2416:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				/* Sets the falling  edge, in case of inversion ICU_SetModeSync() will provide rising. edge set
2417:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				(void)OCICU_SetModeSync(channel, TMR_CH_IC_NEG_EDGE);
2418:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2419:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[channel].TMR_Status = PWD_SECOND_CAPT_EVENT;
2420:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2421:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2422:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Informs the user that a new measure is ready */
2423:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( PWD_CtrlVar[channel].callback != NULL )
2424:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2425:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				(void)(PWD_CtrlVar[channel].callback)((IO_NotificationType)IO_N_COMPLETED, (IO_ChannelType)chan
2426:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2427:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2428:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2429:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2430:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2431:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		break;
2432:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2433:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	default:
2434:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].TMR_Status = PWD_FIRST_CAPT_EVENT;
2435:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		break;
2436:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2437:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2438:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	SAFETY_DATA_ELEM_UPDATE( PWD_CtrlVar, channel );
2439:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2440:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
2441:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2442:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2443:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function is a local ISR that is called when the hardware timer overflow/underflow comes.
2444:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n This function update number of overflow/underflow.
2445:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2446:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]		notification unused
2447:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]		channel Hardware Timer Id
2448:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	    error unused
2449:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2450:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention \b       PWD_HwTmrTurns[i] is a free running counter
2451:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2452:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
2453:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2454:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID
2455:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK
2456:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2457:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2458:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2459:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_ErrorType OCPWD_HwTmrTurns(IO_NotificationType notification, IO_ChannelType tmdId, IO_Err
2460:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2461:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t i;
2462:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2463:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     (void) notification;
2464:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     (void) error;
2465:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
2466:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for(i=0; i < NUM_HW_CNTR_CH; i++ ) /* per tutti i canali*/
2467:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2468:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* channel belongs to the timer and is in use */
2469:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (TmrChMap[i].hwCntrlId == tmdId && TMR_PwdDefinition[i].in_use)
2470:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2471:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			SAFETY_DATA_ELEM_CHECK(PWD_CtrlVar, i);
2472:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2473:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* increment PWD_HwTmrTurns */
2474:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[i].HwTmrTurns++;
2475:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Check if PWD_HwTmrTurns goes overflow */
2476:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (PWD_CtrlVar[i].HwTmrTurns == 0)
2477:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2478:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				/* Invalid measure - Reset PWD state */
2479:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[i].TMR_Status = PWD_FIRST_CAPT_EVENT;
2480:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				OCICU_SetModeSync(i, TMR_CH_IC_POS_EDGE);
2481:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2482:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2483:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			SAFETY_DATA_ELEM_UPDATE(PWD_CtrlVar, i);
2484:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2485:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2486:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
2487:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2488:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2489:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2490:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n Calculates the time interval between two edge in accordance with the formula:
2491:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n timeInt = lastCapt + nHwTmrTurns*HwTmrModulo - firstCapt
2492:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n where:
2493:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n lastCapt is the last capture in ticks
2494:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n nHwTmrTurn is the number of overflows/underflows of the hardware timer
2495:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n HwTmrModulo is the modulo of the hardware timer
2496:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n firstCapt is the first capture in ticks
2497:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2498:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]		time last capture in ticks
2499:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]		channel id of the PWD channel
2500:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2501:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention \b  possible overflow in calculation
2502:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2503:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	uint32_t
2504:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		interval in ticks
2505:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2506:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2507:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2508:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static uint32_t OCPWD_GetIntervalInTicks(IO_ChannelType channel, IO_HwTimerType time)
2509:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
   9                             		.loc 1 2509 0
  10                             	.LVL0:
2510:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint32_t intervalInTicks=0;
2511:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2512:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( PWD_CtrlVar[channel].HwTmrTurns > 0 ){
  11                             		.loc 1 2512 0
  12 0000 5B 11                   		movu.B	r1, r1
  13 0002 EF 1E                   		mov.L	r1, r14
  14 0004 75 1E 18                		mul	#24, r14
  15 0007 70 EE 00 00 00 00       		add	#_PWD_CtrlVar, r14
  16 000d 59 E3 03                		movu.B	3[r14], r3
  17 0010 61 03                   		cmp	#0, r3
  18 0012 20 2C                   		beq	.L2
  19                             	.LBB14:
2513:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint32_t periodo = pHwCntrCfgTable[TmrChMap[channel].hwCntrlId]->period;
  20                             		.loc 1 2513 0
  21 0014 FF 24 11                		add	r1, r1, r4
  22 0017 70 44 00 00 00 00       		add	#_TmrChMap, r4
  23 001d B0 4B                   		movu.B	1[r4], r3
  24 001f FB 42 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r4
  25 0025 FE 63 44                		mov.L	[r3,r4], r4
  26 0028 B9 C4                   		movu.W	12[r4], r4
  27                             	.LVL1:
2514:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2515:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		intervalInTicks  = (periodo - PWD_CtrlVar[channel].TMR_Start) + time ;
  28                             		.loc 1 2515 0
  29 002a EF 41                   		mov.L	r4, r1
  30                             	.LVL2:
  31 002c 06 C1 E1 06             		sub	12[r14].UW, r1
  32 0030 5F 22                   		movu.W	r2, r2
  33 0032 4B 21                   		add	r2, r1
  34                             	.LVL3:
2516:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		intervalInTicks += (periodo * (PWD_CtrlVar[channel].HwTmrTurns-1) );
  35                             		.loc 1 2516 0
  36 0034 59 EE 03                		movu.B	3[r14], r14
  37 0037 60 1E                   		sub	#1, r14
  38 0039 4F E4                   		mul	r14, r4
  39                             	.LVL4:
  40 003b 4B 41                   		add	r4, r1
  41                             	.LVL5:
  42 003d 02                      		rts
  43                             	.LVL6:
  44                             	.L2:
  45                             	.LBE14:
2517:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}else{
2518:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		intervalInTicks = time - PWD_CtrlVar[channel].TMR_Start;
  46                             		.loc 1 2518 0
  47 003e 5F 21                   		movu.W	r2, r1
  48 0040 06 C1 E1 06             		sub	12[r14].UW, r1
  49                             	.LVL7:
2519:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2520:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return(intervalInTicks);
2521:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
  50                             		.loc 1 2521 0
  51 0044 02                      		rts
  52                             	.LFE54:
  54                             		.section	.text.OCTPM_InitSync,"ax",@progbits
  55                             		.global	_OCTPM_InitSync
  57                             	_OCTPM_InitSync:
  58                             	.LFB0:
 159:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
  59                             		.loc 1 159 0
  60 0000 02                      		rts
  61                             	.LFE0:
  63                             		.section	.text.OCHWCNTR_InitSync,"ax",@progbits
  64                             		.global	_OCHWCNTR_InitSync
  66                             	_OCHWCNTR_InitSync:
  67                             	.LFB1:
 188:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
  68                             		.loc 1 188 0
  69                             	.LVL8:
 188:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
  70                             		.loc 1 188 0
  71 0000 6E 7C                   		pushm	r7-r12
  72                             	.LCFI0:
  73 0002 EF 17                   		mov.L	r1, r7
 193:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfg->hwCntrlId >= NUM_HW_CNTR  )
  74                             		.loc 1 193 0
  75 0004 58 1A                   		movu.B	[r1], r10
  76 0006 61 4A                   		cmp	#4, r10
  77 0008 25 05 38 C3 00          		bgtu	.L11
 199:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmdId = TmrCntMap[pHwCntrCfg->hwCntrlId];
  78                             		.loc 1 199 0
  79 000d FB B2 00 00 00 00       		mov.L	#_TmrCntMap, r11
  80 0013 FE 4A BB                		mov.B	[r10,r11], r11
  81                             	.LVL9:
 201:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
  82                             		.loc 1 201 0
  83 0016 05 00 00 00             		bsr	_OS_DisableInterrupt
  84                             	.LVL10:
  85 001a FB A2 00 00 00 00       		mov.L	#_OS_Global, r10
  86 0020 CD AE 01                		mov.B	1[r10], r14
  87 0023 71 EC 01                		add	#1, r14, r12
  88 0026 C7 AC 01                		mov.B	r12, 1[r10]
 204:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[pHwCntrCfg->hwCntrlId] != NULL)
  89                             		.loc 1 204 0
  90 0029 FB C2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r12
  91 002f 58 74                   		movu.B	[r7], r4
  92 0031 FE 64 C4                		mov.L	[r4,r12], r4
  93 0034 61 04                   		cmp	#0, r4
  94 0036 20 1B                   		beq	.L7
 206:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
  95                             		.loc 1 206 0
  96 0038 C7 AE 01                		mov.B	r14, 1[r10]
  97 003b 76 2E FF 00             		and #0xff, r14
  98 003f 1D                      		bne	.L8
 206:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
  99                             		.loc 1 206 0 is_stmt 0 discriminator 1
 100 0040 05 00 00 00             		bsr	_OS_EnableInterrupt
 101                             	.LVL11:
 102                             		.balign 2,3,1
 103                             	.L8:
 209:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(pHwCntrCfg->options.skipHWcntrConf)
 104                             		.loc 1 209 0 is_stmt 1
 105 0044 A8 F9                   		mov.L	12[r7], r1
 106 0046 6A F1                   		shar	#15, r1
 107 0048 FD 74 D1 01             		xor	#1, r1
 195:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 108                             		.loc 1 195 0
 109 004c 64 11                   		and #1, r1
 110 004e 38 8C 00                		bra	.L6
 111                             	.L7:
 218:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (TMR_CheckClearSourceIdFailed(tmdId, pHwCntrCfg->clearingSourceId))
 112                             		.loc 1 218 0
 113 0051 CF B1                   		mov.B	r11, r1
 114 0053 88 7A                   		mov.B	1[r7], r2
 115 0055 05 00 00 00             		bsr	_TMR_CheckClearSourceIdFailed
 116                             	.LVL12:
 117 0059 61 01                   		cmp	#0, r1
 118 005b 20 16                   		beq	.L9
 220:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 119                             		.loc 1 220 0
 120 005d CD A7 01                		mov.B	1[r10], r7
 121                             	.LVL13:
 122 0060 60 17                   		sub	#1, r7
 123 0062 C7 A7 01                		mov.B	r7, 1[r10]
 124 0065 76 27 FF 00             		and #0xff, r7
 125 0069 21 68                   		bne	.L12
 220:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 126                             		.loc 1 220 0 is_stmt 0 discriminator 1
 127 006b 05 00 00 00             		bsr	_OS_EnableInterrupt
 128                             	.LVL14:
 129 006f 2E 62                   		bra	.L12
 130                             	.LVL15:
 131                             	.L9:
 226:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	clrSrcChId = TMR_GetClearSourceCh(tmdId, pHwCntrCfg->clearingSourceId);
 132                             		.loc 1 226 0 is_stmt 1
 133 0071 CF B1                   		mov.B	r11, r1
 134 0073 88 7A                   		mov.B	1[r7], r2
 135 0075 05 00 00 00             		bsr	_TMR_GetClearSourceCh
 136                             	.LVL16:
 256:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pHwCntrCfgTable[pHwCntrCfg->hwCntrlId] = pHwCntrCfg;
 137                             		.loc 1 256 0
 138 0079 58 7E                   		movu.B	[r7], r14
 139 007b FE 2E C7                		mov.L	r7, [r14,r12]
 266:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 140                             		.loc 1 266 0
 141 007e CD AC 01                		mov.B	1[r10], r12
 142 0081 60 1C                   		sub	#1, r12
 143 0083 C7 AC 01                		mov.B	r12, 1[r10]
 144 0086 76 2C FF 00             		and #0xff, r12
 145 008a 1E                      		bne	.L10
 266:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 146                             		.loc 1 266 0 is_stmt 0 discriminator 1
 147 008b 05 00 00 00             		bsr	_OS_EnableInterrupt
 148                             	.LVL17:
 149 008f 03                      		.balign 2,3,1
 150                             	.L10:
 268:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( pHwCntrCfg->options.skipHWcntrConf )
 151                             		.loc 1 268 0 is_stmt 1
 152 0090 ED 7A 03                		mov.L	12[r7], r10
 153 0093 77 2A 00 80 00          		and	#0x8000, r10
 154 0098 21 3C                   		bne	.L13
 274:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_ClockGate(pHwCntrCfg->hwCntrlId, 1);
 155                             		.loc 1 274 0
 156 009a CC 71                   		mov.B	[r7], r1
 157 009c 66 12                   		mov.L	#1, r2
 158 009e 05 00 00 00             		bsr	_TMR_ClockGate
 159                             	.LVL18:
 277:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetPrescaler(tmdId, pHwCntrCfg->prescaler);
 160                             		.loc 1 277 0
 161 00a2 CF B1                   		mov.B	r11, r1
 162 00a4 89 FA                   		mov.B	7[r7], r2
 163 00a6 05 00 00 00             		bsr	_TMR_SetPrescaler
 164                             	.LVL19:
 280:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetCountDir(tmdId, pHwCntrCfg->countingMode);
 165                             		.loc 1 280 0
 166 00aa CF B1                   		mov.B	r11, r1
 167 00ac 8A 7A                   		mov.B	9[r7], r2
 168 00ae 05 00 00 00             		bsr	_TMR_SetCountDir
 169                             	.LVL20:
 283:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetModulo(tmdId, pHwCntrCfg->period, pHwCntrCfg->clearingSourceId);
 170                             		.loc 1 283 0
 171 00b2 CF B1                   		mov.B	r11, r1
 172 00b4 99 F2                   		mov.W	12[r7], r2
 173 00b6 88 7B                   		mov.B	1[r7], r3
 174 00b8 05 00 00 00             		bsr	_TMR_SetModulo
 175                             	.LVL21:
 287:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( pHwCntrCfg->tickResolution != TMR_GetTickResolution(tmdId))
 176                             		.loc 1 287 0
 177 00bc B9 7F                   		movu.W	10[r7], r7
 178                             	.LVL22:
 179 00be CF B1                   		mov.B	r11, r1
 180 00c0 05 00 00 00             		bsr	_TMR_GetTickResolution
 181                             	.LVL23:
 182 00c4 47 17                   		cmp	r1, r7
 183 00c6 20 11                   		beq	.L14
 289:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return IO_E_INVALID_VALUE;
 184                             		.loc 1 289 0
 185 00c8 75 41 13                		mov	#19, r1
 186 00cb 2E 0F                   		bra	.L6
 187                             	.LVL24:
 188                             	.L11:
 195:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 189                             		.loc 1 195 0
 190 00cd 75 41 12                		mov	#18, r1
 191                             	.LVL25:
 192 00d0 0A                      		bra	.L6
 193                             	.LVL26:
 194                             	.L12:
 221:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNKNOWN_MODE;
 195                             		.loc 1 221 0
 196 00d1 66 31                   		mov	#3, r1
 197 00d3 0F                      		bra	.L6
 198                             	.LVL27:
 199                             	.L13:
 270:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_OK;
 200                             		.loc 1 270 0
 201 00d4 66 01                   		mov	#0, r1
 202 00d6 0C                      		bra	.L6
 203                             	.LVL28:
 204                             	.L14:
 292:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 205                             		.loc 1 292 0
 206 00d7 CF A1                   		mov.B	r10, r1
 207                             	.LVL29:
 208 00d9 03                      		.balign 2,3,2
 209                             	.L6:
 293:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 210                             		.loc 1 293 0
 211 00da 75 21 13                		and #19, r1
 212 00dd 3F 7C 06                		rtsd	#24, r7-r12
 213                             	.LFE1:
 215                             		.section	.text.OCHWCNTR_DeInitSync,"ax",@progbits
 216                             		.global	_OCHWCNTR_DeInitSync
 218                             	_OCHWCNTR_DeInitSync:
 219                             	.LFB2:
 309:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 220                             		.loc 1 309 0
 221 0000 6E 7C                   		pushm	r7-r12
 222                             	.LCFI1:
 223 0002 CF 1C                   		mov.B	r1, r12
 316:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 224                             		.loc 1 316 0
 225 0004 05 00 00 00             		bsr	_OS_DisableInterrupt
 226 0008 FB 72 00 00 00 00       		mov.L	#_OS_Global, r7
 227 000e CD 7B 01                		mov.B	1[r7], r11
 319:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[tmrId] != NULL)
 228                             		.loc 1 319 0
 229 0011 5B CA                   		movu.B	r12, r10
 230 0013 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 231 0019 FE 6A E4                		mov.L	[r10,r14], r4
 232 001c 5B BE                   		movu.B	r11, r14
 321:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 233                             		.loc 1 321 0
 234 001e C7 7B 01                		mov.B	r11, 1[r7]
 319:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[tmrId] != NULL)
 235                             		.loc 1 319 0
 236 0021 61 04                   		cmp	#0, r4
 237 0023 20 6D                   		beq	.L17
 321:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 238                             		.loc 1 321 0
 239 0025 61 0E                   		cmp	#0, r14
 240 0027 1D                      		bne	.L18
 321:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 241                             		.loc 1 321 0 is_stmt 0 discriminator 1
 242 0028 05 00 00 00             		bsr	_OS_EnableInterrupt
 243                             		.balign 2,3,5
 244                             	.L18:
 324:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		halTmrId = TmrCntMap[tmrId];
 245                             		.loc 1 324 0 is_stmt 1
 246 002c FB 72 00 00 00 00       		mov.L	#_TmrCntMap, r7
 247 0032 FE 4A 77                		mov.B	[r10,r7], r7
 327:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_StopClockSource(halTmrId);
 248                             		.loc 1 327 0
 249 0035 CF 71                   		mov.B	r7, r1
 250 0037 05 00 00 00             		bsr	_TMR_StopClockSource
 330:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetPrescalerDfltValue(halTmrId);
 251                             		.loc 1 330 0
 252 003b CF 71                   		mov.B	r7, r1
 253 003d 05 00 00 00             		bsr	_TMR_SetPrescalerDfltValue
 333:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetCountDirDfltValue(halTmrId);
 254                             		.loc 1 333 0
 255 0041 CF 71                   		mov.B	r7, r1
 256 0043 05 00 00 00             		bsr	_TMR_SetCountDirDfltValue
 336:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DisableTI(halTmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 257                             		.loc 1 336 0
 258 0047 FB B2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r11
 259 004d FE 6A BE                		mov.L	[r10,r11], r14
 260 0050 CF 71                   		mov.B	r7, r1
 261 0052 CD E2 01                		mov.B	1[r14], r2
 262 0055 05 00 00 00             		bsr	_TMR_DisableTI
 339:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClearTOF(halTmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 263                             		.loc 1 339 0
 264 0059 FE 6A BE                		mov.L	[r10,r11], r14
 265 005c CF 71                   		mov.B	r7, r1
 266 005e CD E2 01                		mov.B	1[r14], r2
 267 0061 05 00 00 00             		bsr	_TMR_ClearTOF
 342:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetModuloDfltValue(halTmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 268                             		.loc 1 342 0
 269 0065 FE 6A BE                		mov.L	[r10,r11], r14
 270 0068 CF 71                   		mov.B	r7, r1
 271 006a CD E2 01                		mov.B	1[r14], r2
 272 006d 05 00 00 00             		bsr	_TMR_SetModuloDfltValue
 345:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetCounterDfltValue(halTmrId);
 273                             		.loc 1 345 0
 274 0071 CF 71                   		mov.B	r7, r1
 275 0073 05 00 00 00             		bsr	_TMR_SetCounterDfltValue
 348:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClockGate((uint8_t)halTmrId,0);
 276                             		.loc 1 348 0
 277 0077 CF 71                   		mov.B	r7, r1
 278 0079 66 02                   		mov.L	#0, r2
 279 007b 05 00 00 00             		bsr	_TMR_ClockGate
 350:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		clrSrcChId = TMR_GetClearSourceCh(tmrId, pHwCntrCfgTable[tmrId]->clearingSourceId);
 280                             		.loc 1 350 0
 281 007f FE 6A B7                		mov.L	[r10,r11], r7
 282 0082 CF C1                   		mov.B	r12, r1
 283 0084 88 7A                   		mov.B	1[r7], r2
 284 0086 05 00 00 00             		bsr	_TMR_GetClearSourceCh
 375:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pHwCntrCfgTable[tmrId] = (IO_HwCntrCfgType *)NULL;
 285                             		.loc 1 375 0
 286 008a 66 07                   		mov.L	#0, r7
 287 008c FE 2A B7                		mov.L	r7, [r10,r11]
 288 008f 0A                      		bra	.L16
 289                             	.L17:
 378:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 290                             		.loc 1 378 0
 291 0090 61 0E                   		cmp	#0, r14
 292 0092 1F                      		bne	.L16
 382:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 293                             		.loc 1 382 0 discriminator 1
 294 0093 6F 7C                   		popm	r7-r12
 378:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		ExitCriticalSection();
 295                             		.loc 1 378 0 discriminator 1
 296 0095 04 00 00 00             		bra	_OS_EnableInterrupt
 297                             	.L16:
 382:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 298                             		.loc 1 382 0
 299 0099 3F 7C 06                		rtsd	#24, r7-r12
 300                             	.LFE2:
 302                             		.section	.text.OCHWCNTR_GetSync,"ax",@progbits
 303                             		.global	_OCHWCNTR_GetSync
 305                             	_OCHWCNTR_GetSync:
 306                             	.LFB3:
 398:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 307                             		.loc 1 398 0
 308                             	.LVL30:
 309 0000 7E A7                   		push.l	r7
 310                             	.LCFI2:
 402:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[channel];
 311                             		.loc 1 402 0
 312 0002 5B 17                   		movu.B	r1, r7
 313                             	.LVL31:
 403:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	time_nSec = ((IO_TimingValueType)TMR_GetCounter(pTmr_cnt) * pHwCntrCfgTable[channel]->tickResoluti
 314                             		.loc 1 403 0
 315 0004 FB E2 00 00 00 00       		mov.L	#_TmrCntMap, r14
 316 000a FE 47 E1                		mov.B	[r7,r14], r1
 317                             	.LVL32:
 318 000d 05 00 00 00             		bsr	_TMR_GetCounter
 319                             	.LVL33:
 320 0011 5F 11                   		movu.W	r1, r1
 321 0013 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 322 0019 FE 67 E7                		mov.L	[r7,r14], r7
 323                             	.LVL34:
 405:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 324                             		.loc 1 405 0
 325 001c 06 CD 71 05             		mul	10[r7].UW, r1
 326                             	.LVL35:
 327 0020 3F 77 01                		rtsd	#4, r7-r7
 328                             	.LFE3:
 330                             		.section	.text.OCHWCNTR_GetTicksSync,"ax",@progbits
 331                             		.global	_OCHWCNTR_GetTicksSync
 333                             	_OCHWCNTR_GetTicksSync:
 334                             	.LFB4:
 417:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 335                             		.loc 1 417 0
 336                             	.LVL36:
 421:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[timerId];
 337                             		.loc 1 421 0
 338 0000 5B 11                   		movu.B	r1, r1
 422:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerValueInTicks = TMR_GetCounter(pTmr_cnt);
 339                             		.loc 1 422 0
 340 0002 FB E2 00 00 00 00       		mov.L	#_TmrCntMap, r14
 341 0008 FE 41 E1                		mov.B	[r1,r14], r1
 342                             	.LVL37:
 343 000b 04 00 00 00             		bra	_TMR_GetCounter
 344                             	.LVL38:
 345                             	.LFE4:
 347                             		.section	.text.OCHWCNTR_SetSync,"ax",@progbits
 348                             		.global	_OCHWCNTR_SetSync
 350                             	_OCHWCNTR_SetSync:
 351                             	.LFB5:
 447:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 352                             		.loc 1 447 0
 353                             	.LVL39:
 451:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (timerId >= NUM_HW_CNTR)
 354                             		.loc 1 451 0
 355 0000 5B 11                   		movu.B	r1, r1
 356 0002 61 41                   		cmp	#4, r1
 357 0004 24 24                   		bgtu	.L26
 457:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[timerId] == NULL)
 358                             		.loc 1 457 0
 359 0006 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 360 000c FE 61 EE                		mov.L	[r1,r14], r14
 361 000f 61 0E                   		cmp	#0, r14
 362 0011 20 1B                   		beq	.L27
 363                             	.LVL40:
 465:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetCounter(pTmr_cnt, (IO_HwTimerType)(timerValue / pHwCntrCfgTable[timerId]->tickResolution));
 364                             		.loc 1 465 0
 365 0013 FB 42 00 00 00 00       		mov.L	#_TmrCntMap, r4
 366 0019 FE 41 41                		mov.B	[r1,r4], r1
 367                             	.LVL41:
 368 001c 06 E1 09 E2 05          		divu	10[r14].UW, r2
 369                             	.LVL42:
 370 0021 05 00 00 00             		bsr	_TMR_SetCounter
 371                             	.LVL43:
 467:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 372                             		.loc 1 467 0
 373 0025 66 01                   		mov	#0, r1
 374 0027 09                      		bra	.L25
 375                             	.LVL44:
 376                             	.L26:
 453:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 377                             		.loc 1 453 0
 378 0028 75 41 12                		mov	#18, r1
 379 002b 0D                      		bra	.L25
 380                             	.L27:
 459:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 381                             		.loc 1 459 0
 382 002c 75 41 17                		mov	#23, r1
 383                             	.LVL45:
 384 002f 03                      		.balign 2,3,2
 385                             	.L25:
 468:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 386                             		.loc 1 468 0
 387 0030 75 21 17                		and #23, r1
 388 0033 02                      		rts
 389                             	.LFE5:
 391                             		.section	.text.OCHWCNTR_EnableMulti,"ax",@progbits
 392                             		.global	_OCHWCNTR_EnableMulti
 394                             	_OCHWCNTR_EnableMulti:
 395                             	.LFB6:
 472:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 396                             		.loc 1 472 0
 397                             	.LVL46:
 398 0000 7E A7                   		push.l	r7
 399                             	.LCFI3:
 400 0002 EF 17                   		mov.L	r1, r7
 473:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_StopClockSourceMulti(uBmp);
 401                             		.loc 1 473 0
 402 0004 05 00 00 00             		bsr	_TMR_StopClockSourceMulti
 403                             	.LVL47:
 474:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetClockSourceMulti(uBmp);
 404                             		.loc 1 474 0
 405 0008 EF 71                   		mov.L	r7, r1
 475:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 406                             		.loc 1 475 0
 407 000a 7E B7                   		pop	r7
 408                             	.LVL48:
 474:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetClockSourceMulti(uBmp);
 409                             		.loc 1 474 0
 410 000c 04 00 00 00             		bra	_TMR_SetClockSourceMulti
 411                             	.LVL49:
 412                             	.LFE6:
 414                             		.section	.text.OCHWCNTR_Enable,"ax",@progbits
 415                             		.global	_OCHWCNTR_Enable
 417                             	_OCHWCNTR_Enable:
 418                             	.LFB7:
 492:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 419                             		.loc 1 492 0
 496:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (tmrId >= NUM_HW_CNTR)
 420                             		.loc 1 496 0
 421 0000 5B 11                   		movu.B	r1, r1
 422 0002 61 41                   		cmp	#4, r1
 423 0004 24 33                   		bgtu	.L33
 502:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[tmrId] == NULL)
 424                             		.loc 1 502 0
 425 0006 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 426 000c FE 61 EE                		mov.L	[r1,r14], r14
 427 000f 61 0E                   		cmp	#0, r14
 428 0011 20 2A                   		beq	.L34
 492:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 429                             		.loc 1 492 0
 430 0013 7E A7                   		push.l	r7
 431                             	.LCFI4:
 432 0015 EF 27                   		mov.L	r2, r7
 508:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[tmrId];
 433                             		.loc 1 508 0
 434 0017 FB 42 00 00 00 00       		mov.L	#_TmrCntMap, r4
 435 001d FE 41 41                		mov.B	[r1,r4], r1
 510:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (enable)
 436                             		.loc 1 510 0
 437 0020 61 02                   		cmp	#0, r2
 438 0022 20 0D                   		beq	.L32
 512:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_SetClockSource(pTmr_cnt, pHwCntrCfgTable[tmrId]->clockSource);
 439                             		.loc 1 512 0
 440 0024 CD E2 08                		mov.B	8[r14], r2
 441 0027 05 00 00 00             		bsr	_TMR_SetClockSource
 519:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 442                             		.loc 1 519 0
 443 002b 66 01                   		mov	#0, r1
 444 002d 2E 14                   		bra	.L31
 445                             	.L32:
 516:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_StopClockSource(pTmr_cnt);
 446                             		.loc 1 516 0
 447 002f 05 00 00 00             		bsr	_TMR_StopClockSource
 519:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 448                             		.loc 1 519 0
 449 0033 CF 71                   		mov.B	r7, r1
 450 0035 2E 0C                   		bra	.L31
 451                             	.L33:
 452                             	.LCFI5:
 498:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 453                             		.loc 1 498 0
 454 0037 75 41 12                		mov	#18, r1
 455 003a 0C                      		bra	.L36
 456                             	.L34:
 504:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 457                             		.loc 1 504 0
 458 003b 75 41 17                		mov	#23, r1
 459                             		.balign 2,3,1
 460                             	.L36:
 520:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 461                             		.loc 1 520 0
 462 003e 5B 11                   		movu.B	r1, r1
 463 0040 02                      		rts
 464                             	.L31:
 465                             	.LCFI6:
 466 0041 5B 11                   		movu.B	r1, r1
 467 0043 3F 77 01                		rtsd	#4, r7-r7
 468                             	.LFE7:
 470                             		.section	.text.OCHWCNTR_EnableISR,"ax",@progbits
 471                             		.global	_OCHWCNTR_EnableISR
 473                             	_OCHWCNTR_EnableISR:
 474                             	.LFB8:
 539:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 475                             		.loc 1 539 0
 476                             	.LVL50:
 477 0000 6E 7C                   		pushm	r7-r12
 478                             	.LCFI7:
 543:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (tmrId >= NUM_HW_CNTR)
 479                             		.loc 1 543 0
 480 0002 5B 17                   		movu.B	r1, r7
 481 0004 61 47                   		cmp	#4, r7
 482 0006 24 59                   		bgtu	.L41
 483                             	.LBB17:
 484                             	.LBB18:
 549:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pHwCntrCfgTable[tmrId] == NULL)
 485                             		.loc 1 549 0
 486 0008 FB B2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r11
 487 000e FE 67 BE                		mov.L	[r7,r11], r14
 488 0011 61 0E                   		cmp	#0, r14
 489 0013 20 48                   		beq	.L42
 490 0015 EF 2A                   		mov.L	r2, r10
 491 0017 EF 3C                   		mov.L	r3, r12
 555:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[tmrId];
 492                             		.loc 1 555 0
 493 0019 FB B2 00 00 00 00       		mov.L	#_TmrCntMap, r11
 494 001f FE 47 BB                		mov.B	[r7,r11], r11
 495                             	.LVL51:
 557:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!enableISR)
 496                             		.loc 1 557 0
 497 0022 61 02                   		cmp	#0, r2
 498 0024 1A                      		bne	.L40
 559:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	TMR_DisableTI(pTmr_cnt, pHwCntrCfgTable[tmrId]->clearingSourceId);
 499                             		.loc 1 559 0
 500 0025 CF B1                   		mov.B	r11, r1
 501                             	.LVL52:
 502 0027 CD E2 01                		mov.B	1[r14], r2
 503                             	.LVL53:
 504 002a 05 00 00 00             		bsr	_TMR_DisableTI
 505                             	.LVL54:
 506                             		.balign 2,3,5
 507                             	.L40:
 562:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_Callback[tmrId] = callback;
 508                             		.loc 1 562 0
 509 002e FB E2 00 00 00 00       		mov.L	#_TMR_Callback, r14
 510 0034 FE 27 EC                		mov.L	r12, [r7,r14]
 564:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (enableISR)
 511                             		.loc 1 564 0
 512 0037 61 0A                   		cmp	#0, r10
 513 0039 20 1F                   		beq	.L45
 566:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	TMR_ClearTOF(pTmr_cnt, pHwCntrCfgTable[tmrId]->clearingSourceId);
 514                             		.loc 1 566 0
 515 003b FB A2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r10
 516                             	.LVL55:
 517 0041 FE 67 AC                		mov.L	[r7,r10], r12
 518                             	.LVL56:
 519 0044 CF B1                   		mov.B	r11, r1
 520 0046 CD C2 01                		mov.B	1[r12], r2
 521 0049 05 00 00 00             		bsr	_TMR_ClearTOF
 522                             	.LVL57:
 567:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****         	TMR_EnableTI(pTmr_cnt, pHwCntrCfgTable[tmrId]->clearingSourceId);
 523                             		.loc 1 567 0
 524 004d FE 67 A7                		mov.L	[r7,r10], r7
 525                             	.LVL58:
 526 0050 CF B1                   		mov.B	r11, r1
 527 0052 88 7A                   		mov.B	1[r7], r2
 528 0054 05 00 00 00             		bsr	_TMR_EnableTI
 529                             	.LVL59:
 530                             		.balign 2,3,1
 531                             	.L45:
 570:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 532                             		.loc 1 570 0
 533 0058 66 01                   		mov	#0, r1
 534 005a 08                      		bra	.L38
 535                             	.LVL60:
 536                             	.L42:
 551:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 537                             		.loc 1 551 0
 538 005b 75 41 17                		mov	#23, r1
 539                             	.LVL61:
 540 005e 0C                      		bra	.L38
 541                             	.LVL62:
 542                             	.L41:
 543                             	.LBE18:
 544                             	.LBE17:
 545:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 545                             		.loc 1 545 0
 546 005f 75 41 12                		mov	#18, r1
 547                             	.LVL63:
 548                             		.balign 2,3,1
 549                             	.L38:
 571:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 550                             		.loc 1 571 0
 551 0062 5B 11                   		movu.B	r1, r1
 552 0064 3F 7C 06                		rtsd	#24, r7-r12
 553                             	.LFE8:
 555 0067 03                      		.section	.text.OCHWCNTR_GetTickResolution,"ax",@progbits
 556                             		.global	_OCHWCNTR_GetTickResolution
 558                             	_OCHWCNTR_GetTickResolution:
 559                             	.LFB10:
 599:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 560                             		.loc 1 599 0
 561                             	.LVL64:
 601:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return TMR_GetTickResolution( pHwCntrCfgTable[tmrId]->hwCntrlId );	
 562                             		.loc 1 601 0
 563 0000 5B 11                   		movu.B	r1, r1
 564 0002 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 565 0008 FE 61 EE                		mov.L	[r1,r14], r14
 566 000b CC E1                   		mov.B	[r14], r1
 567                             	.LVL65:
 568 000d 05 00 00 00             		bsr	_TMR_GetTickResolution
 569                             	.LVL66:
 605:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 570                             		.loc 1 605 0
 571 0011 5F 11                   		movu.W	r1, r1
 572 0013 02                      		rts
 573                             	.LFE10:
 575                             		.section	.text.OCHWCNTR_GetResolutionByTimerChannel,"ax",@progbits
 576                             		.global	_OCHWCNTR_GetResolutionByTimerChannel
 578                             	_OCHWCNTR_GetResolutionByTimerChannel:
 579                             	.LFB9:
 584:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 580                             		.loc 1 584 0
 581                             	.LVL67:
 585:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return OCHWCNTR_GetTickResolution(TmrChMap[ch].hwCntrlId);
 582                             		.loc 1 585 0
 583 0000 5B 11                   		movu.B	r1, r1
 584 0002 4B 11                   		add	r1, r1
 585                             	.LVL68:
 586 0004 70 11 00 00 00 00       		add	#_TmrChMap, r1
 587 000a 88 19                   		mov.B	1[r1], r1
 588 000c 04 00 00 00             		bra	_OCHWCNTR_GetTickResolution
 589                             	.LVL69:
 590                             	.LFE9:
 592                             		.section	.text.OCHWCNTR_GetTimerModulus,"ax",@progbits
 593                             		.global	_OCHWCNTR_GetTimerModulus
 595                             	_OCHWCNTR_GetTimerModulus:
 596                             	.LFB11:
 618:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 597                             		.loc 1 618 0
 598                             	.LVL70:
 619:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (pHwCntrCfgTable[tmrId]->period);
 599                             		.loc 1 619 0
 600 0000 5B 11                   		movu.B	r1, r1
 601 0002 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 602 0008 FE 61 EE                		mov.L	[r1,r14], r14
 620:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 603                             		.loc 1 620 0
 604 000b 5D E1 06                		movu.W	12[r14], r1
 605                             	.LVL71:
 606 000e 02                      		rts
 607                             	.LFE11:
 609                             		.section	.text.OCHWCNTR_GetPeriod,"ax",@progbits
 610                             		.global	_OCHWCNTR_GetPeriod
 612                             	_OCHWCNTR_GetPeriod:
 613                             	.LFB12:
 630:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 614                             		.loc 1 630 0
 615                             	.LVL72:
 631:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (pHwCntrCfgTable[tmrId]->period * pHwCntrCfgTable[tmrId]->tickResolution );
 616                             		.loc 1 631 0
 617 0000 5B 11                   		movu.B	r1, r1
 618 0002 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 619 0008 FE 61 EE                		mov.L	[r1,r14], r14
 620 000b 5D E1 06                		movu.W	12[r14], r1
 621                             	.LVL73:
 632:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 622                             		.loc 1 632 0
 623 000e 06 CD E1 05             		mul	10[r14].UW, r1
 624 0012 02                      		rts
 625                             	.LFE12:
 627                             		.section	.text.OCHWCNTR_GetMaxPeriod,"ax",@progbits
 628                             		.global	_OCHWCNTR_GetMaxPeriod
 630                             	_OCHWCNTR_GetMaxPeriod:
 631                             	.LFB13:
 640:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 632                             		.loc 1 640 0
 633                             	.LVL74:
 641:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	 return( (IO_TimingValueType)pHwCntrCfgTable[tmrId]->tickResolution * 0xFFFF ); /*MS TODO: definir
 634                             		.loc 1 641 0
 635 0000 5B 11                   		movu.B	r1, r1
 636 0002 FB E2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r14
 637 0008 FE 61 EE                		mov.L	[r1,r14], r14
 638 000b 5D E1 05                		movu.W	10[r14], r1
 639                             	.LVL75:
 642:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 640                             		.loc 1 642 0
 641 000e 77 11 FF FF 00          		mul	#0xffff, r1
 642 0013 02                      		rts
 643                             	.LFE13:
 645                             		.section	.text.OCHWCNTR_GetDelta,"ax",@progbits
 646                             		.global	_OCHWCNTR_GetDelta
 648                             	_OCHWCNTR_GetDelta:
 649                             	.LFB14:
 653:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 650                             		.loc 1 653 0
 651                             	.LVL76:
 654:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return TMR_GetDelta(TmrCntMap[tmrId], CntrVal_OLD, CntrVal_CURR);
 652                             		.loc 1 654 0
 653 0000 5B 11                   		movu.B	r1, r1
 654 0002 FB E2 00 00 00 00       		mov.L	#_TmrCntMap, r14
 655 0008 FE 41 E1                		mov.B	[r1,r14], r1
 656                             	.LVL77:
 657 000b 04 00 00 00             		bra	_TMR_GetDelta
 658                             	.LVL78:
 659                             	.LFE14:
 661                             		.section	.text.HWCNTR_ISR,"ax",@progbits
 662                             		.global	_HWCNTR_ISR
 664                             	_HWCNTR_ISR:
 665                             	.LFB15:
 666:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 666                             		.loc 1 666 0
 667                             	.LVL79:
 668 0000 6E 7B                   		pushm	r7-r11
 669                             	.LCFI8:
 670 0002 CF 1A                   		mov.B	r1, r10
 667:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_ENTER();
 671                             		.loc 1 667 0
 672 0004 05 00 00 00             		bsr	_LIB_IRQMonitor_Enter
 673                             	.LVL80:
 669:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( tmrID < NUM_HW_CNTR )
 674                             		.loc 1 669 0
 675 0008 5B A7                   		movu.B	r10, r7
 676 000a 61 47                   		cmp	#4, r7
 677 000c 24 32                   		bgtu	.L53
 678                             	.LBB19:
 672:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CNTAddressType pTmr_cnt = TmrCntMap[tmrID];
 679                             		.loc 1 672 0
 680 000e FB B2 00 00 00 00       		mov.L	#_TmrCntMap, r11
 681 0014 FE 47 BB                		mov.B	[r7,r11], r11
 682                             	.LVL81:
 674:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(TMR_Callback[tmrID] != 0)
 683                             		.loc 1 674 0
 684 0017 FB E2 00 00 00 00       		mov.L	#_TMR_Callback, r14
 685 001d FE 67 EE                		mov.L	[r7,r14], r14
 686 0020 61 0E                   		cmp	#0, r14
 687 0022 12                      		beq	.L54
 677:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)(TMR_Callback)[tmrID]((IO_NotificationType)IO_N_COMPLETED, (IO_ChannelType)tmrID, (IO_Erro
 688                             		.loc 1 677 0
 689 0023 66 61                   		mov	#6, r1
 690 0025 CF A2                   		mov.B	r10, r2
 691 0027 66 03                   		mov	#0, r3
 692 0029 7F 1E                   		jsr	r14
 693                             	.LVL82:
 694 002b 03                      		.balign 2,3,5
 695                             	.L54:
 681:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     	TMR_ClearTOF(pTmr_cnt, pHwCntrCfgTable[tmrID]->clearingSourceId);
 696                             		.loc 1 681 0
 697 002c FB A2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r10
 698                             	.LVL83:
 699 0032 FE 67 A7                		mov.L	[r7,r10], r7
 700                             	.LVL84:
 701 0035 CF B1                   		mov.B	r11, r1
 702 0037 88 7A                   		mov.B	1[r7], r2
 703 0039 05 00 00 00             		bsr	_TMR_ClearTOF
 704                             	.LVL85:
 705 003d 03                      		.balign 2,3,1
 706                             	.L53:
 707                             	.LBE19:
 716:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 708                             		.loc 1 716 0
 709 003e 6F 7B                   		popm	r7-r11
 684:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_EXIT();
 710                             		.loc 1 684 0
 711 0040 04 00 00 00             		bra	_LIB_IRQMonitor_Exit
 712                             	.LVL86:
 713                             	.LFE15:
 715                             		.section	.text.OCHWCNTR_Trigger,"ax",@progbits
 716                             		.global	_OCHWCNTR_Trigger
 718                             	_OCHWCNTR_Trigger:
 719                             	.LFB16:
 722:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 720                             		.loc 1 722 0
 721                             	.LVL87:
 722 0000 6E 7B                   		pushm	r7-r11
 723                             	.LCFI9:
 724:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((triggID>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 724                             		.loc 1 724 0
 725 0002 71 1A 00                		add	#0, r1, r10
 726 0005 11                      		beq	.L60
 724:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((triggID>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 727                             		.loc 1 724 0 is_stmt 0 discriminator 1
 728 0006 75 41 52                		mov.L	#0x52, r1
 729                             	.LVL88:
 730 0009 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 731                             	.LVL89:
 732 000d 03                      		.balign 2,3,1
 733                             	.L60:
 722:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 734                             		.loc 1 722 0 is_stmt 1 discriminator 1
 735 000e 66 07                   		mov.L	#0, r7
 728:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CntTrigVal[i][triggID]=OCHWCNTR_GetTicksSync(i);
 736                             		.loc 1 728 0 discriminator 1
 737 0010 FB B2 00 00 00 00       		mov.L	#_TMR_CntTrigVal, r11
 738                             	.LVL90:
 739                             		.balign 2,3,1
 740                             	.L61:
 728:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CntTrigVal[i][triggID]=OCHWCNTR_GetTicksSync(i);
 741                             		.loc 1 728 0 is_stmt 0 discriminator 2
 742 0016 CF 71                   		mov.B	r7, r1
 743 0018 05 00 00 00             		bsr	_OCHWCNTR_GetTicksSync
 744                             	.LVL91:
 745 001c FF 2E 7A                		add	r7, r10, r14
 746 001f FE 1E B1                		mov.W	r1, [r14,r11]
 726:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for(i=0; i<(int)(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]));i++)
 747                             		.loc 1 726 0 is_stmt 1 discriminator 2
 748 0022 62 17                   		add	#1, r7
 749                             	.LVL92:
 750 0024 61 57                   		cmp	#5, r7
 751 0026 21 F0                   		bne	.L61
 730:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 752                             		.loc 1 730 0
 753 0028 3F 7B 05                		rtsd	#20, r7-r11
 754                             	.LFE16:
 756 002b 03                      		.section	.text.OCICU_InitSync,"ax",@progbits
 757                             		.global	_OCICU_InitSync
 759                             	_OCICU_InitSync:
 760                             	.LFB17:
 754:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 761                             		.loc 1 754 0
 762                             	.LVL93:
 759:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pICU_Cfg -> ICU_Id >= NUM_HW_CNTR_CH)
 763                             		.loc 1 759 0
 764 0000 58 1E                   		movu.B	[r1], r14
 765 0002 61 8E                   		cmp	#8, r14
 766 0004 24 34                   		bgtu	.L69
 765:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( pHwCntrCfgTable[TmrChMap[pICU_Cfg -> ICU_Id].hwCntrlId] == NULL )
 767                             		.loc 1 765 0
 768 0006 4B EE                   		add	r14, r14
 769 0008 70 E4 00 00 00 00       		add	#_TmrChMap, r14, r4
 770 000e B0 4B                   		movu.B	1[r4], r3
 771 0010 FB 42 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r4
 772 0016 FE 63 44                		mov.L	[r3,r4], r4
 773 0019 61 04                   		cmp	#0, r4
 774 001b 20 21                   		beq	.L70
 789:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_IcuDefinition[pICU_Cfg->ICU_Id] = *pICU_Cfg;
 775                             		.loc 1 789 0
 776 001d 70 EE 00 00 00 00       		add	#_TMR_IcuDefinition, r14
 777 0023 D0 1E                   		mov.W	[r1], [r14]
 778                             	.LVL94:
 793:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[pICU_Cfg->ICU_Id].Channel;
 779                             		.loc 1 793 0
 780 0025 58 1E                   		movu.B	[r1], r14
 781 0027 4B EE                   		add	r14, r14
 782 0029 70 EE 00 00 00 00       		add	#_TmrChMap, r14
 796:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelInputChapture(pTmr_ch);
 783                             		.loc 1 796 0
 784 002f CC E1                   		mov.B	[r14], r1
 785                             	.LVL95:
 786 0031 05 00 00 00             		bsr	_TMR_SetChannelInputChapture
 787                             	.LVL96:
 798:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 788                             		.loc 1 798 0
 789 0035 66 01                   		mov	#0, r1
 790 0037 09                      		bra	.L68
 791                             	.LVL97:
 792                             	.L69:
 761:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 793                             		.loc 1 761 0
 794 0038 75 41 12                		mov	#18, r1
 795                             	.LVL98:
 796 003b 0D                      		bra	.L68
 797                             	.LVL99:
 798                             	.L70:
 767:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 799                             		.loc 1 767 0
 800 003c 75 41 17                		mov	#23, r1
 801                             	.LVL100:
 802 003f 03                      		.balign 2,3,2
 803                             	.L68:
 799:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 804                             		.loc 1 799 0
 805 0040 75 21 17                		and #23, r1
 806 0043 02                      		rts
 807                             	.LFE17:
 809                             		.section	.text.OCICU_DeInitSync,"ax",@progbits
 810                             		.global	_OCICU_DeInitSync
 812                             	_OCICU_DeInitSync:
 813                             	.LFB18:
 812:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 814                             		.loc 1 812 0
 815                             	.LVL101:
 816:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 816                             		.loc 1 816 0
 817 0000 5B 11                   		movu.B	r1, r1
 818 0002 61 81                   		cmp	#8, r1
 819 0004 24 1C                   		bgtu	.L73
 832:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		(void)memset (&TMR_IcuDefinition[channel], 0, sizeof(IO_ICU_CfgType));
 820                             		.loc 1 832 0
 821 0006 4B 11                   		add	r1, r1
 822                             	.LVL102:
 823 0008 70 1E 00 00 00 00       		add	#_TMR_IcuDefinition, r1, r14
 824 000e F8 E5 00                		mov.W	#0, [r14]
 825                             	.LVL103:
 836:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pTmr_ch = TmrChMap[channel].Channel;
 826                             		.loc 1 836 0
 827 0011 70 11 00 00 00 00       		add	#_TmrChMap, r1
 838:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DeInitChannel(pTmr_ch);
 828                             		.loc 1 838 0
 829 0017 CC 11                   		mov.B	[r1], r1
 830 0019 05 00 00 00             		bsr	_TMR_DeInitChannel
 831                             	.LVL104:
 848:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 832                             		.loc 1 848 0
 833 001d 66 01                   		mov	#0, r1
 834 001f 0D                      		bra	.L72
 835                             	.LVL105:
 836                             	.L73:
 818:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 837                             		.loc 1 818 0
 838 0020 75 41 12                		mov	#18, r1
 839 0023 03                      		.balign 2,3,2
 840                             	.L72:
 849:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 841                             		.loc 1 849 0
 842 0024 75 21 12                		and #18, r1
 843 0027 02                      		rts
 844                             	.LFE18:
 846                             		.section	.text.OCICU_GetSync,"ax",@progbits
 847                             		.global	_OCICU_GetSync
 849                             	_OCICU_GetSync:
 850                             	.LFB19:
 861:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 851                             		.loc 1 861 0
 852                             	.LVL106:
 853 0000 6E 7A                   		pushm	r7-r10
 854                             	.LCFI10:
 865:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 855                             		.loc 1 865 0
 856 0002 5B 11                   		movu.B	r1, r1
 857                             	.LVL107:
 858 0004 4B 11                   		add	r1, r1
 859                             	.LVL108:
 860 0006 70 17 00 00 00 00       		add	#_TmrChMap, r1, r7
 867:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_TimingValueType)TMR_GetChValue(pTmr_ch) * OCHWCNTR_GetTickResolution(TmrChMap[channel].
 861                             		.loc 1 867 0
 862 000c CC 71                   		mov.B	[r7], r1
 863 000e 05 00 00 00             		bsr	_TMR_GetChValue
 864                             	.LVL109:
 865 0012 DF 1A                   		mov.W	r1, r10
 866 0014 88 79                   		mov.B	1[r7], r1
 867 0016 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 868                             	.LVL110:
 869 001a 5F 11                   		movu.W	r1, r1
 870 001c 5F AA                   		movu.W	r10, r10
 868:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 871                             		.loc 1 868 0
 872 001e 4F A1                   		mul	r10, r1
 873 0020 3F 7A 04                		rtsd	#16, r7-r10
 874                             	.LFE19:
 876                             		.section	.text.OCICU_GetTickSync,"ax",@progbits
 877                             		.global	_OCICU_GetTickSync
 879                             	_OCICU_GetTickSync:
 880                             	.LFB20:
 881:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 881                             		.loc 1 881 0
 882                             	.LVL111:
 885:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 883                             		.loc 1 885 0
 884 0000 5B 11                   		movu.B	r1, r1
 885 0002 4B 11                   		add	r1, r1
 886                             	.LVL112:
 887 0004 70 11 00 00 00 00       		add	#_TmrChMap, r1
 887:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return TMR_GetChValue( pTmr_ch );
 888                             		.loc 1 887 0
 889 000a CC 11                   		mov.B	[r1], r1
 890 000c 04 00 00 00             		bra	_TMR_GetChValue
 891                             	.LVL113:
 892                             	.LFE20:
 894                             		.section	.text.OCICU_SetModeSync,"ax",@progbits
 895                             		.global	_OCICU_SetModeSync
 897                             	_OCICU_SetModeSync:
 898                             	.LFB21:
 906:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 899                             		.loc 1 906 0
 900                             	.LVL114:
 910:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 901                             		.loc 1 910 0
 902 0000 5B 11                   		movu.B	r1, r1
 903 0002 61 81                   		cmp	#8, r1
 904 0004 24 1C                   		bgtu	.L79
 905                             	.LVL115:
 906                             	.LBB22:
 907                             	.LBB23:
 930:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 908                             		.loc 1 930 0
 909 0006 4B 11                   		add	r1, r1
 910                             	.LVL116:
 911 0008 70 14 00 00 00 00       		add	#_TmrChMap, r1, r4
 932:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelEdgeMode(pTmr_ch, mode, TMR_IcuDefinition[channel].inverted);
 912                             		.loc 1 932 0
 913 000e 70 1E 00 00 00 00       		add	#_TMR_IcuDefinition, r1, r14
 914 0014 CC 41                   		mov.B	[r4], r1
 915 0016 59 E3 01                		movu.B	1[r14], r3
 916 0019 05 00 00 00             		bsr	_TMR_SetChannelEdgeMode
 917                             	.LVL117:
 918 001d 66 01                   		mov	#0, r1
 919 001f 0D                      		bra	.L78
 920                             	.LVL118:
 921                             	.L79:
 922                             	.LBE23:
 923                             	.LBE22:
 912:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 924                             		.loc 1 912 0
 925 0020 75 41 12                		mov	#18, r1
 926                             	.LVL119:
 927 0023 03                      		.balign 2,3,2
 928                             	.L78:
 935:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 929                             		.loc 1 935 0
 930 0024 75 21 12                		and #18, r1
 931 0027 02                      		rts
 932                             	.LFE21:
 934                             		.section	.text.OCPWD_EdgeTime,"ax",@progbits
 936                             	_OCPWD_EdgeTime:
 937                             	.LFB52:
2229:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 938                             		.loc 1 2229 0
 939                             	.LVL120:
 940 0000 6E 7D                   		pushm	r7-r13
 941                             	.LCFI11:
 942 0002 CF 2B                   		mov.B	r2, r11
2230:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t hwTmrID = TmrChMap[channel].hwCntrlId;
 943                             		.loc 1 2230 0
 944 0004 5B 27                   		movu.B	r2, r7
 945 0006 FF 2A 77                		add	r7, r7, r10
 946 0009 70 AC 00 00 00 00       		add	#_TmrChMap, r10, r12
 947 000f 59 C9 01                		movu.B	1[r12], r9
 948                             	.LVL121:
2239:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	time = OCICU_GetTickSync(channel); 
 949                             		.loc 1 2239 0
 950 0012 CF 21                   		mov.B	r2, r1
 951                             	.LVL122:
 952 0014 05 00 00 00             		bsr	_OCICU_GetTickSync
 953                             	.LVL123:
 954 0018 DF 1D                   		mov.W	r1, r13
 955                             	.LVL124:
2244:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     turnPendingFlag = TMR_GetTOF(TmrCntMap[hwTmrID], channel);
 956                             		.loc 1 2244 0
 957 001a FB C2 00 00 00 00       		mov.L	#_TmrCntMap, r12
 958                             	.LVL125:
 959 0020 FE 49 C1                		mov.B	[r9,r12], r1
 960                             	.LVL126:
 961 0023 CF B2                   		mov.B	r11, r2
 962 0025 05 00 00 00             		bsr	_TMR_GetTOF
 963                             	.LVL127:
 964 0029 EF 18                   		mov.L	r1, r8
 965                             	.LVL128:
2254:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!TMR_PwdDefinition[channel].noTon)
 966                             		.loc 1 2254 0
 967 002b 70 AA 00 00 00 00       		add	#_TMR_PwdDefinition, r10
 968                             	.LVL129:
 969 0031 59 AC 01                		movu.B	1[r10], r12
 970 0034 68 5C                   		shlr	#5, r12
 971 0036 64 1C                   		and	#1, r12
 972 0038 21 31                   		bne	.L81
 973 003a 66 5A                   		mov	#5, r10
 974                             	.LVL130:
 975                             		.balign 2,3,5
 976                             	.L82:
 977                             	.LBB24:
2260:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pinIOlevel += OCDIO_GetIOMapPinValueSync(&TmrChToPinMap[0], channel);
 978                             		.loc 1 2260 0 discriminator 2
 979 003c FB 12 00 00 00 00       		mov.L	#_TmrChToPinMap, r1
 980 0042 CF B2                   		mov.B	r11, r2
 981 0044 05 00 00 00             		bsr	_OCDIO_GetIOMapPinValueSync
 982                             	.LVL131:
 983 0048 4B 1C                   		add	r1, r12
 984                             	.LVL132:
 985 004a 60 1A                   		sub	#1, r10
2258:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		for (i=0; i < 5; i++)
 986                             		.loc 1 2258 0 discriminator 2
 987 004c 5B AE                   		movu.B	r10, r14
 988 004e 61 0E                   		cmp	#0, r14
 989 0050 21 EC                   		bne	.L82
2264:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (TMR_PwdDefinition[channel].inverted)
 990                             		.loc 1 2264 0
 991 0052 FF 2A 77                		add	r7, r7, r10
 992 0055 70 AA 00 00 00 00       		add	#_TMR_PwdDefinition, r10
 993 005b 59 AA 01                		movu.B	1[r10], r10
 994 005e 68 7A                   		shlr	#7, r10
 995 0060 20 20                   		beq	.L83
2266:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pinIOlevel = 5 - pinIOlevel;
 996                             		.loc 1 2266 0
 997 0062 66 5A                   		mov.L	#5, r10
 998 0064 FF 0C CA                		sub	r12, r10, r12
 999                             	.LVL133:
 1000 0067 2E 19                   		bra	.L83
 1001                             	.LVL134:
 1002                             	.L81:
 1003                             	.LBE24:
2272:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (PWD_CtrlVar[channel].TMR_Status != PWD_SECOND_CAPT_EVENT)
 1004                             		.loc 1 2272 0
 1005 0069 EF 7A                   		mov.L	r7, r10
 1006                             	.LVL135:
 1007 006b 75 1A 18                		mul	#24, r10
 1008 006e 70 AA 00 00 00 00       		add	#_PWD_CtrlVar, r10
 1009 0074 59 AA 02                		movu.B	2[r10], r10
 1010 0077 61 1A                   		cmp	#1, r10
 1011 0079 1C                      		bne	.L98
2234:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t pinIOlevel=0;
 1012                             		.loc 1 2234 0
 1013 007a 66 0C                   		mov	#0, r12
 1014 007c 0C                      		bra	.L83
 1015                             	.L98:
2274:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pinIOlevel = 5;
 1016                             		.loc 1 2274 0
 1017 007d 66 5C                   		mov	#5, r12
 1018                             	.LVL136:
 1019 007f 03                      		.balign 2,3,1
 1020                             	.L83:
2278:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (turnPendingFlag && ( time < pHwCntrCfgTable[TmrChMap[channel].hwCntrlId]->period/2 ) )
 1021                             		.loc 1 2278 0
 1022 0080 61 08                   		cmp	#0, r8
 1023 0082 20 2F                   		beq	.L84
2278:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (turnPendingFlag && ( time < pHwCntrCfgTable[TmrChMap[channel].hwCntrlId]->period/2 ) )
 1024                             		.loc 1 2278 0 is_stmt 0 discriminator 1
 1025 0084 FB A2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r10
 1026 008a FE 69 AA                		mov.L	[r9,r10], r10
 1027 008d 5D AA 06                		movu.W	12[r10], r10
 1028 0090 5F DE                   		movu.W	r13, r14
 1029 0092 68 1A                   		shlr	#1, r10
 1030 0094 47 AE                   		cmp	r10, r14
 1031 0096 22 1B                   		bgeu	.L84
2282:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].HwTmrTurns++;
 1032                             		.loc 1 2282 0 is_stmt 1
 1033 0098 EF 7A                   		mov.L	r7, r10
 1034 009a 75 1A 18                		mul	#24, r10
 1035 009d 70 AA 00 00 00 00       		add	#_PWD_CtrlVar, r10
 1036 00a3 CD AE 03                		mov.B	3[r10], r14
 1037 00a6 62 1E                   		add	#1, r14
 1038 00a8 C7 AE 03                		mov.B	r14, 3[r10]
2284:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].DecHwTmrTurns = TRUE;
 1039                             		.loc 1 2284 0
 1040 00ab F9 A4 04 01             		mov.B	#1, 4[r10]
 1041 00af 2E 21                   		bra	.L85
 1042                             	.L84:
2291:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( TRUE == PWD_CtrlVar[channel].DecHwTmrTurns )
 1043                             		.loc 1 2291 0
 1044 00b1 EF 7A                   		mov.L	r7, r10
 1045 00b3 75 1A 18                		mul	#24, r10
 1046 00b6 70 AA 00 00 00 00       		add	#_PWD_CtrlVar, r10
 1047 00bc 59 AE 04                		movu.B	4[r10], r14
 1048 00bf 61 1E                   		cmp	#1, r14
 1049 00c1 21 0F                   		bne	.L85
2293:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].HwTmrTurns--;
 1050                             		.loc 1 2293 0
 1051 00c3 CD AE 03                		mov.B	3[r10], r14
 1052 00c6 60 1E                   		sub	#1, r14
 1053 00c8 C7 AE 03                		mov.B	r14, 3[r10]
2294:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].DecHwTmrTurns = FALSE;
 1054                             		.loc 1 2294 0
 1055 00cb F9 A4 04 00             		mov.B	#0, 4[r10]
 1056 00cf 03                      		.balign 2,3,1
 1057                             	.L85:
2298:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	switch(PWD_CtrlVar[channel].TMR_Status)
 1058                             		.loc 1 2298 0
 1059 00d0 EF 7A                   		mov.L	r7, r10
 1060 00d2 75 1A 18                		mul	#24, r10
 1061 00d5 70 AA 00 00 00 00       		add	#_PWD_CtrlVar, r10
 1062 00db CD A9 02                		mov.B	2[r10], r9
 1063 00de 5B 9E                   		movu.B	r9, r14
 1064 00e0 61 1E                   		cmp	#1, r14
 1065 00e2 20 45                   		beq	.L88
 1066 00e4 61 0E                   		cmp	#0, r14
 1067 00e6 10                      		beq	.L87
 1068 00e7 61 2E                   		cmp	#2, r14
 1069 00e9 3B E0 00                		bne	.L109
 1070 00ec 2E 66                   		bra	.L89
 1071                             	.L87:
2302:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].TMR_Start = time;
 1072                             		.loc 1 2302 0
 1073 00ee D7 AD 06                		mov.W	r13, 12[r10]
2305:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if(TMR_PwdDefinition[channel].noTon)
 1074                             		.loc 1 2305 0
 1075 00f1 FF 2D 77                		add	r7, r7, r13
 1076                             	.LVL137:
 1077 00f4 70 DD 00 00 00 00       		add	#_TMR_PwdDefinition, r13
 1078 00fa 59 DD 01                		movu.B	1[r13], r13
 1079 00fd 7C 5D                   		btst #5, r13
 1080 00ff 17                      		beq	.L90
2307:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].TMR_Status = PWD_THIRD_CAPT_EVENT;
 1081                             		.loc 1 2307 0
 1082 0100 F9 A4 02 02             		mov.B	#2, 2[r10]
 1083 0104 2E 14                   		bra	.L91
 1084                             	.L90:
2311:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (pinIOlevel > 2)
 1085                             		.loc 1 2311 0
 1086 0106 5B CC                   		movu.B	r12, r12
 1087 0108 61 2C                   		cmp	#2, r12
 1088 010a 25 0E                   		bleu	.L91
2313:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				(void)OCICU_SetModeSync(channel, TMR_CH_IC_NEG_EDGE);
 1089                             		.loc 1 2313 0
 1090 010c CF B1                   		mov.B	r11, r1
 1091 010e 66 22                   		mov	#2, r2
 1092 0110 05 00 00 00             		bsr	_OCICU_SetModeSync
 1093                             	.LVL138:
2314:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[channel].TMR_Status = PWD_SECOND_CAPT_EVENT;
 1094                             		.loc 1 2314 0
 1095 0114 F9 A4 02 01             		mov.B	#1, 2[r10]
 1096                             	.LVL139:
 1097                             		.balign 2,3,2
 1098                             	.L91:
2318:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].HwTmrTurns = 0;
 1099                             		.loc 1 2318 0
 1100 0118 75 17 18                		mul	#24, r7
 1101                             	.LVL140:
 1102 011b 70 77 00 00 00 00       		add	#_PWD_CtrlVar, r7
 1103 0121 3C 73 00                		mov.B	#0, 3[r7]
2327:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		break;
 1104                             		.loc 1 2327 0
 1105 0124 38 AA 00                		bra	.L92
 1106                             	.LVL141:
 1107                             	.L88:
 1108                             	.LBB25:
2331:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint32_t tmpPeriod = OCPWD_GetIntervalInTicks(channel,time);
 1109                             		.loc 1 2331 0
 1110 0127 CF B1                   		mov.B	r11, r1
 1111 0129 DF D2                   		mov.W	r13, r2
 1112 012b 05 00 00 00             		bsr	_OCPWD_GetIntervalInTicks
 1113                             	.LVL142:
2355:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( ( tmpPeriod >= PWD_CtrlVar[channel].TMR_Filter) && (pinIOlevel <= 2))
 1114                             		.loc 1 2355 0
 1115 012f 06 C5 A1 07             		cmp	14[r10].UW, r1
 1116 0133 22 05 38 99 00          		bltu	.L92
2355:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( ( tmpPeriod >= PWD_CtrlVar[channel].TMR_Filter) && (pinIOlevel <= 2))
 1117                             		.loc 1 2355 0 is_stmt 0 discriminator 1
 1118 0138 5B CC                   		movu.B	r12, r12
 1119 013a 61 2C                   		cmp	#2, r12
 1120 013c 25 05 38 90 00          		bgtu	.L92
2358:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].Measurement.tOn = tmpPeriod;
 1121                             		.loc 1 2358 0 is_stmt 1
 1122 0141 E7 A1 05                		mov.L	r1, 20[r10]
2360:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)OCICU_SetModeSync(channel, TMR_CH_IC_POS_EDGE);
 1123                             		.loc 1 2360 0
 1124 0144 CF B1                   		mov.B	r11, r1
 1125                             	.LVL143:
 1126 0146 CF 92                   		mov.B	r9, r2
 1127 0148 05 00 00 00             		bsr	_OCICU_SetModeSync
 1128                             	.LVL144:
2362:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].TMR_Status = PWD_THIRD_CAPT_EVENT;
 1129                             		.loc 1 2362 0
 1130 014c F9 A4 02 02             		mov.B	#2, 2[r10]
 1131 0150 2E 7E                   		bra	.L92
 1132                             	.L89:
 1133                             	.LBE25:
 1134                             	.LBB26:
2369:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint32_t tmpPeriod = OCPWD_GetIntervalInTicks(channel,time);
 1135                             		.loc 1 2369 0
 1136 0152 CF B1                   		mov.B	r11, r1
 1137 0154 DF D2                   		mov.W	r13, r2
 1138 0156 05 00 00 00             		bsr	_OCPWD_GetIntervalInTicks
 1139                             	.LVL145:
2370:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		uint32_t tmpRef = PWD_CtrlVar[channel].TMR_Filter;
 1140                             		.loc 1 2370 0
 1141 015a 5D AE 07                		movu.W	14[r10], r14
 1142                             	.LVL146:
2372:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (!TMR_PwdDefinition[channel].noTon)
 1143                             		.loc 1 2372 0
 1144 015d FF 24 77                		add	r7, r7, r4
 1145 0160 70 44 00 00 00 00       		add	#_TMR_PwdDefinition, r4
 1146 0166 B0 4C                   		movu.B	1[r4], r4
 1147 0168 68 54                   		shlr	#5, r4
 1148 016a 64 14                   		and #1, r4
 1149 016c 5B 43                   		movu.B	r4, r3
 1150 016e 61 03                   		cmp	#0, r3
 1151 0170 1E                      		bne	.L95
2374:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmpRef += PWD_CtrlVar[channel].Measurement.tOn;
 1152                             		.loc 1 2374 0
 1153 0171 06 89 AE 05             		add	20[r10].L, r14
 1154                             	.LVL147:
 1155 0175 03                      		.balign 2,3,1
 1156                             	.L95:
2399:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((pinIOlevel > 2) && (tmpPeriod >= tmpRef))
 1157                             		.loc 1 2399 0
 1158 0176 5B CC                   		movu.B	r12, r12
 1159 0178 61 2C                   		cmp	#2, r12
 1160 017a 25 54                   		bleu	.L92
2399:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ((pinIOlevel > 2) && (tmpPeriod >= tmpRef))
 1161                             		.loc 1 2399 0 is_stmt 0 discriminator 1
 1162 017c 47 E1                   		cmp	r14, r1
 1163 017e 23 50                   		bltu	.L92
2402:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].Measurement.period = tmpPeriod;
 1164                             		.loc 1 2402 0 is_stmt 1
 1165 0180 EF 7A                   		mov.L	r7, r10
 1166 0182 75 1A 18                		mul	#24, r10
 1167 0185 70 AA 00 00 00 00       		add	#_PWD_CtrlVar, r10
 1168 018b E7 A1 04                		mov.L	r1, 16[r10]
2404:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].TMR_Start = time;
 1169                             		.loc 1 2404 0
 1170 018e D7 AD 06                		mov.W	r13, 12[r10]
2407:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[channel].HwTmrTurns = 0;
 1171                             		.loc 1 2407 0
 1172 0191 F9 A4 03 00             		mov.B	#0, 3[r10]
2409:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if(TMR_PwdDefinition[channel].noTon)
 1173                             		.loc 1 2409 0
 1174 0195 76 24 FF 00             		and #0xff, r4
 1175 0199 10                      		beq	.L96
2412:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[channel].Measurement.tOn = tmpPeriod/2;
 1176                             		.loc 1 2412 0
 1177 019a 68 11                   		shlr	#1, r1
 1178                             	.LVL148:
 1179 019c E7 A1 05                		mov.L	r1, 20[r10]
 1180 019f 2E 0F                   		bra	.L97
 1181                             	.LVL149:
 1182                             	.L96:
2417:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				(void)OCICU_SetModeSync(channel, TMR_CH_IC_NEG_EDGE);
 1183                             		.loc 1 2417 0
 1184 01a1 CF B1                   		mov.B	r11, r1
 1185                             	.LVL150:
 1186 01a3 66 22                   		mov	#2, r2
 1187 01a5 05 00 00 00             		bsr	_OCICU_SetModeSync
 1188                             	.LVL151:
2419:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[channel].TMR_Status = PWD_SECOND_CAPT_EVENT;
 1189                             		.loc 1 2419 0
 1190 01a9 F9 A4 02 01             		mov.B	#1, 2[r10]
 1191 01ad 03                      		.balign 2,3,2
 1192                             	.L97:
2423:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( PWD_CtrlVar[channel].callback != NULL )
 1193                             		.loc 1 2423 0
 1194 01ae 75 17 18                		mul	#24, r7
 1195                             	.LVL152:
 1196 01b1 70 77 00 00 00 00       		add	#_PWD_CtrlVar, r7
 1197 01b7 ED 7A 02                		mov.L	8[r7], r10
 1198 01ba 61 0A                   		cmp	#0, r10
 1199 01bc 20 12                   		beq	.L92
2425:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				(void)(PWD_CtrlVar[channel].callback)((IO_NotificationType)IO_N_COMPLETED, (IO_ChannelType)chan
 1200                             		.loc 1 2425 0
 1201 01be A8 F7                   		mov.L	8[r7], r7
 1202 01c0 66 61                   		mov	#6, r1
 1203 01c2 CF B2                   		mov.B	r11, r2
 1204 01c4 66 03                   		mov	#0, r3
 1205 01c6 7F 17                   		jsr	r7
 1206                             	.LVL153:
 1207 01c8 0E                      		bra	.L92
 1208                             	.LVL154:
 1209                             	.L109:
 1210                             	.LBE26:
2434:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].TMR_Status = PWD_FIRST_CAPT_EVENT;
 1211                             		.loc 1 2434 0
 1212 01c9 F9 A4 02 00             		mov.B	#0, 2[r10]
 1213                             	.LVL155:
 1214 01cd 03                      		.balign 2,3,1
 1215                             	.L92:
2441:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1216                             		.loc 1 2441 0
 1217 01ce 66 01                   		mov.L	#0, r1
 1218 01d0 3F 7D 07                		rtsd	#28, r7-r13
 1219                             	.LFE52:
 1221 01d3 03                      		.section	.text.OCPWD_HwTmrTurns,"ax",@progbits
 1223                             	_OCPWD_HwTmrTurns:
 1224                             	.LFB53:
2460:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1225                             		.loc 1 2460 0
 1226                             	.LVL156:
 1227 0000 6E 7A                   		pushm	r7-r10
 1228                             	.LCFI12:
 1229                             	.LVL157:
2460:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1230                             		.loc 1 2460 0
 1231 0002 66 07                   		mov.L	#0, r7
2469:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (TmrChMap[i].hwCntrlId == tmdId && TMR_PwdDefinition[i].in_use)
 1232                             		.loc 1 2469 0
 1233 0004 5B 2A                   		movu.B	r2, r10
 1234                             	.LVL158:
 1235                             		.balign 2,3,2
 1236                             	.L115:
2459:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** static IO_ErrorType OCPWD_HwTmrTurns(IO_NotificationType notification, IO_ChannelType tmdId, IO_Err
 1237                             		.loc 1 2459 0
 1238 0006 FF 2E 77                		add	r7, r7, r14
 1239 0009 70 E4 00 00 00 00       		add	#_TmrChMap, r14, r4
2469:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (TmrChMap[i].hwCntrlId == tmdId && TMR_PwdDefinition[i].in_use)
 1240                             		.loc 1 2469 0
 1241 000f B0 4C                   		movu.B	1[r4], r4
 1242 0011 47 A4                   		cmp	r10, r4
 1243 0013 21 37                   		bne	.L113
2469:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (TmrChMap[i].hwCntrlId == tmdId && TMR_PwdDefinition[i].in_use)
 1244                             		.loc 1 2469 0 is_stmt 0 discriminator 1
 1245 0015 70 EE 00 00 00 00       		add	#_TMR_PwdDefinition, r14
 1246 001b 59 EE 01                		movu.B	1[r14], r14
 1247 001e 7C 6E                   		btst #6, r14
 1248 0020 20 2A                   		beq	.L113
2474:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			PWD_CtrlVar[i].HwTmrTurns++;
 1249                             		.loc 1 2474 0 is_stmt 1
 1250 0022 EF 7E                   		mov.L	r7, r14
 1251 0024 75 1E 18                		mul	#24, r14
 1252 0027 70 EE 00 00 00 00       		add	#_PWD_CtrlVar, r14
 1253 002d CD E4 03                		mov.B	3[r14], r4
 1254 0030 62 14                   		add	#1, r4
 1255 0032 C7 E4 03                		mov.B	r4, 3[r14]
2476:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (PWD_CtrlVar[i].HwTmrTurns == 0)
 1256                             		.loc 1 2476 0
 1257 0035 CD E4 03                		mov.B	3[r14], r4
 1258 0038 5B 43                   		movu.B	r4, r3
 1259 003a 61 03                   		cmp	#0, r3
 1260 003c 21 0E                   		bne	.L113
2479:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				PWD_CtrlVar[i].TMR_Status = PWD_FIRST_CAPT_EVENT;
 1261                             		.loc 1 2479 0
 1262 003e C7 E4 02                		mov.B	r4, 2[r14]
2480:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				OCICU_SetModeSync(i, TMR_CH_IC_POS_EDGE);
 1263                             		.loc 1 2480 0
 1264 0041 CF 71                   		mov.B	r7, r1
 1265 0043 66 12                   		mov	#1, r2
 1266 0045 05 00 00 00             		bsr	_OCICU_SetModeSync
 1267                             	.LVL159:
 1268 0049 03                      		.balign 2,3,1
 1269                             	.L113:
 1270 004a 62 17                   		add	#1, r7
2466:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for(i=0; i < NUM_HW_CNTR_CH; i++ ) /* per tutti i canali*/
 1271                             		.loc 1 2466 0
 1272 004c 61 97                   		cmp	#9, r7
 1273 004e 21 B8                   		bne	.L115
2487:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1274                             		.loc 1 2487 0
 1275 0050 66 01                   		mov.L	#0, r1
 1276 0052 3F 7A 04                		rtsd	#16, r7-r10
 1277                             	.LFE53:
 1279 0055 03                      		.section	.text.OCICU_GetModeSync,"ax",@progbits
 1280                             		.global	_OCICU_GetModeSync
 1282                             	_OCICU_GetModeSync:
 1283                             	.LFB22:
 957:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1284                             		.loc 1 957 0
 962:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 1285                             		.loc 1 962 0
 1286 0000 5B 11                   		movu.B	r1, r1
 1287 0002 61 81                   		cmp	#8, r1
 1288 0004 24 1B                   		bgtu	.L123
 957:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1289                             		.loc 1 957 0
 1290 0006 7E A7                   		push.l	r7
 1291                             	.LCFI13:
 1292 0008 EF 27                   		mov.L	r2, r7
 980:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 1293                             		.loc 1 980 0
 1294 000a 4B 11                   		add	r1, r1
 1295 000c 70 11 00 00 00 00       		add	#_TmrChMap, r1
 982:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	tmpRes = TMR_GetChannelEdgeMode(pTmr_ch);
 1296                             		.loc 1 982 0
 1297 0012 CC 11                   		mov.B	[r1], r1
 1298 0014 05 00 00 00             		bsr	_TMR_GetChannelEdgeMode
 983:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	*pMode = (ICU_EdgeModeType)tmpRes;
 1299                             		.loc 1 983 0
 1300 0018 5B 11                   		movu.B	r1, r1
 1301 001a E3 71                   		mov.L	r1, [r7]
 984:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 1302                             		.loc 1 984 0
 1303 001c 66 01                   		mov	#0, r1
 1304 001e 08                      		bra	.L122
 1305                             	.L123:
 1306                             	.LCFI14:
 964:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 1307                             		.loc 1 964 0
 1308 001f 75 41 12                		mov	#18, r1
 985:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1309                             		.loc 1 985 0
 1310 0022 75 21 12                		and #18, r1
 1311 0025 02                      		rts
 1312                             	.L122:
 1313                             	.LCFI15:
 1314 0026 75 21 12                		and #18, r1
 1315 0029 3F 77 01                		rtsd	#4, r7-r7
 1316                             	.LFE22:
 1318                             		.section	.text.OCICU_ToggleModeSync,"ax",@progbits
 1319                             		.global	_OCICU_ToggleModeSync
 1321                             	_OCICU_ToggleModeSync:
 1322                             	.LFB23:
1002:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1323                             		.loc 1 1002 0
 1324                             	.LVL160:
1006:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 1325                             		.loc 1 1006 0
 1326 0000 5B 11                   		movu.B	r1, r1
 1327 0002 61 81                   		cmp	#8, r1
 1328 0004 24 13                   		bgtu	.L128
1023:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 1329                             		.loc 1 1023 0
 1330 0006 4B 11                   		add	r1, r1
 1331                             	.LVL161:
 1332 0008 70 11 00 00 00 00       		add	#_TmrChMap, r1
1025:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_ToggleChannelEdgeMode(pTmr_ch);
 1333                             		.loc 1 1025 0
 1334 000e CC 11                   		mov.B	[r1], r1
 1335 0010 05 00 00 00             		bsr	_TMR_ToggleChannelEdgeMode
 1336                             	.LVL162:
1027:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 1337                             		.loc 1 1027 0
 1338 0014 66 01                   		mov	#0, r1
 1339 0016 0C                      		bra	.L127
 1340                             	.L128:
1008:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 1341                             		.loc 1 1008 0
 1342 0017 75 41 12                		mov	#18, r1
 1343                             		.balign 2,3,2
 1344                             	.L127:
1028:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1345                             		.loc 1 1028 0
 1346 001a 75 21 12                		and #18, r1
 1347 001d 02                      		rts
 1348                             	.LFE23:
 1350                             		.section	.text.OCICU_EnableISR,"ax",@progbits
 1351                             		.global	_OCICU_EnableISR
 1353                             	_OCICU_EnableISR:
 1354                             	.LFB24:
1046:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1355                             		.loc 1 1046 0
 1356                             	.LVL163:
 1357 0000 6E 7C                   		pushm	r7-r12
 1358                             	.LCFI16:
1050:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 1359                             		.loc 1 1050 0
 1360 0002 5B 17                   		movu.B	r1, r7
 1361 0004 61 87                   		cmp	#8, r7
 1362 0006 24 36                   		bgtu	.L132
 1363 0008 EF 2A                   		mov.L	r2, r10
 1364 000a EF 3C                   		mov.L	r3, r12
 1365                             	.LVL164:
 1366                             	.LBB29:
 1367                             	.LBB30:
1063:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 1368                             		.loc 1 1063 0
 1369 000c FF 2B 77                		add	r7, r7, r11
 1370 000f 70 BB 00 00 00 00       		add	#_TmrChMap, r11
 1371 0015 CC BB                   		mov.B	[r11], r11
 1372                             	.LVL165:
1065:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (!enableISR)
 1373                             		.loc 1 1065 0
 1374 0017 61 02                   		cmp	#0, r2
 1375 0019 1F                      		bne	.L131
1067:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DisableCHI(pTmr_ch);
 1376                             		.loc 1 1067 0
 1377 001a CF B1                   		mov.B	r11, r1
 1378                             	.LVL166:
 1379 001c 05 00 00 00             		bsr	_TMR_DisableCHI
 1380                             	.LVL167:
 1381                             		.balign 2,3,5
 1382                             	.L131:
1070:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CH_Callback[channel] = callback;
 1383                             		.loc 1 1070 0
 1384 0020 FB E2 00 00 00 00       		mov.L	#_TMR_CH_Callback, r14
 1385 0026 FE 27 EC                		mov.L	r12, [r7,r14]
1072:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (enableISR)
 1386                             		.loc 1 1072 0
 1387 0029 61 0A                   		cmp	#0, r10
 1388 002b 20 15                   		beq	.L133
1074:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClearCHF(pTmr_ch);
 1389                             		.loc 1 1074 0
 1390 002d CF B1                   		mov.B	r11, r1
 1391 002f 05 00 00 00             		bsr	_TMR_ClearCHF
 1392                             	.LVL168:
1075:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_EnableCHI(pTmr_ch);
 1393                             		.loc 1 1075 0
 1394 0033 CF B1                   		mov.B	r11, r1
 1395 0035 05 00 00 00             		bsr	_TMR_EnableCHI
 1396                             	.LVL169:
 1397 0039 66 01                   		mov	#0, r1
 1398 003b 0F                      		bra	.L130
 1399                             	.LVL170:
 1400                             	.L132:
 1401                             	.LBE30:
 1402                             	.LBE29:
1052:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 1403                             		.loc 1 1052 0
 1404 003c 75 41 12                		mov	#18, r1
 1405                             	.LVL171:
 1406 003f 0B                      		bra	.L130
 1407                             	.LVL172:
 1408                             	.L133:
 1409                             	.LBB32:
 1410                             	.LBB31:
1072:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (enableISR)
 1411                             		.loc 1 1072 0
 1412 0040 CF A1                   		mov.B	r10, r1
 1413                             	.LVL173:
 1414                             		.balign 2,3,1
 1415                             	.L130:
 1416                             	.LBE31:
 1417                             	.LBE32:
1079:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1418                             		.loc 1 1079 0
 1419 0042 5B 11                   		movu.B	r1, r1
 1420 0044 3F 7C 06                		rtsd	#24, r7-r12
 1421                             	.LFE24:
 1423 0047 03                      		.section	.text.OCOCU_InitSync,"ax",@progbits
 1424                             		.global	_OCOCU_InitSync
 1426                             	_OCOCU_InitSync:
 1427                             	.LFB25:
1101:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1428                             		.loc 1 1101 0
 1429                             	.LVL174:
1106:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pOCU_Cfg -> OCU_Id >= NUM_HW_CNTR_CH)
 1430                             		.loc 1 1106 0
 1431 0000 58 1E                   		movu.B	[r1], r14
 1432 0002 61 8E                   		cmp	#8, r14
 1433 0004 24 34                   		bgtu	.L137
1112:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( pHwCntrCfgTable[TmrChMap[pOCU_Cfg -> OCU_Id].hwCntrlId] == NULL )
 1434                             		.loc 1 1112 0
 1435 0006 4B EE                   		add	r14, r14
 1436 0008 70 E4 00 00 00 00       		add	#_TmrChMap, r14, r4
 1437 000e B0 4B                   		movu.B	1[r4], r3
 1438 0010 FB 42 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r4
 1439 0016 FE 63 44                		mov.L	[r3,r4], r4
 1440 0019 61 04                   		cmp	#0, r4
 1441 001b 20 21                   		beq	.L138
1133:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_OcuDefinition[pOCU_Cfg->OCU_Id] = *pOCU_Cfg;
 1442                             		.loc 1 1133 0
 1443 001d 70 EE 00 00 00 00       		add	#_TMR_OcuDefinition, r14
 1444 0023 D0 1E                   		mov.W	[r1], [r14]
 1445                             	.LVL175:
1136:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[pOCU_Cfg->OCU_Id].Channel;
 1446                             		.loc 1 1136 0
 1447 0025 58 1E                   		movu.B	[r1], r14
 1448 0027 4B EE                   		add	r14, r14
 1449 0029 70 EE 00 00 00 00       		add	#_TmrChMap, r14
1139:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelOutputCompare(pTmr_ch);
 1450                             		.loc 1 1139 0
 1451 002f CC E1                   		mov.B	[r14], r1
 1452                             	.LVL176:
 1453 0031 05 00 00 00             		bsr	_TMR_SetChannelOutputCompare
 1454                             	.LVL177:
1141:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 1455                             		.loc 1 1141 0
 1456 0035 66 01                   		mov	#0, r1
 1457 0037 09                      		bra	.L136
 1458                             	.LVL178:
 1459                             	.L137:
1108:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 1460                             		.loc 1 1108 0
 1461 0038 75 41 12                		mov	#18, r1
 1462                             	.LVL179:
 1463 003b 0D                      		bra	.L136
 1464                             	.LVL180:
 1465                             	.L138:
1114:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 1466                             		.loc 1 1114 0
 1467 003c 75 41 17                		mov	#23, r1
 1468                             	.LVL181:
 1469 003f 03                      		.balign 2,3,2
 1470                             	.L136:
1142:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1471                             		.loc 1 1142 0
 1472 0040 75 21 17                		and #23, r1
 1473 0043 02                      		rts
 1474                             	.LFE25:
 1476                             		.section	.text.OCOCU_DeInitSync,"ax",@progbits
 1477                             		.global	_OCOCU_DeInitSync
 1479                             	_OCOCU_DeInitSync:
 1480                             	.LFB26:
1157:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1481                             		.loc 1 1157 0
 1482                             	.LVL182:
1162:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 1483                             		.loc 1 1162 0
 1484 0000 5B 11                   		movu.B	r1, r1
 1485 0002 61 81                   		cmp	#8, r1
 1486 0004 24 1C                   		bgtu	.L141
1176:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		(void)memset (&TMR_OcuDefinition[channel], 0, sizeof(IO_OCU_CfgType));
 1487                             		.loc 1 1176 0
 1488 0006 4B 11                   		add	r1, r1
 1489                             	.LVL183:
 1490 0008 70 1E 00 00 00 00       		add	#_TMR_OcuDefinition, r1, r14
 1491 000e F8 E5 00                		mov.W	#0, [r14]
 1492                             	.LVL184:
1179:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pTmr_ch = TmrChMap[channel].Channel;
 1493                             		.loc 1 1179 0
 1494 0011 70 11 00 00 00 00       		add	#_TmrChMap, r1
1181:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DeInitChannel(pTmr_ch);
 1495                             		.loc 1 1181 0
 1496 0017 CC 11                   		mov.B	[r1], r1
 1497 0019 05 00 00 00             		bsr	_TMR_DeInitChannel
 1498                             	.LVL185:
1191:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 1499                             		.loc 1 1191 0
 1500 001d 66 01                   		mov	#0, r1
 1501 001f 0D                      		bra	.L140
 1502                             	.LVL186:
 1503                             	.L141:
1164:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 1504                             		.loc 1 1164 0
 1505 0020 75 41 12                		mov	#18, r1
 1506 0023 03                      		.balign 2,3,2
 1507                             	.L140:
1192:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1508                             		.loc 1 1192 0
 1509 0024 75 21 12                		and #18, r1
 1510 0027 02                      		rts
 1511                             	.LFE26:
 1513                             		.section	.text.OCOCU_GetSync,"ax",@progbits
 1514                             		.global	_OCOCU_GetSync
 1516                             	_OCOCU_GetSync:
 1517                             	.LFB27:
1205:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1518                             		.loc 1 1205 0
 1519                             	.LVL187:
1206:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_TimingValueType)OCHWCNTR_GetSync(TmrChMap[channel].hwCntrlId);
 1520                             		.loc 1 1206 0
 1521 0000 5B 11                   		movu.B	r1, r1
 1522 0002 4B 11                   		add	r1, r1
 1523                             	.LVL188:
 1524 0004 70 11 00 00 00 00       		add	#_TmrChMap, r1
 1525 000a 88 19                   		mov.B	1[r1], r1
 1526 000c 04 00 00 00             		bra	_OCHWCNTR_GetSync
 1527                             	.LVL189:
 1528                             	.LFE27:
 1530                             		.section	.text.OCOCU_GetSyncTickResolution,"ax",@progbits
 1531                             		.global	_OCOCU_GetSyncTickResolution
 1533                             	_OCOCU_GetSyncTickResolution:
 1534                             	.LFB28:
1220:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1535                             		.loc 1 1220 0
 1536                             	.LVL190:
1221:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_HwTimerType)OCHWCNTR_GetTicksSync(TmrChMap[channel].hwCntrlId);
 1537                             		.loc 1 1221 0
 1538 0000 5B 11                   		movu.B	r1, r1
 1539 0002 4B 11                   		add	r1, r1
 1540                             	.LVL191:
 1541 0004 70 11 00 00 00 00       		add	#_TmrChMap, r1
 1542 000a 88 19                   		mov.B	1[r1], r1
 1543 000c 04 00 00 00             		bra	_OCHWCNTR_GetTicksSync
 1544                             	.LVL192:
 1545                             	.LFE28:
 1547                             		.section	.text.OCOCU_SetThreshold1Sync,"ax",@progbits
 1548                             		.global	_OCOCU_SetThreshold1Sync
 1550                             	_OCOCU_SetThreshold1Sync:
 1551                             	.LFB29:
1237:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1552                             		.loc 1 1237 0
 1553 0000 6E 7D                   		pushm	r7-r13
 1554                             	.LCFI17:
 1555 0002 CF 17                   		mov.B	r1, r7
1244:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 1556                             		.loc 1 1244 0
 1557 0004 5B 1E                   		movu.B	r1, r14
 1558 0006 61 8E                   		cmp	#8, r14
 1559 0008 24 38                   		bgtu	.L144
 1560 000a EF 2C                   		mov.L	r2, r12
1254:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
 1561                             		.loc 1 1254 0
 1562 000c 4B EE                   		add	r14, r14
 1563 000e 70 EE 00 00 00 00       		add	#_TmrChMap, r14
 1564 0014 CC EB                   		mov.B	[r14], r11
1256:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tickRes = OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
 1565                             		.loc 1 1256 0
 1566 0016 CD EA 01                		mov.B	1[r14], r10
 1567 0019 CF A1                   		mov.B	r10, r1
 1568 001b 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 1569 001f DF 1D                   		mov.W	r1, r13
1257:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( TmrChMap[channel].hwCntrlId, channel);
 1570                             		.loc 1 1257 0
 1571 0021 CF A1                   		mov.B	r10, r1
 1572 0023 CF 72                   		mov.B	r7, r2
 1573 0025 05 00 00 00             		bsr	_TMR_GetModulo
 1574 0029 5F 11                   		movu.W	r1, r1
1256:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tickRes = OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
 1575                             		.loc 1 1256 0
 1576 002b 5F DD                   		movu.W	r13, r13
1258:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			threshold = threshold1 / tickRes;
 1577                             		.loc 1 1258 0
 1578 002d EF C2                   		mov.L	r12, r2
 1579 002f FC 27 D2                		divu	r13, r2
1260:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( threshold > tmrPeriod )
 1580                             		.loc 1 1260 0
 1581 0032 47 12                   		cmp	r1, r2
 1582 0034 25 04                   		bleu	.L146
1262:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				threshold -=tmrPeriod;
 1583                             		.loc 1 1262 0
 1584 0036 43 12                   		sub	r1, r2
 1585                             		.balign 2,3,1
 1586                             	.L146:
1264:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, (IO_HwTimerType)threshold);
 1587                             		.loc 1 1264 0
 1588 0038 CF B1                   		mov.B	r11, r1
1273:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1589                             		.loc 1 1273 0
 1590 003a 6F 7D                   		popm	r7-r13
1264:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, (IO_HwTimerType)threshold);
 1591                             		.loc 1 1264 0
 1592 003c 04 00 00 00             		bra	_TMR_SetThreshold1
 1593                             	.L144:
1273:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1594                             		.loc 1 1273 0
 1595 0040 3F 7D 07                		rtsd	#28, r7-r13
 1596                             	.LFE29:
 1598 0043 03                      		.section	.text.OCOCU_SetThreshold1TickResolutionSync,"ax",@progbits
 1599                             		.global	_OCOCU_SetThreshold1TickResolutionSync
 1601                             	_OCOCU_SetThreshold1TickResolutionSync:
 1602                             	.LFB30:
1284:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1603                             		.loc 1 1284 0
 1604                             	.LVL193:
 1605 0000 CF 14                   		mov.B	r1, r4
1289:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 1606                             		.loc 1 1289 0
 1607 0002 5B 1E                   		movu.B	r1, r14
 1608 0004 61 8E                   		cmp	#8, r14
 1609 0006 24 2C                   		bgtu	.L152
1284:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1610                             		.loc 1 1284 0
 1611 0008 6E 7A                   		pushm	r7-r10
 1612                             	.LCFI18:
 1613 000a DF 27                   		mov.W	r2, r7
1299:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
 1614                             		.loc 1 1299 0
 1615 000c 4B EE                   		add	r14, r14
 1616 000e 70 EE 00 00 00 00       		add	#_TmrChMap, r14
 1617 0014 CC EA                   		mov.B	[r14], r10
 1618                             	.LVL194:
1300:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( TmrChMap[channel].hwCntrlId, channel);
 1619                             		.loc 1 1300 0
 1620 0016 CD E1 01                		mov.B	1[r14], r1
 1621                             	.LVL195:
 1622 0019 CF 42                   		mov.B	r4, r2
 1623                             	.LVL196:
 1624 001b 05 00 00 00             		bsr	_TMR_GetModulo
 1625                             	.LVL197:
1301:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( threshold1 > tmrPeriod )
 1626                             		.loc 1 1301 0
 1627 001f 5F 74                   		movu.W	r7, r4
 1628 0021 47 14                   		cmp	r1, r4
 1629 0023 25 05                   		bleu	.L150
1303:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				threshold1 -=tmrPeriod;
 1630                             		.loc 1 1303 0
 1631 0025 43 17                   		sub	r1, r7
 1632                             	.LVL198:
 1633 0027 03                      		.balign 2,3,1
 1634                             	.L150:
1305:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, threshold1);
 1635                             		.loc 1 1305 0
 1636 0028 CF A1                   		mov.B	r10, r1
 1637                             	.LVL199:
 1638 002a DF 72                   		mov.W	r7, r2
1314:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1639                             		.loc 1 1314 0
 1640 002c 6F 7A                   		popm	r7-r10
 1641                             	.LVL200:
1305:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, threshold1);
 1642                             		.loc 1 1305 0
 1643 002e 04 00 00 00             		bra	_TMR_SetThreshold1
 1644                             	.LVL201:
 1645                             	.L152:
 1646                             	.LCFI19:
 1647 0032 02                      		rts
 1648                             	.LFE30:
 1650 0033 03                      		.section	.text.OCOCU_IsTickElapsed,"ax",@progbits
 1651                             		.global	_OCOCU_IsTickElapsed
 1653                             	_OCOCU_IsTickElapsed:
 1654                             	.LFB31:
1317:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1655                             		.loc 1 1317 0
 1656                             	.LVL202:
 1657 0000 6E 7C                   		pushm	r7-r12
 1658                             	.LCFI20:
 1659 0002 CF 1A                   		mov.B	r1, r10
 1660 0004 EF 2B                   		mov.L	r2, r11
 1661 0006 DF 3C                   		mov.W	r3, r12
 1662                             	.LVL203:
1322:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1663                             		.loc 1 1322 0
 1664 0008 61 02                   		cmp	#0, r2
 1665 000a 10                      		beq	.L154
1322:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1666                             		.loc 1 1322 0 is_stmt 0 discriminator 1
 1667 000b 75 41 52                		mov.L	#0x52, r1
 1668                             	.LVL204:
 1669 000e 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1670                             	.LVL205:
 1671                             		.balign 2,3,1
 1672                             	.L154:
1323:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1673                             		.loc 1 1323 0 is_stmt 1
 1674 0012 5B AA                   		movu.B	r10, r10
 1675 0014 61 8A                   		cmp	#8, r10
 1676 0016 25 0A                   		bleu	.L155
1323:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1677                             		.loc 1 1323 0 is_stmt 0 discriminator 1
 1678 0018 75 41 53                		mov.L	#0x53, r1
 1679 001b 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1680                             	.LVL206:
 1681 001f 03                      		.balign 2,3,1
 1682                             	.L155:
 1683                             	.LBB33:
 1684                             	.LBB34:
2522:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2523:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2524:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function returns the measured PW data (on-time and period). These values are converted into 
2525:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2526:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
2527:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [out]	measurement		(IO_PWD_MeasureType) PWD structure - period and on-time value
2528:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2529:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b Correct tick resolution must be filled in the init structure of the counter
2530:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2531:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	none
2532:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2533:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note	    probably it's necessary to introduce a critical sectione entry and exit\n
2534:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             to ensure the integrity of the information.
2535:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             No if the functions is called inside notification's callback
2536:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2537:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2538:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2539:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCPWD_GetAllSync(IO_ChannelType channel, IO_PWD_MeasureType *measurement)
2540:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2541:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Resolution of the timer */
2542:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_TickResType timerRes;
2543:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2544:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* tick resolution of the counter */
2545:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerRes = OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
2546:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2547:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Converts the data into nSec */
2548:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->period = (IO_TimingValueType)PWD_CtrlVar[channel].Measurement.period * (IO_TimingValu
2549:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->tOn = (IO_TimingValueType)PWD_CtrlVar[channel].Measurement.tOn * (IO_TimingValueType)
2550:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2551:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2552:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2553:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2554:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function returns the measured PW data (on-time and period). These values are in ticks.
2555:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2556:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identificator of the channel
2557:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param	[out]	measurement - (IO_PWD_RawMeasureType) period and on-time value in ticks
2558:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2559:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_PWD_RawMeasureType
2560:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2561:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		measurement (period and on-time value)
2562:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2563:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note	    probably it's necessary to introduce a critical section entry and exit\n
2564:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             to ensure the integrity of the information.
2565:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****             No if the functions is called inside notification's callback
2566:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2567:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \par Architecture Requirements ID: SARS_WMMT_MN_DrvTMR_5
2568:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2569:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void OCPWD_GetAllSyncInTicks(IO_ChannelType channel, IO_PWD_RawMeasureType *measurement)
2570:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2571:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->period = PWD_CtrlVar[channel].Measurement.period;
2572:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->tOn    = PWD_CtrlVar[channel].Measurement.tOn;
2573:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2574:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2575:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2576:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function stops the pulse-width demodulation.
2577:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2578:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
2579:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2580:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return IO_ErrorType
2581:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK initialization done
2582:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_INVALID_CHANNEL_ID invalid counter identificator
2583:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_UNEXPECTED_CONDITION channel is not assigned
2584:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2585:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWD_StopSampleSync(IO_ChannelType channel)
2586:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2587:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* Stops the interrupt */
2588:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2589:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/*lint -e619 (Loss of precision arg. 3*/
2590:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return OCICU_EnableISR(channel, 0, (Comm_Notification)NULL);
2591:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/*lint +e619 */
2592:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2593:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2594:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /********************************************** Timer PWD - end ***********************************
2595:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2596:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2597:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n ISR of the channel, This function calls the callback function defined by the user.
2598:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2599:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	channel - the identifier of the channel
2600:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2601:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \attention\b    This function must be called inside interrupt routine
2602:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2603:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \todo       For MCU with events on both thresholds: identify the source
2604:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2605:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** void HWTMRCH_ISR(IO_ChannelType channel)
2606:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2607:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_ENTER();
2608:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2609:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( channel < NUM_HW_CNTR_CH )
2610:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{	
2611:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	/* pointer to the timer module */
2612:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CNTAddressType pTmr_ch = TmrChMap[channel].Channel;
2613:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2614:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if( TMR_CH_Callback[channel] != 0 )
2615:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2616:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			/* Calls the user callback */
2617:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)(TMR_CH_Callback)[channel]((IO_NotificationType)IO_N_COMPLETED, (IO_ChannelType)channel, (
2618:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2619:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2620:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		/* Clears the interrupt flag */
2621:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClearCHF(pTmr_ch);
2622:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2623:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2624:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2625:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_EXIT();
2626:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2627:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2628:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2629:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \n The function returns the timer channel linked to a specified pin.
2630:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2631:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	pIOMap fixed a pin index specifies the pointer to the Module IO Map.
2632:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param  [in]	pChannel pointer where is stored the timer channel
2633:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2634:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return 	IO_ErrorType
2635:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval		IO_E_OK
2636:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval     IO_E_UNEXPECTED_CONDITION
2637:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** */
2638:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCTPM_GetChannelSync(const IO_ModuleIOMapType *const pIOMap,IO_ChannelType *pChannel)
2639:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2640:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t ch;
2641:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2642:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if(!pIOMap)
2643:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2644:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
2645:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2646:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2647:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( OCTMR_GetChannel(pIOMap->PortAddress,pIOMap->PinMask,&ch) )
2648:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2649:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		*pChannel = ch;
2650:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_OK;
2651:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2652:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
2653:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2654:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2655:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*
2656:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** This function get the timer id from channel id
2657:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [in]  chID
2658:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [out] pTmrId
2659:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2660:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return IO_ErrorType
2661:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval IO_E_OK if found
2662:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval IO_E_UNEXPECTED_CONDITION if not found
2663:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  */
2664:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCTPM_GetTimerIDFromChannelID(int chID, uint8_t* pTmrId)
2665:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2666:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( chID >= NUM_HW_CNTR_CH ){
2667:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
2668:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2669:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
2670:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	*pTmrId = TmrChMap[chID].hwCntrlId;
2671:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
2672:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
2673:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
2674:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2675:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t OCTPM_GetTimerIDFromChannelID_1(uint8_t chID )
2676:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
2677:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return  TmrChMap[chID].hwCntrlId;
 1685                             		.loc 1 2677 0 is_stmt 1
 1686 0020 4B AA                   		add	r10, r10
 1687                             	.LVL207:
 1688 0022 70 AA 00 00 00 00       		add	#_TmrChMap, r10
 1689 0028 CD A7 01                		mov.B	1[r10], r7
 1690                             	.LVL208:
 1691                             	.LBE34:
 1692                             	.LBE33:
1326:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1693                             		.loc 1 1326 0
 1694 002b 5B 7A                   		movu.B	r7, r10
 1695 002d 61 4A                   		cmp	#4, r10
 1696 002f 25 09                   		bleu	.L156
1326:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1697                             		.loc 1 1326 0 is_stmt 0 discriminator 1
 1698 0031 75 41 53                		mov.L	#0x53, r1
 1699 0034 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1700                             	.LVL209:
 1701                             		.balign 2,3,1
 1702                             	.L156:
1328:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	curr=OCHWCNTR_GetTicksSync(tmrID);
 1703                             		.loc 1 1328 0 is_stmt 1
 1704 0038 CF 71                   		mov.B	r7, r1
 1705 003a 05 00 00 00             		bsr	_OCHWCNTR_GetTicksSync
 1706                             	.LVL210:
1329:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ref = (IO_HwTimerType)(TMR_CntTrigVal[tmrID][trigRefIndex]);
 1707                             		.loc 1 1329 0
 1708 003e 5B 77                   		movu.B	r7, r7
 1709 0040 4B 7B                   		add	r7, r11
 1710                             	.LVL211:
 1711 0042 FB A2 00 00 00 00       		mov.L	#_TMR_CntTrigVal, r10
 1712 0048 FE 5B A7                		mov.W	[r11,r10], r7
 1713                             	.LVL212:
1330:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	diff1 = curr-ref;
 1714                             		.loc 1 1330 0
 1715 004b 43 71                   		sub	r7, r1
 1716                             	.LVL213:
1331:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	diff2 = tick-ref;
 1717                             		.loc 1 1331 0
 1718 004d FF 07 7C                		sub	r7, r12, r7
 1719                             	.LVL214:
1333:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if((diff1)>=(diff2))
 1720                             		.loc 1 1333 0
 1721 0050 5F 11                   		movu.W	r1, r1
 1722 0052 5F 77                   		movu.W	r7, r7
1339:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1723                             		.loc 1 1339 0
 1724 0054 47 71                   		cmp	r7, r1
 1725 0056 FC DB 12                		scgeu.L	r1
 1726 0059 3F 7C 06                		rtsd	#24, r7-r12
 1727                             	.LFE31:
 1729                             		.section	.text.OCOCU_GetTickValByTriggerIndex,"ax",@progbits
 1730                             		.global	_OCOCU_GetTickValByTriggerIndex
 1732                             	_OCOCU_GetTickValByTriggerIndex:
 1733                             	.LFB32:
1345:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1734                             		.loc 1 1345 0
 1735                             	.LVL215:
 1736 0000 6E 7A                   		pushm	r7-r10
 1737                             	.LCFI21:
 1738 0002 CF 17                   		mov.B	r1, r7
1349:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1739                             		.loc 1 1349 0
 1740 0004 71 2A 00                		add	#0, r2, r10
 1741 0007 11                      		beq	.L162
1349:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1742                             		.loc 1 1349 0 is_stmt 0 discriminator 1
 1743 0008 75 41 52                		mov.L	#0x52, r1
 1744                             	.LVL216:
 1745 000b 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1746                             	.LVL217:
 1747 000f 03                      		.balign 2,3,1
 1748                             	.L162:
1350:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1749                             		.loc 1 1350 0 is_stmt 1
 1750 0010 5B 77                   		movu.B	r7, r7
 1751                             	.LVL218:
 1752 0012 61 87                   		cmp	#8, r7
 1753 0014 25 0A                   		bleu	.L163
1350:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1754                             		.loc 1 1350 0 is_stmt 0 discriminator 1
 1755 0016 75 41 53                		mov.L	#0x53, r1
 1756 0019 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1757                             	.LVL219:
 1758 001d 03                      		.balign 2,3,1
 1759                             	.L163:
 1760                             	.LBB35:
 1761                             	.LBB36:
 1762                             		.loc 1 2677 0 is_stmt 1
 1763 001e 4B 77                   		add	r7, r7
 1764                             	.LVL220:
 1765 0020 70 77 00 00 00 00       		add	#_TmrChMap, r7
 1766                             	.LBE36:
 1767                             	.LBE35:
1353:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1768                             		.loc 1 1353 0
 1769 0026 B0 7F                   		movu.B	1[r7], r7
 1770 0028 61 47                   		cmp	#4, r7
 1771 002a 25 0A                   		bleu	.L164
1353:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1772                             		.loc 1 1353 0 is_stmt 0 discriminator 1
 1773 002c 75 41 53                		mov.L	#0x53, r1
 1774 002f 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1775                             	.LVL221:
 1776 0033 03                      		.balign 2,3,1
 1777                             	.L164:
1355:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ref = (TMR_CntTrigVal[tmrID][trigRefIndex]);
 1778                             		.loc 1 1355 0 is_stmt 1
 1779 0034 4B 7A                   		add	r7, r10
 1780                             	.LVL222:
 1781 0036 FB E2 00 00 00 00       		mov.L	#_TMR_CntTrigVal, r14
1358:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1782                             		.loc 1 1358 0
 1783 003c FE DA E1                		movu.W	[r10,r14], r1
 1784 003f 3F 7A 04                		rtsd	#16, r7-r10
 1785                             	.LFE32:
 1787                             		.section	.text.OCOCU_SetTickValByTriggerIndex,"ax",@progbits
 1788                             		.global	_OCOCU_SetTickValByTriggerIndex
 1790                             	_OCOCU_SetTickValByTriggerIndex:
 1791                             	.LFB33:
1364:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1792                             		.loc 1 1364 0
 1793                             	.LVL223:
 1794 0000 6E 7B                   		pushm	r7-r11
 1795                             	.LCFI22:
 1796 0002 CF 17                   		mov.B	r1, r7
 1797 0004 EF 2A                   		mov.L	r2, r10
 1798 0006 DF 3B                   		mov.W	r3, r11
 1799                             	.LVL224:
1367:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1800                             		.loc 1 1367 0
 1801 0008 61 02                   		cmp	#0, r2
 1802 000a 10                      		beq	.L170
1367:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1803                             		.loc 1 1367 0 is_stmt 0 discriminator 1
 1804 000b 75 41 52                		mov.L	#0x52, r1
 1805                             	.LVL225:
 1806 000e 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1807                             	.LVL226:
 1808                             		.balign 2,3,1
 1809                             	.L170:
1368:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1810                             		.loc 1 1368 0 is_stmt 1
 1811 0012 5B 77                   		movu.B	r7, r7
 1812                             	.LVL227:
 1813 0014 61 87                   		cmp	#8, r7
 1814 0016 25 0A                   		bleu	.L171
1368:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1815                             		.loc 1 1368 0 is_stmt 0 discriminator 1
 1816 0018 75 41 53                		mov.L	#0x53, r1
 1817 001b 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1818                             	.LVL228:
 1819 001f 03                      		.balign 2,3,1
 1820                             	.L171:
 1821                             	.LBB37:
 1822                             	.LBB38:
 1823                             		.loc 1 2677 0 is_stmt 1
 1824 0020 4B 77                   		add	r7, r7
 1825                             	.LVL229:
 1826 0022 70 77 00 00 00 00       		add	#_TmrChMap, r7
 1827                             	.LVL230:
 1828                             	.LBE38:
 1829                             	.LBE37:
1371:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1830                             		.loc 1 1371 0
 1831 0028 B0 7F                   		movu.B	1[r7], r7
 1832 002a 61 47                   		cmp	#4, r7
 1833 002c 25 0A                   		bleu	.L172
1371:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1834                             		.loc 1 1371 0 is_stmt 0 discriminator 1
 1835 002e 75 41 53                		mov.L	#0x53, r1
 1836 0031 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1837                             	.LVL231:
 1838 0035 03                      		.balign 2,3,1
 1839                             	.L172:
1373:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_CntTrigVal[tmrID][trigRefIndex] = val;
 1840                             		.loc 1 1373 0 is_stmt 1
 1841 0036 4B 7A                   		add	r7, r10
 1842                             	.LVL232:
 1843 0038 FB E2 00 00 00 00       		mov.L	#_TMR_CntTrigVal, r14
 1844 003e FE 1A EB                		mov.W	r11, [r10,r14]
1375:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1845                             		.loc 1 1375 0
 1846 0041 3F 7B 05                		rtsd	#20, r7-r11
 1847                             	.LFE33:
 1849                             		.section	.text.OCOCU_SetEventSync,"ax",@progbits
 1850                             		.global	_OCOCU_SetEventSync
 1852                             	_OCOCU_SetEventSync:
 1853                             	.LFB34:
1386:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1854                             		.loc 1 1386 0
 1855 0000 6E 7D                   		pushm	r7-r13
 1856                             	.LCFI23:
 1857 0002 CF 1B                   		mov.B	r1, r11
 1858 0004 EF 2C                   		mov.L	r2, r12
 1859 0006 EF 3D                   		mov.L	r3, r13
1397:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1860                             		.loc 1 1397 0
 1861 0008 61 02                   		cmp	#0, r2
 1862 000a 10                      		beq	.L178
1397:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((trigRefIndex>=NUM_HW_CNTR_COLLECTIONS), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1863                             		.loc 1 1397 0 is_stmt 0 discriminator 1
 1864 000b 75 41 52                		mov.L	#0x52, r1
 1865 000e 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1866                             		.balign 2,3,1
 1867                             	.L178:
1398:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1868                             		.loc 1 1398 0 is_stmt 1
 1869 0012 5B B7                   		movu.B	r11, r7
 1870 0014 61 87                   		cmp	#8, r7
 1871 0016 25 0A                   		bleu	.L179
1398:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel>=NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1872                             		.loc 1 1398 0 is_stmt 0 discriminator 1
 1873 0018 75 41 53                		mov.L	#0x53, r1
 1874 001b 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1875 001f 03                      		.balign 2,3,2
 1876                             	.L179:
 1877                             	.LBB39:
 1878                             	.LBB40:
 1879                             		.loc 1 2677 0 is_stmt 1
 1880 0020 FF 2A 77                		add	r7, r7, r10
 1881 0023 70 AA 00 00 00 00       		add	#_TmrChMap, r10
 1882 0029 CD AA 01                		mov.B	1[r10], r10
 1883                             	.LBE40:
 1884                             	.LBE39:
1403:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1885                             		.loc 1 1403 0
 1886 002c 5B AE                   		movu.B	r10, r14
 1887 002e 61 4E                   		cmp	#4, r14
 1888 0030 25 0A                   		bleu	.L180
1403:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID>=(sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_INDE
 1889                             		.loc 1 1403 0 is_stmt 0 discriminator 1
 1890 0032 75 41 53                		mov.L	#0x53, r1
 1891 0035 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1892 0039 03                      		.balign 2,3,1
 1893                             	.L180:
1406:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerRes = OCHWCNTR_GetTickResolution(tmrID);
 1894                             		.loc 1 1406 0 is_stmt 1
 1895 003a CF A1                   		mov.B	r10, r1
 1896 003c 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 1897 0040 DF 19                   		mov.W	r1, r9
1408:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((timerRes==0), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1898                             		.loc 1 1408 0
 1899 0042 5F 1E                   		movu.W	r1, r14
 1900 0044 61 0E                   		cmp	#0, r14
 1901 0046 18                      		bne	.L181
1408:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((timerRes==0), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1902                             		.loc 1 1408 0 is_stmt 0 discriminator 1
 1903 0047 75 41 52                		mov.L	#0x52, r1
 1904 004a 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1905                             		.balign 2,3,1
 1906                             	.L181:
1410:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ticks = (IO_HwTimerType)(TMR_CntTrigVal[tmrID][trigRefIndex] + nsDelay/timerRes);
 1907                             		.loc 1 1410 0 is_stmt 1
 1908 004e 5B AE                   		movu.B	r10, r14
 1909 0050 4B EC                   		add	r14, r12
 1910 0052 FB E2 00 00 00 00       		mov.L	#_TMR_CntTrigVal, r14
 1911 0058 FE 5C EC                		mov.W	[r12,r14], r12
1413:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 1912                             		.loc 1 1413 0
 1913 005b 5B BE                   		movu.B	r11, r14
 1914 005d 61 8E                   		cmp	#8, r14
 1915 005f 24 31                   		bgtu	.L177
1410:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ticks = (IO_HwTimerType)(TMR_CntTrigVal[tmrID][trigRefIndex] + nsDelay/timerRes);
 1916                             		.loc 1 1410 0
 1917 0061 5F 99                   		movu.W	r9, r9
 1918 0063 FC 27 9D                		divu	r9, r13
 1919 0066 4B CD                   		add	r12, r13
 1920 0068 DF DC                   		mov.W	r13, r12
1423:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
 1921                             		.loc 1 1423 0
 1922 006a 4B 77                   		add	r7, r7
 1923 006c 70 77 00 00 00 00       		add	#_TmrChMap, r7
 1924 0072 CC 79                   		mov.B	[r7], r9
1424:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( tmrID, channel);
 1925                             		.loc 1 1424 0
 1926 0074 CF A1                   		mov.B	r10, r1
 1927 0076 CF B2                   		mov.B	r11, r2
 1928 0078 05 00 00 00             		bsr	_TMR_GetModulo
1425:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( ticks > tmrPeriod )
 1929                             		.loc 1 1425 0
 1930 007c 5F DA                   		movu.W	r13, r10
 1931 007e 47 1A                   		cmp	r1, r10
 1932 0080 25 06                   		bleu	.L183
1427:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ticks -=tmrPeriod;
 1933                             		.loc 1 1427 0
 1934 0082 FF 0C 1D                		sub	r1, r13, r12
 1935 0085 03                      		.balign 2,3,1
 1936                             	.L183:
1429:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, ticks);
 1937                             		.loc 1 1429 0
 1938 0086 CF 91                   		mov.B	r9, r1
 1939 0088 DF C2                   		mov.W	r12, r2
1438:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1940                             		.loc 1 1438 0
 1941 008a 6F 7D                   		popm	r7-r13
1429:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, ticks);
 1942                             		.loc 1 1429 0
 1943 008c 04 00 00 00             		bra	_TMR_SetThreshold1
 1944                             	.L177:
1438:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 1945                             		.loc 1 1438 0
 1946 0090 3F 7D 07                		rtsd	#28, r7-r13
 1947                             	.LFE34:
 1949 0093 03                      		.section	.text.OCOCU_SetRelativeEventSync,"ax",@progbits
 1950                             		.global	_OCOCU_SetRelativeEventSync
 1952                             	_OCOCU_SetRelativeEventSync:
 1953                             	.LFB35:
1449:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 1954                             		.loc 1 1449 0
 1955 0000 6E 7D                   		pushm	r7-r13
 1956                             	.LCFI24:
 1957 0002 CF 1A                   		mov.B	r1, r10
 1958 0004 EF 2D                   		mov.L	r2, r13
1459:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel >= NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1959                             		.loc 1 1459 0
 1960 0006 5B 17                   		movu.B	r1, r7
 1961 0008 61 87                   		cmp	#8, r7
 1962 000a 25 0A                   		bleu	.L189
1459:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((channel >= NUM_HW_CNTR_CH), PLT_ERROR_OCTPM_INVALID_INDEX);
 1963                             		.loc 1 1459 0 is_stmt 0 discriminator 1
 1964 000c 75 41 53                		mov.L	#0x53, r1
 1965 000f 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1966 0013 03                      		.balign 2,3,2
 1967                             	.L189:
 1968                             	.LBB41:
 1969                             	.LBB42:
 1970                             		.loc 1 2677 0 is_stmt 1
 1971 0014 FF 2B 77                		add	r7, r7, r11
 1972 0017 70 BB 00 00 00 00       		add	#_TmrChMap, r11
 1973 001d CD BB 01                		mov.B	1[r11], r11
 1974                             	.LBE42:
 1975                             	.LBE41:
1463:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID >= (sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_IN
 1976                             		.loc 1 1463 0
 1977 0020 5B BC                   		movu.B	r11, r12
 1978 0022 61 4C                   		cmp	#4, r12
 1979 0024 25 0A                   		bleu	.L190
1463:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((tmrID >= (sizeof(TmrCntMap)/sizeof(TmrCntMap[0]))), PLT_ERROR_OCTPM_INVALID_IN
 1980                             		.loc 1 1463 0 is_stmt 0 discriminator 1
 1981 0026 75 41 53                		mov.L	#0x53, r1
 1982 0029 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1983 002d 03                      		.balign 2,3,1
 1984                             	.L190:
1466:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerRes = OCHWCNTR_GetTickResolution(tmrID);
 1985                             		.loc 1 1466 0 is_stmt 1
 1986 002e CF B1                   		mov.B	r11, r1
 1987 0030 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 1988 0034 DF 1C                   		mov.W	r1, r12
1468:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((timerRes==0), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1989                             		.loc 1 1468 0
 1990 0036 5F 1E                   		movu.W	r1, r14
 1991 0038 61 0E                   		cmp	#0, r14
 1992 003a 18                      		bne	.L191
1468:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PLT_ERROR_FATAL_IF((timerRes==0), PLT_ERROR_OCTPM_INVALID_PARAMS);
 1993                             		.loc 1 1468 0 is_stmt 0 discriminator 1
 1994 003b 75 41 52                		mov.L	#0x52, r1
 1995 003e 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 1996                             		.balign 2,3,1
 1997                             	.L191:
1470:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ticks = (IO_HwTimerType)(OCICU_GetTickSync(channel) + nsDelay/timerRes);
 1998                             		.loc 1 1470 0 is_stmt 1
 1999 0042 CF A1                   		mov.B	r10, r1
 2000 0044 05 00 00 00             		bsr	_OCICU_GetTickSync
1473:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 2001                             		.loc 1 1473 0
 2002 0048 5B AE                   		movu.B	r10, r14
 2003 004a 61 8E                   		cmp	#8, r14
 2004 004c 24 30                   		bgtu	.L188
1470:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ticks = (IO_HwTimerType)(OCICU_GetTickSync(channel) + nsDelay/timerRes);
 2005                             		.loc 1 1470 0
 2006 004e 5F CC                   		movu.W	r12, r12
 2007 0050 FC 27 CD                		divu	r12, r13
 2008 0053 4B 1D                   		add	r1, r13
 2009 0055 DF DC                   		mov.W	r13, r12
1483:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
 2010                             		.loc 1 1483 0
 2011 0057 4B 77                   		add	r7, r7
 2012 0059 70 77 00 00 00 00       		add	#_TmrChMap, r7
 2013 005f CC 79                   		mov.B	[r7], r9
1484:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			tmrPeriod = TMR_GetModulo( tmrID, channel);
 2014                             		.loc 1 1484 0
 2015 0061 CF B1                   		mov.B	r11, r1
 2016 0063 CF A2                   		mov.B	r10, r2
 2017 0065 05 00 00 00             		bsr	_TMR_GetModulo
1485:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( ticks > tmrPeriod )
 2018                             		.loc 1 1485 0
 2019 0069 5F DA                   		movu.W	r13, r10
 2020 006b 47 1A                   		cmp	r1, r10
 2021 006d 25 05                   		bleu	.L193
1487:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ticks -=tmrPeriod;
 2022                             		.loc 1 1487 0
 2023 006f FF 0C 1D                		sub	r1, r13, r12
 2024                             		.balign 2,3,1
 2025                             	.L193:
1489:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, ticks);
 2026                             		.loc 1 1489 0
 2027 0072 CF 91                   		mov.B	r9, r1
 2028 0074 DF C2                   		mov.W	r12, r2
1498:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2029                             		.loc 1 1498 0
 2030 0076 6F 7D                   		popm	r7-r13
1489:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			TMR_SetThreshold1(pTmr_ch, ticks);
 2031                             		.loc 1 1489 0
 2032 0078 04 00 00 00             		bra	_TMR_SetThreshold1
 2033                             	.L188:
1498:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2034                             		.loc 1 1498 0
 2035 007c 3F 7D 07                		rtsd	#28, r7-r13
 2036                             	.LFE35:
 2038 007f 03                      		.section	.text.OCOCU_SetThreshold2Sync,"ax",@progbits
 2039                             		.global	_OCOCU_SetThreshold2Sync
 2041                             	_OCOCU_SetThreshold2Sync:
 2042                             	.LFB36:
1514:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2043                             		.loc 1 1514 0
 2044                             	.LVL233:
1515:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 2045                             		.loc 1 1515 0
 2046 0000 5B 1E                   		movu.B	r1, r14
 2047 0002 61 8E                   		cmp	#8, r14
 2048 0004 24 06                   		bgtu	.L195
1525:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if(FALSE == Threshold2SetUpUnsupported(channel))
 2049                             		.loc 1 1525 0
 2050 0006 04 00 00 00             		bra	_Threshold2SetUpUnsupported
 2051                             	.LVL234:
 2052                             	.L195:
 2053 000a 02                      		rts
 2054                             	.LFE36:
 2056                             		.section	.text.OCOCU_SetThreshold2TickResolutionSync,"ax",@progbits
 2057                             		.global	_OCOCU_SetThreshold2TickResolutionSync
 2059                             	_OCOCU_SetThreshold2TickResolutionSync:
 2060                             	.LFB37:
1548:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2061                             		.loc 1 1548 0
 2062                             	.LVL235:
1549:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 2063                             		.loc 1 1549 0
 2064 0000 5B 1E                   		movu.B	r1, r14
 2065 0002 61 8E                   		cmp	#8, r14
 2066 0004 24 06                   		bgtu	.L197
1559:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if(FALSE == Threshold2SetUpUnsupported(channel))
 2067                             		.loc 1 1559 0
 2068 0006 04 00 00 00             		bra	_Threshold2SetUpUnsupported
 2069                             	.LVL236:
 2070                             	.L197:
 2071 000a 02                      		rts
 2072                             	.LFE37:
 2074                             		.section	.text.OCOCU_SetModeSync,"ax",@progbits
 2075                             		.global	_OCOCU_SetModeSync
 2077                             	_OCOCU_SetModeSync:
 2078                             	.LFB38:
1590:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2079                             		.loc 1 1590 0
1595:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 2080                             		.loc 1 1595 0
 2081 0000 5B 11                   		movu.B	r1, r1
 2082 0002 61 81                   		cmp	#8, r1
 2083 0004 24 31                   		bgtu	.L201
1590:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2084                             		.loc 1 1590 0
 2085 0006 6E 7C                   		pushm	r7-r12
 2086                             	.LCFI25:
 2087 0008 CF 2B                   		mov.B	r2, r11
1600:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (OutputCompareModeUnsupported(mode,TMR_OcuDefinition[channel].inverted))
 2088                             		.loc 1 1600 0
 2089 000a FF 2C 11                		add	r1, r1, r12
 2090 000d 70 CA 00 00 00 00       		add	#_TMR_OcuDefinition, r12, r10
 2091 0013 CF 21                   		mov.B	r2, r1
 2092 0015 59 A2 01                		movu.B	1[r10], r2
 2093 0018 05 00 00 00             		bsr	_OutputCompareModeUnsupported
 2094 001c 71 17 00                		add	#0, r1, r7
 2095 001f 21 1C                   		bne	.L202
1617:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 2096                             		.loc 1 1617 0
 2097 0021 70 CC 00 00 00 00       		add	#_TmrChMap, r12
1619:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelOutputMode(pTmr_ch, mode,TMR_OcuDefinition[channel].inverted);
 2098                             		.loc 1 1619 0
 2099 0027 CC C1                   		mov.B	[r12], r1
 2100 0029 CF B2                   		mov.B	r11, r2
 2101 002b 59 A3 01                		movu.B	1[r10], r3
 2102 002e 05 00 00 00             		bsr	_TMR_SetChannelOutputMode
1621:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 2103                             		.loc 1 1621 0
 2104 0032 CF 71                   		mov.B	r7, r1
 2105 0034 0A                      		bra	.L200
 2106                             	.L201:
 2107                             	.LCFI26:
1597:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 2108                             		.loc 1 1597 0
 2109 0035 75 41 12                		mov	#18, r1
1622:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2110                             		.loc 1 1622 0
 2111 0038 5B 11                   		movu.B	r1, r1
 2112 003a 02                      		rts
 2113                             	.L202:
 2114                             	.LCFI27:
1602:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNKNOWN_MODE;
 2115                             		.loc 1 1602 0
 2116 003b 66 31                   		mov	#3, r1
 2117 003d 03                      		.balign 2,3,1
 2118                             	.L200:
1622:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2119                             		.loc 1 1622 0
 2120 003e 5B 11                   		movu.B	r1, r1
 2121 0040 3F 7C 06                		rtsd	#24, r7-r12
 2122                             	.LFE38:
 2124 0043 03                      		.section	.text.OCPWM_InitSync,"ax",@progbits
 2125                             		.global	_OCPWM_InitSync
 2127                             	_OCPWM_InitSync:
 2128                             	.LFB39:
1645:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2129                             		.loc 1 1645 0
 2130                             	.LVL237:
1650:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (pPWM_Cfg -> PWM_Id >= NUM_HW_CNTR_CH)
 2131                             		.loc 1 1650 0
 2132 0000 58 1E                   		movu.B	[r1], r14
 2133 0002 61 8E                   		cmp	#8, r14
 2134 0004 24 2C                   		bgtu	.L206
1656:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( pHwCntrCfgTable[TmrChMap[pPWM_Cfg -> PWM_Id].hwCntrlId] == NULL )
 2135                             		.loc 1 1656 0
 2136 0006 FF 24 EE                		add	r14, r14, r4
 2137 0009 70 44 00 00 00 00       		add	#_TmrChMap, r4
 2138 000f B0 4A                   		movu.B	1[r4], r2
 2139 0011 FB 32 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r3
 2140 0017 FE 62 33                		mov.L	[r2,r3], r3
 2141 001a 61 03                   		cmp	#0, r3
 2142 001c 20 18                   		beq	.L207
1678:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pPwmCfgTable[pPWM_Cfg -> PWM_Id] = pPWM_Cfg;
 2143                             		.loc 1 1678 0
 2144 001e FB 32 00 00 00 00       		mov.L	#_pPwmCfgTable, r3
 2145 0024 FE 2E 31                		mov.L	r1, [r14,r3]
 2146                             	.LVL238:
1685:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_SetChannelPWM(pTmr_ch);
 2147                             		.loc 1 1685 0
 2148 0027 CC 41                   		mov.B	[r4], r1
 2149                             	.LVL239:
 2150 0029 05 00 00 00             		bsr	_TMR_SetChannelPWM
 2151                             	.LVL240:
1687:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 2152                             		.loc 1 1687 0
 2153 002d 66 01                   		mov	#0, r1
 2154 002f 09                      		bra	.L205
 2155                             	.LVL241:
 2156                             	.L206:
1652:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 2157                             		.loc 1 1652 0
 2158 0030 75 41 12                		mov	#18, r1
 2159                             	.LVL242:
 2160 0033 0D                      		bra	.L205
 2161                             	.LVL243:
 2162                             	.L207:
1658:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 2163                             		.loc 1 1658 0
 2164 0034 75 41 17                		mov	#23, r1
 2165                             	.LVL244:
 2166 0037 03                      		.balign 2,3,2
 2167                             	.L205:
1688:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2168                             		.loc 1 1688 0
 2169 0038 75 21 17                		and #23, r1
 2170 003b 02                      		rts
 2171                             	.LFE39:
 2173                             		.section	.text.OCPWM_DeInitSync,"ax",@progbits
 2174                             		.global	_OCPWM_DeInitSync
 2176                             	_OCPWM_DeInitSync:
 2177                             	.LFB40:
1701:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2178                             		.loc 1 1701 0
1705:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 2179                             		.loc 1 1705 0
 2180 0000 5B 11                   		movu.B	r1, r1
 2181 0002 61 81                   		cmp	#8, r1
 2182 0004 24 20                   		bgtu	.L210
1701:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2183                             		.loc 1 1701 0
 2184 0006 7E A7                   		push.l	r7
 2185                             	.LCFI28:
1718:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pPwmCfgTable[channel]= (IO_PWM_CfgType *)NULL;
 2186                             		.loc 1 1718 0
 2187 0008 FB E2 00 00 00 00       		mov.L	#_pPwmCfgTable, r14
 2188 000e 66 07                   		mov.L	#0, r7
 2189 0010 FE 21 E7                		mov.L	r7, [r1,r14]
1721:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pTmr_ch = TmrChMap[channel].Channel;
 2190                             		.loc 1 1721 0
 2191 0013 4B 11                   		add	r1, r1
 2192 0015 70 11 00 00 00 00       		add	#_TmrChMap, r1
1723:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_DeInitChannel(pTmr_ch);
 2193                             		.loc 1 1723 0
 2194 001b CC 11                   		mov.B	[r1], r1
 2195 001d 05 00 00 00             		bsr	_TMR_DeInitChannel
1733:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 2196                             		.loc 1 1733 0
 2197 0021 66 01                   		mov	#0, r1
 2198 0023 08                      		bra	.L209
 2199                             	.L210:
 2200                             	.LCFI29:
1707:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 2201                             		.loc 1 1707 0
 2202 0024 75 41 12                		mov	#18, r1
1734:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2203                             		.loc 1 1734 0
 2204 0027 75 21 12                		and #18, r1
 2205 002a 02                      		rts
 2206                             	.L209:
 2207                             	.LCFI30:
 2208 002b 75 21 12                		and #18, r1
 2209 002e 3F 77 01                		rtsd	#4, r7-r7
 2210                             	.LFE40:
 2212                             		.section	.text.OCPWM_SetSync,"ax",@progbits
 2213                             		.global	_OCPWM_SetSync
 2215                             	_OCPWM_SetSync:
 2216                             	.LFB41:
1745:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2217                             		.loc 1 1745 0
 2218                             	.LVL245:
 2219 0000 6E 7C                   		pushm	r7-r12
 2220                             	.LCFI31:
 2221                             	.LVL246:
1750:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 2222                             		.loc 1 1750 0
 2223 0002 5B 17                   		movu.B	r1, r7
 2224 0004 61 87                   		cmp	#8, r7
 2225 0006 24 43                   		bgtu	.L215
 2226 0008 EF 2A                   		mov.L	r2, r10
1760:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			pTmr_ch = TmrChMap[channel].Channel;
 2227                             		.loc 1 1760 0
 2228 000a FF 2C 77                		add	r7, r7, r12
 2229 000d 70 CC 00 00 00 00       		add	#_TmrChMap, r12
 2230 0013 CC CB                   		mov.B	[r12], r11
 2231                             	.LVL247:
1763:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if( tOn >= OCHWCNTR_GetPeriod(TmrChMap[channel].hwCntrlId) ){
 2232                             		.loc 1 1763 0
 2233 0015 CD CC 01                		mov.B	1[r12], r12
 2234 0018 CF C1                   		mov.B	r12, r1
 2235                             	.LVL248:
 2236 001a 05 00 00 00             		bsr	_OCHWCNTR_GetPeriod
 2237                             	.LVL249:
 2238 001e 47 1A                   		cmp	r1, r10
 2239 0020 22 2D                   		bgeu	.L216
1767:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				TMR_SetChannelPulses(pTmr_ch, pPwmCfgTable[channel]->inverted);
 2240                             		.loc 1 1767 0
 2241 0022 FB E2 00 00 00 00       		mov.L	#_pPwmCfgTable, r14
 2242 0028 FE 67 E7                		mov.L	[r7,r14], r7
 2243                             	.LVL250:
 2244 002b CF B1                   		mov.B	r11, r1
 2245 002d 8A 72                   		mov.B	8[r7], r2
 2246 002f 05 00 00 00             		bsr	_TMR_SetChannelPulses
 2247                             	.LVL251:
1770:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				TMR_SetTimeOn(pTmr_ch, (IO_HwTimerType)(tOn / OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCn
 2248                             		.loc 1 1770 0
 2249 0033 CF C1                   		mov.B	r12, r1
 2250 0035 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 2251                             	.LVL252:
 2252 0039 5F 17                   		movu.W	r1, r7
 2253 003b CF B1                   		mov.B	r11, r1
 2254 003d EF A2                   		mov.L	r10, r2
 2255 003f FC 27 72                		divu	r7, r2
 2256 0042 05 00 00 00             		bsr	_TMR_SetTimeOn
 2257                             	.LVL253:
1748:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType retVal = IO_E_OK;
 2258                             		.loc 1 1748 0
 2259 0046 66 01                   		mov	#0, r1
 2260 0048 08                      		bra	.L214
 2261                             	.LVL254:
 2262                             	.L215:
1780:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return retVal = IO_E_INVALID_CHANNEL_ID;
 2263                             		.loc 1 1780 0
 2264 0049 75 41 12                		mov	#18, r1
 2265                             	.LVL255:
 2266 004c 0C                      		bra	.L214
 2267                             	.LVL256:
 2268                             	.L216:
1764:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				retVal = IO_E_INVALID_VALUE;
 2269                             		.loc 1 1764 0
 2270 004d 75 41 13                		mov	#19, r1
 2271                             	.LVL257:
 2272                             		.balign 2,3,2
 2273                             	.L214:
1783:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2274                             		.loc 1 1783 0
 2275 0050 75 21 13                		and #19, r1
 2276 0053 3F 7C 06                		rtsd	#24, r7-r12
 2277                             	.LFE41:
 2279                             		.section	.text.OCPWM_GetSync,"ax",@progbits
 2280                             		.global	_OCPWM_GetSync
 2282                             	_OCPWM_GetSync:
 2283                             	.LFB42:
1794:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2284                             		.loc 1 1794 0
1798:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( channel >= NUM_HW_CNTR_CH )
 2285                             		.loc 1 1798 0
 2286 0000 5B 11                   		movu.B	r1, r1
 2287 0002 61 81                   		cmp	#8, r1
 2288 0004 24 23                   		bgtu	.L220
1794:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2289                             		.loc 1 1794 0
 2290 0006 6E 7A                   		pushm	r7-r10
 2291                             	.LCFI32:
 2292 0008 60 40                   		sub	#4, r0
 2293                             	.LCFI33:
1802:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_ch = TmrChMap[channel].Channel;
 2294                             		.loc 1 1802 0
 2295 000a 4B 11                   		add	r1, r1
 2296 000c 70 17 00 00 00 00       		add	#_TmrChMap, r1, r7
1804:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	TMR_GetTimeOn( pTmr_ch, &tOn); 
 2297                             		.loc 1 1804 0
 2298 0012 CC 71                   		mov.B	[r7], r1
 2299 0014 EF 02                   		mov.L	r0, r2
 2300 0016 05 00 00 00             		bsr	_TMR_GetTimeOn
1806:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_TimingValueType) tOn * OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
 2301                             		.loc 1 1806 0
 2302 001a 5C 0A                   		movu.W	[r0], r10
 2303 001c 88 79                   		mov.B	1[r7], r1
 2304 001e 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 2305 0022 5F 11                   		movu.W	r1, r1
 2306 0024 4F A1                   		mul	r10, r1
 2307 0026 0C                      		bra	.L219
 2308                             	.L220:
 2309                             	.LCFI34:
1799:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return 0; /*TODO: gestion errore*/
 2310                             		.loc 1 1799 0
 2311 0027 66 01                   		mov.L	#0, r1
 2312 0029 02                      		rts
 2313                             	.L219:
 2314                             	.LCFI35:
1807:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2315                             		.loc 1 1807 0
 2316 002a 3F 7A 05                		rtsd	#20, r7-r10
 2317                             	.LFE42:
 2319                             		.section	.text.OCPWM_GetPeriodSync,"ax",@progbits
 2320                             		.global	_OCPWM_GetPeriodSync
 2322                             	_OCPWM_GetPeriodSync:
 2323                             	.LFB43:
1820:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2324                             		.loc 1 1820 0
 2325 0000 CF 12                   		mov.B	r1, r2
1824:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( channel >= NUM_HW_CNTR_CH )
 2326                             		.loc 1 1824 0
 2327 0002 5B 1E                   		movu.B	r1, r14
 2328 0004 61 8E                   		cmp	#8, r14
 2329 0006 24 2D                   		bgtu	.L225
1820:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2330                             		.loc 1 1820 0
 2331 0008 6E 7A                   		pushm	r7-r10
 2332                             	.LCFI36:
1827:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	hwCntr = TmrChMap[channel].hwCntrlId;
 2333                             		.loc 1 1827 0
 2334 000a 4B EE                   		add	r14, r14
 2335 000c 70 EE 00 00 00 00       		add	#_TmrChMap, r14
 2336 0012 CD E7 01                		mov.B	1[r14], r7
1829:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	pTmr_cnt = TmrCntMap[hwCntr];
 2337                             		.loc 1 1829 0
 2338 0015 5B 7A                   		movu.B	r7, r10
1831:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****     return (IO_TimingValueType)TMR_GetModulo(pTmr_cnt, channel) * OCHWCNTR_GetTickResolution(hwCntr
 2339                             		.loc 1 1831 0
 2340 0017 FB E2 00 00 00 00       		mov.L	#_TmrCntMap, r14
 2341 001d FE 4A E1                		mov.B	[r10,r14], r1
 2342 0020 05 00 00 00             		bsr	_TMR_GetModulo
 2343 0024 DF 1A                   		mov.W	r1, r10
 2344 0026 CF 71                   		mov.B	r7, r1
 2345 0028 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 2346 002c 5F 11                   		movu.W	r1, r1
 2347 002e 5F AA                   		movu.W	r10, r10
 2348 0030 4F A1                   		mul	r10, r1
 2349 0032 0C                      		bra	.L224
 2350                             	.L225:
 2351                             	.LCFI37:
1825:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return 0; /*TODO: gestion errore*/
 2352                             		.loc 1 1825 0
 2353 0033 66 01                   		mov.L	#0, r1
 2354 0035 02                      		rts
 2355                             	.L224:
 2356                             	.LCFI38:
1832:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2357                             		.loc 1 1832 0
 2358 0036 3F 7A 04                		rtsd	#16, r7-r10
 2359                             	.LFE43:
 2361                             		.section	.text.OCPWM_SetPeriodSync,"ax",@progbits
 2362                             		.global	_OCPWM_SetPeriodSync
 2364                             	_OCPWM_SetPeriodSync:
 2365                             	.LFB44:
1847:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2366                             		.loc 1 1847 0
1852:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 2367                             		.loc 1 1852 0
 2368 0000 5B 11                   		movu.B	r1, r1
 2369 0002 61 81                   		cmp	#8, r1
 2370 0004 25 05 38 80 00          		bgtu	.L232
1847:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2371                             		.loc 1 1847 0
 2372 0009 6E 7D                   		pushm	r7-r13
 2373                             	.LCFI39:
 2374 000b EF 2B                   		mov.L	r2, r11
1863:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			hwCntrlId = TmrChMap[channel].hwCntrlId;
 2375                             		.loc 1 1863 0
 2376 000d 4B 11                   		add	r1, r1
 2377 000f 70 11 00 00 00 00       		add	#_TmrChMap, r1
 2378 0015 CD 1C 01                		mov.B	1[r1], r12
1864:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			EnterCriticalSection();
 2379                             		.loc 1 1864 0
 2380 0018 05 00 00 00             		bsr	_OS_DisableInterrupt
 2381 001c FB E2 00 00 00 00       		mov.L	#_OS_Global, r14
 2382 0022 CD E4 01                		mov.B	1[r14], r4
1866:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if ( pHwCntrCfgTable[hwCntrlId] != NULL )
 2383                             		.loc 1 1866 0
 2384 0025 5B C7                   		movu.B	r12, r7
 2385 0027 FB A2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r10
 2386 002d FE 67 A1                		mov.L	[r7,r10], r1
 2387 0030 EF AD                   		mov.L	r10, r13
 2388 0032 5B 4A                   		movu.B	r4, r10
1868:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ExitCriticalSection();
 2389                             		.loc 1 1868 0
 2390 0034 C7 E4 01                		mov.B	r4, 1[r14]
1866:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if ( pHwCntrCfgTable[hwCntrlId] != NULL )
 2391                             		.loc 1 1866 0
 2392 0037 61 01                   		cmp	#0, r1
 2393 0039 20 43                   		beq	.L230
1868:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ExitCriticalSection();
 2394                             		.loc 1 1868 0
 2395 003b 61 0A                   		cmp	#0, r10
 2396 003d 1D                      		bne	.L231
1868:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				ExitCriticalSection();
 2397                             		.loc 1 1868 0 is_stmt 0 discriminator 1
 2398 003e 05 00 00 00             		bsr	_OS_EnableInterrupt
 2399                             		.balign 2,3,3
 2400                             	.L231:
 2401                             	.LBB43:
 2402                             	.LBB44:
 641:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	 return( (IO_TimingValueType)pHwCntrCfgTable[tmrId]->tickResolution * 0xFFFF ); /*MS TODO: definir
 2403                             		.loc 1 641 0 is_stmt 1
 2404 0042 FE 67 DA                		mov.L	[r7,r13], r10
 2405 0045 5D AA 05                		movu.W	10[r10], r10
 2406 0048 77 1A FF FF 00          		mul	#0xffff, r10
 2407                             	.LBE44:
 2408                             	.LBE43:
1871:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				if( period >= OCHWCNTR_GetMaxPeriod(TmrChMap[channel].hwCntrlId) ){
 2409                             		.loc 1 1871 0
 2410 004d 47 AB                   		cmp	r10, r11
 2411 004f 22 3D                   		bgeu	.L233
1875:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					pTmr_cnt = TmrCntMap[hwCntrlId];
 2412                             		.loc 1 1875 0
 2413 0051 FB A2 00 00 00 00       		mov.L	#_TmrCntMap, r10
 2414 0057 FE 47 AD                		mov.B	[r7,r10], r13
1878:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					TMR_SetModulo(pTmr_cnt, (period / OCHWCNTR_GetTickResolution(hwCntrlId)), pHwCntrCfgTable[hwCn
 2415                             		.loc 1 1878 0
 2416 005a CF C1                   		mov.B	r12, r1
 2417 005c 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 2418 0060 5F 1A                   		movu.W	r1, r10
 2419 0062 FB C2 00 00 00 00       		mov.L	#_pHwCntrCfgTable, r12
 2420 0068 FE 67 C7                		mov.L	[r7,r12], r7
 2421 006b CF D1                   		mov.B	r13, r1
 2422 006d EF B2                   		mov.L	r11, r2
 2423 006f FC 27 A2                		divu	r10, r2
 2424 0072 88 7B                   		mov.B	1[r7], r3
 2425 0074 05 00 00 00             		bsr	_TMR_SetModulo
 2426                             		.balign 2,3,1
 2427                             	.L236:
1850:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType retVal = IO_E_OK;
 2428                             		.loc 1 1850 0
 2429 0078 66 01                   		mov	#0, r1
 2430 007a 2E 16                   		bra	.L229
 2431                             	.L230:
1881:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					ExitCriticalSection();
 2432                             		.loc 1 1881 0
 2433 007c 61 0A                   		cmp	#0, r10
 2434 007e 21 12                   		bne	.L229
1881:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					ExitCriticalSection();
 2435                             		.loc 1 1881 0 is_stmt 0 discriminator 1
 2436 0080 05 00 00 00             		bsr	_OS_EnableInterrupt
 2437 0084 2E F4                   		bra	.L236
 2438                             	.L232:
 2439                             	.LCFI40:
1889:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		retVal = IO_E_INVALID_CHANNEL_ID;
 2440                             		.loc 1 1889 0 is_stmt 1
 2441 0086 75 41 12                		mov	#18, r1
1892:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2442                             		.loc 1 1892 0
 2443 0089 5B 11                   		movu.B	r1, r1
 2444 008b 02                      		rts
 2445                             	.L233:
 2446                             	.LCFI41:
1872:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 						retVal = IO_E_INVALID_VALUE;
 2447                             		.loc 1 1872 0
 2448 008c 75 41 13                		mov	#19, r1
 2449 008f 03                      		.balign 2,3,1
 2450                             	.L229:
1892:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2451                             		.loc 1 1892 0
 2452 0090 5B 11                   		movu.B	r1, r1
 2453 0092 3F 7D 07                		rtsd	#28, r7-r13
 2454                             	.LFE44:
 2456 0095 03                      		.section	.text.OCPWM_SetAllSync,"ax",@progbits
 2457                             		.global	_OCPWM_SetAllSync
 2459                             	_OCPWM_SetAllSync:
 2460                             	.LFB45:
1909:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2461                             		.loc 1 1909 0
 2462                             	.LVL258:
 2463 0000 6E 7A                   		pushm	r7-r10
 2464                             	.LCFI42:
 2465 0002 CF 17                   		mov.B	r1, r7
 2466 0004 EF 3A                   		mov.L	r3, r10
1910:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	OCPWM_SetSync(channel, tOn);
 2467                             		.loc 1 1910 0
 2468 0006 05 00 00 00             		bsr	_OCPWM_SetSync
 2469                             	.LVL259:
1912:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	OCPWM_SetPeriodSync(channel, period);
 2470                             		.loc 1 1912 0
 2471 000a CF 71                   		mov.B	r7, r1
 2472 000c EF A2                   		mov.L	r10, r2
1913:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2473                             		.loc 1 1913 0
 2474 000e 6F 7A                   		popm	r7-r10
 2475                             	.LVL260:
1912:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	OCPWM_SetPeriodSync(channel, period);
 2476                             		.loc 1 1912 0
 2477 0010 04 00 00 00             		bra	_OCPWM_SetPeriodSync
 2478                             	.LVL261:
 2479                             	.LFE45:
 2481                             		.section	.text.OCPWM_EnableT1ISR,"ax",@progbits
 2482                             		.global	_OCPWM_EnableT1ISR
 2484                             	_OCPWM_EnableT1ISR:
 2485                             	.LFB46:
1930:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2486                             		.loc 1 1930 0
 2487                             	.LVL262:
1932:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel >= NUM_HW_CNTR_CH)
 2488                             		.loc 1 1932 0
 2489 0000 5B 11                   		movu.B	r1, r1
 2490 0002 61 81                   		cmp	#8, r1
 2491 0004 24 10                   		bgtu	.L240
1943:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)OCHWCNTR_EnableISR(TmrChMap[channel].hwCntrlId, enableISR, callback);
 2492                             		.loc 1 1943 0
 2493 0006 4B 11                   		add	r1, r1
 2494                             	.LVL263:
 2495 0008 70 11 00 00 00 00       		add	#_TmrChMap, r1
 2496 000e 88 19                   		mov.B	1[r1], r1
 2497 0010 04 00 00 00             		bra	_OCHWCNTR_EnableISR
 2498                             	.LVL264:
 2499                             	.L240:
1944:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2500                             		.loc 1 1944 0
 2501 0014 75 41 12                		mov.L	#18, r1
 2502 0017 02                      		rts
 2503                             	.LFE46:
 2505                             		.section	.text.OCPWD_InitSync,"ax",@progbits
 2506                             		.global	_OCPWD_InitSync
 2508                             	_OCPWD_InitSync:
 2509                             	.LFB47:
1967:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2510                             		.loc 1 1967 0
 2511                             	.LVL265:
 2512 0000 7E A7                   		push.l	r7
 2513                             	.LCFI43:
 2514 0002 60 40                   		sub	#4, r0
 2515                             	.LCFI44:
 2516 0004 EF 17                   		mov.L	r1, r7
1973:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	icuCfg.ICU_Id   = pPWD_Cfg->PWD_Id;
 2517                             		.loc 1 1973 0
 2518 0006 C0 10                   		mov.B	[r1], [r0]
1974:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	icuCfg.inverted = pPWD_Cfg->inverted;
 2519                             		.loc 1 1974 0
 2520 0008 59 1E 01                		movu.B	1[r1], r14
 2521 000b 68 7E                   		shlr	#7, r14
 2522 000d C7 0E 01                		mov.B	r14, 1[r0]
1976:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_InitSync(&icuCfg);
 2523                             		.loc 1 1976 0
 2524 0010 EF 01                   		mov.L	r0, r1
 2525                             	.LVL266:
 2526 0012 05 00 00 00             		bsr	_OCICU_InitSync
 2527                             	.LVL267:
1980:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit == (IO_ErrorType)IO_E_OK)
 2528                             		.loc 1 1980 0
 2529 0016 5B 1E                   		movu.B	r1, r14
 2530 0018 61 0E                   		cmp	#0, r14
 2531 001a 21 22                   		bne	.L242
1983:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[pPWD_Cfg->PWD_Id] = *pPWD_Cfg;
 2532                             		.loc 1 1983 0
 2533 001c 58 7E                   		movu.B	[r7], r14
 2534 001e 4B EE                   		add	r14, r14
 2535 0020 70 EE 00 00 00 00       		add	#_TMR_PwdDefinition, r14
 2536 0026 D0 7E                   		mov.W	[r7], [r14]
1984:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[pPWD_Cfg->PWD_Id].in_use = 1;
 2537                             		.loc 1 1984 0
 2538 0028 58 77                   		movu.B	[r7], r7
 2539                             	.LVL268:
 2540 002a 4B 77                   		add	r7, r7
 2541 002c 70 77 00 00 00 00       		add	#_TMR_PwdDefinition, r7
 2542 0032 CD 7E 01                		mov.B	1[r7], r14
 2543 0035 78 6E                   		bset	#6, r14
1985:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[pPWD_Cfg->PWD_Id].noTon = 0;		/* by default , measure of  Ton is enabled*/
 2544                             		.loc 1 1985 0
 2545 0037 7A 5E                   		bclr	#5, r14
 2546 0039 C7 7E 01                		mov.B	r14, 1[r7]
 2547                             		.balign 2,3,1
 2548                             	.L242:
1998:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2549                             		.loc 1 1998 0
 2550 003c 5B 11                   		movu.B	r1, r1
 2551 003e 3F 77 02                		rtsd	#8, r7-r7
 2552                             	.LFE47:
 2554 0041 03                      		.section	.text.OCPWD_DeInitSync,"ax",@progbits
 2555                             		.global	_OCPWD_DeInitSync
 2557                             	_OCPWD_DeInitSync:
 2558                             	.LFB48:
2015:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2559                             		.loc 1 2015 0
 2560                             	.LVL269:
 2561 0000 6E 7A                   		pushm	r7-r10
 2562                             	.LCFI45:
 2563 0002 CF 1A                   		mov.B	r1, r10
2021:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_DeInitSync(channel);
 2564                             		.loc 1 2021 0
 2565 0004 05 00 00 00             		bsr	_OCICU_DeInitSync
 2566                             	.LVL270:
 2567 0008 CF 17                   		mov.B	r1, r7
 2568                             	.LVL271:
2023:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit == (IO_ErrorType)IO_E_OK)
 2569                             		.loc 1 2023 0
 2570 000a 5B 1E                   		movu.B	r1, r14
 2571 000c 61 0E                   		cmp	#0, r14
 2572 000e 21 2B                   		bne	.L246
2027:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		(void)memset (&TMR_PwdDefinition[channel], 0, sizeof(IO_PWD_CfgType));
 2573                             		.loc 1 2027 0
 2574 0010 5B A1                   		movu.B	r10, r1
 2575                             	.LVL272:
 2576 0012 4B 11                   		add	r1, r1
 2577 0014 70 1A 00 00 00 00       		add	#_TMR_PwdDefinition, r1, r10
 2578                             	.LVL273:
 2579 001a D3 AE                   		mov.W	r14, [r10]
2037:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		hardwareTimerLinked = TmrChMap[channel].hwCntrlId;
 2580                             		.loc 1 2037 0
 2581 001c 70 11 00 00 00 00       		add	#_TmrChMap, r1
 2582 0022 88 19                   		mov.B	1[r1], r1
 2583                             	.LVL274:
2044:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (
 2584                             		.loc 1 2044 0
 2585 0024 5B 1A                   		movu.B	r1, r10
 2586                             		.balign 2,3,1
 2587                             	.L248:
 2588 0026 62 2E                   		add	#2, r14
2014:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** IO_ErrorType OCPWD_DeInitSync(IO_ChannelType channel)
 2589                             		.loc 1 2014 0
 2590 0028 70 E4 00 00 00 00       		add	#_TmrChMap-1, r14, r4
2044:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (
 2591                             		.loc 1 2044 0
 2592 002e 58 44                   		movu.B	[r4], r4
 2593 0030 47 A4                   		cmp	r10, r4
 2594 0032 17                      		beq	.L246
2041:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		while( i < NUM_HW_CNTR_CH )
 2595                             		.loc 1 2041 0 discriminator 1
 2596 0033 75 5E 12                		cmp	#18, r14
 2597 0036 21 F0                   		bne	.L248
 2598 0038 0D                      		bra	.L251
 2599                             	.LVL275:
 2600                             	.L246:
2067:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return returnInit;
 2601                             		.loc 1 2067 0
 2602 0039 5B 71                   		movu.B	r7, r1
 2603 003b 2E 0C                   		bra	.L252
 2604                             	.LVL276:
 2605                             	.L251:
2061:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)OCHWCNTR_EnableISR(hardwareTimerLinked, 0, (Comm_Notification)NULL);
 2606                             		.loc 1 2061 0
 2607 003d 66 02                   		mov.L	#0, r2
 2608 003f EF 23                   		mov.L	r2, r3
 2609 0041 05 00 00 00             		bsr	_OCHWCNTR_EnableISR
 2610                             	.LVL277:
 2611 0045 2E F4                   		bra	.L246
 2612                             	.LVL278:
 2613                             	.L252:
2068:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2614                             		.loc 1 2068 0
 2615 0047 3F 7A 04                		rtsd	#16, r7-r10
 2616                             	.LFE48:
 2618                             		.section	.text.OCPWD_StartSampleSync,"ax",@progbits
 2619                             		.global	_OCPWD_StartSampleSync
 2621                             	_OCPWD_StartSampleSync:
 2622                             	.LFB49:
2094:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2623                             		.loc 1 2094 0
 2624 0000 6E 7C                   		pushm	r7-r12
 2625                             	.LCFI46:
 2626 0002 CF 1B                   		mov.B	r1, r11
 2627 0004 EF 2C                   		mov.L	r2, r12
2099:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_SetModeSync(channel, TMR_CH_IC_POS_EDGE);
 2628                             		.loc 1 2099 0
 2629 0006 66 12                   		mov	#1, r2
 2630 0008 05 00 00 00             		bsr	_OCICU_SetModeSync
 2631 000c EF 1A                   		mov.L	r1, r10
2101:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit != (IO_ErrorType)IO_E_OK)
 2632                             		.loc 1 2101 0
 2633 000e 61 0A                   		cmp	#0, r10
 2634 0010 21 56                   		bne	.L255
2107:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	EnterCriticalSection();
 2635                             		.loc 1 2107 0
 2636 0012 05 00 00 00             		bsr	_OS_DisableInterrupt
 2637 0016 FB 72 00 00 00 00       		mov.L	#_OS_Global, r7
 2638 001c B0 7C                   		movu.B	1[r7], r4
2112:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PWD_CtrlVar[channel].TMR_Status = PWD_FIRST_CAPT_EVENT;
 2639                             		.loc 1 2112 0
 2640 001e 5B B7                   		movu.B	r11, r7
 2641 0020 EF 7E                   		mov.L	r7, r14
 2642 0022 75 1E 18                		mul	#24, r14
 2643 0025 70 EE 00 00 00 00       		add	#_PWD_CtrlVar, r14
 2644 002b C7 EA 02                		mov.B	r10, 2[r14]
2115:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	PWD_CtrlVar[channel].callback = callback;
 2645                             		.loc 1 2115 0
 2646 002e E7 EC 02                		mov.L	r12, 8[r14]
2119:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 2647                             		.loc 1 2119 0
 2648 0031 71 4A 00                		add	#0, r4, r10
 2649 0034 1E                      		bne	.L256
2119:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	ExitCriticalSection();
 2650                             		.loc 1 2119 0 is_stmt 0 discriminator 1
 2651 0035 05 00 00 00             		bsr	_OS_EnableInterrupt
 2652 0039 03                      		.balign 2,3,1
 2653                             	.L256:
2123:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCHWCNTR_EnableISR(TmrChMap[channel].hwCntrlId, 1, OCPWD_HwTmrTurns);
 2654                             		.loc 1 2123 0 is_stmt 1
 2655 003a 4B 77                   		add	r7, r7
 2656 003c 70 77 00 00 00 00       		add	#_TmrChMap, r7
 2657 0042 88 79                   		mov.B	1[r7], r1
 2658 0044 66 12                   		mov.L	#1, r2
 2659 0046 FB 32 00 00 00 00       		mov.L	#_OCPWD_HwTmrTurns, r3
 2660 004c 05 00 00 00             		bsr	_OCHWCNTR_EnableISR
2125:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (returnInit != (IO_ErrorType)IO_E_OK)
 2661                             		.loc 1 2125 0
 2662 0050 5B 17                   		movu.B	r1, r7
 2663 0052 61 07                   		cmp	#0, r7
 2664 0054 21 12                   		bne	.L255
2131:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_EnableISR(channel, 1, OCPWD_EdgeTime);
 2665                             		.loc 1 2131 0
 2666 0056 CF B1                   		mov.B	r11, r1
 2667 0058 66 12                   		mov.L	#1, r2
 2668 005a FB 32 00 00 00 00       		mov.L	#_OCPWD_EdgeTime, r3
2134:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2669                             		.loc 1 2134 0
 2670 0060 6F 7C                   		popm	r7-r12
2131:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	returnInit = OCICU_EnableISR(channel, 1, OCPWD_EdgeTime);
 2671                             		.loc 1 2131 0
 2672 0062 04 00 00 00             		bra	_OCICU_EnableISR
 2673                             	.L255:
2134:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2674                             		.loc 1 2134 0
 2675 0066 5B 11                   		movu.B	r1, r1
 2676 0068 3F 7C 06                		rtsd	#24, r7-r12
 2677                             	.LFE49:
 2679 006b 03                      		.section	.text.OCPWD_SetFilterTime,"ax",@progbits
 2680                             		.global	_OCPWD_SetFilterTime
 2682                             	_OCPWD_SetFilterTime:
 2683                             	.LFB50:
2152:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2684                             		.loc 1 2152 0
 2685                             	.LVL279:
 2686 0000 6E 7A                   		pushm	r7-r10
 2687                             	.LCFI47:
 2688                             	.LVL280:
2155:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 2689                             		.loc 1 2155 0
 2690 0002 5B 17                   		movu.B	r1, r7
 2691 0004 61 87                   		cmp	#8, r7
 2692 0006 24 28                   		bgtu	.L260
 2693 0008 EF 2A                   		mov.L	r2, r10
 2694                             	.LBB45:
2159:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		IO_TickResType timerRes = OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
 2695                             		.loc 1 2159 0
 2696 000a FF 2E 77                		add	r7, r7, r14
 2697 000d 70 EE 00 00 00 00       		add	#_TmrChMap, r14
 2698 0013 CD E1 01                		mov.B	1[r14], r1
 2699                             	.LVL281:
 2700 0016 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 2701                             	.LVL282:
2160:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		PWD_CtrlVar[channel].TMR_Filter = (newFilterTime / timerRes);
 2702                             		.loc 1 2160 0
 2703 001a 5F 11                   		movu.W	r1, r1
 2704 001c FC 27 1A                		divu	r1, r10
 2705                             	.LVL283:
 2706 001f 75 17 18                		mul	#24, r7
 2707                             	.LVL284:
 2708 0022 70 77 00 00 00 00       		add	#_PWD_CtrlVar+12, r7
 2709 0028 D7 7A 01                		mov.W	r10, 2[r7]
 2710                             	.LVL285:
2161:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		returnVal = (IO_ErrorType) IO_E_OK;
 2711                             		.loc 1 2161 0
 2712 002b 66 01                   		mov	#0, r1
 2713                             	.LVL286:
 2714 002d 0D                      		bra	.L259
 2715                             	.LVL287:
 2716                             	.L260:
 2717                             	.LBE45:
2153:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType returnVal = (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 2718                             		.loc 1 2153 0
 2719 002e 75 41 12                		mov	#18, r1
 2720                             	.LVL288:
 2721 0031 03                      		.balign 2,3,2
 2722                             	.L259:
2167:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2723                             		.loc 1 2167 0
 2724 0032 75 21 12                		and #18, r1
 2725                             	.LVL289:
 2726 0035 3F 7A 04                		rtsd	#16, r7-r10
 2727                             	.LFE50:
 2729                             		.section	.text.OCPWD_SetTonMeasure,"ax",@progbits
 2730                             		.global	_OCPWD_SetTonMeasure
 2732                             	_OCPWD_SetTonMeasure:
 2733                             	.LFB51:
2186:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2734                             		.loc 1 2186 0
 2735                             	.LVL290:
2189:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if (channel < NUM_HW_CNTR_CH)
 2736                             		.loc 1 2189 0
 2737 0000 5B 11                   		movu.B	r1, r1
 2738 0002 61 81                   		cmp	#8, r1
 2739 0004 24 1A                   		bgtu	.L264
2193:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_PwdDefinition[channel].noTon = !(bTon==TRUE);
 2740                             		.loc 1 2193 0
 2741 0006 4B 11                   		add	r1, r1
 2742                             	.LVL291:
 2743 0008 70 11 00 00 00 00       		add	#_TMR_PwdDefinition, r1
 2744 000e 5B 22                   		movu.B	r2, r2
 2745 0010 CD 1E 01                		mov.B	1[r1], r14
 2746 0013 61 12                   		cmp	#1, r2
 2747 0015 FD E5 1E                		bmne	#5, r14
 2748 0018 C7 1E 01                		mov.B	r14, 1[r1]
 2749                             	.LVL292:
2194:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		returnVal = (IO_ErrorType) IO_E_OK;
 2750                             		.loc 1 2194 0
 2751 001b 66 01                   		mov	#0, r1
 2752 001d 0D                      		bra	.L263
 2753                             	.LVL293:
 2754                             	.L264:
2187:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IO_ErrorType returnVal = (IO_ErrorType)IO_E_INVALID_CHANNEL_ID;
 2755                             		.loc 1 2187 0
 2756 001e 75 41 12                		mov	#18, r1
 2757                             	.LVL294:
 2758 0021 03                      		.balign 2,3,2
 2759                             	.L263:
2200:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2760                             		.loc 1 2200 0
 2761 0022 75 21 12                		and #18, r1
 2762                             	.LVL295:
 2763 0025 02                      		rts
 2764                             	.LFE51:
 2766                             		.section	.text.OCPWD_GetAllSync,"ax",@progbits
 2767                             		.global	_OCPWD_GetAllSync
 2769                             	_OCPWD_GetAllSync:
 2770                             	.LFB55:
2540:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2771                             		.loc 1 2540 0
 2772                             	.LVL296:
 2773 0000 6E 7A                   		pushm	r7-r10
 2774                             	.LCFI48:
 2775 0002 EF 2A                   		mov.L	r2, r10
2545:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	timerRes = OCHWCNTR_GetTickResolution(TmrChMap[channel].hwCntrlId);
 2776                             		.loc 1 2545 0
 2777 0004 5B 17                   		movu.B	r1, r7
 2778 0006 FF 2E 77                		add	r7, r7, r14
 2779 0009 70 EE 00 00 00 00       		add	#_TmrChMap, r14
 2780 000f CD E1 01                		mov.B	1[r14], r1
 2781                             	.LVL297:
 2782 0012 05 00 00 00             		bsr	_OCHWCNTR_GetTickResolution
 2783                             	.LVL298:
2548:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->period = (IO_TimingValueType)PWD_CtrlVar[channel].Measurement.period * (IO_TimingValu
 2784                             		.loc 1 2548 0
 2785 0016 75 17 18                		mul	#24, r7
 2786                             	.LVL299:
 2787 0019 70 77 00 00 00 00       		add	#_PWD_CtrlVar, r7
 2788 001f 5F 11                   		movu.W	r1, r1
 2789 0021 EF 1E                   		mov.L	r1, r14
 2790 0023 06 8D 7E 04             		mul	16[r7].L, r14
 2791 0027 E3 AE                   		mov.L	r14, [r10]
2549:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->tOn = (IO_TimingValueType)PWD_CtrlVar[channel].Measurement.tOn * (IO_TimingValueType)
 2792                             		.loc 1 2549 0
 2793 0029 06 8D 71 05             		mul	20[r7].L, r1
 2794                             	.LVL300:
 2795 002d E7 A1 01                		mov.L	r1, 4[r10]
2551:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2796                             		.loc 1 2551 0
 2797 0030 3F 7A 04                		rtsd	#16, r7-r10
 2798                             	.LFE55:
 2800                             		.section	.text.OCPWD_GetAllSyncInTicks,"ax",@progbits
 2801                             		.global	_OCPWD_GetAllSyncInTicks
 2803                             	_OCPWD_GetAllSyncInTicks:
 2804                             	.LFB56:
2570:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2805                             		.loc 1 2570 0
 2806                             	.LVL301:
2571:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->period = PWD_CtrlVar[channel].Measurement.period;
 2807                             		.loc 1 2571 0
 2808 0000 5B 11                   		movu.B	r1, r1
 2809 0002 75 11 18                		mul	#24, r1
 2810                             	.LVL302:
 2811 0005 70 11 00 00 00 00       		add	#_PWD_CtrlVar, r1
 2812 000b ED 1E 04                		mov.L	16[r1], r14
 2813 000e E3 2E                   		mov.L	r14, [r2]
2572:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	measurement->tOn    = PWD_CtrlVar[channel].Measurement.tOn;
 2814                             		.loc 1 2572 0
 2815 0010 ED 1E 05                		mov.L	20[r1], r14
 2816 0013 E7 2E 01                		mov.L	r14, 4[r2]
 2817 0016 02                      		rts
 2818                             	.LFE56:
 2820                             		.section	.text.OCPWD_StopSampleSync,"ax",@progbits
 2821                             		.global	_OCPWD_StopSampleSync
 2823                             	_OCPWD_StopSampleSync:
 2824                             	.LFB57:
2586:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2825                             		.loc 1 2586 0
 2826                             	.LVL303:
2590:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return OCICU_EnableISR(channel, 0, (Comm_Notification)NULL);
 2827                             		.loc 1 2590 0
 2828 0000 66 02                   		mov.L	#0, r2
 2829 0002 EF 23                   		mov.L	r2, r3
 2830 0004 04 00 00 00             		bra	_OCICU_EnableISR
 2831                             	.LVL304:
 2832                             	.LFE57:
 2834                             		.section	.text.HWTMRCH_ISR,"ax",@progbits
 2835                             		.global	_HWTMRCH_ISR
 2837                             	_HWTMRCH_ISR:
 2838                             	.LFB58:
2606:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2839                             		.loc 1 2606 0
 2840                             	.LVL305:
 2841 0000 6E 7A                   		pushm	r7-r10
 2842                             	.LCFI49:
 2843 0002 CF 17                   		mov.B	r1, r7
2607:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_ENTER();
 2844                             		.loc 1 2607 0
 2845 0004 05 00 00 00             		bsr	_LIB_IRQMonitor_Enter
 2846                             	.LVL306:
2609:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( channel < NUM_HW_CNTR_CH )
 2847                             		.loc 1 2609 0
 2848 0008 5B 7E                   		movu.B	r7, r14
 2849 000a 61 8E                   		cmp	#8, r14
 2850 000c 24 28                   		bgtu	.L270
 2851                             	.LBB46:
2612:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_CNTAddressType pTmr_ch = TmrChMap[channel].Channel;
 2852                             		.loc 1 2612 0
 2853 000e FF 2A EE                		add	r14, r14, r10
 2854 0011 70 AA 00 00 00 00       		add	#_TmrChMap, r10
 2855 0017 CC AA                   		mov.B	[r10], r10
 2856                             	.LVL307:
2614:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if( TMR_CH_Callback[channel] != 0 )
 2857                             		.loc 1 2614 0
 2858 0019 FB 42 00 00 00 00       		mov.L	#_TMR_CH_Callback, r4
 2859 001f FE 6E 4E                		mov.L	[r14,r4], r14
 2860 0022 61 0E                   		cmp	#0, r14
 2861 0024 12                      		beq	.L271
2617:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			(void)(TMR_CH_Callback)[channel]((IO_NotificationType)IO_N_COMPLETED, (IO_ChannelType)channel, (
 2862                             		.loc 1 2617 0
 2863 0025 66 61                   		mov	#6, r1
 2864 0027 CF 72                   		mov.B	r7, r2
 2865 0029 66 03                   		mov	#0, r3
 2866 002b 7F 1E                   		jsr	r14
 2867                             	.LVL308:
 2868 002d 03                      		.balign 2,3,1
 2869                             	.L271:
2621:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		TMR_ClearCHF(pTmr_ch);
 2870                             		.loc 1 2621 0
 2871 002e CF A1                   		mov.B	r10, r1
 2872 0030 05 00 00 00             		bsr	_TMR_ClearCHF
 2873                             	.LVL309:
 2874                             		.balign 2,3,1
 2875                             	.L270:
 2876                             	.LBE46:
2626:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2877                             		.loc 1 2626 0
 2878 0034 6F 7A                   		popm	r7-r10
 2879                             	.LVL310:
2625:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	IRQ_MONITOR_EXIT();
 2880                             		.loc 1 2625 0
 2881 0036 04 00 00 00             		bra	_LIB_IRQMonitor_Exit
 2882                             	.LVL311:
 2883                             	.LFE58:
 2885                             		.section	.text.OCTPM_GetTimerIDFromChannelID,"ax",@progbits
 2886                             		.global	_OCTPM_GetTimerIDFromChannelID
 2888                             	_OCTPM_GetTimerIDFromChannelID:
 2889                             	.LFB60:
2665:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2890                             		.loc 1 2665 0
 2891                             	.LVL312:
2666:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( chID >= NUM_HW_CNTR_CH ){
 2892                             		.loc 1 2666 0
 2893 0000 61 81                   		cmp	#8, r1
 2894 0002 2A 10                   		bgt	.L278
2670:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	*pTmrId = TmrChMap[chID].hwCntrlId;
 2895                             		.loc 1 2670 0
 2896 0004 4B 11                   		add	r1, r1
 2897                             	.LVL313:
 2898 0006 70 11 00 00 00 00       		add	#_TmrChMap, r1
 2899 000c C1 12 01                		mov.B	1[r1], [r2]
2672:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return (IO_ErrorType)IO_E_OK;
 2900                             		.loc 1 2672 0
 2901 000f 66 01                   		mov	#0, r1
 2902 0011 0D                      		bra	.L277
 2903                             	.LVL314:
 2904                             	.L278:
2667:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 2905                             		.loc 1 2667 0
 2906 0012 75 41 17                		mov	#23, r1
 2907                             	.LVL315:
 2908 0015 03                      		.balign 2,3,2
 2909                             	.L277:
2673:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2910                             		.loc 1 2673 0
 2911 0016 75 21 17                		and #23, r1
 2912 0019 02                      		rts
 2913                             	.LFE60:
 2915                             		.section	.text.OCTPM_GetTimerIDFromChannelID_1,"ax",@progbits
 2916                             		.global	_OCTPM_GetTimerIDFromChannelID_1
 2918                             	_OCTPM_GetTimerIDFromChannelID_1:
 2919                             	.LFB61:
2676:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2920                             		.loc 1 2676 0
 2921                             	.LVL316:
 2922                             		.loc 1 2677 0
 2923 0000 5B 11                   		movu.B	r1, r1
 2924 0002 4B 11                   		add	r1, r1
 2925                             	.LVL317:
 2926 0004 70 11 00 00 00 00       		add	#_TmrChMap, r1
2678:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 2927                             		.loc 1 2678 0
 2928 000a B0 19                   		movu.B	1[r1], r1
 2929 000c 02                      		rts
 2930                             	.LFE61:
 2932                             		.section	.text.OCTMR_GetChannel,"ax",@progbits
 2933                             		.global	_OCTMR_GetChannel
 2935                             	_OCTMR_GetChannel:
 2936                             	.LFB62:
2679:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2680:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2681:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*
2682:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function search for TMR channel starting from portAddress and pinMask (read pin)
2683:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [in]  portAddress
2684:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [in]  pinMask
2685:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [out]  pTMRch  the channel ID found
2686:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2687:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return bool_t	TRUE if found
2688:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  */
2689:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** bool_t OCTMR_GetChannel(DIO_ModuleMapPortAddressType portAddress,	DIO_ModuleMapMaskType pinMask, ui
2690:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2937                             		.loc 1 2690 0
 2938                             	.LVL318:
 2939 0000 FB 42 00 00 00 00       		mov.L	#_TmrChToPinMap, r4
2691:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t j;
2692:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	bool_t channelfound = FALSE;
2693:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2694:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for (j = 0; j < NUM_HW_CNTR_CH; j++) 
 2940                             		.loc 1 2694 0
 2941 0006 66 0E                   		mov	#0, r14
2695:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2696:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( ModuleMapPortAddressMatch(TmrChToPinMap[j].PortAddress,portAddress) && ModuleMapPortAddressI
2697:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2698:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if (TmrChToPinMap[j].PinMask == pinMask) 
 2942                             		.loc 1 2698 0
 2943 0008 5B 22                   		movu.B	r2, r2
 2944                             	.LVL319:
 2945                             		.balign 2,3,1
 2946                             	.L283:
2696:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( ModuleMapPortAddressMatch(TmrChToPinMap[j].PortAddress,portAddress) && ModuleMapPortAddressI
 2947                             		.loc 1 2696 0
 2948 000a EC 45                   		mov.L	[r4], r5
 2949 000c 47 15                   		cmp	r1, r5
 2950 000e 21 10                   		bne	.L281
2696:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( ModuleMapPortAddressMatch(TmrChToPinMap[j].PortAddress,portAddress) && ModuleMapPortAddressI
 2951                             		.loc 1 2696 0 is_stmt 0 discriminator 1
 2952 0010 61 01                   		cmp	#0, r1
 2953 0012 20 0C                   		beq	.L281
 2954                             		.loc 1 2698 0 is_stmt 1
 2955 0014 B1 45                   		movu.B	4[r4], r5
 2956 0016 47 25                   		cmp	r2, r5
 2957 0018 1E                      		bne	.L281
 2958                             	.LVL320:
2699:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2700:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				channelfound = TRUE;
2701:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				*pTMRch = j;
 2959                             		.loc 1 2701 0
 2960 0019 C3 3E                   		mov.B	r14, [r3]
2700:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				channelfound = TRUE;
 2961                             		.loc 1 2700 0
 2962 001b 66 11                   		mov.L	#1, r1
 2963                             	.LVL321:
2702:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				break;
 2964                             		.loc 1 2702 0
 2965 001d 02                      		rts
 2966                             	.LVL322:
 2967                             	.L281:
2694:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for (j = 0; j < NUM_HW_CNTR_CH; j++) 
 2968                             		.loc 1 2694 0
 2969 001e 62 1E                   		add	#1, r14
 2970                             	.LVL323:
 2971 0020 62 84                   		add	#8, r4
 2972 0022 5B E5                   		movu.B	r14, r5
 2973 0024 61 95                   		cmp	#9, r5
 2974 0026 21 E4                   		bne	.L283
2692:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	bool_t channelfound = FALSE;
 2975                             		.loc 1 2692 0
 2976 0028 66 01                   		mov.L	#0, r1
 2977                             	.LVL324:
2703:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}/*end if*/
2704:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}/*end if*/
2705:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}/*end for*/
2706:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	
2707:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return channelfound;
2708:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** } /*end TMR_GetChannel*/
 2978                             		.loc 1 2708 0
 2979 002a 02                      		rts
 2980                             	.LFE62:
 2982 002b 03                      		.section	.text.OCTPM_GetChannelSync,"ax",@progbits
 2983                             		.global	_OCTPM_GetChannelSync
 2985                             	_OCTPM_GetChannelSync:
 2986                             	.LFB59:
2639:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2987                             		.loc 1 2639 0
2642:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if(!pIOMap)
 2988                             		.loc 1 2642 0
 2989 0000 71 1E 00                		add	#0, r1, r14
 2990 0003 18                      		bne	.L289
 2991 0004 2E 26                   		bra	.L296
 2992                             	.L291:
 2993                             	.LCFI50:
2644:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 2994                             		.loc 1 2644 0
 2995 0006 75 41 17                		mov	#23, r1
 2996 0009 2E 1B                   		bra	.L290
 2997                             	.L289:
 2998                             	.LCFI51:
2639:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 2999                             		.loc 1 2639 0
 3000 000b 7E A7                   		push.l	r7
 3001                             	.LCFI52:
 3002 000d 60 40                   		sub	#4, r0
 3003                             	.LCFI53:
 3004 000f EF 27                   		mov.L	r2, r7
2647:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if ( OCTMR_GetChannel(pIOMap->PortAddress,pIOMap->PinMask,&ch) )
 3005                             		.loc 1 2647 0
 3006 0011 EC E1                   		mov.L	[r14], r1
 3007 0013 CD E2 04                		mov.B	4[r14], r2
 3008 0016 EF 03                   		mov.L	r0, r3
 3009 0018 05 00 00 00             		bsr	_OCTMR_GetChannel
 3010 001c 61 01                   		cmp	#0, r1
 3011 001e 20 E8                   		beq	.L291
2649:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		*pChannel = ch;
 3012                             		.loc 1 2649 0
 3013 0020 C0 07                   		mov.B	[r0], [r7]
2650:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_OK;
 3014                             		.loc 1 2650 0
 3015 0022 66 01                   		mov	#0, r1
 3016                             		.balign 2,3,2
 3017                             	.L290:
2653:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 3018                             		.loc 1 2653 0
 3019 0024 75 21 17                		and #23, r1
 3020 0027 3F 77 02                		rtsd	#8, r7-r7
 3021                             	.L296:
 3022                             	.LCFI54:
2644:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		return (IO_ErrorType)IO_E_UNEXPECTED_CONDITION;
 3023                             		.loc 1 2644 0
 3024 002a 75 41 17                		mov	#23, r1
2653:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 3025                             		.loc 1 2653 0
 3026 002d 75 21 17                		and #23, r1
 3027 0030 02                      		rts
 3028                             	.LFE59:
 3030 0031 03                      		.section	.text.OCTMR_GetChannelIDFromPinID,"ax",@progbits
 3031                             		.global	_OCTMR_GetChannelIDFromPinID
 3033                             	_OCTMR_GetChannelIDFromPinID:
 3034                             	.LFB63:
2709:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2710:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /**
2711:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function get the channel id prom pin id
2712:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [in] pinID
2713:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2714:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return   channel id
2715:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval   0xFF if not found
2716:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  */
2717:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t OCTMR_GetChannelIDFromPinID(uint8_t pinID)
2718:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 3035                             		.loc 1 2718 0
 3036                             	.LVL325:
2719:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t chId=0xFF;
2720:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	const IO_ModuleIOMapType *pinMap = OCDIO_GetIOMapItem(pinID);
 3037                             		.loc 1 2720 0
 3038 0000 05 00 00 00             		bsr	_OCDIO_GetIOMapItem
 3039                             	.LVL326:
2721:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t j;
2722:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2723:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for(j=0; j < NUM_HW_CNTR_CH; j++)
2724:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2725:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if ( ModuleMapPortAddressMatch(TmrChToPinMap[j].PortAddress,pinMap->PortAddress) && ModuleMapPort
 3040                             		.loc 1 2725 0
 3041 0004 EC 13                   		mov.L	[r1], r3
 3042 0006 FB 42 00 00 00 00       		mov.L	#_TmrChToPinMap, r4
2723:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for(j=0; j < NUM_HW_CNTR_CH; j++)
 3043                             		.loc 1 2723 0
 3044 000c 66 0E                   		mov	#0, r14
 3045                             	.LVL327:
 3046                             		.balign 2,3,1
 3047                             	.L300:
 3048                             		.loc 1 2725 0
 3049 000e EC 42                   		mov.L	[r4], r2
 3050 0010 47 32                   		cmp	r3, r2
 3051 0012 21 0C                   		bne	.L298
 3052                             		.loc 1 2725 0 is_stmt 0 discriminator 1
 3053 0014 61 03                   		cmp	#0, r3
 3054 0016 10                      		beq	.L298
2726:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2727:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			if(  TmrChToPinMap[j].PinMask == pinMap->PinMask )
 3055                             		.loc 1 2727 0 is_stmt 1
 3056 0017 B1 45                   		movu.B	4[r4], r5
 3057 0019 45 15 04                		cmp	4[r1].UB, r5
 3058 001c 20 10                   		beq	.L301
 3059                             		.balign 2,3,1
 3060                             	.L298:
2723:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	for(j=0; j < NUM_HW_CNTR_CH; j++)
 3061                             		.loc 1 2723 0
 3062 001e 62 1E                   		add	#1, r14
 3063                             	.LVL328:
 3064 0020 62 84                   		add	#8, r4
 3065 0022 5B E2                   		movu.B	r14, r2
 3066 0024 61 92                   		cmp	#9, r2
 3067 0026 21 E8                   		bne	.L300
2719:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	uint8_t chId=0xFF;
 3068                             		.loc 1 2719 0
 3069 0028 FB 16 FF                		mov	#-1, r1
 3070                             	.LVL329:
 3071 002b 0B                      		bra	.L299
 3072                             	.LVL330:
 3073                             	.L301:
 3074                             		.loc 1 2727 0
 3075 002c CF E1                   		mov.B	r14, r1
 3076                             	.LVL331:
 3077                             		.balign 2,3,1
 3078                             	.L299:
2728:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2729:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				chId = j;
2730:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				break;
2731:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2732:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2733:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2734:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return chId;
2735:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 3079                             		.loc 1 2735 0
 3080 002e 5B 11                   		movu.B	r1, r1
 3081 0030 02                      		rts
 3082                             	.LFE63:
 3084 0031 03                      		.section	.text.OCTPM_GetPinIDFromChannelID,"ax",@progbits
 3085                             		.global	_OCTPM_GetPinIDFromChannelID
 3087                             	_OCTPM_GetPinIDFromChannelID:
 3088                             	.LFB64:
2736:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2737:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** /*
2738:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** The function get the pin id from channel id
2739:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2740:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \param [in] chID
2741:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \return   pin id
2742:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \retval   0xFF if not found
2743:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2744:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** \note please avoid calling this method in ISR because the for statement could
2745:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c ****  */
2746:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** uint8_t OCTPM_GetPinIDFromChannelID(int chID )
2747:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** {
 3089                             		.loc 1 2747 0
 3090                             	.LVL332:
 3091 0000 6E 7B                   		pushm	r7-r11
 3092                             	.LCFI55:
2748:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	const TMR_MapType * pinPtr;
2749:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	int i;
2750:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2751:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	if( chID < NUM_HW_CNTR_CH )
 3093                             		.loc 1 2751 0
 3094 0002 61 81                   		cmp	#8, r1
 3095 0004 2B 07                   		ble	.L307
 3096                             	.LVL333:
 3097                             		.balign 2,3,2
 3098                             	.L309:
2752:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	{
2753:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pinPtr = &TmrChToPinMap[chID];
2754:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2755:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (ModuleMapPortAddressIsValid(pinPtr->PortAddress))
2756:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		{
2757:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			for( i=0; i<IO_MODULE_MAP_SIZE; i++)
2758:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			{
2759:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				const IO_ModuleIOMapType *pinMap = OCDIO_GetIOMapItem(i);
2760:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 
2761:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				if( (ModuleMapPortAddressMatch(pinMap->PortAddress, pinPtr->PortAddress))
2762:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				&& (pinMap->PinMask == pinPtr->PinMask) )
2763:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				{
2764:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 					return i;
2765:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				}
2766:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			}
2767:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		}
2768:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	}
2769:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 	return 0xFF; /* invalid pin*/
 3099                             		.loc 1 2769 0
 3100 0006 FB B6 FF                		mov	#-1, r11
 3101 0009 2E 30                   		bra	.L308
 3102                             	.LVL334:
 3103                             	.L307:
2753:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		pinPtr = &TmrChToPinMap[chID];
 3104                             		.loc 1 2753 0
 3105 000b FD C3 1A                		shll	#3, r1, r10
 3106 000e 70 AA 00 00 00 00       		add	#_TmrChToPinMap, r10
 3107                             	.LVL335:
2755:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 		if (ModuleMapPortAddressIsValid(pinPtr->PortAddress))
 3108                             		.loc 1 2755 0
 3109 0014 EC A7                   		mov.L	[r10], r7
 3110 0016 61 07                   		cmp	#0, r7
 3111 0018 20 EE                   		beq	.L309
 3112 001a 66 07                   		mov.L	#0, r7
 3113                             	.LVL336:
 3114                             		.balign 2,3,1
 3115                             	.L311:
 3116                             	.LBB47:
2759:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				const IO_ModuleIOMapType *pinMap = OCDIO_GetIOMapItem(i);
 3117                             		.loc 1 2759 0
 3118 001c CF 7B                   		mov.B	r7, r11
 3119 001e CF 71                   		mov.B	r7, r1
 3120 0020 05 00 00 00             		bsr	_OCDIO_GetIOMapItem
 3121                             	.LVL337:
2761:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				if( (ModuleMapPortAddressMatch(pinMap->PortAddress, pinPtr->PortAddress))
 3122                             		.loc 1 2761 0
 3123 0024 EC 1E                   		mov.L	[r1], r14
 3124 0026 06 84 AE                		cmp	[r10].L, r14
 3125 0029 1F                      		bne	.L310
2762:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 				&& (pinMap->PinMask == pinPtr->PinMask) )
 3126                             		.loc 1 2762 0
 3127 002a B1 14                   		movu.B	4[r1], r4
 3128 002c 45 A4 04                		cmp	4[r10].UB, r4
 3129 002f 12                      		beq	.L308
 3130                             		.balign 2,3,1
 3131                             	.L310:
 3132                             	.LBE47:
2757:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** 			for( i=0; i<IO_MODULE_MAP_SIZE; i++)
 3133                             		.loc 1 2757 0
 3134 0030 62 17                   		add	#1, r7
 3135                             	.LVL338:
 3136 0032 75 57 2C                		cmp	#44, r7
 3137 0035 21 E7                   		bne	.L311
 3138 0037 2E CF                   		bra	.L309
 3139                             	.LVL339:
 3140                             	.L308:
2770:C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM\OCTPM_drv.c **** }
 3141                             		.loc 1 2770 0
 3142 0039 5B B1                   		movu.B	r11, r1
 3143 003b 3F 7B 05                		rtsd	#20, r7-r11
 3144                             	.LFE64:
 3146                             		.comm	_TMR_CntTrigVal,10,2
 3147                             		.comm	_PWD_CtrlVar,216,4
 3148                             		.section	.bss.pHwCntrCfgTable,"aw",@nobits
 3149                             		.balign 4
 3152                             	_pHwCntrCfgTable:
 3153 0000 00 00 00 00 00 00 00 00 		.zero	20
 3153      00 00 00 00 00 00 00 00 
 3153      00 00 00 00 
 3154                             		.section	.bss.TMR_Callback,"aw",@nobits
 3155                             		.balign 4
 3158                             	_TMR_Callback:
 3159 0000 00 00 00 00 00 00 00 00 		.zero	20
 3159      00 00 00 00 00 00 00 00 
 3159      00 00 00 00 
 3160                             		.section	.bss.TMR_IcuDefinition,"aw",@nobits
 3163                             	_TMR_IcuDefinition:
 3164 0000 00 00 00 00 00 00 00 00 		.zero	18
 3164      00 00 00 00 00 00 00 00 
 3164      00 00 
 3165                             		.section	.bss.TMR_CH_Callback,"aw",@nobits
 3166                             		.balign 4
 3169                             	_TMR_CH_Callback:
 3170 0000 00 00 00 00 00 00 00 00 		.zero	36
 3170      00 00 00 00 00 00 00 00 
 3170      00 00 00 00 00 00 00 00 
 3170      00 00 00 00 00 00 00 00 
 3170      00 00 00 00 
 3171                             		.section	.bss.TMR_OcuDefinition,"aw",@nobits
 3174                             	_TMR_OcuDefinition:
 3175 0000 00 00 00 00 00 00 00 00 		.zero	18
 3175      00 00 00 00 00 00 00 00 
 3175      00 00 
 3176                             		.section	.bss.pPwmCfgTable,"aw",@nobits
 3177                             		.balign 4
 3180                             	_pPwmCfgTable:
 3181 0000 00 00 00 00 00 00 00 00 		.zero	36
 3181      00 00 00 00 00 00 00 00 
 3181      00 00 00 00 00 00 00 00 
 3181      00 00 00 00 00 00 00 00 
 3181      00 00 00 00 
 3182                             		.section	.bss.TMR_PwdDefinition,"aw",@nobits
 3185                             	_TMR_PwdDefinition:
 3186 0000 00 00 00 00 00 00 00 00 		.zero	18
 3186      00 00 00 00 00 00 00 00 
 3186      00 00 
 4337                             	.Letext0:
 4338                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 4339                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\OS\\EmbOS\\RX200_GNU\\V388\\Inc/RTOS.h"
 4340                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\RN_RX200/RN_RX200_cfg.h"
 4341                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers/IO_driver.h"
 4342                             		.file 6 "C:/Workspace/FW_Inertia/branch_indesit/Drivers/OCTPM/OCTPM_drv.h"
 4343                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Error/LIB_Error.h"
 4344                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\RN_RX200/RN_RX200_hal.h"
 4345                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_SecurityCheck/LIB_TaskMon
 4346                             		.file 10 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers\\OCDIO/OCDIO_drv.h"
DEFINED SYMBOLS
                            *ABS*:00000000 OCTPM_drv.c
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:6      .text.OCPWD_GetIntervalInTicks:00000000 _OCPWD_GetIntervalInTicks
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12     .text.OCPWD_GetIntervalInTicks:00000000 L0
                            *COM*:000000d8 _PWD_CtrlVar
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3152   .bss.pHwCntrCfgTable:00000000 _pHwCntrCfgTable
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:57     .text.OCTPM_InitSync:00000000 _OCTPM_InitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:60     .text.OCTPM_InitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:66     .text.OCHWCNTR_InitSync:00000000 _OCHWCNTR_InitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:71     .text.OCHWCNTR_InitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:218    .text.OCHWCNTR_DeInitSync:00000000 _OCHWCNTR_DeInitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:221    .text.OCHWCNTR_DeInitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:305    .text.OCHWCNTR_GetSync:00000000 _OCHWCNTR_GetSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:309    .text.OCHWCNTR_GetSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:333    .text.OCHWCNTR_GetTicksSync:00000000 _OCHWCNTR_GetTicksSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:338    .text.OCHWCNTR_GetTicksSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:350    .text.OCHWCNTR_SetSync:00000000 _OCHWCNTR_SetSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:355    .text.OCHWCNTR_SetSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:394    .text.OCHWCNTR_EnableMulti:00000000 _OCHWCNTR_EnableMulti
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:398    .text.OCHWCNTR_EnableMulti:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:417    .text.OCHWCNTR_Enable:00000000 _OCHWCNTR_Enable
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:421    .text.OCHWCNTR_Enable:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:473    .text.OCHWCNTR_EnableISR:00000000 _OCHWCNTR_EnableISR
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:477    .text.OCHWCNTR_EnableISR:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3158   .bss.TMR_Callback:00000000 _TMR_Callback
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:558    .text.OCHWCNTR_GetTickResolution:00000000 _OCHWCNTR_GetTickResolution
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:563    .text.OCHWCNTR_GetTickResolution:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:578    .text.OCHWCNTR_GetResolutionByTimerChannel:00000000 _OCHWCNTR_GetResolutionByTimerChannel
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:583    .text.OCHWCNTR_GetResolutionByTimerChannel:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:595    .text.OCHWCNTR_GetTimerModulus:00000000 _OCHWCNTR_GetTimerModulus
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:600    .text.OCHWCNTR_GetTimerModulus:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:612    .text.OCHWCNTR_GetPeriod:00000000 _OCHWCNTR_GetPeriod
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:617    .text.OCHWCNTR_GetPeriod:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:630    .text.OCHWCNTR_GetMaxPeriod:00000000 _OCHWCNTR_GetMaxPeriod
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:635    .text.OCHWCNTR_GetMaxPeriod:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:648    .text.OCHWCNTR_GetDelta:00000000 _OCHWCNTR_GetDelta
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:653    .text.OCHWCNTR_GetDelta:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:664    .text.HWCNTR_ISR:00000000 _HWCNTR_ISR
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:668    .text.HWCNTR_ISR:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:718    .text.OCHWCNTR_Trigger:00000000 _OCHWCNTR_Trigger
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:722    .text.OCHWCNTR_Trigger:00000000 L0
                            *COM*:0000000a _TMR_CntTrigVal
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:759    .text.OCICU_InitSync:00000000 _OCICU_InitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:764    .text.OCICU_InitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3163   .bss.TMR_IcuDefinition:00000000 _TMR_IcuDefinition
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:812    .text.OCICU_DeInitSync:00000000 _OCICU_DeInitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:817    .text.OCICU_DeInitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:849    .text.OCICU_GetSync:00000000 _OCICU_GetSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:853    .text.OCICU_GetSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:879    .text.OCICU_GetTickSync:00000000 _OCICU_GetTickSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:884    .text.OCICU_GetTickSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:897    .text.OCICU_SetModeSync:00000000 _OCICU_SetModeSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:902    .text.OCICU_SetModeSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:936    .text.OCPWD_EdgeTime:00000000 _OCPWD_EdgeTime
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:940    .text.OCPWD_EdgeTime:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3185   .bss.TMR_PwdDefinition:00000000 _TMR_PwdDefinition
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1223   .text.OCPWD_HwTmrTurns:00000000 _OCPWD_HwTmrTurns
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1227   .text.OCPWD_HwTmrTurns:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1282   .text.OCICU_GetModeSync:00000000 _OCICU_GetModeSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1286   .text.OCICU_GetModeSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1321   .text.OCICU_ToggleModeSync:00000000 _OCICU_ToggleModeSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1326   .text.OCICU_ToggleModeSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1353   .text.OCICU_EnableISR:00000000 _OCICU_EnableISR
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1357   .text.OCICU_EnableISR:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3169   .bss.TMR_CH_Callback:00000000 _TMR_CH_Callback
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1426   .text.OCOCU_InitSync:00000000 _OCOCU_InitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1431   .text.OCOCU_InitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3174   .bss.TMR_OcuDefinition:00000000 _TMR_OcuDefinition
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1479   .text.OCOCU_DeInitSync:00000000 _OCOCU_DeInitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1484   .text.OCOCU_DeInitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1516   .text.OCOCU_GetSync:00000000 _OCOCU_GetSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1521   .text.OCOCU_GetSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1533   .text.OCOCU_GetSyncTickResolution:00000000 _OCOCU_GetSyncTickResolution
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1538   .text.OCOCU_GetSyncTickResolution:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1550   .text.OCOCU_SetThreshold1Sync:00000000 _OCOCU_SetThreshold1Sync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1553   .text.OCOCU_SetThreshold1Sync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1601   .text.OCOCU_SetThreshold1TickResolutionSync:00000000 _OCOCU_SetThreshold1TickResolutionSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1605   .text.OCOCU_SetThreshold1TickResolutionSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1653   .text.OCOCU_IsTickElapsed:00000000 _OCOCU_IsTickElapsed
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1657   .text.OCOCU_IsTickElapsed:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1732   .text.OCOCU_GetTickValByTriggerIndex:00000000 _OCOCU_GetTickValByTriggerIndex
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1736   .text.OCOCU_GetTickValByTriggerIndex:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1790   .text.OCOCU_SetTickValByTriggerIndex:00000000 _OCOCU_SetTickValByTriggerIndex
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1794   .text.OCOCU_SetTickValByTriggerIndex:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1852   .text.OCOCU_SetEventSync:00000000 _OCOCU_SetEventSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1855   .text.OCOCU_SetEventSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1952   .text.OCOCU_SetRelativeEventSync:00000000 _OCOCU_SetRelativeEventSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1955   .text.OCOCU_SetRelativeEventSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2041   .text.OCOCU_SetThreshold2Sync:00000000 _OCOCU_SetThreshold2Sync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2046   .text.OCOCU_SetThreshold2Sync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2059   .text.OCOCU_SetThreshold2TickResolutionSync:00000000 _OCOCU_SetThreshold2TickResolutionSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2064   .text.OCOCU_SetThreshold2TickResolutionSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2077   .text.OCOCU_SetModeSync:00000000 _OCOCU_SetModeSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2081   .text.OCOCU_SetModeSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2127   .text.OCPWM_InitSync:00000000 _OCPWM_InitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2132   .text.OCPWM_InitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3180   .bss.pPwmCfgTable:00000000 _pPwmCfgTable
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2176   .text.OCPWM_DeInitSync:00000000 _OCPWM_DeInitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2180   .text.OCPWM_DeInitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2215   .text.OCPWM_SetSync:00000000 _OCPWM_SetSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2219   .text.OCPWM_SetSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2282   .text.OCPWM_GetSync:00000000 _OCPWM_GetSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2286   .text.OCPWM_GetSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2322   .text.OCPWM_GetPeriodSync:00000000 _OCPWM_GetPeriodSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2325   .text.OCPWM_GetPeriodSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2364   .text.OCPWM_SetPeriodSync:00000000 _OCPWM_SetPeriodSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2368   .text.OCPWM_SetPeriodSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2459   .text.OCPWM_SetAllSync:00000000 _OCPWM_SetAllSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2463   .text.OCPWM_SetAllSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2484   .text.OCPWM_EnableT1ISR:00000000 _OCPWM_EnableT1ISR
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2489   .text.OCPWM_EnableT1ISR:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2508   .text.OCPWD_InitSync:00000000 _OCPWD_InitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2512   .text.OCPWD_InitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2557   .text.OCPWD_DeInitSync:00000000 _OCPWD_DeInitSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2561   .text.OCPWD_DeInitSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2621   .text.OCPWD_StartSampleSync:00000000 _OCPWD_StartSampleSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2624   .text.OCPWD_StartSampleSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2682   .text.OCPWD_SetFilterTime:00000000 _OCPWD_SetFilterTime
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2686   .text.OCPWD_SetFilterTime:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2732   .text.OCPWD_SetTonMeasure:00000000 _OCPWD_SetTonMeasure
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2737   .text.OCPWD_SetTonMeasure:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2769   .text.OCPWD_GetAllSync:00000000 _OCPWD_GetAllSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2773   .text.OCPWD_GetAllSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2803   .text.OCPWD_GetAllSyncInTicks:00000000 _OCPWD_GetAllSyncInTicks
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2808   .text.OCPWD_GetAllSyncInTicks:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2823   .text.OCPWD_StopSampleSync:00000000 _OCPWD_StopSampleSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2828   .text.OCPWD_StopSampleSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2837   .text.HWTMRCH_ISR:00000000 _HWTMRCH_ISR
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2841   .text.HWTMRCH_ISR:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2888   .text.OCTPM_GetTimerIDFromChannelID:00000000 _OCTPM_GetTimerIDFromChannelID
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2893   .text.OCTPM_GetTimerIDFromChannelID:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2918   .text.OCTPM_GetTimerIDFromChannelID_1:00000000 _OCTPM_GetTimerIDFromChannelID_1
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2923   .text.OCTPM_GetTimerIDFromChannelID_1:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2935   .text.OCTMR_GetChannel:00000000 _OCTMR_GetChannel
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2939   .text.OCTMR_GetChannel:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2985   .text.OCTPM_GetChannelSync:00000000 _OCTPM_GetChannelSync
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2989   .text.OCTPM_GetChannelSync:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3033   .text.OCTMR_GetChannelIDFromPinID:00000000 _OCTMR_GetChannelIDFromPinID
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3038   .text.OCTMR_GetChannelIDFromPinID:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3087   .text.OCTPM_GetPinIDFromChannelID:00000000 _OCTPM_GetPinIDFromChannelID
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3091   .text.OCTPM_GetPinIDFromChannelID:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3188   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:7      .text.OCPWD_GetIntervalInTicks:00000000 .LFB54
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:58     .text.OCTPM_InitSync:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:67     .text.OCHWCNTR_InitSync:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:219    .text.OCHWCNTR_DeInitSync:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:306    .text.OCHWCNTR_GetSync:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:334    .text.OCHWCNTR_GetTicksSync:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:351    .text.OCHWCNTR_SetSync:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:395    .text.OCHWCNTR_EnableMulti:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:418    .text.OCHWCNTR_Enable:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:474    .text.OCHWCNTR_EnableISR:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:559    .text.OCHWCNTR_GetTickResolution:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:579    .text.OCHWCNTR_GetResolutionByTimerChannel:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:596    .text.OCHWCNTR_GetTimerModulus:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:613    .text.OCHWCNTR_GetPeriod:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:631    .text.OCHWCNTR_GetMaxPeriod:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:649    .text.OCHWCNTR_GetDelta:00000000 .LFB14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:665    .text.HWCNTR_ISR:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:719    .text.OCHWCNTR_Trigger:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:760    .text.OCICU_InitSync:00000000 .LFB17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:813    .text.OCICU_DeInitSync:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:850    .text.OCICU_GetSync:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:880    .text.OCICU_GetTickSync:00000000 .LFB20
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:898    .text.OCICU_SetModeSync:00000000 .LFB21
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:937    .text.OCPWD_EdgeTime:00000000 .LFB52
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1224   .text.OCPWD_HwTmrTurns:00000000 .LFB53
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1283   .text.OCICU_GetModeSync:00000000 .LFB22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1322   .text.OCICU_ToggleModeSync:00000000 .LFB23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1354   .text.OCICU_EnableISR:00000000 .LFB24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1427   .text.OCOCU_InitSync:00000000 .LFB25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1480   .text.OCOCU_DeInitSync:00000000 .LFB26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1517   .text.OCOCU_GetSync:00000000 .LFB27
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1534   .text.OCOCU_GetSyncTickResolution:00000000 .LFB28
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1551   .text.OCOCU_SetThreshold1Sync:00000000 .LFB29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1602   .text.OCOCU_SetThreshold1TickResolutionSync:00000000 .LFB30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1654   .text.OCOCU_IsTickElapsed:00000000 .LFB31
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1733   .text.OCOCU_GetTickValByTriggerIndex:00000000 .LFB32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1791   .text.OCOCU_SetTickValByTriggerIndex:00000000 .LFB33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1853   .text.OCOCU_SetEventSync:00000000 .LFB34
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1953   .text.OCOCU_SetRelativeEventSync:00000000 .LFB35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2042   .text.OCOCU_SetThreshold2Sync:00000000 .LFB36
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2060   .text.OCOCU_SetThreshold2TickResolutionSync:00000000 .LFB37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2078   .text.OCOCU_SetModeSync:00000000 .LFB38
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2128   .text.OCPWM_InitSync:00000000 .LFB39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2177   .text.OCPWM_DeInitSync:00000000 .LFB40
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2216   .text.OCPWM_SetSync:00000000 .LFB41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2283   .text.OCPWM_GetSync:00000000 .LFB42
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2323   .text.OCPWM_GetPeriodSync:00000000 .LFB43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2365   .text.OCPWM_SetPeriodSync:00000000 .LFB44
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2460   .text.OCPWM_SetAllSync:00000000 .LFB45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2485   .text.OCPWM_EnableT1ISR:00000000 .LFB46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2509   .text.OCPWD_InitSync:00000000 .LFB47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2558   .text.OCPWD_DeInitSync:00000000 .LFB48
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2622   .text.OCPWD_StartSampleSync:00000000 .LFB49
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2683   .text.OCPWD_SetFilterTime:00000000 .LFB50
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2733   .text.OCPWD_SetTonMeasure:00000000 .LFB51
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2770   .text.OCPWD_GetAllSync:00000000 .LFB55
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2804   .text.OCPWD_GetAllSyncInTicks:00000000 .LFB56
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2824   .text.OCPWD_StopSampleSync:00000000 .LFB57
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2838   .text.HWTMRCH_ISR:00000000 .LFB58
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2889   .text.OCTPM_GetTimerIDFromChannelID:00000000 .LFB60
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2919   .text.OCTPM_GetTimerIDFromChannelID_1:00000000 .LFB61
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2936   .text.OCTMR_GetChannel:00000000 .LFB62
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2986   .text.OCTPM_GetChannelSync:00000000 .LFB59
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3034   .text.OCTMR_GetChannelIDFromPinID:00000000 .LFB63
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3088   .text.OCTPM_GetPinIDFromChannelID:00000000 .LFB64
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:10375  .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15125  .debug_str:00000619 .LASF373
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15769  .debug_str:00001bd3 .LASF374
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14803  .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14949  .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15355  .debug_str:00000e47 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15719  .debug_str:00001a5d .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15531  .debug_str:00001433 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15811  .debug_str:00001d9f .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15119  .debug_str:000005d4 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15683  .debug_str:00001971 .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15593  .debug_str:0000161e .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15121  .debug_str:000005dd .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15293  .debug_str:00000c5f .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15359  .debug_str:00000e68 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15721  .debug_str:00001a67 .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15369  .debug_str:00000eb9 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15399  .debug_str:00000fd6 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15247  .debug_str:00000aad .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15677  .debug_str:00001933 .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15151  .debug_str:0000075b .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15711  .debug_str:00001a32 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15361  .debug_str:00000e70 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15659  .debug_str:0000189d .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15015  .debug_str:0000027e .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15335  .debug_str:00000d83 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15647  .debug_str:00001809 .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15419  .debug_str:0000105f .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15289  .debug_str:00000c4f .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15061  .debug_str:00000414 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14953  .debug_str:00000011 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15841  .debug_str:00001ecc .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15043  .debug_str:0000037d .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15631  .debug_str:00001795 .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15493  .debug_str:000012db .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15219  .debug_str:000009a8 .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15279  .debug_str:00000bc1 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15439  .debug_str:000010f7 .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15407  .debug_str:00000ff7 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15469  .debug_str:0000121b .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15397  .debug_str:00000fc2 .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14969  .debug_str:000000b9 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15425  .debug_str:00001089 .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15405  .debug_str:00000ff1 .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15315  .debug_str:00000cf5 .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15423  .debug_str:00001076 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15441  .debug_str:00001101 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15389  .debug_str:00000f84 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15575  .debug_str:00001592 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15869  .debug_str:00001fc4 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15641  .debug_str:000017e0 .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15089  .debug_str:000004df .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15155  .debug_str:00000771 .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15609  .debug_str:00001698 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15485  .debug_str:0000128c .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15101  .debug_str:00000545 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15403  .debug_str:00000fe4 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15773  .debug_str:00001c43 .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15793  .debug_str:00001cef .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15545  .debug_str:0000147c .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15453  .debug_str:0000117a .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15867  .debug_str:00001fbd .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15375  .debug_str:00000eeb .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15363  .debug_str:00000e7c .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15313  .debug_str:00000cf0 .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15833  .debug_str:00001e97 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14993  .debug_str:0000019a .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15427  .debug_str:00001092 .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15437  .debug_str:000010f0 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15695  .debug_str:000019cb .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15271  .debug_str:00000b79 .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15401  .debug_str:00000fde .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15025  .debug_str:000002d3 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15635  .debug_str:000017b5 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15331  .debug_str:00000d71 .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15729  .debug_str:00001aca .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15181  .debug_str:0000086c .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15827  .debug_str:00001e3e .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15845  .debug_str:00001eee .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15415  .debug_str:00001037 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15269  .debug_str:00000b73 .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15665  .debug_str:000018c5 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15797  .debug_str:00001d05 .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15743  .debug_str:00001b31 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15149  .debug_str:00000748 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15627  .debug_str:0000177c .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15111  .debug_str:00000595 .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15651  .debug_str:0000184d .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15483  .debug_str:0000127d .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15467  .debug_str:0000120d .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15087  .debug_str:000004cc .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15095  .debug_str:00000513 .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15069  .debug_str:00000444 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15079  .debug_str:00000499 .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15599  .debug_str:0000165c .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15605  .debug_str:00001687 .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15081  .debug_str:000004a3 .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15737  .debug_str:00001b05 .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15147  .debug_str:00000735 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15381  .debug_str:00000f11 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15077  .debug_str:00000481 .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15177  .debug_str:00000853 .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15031  .debug_str:00000305 .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15443  .debug_str:0000110d .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15301  .debug_str:00000ca9 .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15075  .debug_str:00000467 .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15749  .debug_str:00001b56 .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15033  .debug_str:00000317 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15303  .debug_str:00000cc1 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14979  .debug_str:00000117 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15579  .debug_str:000015aa .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15505  .debug_str:00001358 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15379  .debug_str:00000f04 .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15775  .debug_str:00001c48 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15799  .debug_str:00001d11 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14955  .debug_str:00000019 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15241  .debug_str:00000a80 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15201  .debug_str:0000091b .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15163  .debug_str:000007b2 .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15093  .debug_str:000004fe .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15421  .debug_str:00001065 .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15699  .debug_str:000019e7 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15065  .debug_str:0000042b .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15675  .debug_str:0000191e .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15565  .debug_str:00001521 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15209  .debug_str:00000959 .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15191  .debug_str:000008ae .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15881  .debug_str:00002021 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15701  .debug_str:000019f2 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14975  .debug_str:000000f4 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15173  .debug_str:00000811 .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15213  .debug_str:0000096d .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15249  .debug_str:00000ab4 .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15569  .debug_str:00001544 .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15703  .debug_str:000019ff .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15411  .debug_str:00001014 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14963  .debug_str:00000086 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15007  .debug_str:00000219 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15265  .debug_str:00000b52 .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14985  .debug_str:00000152 .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15021  .debug_str:000002b0 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15053  .debug_str:000003f1 .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15753  .debug_str:00001b7a .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15475  .debug_str:00001240 .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15309  .debug_str:00000cde .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15387  .debug_str:00000f77 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14997  .debug_str:000001b1 .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15803  .debug_str:00001d39 .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15603  .debug_str:0000167f .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15413  .debug_str:00001026 .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15307  .debug_str:00000cd0 .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15837  .debug_str:00001eb9 .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15667  .debug_str:000018e2 .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15637  .debug_str:000017c0 .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14989  .debug_str:00000179 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15663  .debug_str:000018b0 .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15373  .debug_str:00000ed5 .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15023  .debug_str:000002c0 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14981  .debug_str:0000012c .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15661  .debug_str:000018a2 .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15455  .debug_str:00001198 .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15585  .debug_str:000015d4 .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15583  .debug_str:000015c6 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15513  .debug_str:000013a0 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15059  .debug_str:00000409 .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15705  .debug_str:00001a12 .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15581  .debug_str:000015b8 .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15321  .debug_str:00000d31 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15473  .debug_str:00001239 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15395  .debug_str:00000fbc .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15717  .debug_str:00001a4e .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15589  .debug_str:00001607 .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15691  .debug_str:000019a9 .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14987  .debug_str:00000164 .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15255  .debug_str:00000ae4 .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15671  .debug_str:000018fe .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15653  .debug_str:0000185e .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15019  .debug_str:000002a2 .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15571  .debug_str:00001553 .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15135  .debug_str:000006a4 .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15231  .debug_str:00000a18 .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15205  .debug_str:00000945 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15527  .debug_str:0000140d .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15529  .debug_str:00001420 .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15239  .debug_str:00000a6d .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15083  .debug_str:000004b0 .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15669  .debug_str:000018eb .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15741  .debug_str:00001b1d .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15549  .debug_str:00001495 .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15551  .debug_str:000014aa .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15573  .debug_str:00001563 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15285  .debug_str:00000c07 .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15649  .debug_str:00001818 .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15011  .debug_str:00000235 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15175  .debug_str:0000081d .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15727  .debug_str:00001a94 .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15383  .debug_str:00000f24 .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15459  .debug_str:000011b3 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15831  .debug_str:00001e63 .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15337  .debug_str:00000d8b .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15133  .debug_str:0000068d .LASF195
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15341  .debug_str:00000db4 .LASF196
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15343  .debug_str:00000dcb .LASF197
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15345  .debug_str:00000de2 .LASF198
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15347  .debug_str:00000df9 .LASF199
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15349  .debug_str:00000e10 .LASF200
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15351  .debug_str:00000e27 .LASF201
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15487  .debug_str:00001293 .LASF202
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15489  .debug_str:000012ab .LASF203
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15491  .debug_str:000012c3 .LASF204
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15495  .debug_str:000012e5 .LASF205
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15091  .debug_str:000004e6 .LASF206
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15499  .debug_str:00001310 .LASF207
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15501  .debug_str:00001328 .LASF208
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15503  .debug_str:00001340 .LASF209
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15819  .debug_str:00001de8 .LASF210
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15193  .debug_str:000008ba .LASF211
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15195  .debug_str:000008d3 .LASF212
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15197  .debug_str:000008ec .LASF213
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15507  .debug_str:00001364 .LASF214
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15587  .debug_str:000015e3 .LASF215
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15835  .debug_str:00001ea0 .LASF216
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15203  .debug_str:0000092c .LASF217
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15257  .debug_str:00000afa .LASF218
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15137  .debug_str:000006bc .LASF219
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15123  .debug_str:000005f4 .LASF220
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15221  .debug_str:000009ad .LASF221
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15681  .debug_str:00001956 .LASF222
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15497  .debug_str:000012fd .LASF223
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15541  .debug_str:00001465 .LASF224
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15253  .debug_str:00000ad5 .LASF225
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15035  .debug_str:00000327 .LASF226
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15875  .debug_str:00001fdb .LASF227
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15215  .debug_str:0000097a .LASF228
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15127  .debug_str:0000063f .LASF229
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15429  .debug_str:00001097 .LASF230
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15267  .debug_str:00000b57 .LASF231
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14971  .debug_str:000000bf .LASF232
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15237  .debug_str:00000a49 .LASF233
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15447  .debug_str:00001131 .LASF234
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15829  .debug_str:00001e49 .LASF235
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15385  .debug_str:00000f59 .LASF236
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15781  .debug_str:00001c75 .LASF237
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14957  .debug_str:0000002c .LASF238
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15171  .debug_str:000007eb .LASF239
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15273  .debug_str:00000b80 .LASF240
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15855  .debug_str:00001f2d .LASF241
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15617  .debug_str:000016fe .LASF242
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14959  .debug_str:00000051 .LASF243
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15557  .debug_str:000014ec .LASF244
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15615  .debug_str:000016dd .LASF245
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15597  .debug_str:0000163a .LASF246
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15225  .debug_str:000009dd .LASF247
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15809  .debug_str:00001d70 .LASF248
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15771  .debug_str:00001c14 .LASF249
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15131  .debug_str:0000065f .LASF250
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15045  .debug_str:00000386 .LASF251
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15611  .debug_str:000016a4 .LASF252
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15623  .debug_str:00001738 .LASF253
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15223  .debug_str:000009c2 .LASF254
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15295  .debug_str:00000c6d .LASF255
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15689  .debug_str:0000198f .LASF256
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15509  .debug_str:0000137d .LASF257
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15041  .debug_str:0000035e .LASF258
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15143  .debug_str:0000070b .LASF259
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14961  .debug_str:0000006b .LASF260
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15859  .debug_str:00001f6f .LASF261
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15099  .debug_str:00000530 .LASF262
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15525  .debug_str:000013f4 .LASF263
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15825  .debug_str:00001e24 .LASF264
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15817  .debug_str:00001dcf .LASF265
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14965  .debug_str:00000097 .LASF266
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15105  .debug_str:00000564 .LASF267
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15629  .debug_str:0000178a .LASF268
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15863  .debug_str:00001fa0 .LASF269
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15479  .debug_str:00001252 .LASF270
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15539  .debug_str:0000145a .LASF271
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15673  .debug_str:00001910 .LASF272
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15465  .debug_str:00001204 .LASF273
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15275  .debug_str:00000ba4 .LASF274
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15883  .debug_str:00002030 .LASF275
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15287  .debug_str:00000c43 .LASF276
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15815  .debug_str:00001dc2 .LASF277
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15263  .debug_str:00000b3f .LASF280
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15311  .debug_str:00000cea .LASF278
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15157  .debug_str:00000778 .LASF279
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15561  .debug_str:0000150a .LASF284
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15235  .debug_str:00000a37 .LASF281
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15547  .debug_str:0000148d .LASF282
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15067  .debug_str:0000043f .LASF283
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15767  .debug_str:00001bcb .LASF285
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15747  .debug_str:00001b46 .LASF286
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15199  .debug_str:00000905 .LASF287
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15481  .debug_str:0000125d .LASF288
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15687  .debug_str:0000198a .LASF289
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15633  .debug_str:0000179c .LASF325
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:52     .text.OCPWD_GetIntervalInTicks:00000045 .LFE54
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11646  .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15207  .debug_str:00000954 .LASF290
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15759  .debug_str:00001ba1 .LASF291
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11660  .debug_loc:00000021 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:19     .text.OCPWD_GetIntervalInTicks:00000014 .LBB14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:45     .text.OCPWD_GetIntervalInTicks:0000003e .LBE14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15477  .debug_str:0000124a .LASF292
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11681  .debug_loc:00000057 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15377  .debug_str:00000ef5 .LASF466
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:61     .text.OCTPM_InitSync:00000001 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15217  .debug_str:00000996 .LASF297
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:213    .text.OCHWCNTR_InitSync:000000e0 .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11707  .debug_loc:00000088 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15073  .debug_str:0000045c .LASF293
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11720  .debug_loc:000000a8 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15739  .debug_str:00001b17 .LASF294
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11775  .debug_loc:0000012a .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15037  .debug_str:00000344 .LASF295
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:84     .text.OCHWCNTR_InitSync:0000001a .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:101    .text.OCHWCNTR_InitSync:00000044 .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:116    .text.OCHWCNTR_InitSync:00000059 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:128    .text.OCHWCNTR_InitSync:0000006f .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:136    .text.OCHWCNTR_InitSync:00000079 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:148    .text.OCHWCNTR_InitSync:0000008f .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:159    .text.OCHWCNTR_InitSync:000000a2 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:164    .text.OCHWCNTR_InitSync:000000aa .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:169    .text.OCHWCNTR_InitSync:000000b2 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:175    .text.OCHWCNTR_InitSync:000000bc .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:181    .text.OCHWCNTR_InitSync:000000c4 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15877  .debug_str:00001ff5 .LASF344
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:300    .text.OCHWCNTR_DeInitSync:0000009c .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11786  .debug_loc:00000148 .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15291  .debug_str:00000c56 .LASF296
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15115  .debug_str:000005af .LASF298
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:328    .text.OCHWCNTR_GetSync:00000023 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11799  .debug_loc:00000168 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11812  .debug_loc:00000188 .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11830  .debug_loc:000001b4 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15323  .debug_str:00000d38 .LASF299
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11847  .debug_loc:000001d8 .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:319    .text.OCHWCNTR_GetSync:00000011 .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15259  .debug_str:00000b1a .LASF300
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:345    .text.OCHWCNTR_GetTicksSync:0000000f .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15055  .debug_str:000003fb .LASF301
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11904  .debug_loc:0000022e .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11918  .debug_loc:0000024f .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15049  .debug_str:000003c3 .LASF302
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:344    .text.OCHWCNTR_GetTicksSync:0000000f .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15471  .debug_str:00001228 .LASF303
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:389    .text.OCHWCNTR_SetSync:00000034 .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11938  .debug_loc:00000276 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15319  .debug_str:00000d26 .LASF304
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11952  .debug_loc:00000297 .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11977  .debug_loc:000002d1 .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:371    .text.OCHWCNTR_SetSync:00000025 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15697  .debug_str:000019d2 .LASF315
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:412    .text.OCHWCNTR_EnableMulti:00000010 .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:11994  .debug_loc:000002f5 .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15305  .debug_str:00000ccb .LASF305
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12007  .debug_loc:00000315 .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:403    .text.OCHWCNTR_EnableMulti:00000008 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:411    .text.OCHWCNTR_EnableMulti:00000010 .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15371  .debug_str:00000ec5 .LASF306
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:468    .text.OCHWCNTR_Enable:00000046 .LFE7
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12029  .debug_loc:0000034c .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15211  .debug_str:00000966 .LASF307
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:553    .text.OCHWCNTR_EnableISR:00000067 .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12052  .debug_loc:00000384 .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12065  .debug_loc:000003a4 .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12102  .debug_loc:000003ff .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12131  .debug_loc:00000444 .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:483    .text.OCHWCNTR_EnableISR:00000008 .LBB17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:544    .text.OCHWCNTR_EnableISR:0000005f .LBE17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:484    .text.OCHWCNTR_EnableISR:00000008 .LBB18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:543    .text.OCHWCNTR_EnableISR:0000005f .LBE18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12170  .debug_loc:0000049a .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:505    .text.OCHWCNTR_EnableISR:0000002e .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:522    .text.OCHWCNTR_EnableISR:0000004d .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:529    .text.OCHWCNTR_EnableISR:00000058 .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15555  .debug_str:000014d1 .LASF308
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:573    .text.OCHWCNTR_GetTickResolution:00000014 .LFE10
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12177  .debug_loc:000004ad .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:569    .text.OCHWCNTR_GetTickResolution:00000011 .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15317  .debug_str:00000d01 .LASF309
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:590    .text.OCHWCNTR_GetResolutionByTimerChannel:00000010 .LFE9
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12191  .debug_loc:000004ce .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:589    .text.OCHWCNTR_GetResolutionByTimerChannel:00000010 .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15159  .debug_str:00000782 .LASF310
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:607    .text.OCHWCNTR_GetTimerModulus:0000000f .LFE11
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12205  .debug_loc:000004ef .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15789  .debug_str:00001cc4 .LASF311
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:625    .text.OCHWCNTR_GetPeriod:00000013 .LFE12
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12219  .debug_loc:00000510 .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:643    .text.OCHWCNTR_GetMaxPeriod:00000014 .LFE13
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12233  .debug_loc:00000531 .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15533  .debug_str:0000143c .LASF312
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:659    .text.OCHWCNTR_GetDelta:0000000f .LFE14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12247  .debug_loc:00000552 .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15145  .debug_str:00000729 .LASF313
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12261  .debug_loc:00000573 .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15187  .debug_str:00000898 .LASF314
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12275  .debug_loc:00000594 .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:658    .text.OCHWCNTR_GetDelta:0000000f .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15643  .debug_str:000017ed .LASF316
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:713    .text.HWCNTR_ISR:00000044 .LFE15
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12289  .debug_loc:000005b5 .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15129  .debug_str:00000659 .LASF317
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12302  .debug_loc:000005d5 .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:678    .text.HWCNTR_ISR:0000000e .LBB19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:707    .text.HWCNTR_ISR:0000003e .LBE19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12324  .debug_loc:0000060c .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:693    .text.HWCNTR_ISR:0000002b .LVL82
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:704    .text.HWCNTR_ISR:0000003d .LVL85
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:673    .text.HWCNTR_ISR:00000008 .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:712    .text.HWCNTR_ISR:00000044 .LVL86
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15463  .debug_str:000011f3 .LASF318
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:754    .text.OCHWCNTR_Trigger:0000002b .LFE16
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12331  .debug_loc:0000061f .LLST35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15853  .debug_str:00001f25 .LASF319
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12344  .debug_loc:0000063f .LLST36
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12355  .debug_loc:0000065d .LLST37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:731    .text.OCHWCNTR_Trigger:0000000d .LVL89
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:744    .text.OCHWCNTR_Trigger:0000001c .LVL91
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15621  .debug_str:00001729 .LASF320
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:807    .text.OCICU_InitSync:00000044 .LFE17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15873  .debug_str:00001fd2 .LASF321
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12367  .debug_loc:0000067c .LLST38
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12403  .debug_loc:000006cf .LLST39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:787    .text.OCICU_InitSync:00000035 .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15167  .debug_str:000007d0 .LASF322
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:844    .text.OCICU_DeInitSync:00000028 .LFE18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12431  .debug_loc:000006fe .LLST40
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12445  .debug_loc:0000071f .LLST41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:831    .text.OCICU_DeInitSync:0000001d .LVL104
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15519  .debug_str:000013c5 .LASF323
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:874    .text.OCICU_GetSync:00000023 .LFE19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12459  .debug_loc:00000739 .LLST42
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12472  .debug_loc:00000759 .LLST43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12486  .debug_loc:0000077a .LLST44
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:864    .text.OCICU_GetSync:00000012 .LVL109
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:868    .text.OCICU_GetSync:0000001a .LVL110
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15725  .debug_str:00001a82 .LASF324
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:892    .text.OCICU_GetTickSync:00000010 .LFE20
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12507  .debug_loc:000007a2 .LLST45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12521  .debug_loc:000007c3 .LLST46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:891    .text.OCICU_GetTickSync:00000010 .LVL113
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:932    .text.OCICU_SetModeSync:00000028 .LFE21
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12545  .debug_loc:000007ee .LLST47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12559  .debug_loc:0000080f .LLST48
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:906    .text.OCICU_SetModeSync:00000006 .LBB22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:923    .text.OCICU_SetModeSync:00000020 .LBE22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:907    .text.OCICU_SetModeSync:00000006 .LBB23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:922    .text.OCICU_SetModeSync:00000020 .LBE23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12584  .debug_loc:00000849 .LLST49
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:917    .text.OCICU_SetModeSync:0000001d .LVL117
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15779  .debug_str:00001c66 .LASF326
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1219   .text.OCPWD_EdgeTime:000001d3 .LFE52
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12605  .debug_loc:00000871 .LLST50
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15731  .debug_str:00001ad5 .LASF327
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12618  .debug_loc:00000891 .LLST51
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12632  .debug_loc:000008b2 .LLST52
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15057  .debug_str:00000403 .LASF328
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12643  .debug_loc:000008d0 .LLST53
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15107  .debug_str:0000057e .LASF329
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12657  .debug_loc:000008f1 .LLST54
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12760  .debug_loc:000009b0 .LLST55
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15813  .debug_str:00001db2 .LASF330
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12780  .debug_loc:000009e5 .LLST56
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15461  .debug_str:000011e8 .LASF331
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12799  .debug_loc:00000a19 .LLST57
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:977    .text.OCPWD_EdgeTime:0000003c .LBB24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1003   .text.OCPWD_EdgeTime:00000069 .LBE24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:982    .text.OCPWD_EdgeTime:00000048 .LVL131
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1108   .text.OCPWD_EdgeTime:00000127 .LBB25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1133   .text.OCPWD_EdgeTime:00000152 .LBE25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15245  .debug_str:00000aa3 .LASF332
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12824  .debug_loc:00000a5a .LLST58
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1113   .text.OCPWD_EdgeTime:0000012f .LVL142
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1128   .text.OCPWD_EdgeTime:0000014c .LVL144
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1134   .text.OCPWD_EdgeTime:00000152 .LBB26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1210   .text.OCPWD_EdgeTime:000001c9 .LBE26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12836  .debug_loc:00000a79 .LLST59
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15543  .debug_str:00001475 .LASF333
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12857  .debug_loc:00000aaf .LLST60
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1139   .text.OCPWD_EdgeTime:0000015a .LVL145
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1188   .text.OCPWD_EdgeTime:000001a9 .LVL151
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1206   .text.OCPWD_EdgeTime:000001c8 .LVL153
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:953    .text.OCPWD_EdgeTime:00000018 .LVL123
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:963    .text.OCPWD_EdgeTime:00000029 .LVL127
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1093   .text.OCPWD_EdgeTime:00000114 .LVL138
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14951  .debug_str:00000000 .LASF334
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1277   .text.OCPWD_HwTmrTurns:00000055 .LFE53
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12864  .debug_loc:00000ac2 .LLST61
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12877  .debug_loc:00000ae2 .LLST62
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12891  .debug_loc:00000b03 .LLST63
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12902  .debug_loc:00000b21 .LLST64
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12916  .debug_loc:00000b42 .LLST65
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1267   .text.OCPWD_HwTmrTurns:00000049 .LVL159
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15339  .debug_str:00000da2 .LASF335
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1316   .text.OCICU_GetModeSync:0000002c .LFE22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12924  .debug_loc:00000b56 .LLST66
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15757  .debug_str:00001b9b .LASF336
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15559  .debug_str:00001503 .LASF337
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15013  .debug_str:00000269 .LASF338
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1348   .text.OCICU_ToggleModeSync:0000001e .LFE23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12947  .debug_loc:00000b8e .LLST67
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1336   .text.OCICU_ToggleModeSync:00000014 .LVL162
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1421   .text.OCICU_EnableISR:00000047 .LFE24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12961  .debug_loc:00000baf .LLST68
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12974  .debug_loc:00000bcf .LLST69
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:12993  .debug_loc:00000c03 .LLST70
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13019  .debug_loc:00000c45 .LLST71
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1366   .text.OCICU_EnableISR:0000000c .LBB29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13045  .debug_loc:00000c87 .LLST72
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13060  .debug_loc:00000cb0 .LLST73
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13075  .debug_loc:00000cd9 .LLST74
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1380   .text.OCICU_EnableISR:00000020 .LVL167
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1392   .text.OCICU_EnableISR:00000033 .LVL168
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1396   .text.OCICU_EnableISR:00000039 .LVL169
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15693  .debug_str:000019bc .LASF339
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1474   .text.OCOCU_InitSync:00000044 .LFE25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15189  .debug_str:000008a5 .LASF340
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13086  .debug_loc:00000cf7 .LLST75
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13122  .debug_loc:00000d4a .LLST76
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1454   .text.OCOCU_InitSync:00000035 .LVL177
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15103  .debug_str:00000553 .LASF341
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1511   .text.OCOCU_DeInitSync:00000028 .LFE26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13150  .debug_loc:00000d79 .LLST77
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13164  .debug_loc:00000d9a .LLST78
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1498   .text.OCOCU_DeInitSync:0000001d .LVL185
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15451  .debug_str:0000116c .LASF342
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1528   .text.OCOCU_GetSync:00000010 .LFE27
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13178  .debug_loc:00000db4 .LLST79
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1527   .text.OCOCU_GetSync:00000010 .LVL189
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15017  .debug_str:00000286 .LASF343
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1545   .text.OCOCU_GetSyncTickResolution:00000010 .LFE28
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13192  .debug_loc:00000dd5 .LLST80
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1544   .text.OCOCU_GetSyncTickResolution:00000010 .LVL192
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15327  .debug_str:00000d50 .LASF345
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1596   .text.OCOCU_SetThreshold1Sync:00000043 .LFE29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13206  .debug_loc:00000df6 .LLST81
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15097  .debug_str:00000525 .LASF346
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15233  .debug_str:00000a2f .LASF347
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15365  .debug_str:00000e93 .LASF348
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15785  .debug_str:00001cb1 .LASF349
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15283  .debug_str:00000be1 .LASF350
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1648   .text.OCOCU_SetThreshold1TickResolutionSync:00000033 .LFE30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13219  .debug_loc:00000e16 .LLST82
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13237  .debug_loc:00000e42 .LLST83
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13259  .debug_loc:00000e79 .LLST84
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13278  .debug_loc:00000ead .LLST85
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13305  .debug_loc:00000ee2 .LLST86
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1625   .text.OCOCU_SetThreshold1TickResolutionSync:0000001f .LVL197
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1644   .text.OCOCU_SetThreshold1TickResolutionSync:00000032 .LVL201
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15457  .debug_str:0000119f .LASF351
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1727   .text.OCOCU_IsTickElapsed:0000005c .LFE31
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13312  .debug_loc:00000ef5 .LLST87
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13325  .debug_loc:00000f15 .LLST88
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15745  .debug_str:00001b39 .LASF352
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13343  .debug_loc:00000f41 .LLST89
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15535  .debug_str:0000144e .LASF353
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13361  .debug_loc:00000f6d .LLST90
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13372  .debug_loc:00000f8b .LLST91
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13401  .debug_loc:00000fbd .LLST92
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13410  .debug_loc:00000fd2 .LLST93
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15591  .debug_str:00001619 .LASF354
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13417  .debug_loc:00000fe5 .LLST94
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15761  .debug_str:00001bb1 .LASF355
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13424  .debug_loc:00000ff8 .LLST95
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15763  .debug_str:00001bb7 .LASF356
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13436  .debug_loc:00001010 .LLST96
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1683   .text.OCOCU_IsTickElapsed:00000020 .LBB33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1692   .text.OCOCU_IsTickElapsed:0000002b .LBE33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1670   .text.OCOCU_IsTickElapsed:00000012 .LVL205
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1680   .text.OCOCU_IsTickElapsed:0000001f .LVL206
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1700   .text.OCOCU_IsTickElapsed:00000038 .LVL209
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1706   .text.OCOCU_IsTickElapsed:0000003e .LVL210
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15005  .debug_str:000001fa .LASF357
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1785   .text.OCOCU_GetTickValByTriggerIndex:00000042 .LFE32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13448  .debug_loc:00001028 .LLST97
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13461  .debug_loc:00001048 .LLST98
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13483  .debug_loc:0000107f .LLST99
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1760   .text.OCOCU_GetTickValByTriggerIndex:0000001e .LBB35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1767   .text.OCOCU_GetTickValByTriggerIndex:00000026 .LBE35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1746   .text.OCOCU_GetTickValByTriggerIndex:0000000f .LVL217
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1757   .text.OCOCU_GetTickValByTriggerIndex:0000001d .LVL219
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1775   .text.OCOCU_GetTickValByTriggerIndex:00000033 .LVL221
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15391  .debug_str:00000f8e .LASF358
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1847   .text.OCOCU_SetTickValByTriggerIndex:00000044 .LFE33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13501  .debug_loc:000010ab .LLST100
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13514  .debug_loc:000010cb .LLST101
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13536  .debug_loc:00001102 .LLST102
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13554  .debug_loc:0000112e .LLST103
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13565  .debug_loc:0000114c .LLST104
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1821   .text.OCOCU_SetTickValByTriggerIndex:00000020 .LBB37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1829   .text.OCOCU_SetTickValByTriggerIndex:00000028 .LBE37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1807   .text.OCOCU_SetTickValByTriggerIndex:00000012 .LVL226
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1818   .text.OCOCU_SetTickValByTriggerIndex:0000001f .LVL228
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1837   .text.OCOCU_SetTickValByTriggerIndex:00000035 .LVL231
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15595  .debug_str:00001627 .LASF359
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1947   .text.OCOCU_SetEventSync:00000093 .LFE34
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13574  .debug_loc:00001161 .LLST105
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15523  .debug_str:000013ec .LASF360
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15849  .debug_str:00001f15 .LASF361
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15179  .debug_str:00000866 .LASF362
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1877   .text.OCOCU_SetEventSync:00000020 .LBB39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1884   .text.OCOCU_SetEventSync:0000002c .LBE39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14973  .debug_str:000000d9 .LASF363
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2036   .text.OCOCU_SetRelativeEventSync:0000007f .LFE35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13587  .debug_loc:00001181 .LLST106
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1968   .text.OCOCU_SetRelativeEventSync:00000014 .LBB41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1975   .text.OCOCU_SetRelativeEventSync:00000020 .LBE41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15435  .debug_str:000010d8 .LASF364
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2054   .text.OCOCU_SetThreshold2Sync:0000000b .LFE36
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13600  .debug_loc:000011a1 .LLST107
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15511  .debug_str:00001395 .LASF365
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13618  .debug_loc:000011cd .LLST108
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2051   .text.OCOCU_SetThreshold2Sync:0000000a .LVL234
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15657  .debug_str:00001877 .LASF366
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2072   .text.OCOCU_SetThreshold2TickResolutionSync:0000000b .LFE37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13636  .debug_loc:000011f9 .LLST109
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13654  .debug_loc:00001225 .LLST110
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2069   .text.OCOCU_SetThreshold2TickResolutionSync:0000000a .LVL236
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15821  .debug_str:00001e01 .LASF367
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2122   .text.OCOCU_SetModeSync:00000043 .LFE38
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13672  .debug_loc:00001251 .LLST111
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15735  .debug_str:00001af6 .LASF368
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2171   .text.OCPWM_InitSync:0000003c .LFE39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15085  .debug_str:000004c3 .LASF369
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13695  .debug_loc:00001289 .LLST112
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13741  .debug_loc:000012ed .LLST113
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2151   .text.OCPWM_InitSync:0000002d .LVL240
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15029  .debug_str:000002f4 .LASF370
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2210   .text.OCPWM_DeInitSync:00000031 .LFE40
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13751  .debug_loc:00001303 .LLST114
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15445  .debug_str:00001123 .LASF371
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2277   .text.OCPWM_SetSync:00000056 .LFE41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13774  .debug_loc:0000133b .LLST115
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13787  .debug_loc:0000135b .LLST116
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13820  .debug_loc:000013ab .LLST117
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13846  .debug_loc:000013ed .LLST118
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15685  .debug_str:00001983 .LASF372
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2237   .text.OCPWM_SetSync:0000001e .LVL249
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2247   .text.OCPWM_SetSync:00000033 .LVL251
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2251   .text.OCPWM_SetSync:00000039 .LVL252
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2257   .text.OCPWM_SetSync:00000046 .LVL253
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15765  .debug_str:00001bbd .LASF375
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2317   .text.OCPWM_GetSync:0000002d .LFE42
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13857  .debug_loc:0000140b .LLST119
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15805  .debug_str:00001d40 .LASF376
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2359   .text.OCPWM_GetPeriodSync:00000039 .LFE43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13885  .debug_loc:0000144f .LLST120
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15851  .debug_str:00001f1e .LASF377
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15733  .debug_str:00001ae2 .LASF378
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2454   .text.OCPWM_SetPeriodSync:00000095 .LFE44
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13908  .debug_loc:00001487 .LLST121
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2401   .text.OCPWM_SetPeriodSync:00000042 .LBB43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2408   .text.OCPWM_SetPeriodSync:0000004d .LBE43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15645  .debug_str:000017f8 .LASF379
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2479   .text.OCPWM_SetAllSync:00000014 .LFE45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13931  .debug_loc:000014bf .LLST122
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13944  .debug_loc:000014df .LLST123
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13966  .debug_loc:00001516 .LLST124
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:13980  .debug_loc:00001537 .LLST125
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2469   .text.OCPWM_SetAllSync:0000000a .LVL259
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2478   .text.OCPWM_SetAllSync:00000014 .LVL261
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15165  .debug_str:000007be .LASF380
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2503   .text.OCPWM_EnableT1ISR:00000018 .LFE46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14002  .debug_loc:0000156e .LLST126
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14016  .debug_loc:0000158f .LLST127
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14034  .debug_loc:000015bb .LLST128
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2498   .text.OCPWM_EnableT1ISR:00000014 .LVL264
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15261  .debug_str:00000b30 .LASF381
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2552   .text.OCPWD_InitSync:00000041 .LFE47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14052  .debug_loc:000015e7 .LLST129
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15787  .debug_str:00001cbb .LASF382
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14070  .debug_loc:00001613 .LLST130
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15299  .debug_str:00000ca2 .LASF383
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14991  .debug_str:0000018f .LASF384
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2527   .text.OCPWD_InitSync:00000016 .LVL267
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15823  .debug_str:00001e13 .LASF385
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2616   .text.OCPWD_DeInitSync:0000004a .LFE48
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14088  .debug_loc:0000163f .LLST131
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14101  .debug_loc:0000165f .LLST132
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15357  .debug_str:00000e54 .LASF386
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14119  .debug_loc:0000168b .LLST133
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14134  .debug_loc:000016b4 .LLST134
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15071  .debug_str:00000450 .LASF387
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14145  .debug_loc:000016d2 .LLST135
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2566   .text.OCPWD_DeInitSync:00000008 .LVL270
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2610   .text.OCPWD_DeInitSync:00000045 .LVL277
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15625  .debug_str:00001766 .LASF388
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2677   .text.OCPWD_StartSampleSync:0000006b .LFE49
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14158  .debug_loc:000016f2 .LLST136
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15243  .debug_str:00000a8f .LASF389
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2727   .text.OCPWD_SetFilterTime:00000038 .LFE50
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14171  .debug_loc:00001712 .LLST137
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14184  .debug_loc:00001732 .LLST138
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15865  .debug_str:00001faf .LASF390
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14213  .debug_loc:00001777 .LLST139
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15113  .debug_str:000005a5 .LASF391
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14242  .debug_loc:000017bc .LLST140
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2694   .text.OCPWD_SetFilterTime:0000000a .LBB45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2717   .text.OCPWD_SetFilterTime:0000002e .LBE45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14264  .debug_loc:000017f3 .LLST141
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2701   .text.OCPWD_SetFilterTime:0000001a .LVL282
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15117  .debug_str:000005c0 .LASF392
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2764   .text.OCPWD_SetTonMeasure:00000026 .LFE51
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14271  .debug_loc:00001806 .LLST142
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15709  .debug_str:00001a2d .LASF393
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14285  .debug_loc:00001827 .LLST143
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14299  .debug_loc:00001848 .LLST144
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15639  .debug_str:000017cf .LASF394
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2798   .text.OCPWD_GetAllSync:00000033 .LFE55
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14321  .debug_loc:0000187f .LLST145
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14334  .debug_loc:0000189f .LLST146
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15707  .debug_str:00001a21 .LASF395
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14352  .debug_loc:000018cb .LLST147
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14363  .debug_loc:000018e9 .LLST148
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2783   .text.OCPWD_GetAllSync:00000016 .LVL298
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15791  .debug_str:00001cd7 .LASF396
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2818   .text.OCPWD_GetAllSyncInTicks:00000017 .LFE56
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14370  .debug_loc:000018fc .LLST149
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15183  .debug_str:00000871 .LASF397
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2832   .text.OCPWD_StopSampleSync:00000008 .LFE57
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14384  .debug_loc:0000191d .LLST150
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2831   .text.OCPWD_StopSampleSync:00000008 .LVL304
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15517  .debug_str:000013b9 .LASF398
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2883   .text.HWTMRCH_ISR:0000003a .LFE58
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14398  .debug_loc:0000193e .LLST151
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14411  .debug_loc:0000195e .LLST152
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2851   .text.HWTMRCH_ISR:0000000e .LBB46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2876   .text.HWTMRCH_ISR:00000034 .LBE46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14429  .debug_loc:0000198a .LLST153
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2867   .text.HWTMRCH_ISR:0000002d .LVL308
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2873   .text.HWTMRCH_ISR:00000034 .LVL309
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2846   .text.HWTMRCH_ISR:00000008 .LVL306
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2882   .text.HWTMRCH_ISR:0000003a .LVL311
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15857  .debug_str:00001f51 .LASF399
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2913   .text.OCTPM_GetTimerIDFromChannelID:0000001a .LFE60
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14436  .debug_loc:0000199d .LLST154
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14967  .debug_str:000000b2 .LASF400
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2930   .text.OCTPM_GetTimerIDFromChannelID_1:0000000d .LFE61
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14461  .debug_loc:000019d7 .LLST155
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15783  .debug_str:00001ca0 .LASF401
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2980   .text.OCTMR_GetChannel:0000002b .LFE62
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15839  .debug_str:00001ec0 .LASF402
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14475  .debug_loc:000019f8 .LLST156
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15613  .debug_str:000016d5 .LASF403
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15607  .debug_str:00001691 .LASF404
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14486  .debug_loc:00001a16 .LLST157
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15153  .debug_str:00000764 .LASF405
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14498  .debug_loc:00001a35 .LLST158
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15801  .debug_str:00001d24 .LASF406
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3028   .text.OCTPM_GetChannelSync:00000031 .LFE59
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14520  .debug_loc:00001a6c .LLST159
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15333  .debug_str:00000d7c .LASF407
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15329  .debug_str:00000d68 .LASF408
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15141  .debug_str:000006ef .LASF409
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3082   .text.OCTMR_GetChannelIDFromPinID:00000031 .LFE63
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15871  .debug_str:00001fcc .LASF410
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14553  .debug_loc:00001abc .LLST160
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15715  .debug_str:00001a49 .LASF411
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14567  .debug_loc:00001add .LLST161
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15577  .debug_str:000015a3 .LASF412
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14580  .debug_loc:00001afd .LLST162
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14591  .debug_loc:00001b1b .LLST163
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3039   .text.OCTMR_GetChannelIDFromPinID:00000004 .LVL326
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15367  .debug_str:00000e9d .LASF413
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3144   .text.OCTPM_GetPinIDFromChannelID:0000003e .LFE64
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14603  .debug_loc:00001b3a .LLST164
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14616  .debug_loc:00001b5a .LLST165
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15537  .debug_str:00001453 .LASF414
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14641  .debug_loc:00001b94 .LLST166
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14648  .debug_loc:00001ba7 .LLST167
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3116   .text.OCTPM_GetPinIDFromChannelID:0000001c .LBB47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3132   .text.OCTPM_GetPinIDFromChannelID:00000030 .LBE47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14655  .debug_loc:00001bba .LLST168
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3121   .text.OCTPM_GetPinIDFromChannelID:00000024 .LVL337
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15755  .debug_str:00001b8b .LASF415
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15553  .debug_str:000014bf .LASF416
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15515  .debug_str:000013a7 .LASF417
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15003  .debug_str:000001e8 .LASF418
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15009  .debug_str:00000228 .LASF419
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15723  .debug_str:00001a75 .LASF420
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14999  .debug_str:000001c0 .LASF421
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15169  .debug_str:000007e1 .LASF422
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15795  .debug_str:00001cf7 .LASF423
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15713  .debug_str:00001a3f .LASF424
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15353  .debug_str:00000e3e .LASF425
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15619  .debug_str:0000171d .LASF426
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15039  .debug_str:0000034f .LASF427
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14977  .debug_str:00000103 .LASF428
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15777  .debug_str:00001c53 .LASF429
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15843  .debug_str:00001ed1 .LASF430
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15297  .debug_str:00000c8d .LASF431
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15325  .debug_str:00000d42 .LASF432
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15655  .debug_str:00001866 .LASF433
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15567  .debug_str:00001534 .LASF434
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15563  .debug_str:00001513 .LASF435
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15281  .debug_str:00000bcb .LASF436
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15751  .debug_str:00001b6b .LASF437
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15433  .debug_str:000010c9 .LASF438
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15521  .debug_str:000013d3 .LASF439
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15879  .debug_str:00002009 .LASF440
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15409  .debug_str:00001006 .LASF441
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15251  .debug_str:00000ac8 .LASF442
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15227  .debug_str:00000a00 .LASF443
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15431  .debug_str:000010bc .LASF444
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14983  .debug_str:0000013d .LASF445
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15861  .debug_str:00001f8c .LASF446
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15001  .debug_str:000001d0 .LASF447
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15051  .debug_str:000003d5 .LASF448
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15417  .debug_str:0000104d .LASF449
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15109  .debug_str:00000586 .LASF450
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15161  .debug_str:0000079b .LASF451
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15449  .debug_str:00001151 .LASF452
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15229  .debug_str:00000a0d .LASF453
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15679  .debug_str:0000193c .LASF454
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15393  .debug_str:00000fad .LASF455
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15063  .debug_str:0000041e .LASF456
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:14995  .debug_str:000001a3 .LASF457
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15807  .debug_str:00001d54 .LASF458
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15139  .debug_str:000006e1 .LASF459
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15047  .debug_str:000003b1 .LASF460
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15601  .debug_str:00001664 .LASF461
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15185  .debug_str:00000886 .LASF462
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15027  .debug_str:000002df .LASF463
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15847  .debug_str:00001f07 .LASF464
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:15277  .debug_str:00000bae .LASF465
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:10     .text.OCPWD_GetIntervalInTicks:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:30     .text.OCPWD_GetIntervalInTicks:0000002c .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:34     .text.OCPWD_GetIntervalInTicks:00000034 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:43     .text.OCPWD_GetIntervalInTicks:0000003e .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:49     .text.OCPWD_GetIntervalInTicks:00000044 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:27     .text.OCPWD_GetIntervalInTicks:0000002a .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:39     .text.OCPWD_GetIntervalInTicks:0000003b .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:72     .text.OCHWCNTR_InitSync:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:69     .text.OCHWCNTR_InitSync:00000000 .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:121    .text.OCHWCNTR_InitSync:00000060 .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:130    .text.OCHWCNTR_InitSync:00000071 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:178    .text.OCHWCNTR_InitSync:000000be .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:187    .text.OCHWCNTR_InitSync:000000cd .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:191    .text.OCHWCNTR_InitSync:000000d0 .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:193    .text.OCHWCNTR_InitSync:000000d1 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:198    .text.OCHWCNTR_InitSync:000000d4 .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:203    .text.OCHWCNTR_InitSync:000000d7 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:81     .text.OCHWCNTR_InitSync:00000016 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:207    .text.OCHWCNTR_InitSync:000000d9 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:222    .text.OCHWCNTR_DeInitSync:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:310    .text.OCHWCNTR_GetSync:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:308    .text.OCHWCNTR_GetSync:00000000 .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:317    .text.OCHWCNTR_GetSync:0000000d .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:323    .text.OCHWCNTR_GetSync:0000001c .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:313    .text.OCHWCNTR_GetSync:00000004 .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:326    .text.OCHWCNTR_GetSync:00000020 .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:336    .text.OCHWCNTR_GetTicksSync:00000000 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:342    .text.OCHWCNTR_GetTicksSync:0000000b .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:353    .text.OCHWCNTR_SetSync:00000000 .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:367    .text.OCHWCNTR_SetSync:0000001c .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:369    .text.OCHWCNTR_SetSync:00000021 .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:375    .text.OCHWCNTR_SetSync:00000028 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:383    .text.OCHWCNTR_SetSync:0000002f .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:363    .text.OCHWCNTR_SetSync:00000013 .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:399    .text.OCHWCNTR_EnableMulti:00000002 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:397    .text.OCHWCNTR_EnableMulti:00000000 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:408    .text.OCHWCNTR_EnableMulti:0000000c .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:431    .text.OCHWCNTR_Enable:00000015 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:452    .text.OCHWCNTR_Enable:00000037 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:465    .text.OCHWCNTR_Enable:00000041 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:478    .text.OCHWCNTR_EnableISR:00000002 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:476    .text.OCHWCNTR_EnableISR:00000000 .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:501    .text.OCHWCNTR_EnableISR:00000027 .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:525    .text.OCHWCNTR_EnableISR:00000050 .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:535    .text.OCHWCNTR_EnableISR:0000005b .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:539    .text.OCHWCNTR_EnableISR:0000005e .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:541    .text.OCHWCNTR_EnableISR:0000005f .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:547    .text.OCHWCNTR_EnableISR:00000062 .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:503    .text.OCHWCNTR_EnableISR:0000002a .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:516    .text.OCHWCNTR_EnableISR:00000041 .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:518    .text.OCHWCNTR_EnableISR:00000044 .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:495    .text.OCHWCNTR_EnableISR:00000022 .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:561    .text.OCHWCNTR_GetTickResolution:00000000 .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:567    .text.OCHWCNTR_GetTickResolution:0000000d .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:581    .text.OCHWCNTR_GetResolutionByTimerChannel:00000000 .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:585    .text.OCHWCNTR_GetResolutionByTimerChannel:00000004 .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:598    .text.OCHWCNTR_GetTimerModulus:00000000 .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:605    .text.OCHWCNTR_GetTimerModulus:0000000e .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:615    .text.OCHWCNTR_GetPeriod:00000000 .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:621    .text.OCHWCNTR_GetPeriod:0000000e .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:633    .text.OCHWCNTR_GetMaxPeriod:00000000 .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:639    .text.OCHWCNTR_GetMaxPeriod:0000000e .LVL75
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:651    .text.OCHWCNTR_GetDelta:00000000 .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:656    .text.OCHWCNTR_GetDelta:0000000b .LVL77
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:669    .text.HWCNTR_ISR:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:667    .text.HWCNTR_ISR:00000000 .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:698    .text.HWCNTR_ISR:00000032 .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:700    .text.HWCNTR_ISR:00000035 .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:682    .text.HWCNTR_ISR:00000017 .LVL81
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:723    .text.OCHWCNTR_Trigger:00000002 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:721    .text.OCHWCNTR_Trigger:00000000 .LVL87
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:729    .text.OCHWCNTR_Trigger:00000009 .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:738    .text.OCHWCNTR_Trigger:00000016 .LVL90
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:749    .text.OCHWCNTR_Trigger:00000024 .LVL92
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:762    .text.OCICU_InitSync:00000000 .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:785    .text.OCICU_InitSync:00000031 .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:791    .text.OCICU_InitSync:00000038 .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:795    .text.OCICU_InitSync:0000003b .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:797    .text.OCICU_InitSync:0000003c .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:801    .text.OCICU_InitSync:0000003f .LVL100
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:778    .text.OCICU_InitSync:00000025 .LVL94
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:815    .text.OCICU_DeInitSync:00000000 .LVL101
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:822    .text.OCICU_DeInitSync:00000008 .LVL102
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:825    .text.OCICU_DeInitSync:00000011 .LVL103
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:835    .text.OCICU_DeInitSync:00000020 .LVL105
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:854    .text.OCICU_GetSync:00000002 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:852    .text.OCICU_GetSync:00000000 .LVL106
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:859    .text.OCICU_GetSync:00000006 .LVL108
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:857    .text.OCICU_GetSync:00000004 .LVL107
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:882    .text.OCICU_GetTickSync:00000000 .LVL111
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:886    .text.OCICU_GetTickSync:00000004 .LVL112
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:900    .text.OCICU_SetModeSync:00000000 .LVL114
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:910    .text.OCICU_SetModeSync:00000008 .LVL116
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:920    .text.OCICU_SetModeSync:00000020 .LVL118
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:926    .text.OCICU_SetModeSync:00000023 .LVL119
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:905    .text.OCICU_SetModeSync:00000006 .LVL115
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:941    .text.OCPWD_EdgeTime:00000002 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:939    .text.OCPWD_EdgeTime:00000000 .LVL120
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:951    .text.OCPWD_EdgeTime:00000014 .LVL122
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:948    .text.OCPWD_EdgeTime:00000012 .LVL121
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:958    .text.OCPWD_EdgeTime:00000020 .LVL125
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:968    .text.OCPWD_EdgeTime:00000031 .LVL129
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:974    .text.OCPWD_EdgeTime:0000003c .LVL130
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1001   .text.OCPWD_EdgeTime:00000069 .LVL134
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1006   .text.OCPWD_EdgeTime:0000006b .LVL135
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1101   .text.OCPWD_EdgeTime:0000011b .LVL140
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1106   .text.OCPWD_EdgeTime:00000127 .LVL141
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1195   .text.OCPWD_EdgeTime:000001b1 .LVL152
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1208   .text.OCPWD_EdgeTime:000001c9 .LVL154
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1213   .text.OCPWD_EdgeTime:000001cd .LVL155
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:955    .text.OCPWD_EdgeTime:0000001a .LVL124
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:960    .text.OCPWD_EdgeTime:00000023 .LVL126
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1076   .text.OCPWD_EdgeTime:000000f4 .LVL137
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:965    .text.OCPWD_EdgeTime:0000002b .LVL128
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1018   .text.OCPWD_EdgeTime:0000007f .LVL136
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:984    .text.OCPWD_EdgeTime:0000004a .LVL132
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1096   .text.OCPWD_EdgeTime:00000118 .LVL139
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1125   .text.OCPWD_EdgeTime:00000146 .LVL143
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1178   .text.OCPWD_EdgeTime:0000019c .LVL148
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1181   .text.OCPWD_EdgeTime:000001a1 .LVL149
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1185   .text.OCPWD_EdgeTime:000001a3 .LVL150
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1142   .text.OCPWD_EdgeTime:0000015d .LVL146
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1228   .text.OCPWD_HwTmrTurns:00000002 .LCFI12
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1226   .text.OCPWD_HwTmrTurns:00000000 .LVL156
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1234   .text.OCPWD_HwTmrTurns:00000006 .LVL158
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1229   .text.OCPWD_HwTmrTurns:00000002 .LVL157
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1291   .text.OCICU_GetModeSync:00000008 .LCFI13
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1306   .text.OCICU_GetModeSync:0000001f .LCFI14
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1313   .text.OCICU_GetModeSync:00000026 .LCFI15
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1324   .text.OCICU_ToggleModeSync:00000000 .LVL160
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1331   .text.OCICU_ToggleModeSync:00000008 .LVL161
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1358   .text.OCICU_EnableISR:00000002 .LCFI16
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1356   .text.OCICU_EnableISR:00000000 .LVL163
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1378   .text.OCICU_EnableISR:0000001c .LVL166
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1399   .text.OCICU_EnableISR:0000003c .LVL170
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1405   .text.OCICU_EnableISR:0000003f .LVL171
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1407   .text.OCICU_EnableISR:00000040 .LVL172
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1413   .text.OCICU_EnableISR:00000042 .LVL173
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1365   .text.OCICU_EnableISR:0000000c .LVL164
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1372   .text.OCICU_EnableISR:00000017 .LVL165
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1429   .text.OCOCU_InitSync:00000000 .LVL174
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1452   .text.OCOCU_InitSync:00000031 .LVL176
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1458   .text.OCOCU_InitSync:00000038 .LVL178
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1462   .text.OCOCU_InitSync:0000003b .LVL179
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1464   .text.OCOCU_InitSync:0000003c .LVL180
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1468   .text.OCOCU_InitSync:0000003f .LVL181
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1445   .text.OCOCU_InitSync:00000025 .LVL175
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1482   .text.OCOCU_DeInitSync:00000000 .LVL182
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1489   .text.OCOCU_DeInitSync:00000008 .LVL183
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1492   .text.OCOCU_DeInitSync:00000011 .LVL184
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1502   .text.OCOCU_DeInitSync:00000020 .LVL186
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1519   .text.OCOCU_GetSync:00000000 .LVL187
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1523   .text.OCOCU_GetSync:00000004 .LVL188
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1536   .text.OCOCU_GetSyncTickResolution:00000000 .LVL190
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1540   .text.OCOCU_GetSyncTickResolution:00000004 .LVL191
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1554   .text.OCOCU_SetThreshold1Sync:00000002 .LCFI17
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1612   .text.OCOCU_SetThreshold1TickResolutionSync:0000000a .LCFI18
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1646   .text.OCOCU_SetThreshold1TickResolutionSync:00000032 .LCFI19
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1604   .text.OCOCU_SetThreshold1TickResolutionSync:00000000 .LVL193
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1621   .text.OCOCU_SetThreshold1TickResolutionSync:00000019 .LVL195
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1623   .text.OCOCU_SetThreshold1TickResolutionSync:0000001b .LVL196
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1641   .text.OCOCU_SetThreshold1TickResolutionSync:0000002e .LVL200
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1618   .text.OCOCU_SetThreshold1TickResolutionSync:00000016 .LVL194
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1637   .text.OCOCU_SetThreshold1TickResolutionSync:0000002a .LVL199
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1658   .text.OCOCU_IsTickElapsed:00000002 .LCFI20
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1656   .text.OCOCU_IsTickElapsed:00000000 .LVL202
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1668   .text.OCOCU_IsTickElapsed:0000000e .LVL204
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1687   .text.OCOCU_IsTickElapsed:00000022 .LVL207
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1710   .text.OCOCU_IsTickElapsed:00000042 .LVL211
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1662   .text.OCOCU_IsTickElapsed:00000008 .LVL203
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1713   .text.OCOCU_IsTickElapsed:0000004b .LVL212
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1716   .text.OCOCU_IsTickElapsed:0000004d .LVL213
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1690   .text.OCOCU_IsTickElapsed:0000002b .LVL208
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1719   .text.OCOCU_IsTickElapsed:00000050 .LVL214
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1737   .text.OCOCU_GetTickValByTriggerIndex:00000002 .LCFI21
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1735   .text.OCOCU_GetTickValByTriggerIndex:00000000 .LVL215
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1744   .text.OCOCU_GetTickValByTriggerIndex:0000000b .LVL216
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1751   .text.OCOCU_GetTickValByTriggerIndex:00000012 .LVL218
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1764   .text.OCOCU_GetTickValByTriggerIndex:00000020 .LVL220
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1780   .text.OCOCU_GetTickValByTriggerIndex:00000036 .LVL222
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1795   .text.OCOCU_SetTickValByTriggerIndex:00000002 .LCFI22
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1793   .text.OCOCU_SetTickValByTriggerIndex:00000000 .LVL223
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1805   .text.OCOCU_SetTickValByTriggerIndex:0000000e .LVL225
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1812   .text.OCOCU_SetTickValByTriggerIndex:00000014 .LVL227
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1825   .text.OCOCU_SetTickValByTriggerIndex:00000022 .LVL229
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1842   .text.OCOCU_SetTickValByTriggerIndex:00000038 .LVL232
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1799   .text.OCOCU_SetTickValByTriggerIndex:00000008 .LVL224
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1827   .text.OCOCU_SetTickValByTriggerIndex:00000028 .LVL230
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1856   .text.OCOCU_SetEventSync:00000002 .LCFI23
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1956   .text.OCOCU_SetRelativeEventSync:00000002 .LCFI24
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2044   .text.OCOCU_SetThreshold2Sync:00000000 .LVL233
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2062   .text.OCOCU_SetThreshold2TickResolutionSync:00000000 .LVL235
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2086   .text.OCOCU_SetModeSync:00000008 .LCFI25
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2107   .text.OCOCU_SetModeSync:00000035 .LCFI26
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2114   .text.OCOCU_SetModeSync:0000003b .LCFI27
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2130   .text.OCPWM_InitSync:00000000 .LVL237
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2149   .text.OCPWM_InitSync:00000029 .LVL239
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2155   .text.OCPWM_InitSync:00000030 .LVL241
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2159   .text.OCPWM_InitSync:00000033 .LVL242
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2161   .text.OCPWM_InitSync:00000034 .LVL243
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2165   .text.OCPWM_InitSync:00000037 .LVL244
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2146   .text.OCPWM_InitSync:00000027 .LVL238
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2185   .text.OCPWM_DeInitSync:00000008 .LCFI28
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2200   .text.OCPWM_DeInitSync:00000024 .LCFI29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2207   .text.OCPWM_DeInitSync:0000002b .LCFI30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2220   .text.OCPWM_SetSync:00000002 .LCFI31
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2218   .text.OCPWM_SetSync:00000000 .LVL245
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2235   .text.OCPWM_SetSync:0000001a .LVL248
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2243   .text.OCPWM_SetSync:0000002b .LVL250
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2261   .text.OCPWM_SetSync:00000049 .LVL254
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2265   .text.OCPWM_SetSync:0000004c .LVL255
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2271   .text.OCPWM_SetSync:00000050 .LVL257
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2267   .text.OCPWM_SetSync:0000004d .LVL256
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2231   .text.OCPWM_SetSync:00000015 .LVL247
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2291   .text.OCPWM_GetSync:00000008 .LCFI32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2293   .text.OCPWM_GetSync:0000000a .LCFI33
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2309   .text.OCPWM_GetSync:00000027 .LCFI34
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2314   .text.OCPWM_GetSync:0000002a .LCFI35
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2332   .text.OCPWM_GetPeriodSync:0000000a .LCFI36
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2351   .text.OCPWM_GetPeriodSync:00000033 .LCFI37
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2356   .text.OCPWM_GetPeriodSync:00000036 .LCFI38
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2373   .text.OCPWM_SetPeriodSync:0000000b .LCFI39
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2439   .text.OCPWM_SetPeriodSync:00000086 .LCFI40
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2446   .text.OCPWM_SetPeriodSync:0000008c .LCFI41
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2464   .text.OCPWM_SetAllSync:00000002 .LCFI42
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2462   .text.OCPWM_SetAllSync:00000000 .LVL258
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2475   .text.OCPWM_SetAllSync:00000010 .LVL260
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2487   .text.OCPWM_EnableT1ISR:00000000 .LVL262
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2494   .text.OCPWM_EnableT1ISR:00000008 .LVL263
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2513   .text.OCPWD_InitSync:00000002 .LCFI43
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2515   .text.OCPWD_InitSync:00000004 .LCFI44
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2511   .text.OCPWD_InitSync:00000000 .LVL265
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2525   .text.OCPWD_InitSync:00000012 .LVL266
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2539   .text.OCPWD_InitSync:0000002a .LVL268
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2562   .text.OCPWD_DeInitSync:00000002 .LCFI45
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2560   .text.OCPWD_DeInitSync:00000000 .LVL269
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2578   .text.OCPWD_DeInitSync:0000001a .LVL273
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2583   .text.OCPWD_DeInitSync:00000024 .LVL274
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2599   .text.OCPWD_DeInitSync:00000039 .LVL275
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2604   .text.OCPWD_DeInitSync:0000003d .LVL276
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2612   .text.OCPWD_DeInitSync:00000047 .LVL278
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2568   .text.OCPWD_DeInitSync:0000000a .LVL271
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2575   .text.OCPWD_DeInitSync:00000012 .LVL272
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2625   .text.OCPWD_StartSampleSync:00000002 .LCFI46
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2687   .text.OCPWD_SetFilterTime:00000002 .LCFI47
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2685   .text.OCPWD_SetFilterTime:00000000 .LVL279
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2699   .text.OCPWD_SetFilterTime:00000016 .LVL281
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2707   .text.OCPWD_SetFilterTime:00000022 .LVL284
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2715   .text.OCPWD_SetFilterTime:0000002e .LVL287
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2720   .text.OCPWD_SetFilterTime:00000031 .LVL288
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2705   .text.OCPWD_SetFilterTime:0000001f .LVL283
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2688   .text.OCPWD_SetFilterTime:00000002 .LVL280
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2710   .text.OCPWD_SetFilterTime:0000002b .LVL285
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2725   .text.OCPWD_SetFilterTime:00000035 .LVL289
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2713   .text.OCPWD_SetFilterTime:0000002d .LVL286
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2735   .text.OCPWD_SetTonMeasure:00000000 .LVL290
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2742   .text.OCPWD_SetTonMeasure:00000008 .LVL291
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2757   .text.OCPWD_SetTonMeasure:00000021 .LVL294
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2749   .text.OCPWD_SetTonMeasure:0000001b .LVL292
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2753   .text.OCPWD_SetTonMeasure:0000001e .LVL293
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2762   .text.OCPWD_SetTonMeasure:00000025 .LVL295
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2774   .text.OCPWD_GetAllSync:00000002 .LCFI48
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2772   .text.OCPWD_GetAllSync:00000000 .LVL296
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2781   .text.OCPWD_GetAllSync:00000012 .LVL297
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2786   .text.OCPWD_GetAllSync:00000019 .LVL299
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2794   .text.OCPWD_GetAllSync:0000002d .LVL300
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2806   .text.OCPWD_GetAllSyncInTicks:00000000 .LVL301
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2810   .text.OCPWD_GetAllSyncInTicks:00000005 .LVL302
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2826   .text.OCPWD_StopSampleSync:00000000 .LVL303
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2842   .text.HWTMRCH_ISR:00000002 .LCFI49
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2840   .text.HWTMRCH_ISR:00000000 .LVL305
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2879   .text.HWTMRCH_ISR:00000036 .LVL310
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2856   .text.HWTMRCH_ISR:00000019 .LVL307
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2891   .text.OCTPM_GetTimerIDFromChannelID:00000000 .LVL312
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2897   .text.OCTPM_GetTimerIDFromChannelID:00000006 .LVL313
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2903   .text.OCTPM_GetTimerIDFromChannelID:00000012 .LVL314
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2907   .text.OCTPM_GetTimerIDFromChannelID:00000015 .LVL315
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2921   .text.OCTPM_GetTimerIDFromChannelID_1:00000000 .LVL316
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2925   .text.OCTPM_GetTimerIDFromChannelID_1:00000004 .LVL317
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2938   .text.OCTMR_GetChannel:00000000 .LVL318
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2963   .text.OCTMR_GetChannel:0000001d .LVL321
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2966   .text.OCTMR_GetChannel:0000001e .LVL322
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2977   .text.OCTMR_GetChannel:0000002a .LVL324
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2944   .text.OCTMR_GetChannel:0000000a .LVL319
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2970   .text.OCTMR_GetChannel:00000020 .LVL323
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2958   .text.OCTMR_GetChannel:00000019 .LVL320
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2993   .text.OCTPM_GetChannelSync:00000006 .LCFI50
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:2998   .text.OCTPM_GetChannelSync:0000000b .LCFI51
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3001   .text.OCTPM_GetChannelSync:0000000d .LCFI52
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3003   .text.OCTPM_GetChannelSync:0000000f .LCFI53
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3022   .text.OCTPM_GetChannelSync:0000002a .LCFI54
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3036   .text.OCTMR_GetChannelIDFromPinID:00000000 .LVL325
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3076   .text.OCTMR_GetChannelIDFromPinID:0000002e .LVL331
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3070   .text.OCTMR_GetChannelIDFromPinID:0000002b .LVL329
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3072   .text.OCTMR_GetChannelIDFromPinID:0000002c .LVL330
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3045   .text.OCTMR_GetChannelIDFromPinID:0000000e .LVL327
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3063   .text.OCTMR_GetChannelIDFromPinID:00000020 .LVL328
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3092   .text.OCTPM_GetPinIDFromChannelID:00000002 .LCFI55
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3090   .text.OCTPM_GetPinIDFromChannelID:00000000 .LVL332
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3096   .text.OCTPM_GetPinIDFromChannelID:00000006 .LVL333
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3102   .text.OCTPM_GetPinIDFromChannelID:0000000b .LVL334
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3113   .text.OCTPM_GetPinIDFromChannelID:0000001c .LVL336
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3107   .text.OCTPM_GetPinIDFromChannelID:00000014 .LVL335
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3139   .text.OCTPM_GetPinIDFromChannelID:00000039 .LVL339
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:3135   .text.OCTPM_GetPinIDFromChannelID:00000032 .LVL338
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:4348   .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1402   .text.OCICU_EnableISR:0000003c .LBE29
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1409   .text.OCICU_EnableISR:00000040 .LBB32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1417   .text.OCICU_EnableISR:00000042 .LBE32
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1367   .text.OCICU_EnableISR:0000000c .LBB30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1401   .text.OCICU_EnableISR:0000003c .LBE30
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1410   .text.OCICU_EnableISR:00000040 .LBB31
C:\Users\Andrea\AppData\Local\Temp\ccblIp7d.s:1416   .text.OCICU_EnableISR:00000042 .LBE31

UNDEFINED SYMBOLS
_TmrChMap
_TmrCntMap
_OS_DisableInterrupt
_OS_Global
_OS_EnableInterrupt
_TMR_CheckClearSourceIdFailed
_TMR_GetClearSourceCh
_TMR_ClockGate
_TMR_SetPrescaler
_TMR_SetCountDir
_TMR_SetModulo
_TMR_GetTickResolution
_TMR_StopClockSource
_TMR_SetPrescalerDfltValue
_TMR_SetCountDirDfltValue
_TMR_DisableTI
_TMR_ClearTOF
_TMR_SetModuloDfltValue
_TMR_SetCounterDfltValue
_TMR_GetCounter
_TMR_SetCounter
_TMR_StopClockSourceMulti
_TMR_SetClockSourceMulti
_TMR_SetClockSource
_TMR_EnableTI
_TMR_GetDelta
_LIB_IRQMonitor_Enter
_LIB_IRQMonitor_Exit
_LIB_Error_Fatal_Handler
_TMR_SetChannelInputChapture
_TMR_DeInitChannel
_TMR_GetChValue
_TMR_SetChannelEdgeMode
_TMR_GetTOF
_TmrChToPinMap
_OCDIO_GetIOMapPinValueSync
_TMR_GetChannelEdgeMode
_TMR_ToggleChannelEdgeMode
_TMR_DisableCHI
_TMR_ClearCHF
_TMR_EnableCHI
_TMR_SetChannelOutputCompare
_TMR_GetModulo
_TMR_SetThreshold1
_Threshold2SetUpUnsupported
_OutputCompareModeUnsupported
_TMR_SetChannelOutputMode
_TMR_SetChannelPWM
_TMR_SetChannelPulses
_TMR_SetTimeOn
_TMR_GetTimeOn
_OCDIO_GetIOMapItem
