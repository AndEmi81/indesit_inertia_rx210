   1                             		.file	"RTOSInit_RX200.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.OS_InitHW,"ax",@progbits
   5                             		.global	_OS_InitHW
   7                             	_OS_InitHW:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS/RTOSInit_RX200.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
   2:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *               SEGGER MICROCONTROLLER GmbH & Co KG                  *
   3:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Solutions for real time microcontroller applications         *
   4:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
   5:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
   6:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       (c) 1995 - 2011  SEGGER Microcontroller GmbH & Co KG         *
   7:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
   8:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       www.segger.com     Support: support@segger.com               *
   9:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  10:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
  11:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  12:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       embOS * Real time operating system for microcontrollers      *
  13:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  14:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  15:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Please note:                                                 *
  16:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  17:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Knowledge of this file may under no circumstances            *
  18:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       be used to write a similar product or a real-time            *
  19:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       operating system for in-house use.                           *
  20:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  21:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Thank you for your fairness !                                *
  22:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  23:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
  24:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  25:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS version: 3.86d                                            *
  26:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *                                                                    *
  27:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
  28:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  29:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** ----------------------------------------------------------------------
  30:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** File    : RTOSInit_RX210.c for RENESAS RX210 and RPBRX210 eval board
  31:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****           for HEW, IAR and GNU compiler.          
  32:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** Purpose : Initializes and handles the hardware for embOS as far
  33:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****           as required by the OS
  34:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****           Feel free to modify this file acc. to your target system.
  35:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** --------  END-OF-HEADER  ---------------------------------------------
  36:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
  37:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  38:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #include "RTOS.h"
  39:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #include "LIB_Trace.h"
  40:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #include "LIB_TaskMonitoring.h"
  41:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  42:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
  43:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
  44:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Configuration
  45:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
  46:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
  47:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
  48:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  49:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
  50:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
  51:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Clock frequency settings
  52:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
  53:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef		OS_FSYS                   /* Main clock frequency         */
  54:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define	OS_FSYS 20000000uL        /* Assume 20MHz                 */
  55:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
  56:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  57:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  58:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  59:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef		OS_INIT_PLL
  60:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	#define 	OS_INIT_PLL (0)
  61:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
  62:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  63:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef		OS_TICK_FREQ
  64:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	#define 	OS_TICK_FREQ (1000)         /* <<< System tick */
  65:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
  66:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define		OS_TICK_MSEC              (1000/OS_TICK_FREQ)
  67:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  68:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  69:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
  70:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
  71:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Configuration of communication to OSView
  72:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
  73:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef   OS_VIEW_ENABLE            /* Global enable of communication*/
  74:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_VIEW_ENABLE    (1)     /* Default: on*/
  75:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
  76:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  77:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef   OS_VIEW_USE_UART          /* If set, UART will be used*/
  78:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_VIEW_USE_UART  (1)     /* Default: 1 => Uart is used*/
  79:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif                              /* if OS_VIEW_ENABLE is on*/
  80:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  81:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
  82:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
  83:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       UART settings for OSView
  84:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       If you do not want (or can not due to hardware limitations)
  85:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       to dedicate a UART to OSView, please define it to be -1
  86:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Currently UART1 is supported and the standard
  87:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       setup enables UART1 per default
  88:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
  89:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef   OS_UART
  90:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART (-1)
  91:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
  92:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  93:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef   OS_BAUDRATE
  94:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_BAUDRATE (38400)
  95:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
  96:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
  97:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef   OS_PCLK_UART
  98:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_PCLK_UART  (OS_FSYS)
  99:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 100:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 101:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 102:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 103:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Configuration of Option Bytes and ID Code
 104:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 105:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       We set all bytes explicitely to 0xFF which is the default value
 106:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       IAR handles these bytes in IAR linker files
 107:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 108:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __RX
 109:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _MDEreg=0xFFFFFF80            /* MDE register (Single Chip Mode)*/
 110:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #ifdef __BIG
 111:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     const unsigned long _MDEreg = 0xFFFFFFF8;   /* Big endian*/
 112:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #else
 113:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     const unsigned long _MDEreg = 0xFFFFFFFF;   /* Little endian*/
 114:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #endif
 115:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _Dummy=0xFFFFFF84             /* Dummy value*/
 116:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _Dummy  = 0xFFFFFFFF;
 117:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _OFS1=0xFFFFFF88              /* Option function select register 1 (OFS1)*/
 118:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _OFS1   = 0xFFFFFFFF;
 119:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _OFS2=0xFFFFFF8C              /* Option function select register 2 (OFS2)*/
 120:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _OFS2   = 0xFFFFFFFF;
 121:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _IDCode0=0xFFFFFFA0           /* ID Code 0*/
 122:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode0 = 0xFFFFFFFF;
 123:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _IDCode1=0xFFFFFFA4           /* ID Code 1*/
 124:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode1 = 0xFFFFFFFF;
 125:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _IDCode2=0xFFFFFFA8           /* ID Code 2*/
 126:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode2 = 0xFFFFFFFF;
 127:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma address _IDCode3=0xFFFFFFAC           /* ID Code 3*/
 128:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode3 = 0xFFFFFFFF;           
 129:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 130:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __GNUC__
 131:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   /*
 132:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Please ensure that sections ".options" and ".idcode" are defined in linker at fixed addresses 
 133:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   */
 134:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #ifdef __RX_BIG_ENDIAN__                                                            /* MDE regist
 135:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _MDEreg	__attribute__ ((section (".options"))) = 0xFFFFFFF8;  /* Big endian*/
 136:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #else
 137:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _MDEreg	__attribute__ ((section (".options"))) = 0xFFFFFFFF;  /* Little endia
 138:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #endif
 139:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _Dummy    __attribute__ ((section (".options"))) = 0xFFFFFFFF;  /* Dummy valu
 140:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _OFS1     __attribute__ ((section (".options"))) = 0xFFFFFFFF;  /* Option fun
 141:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _OFS0     __attribute__ ((section (".options"))) = 0xFFFFFFFF;  /* Option fun
 142:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode0  __attribute__ ((section (".idcode")))  = 0xFFFFFFFF;  /* ID Code 0*
 143:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode1  __attribute__ ((section (".idcode")))  = 0xFFFFFFFF;  /* ID Code 1*
 144:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode2  __attribute__ ((section (".idcode")))  = 0xFFFFFFFF;  /* ID Code 2*
 145:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   const unsigned long _IDCode3  __attribute__ ((section (".idcode")))  = 0xFFFFFFFF;  /* ID Code 3*
 146:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 147:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 148:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /****** End of configurable options *********************************/
 149:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 150:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_USED  ((OS_VIEW_ENABLE && (OS_VIEW_USE_UART != 0)) && (OS_UART == 0))
 151:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 152:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if OS_UART_USED
 153:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_COM_INIT() OS_COM_Init()
 154:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else
 155:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_COM_INIT()
 156:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 157:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 158:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 159:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 160:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Check configuration
 161:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 162:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
 163:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 164:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 165:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef   DEBUG     /* Should normally be defined as project option */
 166:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define DEBUG  (0)
 167:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 168:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 169:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 170:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 171:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Compiler dependent defines
 172:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 173:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
 174:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 175:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __ICCRX__
 176:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define EVENACCESS
 177:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define WAIT_FOR_INTERRUPT()   __wait_for_interrupt()
 178:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 179:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 180:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __RX
 181:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define EVENACCESS             __evenaccess
 182:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define WAIT_FOR_INTERRUPT()   wait()
 183:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 184:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 185:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __GNUC__
 186:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define EVENACCESS             
 187:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define WAIT_FOR_INTERRUPT()   __builtin_rx_wait()
 188:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 189:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 190:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifndef	EVENACCESS
 191:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define	EVENACCESS
 192:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 193:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 194:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 195:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 196:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *   Sfrs used in RTOSInit
 197:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 198:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
 199:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 200:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 201:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /****** Protect register  ********************************************/
 202:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define PRCR                 (*(volatile EVENACCESS OS_U16*) (0x000803FE))           
 203:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 204:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /****** Interrupt controller       **********************************/
 205:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IRR_BASE_ADDR        (0x00087000)
 206:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ISEL_BASE_ADDR       (0x00087100)
 207:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 208:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IER03                (*(volatile EVENACCESS OS_U8*)  (0x00087203))
 209:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IER1A                (*(volatile EVENACCESS OS_U8*)  (0x0008721A))
 210:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IER1B                (*(volatile EVENACCESS OS_U8*)  (0x0008721B))
 211:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IER15                (*(volatile EVENACCESS OS_U8*)  (0x00087215))
 212:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IER16                (*(volatile EVENACCESS OS_U8*)  (0x00087216))
 213:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IPR04                (*(volatile EVENACCESS OS_U8*)  (0x00087304))
 214:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IPR214               (*(volatile EVENACCESS OS_U8*)  (0x000873D6))
 215:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IPR218               (*(volatile EVENACCESS OS_U8*)  (0x000873DA))
 216:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IPR174               (*(volatile EVENACCESS OS_U8*)  (0x000873AE))
 217:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IPR175               (*(volatile EVENACCESS OS_U8*)  (0x000873AF))
 218:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define IPR180               (*(volatile EVENACCESS OS_U8*)  (0x000873B4))
 219:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 220:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /****** SYSTEM module  **********************************************/
 221:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYSTEM_BASE_ADDR     (0x00080000)
 222:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define MSTPCRA              (*(volatile EVENACCESS OS_U32*) (SYSTEM_BASE_ADDR + 0x010))  /* Module
 223:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define MSTPCRB              (*(volatile EVENACCESS OS_U32*) (SYSTEM_BASE_ADDR + 0x014))  /* Module
 224:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define MSTPCRC              (*(volatile EVENACCESS OS_U32*) (SYSTEM_BASE_ADDR + 0x018))  /* Module
 225:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SCKCR                (*(volatile EVENACCESS OS_U32*) (SYSTEM_BASE_ADDR + 0x020))  /* System
 226:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SCKCR3               (*(volatile EVENACCESS OS_U16*) (SYSTEM_BASE_ADDR + 0x026))  /* System
 227:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define PLLCR                (*(volatile EVENACCESS OS_U16*) (SYSTEM_BASE_ADDR + 0x028))  /* PLL co
 228:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define PLLCR2               (*(volatile EVENACCESS OS_U8*)  (SYSTEM_BASE_ADDR + 0x02A))  /* PLL co
 229:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define BCKCR                (*(volatile EVENACCESS OS_U8*)  (SYSTEM_BASE_ADDR + 0x030))  /* Extern
 230:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define MOSCCR               (*(volatile EVENACCESS OS_U8*)  (SYSTEM_BASE_ADDR + 0x032))  /* Main c
 231:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define MOSCWTCR             (*(volatile EVENACCESS OS_U8*)  (SYSTEM_BASE_ADDR + 0x0A2))  /* Main c
 232:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define PLLWTCR              (*(volatile EVENACCESS OS_U8*)  (SYSTEM_BASE_ADDR + 0x0A6))  /* PLL wa
 233:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 234:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /****** Assign timer used for OS ************************************/
 235:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if defined(OS_SYSTIMER_TMR01_A)
 236:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 237:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_BASE_ADDR      	(0x00088200)
 238:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_TCR            	(*(volatile EVENACCESS OS_U8*) (SYS_TMR_BASE_ADDR + 0x00))
 239:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_TCORA          	(*(volatile EVENACCESS OS_U16*)(SYS_TMR_BASE_ADDR + 0x04))
 240:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_TCORB          	(*(volatile EVENACCESS OS_U16*)(SYS_TMR_BASE_ADDR + 0x06))
 241:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_TCNT           	(*(volatile EVENACCESS OS_U16*)(SYS_TMR_BASE_ADDR + 0x08))
 242:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR0_TCCR           (*(volatile EVENACCESS OS_U8*) (SYS_TMR_BASE_ADDR + 0x0A))
 243:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR1_TCCR           (*(volatile EVENACCESS OS_U8*) (SYS_TMR_BASE_ADDR + 0x0B))
 244:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_TCSTR          	(*(volatile EVENACCESS OS_U8*) (SYS_TMR_BASE_ADDR + 0x0C))
 245:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_MSTPCR         	(MSTPCRA)
 246:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_MSTPCR_BIT     	(5)
 247:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_VECT           	(174)
 248:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_IPR            	(IPR174)
 249:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_IER            	(IER15)
 250:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_IER_BIT        	(6)
 251:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_TIMER_INT_PRIO    	(0x01)     /* Lowest priority*/
 252:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_TIMER_VECT        	SYS_TMR_VECT
 253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SYS_TMR_MATCH_VAL		SYS_TMR_TCORA
 254:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else
 255:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	#error	"Unsupported system timer."
 256:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 257:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 258:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if defined(OS_SYSALARM_TMR01_B) /*|| defined(OS_SYSALARM_TMR01_A)*/
 259:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR_BASE_ADDR      		(0x00088200)
 260:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR_TCR            		(*(volatile EVENACCESS OS_U8*) (ALM_TMR_BASE_ADDR + 0x00))
 261:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR_TCORA          		(*(volatile EVENACCESS OS_U16*)(ALM_TMR_BASE_ADDR + 0x04))
 262:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR_TCORB          		(*(volatile EVENACCESS OS_U16*)(ALM_TMR_BASE_ADDR + 0x06))
 263:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR_TCNT           		(*(volatile EVENACCESS OS_U16*)(ALM_TMR_BASE_ADDR + 0x08))
 264:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR0_TCCR            	(*(volatile EVENACCESS OS_U8*) (ALM_TMR_BASE_ADDR + 0x0A))
 265:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR1_TCCR            	(*(volatile EVENACCESS OS_U8*) (ALM_TMR_BASE_ADDR + 0x0B))
 266:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define ALM_TMR_TCSTR          		(*(volatile EVENACCESS OS_U8*) (ALM_TMR_BASE_ADDR + 0x0C))
 267:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_HW_CNT           	ALM_TMR_TCNT
 268:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_HW_EN_CTRL			ALM_TMR_MSTPCR
 269:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_HW_EN_BIT			ALM_TMR_MSTPCR_BIT
 270:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_CNT_START			ALM_TMR_TCSTR
 271:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 272:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 273:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALM_TIMER_INT_PRIO		(0x01)
 274:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_PRIO_INT_REG     	(IPR175)
 275:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_MATCH_ICU       	(IER15)
 276:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_MATCH_ICU_MSK   	(1uL << 7)
 277:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALM_TIMER_PRESCALE   	(OS_PSSYS)
 278:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALM_TIMER_VECT       	(175)
 279:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALARM_HW_CNT_MATCH_VAL 	ALM_TMR_TCORB
 280:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 281:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_ALMCT_IR               	(*(OS_U8*)(IRR_BASE_ADDR + OS_ALM_TIMER_VECT))
 282:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else
 283:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	#error	"Unsupported option for system alarm."
 284:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 285:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 286:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 287:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_TIMER_RELOAD		((OS_PCLK_TIMER/OS_PSSYS)/OS_TICK_FREQ)
 288:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 289:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 290:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 291:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 292:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 293:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /****** UART ********************************************************/
 294:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if OS_UART_USED
 295:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 296:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define SCI0_BASE_ADDR       (0x0008A000)
 297:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 298:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define PWPR                 (*(volatile EVENACCESS OS_U8*)(0x0008C11F))
 299:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P20PFS               (*(volatile EVENACCESS OS_U8*)(0x0008C150))
 300:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P21PFS               (*(volatile EVENACCESS OS_U8*)(0x0008C151))
 301:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P15PFS               (*(volatile EVENACCESS OS_U8*)(0x0008C14D))
 302:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P16PFS               (*(volatile EVENACCESS OS_U8*)(0x0008C14E))
 303:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P26PFS               (*(volatile EVENACCESS OS_U8*)(0x0008C156))
 304:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P30PFS               (*(volatile EVENACCESS OS_U8*)(0x0008C158))
 305:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P2PMR                (*(volatile EVENACCESS OS_U8*)(0x0008C062))
 306:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define P3PMR                (*(volatile EVENACCESS OS_U8*)(0x0008C063))
 307:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 308:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if (OS_UART == 0)
 309:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_MSTPCR     (MSTPCRB)
 310:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_MSTPCR_BIT (31)
 311:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   
 312:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_BASE_ADDR  (SCI0_BASE_ADDR)
 313:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_IPR        (IPR214)
 314:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_IER_ER     (IER1A)
 315:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_IER_RX     (IER1A)
 316:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_IER_TX     (IER1B)
 317:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_IER_ER_BIT (6)
 318:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_IER_RX_BIT (7)
 319:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_IER_TX_BIT (0)
 320:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_ICR        (P2_ICR)
 321:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_ICR_BIT    (1)
 322:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 323:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_ERROR_VECT 214
 324:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_RX_VECT    215
 325:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #define OS_UART_TX_VECT    216
 326:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else
 327:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #error "Selected UART not supported, OS_UART_* definitions have to be modified."
 328:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif  
 329:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 330:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_INT_PRIO     (0x01)     /* Lowest priority*/
 331:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 332:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_SMR          (*(volatile EVENACCESS OS_U8*) (OS_UART_BASE_ADDR + 0x00))
 333:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_BRR          (*(volatile EVENACCESS OS_U8*) (OS_UART_BASE_ADDR + 0x01))
 334:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_SCR          (*(volatile EVENACCESS OS_U8*) (OS_UART_BASE_ADDR + 0x02))
 335:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_TDR          (*(volatile EVENACCESS OS_U8*) (OS_UART_BASE_ADDR + 0x03))
 336:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_SSR          (*(volatile EVENACCESS OS_U8*) (OS_UART_BASE_ADDR + 0x04))
 337:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_RDR          (*(volatile EVENACCESS OS_U8*) (OS_UART_BASE_ADDR + 0x05))
 338:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_UART_SCMR         (*(volatile EVENACCESS OS_U8*) (OS_UART_BASE_ADDR + 0x06))
 339:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 340:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define UART_ERR_PER_BIT     (3)
 341:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define UART_ERR_FER_BIT     (4)
 342:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define UART_ERR_ORER_BIT    (5)
 343:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define UART_ERR_PER_MASK    (1uL << UART_ERR_PER_BIT)
 344:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define UART_ERR_FER_MASK    (1uL << UART_ERR_FER_BIT)
 345:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define UART_ERR_ORER_MASK   (1uL << UART_ERR_ORER_BIT)
 346:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define UART_ERR_MASK_ALL    (UART_ERR_PER_MASK | UART_ERR_FER_MASK | UART_ERR_ORER_MASK)
 347:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif  /* OS_UART_USED*/
 348:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 349:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 350:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 351:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS_InitHW()
 352:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 353:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Initialize the hardware (timer) required for the OS to run.
 354:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       May be modified, if an other timer should be used
 355:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 356:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void OS_InitHW(void) {
  10                             		.loc 1 356 0
  11 0000 7E A7                   		push.l	r7
  12                             	.LCFI0:
 357:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_IncDI();
  13                             		.loc 1 357 0
  14 0002 05 00 00 00             		bsr	_OS_DisableInterrupt
  15 0006 FB 72 00 00 00 00       		mov.L	#_OS_Global, r7
  16 000c CD 7E 01                		mov.B	1[r7], r14
  17 000f 62 1E                   		add	#1, r14
  18 0011 C7 7E 01                		mov.B	r14, 1[r7]
 358:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   /*
 359:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Initialize timer for embOS, assuming PLL is already initialized
 360:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   */
 361:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 362:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if defined (OS_TICK_HANDLE_EX)
 363:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_TICK_Config(OS_TICK_MSEC, OS_TICK_RESOLUTION);
  19                             		.loc 1 363 0
  20 0014 66 A1                   		mov.L	#10, r1
  21 0016 66 12                   		mov.L	#1, r2
  22 0018 05 00 00 00             		bsr	_OS_TICK_Config
 364:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 365:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 366:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   PRCR = 0xA502;                                           		/* Protect off	- 210*/
  23                             		.loc 1 366 0
  24 001c FB 4E FE 03 08          		mov.L	#0x803fe, r4
  25 0021 F8 49 02 A5             		mov.W	#0xffffa502, [r4]
 367:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   /*PRCR = 0xA503;*/                                           /* Protect off	- 220*/
 368:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 369:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_MSTPCR &= ~(1uL << SYS_TMR_MSTPCR_BIT);              	/* Activate TMR01 unit*/
  26                             		.loc 1 369 0
  27 0025 FB 3E 10 00 08          		mov.L	#0x80010, r3
  28 002a EC 3E                   		mov.L	[r3], r14
  29 002c 7A 5E                   		bclr #5, r14
  30 002e E3 3E                   		mov.L	r14, [r3]
 370:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_TCSTR   = 0x00;                                    	/* Stop counter*/
  31                             		.loc 1 370 0
  32 0030 FB 3E 0C 82 08          		mov.L	#0x8820c, r3
  33 0035 3C 30 00                		mov.B	#0, [r3]
 371:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_TCNT    = 0x0;                                     	/* Set count value to 0*/
  34                             		.loc 1 371 0
  35 0038 FB EE 08 82 08          		mov.L	#0x88208, r14
  36 003d F8 E5 00                		mov.W	#0, [r14]
 372:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_TCR     = 0x40;                                    	/* Compare match interrupt enable*/
  37                             		.loc 1 372 0
  38 0040 FB EE 00 82 08          		mov.L	#0x88200, r14
  39 0045 F8 E4 40                		mov.B	#64, [r14]
 373:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_MATCH_VAL   = (OS_U16)OS_TIMER_RELOAD;              	/* Compare value for resolution (OS_
  40                             		.loc 1 373 0
  41 0048 FB EE 04 82 08          		mov.L	#0x88204, r14
  42 004d F8 E9 A8 61             		mov.W	#0x61a8, [r14]
 374:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR0_TCCR 	= 0x18|OS_SYSTEM_PS;                        /* Count on TMR1 overflow -> 16bit cas
  43                             		.loc 1 374 0
  44 0051 FB EE 0A 82 08          		mov.L	#0x8820a, r14
  45 0056 F8 E4 1A                		mov.B	#26, [r14]
 375:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR1_TCCR 	= 0x08|OS_SYSTEM_PS;                        /* Set Clock input, ps=8 (see TIMER_PR
  46                             		.loc 1 375 0
  47 0059 FB EE 0B 82 08          		mov.L	#0x8820b, r14
  48 005e F8 E4 0A                		mov.B	#10, [r14]
 376:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   /*
 377:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Enable TMR01 interrupt in interrupt controller
 378:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   */
 379:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_IPR  = OS_TIMER_INT_PRIO;                          	/* Set interrupt priority, lowest pri
  49                             		.loc 1 379 0
  50 0061 FB EE AE 73 08          		mov.L	#0x873ae, r14
  51 0066 F8 E4 01                		mov.B	#1, [r14]
 380:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_IER |= (1uL << SYS_TMR_IER_BIT);                     	/* Enable TMR01 compare interrupt*/
  52                             		.loc 1 380 0
  53 0069 FB EE 15 72 08          		mov.L	#0x87215, r14
  54 006e F0 E6                   		bset #6, [r14].B
 381:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   *(OS_U8*)(IRR_BASE_ADDR + OS_TIMER_VECT)  = 0;           		/* Clear interrupt request*/
  55                             		.loc 1 381 0
  56 0070 FB 2E AE 70 08          		mov.L	#0x870ae, r2
  57 0075 3C 20 00                		mov.B	#0, [r2]
 382:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 383:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	/*
 384:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	// Alarms cfg
 385:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	*/
 386:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_ALARM_HW_CNT_MATCH_VAL	=	(OS_U16)0;              	/* Compare value*/
  58                             		.loc 1 386 0
  59 0078 FB 2E 06 82 08          		mov.L	#0x88206, r2
  60 007d 3D 20 00                		mov.W	#0, [r2]
 387:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 388:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_ALARM_PRIO_INT_REG = OS_ALM_TIMER_INT_PRIO;
  61                             		.loc 1 388 0
  62 0080 FB 2E AF 73 08          		mov.L	#0x873af, r2
  63 0085 3C 20 01                		mov.B	#1, [r2]
 389:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_ALARM_MATCH_ICU |= OS_ALARM_MATCH_ICU_MSK;
  64                             		.loc 1 389 0
  65 0088 CC E2                   		mov.B	[r14], r2
  66 008a 75 32 80                		or	#0xffffff80, r2
  67 008d C3 E2                   		mov.B	r2, [r14]
 390:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_ALMCT_IR = 0;
  68                             		.loc 1 390 0
  69 008f FB EE AF 70 08          		mov.L	#0x870af, r14
  70 0094 F8 E4 00                		mov.B	#0, [r14]
 391:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 392:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   /*
 393:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Start timer
 394:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   */
 395:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_TCSTR 				= 0x01;						/* Start counter*/
  71                             		.loc 1 395 0
  72 0097 3C 30 01                		mov.B	#1, [r3]
 396:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 397:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   /*
 398:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Initialize the optional UART for OS viewer
 399:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   */
 400:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_COM_INIT();
 401:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   PRCR = 0xA500;                                           /* Protect on*/
  73                             		.loc 1 401 0
  74 009a F8 49 00 A5             		mov.W	#0xffffa500, [r4]
 402:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_DecRI();
  75                             		.loc 1 402 0
  76 009e CD 7E 01                		mov.B	1[r7], r14
  77 00a1 60 1E                   		sub	#1, r14
  78 00a3 C7 7E 01                		mov.B	r14, 1[r7]
  79 00a6 76 2E FF 00             		and #0xff, r14
  80 00aa 1F                      		bne	.L1
 403:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
  81                             		.loc 1 403 0 discriminator 1
  82 00ab 7E B7                   		pop	r7
 402:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_DecRI();
  83                             		.loc 1 402 0 discriminator 1
  84 00ad 04 00 00 00             		bra	_OS_EnableInterrupt
  85                             	.L1:
  86                             		.loc 1 403 0
  87 00b1 3F 77 01                		rtsd	#4, r7-r7
  88                             	.LFE0:
  90                             		.section	.text.OS_Idle,"ax",@progbits
  91                             		.global	_OS_Idle
  93                             	_OS_Idle:
  94                             	.LFB1:
 404:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 405:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 406:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 407:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS_Idle()
 408:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 409:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Please note:
 410:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       This is basically the "core" of the idle loop.
 411:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       This core loop can be changed, but:
 412:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       The idle loop does not have a stack of its own, therefore no
 413:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       functionality should be implemented that relies on the stack
 414:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       to be preserved. However, a simple program loop can be programmed
 415:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       (like toggeling an output or incrementing a counter)
 416:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 417:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void OS_Idle(void){ /* Idle loop: No task is ready to exec*/
  95                             		.loc 1 417 0
  96                             		.balign 2,3,3
  97                             	.L5:
  98 0000 2E 00                   		bra	.L5
  99                             	.LFE1:
 101                             		.section	.text._OS_SystemAlarmHandler,"ax",@progbits
 102                             		.global	__OS_SystemAlarmHandler
 104                             	__OS_SystemAlarmHandler:
 105                             	.LFB2:
 418:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	for (;;)
 419:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	{ /* Nothing to do ... wait for interrupt*/
 420:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if (DEBUG == 0)
 421:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 		WAIT_FOR_INTERRUPT(); /* Switch CPU into sleep mode*/
 422:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 423:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 424:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 		TRACE_CPU_IDLE_START();
 425:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	}
 426:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 427:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 428:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 429:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 430:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 431:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 432:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /**
 433:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** OS system alarm handler
 434:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 435:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __ICCRX__
 436:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma vector = (OS_ALM_TIMER_VECT)
 437:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static __interrupt void _OS_SystemAlarmHandler (void) {
 438:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #elif __RX
 439:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma interrupt (OS_ISR_Tick(vect=OS_ALM_TIMER_VECT))
 440:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void OS_ISR_Tick (void) {
 441:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #elif __GNUC__
 442:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void __attribute__ ((interrupt)) _OS_SystemAlarmHandler(void)
 443:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else
 444:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void _OS_SystemAlarmHandler(void)
 445:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 446:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** { 
 106                             		.loc 1 446 0
 107                             		; Note: Interrupt Handler
 108                             		.loc 1 446 0
 109 0000 6E 1F                   		pushm	r1-r15
 110                             	.LCFI1:
 447:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	OS_EnterInterrupt();
 111                             		.loc 1 447 0
 112 0002 05 00 00 00             		bsr	_OS_DisableInterrupt
 113                             	.LVL0:
 114 0006 FD 6A 07                		mvfc	psw, r7
 115 0009 79 07                   		bset #16, r7
 116 000b FD 68 70                		mvtc	r7, psw
 117 000e FB 72 00 00 00 00       		mov.L	#_OS_Global, r7
 118 0014 CC 7E                   		mov.B	[r7], r14
 119 0016 62 1E                   		add	#1, r14
 120 0018 C3 7E                   		mov.B	r14, [r7]
 121 001a CD 7E 01                		mov.B	1[r7], r14
 122 001d 62 1E                   		add	#1, r14
 123 001f C7 7E 01                		mov.B	r14, 1[r7]
 448:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	IRQ_MONITOR_ENTER();
 124                             		.loc 1 448 0
 125 0022 05 00 00 00             		bsr	_LIB_IRQMonitor_Enter
 126                             	.LVL1:
 449:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	OS_ALMCT_IR = 0;
 127                             		.loc 1 449 0
 128 0026 FB EE AF 70 08          		mov.L	#0x870af, r14
 129 002b F8 E4 00                		mov.B	#0, [r14]
 450:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	OS_ALARM_Handler();
 130                             		.loc 1 450 0
 131 002e 05 00 00 00             		bsr	_OS_ALARM_Handler
 132                             	.LVL2:
 451:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	IRQ_MONITOR_EXIT();
 133                             		.loc 1 451 0
 134 0032 05 00 00 00             		bsr	_LIB_IRQMonitor_Exit
 135                             	.LVL3:
 452:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	OS_LeaveInterrupt();
 136                             		.loc 1 452 0
 137 0036 CD 7E 01                		mov.B	1[r7], r14
 138 0039 60 1E                   		sub	#1, r14
 139 003b C7 7E 01                		mov.B	r14, 1[r7]
 140 003e CC 7E                   		mov.B	[r7], r14
 141 0040 5B E3                   		movu.B	r14, r3
 142 0042 EF 74                   		mov.L	r7, r4
 143 0044 61 13                   		cmp	#1, r3
 144 0046 21 0C                   		bne	.L7
 145                             		.loc 1 452 0 is_stmt 0 discriminator 1
 146 0048 A8 7F                   		mov.L	4[r7], r7
 147 004a 61 07                   		cmp	#0, r7
 148 004c 16                      		beq	.L7
 149                             		.loc 1 452 0 discriminator 3
 150 004d 05 00 00 00             		bsr	_OS_SwitchFromInt
 151                             	.LVL4:
 152 0051 0D                      		bra	.L6
 153                             	.L7:
 154                             		.loc 1 452 0 discriminator 2
 155 0052 60 1E                   		sub	#1, r14
 156 0054 C3 4E                   		mov.B	r14, [r4]
 157                             		.balign 2,3,1
 158                             	.L6:
 453:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 159                             		.loc 1 453 0 is_stmt 1
 160 0056 6F 1F                   		popm	r1-r15
 161 0058 7F 95                   		rte
 162                             	.LFE2:
 164                             		.section	.text.OS_GetHwTime,"ax",@progbits
 165                             		.global	_OS_GetHwTime
 167                             	_OS_GetHwTime:
 168                             	.LFB3:
 454:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 455:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /**
 456:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** \retval system alarm hw counter value
 457:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 458:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** OS_ALARM_TICK OS_GetHwTime(void)
 459:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** {
 169                             		.loc 1 459 0
 460:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	return OS_ALARM_HW_CNT;
 170                             		.loc 1 460 0
 171 0000 FB EE 08 82 08          		mov.L	#0x88208, r14
 461:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 172                             		.loc 1 461 0
 173 0005 5C E1                   		movu.W	[r14], r1
 174 0007 02                      		rts
 175                             	.LFE3:
 177                             		.section	.text.OS_GetHwLastTime,"ax",@progbits
 178                             		.global	_OS_GetHwLastTime
 180                             	_OS_GetHwLastTime:
 181                             	.LFB4:
 462:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 463:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /**
 464:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** \retval last system alarm target value
 465:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 466:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** OS_ALARM_TICK OS_GetHwLastTime(void)
 467:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** {
 182                             		.loc 1 467 0
 468:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	return OS_ALARM_HW_CNT_MATCH_VAL;
 183                             		.loc 1 468 0
 184 0000 FB EE 06 82 08          		mov.L	#0x88206, r14
 469:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 185                             		.loc 1 469 0
 186 0005 5C E1                   		movu.W	[r14], r1
 187 0007 02                      		rts
 188                             	.LFE4:
 190                             		.section	.text.OS_AlarmRaised,"ax",@progbits
 191                             		.global	_OS_AlarmRaised
 193                             	_OS_AlarmRaised:
 194                             	.LFB5:
 470:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 471:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /**
 472:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** \retval if system alarm is just raised
 473:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 474:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** int OS_AlarmRaised(void)
 475:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** {
 195                             		.loc 1 475 0
 476:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   return (OS_ALMCT_IR != 0);
 196                             		.loc 1 476 0
 197 0000 FB EE AF 70 08          		mov.L	#0x870af, r14
 198 0005 58 E1                   		movu.B	[r14], r1
 477:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 199                             		.loc 1 477 0
 200 0007 61 01                   		cmp	#0, r1
 201 0009 FC DB 11                		scne.L	r1
 202 000c 02                      		rts
 203                             	.LFE5:
 205                             		.section	.text.OS_DisableAlarms,"ax",@progbits
 206                             		.global	_OS_DisableAlarms
 208                             	_OS_DisableAlarms:
 209                             	.LFB6:
 478:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 479:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 480:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /**
 481:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** Disables all alarms
 482:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 483:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void OS_DisableAlarms(void)
 484:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** {
 210                             		.loc 1 484 0
 485:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	ALM_TMR_TCR  &= ~0x80;                               /* Compare match A interrupt disabled*/
 211                             		.loc 1 485 0
 212 0000 FB EE 00 82 08          		mov.L	#0x88200, r14
 213 0005 CC E4                   		mov.B	[r14], r4
 214 0007 75 24 7F                		and #0x7f, r4
 215 000a C3 E4                   		mov.B	r4, [r14]
 216 000c 02                      		rts
 217                             	.LFE6:
 219                             		.section	.text.OS_AlarmCounterArm,"ax",@progbits
 220                             		.global	_OS_AlarmCounterArm
 222                             	_OS_AlarmCounterArm:
 223                             	.LFB7:
 486:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 487:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 488:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /**
 489:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** Arms system alarm
 490:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 491:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void OS_AlarmCounterArm(OS_ALARM_TICK Tick)
 492:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** {
 224                             		.loc 1 492 0
 225                             	.LVL5:
 493:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	OS_ALMCT_IR = 0;  /* Reset compare interrupt request flag*/
 226                             		.loc 1 493 0
 227 0000 FB EE AF 70 08          		mov.L	#0x870af, r14
 228 0005 F8 E4 00                		mov.B	#0, [r14]
 494:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	OS_ALARM_HW_CNT_MATCH_VAL = Tick;
 229                             		.loc 1 494 0
 230 0008 FB EE 06 82 08          		mov.L	#0x88206, r14
 231 000d D3 E1                   		mov.W	r1, [r14]
 495:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	ALM_TMR_TCR  |= 0x80;
 232                             		.loc 1 495 0
 233 000f FB EE 00 82 08          		mov.L	#0x88200, r14
 234 0014 CC E4                   		mov.B	[r14], r4
 235 0016 75 34 80                		or	#0xffffff80, r4
 236 0019 C3 E4                   		mov.B	r4, [r14]
 237 001b 02                      		rts
 238                             	.LFE7:
 240                             		.section	.text.OS_GetTime_Cycles,"ax",@progbits
 241                             		.global	_OS_GetTime_Cycles
 243                             	_OS_GetTime_Cycles:
 244                             	.LFB8:
 496:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 497:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 498:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 499:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 500:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 501:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 502:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 503:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS_GetTime_Cycles()
 504:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 505:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       This routine is required for task-info via OSView or high
 506:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       resolution time measurement functions.
 507:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       It returns the system time in timer clock cycles.
 508:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 509:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** OS_U32 OS_GetTime_Cycles(void) {
 245                             		.loc 1 509 0
 510:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_U32 Time;
 511:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_U16 Cnt;
 512:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 513:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   Time = OS_GetTime32();
 246                             		.loc 1 513 0
 247 0000 FB E2 00 00 00 00       		mov.L	#_OS_Global, r14
 248 0006 ED EE 0A                		mov.L	40[r14], r14
 249                             	.LVL6:
 514:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   Cnt  = SYS_TMR_TCNT;
 250                             		.loc 1 514 0
 251 0009 FB 3E 08 82 08          		mov.L	#0x88208, r3
 252 000e DC 34                   		mov.W	[r3], r4
 253                             	.LVL7:
 515:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 516:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   if (*(volatile EVENACCESS OS_U8*)(IRR_BASE_ADDR + OS_TIMER_VECT) != 0) {  /* Adjust result*/
 254                             		.loc 1 516 0
 255 0010 FB 2E AE 70 08          		mov.L	#0x870ae, r2
 256 0015 58 22                   		movu.B	[r2], r2
 257 0017 61 02                   		cmp	#0, r2
 258 0019 16                      		beq	.L19
 517:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****       Cnt = SYS_TMR_TCNT;
 259                             		.loc 1 517 0
 260 001a DC 34                   		mov.W	[r3], r4
 261                             	.LVL8:
 518:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****       Time++;
 262                             		.loc 1 518 0
 263 001c 62 1E                   		add	#1, r14
 264                             	.LVL9:
 265 001e 0E                      		bra	.L20
 266                             	.L19:
 519:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     }
 520:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     else
 521:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     {
 522:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****       Cnt += OS_TIMER_RELOAD;
 267                             		.loc 1 522 0
 268 001f 72 44 A8 61             		add	#0x61a8, r4
 269                             	.LVL10:
 270 0023 03                      		.balign 2,3,4
 271                             	.L20:
 523:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     }
 524:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     Cnt-=SYS_TMR_MATCH_VAL;
 272                             		.loc 1 524 0
 273 0024 FB 3E 04 82 08          		mov.L	#0x88204, r3
 274 0029 06 40 34                		sub	[r3].W, r4
 275                             	.LVL11:
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****     return ((OS_TIMER_RELOAD*OS_TICK_RESOLUTION/OS_TICK_MSEC) * Time)+ Cnt;
 276                             		.loc 1 525 0
 277 002c 5F 41                   		movu.W	r4, r1
 278 002e 76 1E C4 09             		mul	#0x9c4, r14
 279                             	.LVL12:
 526:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 280                             		.loc 1 526 0
 281 0032 4B E1                   		add	r14, r1
 282 0034 02                      		rts
 283                             	.LFE8:
 285 0035 03                      		.section	.text.OS_ConvertCycles2us,"ax",@progbits
 286                             		.global	_OS_ConvertCycles2us
 288                             	_OS_ConvertCycles2us:
 289                             	.LFB9:
 527:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 529:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 530:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS_ConvertCycles2us()
 531:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 532:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Convert Cycles into micro seconds.
 533:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 534:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       If your clock frequency is not a multiple of 1 MHz,
 535:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       you may have to modify this routine in order to get proper
 536:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       diagnostics.
 537:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 538:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       This routine is required for profiling or high resolution time
 539:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       measurement only. It does not affect operation of the OS.
 540:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 541:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** OS_U32 OS_ConvertCycles2us(OS_U32 Cycles) {
 290                             		.loc 1 541 0
 291                             	.LVL13:
 542:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   return (Cycles * OS_PSSYS * 1000)/(OS_PCLK_TIMER/1000);
 292                             		.loc 1 542 0
 293 0000 76 11 40 1F             		mul	#0x1f40, r1
 294                             	.LVL14:
 543:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 295                             		.loc 1 543 0
 296 0004 FD 78 91 20 4E          		divu	#0x4e20, r1
 297 0009 02                      		rts
 298                             	.LFE9:
 300                             		.section	.text.OS_Convert_us2Cycles,"ax",@progbits
 301                             		.global	_OS_Convert_us2Cycles
 303                             	_OS_Convert_us2Cycles:
 304                             	.LFB10:
 544:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 545:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** OS_U32 OS_Convert_us2Cycles(OS_U32 us) {
 305                             		.loc 1 545 0
 306                             	.LVL15:
 546:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	return (us * (OS_PCLK_TIMER / 1000))/(OS_PSSYS * 1000);
 307                             		.loc 1 546 0
 308 0000 76 11 20 4E             		mul	#0x4e20, r1
 309                             	.LVL16:
 547:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 310                             		.loc 1 547 0
 311 0004 FD 78 91 40 1F          		divu	#0x1f40, r1
 312 0009 02                      		rts
 313                             	.LFE10:
 315                             		.section	.text.OS_ISR_Tick,"ax",@progbits
 316                             		.global	_OS_ISR_Tick
 318                             	_OS_ISR_Tick:
 319                             	.LFB11:
 548:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 549:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 550:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS_ISR_Tick()
 551:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       The OS system timer interrupt
 552:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 553:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __ICCRX__
 554:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma vector = (OS_TIMER_VECT)
 555:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static __interrupt void OS_ISR_Tick (void) {
 556:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #elif __RX
 557:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma interrupt (OS_ISR_Tick(vect=OS_TIMER_VECT))
 558:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void OS_ISR_Tick (void) {
 559:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #elif __GNUC__
 560:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void OS_ISR_Tick(void) __attribute__ ((interrupt));
 561:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 562:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void __attribute__ ((interrupt)) OS_ISR_Tick (void) {
 320                             		.loc 1 562 0
 321                             		; Note: Interrupt Handler
 322 0000 6E 1F                   		pushm	r1-r15
 323                             	.LCFI2:
 563:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else
 564:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void OS_ISR_Tick (void) {
 565:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 566:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_EnterInterrupt();
 324                             		.loc 1 566 0
 325 0002 05 00 00 00             		bsr	_OS_DisableInterrupt
 326                             	.LVL17:
 327 0006 FD 6A 07                		mvfc	psw, r7
 328 0009 79 07                   		bset #16, r7
 329 000b FD 68 70                		mvtc	r7, psw
 330 000e FB 72 00 00 00 00       		mov.L	#_OS_Global, r7
 331 0014 CC 7E                   		mov.B	[r7], r14
 332 0016 62 1E                   		add	#1, r14
 333 0018 C3 7E                   		mov.B	r14, [r7]
 334 001a CD 7E 01                		mov.B	1[r7], r14
 335 001d 62 1E                   		add	#1, r14
 336 001f C7 7E 01                		mov.B	r14, 1[r7]
 567:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   IRQ_MONITOR_ENTER();
 337                             		.loc 1 567 0
 338 0022 05 00 00 00             		bsr	_LIB_IRQMonitor_Enter
 339                             	.LVL18:
 568:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 569:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   SYS_TMR_MATCH_VAL += OS_TIMER_RELOAD;
 340                             		.loc 1 569 0
 341 0026 FB EE 04 82 08          		mov.L	#0x88204, r14
 342 002b DC E4                   		mov.W	[r14], r4
 343 002d 72 44 A8 61             		add	#0x61a8, r4
 344 0031 D3 E4                   		mov.W	r4, [r14]
 570:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   *(OS_U8*)(IRR_BASE_ADDR + OS_TIMER_VECT) = 0;            /* Clear interrupt request*/
 345                             		.loc 1 570 0
 346 0033 FB EE AE 70 08          		mov.L	#0x870ae, r14
 347 0038 F8 E4 00                		mov.B	#0, [r14]
 571:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 	
 572:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if defined (OS_TICK_HANDLE_EX)
 573:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_HandleTickEx();
 348                             		.loc 1 573 0
 349 003b 05 00 00 00             		bsr	_OS_TICK_HandleEx
 350                             	.LVL19:
 574:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else
 575:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_HandleTick();
 576:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 577:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   IRQ_MONITOR_EXIT();
 351                             		.loc 1 577 0
 352 003f 05 00 00 00             		bsr	_LIB_IRQMonitor_Exit
 353                             	.LVL20:
 578:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_LeaveInterrupt();
 354                             		.loc 1 578 0
 355 0043 CD 7E 01                		mov.B	1[r7], r14
 356 0046 60 1E                   		sub	#1, r14
 357 0048 C7 7E 01                		mov.B	r14, 1[r7]
 358 004b CC 7E                   		mov.B	[r7], r14
 359 004d 5B E3                   		movu.B	r14, r3
 360 004f EF 74                   		mov.L	r7, r4
 361 0051 61 13                   		cmp	#1, r3
 362 0053 21 0C                   		bne	.L24
 363                             		.loc 1 578 0 is_stmt 0 discriminator 1
 364 0055 A8 7F                   		mov.L	4[r7], r7
 365 0057 61 07                   		cmp	#0, r7
 366 0059 16                      		beq	.L24
 367                             		.loc 1 578 0 discriminator 3
 368 005a 05 00 00 00             		bsr	_OS_SwitchFromInt
 369                             	.LVL21:
 370 005e 0E                      		bra	.L23
 371                             	.L24:
 372                             		.loc 1 578 0 discriminator 2
 373 005f 60 1E                   		sub	#1, r14
 374 0061 C3 4E                   		mov.B	r14, [r4]
 375 0063 03                      		.balign 2,3,1
 376                             	.L23:
 579:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 377                             		.loc 1 579 0 is_stmt 1
 378 0064 6F 1F                   		popm	r1-r15
 379 0066 7F 95                   		rte
 380                             	.LFE11:
 382                             		.section	.text.OS_COM_Send1,"ax",@progbits
 383                             		.global	_OS_COM_Send1
 385                             	_OS_COM_Send1:
 386                             	.LFB12:
 580:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 581:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 582:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 583:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *   Communication for embOSView
 584:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 585:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** **********************************************************************
 586:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 587:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #if OS_UART_USED
 588:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #define OS_BAUDDIVIDE ((OS_PCLK_UART+(OS_BAUDRATE*16L))/(OS_BAUDRATE*32L))-1
 589:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** //#define OS_BAUDDIVIDE ( ((OS_PCLK_UART / OS_BAUDRATE) / 32u) - 1)
 590:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 591:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 592:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS_COM_Init()
 593:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Initialize UART 1
 594:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 595:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void OS_COM_Init(void) {
 596:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   volatile int i;
 597:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 598:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Enable UART Module
 599:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 600:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_MSTPCR &= ~(1uL << OS_UART_MSTPCR_BIT);
 601:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 602:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Set uart port pins
 603:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 604:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   PWPR   = 0x00;  // Disable write protect
 605:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   PWPR   = 0x40;  // Enable write access
 606:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   P20PFS = 0x0A;  // Set pin function register to uart function
 607:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   P21PFS = 0x0A;  // Set pin function register to uart function
 608:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****  /*2Z0 
 609:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   P26PFS = 0x0A;
 610:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   P30PFS = 0x0A;*/
 611:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   PWPR   = 0x80;  // Enable write protect
 612:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   P2PMR  = 0x03;  // Set pin to peripheral function
 613:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*
 614:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   P2PMR  = 0x40;  // Set pin to peripheral function
 615:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   P3PMR  = 0x01;  // Set pin to peripheral function
 616:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 617:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 618:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Reset, disable Reception and transmission
 619:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 620:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_SCR = 0;
 621:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 622:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Set transmission mode to 8N1, use PCLK
 623:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 624:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_SMR = 0
 625:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 7)
 626:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 6)
 627:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 5)
 628:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 4)
 629:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 3)
 630:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 2)
 631:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 1)
 632:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****               | (0 << 0);
 633:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 634:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Set transfer direction, LSB first
 635:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 636:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_SCMR = 0x00;
 637:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 638:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Set baudrate
 639:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 640:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_BRR = OS_BAUDDIVIDE;
 641:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 642:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Wait for SCI Settling time (1 bit cycle)
 643:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 644:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   for(i = 0; i < 3000 ; i++);
 645:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 646:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Clear status
 647:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 648:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_SSR = 0x00;
 649:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 650:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Setup interrupt control register for UART
 651:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 652:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_IPR = OS_UART_INT_PRIO;     // Lowest priority
 653:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 654:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Enable UART interrupts
 655:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 656:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_IER_ER    |= (1uL << OS_UART_IER_ER_BIT);     // Enable Rx error interrupt
 657:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_IER_RX    |= (1uL << OS_UART_IER_RX_BIT);     // Enable Rx interrupt
 658:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_IER_TX    |= (1uL << OS_UART_IER_TX_BIT);     // Enable Tx empty interrupt
 659:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 660:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Clear interrupt request flags
 661:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 662:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   *(OS_U8*)(IRR_BASE_ADDR + OS_UART_ERROR_VECT) = 0;
 663:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   *(OS_U8*)(IRR_BASE_ADDR + OS_UART_RX_VECT)    = 0;
 664:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   *(OS_U8*)(IRR_BASE_ADDR + OS_UART_TX_VECT)    = 0;
 665:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 666:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Finally enable Rx and Tx interrupts and enable uart Rx and Tx
 667:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 668:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_SCR |= (1uL << 7)       // Tx interrupt enable
 669:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****                | (1uL << 6);      // Rx interrupt enable
 670:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_SCR |= (1uL << 5)       // Tx enable
 671:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****                | (1uL << 4);      // Rx enable
 672:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 673:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 674:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 675:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 676:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       OS_COM_Send1()
 677:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Send one character via UART.
 678:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Never call this function from your application
 679:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 680:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void OS_COM_Send1(OS_U8 c) {
 681:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_TDR = c;
 682:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 683:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 684:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 685:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 686:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       _OS_ISR_RxErr()
 687:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Interrupt handler for UART reception error
 688:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 689:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __ICCRX__
 690:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma vector = (OS_UART_ERROR_VECT)  // RxError interrupt
 691:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static __interrupt void _OS_ISR_RxErr (void) {
 692:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 693:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __RX
 694:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma interrupt (_OS_ISR_RxErr(vect=OS_UART_ERROR_VECT))  // RxError interrupt
 695:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static void _OS_ISR_RxErr (void) {
 696:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 697:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __GNUC__
 698:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void __attribute__ ((interrupt)) OS_ISR_RxErr (void) {
 699:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 700:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_U8 Error;
 701:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 702:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_EnterNestableInterrupt();
 703:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 704:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   // Reset Error flags
 705:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   //
 706:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   Error       = OS_UART_SSR;            // Get current error state
 707:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   Error      &= ~(UART_ERR_MASK_ALL);   // Clear all errors
 708:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_UART_SSR = Error;                  // Reset errors
 709:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   Error       = OS_UART_SSR;            // Dummy read, required according to hardware manual
 710:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_LeaveNestableInterrupt();
 711:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 712:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 713:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 714:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 715:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       _OS_ISR_Rx()
 716:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Interrupt handler for UART reception
 717:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 718:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __ICCRX__
 719:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma vector = (OS_UART_RX_VECT) // Rx data interrupt
 720:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static __interrupt void _OS_ISR_Rx (void) {
 721:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 722:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __RX
 723:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma interrupt (_OS_ISR_Rx(vect=OS_UART_RX_VECT)) // Rx data interrupt
 724:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static void _OS_ISR_Rx (void) {
 725:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 726:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __GNUC__
 727:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void __attribute__ ((interrupt)) OS_ISR_Rx (void) {
 728:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 729:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_U8 Data;
 730:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 731:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_EnterNestableInterrupt();  //  We will enable interrupts
 732:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   Data = OS_UART_RDR;
 733:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_OnRx(Data);
 734:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_LeaveNestableInterrupt();
 735:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 736:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 737:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 738:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 739:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       _OS_ISR_Tx()
 740:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Interrupt handler for UART transmission
 741:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 742:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __ICCRX__
 743:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma vector = (OS_UART_TX_VECT)  // TX data empty interrupt
 744:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static __interrupt void _OS_ISR_Tx (void) {
 745:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 746:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __RX
 747:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   #pragma interrupt (_OS_ISR_Tx(vect=OS_UART_TX_VECT))  // TX data empty interrupt
 748:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   static void _OS_ISR_Tx (void) {
 749:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 750:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #ifdef __GNUC__
 751:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   void __attribute__ ((interrupt)) OS_ISR_Tx (void) {
 752:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 753:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_EnterNestableInterrupt();
 754:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_OnTx();
 755:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_LeaveNestableInterrupt();
 756:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 757:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 758:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #else  /* UART for communication not used, define dummy functions */
 759:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 760:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void OS_COM_Send1(OS_U8 c) {
 387                             		.loc 1 760 0
 388                             	.LVL22:
 761:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_USEPARA(c);           /* Avoid compiler warning */
 762:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c ****   OS_COM_ClearTxActive();  /* Let the OS know that Tx is not busy */
 389                             		.loc 1 762 0
 390 0000 04 00 00 00             		bra	_OS_COM_ClearTxActive
 391                             	.LVL23:
 392                             	.LFE12:
 394                             		.section	.text.HardwareSetup,"ax",@progbits
 395                             		.global	_HardwareSetup
 397                             	_HardwareSetup:
 398                             	.LFB13:
 763:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** }
 764:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** #endif
 765:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** 
 766:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** /*********************************************************************
 767:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 768:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       HardwareSetup()
 769:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 770:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Initialize clock generation and pll
 771:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 772:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Has to be modified, if another CPU clock frequency should be
 773:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       used. This function is called during startup and
 774:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       has to return 1 to perform segment initialization.
 775:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 776:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       Because variables are not initialized before __low_level_init() is called,
 777:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       no access or call which relies on any variable can be used here.
 778:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *
 779:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** *       This function is called from HEW startup code.
 780:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** */
 781:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void HardwareSetup(void);
 782:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/EmbOS\RTOSInit_RX200.c **** void HardwareSetup(void) {
 399                             		.loc 1 782 0
 400 0000 02                      		rts
 401                             	.LFE13:
 403                             		.global	__IDCode3
 404                             		.section	.idcode,"a",@progbits
 405                             		.balign 4
 408                             	__IDCode3:
 409 0000 FF FF FF FF             		.long	-1
 410                             		.global	__IDCode2
 411                             		.balign 4
 414                             	__IDCode2:
 415 0004 FF FF FF FF             		.long	-1
 416                             		.global	__IDCode1
 417                             		.balign 4
 420                             	__IDCode1:
 421 0008 FF FF FF FF             		.long	-1
 422                             		.global	__IDCode0
 423                             		.balign 4
 426                             	__IDCode0:
 427 000c FF FF FF FF             		.long	-1
 428                             		.global	__OFS0
 429                             		.section	.options,"a",@progbits
 430                             		.balign 4
 433                             	__OFS0:
 434 0000 FF FF FF FF             		.long	-1
 435                             		.global	__OFS1
 436                             		.balign 4
 439                             	__OFS1:
 440 0004 FF FF FF FF             		.long	-1
 441                             		.global	__Dummy
 442                             		.balign 4
 445                             	__Dummy:
 446 0008 FF FF FF FF             		.long	-1
 447                             		.global	__MDEreg
 448                             		.balign 4
 451                             	__MDEreg:
 452 000c FF FF FF F8             		.long	-8
 657                             	.Letext0:
 658                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\OS\\EmbOS\\RX200_GNU\\V388\\Inc/RTOS.h"
 659                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_SecurityCheck/LIB_TaskMon
DEFINED SYMBOLS
                            *ABS*:00000000 RTOSInit_RX200.c
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:7      .text.OS_InitHW:00000000 _OS_InitHW
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:11     .text.OS_InitHW:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:93     .text.OS_Idle:00000000 _OS_Idle
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:98     .text.OS_Idle:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:104    .text._OS_SystemAlarmHandler:00000000 __OS_SystemAlarmHandler
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:109    .text._OS_SystemAlarmHandler:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:167    .text.OS_GetHwTime:00000000 _OS_GetHwTime
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:171    .text.OS_GetHwTime:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:180    .text.OS_GetHwLastTime:00000000 _OS_GetHwLastTime
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:184    .text.OS_GetHwLastTime:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:193    .text.OS_AlarmRaised:00000000 _OS_AlarmRaised
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:197    .text.OS_AlarmRaised:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:208    .text.OS_DisableAlarms:00000000 _OS_DisableAlarms
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:212    .text.OS_DisableAlarms:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:222    .text.OS_AlarmCounterArm:00000000 _OS_AlarmCounterArm
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:227    .text.OS_AlarmCounterArm:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:243    .text.OS_GetTime_Cycles:00000000 _OS_GetTime_Cycles
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:247    .text.OS_GetTime_Cycles:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:288    .text.OS_ConvertCycles2us:00000000 _OS_ConvertCycles2us
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:293    .text.OS_ConvertCycles2us:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:303    .text.OS_Convert_us2Cycles:00000000 _OS_Convert_us2Cycles
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:308    .text.OS_Convert_us2Cycles:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:318    .text.OS_ISR_Tick:00000000 _OS_ISR_Tick
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:322    .text.OS_ISR_Tick:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:385    .text.OS_COM_Send1:00000000 _OS_COM_Send1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:390    .text.OS_COM_Send1:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:397    .text.HardwareSetup:00000000 _HardwareSetup
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:400    .text.HardwareSetup:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:408    .idcode:00000000 __IDCode3
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:414    .idcode:00000004 __IDCode2
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:420    .idcode:00000008 __IDCode1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:426    .idcode:0000000c __IDCode0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:433    .options:00000000 __OFS0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:439    .options:00000004 __OFS1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:445    .options:00000008 __Dummy
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:451    .options:0000000c __MDEreg
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:454    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:8      .text.OS_InitHW:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:94     .text.OS_Idle:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:105    .text._OS_SystemAlarmHandler:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:168    .text.OS_GetHwTime:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:181    .text.OS_GetHwLastTime:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:194    .text.OS_AlarmRaised:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:209    .text.OS_DisableAlarms:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:223    .text.OS_AlarmCounterArm:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:244    .text.OS_GetTime_Cycles:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:289    .text.OS_ConvertCycles2us:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:304    .text.OS_Convert_us2Cycles:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:319    .text.OS_ISR_Tick:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:386    .text.OS_COM_Send1:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:398    .text.HardwareSetup:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:1858   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2683   .debug_str:000001a9 .LASF98
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2667   .debug_str:00000111 .LASF99
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2589   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2621   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2689   .debug_str:000001ea .LASF0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2813   .debug_str:000004b5 .LASF1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2691   .debug_str:000001f7 .LASF2
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2669   .debug_str:0000015c .LASF3
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2785   .debug_str:00000419 .LASF4
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2623   .debug_str:00000000 .LASF5
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2751   .debug_str:0000035e .LASF6
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2761   .debug_str:000003a1 .LASF7
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2797   .debug_str:0000045e .LASF21
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2627   .debug_str:00000018 .LASF8
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2711   .debug_str:0000027f .LASF9
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2637   .debug_str:00000050 .LASF10
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2677   .debug_str:0000018f .LASF11
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2639   .debug_str:0000005a .LASF12
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2795   .debug_str:00000455 .LASF13
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2777   .debug_str:000003f9 .LASF14
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2687   .debug_str:000001e0 .LASF15
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2791   .debug_str:0000043d .LASF16
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2821   .debug_str:000004d9 .LASF17
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2743   .debug_str:00000333 .LASF18
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2729   .debug_str:000002e8 .LASF19
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2779   .debug_str:00000400 .LASF20
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2701   .debug_str:0000023c .LASF22
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2811   .debug_str:000004af .LASF23
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2747   .debug_str:0000034b .LASF24
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2705   .debug_str:00000263 .LASF25
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2755   .debug_str:00000377 .LASF26
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2625   .debug_str:00000005 .LASF27
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2633   .debug_str:0000003a .LASF28
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2745   .debug_str:0000033d .LASF29
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2719   .debug_str:000002be .LASF30
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2699   .debug_str:0000022b .LASF31
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2675   .debug_str:00000187 .LASF32
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2757   .debug_str:00000383 .LASF33
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2695   .debug_str:0000021d .LASF34
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2767   .debug_str:000003ba .LASF35
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2655   .debug_str:000000d5 .LASF36
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2697   .debug_str:00000224 .LASF37
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2789   .debug_str:0000042f .LASF38
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2721   .debug_str:000002c8 .LASF39
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2771   .debug_str:000003d5 .LASF40
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2815   .debug_str:000004be .LASF41
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2631   .debug_str:00000029 .LASF42
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2645   .debug_str:0000008b .LASF43
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2727   .debug_str:000002e1 .LASF44
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2635   .debug_str:00000046 .LASF45
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2673   .debug_str:00000170 .LASF46
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2765   .debug_str:000003b5 .LASF47
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2809   .debug_str:000004a6 .LASF48
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2807   .debug_str:0000049d .LASF49
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2679   .debug_str:00000197 .LASF50
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2653   .debug_str:000000ce .LASF51
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2671   .debug_str:00000169 .LASF52
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2805   .debug_str:00000496 .LASF53
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2659   .debug_str:000000f5 .LASF54
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2707   .debug_str:00000269 .LASF55
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2629   .debug_str:0000001e .LASF56
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2819   .debug_str:000004ce .LASF57
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2799   .debug_str:0000046d .LASF58
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2665   .debug_str:0000010c .LASF59
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2647   .debug_str:000000a9 .LASF60
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2663   .debug_str:00000103 .LASF61
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2703   .debug_str:00000250 .LASF62
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2749   .debug_str:00000354 .LASF63
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2643   .debug_str:00000074 .LASF64
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2649   .debug_str:000000b4 .LASF65
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2651   .debug_str:000000c2 .LASF66
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2803   .debug_str:0000048d .LASF67
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2709   .debug_str:00000275 .LASF100
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:88     .text.OS_InitHW:000000b4 .LFE0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2455   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2817   .debug_str:000004c6 .LASF71
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:99     .text.OS_Idle:00000002 .LFE1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2713   .debug_str:00000286 .LASF73
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:162    .text._OS_SystemAlarmHandler:0000005a .LFE2
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2468   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:113    .text._OS_SystemAlarmHandler:00000006 .LVL0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:126    .text._OS_SystemAlarmHandler:00000026 .LVL1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:132    .text._OS_SystemAlarmHandler:00000032 .LVL2
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:135    .text._OS_SystemAlarmHandler:00000036 .LVL3
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:151    .text._OS_SystemAlarmHandler:00000051 .LVL4
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2681   .debug_str:0000019c .LASF68
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:175    .text.OS_GetHwTime:00000008 .LFE3
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2773   .debug_str:000003da .LASF69
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:188    .text.OS_GetHwLastTime:00000008 .LFE4
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2717   .debug_str:000002af .LASF70
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:203    .text.OS_AlarmRaised:0000000d .LFE5
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2753   .debug_str:00000366 .LASF72
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:217    .text.OS_DisableAlarms:0000000d .LFE6
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2793   .debug_str:00000442 .LASF74
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:238    .text.OS_AlarmCounterArm:0000001c .LFE7
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2725   .debug_str:000002dc .LASF77
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2715   .debug_str:0000029d .LASF75
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:283    .text.OS_GetTime_Cycles:00000035 .LFE8
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2481   .debug_loc:00000041 .LLST2
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2488   .debug_loc:00000054 .LLST3
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2769   .debug_str:000003c1 .LASF76
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:298    .text.OS_ConvertCycles2us:0000000a .LFE9
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2731   .debug_str:000002f7 .LASF78
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2495   .debug_loc:00000067 .LLST4
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2801   .debug_str:00000478 .LASF79
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:313    .text.OS_Convert_us2Cycles:0000000a .LFE10
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2509   .debug_loc:00000088 .LLST5
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2763   .debug_str:000003a9 .LASF80
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:380    .text.OS_ISR_Tick:00000068 .LFE11
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2523   .debug_loc:000000a9 .LLST6
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:326    .text.OS_ISR_Tick:00000006 .LVL17
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:339    .text.OS_ISR_Tick:00000026 .LVL18
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:350    .text.OS_ISR_Tick:0000003f .LVL19
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:353    .text.OS_ISR_Tick:00000043 .LVL20
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:369    .text.OS_ISR_Tick:0000005e .LVL21
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2823   .debug_str:000004e3 .LASF81
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:392    .text.OS_COM_Send1:00000004 .LFE12
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2536   .debug_loc:000000ca .LLST7
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:391    .text.OS_COM_Send1:00000004 .LVL23
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2775   .debug_str:000003eb .LASF82
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:401    .text.HardwareSetup:00000001 .LFE13
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2787   .debug_str:00000425 .LASF83
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2661   .debug_str:000000fb .LASF84
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2723   .debug_str:000002d5 .LASF85
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2783   .debug_str:00000413 .LASF86
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2781   .debug_str:0000040d .LASF87
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2735   .debug_str:0000030f .LASF88
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2737   .debug_str:00000318 .LASF89
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2739   .debug_str:00000321 .LASF90
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2741   .debug_str:0000032a .LASF91
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2657   .debug_str:000000e1 .LASF92
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2641   .debug_str:0000005f .LASF93
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2759   .debug_str:00000390 .LASF94
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2693   .debug_str:00000209 .LASF95
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2685   .debug_str:000001cf .LASF101
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2733   .debug_str:000002fe .LASF96
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:2825   .debug_str:000004f0 .LASF97
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:12     .text.OS_InitHW:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:110    .text._OS_SystemAlarmHandler:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:249    .text.OS_GetTime_Cycles:00000009 .LVL6
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:279    .text.OS_GetTime_Cycles:00000032 .LVL12
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:253    .text.OS_GetTime_Cycles:00000010 .LVL7
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:275    .text.OS_GetTime_Cycles:0000002c .LVL11
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:291    .text.OS_ConvertCycles2us:00000000 .LVL13
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:294    .text.OS_ConvertCycles2us:00000004 .LVL14
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:306    .text.OS_Convert_us2Cycles:00000000 .LVL15
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:309    .text.OS_Convert_us2Cycles:00000004 .LVL16
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:323    .text.OS_ISR_Tick:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:388    .text.OS_COM_Send1:00000000 .LVL22
C:\Users\Andrea\AppData\Local\Temp\cc2hGAI0.s:661    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_OS_DisableInterrupt
_OS_Global
_OS_TICK_Config
_OS_EnableInterrupt
_LIB_IRQMonitor_Enter
_OS_ALARM_Handler
_LIB_IRQMonitor_Exit
_OS_SwitchFromInt
_OS_TICK_HandleEx
_OS_COM_ClearTxActive
