   1                             		.file	"RN_RX200_hal_Flash.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.PRAM,"ax",@progbits
   6                             	__FlashGrabState:
   7                             	.LFB16:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /**
   2:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  HAL Functions of Flash Device
   3:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  Hal Functions to access at hardware Resources from Driver layer
   4:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  \file    RN_RX200_Hal_Flash.c
   5:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  */
   6:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* ******** */
   7:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Includes */
   8:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* ******** */
   9:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #include "Config.h"
  10:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #include "RN_RX200_hal.h"
  11:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #include "RN_RX200_hal_Flash.h"
  12:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  13:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  14:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
  15:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** Private global variables and functions
  16:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
  17:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  18:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Signals whether FCU firmware has been transferred to the FCU RAM
  19:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 0 : No, 1 : Yes */
  20:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t fcu_transfer_complete = 0;
  21:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  22:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Valid values are 'READ_MODE','ROM_PE_MODE' or 'FLD_PE_MODE' */
  23:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t current_mode;
  24:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  25:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Stores whether the peripheral clock notification command has
  26:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** been executed */
  27:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t fcu_pclk_command = 0;
  28:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  29:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Semaphore for making sure flash routines do not stomp on each other */
  30:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static int32_t flash_semaphore = 0;
  31:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  32:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* States for flash operations */
  33:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static enum Flash_States { FLASH_READY,
  34:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                            FLASH_ERASING,
  35:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                            FLASH_WRITING,
  36:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                            FLASH_BLANKCHECK,
  37:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                            FLASH_LOCK_BIT
  38:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                          } flash_state;
  39:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  40:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifndef IGNORE_LOCK_BITS
  41:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Determines whether lock bit protection is used when programming/erasing */
  42:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t lock_bit_protection = TRUE;
  43:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
  44:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  45:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint32_t get_block_addresses(uint8_t blockNum )
  46:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
  47:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t retVal;
  48:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  49:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( blockNum < ROM_NUM_BLOCKS)
  50:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
  51:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         retVal = (0x00FFFFFF-FLASH_ERASE_BLK_SZ +1)- (FLASH_ERASE_BLK_SZ*blockNum);
  52:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
  53:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
  54:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
  55:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         retVal = 0x00100000 + (FLASH_ERASE_BLK_SZ*(blockNum-(ROM_NUM_BLOCKS)));
  56:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
  57:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return retVal;
  58:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
  59:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  60:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Enter PE mode function prototype */
  61:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef ENABLE_ROM_PROGRAMMING
  62:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Enter_PE_Mode( uint32_t flash_addr, uint16_t bytes ) __attribute__((section(".PRAM"
  63:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
  64:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Enter_PE_Mode( uint32_t flash_addr, uint16_t bytes );
  65:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
  66:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Exit PE mode function prototype */
  67:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef ENABLE_ROM_PROGRAMMING
  68:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _Exit_PE_Mode(void) __attribute__((section(".PRAM")));
  69:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
  70:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _Exit_PE_Mode(void);
  71:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
  72:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* ROM write function prototype */
  73:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef ENABLE_ROM_PROGRAMMING
  74:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _ROM_Write(uint32_t address, uint32_t data) __attribute__((section(".PRAM")));
  75:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
  76:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _ROM_Write(uint32_t address, uint32_t data);
  77:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
  78:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Data flash write function prototype */
  79:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _DataFlash_Write(uint32_t address, uint32_t data, uint8_t size);
  80:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Data flash status clear function prototype */
  81:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _DataFlash_Status_Clr(void);
  82:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Notify peripheral clock function prototype */
  83:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef ENABLE_ROM_PROGRAMMING
  84:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Notify_Peripheral_Clock(volatile uint8_t * flash_addr) __attribute__((section(".PRA
  85:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
  86:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Notify_Peripheral_Clock(volatile uint8_t * flash_addr);
  87:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
  88:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
  89:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Used to grab flash state */
  90:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef ENABLE_ROM_PROGRAMMING
  91:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _FlashGrabState(enum Flash_States new_state) __attribute__((section(".PRAM")));
  92:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
  93:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _FlashGrabState(enum Flash_States new_state);
  94:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
  95:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Used to release flash state */
  96:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef ENABLE_ROM_PROGRAMMING
  97:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _FlashReleaseState(void) __attribute__((section(".PRAM")));
  98:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
  99:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _FlashReleaseState(void);
 100:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
 101:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Used to issue an erase command to the FCU */
 102:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef ENABLE_ROM_PROGRAMMING
 103:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Flash_Erase_Command(volatile uint8_t * const erase_addr) __attribute__((section(".P
 104:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
 105:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Flash_Erase_Command(volatile uint8_t * const erase_addr);
 106:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
 107:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 108:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 109:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _Flash_Init
 110:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Initializes the FCU peripheral block.
 111:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function does not have to execute from in RAM.
 112:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : none
 113:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
 114:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
 115:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 116:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t _Flash_Init(void)
 117:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 118:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare source and destination pointers */
 119:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t * src, * dst;
 120:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 121:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare iteration counter variable */
 122:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint16_t i;
 123:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 124:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Disable FCU interrupts in FCU block */
 125:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.ROMAEIE = 0;
 126:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.CMDLKIE = 0;
 127:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.DFLAEIE = 0;
 128:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.DFLRPEIE = 0;
 129:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.DFLWPEIE = 0;
 130:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 131:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Disable FCU interrupts in ICU */
 132:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 133:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Disable flash interface error (FIFERR) */
 134:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IPR(FCU, FIFERR) = 0;
 135:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IEN(FCU, FIFERR) = 0;
 136:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 137:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Disable flash ready interrupt (FRDYI) */
 138:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IPR(FCU, FRDYI) = 0;
 139:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IEN(FCU, FRDYI) = 0;
 140:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 141:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Transfer Firmware to the FCU RAM. To use FCU commands, the FCU firmware
 142:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         must be stored in the FCU RAM. */
 143:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 144:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Before writing data to the FCU RAM, clear FENTRYR to stop the FCU. */
 145:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FENTRYR.WORD != 0x0000)
 146:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 147:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Disable the FCU from accepting commands - Clear both the
 148:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****            FENTRY0(ROM) and FENTRYD(Data Flash) bits to 0 */
 149:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FENTRYR.WORD = 0xAA00;
 150:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 151:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 152:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enable the FCU RAM */
 153:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FCURAME.WORD = 0xC401;
 154:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 155:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Copies the FCU firmware to the FCU RAM.
 156:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        Source: H'FEFFE000 to H'FF00000 (FCU firmware area)
 157:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        Destination: H'007F8000 to H'007FA000 (FCU RAM area) */
 158:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set source pointer */
 159:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     src = (uint32_t *)FCU_PRG_TOP;
 160:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 161:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set destination pointer */
 162:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     dst = (uint32_t *)FCU_RAM_TOP;
 163:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 164:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Iterate for loop to copy the FCU firmware */
 165:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     for( i=0; i<(FCU_RAM_SIZE/4); i++)
 166:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 167:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Copy data from the source to the destination pointer */
 168:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *dst = *src;
 169:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 170:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Increment the source and destination pointers */
 171:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         src++;
 172:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         dst++;
 173:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 174:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 175:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* FCU firmware transfer complete, set the flag to 1 */
 176:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     fcu_transfer_complete = 1;
 177:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 178:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return no errors */
 179:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
 180:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 181:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 182:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _Flash_Init
 183:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 184:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 185:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 186:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _DataFlash_Status_Clr
 187:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Clear the status of the Data Flash operation.
 188:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *	             NOTE: This function does not have to execute from in RAM.
 189:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : none
 190:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : none
 191:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 192:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _DataFlash_Status_Clr(void)
 193:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 194:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare temporaty pointer */
 195:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint8_t *ptrb;
 196:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 197:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set pointer to Data Flash to issue a FCU command if needed */
 198:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     ptrb = (volatile uint8_t *)(DF_ADDRESS);
 199:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 200:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check to see if an error has occurred with the FCU.  If set, then
 201:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        issue a status clear command to bring the FCU out of the
 202:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        command-locked state */
 203:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ILGLERR == 1)
 204:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 205:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* FASTAT must be set to 0x10 before the status clear command
 206:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****            can be successfully issued  */
 207:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(FLASH.FASTAT.BYTE != 0x10)
 208:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 209:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Set the FASTAT register to 0x10 so that a status clear
 210:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                command can be issued */
 211:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             FLASH.FASTAT.BYTE = 0x10;
 212:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 213:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 214:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 215:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Issue a status clear command to the FCU */
 216:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *ptrb = 0x50;
 217:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 218:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 219:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _DataFlash_Status_Clr
 220:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 221:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 222:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 223:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 224:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _DataFlash_Write
 225:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Write either bytes to Data Flash area.
 226:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *	             NOTE: This function does not have to execute from in RAM.
 227:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : address - The address (in the Data Flash programming area)
 228:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          to write the data to
 229:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                data - The address of the data to write
 230:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                size - The size of the data to write. Must be set to
 231:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                       either DF_PROGRAM_SIZE_LARGE or DF_PROGRAM_SIZE_SMALL.
 232:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
 233:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
 234:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 235:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _DataFlash_Write(uint32_t address, uint32_t data, uint8_t size)
 236:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 237:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare wait counter variable */
 238:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t wait_cnt;
 239:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 240:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Define loop iteration count variable */
 241:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t n = 0;
 242:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 243:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check data size is valid */
 244:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(DF_PROGRAM_SIZE_LARGE)
 245:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((DF_PROGRAM_SIZE_LARGE == size) || (DF_PROGRAM_SIZE_SMALL == size))
 246:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
 247:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(DF_PROGRAM_SIZE_SMALL == size)
 248:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
 249:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 250:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Perform bit shift since 2 bytes are written at a time */
 251:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         size = size >> 1;
 252:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Send command to data flash area */
 254:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)DF_ADDRESS = 0xE8;
 255:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 256:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Specify data transfer size to data flash area */
 257:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)DF_ADDRESS = size;
 258:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 259:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Iterate through the number of data bytes */
 260:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while(n++ < size)
 261:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 262:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Copy data from source address to destination area */
 263:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *(volatile uint16_t *)address = *(uint16_t *)data;
 264:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 265:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Increment data address by two bytes */
 266:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             data += 2;
 267:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 268:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 269:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Write the final FCU command for programming */
 270:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)(DF_ADDRESS) = 0xD0;
 271:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 272:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set the wait counter with timeout value */
 273:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt = WAIT_MAX_DF_WRITE;
 274:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 275:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if FCU has completed its last operation */
 276:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while(FLASH.FSTATR0.BIT.FRDY == 0)
 277:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 278:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Decrement the wait counter */
 279:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             wait_cnt--;
 280:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 281:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Check if the wait counter has reached zero */
 282:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(wait_cnt == 0)
 283:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
 284:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Maximum time for writing a block has passed,
 285:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    operation failed, reset FCU */
 286:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 _Flash_Reset();
 287:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 288:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Return FLASH_FAILURE, operation failure */
 289:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 return FLASH_FAILURE;
 290:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
 291:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 292:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 293:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check for illegal command or programming errors */
 294:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if((FLASH.FSTATR0.BIT.ILGLERR == 1) || (FLASH.FSTATR0.BIT.PRGERR == 1))
 295:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 296:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
 297:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_FAILURE;
 298:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 299:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 300:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Data size is invalid */
 301:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
 302:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 303:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /*Return FLASH_FAILURE, operation failure */
 304:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 305:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 306:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 307:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return FLASH_SUCCESS, operation success */
 308:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
 309:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 310:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 311:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _DataFlash_Write
 312:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 313:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 314:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 315:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 316:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashDataAreaBlankCheck
 317:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Performs a blank check on a specified data flash block
 318:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE1: This function does not have to execute from in RAM.
 319:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE2: RX610 & RX62x support block and 8 byte checks
 320:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                       RX630/631/63N support block and 2 byte checks
 321:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : address - The address to check if is blank.
 322:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          If the parameter 'size'=='BLANK_CHECK_8_BYTE',
 323:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          this should be set to an 8-byte address boundary.
 324:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          If the parameter 'size'=='BLANK_CHECK_ENTIRE_BLOCK',
 325:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          this should be set to a defined Data Block Number
 326:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          ('BLOCK_DB0', 'BLOCK_DB1', etc...) or an address
 327:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          in the data flash block.  Either option will work.
 328:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          If the parameter 'size'=='BLANK_CHECK_2_BYTE',
 329:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                          this should be set to a 2 byte address boundary.
 330:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                size - This specifies if you are checking an 8-byte location,
 331:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                       2-byte location, or an entire block. You must set this
 332:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                       to either 'BLANK_CHECK_8_BYTE', 'BLANK_CHECK_2_BYTE',
 333:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                       or 'BLANK_CHECK_ENTIRE_BLOCK'.
 334:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_BLANK = (2 or 8 Byte check or non-BGO) Blank
 335:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                              (Entire Block & BGO) Blank check operation
 336:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                              started
 337:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_NOT_BLANK = Not Blank
 338:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
 339:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Another flash operation is in progress
 340:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_ADDRESS = Invalid address
 341:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_BYTES = Incorrect 'size' was submitted
 342:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 343:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashDataAreaBlankCheck(uint32_t address, uint8_t size)
 344:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 345:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare data flash pointer */
 346:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint8_t *ptrb;
 347:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 348:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare result container variable */
 349:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_NOT_BLANK;
 350:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 351:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare wait counter variable */
 352:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t wait_cnt;
 353:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 354:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 355:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	FLS_EnterCriticalSection();
 356:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 357:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check to make sure address is valid. */
 358:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( ((address > (DF_NUM_BLOCKS+BLOCK_DB0)) && (address < DF_ADDRESS))
 359:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             || (address > DF_ADDRESS + DF_SIZE) )
 360:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 361:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Address is not a valid DF address or block number */
 362:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	result = FLASH_ERROR_ADDRESS;
 363:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 364:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check to make sure 'size' parameter is valid */
 365:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( (size != BLANK_CHECK_ENTIRE_BLOCK)
 366:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(BLANK_CHECK_8_BYTE)
 367:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             && (size != BLANK_CHECK_8_BYTE)
 368:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #elif defined(BLANK_CHECK_2_BYTE)
 369:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             && (size != BLANK_CHECK_2_BYTE)
 370:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
 371:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****       )
 372:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 373:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* 'size' parameter is not valid. */
 374:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	result = FLASH_ERROR_BYTES;
 375:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 376:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state */
 377:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( _FlashGrabState(FLASH_BLANKCHECK) != FLASH_SUCCESS )
 378:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 379:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
 380:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	result = FLASH_BUSY;
 381:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 382:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
 383:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 384:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set current FCU mode to Data Flash PE Mode */
 385:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = FLD_PE_MODE;
 386:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 387:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Enter Data Flash PE mode in the FCU */
 388:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( _Enter_PE_Mode( address, 0 ) != FLASH_SUCCESS)
 389:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 390:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Release state */
 391:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _FlashReleaseState();
 392:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 393:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
 394:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLASH_FAILURE;
 395:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 396:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         else
 397:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 398:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Set  bit FRDMD (bit 4) in FMODR to 1 */
 399:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             FLASH.FMODR.BIT.FRDMD = 1;
 400:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 401:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Check if 2 byte size has been passed */
 402:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(size == BLANK_CHECK_2_BYTE)
 403:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
 404:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Set data flash pointer to beginning of the memory block */
 405:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 ptrb = (volatile uint8_t *)(address & DF_MASK);
 406:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 407:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Check if the next 2 bytes are blank
 408:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    Bits BCADR to the address of the 2-byte location to check.
 409:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    Set bit BCSIZE in EEPBCCNT to 0. */
 410:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 FLASH.DFLBCCNT.WORD = (uint16_t)(address & (DF_BLOCK_SIZE_LARGE-2));
 411:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
 412:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             else
 413:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
 414:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Check entire data block */
 415:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Check to see if user sent in a data block number or the
 416:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    address.  The function description tells the user to send
 417:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    in the block number but in some early examples the address
 418:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    was used. To make this work with both versions we detect which
 419:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    is sent in below and make it work either way. */
 420:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 if( address < (DF_NUM_BLOCKS+BLOCK_DB0) )
 421:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
 422:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 	uint32_t tmp_addr = GET_BLOCK_ADDR(address);
 423:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 424:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     /* A data block number was sent in */
 425:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     ptrb = (uint8_t *)tmp_addr;
 426:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 }
 427:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 else
 428:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
 429:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     /* Any address in the erasure block */
 430:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     ptrb = (volatile uint8_t *)address;
 431:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 }
 432:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 433:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Check if the entire block is blank
 434:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    Set bit BCSIZE in EEPBCCNT to 1. */
 435:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 FLASH.DFLBCCNT.BIT.BCSIZE = 1;
 436:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
 437:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 438:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Send commands to FCU */
 439:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *ptrb = 0x71;
 440:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *ptrb = 0xD0;
 441:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 442:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Set timeout wait counter value */
 443:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             wait_cnt = WAIT_MAX_BLANK_CHECK;
 444:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 445:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Wait until FCU operation finishes, or a timeout occurs */
 446:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             while(FLASH.FSTATR0.BIT.FRDY == 0)
 447:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
 448:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Increment the wait counter */
 449:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 wait_cnt--;
 450:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 451:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Check if the wait counter has reached zero */
 452:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 if(wait_cnt == 0)
 453:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
 454:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     /* Maximum timeout duration for writing to ROM has elapsed -
 455:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                        assume operation failure and reset the FCU */
 456:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     _Flash_Reset();
 457:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 458:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     /* Return FLASH_FAILURE, operation failure */
 459:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     result = FLASH_FAILURE;
 460:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 }
 461:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
 462:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 463:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 464:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 465:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 466:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 467:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if (result == FLASH_NOT_BLANK)
 468:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 469:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Reset the FRDMD bit back to 0 */
 470:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FMODR.BIT.FRDMD = 0x00;
 471:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 472:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the 'ILGERR' was set during the command */
 473:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(FLASH.FSTATR0.BIT.ILGLERR == 1)	/* Check 'ILGERR' bit */
 474:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 475:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
 476:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLASH_FAILURE;
 477:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 478:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         else
 479:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 480:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* (Read the 'BCST' bit (bit 0) in the 'DFLBCSTAT' register
 481:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                0=blank, 1=not blank */
 482:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = (FLASH.DFLBCSTAT.BIT.BCST ? FLASH_NOT_BLANK : FLASH_BLANK);
 483:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 484:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 485:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 486:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 487:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 488:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 489:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if (current_mode == FLD_PE_MODE)
 490:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 491:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Take the FCU out of PE mode */
 492:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _Exit_PE_Mode( );
 493:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 494:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
 495:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
 496:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 497:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 498:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLS_ExitCriticalSection();
 499:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 500:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
 501:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 502:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 503:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 504:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashDataAreaBlankCheck
 505:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 506:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 507:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 508:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashDataAreaAccess
 509:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : This function is used to allow read and program permissions
 510:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                to the Data Flash areas. NOTE: This function does not have to
 511:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                execute from in RAM.
 512:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : read_en_mask - Bitmasked value. Bits 0-3 represents each Data
 513:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                               Blocks 0-3 (respectively).
 514:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                               '0'=no Read access.
 515:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                               '1'=Allows Read by CPU
 516:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                write_en_mask - Bitmasked value. Bits 0-3 represents each Data
 517:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                               Blocks 0-3 (respectively).
 518:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                               '0'=no Erase/Write access.
 519:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                               '1'=Allows Erase/Write by FCU
 520:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : none
 521:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 522:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** void R_FlashDataAreaAccess(uint16_t read_en_mask, uint16_t write_en_mask)
 523:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 524:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set Read access for the Data Flash blocks DB0-DB7 */
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLRE0.WORD = 0x2D00 | (read_en_mask & 0x00FF);
 526:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 527:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set Erase/Program access for the Data Flash blocks DB0-DB7 */
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLWE0.WORD = 0x1E00 |  (write_en_mask & 0x00FF);
 529:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 530:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 531:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashDataAreaAccess
 532:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 533:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 534:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 535:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 536:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _ROM_Write
 537:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Write bytes to ROM Area Flash.
 538:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM.
 539:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : address - ROM address of where to write to
 540:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                data - Pointer to the data to write
 541:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
 542:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
 543:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 544:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _ROM_Write(uint32_t address, uint32_t data)
 545:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 546:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare iteration loop count variable */
 547:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t i;
 548:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare wait counter variable */
 549:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t wait_cnt;
 550:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Number of bytes to write */
 551:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t size = ROM_PROGRAM_SIZE;
 552:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 553:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Writes are done 16-bit at a time, scale 'size' argument */
 554:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     size = ROM_PROGRAM_SIZE >> 1;
 555:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 556:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Write the FCU Program command */
 557:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint8_t *)address = 0xE8;
 558:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint8_t *)address = size;
 559:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 560:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Write 'size' bytes into flash, 16-bits at a time */
 561:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     for(i = 0; i < size; i++)
 562:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 563:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Copy data from source address to destination ROM */
 564:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint16_t *)address = *(uint16_t *)data;
 565:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 566:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Increment destination address by 2 bytes */
 567:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         data += 2;
 568:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 569:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 570:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Write the final FCU command for programming */
 571:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint8_t *)address = 0xD0;
 572:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 573:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set timeout wait counter value */
 574:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_ROM_WRITE;
 575:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 576:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Wait until FCU operation finishes, or a timeout occurs */
 577:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 578:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 579:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Decrement the wait counter */
 580:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 581:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 582:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the wait counter has reached zero */
 583:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
 584:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 585:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Maximum timeout duration for writing to ROM has elapsed -
 586:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                assume operation failure and reset the FCU */
 587:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
 588:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 589:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
 590:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_FAILURE;
 591:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 592:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 593:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 594:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check for illegal command or programming errors */
 595:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((FLASH.FSTATR0.BIT.ILGLERR == 1) || (FLASH.FSTATR0.BIT.PRGERR  == 1))
 596:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 597:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
 598:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 599:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 600:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 601:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return FLASH_SUCCESS, operation successful */
 602:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
 603:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 604:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 605:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _ROM_Write
 606:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 607:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 608:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 609:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _Enter_PE_Mode
 610:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Puts the FCU into program/erase mode.
 611:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
 612:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash programming,
 613:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                this function can reside and execute in Flash.
 614:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : flash_addr - The programming/erasure address
 615:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                bytes - The number of bytes you are writing (if you are
 616:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                        writing).
 617:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
 618:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
 619:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 620:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Enter_PE_Mode( uint32_t flash_addr, uint16_t bytes )
 621:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 622:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* If FCU firmware has already been transferred to FCU RAM,
 623:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        no need to do it again */
 624:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( !fcu_transfer_complete )
 625:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 626:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Initialise the FCU, and store operation resilt in result variable */
 627:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if FCU initialisation was successful */
 628:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( _Flash_Init() != FLASH_SUCCESS )
 629:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 630:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* FCU initialisiation failed - return operation failure */
 631:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_FAILURE;
 632:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 633:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 634:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 635:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* FENTRYR must be 0x0000 before bit FENTRY0 or FENTRYD can be set to 1 */
 636:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FENTRYR.WORD = 0xAA00;
 637:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 638:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Execute null operations to allow FENTRYR register to settle */
 639:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 640:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
 641:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
 642:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 643:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check if FCU mode is set to ROM PE */
 644:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( current_mode == ROM_PE_MODE)
 645:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 646:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Disable the FRDYI interrupt */
 647:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FRDYIE.BIT.FRDYIE = 0;
 648:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FENTRYR.WORD = 0xAA01;
 649:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 650:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check if FCU mode is set to data flash PE */
 651:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( current_mode == FLD_PE_MODE )
 652:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 653:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Disable the FRDYI interrupt */
 654:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FRDYIE.BIT.FRDYIE = 0;
 655:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 656:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set FENTRYD bit(Bit 7) and FKEY (B8-15 = 0xAA) */
 657:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FENTRYR.WORD = 0xAA80;
 658:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 659:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /*  First clear the FCU's status before doing Data Flash programming.
 660:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         	This is to clear out any previous errors that may have occured.
 661:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         	For example, if you attempt to read the Data Flash area
 662:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         	before you make it readable using R_FlashDataAreaAccess(). */
 663:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _DataFlash_Status_Clr();
 664:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 665:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 666:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Catch-all for invalid FCU mode */
 667:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
 668:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 669:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Invalid value of 'current_mode' */
 670:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 671:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 672:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 673:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enable Write/Erase of ROM/Data Flash */
 674:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FWEPROR.BYTE = 0x01;
 675:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 676:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check for FCU error */
 677:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(		(FLASH.FSTATR0.BIT.ILGLERR == 1)
 678:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||	(FLASH.FSTATR0.BIT.ERSERR  == 1)
 679:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||	(FLASH.FSTATR0.BIT.PRGERR  == 1)
 680:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||	(FLASH.FSTATR1.BIT.FCUERR  == 1))
 681:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 682:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
 683:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 684:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 685:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 686:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check to see if peripheral clock notification command is needed */
 687:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( fcu_pclk_command == 0 )
 688:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 689:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Disable FCU interrupts, so interrupt will not trigger after
 690:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****            peripheral clock notification command */
 691:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FRDYIE.BIT.FRDYIE = 0;
 692:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 693:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Inform FCU of flash clock speed, check if operation is succesful */
 694:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(_Notify_Peripheral_Clock((volatile uint8_t *)flash_addr)!=0)
 695:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 696:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
 697:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_FAILURE;
 698:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 699:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 700:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* No need to notify FCU of clock supplied to flash again */
 701:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fcu_pclk_command = 1;
 702:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 703:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 704:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return FLASH_SUCCESS, operation successful */
 705:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
 706:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 707:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 708:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function _Enter_PE_Mode
 709:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 710:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 711:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 712:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _Exit_PE_Mode
 713:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Takes the FCU out of program/erase mode.
 714:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
 715:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash
 716:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, this function can reside and execute in Flash.
 717:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : none
 718:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : none
 719:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 720:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _Exit_PE_Mode( void )
 721:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 722:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare wait timer count variable */
 723:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t	wait_cnt;
 724:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 725:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare address pointer */
 726:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint8_t *pAddr=0;
 727:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 728:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set wait timer count duration */
 729:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_ERASE;
 730:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 731:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Iterate while loop whilst FCU operation is in progress */
 732:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 733:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 734:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Decrement wait timer count variable */
 735:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 736:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 737:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if wait timer count value has reached zero */
 738:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
 739:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 740:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Timeout duration has elapsed, assuming operation failure and
 741:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                resetting the FCU */
 742:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
 743:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 744:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Break from the while loop prematurely */
 745:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             break;
 746:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 747:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 748:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 749:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check FSTATR0 and execute a status register clear command if needed */
 750:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(		(FLASH.FSTATR0.BIT.ILGLERR == 1)
 751:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||  (FLASH.FSTATR0.BIT.ERSERR  == 1)
 752:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||  (FLASH.FSTATR0.BIT.PRGERR  == 1))
 753:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 754:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 755:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Clear ILGLERR */
 756:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(FLASH.FSTATR0.BIT.ILGLERR == 1)
 757:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 758:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* FASTAT must be set to 0x10 before the status clear command
 759:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                can be successfully issued  */
 760:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(FLASH.FASTAT.BYTE != 0x10)
 761:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
 762:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Set the FASTAT register to 0x10 so that a status clear
 763:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     command can be issued */
 764:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 FLASH.FASTAT.BYTE = 0x10;
 765:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
 766:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 767:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 768:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Issue a status register clear command to clear all error bits */
 769:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( current_mode == ROM_PE_MODE )
 770:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 771:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* If there is more than one area then we need to check and make
 772:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                sure we are sending the status register clear command
 773:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                to the correct section. */
 774:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Check to see which area we are in */
 775:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( FLASH.FENTRYR.BIT.FENTRY0 == 1 )
 776:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
 777:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Area 0 */
 778:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 pAddr = (volatile uint8_t *)(ROM_AREA_0);
 779:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Send status clear command to FCU */
 780:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 *pAddr = 0x50;
 781:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
 782:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 783:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         else
 784:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 785:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Set address pointer to data flash area */
 786:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             pAddr = (volatile uint8_t *)DF_ADDRESS;
 787:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 788:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Send status clear command to FCU */
 789:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *pAddr = 0x50;
 790:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 791:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 792:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 793:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter ROM Read mode */
 794:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FENTRYR.WORD = 0xAA00;
 795:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 796:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Disable the FRDYI interrupt */
 797:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FRDYIE.BIT.FRDYIE = 0;
 798:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 799:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Flash write/erase disabled */
 800:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FWEPROR.BYTE = 0x02;
 801:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 802:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 803:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 804:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _Exit_PE_Mode
 805:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 806:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 807:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
 808:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashErase
 809:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Erases an entire flash block.
 810:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
 811:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash programming,
 812:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                this function can reside and execute in Flash.
 813:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : block - The block number to erase (BLOCK_0, BLOCK_1, etc...)
 814:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
 815:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
 816:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Another flash operation is in progress
 817:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
 818:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashErase_1(uint8_t block)
 819:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 820:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare address pointer */
 821:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t pAddr;
 822:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare erase operation result container variable */
 823:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
 824:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 825:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 826:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state */
 827:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_ERASING) != FLASH_SUCCESS )
 828:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 829:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
 830:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
 831:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 832:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 833:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Erase Command Address */
 834:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     pAddr = GET_BLOCK_ADDR( block );
 835:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 836:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Do we want to erase a Data Flash block or ROM block? */
 837:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( block >= BLOCK_DB0 )
 838:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 839:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set current FCU mode to data flash PE */
 840:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = FLD_PE_MODE;
 841:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 842:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
 843:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 844:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set current FCU mode to ROM PE */
 845:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = ROM_PE_MODE;
 846:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 847:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 848:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter ROM PE mode, check if operation successful */
 849:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode(pAddr, 0) != FLASH_SUCCESS)
 850:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 851:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
 852:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
 853:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 854:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
 855:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 856:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 857:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 858:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef  IGNORE_LOCK_BITS
 859:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Cancel the ROM Protect feature
 860:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        NOTE: If you are using block locking feature to protect your data,
 861:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        then comment out 'IGNORE_LOCK_BITS' in Flash_API_RX600_UserConfig.h */
 862:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FPROTR.WORD = 0x5501;
 863:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
 864:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Only disable lock bit protection if user has specified to
 865:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        do so earlier */
 866:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( lock_bit_protection == FALSE )
 867:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 868:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Cancel the ROM Protect feature */
 869:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FPROTR.WORD = 0x5501;
 870:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 871:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
 872:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 873:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 874:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 875:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* NOTE:
 876:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        The RX630/631/63N actually has 1024 x 32 byte blocks instead of the
 877:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        16 x 2Kbyte blocks defined in r_flash_api_rx600.h. These are grouped
 878:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        into 16 blocks to make it easier for the user to delete larger sections
 879:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        of the data flash at once. The user can still delete individual blocks
 880:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        but they will need to use the new flash erase function that takes
 881:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        addresses instead of blocks. For reference, the 2KB blocks defined
 882:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        are called 'fake' blocks. */
 883:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( FLD_PE_MODE == current_mode )
 884:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 885:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* This is a DATA block erase */
 886:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 887:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Calculate how many bytes to erase */
 888:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         int32_t bytes_to_erase = FLASH_ERASE_BLK_SZ;
 889:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 890:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Erase real data flash blocks until the 'fake' block is erased .*/
 891:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while(0 < bytes_to_erase)
 892:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 893:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 894:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Send FCU command to erase block */
 895:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = _Flash_Erase_Command((volatile uint8_t *)pAddr);
 896:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 897:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Advance pointer to next block */
 898:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             pAddr += DF_BLOCK_SIZE;
 899:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 900:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Subtract off bytes erased */
 901:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             bytes_to_erase -= DF_BLOCK_SIZE;
 902:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 903:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 904:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
 905:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 906:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* This is a ROM block erase */
 907:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Send FCU command to erase block */
 908:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = _Flash_Erase_Command((volatile uint8_t *)pAddr);
 909:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 910:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 911:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Leave Program/Erase Mode */
 912:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
 913:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 914:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
 915:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
 916:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 917:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return erase result */
 918:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
 919:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 920:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 921:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 922:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(OPT_FLASH_1)
 923:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 924:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*******************************************************************/
 925:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* Check entire data block */
 926:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t _Flash_BlankCheck_Command(uint32_t address )
 927:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 928:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare data flash pointer */
 929:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint8_t *ptrb;
 930:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 931:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare result container variable */
 932:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result;
 933:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 934:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare wait counter variable */
 935:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t wait_cnt;
 936:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 937:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Any address in the erasure block */
 938:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     ptrb = (volatile uint8_t *)address;
 939:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 940:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set  bit FRDMD (bit 4) in FMODR to 1 */
 941:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FMODR.BIT.FRDMD = 1;
 942:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 943:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check if the entire block is blank, Set bit BCSIZE in EEPBCCNT to 1. */
 944:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLBCCNT.BIT.BCSIZE = 1;
 945:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 946:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Send commands to FCU */
 947:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *ptrb = 0x71;
 948:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *ptrb = 0xD0;
 949:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 950:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set timeout wait counter value */
 951:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_BLANK_CHECK;
 952:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 953:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Wait until FCU operation finishes, or a timeout occurs */
 954:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 955:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 956:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Increment the wait counter */
 957:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 958:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 959:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the wait counter has reached zero */
 960:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
 961:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
 962:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Maximum timeout duration for writing to ROM has elapsed -
 963:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                assume operation failure and reset the FCU */
 964:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
 965:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 966:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
 967:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_FAILURE;
 968:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
 969:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 970:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 971:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Reset the FRDMD bit back to 0 */
 972:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FMODR.BIT.FRDMD = 0x00;
 973:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 974:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check if the 'ILGERR' was set during the command */
 975:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ILGLERR == 1)	/* Check 'ILGERR' bit */
 976:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
 977:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Take the FCU out of PE mode */
 978:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _Exit_PE_Mode( );
 979:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 980:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
 981:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
 982:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 983:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
 984:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 985:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
 986:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 987:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* (Read the 'BCST' bit (bit 0) in the 'DFLBCSTAT' register  0=blank, 1=not blank */
 988:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     result = FLASH.DFLBCSTAT.BIT.BCST;
 989:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 990:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
 991:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 992:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 993:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 994:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
 995:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
 996:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * R_FlashDataErase
 997:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * erase data flash
 998:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * */
 999:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashDataErase(uint32_t pAddr, uint32_t bytes_to_erase)
1000:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1001:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare erase operation result container variable */
1002:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
1003:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1004:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state, */ /*MS questo check puo essere fatt a livello superiore */
1005:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_ERASING) != FLASH_SUCCESS )
1006:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1007:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
1008:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
1009:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1010:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     current_mode = FLD_PE_MODE;
1011:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter ROM PE mode, check if operation successful */
1012:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode(pAddr, 0) != FLASH_SUCCESS)
1013:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1014:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
1015:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
1016:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1017:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
1018:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
1019:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1020:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1021:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Cancel the ROM Protect feature */
1022:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FPROTR.WORD = 0x5501;
1023:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1024:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(0 < bytes_to_erase)
1025:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1026:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /*Blank check before erase */
1027:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = _Flash_BlankCheck_Command((volatile uint8_t *)pAddr);
1028:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( result )
1029:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1030:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Send FCU command to erase block */
1031:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = _Flash_Erase_Command((volatile uint8_t *)pAddr);
1032:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1033:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Advance pointer to next block */
1034:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         pAddr += DF_BLOCK_SIZE;
1035:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1036:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Subtract off bytes erased */
1037:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         bytes_to_erase -= DF_BLOCK_SIZE;
1038:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1039:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1040:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Leave Program/Erase Mode */
1041:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
1042:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1043:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
1044:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
1045:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1046:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return erase result */
1047:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
1048:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1049:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
1050:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1051:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1052:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1053:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashErase
1054:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1055:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1056:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1057:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1058:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashEraseRange
1059:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Erases blocks starting at an address and stopping when the
1060:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                number of bytes to erase has been reached.
1061:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function is currently only for data flash blocks
1062:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                on RX MCUs that have 32 byte erase sectors.
1063:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
1064:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash programming,
1065:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                this function can reside and execute in Flash.
1066:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : start_addr - The address of where to start erasing. Must be on
1067:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                             erase boundary.
1068:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                bytes - The numbers of bytes to erase. Must be
1069:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                        multiple of erase size.
1070:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
1071:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
1072:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_ALIGNED = Flash address was not on correct boundary
1073:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Another flash operation is in progress
1074:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_BYTES = Number of bytes did not match erase size
1075:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_ADDRESS = Invalid address, this is only for DF
1076:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1077:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashEraseRange(uint32_t start_addr, uint32_t bytes)
1078:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1079:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare erase operation result container variable */
1080:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
1081:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1082:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Take off upper byte since for programming/erase addresses for ROM are
1083:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	the same as read addresses except upper byte is masked off to 0's.
1084:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	Data Flash addresses are not affected. */
1085:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     start_addr &= 0x00FFFFFF;
1086:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1087:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Confirm this is for data flash */
1088:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( start_addr >= DF_ADDRESS && start_addr < (DF_ADDRESS + DF_SIZE) )
1089:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1090:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the number of bytes were passed is a multiple of the
1091:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****            programming size for the data flash */
1092:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( bytes & (DF_BLOCK_SIZE-1) )
1093:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1094:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return number of bytes not a multiple of the programming size */
1095:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_BYTES;
1096:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1097:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check for an address on an erase boundary. */
1098:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( start_addr & (DF_BLOCK_SIZE-1) )
1099:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1100:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return address not on a programming boundary */
1101:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_ALIGNED;
1102:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1103:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1104:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
1105:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1106:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* This function is only for data flash blocks. */
1107:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_ERROR_ADDRESS;
1108:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1109:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1110:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state */
1111:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_ERASING) != FLASH_SUCCESS )
1112:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1113:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
1114:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
1115:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1116:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1117:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set current FCU mode to data flash PE */
1118:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     current_mode = FLD_PE_MODE;
1119:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1120:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter ROM PE mode, check if operation successful */
1121:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode(start_addr, 0) != FLASH_SUCCESS)
1122:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1123:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
1124:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
1125:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1126:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
1127:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
1128:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1129:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1130:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef  IGNORE_LOCK_BITS
1131:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Cancel the ROM Protect feature
1132:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        NOTE: If you are using block locking feature to protect your data,
1133:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        then comment out 'IGNORE_LOCK_BITS' in Flash_API_RX600_UserConfig.h */
1134:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FPROTR.WORD = 0x5501;
1135:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
1136:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Only disable lock bit protection if user has specified to
1137:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        do so earlier */
1138:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( lock_bit_protection == FALSE )
1139:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1140:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Cancel the ROM Protect feature */
1141:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FPROTR.WORD = 0x5501;
1142:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1143:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
1144:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1145:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Erase real data flash blocks until the 'fake' block is erased .*/
1146:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(0 < bytes)
1147:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1148:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Send FCU command to erase block */
1149:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = _Flash_Erase_Command((volatile uint8_t *)start_addr);
1150:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1151:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Advance pointer to next block */
1152:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         start_addr += DF_BLOCK_SIZE;
1153:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1154:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Subtract off bytes erased */
1155:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         bytes -= DF_BLOCK_SIZE;
1156:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1157:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1158:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Leave Program/Erase Mode */
1159:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
1160:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1161:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
1162:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
1163:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1164:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return erase result */
1165:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
1166:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1167:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1168:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashEraseRange
1169:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1170:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1171:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1172:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1173:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _Flash_Erase_Command
1174:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Issues the FCU command to erase a flash block
1175:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
1176:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash programming,
1177:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                this function can reside and execute in Flash.
1178:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : erase_addr = An address in the block to be erased
1179:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
1180:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
1181:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1182:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Flash_Erase_Command(volatile uint8_t * const erase_addr)
1183:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1184:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare timer wait count variable */
1185:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t wait_cnt;
1186:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare erase operation result container variable */
1187:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
1188:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1189:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Send the FCU Command */
1190:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *erase_addr = 0x20;
1191:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *erase_addr = 0xD0;
1192:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1193:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set the wait counter timeout duration */
1194:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_ERASE;
1195:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1196:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Wait while FCU operation is in progress */
1197:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
1198:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1199:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Decrement the wait counter */
1200:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
1201:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1202:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the wait counter has reached zero */
1203:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
1204:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1205:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1206:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Maximum timeout duration for erasing a ROM block has
1207:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                elapsed, assuming operation failure - reset the FCU */
1208:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
1209:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1210:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
1211:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_FAILURE;
1212:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1213:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1214:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1215:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check if erase operation was successful by checking
1216:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        bit 'ERSERR' (bit5) and 'ILGLERR' (bit 6) of register 'FSTATR0' */
1217:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check FCU error */
1218:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((FLASH.FSTATR0.BIT.ILGLERR == 1) || (FLASH.FSTATR0.BIT.ERSERR  == 1))
1219:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1220:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;
1221:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1222:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1223:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return erase result */
1224:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
1225:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1226:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1227:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _Flash_Erase_Command
1228:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1229:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1230:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1231:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashWrite
1232:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Writes bytes into flash.
1233:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
1234:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash programming,
1235:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                this function can reside and execute in Flash.
1236:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : flash_addr - Flash address location to write to. This address
1237:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                             must be on a program boundary (e.g. RX62N has
1238:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                             256-byte ROM writes and 8-byte DF writes).
1239:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                buffer_addr - Address location of data buffer to write
1240:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                              into flash.
1241:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                bytes - The number of bytes to write. You must always pass a
1242:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                        multiple of the programming size (e.g. RX62N has
1243:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                        256-byte ROM writes and 8-byte DF writes).
1244:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
1245:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
1246:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_ALIGNED = Flash address was not on correct boundary
1247:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_BYTES = Number of bytes did not match programming
1248:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                                    size of ROM or DF.
1249:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_ADDRESS = Invalid address
1250:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_ERROR_BOUNDARY = (ROM) Cannot write across flash areas.
1251:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Flash is busy with another operation
1252:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashWrite_1 ( uint32_t flash_addr,
1254:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                          uint32_t buffer_addr,
1255:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                          uint16_t bytes )
1256:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1257:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare result container and number of bytes to write variables */
1258:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
1259:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t num_byte_to_write;
1260:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1261:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Take off upper byte since for programming/erase addresses for ROM are
1262:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	the same as read addresses except upper byte is masked off to 0's.
1263:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	Data Flash addresses are not affected. */
1264:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     flash_addr &= 0x00FFFFFF;
1265:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1266:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* ROM area or Data Flash area - Check for DF first */
1267:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( flash_addr >= DF_ADDRESS && (flash_addr < DF_ADDRESS + DF_SIZE) )
1268:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1269:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the number of bytes were passed is a multiple of the
1270:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****            programming size for the data flash */
1271:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( bytes & (DF_PROGRAM_SIZE_SMALL-1) )
1272:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1273:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return number of bytes not a multiple of the programming size */
1274:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_BYTES;
1275:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1276:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check for an address on a programming boundary. */
1277:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( flash_addr & (DF_PROGRAM_SIZE_SMALL-1) )
1278:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1279:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return address not on a programming boundary */
1280:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_ALIGNED;
1281:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1282:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1283:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check for ROM area */
1284:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( (flash_addr >= ROM_PE_ADDR) &&	(flash_addr < ROM_PE_ADDR + ROM_SIZE) )
1285:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1286:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the number of bytes were passed is a multiple of the
1287:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****            programming size for ROM */
1288:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( bytes & (ROM_PROGRAM_SIZE-1) )
1289:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1290:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return number of bytes not a multiple of the programming size */
1291:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_BYTES;
1292:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1293:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1294:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check for an address on a programming boundary. */
1295:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( flash_addr & (ROM_PROGRAM_SIZE-1))
1296:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1297:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return address not on a ROM programming byte boundary */
1298:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_ALIGNED;
1299:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1300:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1301:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check for attempts to program over flash area boundaries. These
1302:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****            boundaries are defined in r_flash_api_rx600.h as 'ROM_AREA_#'. */
1303:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1304:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if((flash_addr < (ROM_AREA_0))	&& ((flash_addr + bytes) > ROM_AREA_0))
1305:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1306:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return cannot write across a flash area boundary */
1307:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_BOUNDARY;
1308:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1309:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1310:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
1311:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1312:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return invalid flash address */
1313:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_ERROR_ADDRESS;
1314:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1315:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1316:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state */
1317:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_WRITING) != FLASH_SUCCESS )
1318:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1319:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
1320:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
1321:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1322:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1323:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Do we want to program a DF area or ROM area? */
1324:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( flash_addr < GET_BLOCK_ADDR(ROM_NUM_BLOCKS-1) )
1325:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1326:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set current FCU mode to data flash PE */
1327:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = FLD_PE_MODE;
1328:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1329:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
1330:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1331:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set FCU to ROM PE mode */
1332:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = ROM_PE_MODE;
1333:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1334:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1335:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter PE mode, check if operation is successful */
1336:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode( flash_addr, bytes ) != FLASH_SUCCESS)
1337:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1338:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
1339:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
1340:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1341:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return operation failure */
1342:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
1343:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1344:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1345:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifdef  IGNORE_LOCK_BITS
1346:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Cancel the ROM Protect feature
1347:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        NOTE: If you are using block locking feature to protect your data,
1348:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        then comment out 'IGNORE_LOCK_BITS' in Flash_API_RX600_UserConfig.h */
1349:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FPROTR.WORD = 0x5501;
1350:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
1351:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Only disable lock bit protection if user has specified to
1352:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        do so earlier */
1353:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( lock_bit_protection == FALSE )
1354:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1355:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Cancel the ROM Protect feature */
1356:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FPROTR.WORD = 0x5501;
1357:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1358:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
1359:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1360:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1361:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check if FCU mode is set to data flash PE */
1362:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( current_mode == FLD_PE_MODE )
1363:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1364:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Iterate while there are still bytes remaining to write */
1365:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while( bytes )
1366:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1367:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Check if address is on a data flash programming boundary, and
1368:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                there is at least 1 'page' remaining to write. */
1369:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Not all MCUs have two programming sizes for the data flash. If a
1370:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                MCU only has 1 then DF_PROGRAM_SIZE_SMALL is defined and not
1371:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                DF_PROGRAM_SIZE_LARGE. */
1372:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(DF_PROGRAM_SIZE_LARGE)
1373:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( (bytes >= DF_PROGRAM_SIZE_LARGE) &&
1374:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     ((flash_addr & (DF_PROGRAM_SIZE_LARGE-1)) == 0x00))
1375:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
1376:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Use large write size since it's more time efficient */
1377:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 num_byte_to_write = DF_PROGRAM_SIZE_LARGE;
1378:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
1379:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             else
1380:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
1381:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Cannot use large program size, use small */
1382:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 num_byte_to_write = DF_PROGRAM_SIZE_SMALL;
1383:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
1384:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
1385:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Set the next data transfer size to be DF_PROGRAM_SIZE_SMALL */
1386:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             num_byte_to_write = DF_PROGRAM_SIZE_SMALL;
1387:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
1388:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1389:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Call the Programming function, store the operation status in the
1390:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                container variable, result */
1391:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = _DataFlash_Write( flash_addr, buffer_addr, num_byte_to_write);
1392:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1393:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Check the container variable result for errors */
1394:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( result != FLASH_SUCCESS )
1395:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
1396:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Data flash write error detected, break from flash write
1397:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                    while loop prematurely */
1398:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 break;
1399:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
1400:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1401:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Increment the flash address and the buffer address by the size
1402:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                of the transfer thats just completed */
1403:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             flash_addr += num_byte_to_write;
1404:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             buffer_addr += num_byte_to_write;
1405:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1406:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Decrement the number of bytes remaining by the size of the last
1407:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                flash write */
1408:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             bytes -= num_byte_to_write;
1409:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1410:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1411:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Catch-all - FCU mode must be ROM PE */
1412:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
1413:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1414:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Iterate loop while there are still bytes remaining to write */
1415:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while( bytes )
1416:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1417:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Call the Programming function */
1418:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = _ROM_Write(flash_addr, buffer_addr);
1419:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1420:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Check for errors */
1421:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( result != FLASH_SUCCESS )
1422:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
1423:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 /* Stop programming */
1424:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 break;
1425:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
1426:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1427:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Increment the flash address and the buffer address by the size
1428:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                of the transfer thats just completed */
1429:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             flash_addr += ROM_PROGRAM_SIZE;
1430:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             buffer_addr += ROM_PROGRAM_SIZE;
1431:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1432:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Decrement the number of bytes remaining by the size of the last
1433:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                flash write */
1434:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             bytes -= ROM_PROGRAM_SIZE;
1435:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1436:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1437:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1438:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Leave Program/Erase Mode */
1439:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
1440:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1441:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
1442:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
1443:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1444:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return flash programming result */
1445:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
1446:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1447:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1448:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashWrite
1449:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1450:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1451:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1452:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _Notify_Peripheral_Clock
1453:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Notifies FCU or clock supplied to flash unit
1454:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
1455:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash programming,
1456:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                this function can reside and execute in Flash.
1457:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : flash_addr - Flash address you will be erasing or writing to
1458:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
1459:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
1460:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1461:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Notify_Peripheral_Clock(volatile uint8_t * flash_addr)
1462:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1463:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare wait counter variable */
1464:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t wait_cnt;
1465:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1466:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Notify Peripheral Clock(PCK) */
1467:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set frequency of PCK */
1468:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.PCKAR.WORD = (FLASH_CLOCK_FREQUENCY / 1000000);
1469:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1470:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Execute Peripheral Clock Notification Commands */
1471:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *flash_addr = 0xE9;
1472:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *flash_addr = 0x03;
1473:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint16_t *)flash_addr = 0x0F0F;
1474:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint16_t *)flash_addr = 0x0F0F;
1475:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint16_t *)flash_addr = 0x0F0F;
1476:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *flash_addr = 0xD0;
1477:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1478:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set timeout wait duration */
1479:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_NOTIFY_PERIPHERAL_CLOCK;
1480:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1481:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check FRDY */
1482:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
1483:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1484:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Decrement wait counter */
1485:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
1486:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1487:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if wait counter has reached zero */
1488:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
1489:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1490:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Timeout duration elapsed, assuming operation failure - Reset
1491:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                FCU */
1492:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
1493:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1494:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure  */
1495:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_FAILURE;
1496:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1497:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1498:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1499:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check ILGLERR */
1500:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ILGLERR == 1)
1501:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1502:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure*/
1503:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
1504:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1505:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1506:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return FLASH_SUCCESS, operation success */
1507:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
1508:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1509:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1510:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function _Notify_Peripheral_Clock
1511:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1512:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1513:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1514:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _Flash_Reset
1515:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Reset the FCU.
1516:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                NOTE: This function MUST execute from in RAM for 'ROM Area'
1517:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, but if you are ONLY doing Data Flash
1518:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                programming, this function can reside and execute in Flash.
1519:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : none
1520:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : none
1521:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1522:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** void _Flash_Reset(void)
1523:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1524:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare wait counter variable */
1525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t	wait_cnt;
1526:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1527:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Reset the FCU */
1528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FRESETR.WORD = 0xCC01;
1529:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1530:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Give FCU time to reset */
1531:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_tRESW;
1532:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1533:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Wait until the timer reaches zero */
1534:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(wait_cnt != 0)
1535:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1536:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Decrement the timer count each iteration */
1537:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
1538:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1539:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1540:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
1541:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
1542:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1543:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* FCU is not reset anymore */
1544:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FRESETR.WORD = 0xCC00;
1545:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1546:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter ROM Read mode */
1547:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FENTRYR.WORD = 0xAA00;
1548:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1549:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Flash write/erase disabled */
1550:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FWEPROR.BYTE = 0x02;
1551:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1552:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1553:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _Flash_Reset
1554:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1555:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1556:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1557:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashGetStatus
1558:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Returns the current state of the flash
1559:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : none
1560:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Flash is ready to use
1561:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Flash is busy with another operation
1562:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1563:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashGetStatus(void)
1564:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1565:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1566:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return flash status */
1567:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( flash_state == FLASH_READY )
1568:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1569:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_SUCCESS;
1570:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1571:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1572:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_BUSY;
1573:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1574:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1575:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashGetStatus
1576:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1577:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1578:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1579:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _FlashGrabState
1580:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Attempt to grab the flash state to perform an operation
1581:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : Which state to attempt to transition to
1582:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = State was grabbed
1583:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Flash is busy with another operation
1584:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1585:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _FlashGrabState(enum Flash_States new_state)
1586:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
   9                             		.loc 1 1586 0
  10                             	.LVL0:
1587:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Variable used in trying to grab semaphore. Using the xchg instruction
1588:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****        makes this atomic */
1589:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     int32_t semaphore = 1;
1590:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1591:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Try to grab semaphore to change state */
1592:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*    xchg(&semaphore, &flash_semaphore);*/
1593:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1594:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1595:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  11                             		.loc 1 1595 0
  12                             	 ; 1595 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  13 0000 03                      		nop
  14                             	 ; 0 "" 2
1596:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  15                             		.loc 1 1596 0
  16                             	 ; 1596 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  17 0001 03                      		nop
  18                             	 ; 0 "" 2
1597:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  19                             		.loc 1 1597 0
  20                             	 ; 1597 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  21 0002 03                      		nop
  22                             	 ; 0 "" 2
1598:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  23                             		.loc 1 1598 0
  24                             	 ; 1598 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  25 0003 03                      		nop
  26                             	 ; 0 "" 2
1599:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  27                             		.loc 1 1599 0
  28                             	 ; 1599 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  29 0004 03                      		nop
  30                             	 ; 0 "" 2
  31                             	.LVL1:
1600:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1601:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     semaphore = flash_semaphore;
1602:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1603:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  32                             		.loc 1 1603 0
  33                             	 ; 1603 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  34 0005 03                      		nop
  35                             	 ; 0 "" 2
1604:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  36                             		.loc 1 1604 0
  37                             	 ; 1604 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  38 0006 03                      		nop
  39                             	 ; 0 "" 2
1605:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  40                             		.loc 1 1605 0
  41                             	 ; 1605 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  42 0007 03                      		nop
  43                             	 ; 0 "" 2
1606:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  44                             		.loc 1 1606 0
  45                             	 ; 1606 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  46 0008 03                      		nop
  47                             	 ; 0 "" 2
1607:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
  48                             		.loc 1 1607 0
  49                             	 ; 1607 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
  50 0009 03                      		nop
  51                             	 ; 0 "" 2
1608:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1609:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1610:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check to see if semaphore was successfully taken */
1611:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( semaphore == 0 )
  52                             		.loc 1 1611 0
  53 000a FB E2 00 00 00 00       		mov.L	#_flash_semaphore, r14
  54 0010 EC EE                   		mov.L	[r14], r14
  55                             	.LVL2:
  56 0012 61 0E                   		cmp	#0, r14
  57 0014 21 0D                   		bne	.L3
1612:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1613:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Semaphore grabbed, we can change state */
1614:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         flash_state = new_state;
  58                             		.loc 1 1614 0
  59 0016 FB 42 00 00 00 00       		mov.L	#_flash_state, r4
  60 001c E3 41                   		mov.L	r1, [r4]
1615:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1616:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return success */
1617:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_SUCCESS;
  61                             		.loc 1 1617 0
  62 001e CF E1                   		mov.B	r14, r1
  63                             	.LVL3:
  64 0020 0C                      		bra	.L2
  65                             	.LVL4:
  66                             	.L3:
1618:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1619:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
1620:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1621:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is on-going */
1622:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
  67                             		.loc 1 1622 0
  68 0021 66 51                   		mov	#5, r1
  69                             	.LVL5:
  70 0023 03                      		.balign 2,3,1
  71                             	.L2:
1623:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1624:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
  72                             		.loc 1 1624 0
  73 0024 5B 11                   		movu.B	r1, r1
  74 0026 02                      		rts
  75                             	.LFE16:
  78                             	__FlashReleaseState:
  79                             	.LFB17:
1625:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1626:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _FlashGrabState
1627:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1628:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1629:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1630:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: _FlashReleaseState
1631:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Release state so another flash operation can take place
1632:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : none
1633:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : none
1634:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1635:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static void _FlashReleaseState(void)
1636:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
  80                             		.loc 1 1636 0
1637:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set current FCU mode to READ */
1638:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     current_mode = READ_MODE;
  81                             		.loc 1 1638 0
  82 0027 FB E2 00 00 00 00       		mov.L	#_current_mode, r14
  83 002d F8 E4 00                		mov.B	#0, [r14]
1639:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1640:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Done with programming */
1641:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     flash_state = FLASH_READY;
  84                             		.loc 1 1641 0
  85 0030 FB E2 00 00 00 00       		mov.L	#_flash_state, r14
  86 0036 F8 E6 00                		mov.L	#0, [r14]
1642:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1643:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release hold on semaphore */
1644:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     flash_semaphore = 0;
  87                             		.loc 1 1644 0
  88 0039 FB E2 00 00 00 00       		mov.L	#_flash_semaphore, r14
  89 003f F8 E6 00                		mov.L	#0, [r14]
  90 0042 02                      		rts
  91                             	.LFE17:
  93                             		.section	.text.get_block_addresses,"ax",@progbits
  94                             		.global	_get_block_addresses
  96                             	_get_block_addresses:
  97                             	.LFB0:
  46:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
  98                             		.loc 1 46 0
  99                             	.LVL6:
  49:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( blockNum < ROM_NUM_BLOCKS)
 100                             		.loc 1 49 0
 101 0000 CF 1E                   		mov.B	r1, r14
 102 0002 5B 11                   		movu.B	r1, r1
 103 0004 61 0E                   		cmp	#0, r14
 104 0006 29 0A                   		blt	.L6
  51:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         retVal = (0x00FFFFFF-FLASH_ERASE_BLK_SZ +1)- (FLASH_ERASE_BLK_SZ*blockNum);
 105                             		.loc 1 51 0
 106 0008 FB EA FF 1F             		mov.L	#0x1fff, r14
 107 000c FF 01 1E                		sub	r1, r14, r1
 108                             	.LVL7:
 109 000f 0D                      		bra	.L8
 110                             	.L6:
  55:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         retVal = 0x00100000 + (FLASH_ERASE_BLK_SZ*(blockNum-(ROM_NUM_BLOCKS)));
 111                             		.loc 1 55 0
 112 0010 72 11 80 01             		add	#0x180, r1
 113                             		.balign 2,3,1
 114                             	.L8:
 115 0014 6C B1                   		shll	#11, r1
 116                             	.LVL8:
  58:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 117                             		.loc 1 58 0
 118 0016 02                      		rts
 119                             	.LFE0:
 121 0017 03                      		.section	.text._Flash_Init,"ax",@progbits
 122                             		.global	__Flash_Init
 124                             	__Flash_Init:
 125                             	.LFB1:
 117:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 126                             		.loc 1 117 0
 125:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.ROMAEIE = 0;
 127                             		.loc 1 125 0
 128 0000 FB EE 11 C4 7F          		mov.L	#0x7fc411, r14
 129 0005 CC E4                   		mov.B	[r14], r4
 130 0007 7A 74                   		bclr	#7, r4
 131 0009 C3 E4                   		mov.B	r4, [r14]
 126:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.CMDLKIE = 0;
 132                             		.loc 1 126 0
 133 000b CC E4                   		mov.B	[r14], r4
 134 000d 7A 44                   		bclr	#4, r4
 135 000f C3 E4                   		mov.B	r4, [r14]
 127:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.DFLAEIE = 0;
 136                             		.loc 1 127 0
 137 0011 CC E4                   		mov.B	[r14], r4
 138 0013 7A 34                   		bclr	#3, r4
 139 0015 C3 E4                   		mov.B	r4, [r14]
 128:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.DFLRPEIE = 0;
 140                             		.loc 1 128 0
 141 0017 CC E4                   		mov.B	[r14], r4
 142 0019 7A 14                   		bclr	#1, r4
 143 001b C3 E4                   		mov.B	r4, [r14]
 129:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FAEINT.BIT.DFLWPEIE = 0;
 144                             		.loc 1 129 0
 145 001d CC E4                   		mov.B	[r14], r4
 146 001f 7A 04                   		bclr	#0, r4
 147 0021 C3 E4                   		mov.B	r4, [r14]
 134:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IPR(FCU, FIFERR) = 0;
 148                             		.loc 1 134 0
 149 0023 FB EE 00 70 08          		mov.L	#0x87000, r14
 150 0028 CE E4 01 03             		mov.B	769[r14], r4
 151 002c 75 24 F0                		and #-16, r4
 152 002f CB E4 01 03             		mov.B	r4, 769[r14]
 135:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IEN(FCU, FIFERR) = 0;
 153                             		.loc 1 135 0
 154 0033 CE E4 02 02             		mov.B	514[r14], r4
 155 0037 7A 54                   		bclr	#5, r4
 156 0039 CB E4 02 02             		mov.B	r4, 514[r14]
 138:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IPR(FCU, FRDYI) = 0;
 157                             		.loc 1 138 0
 158 003d CE E4 02 03             		mov.B	770[r14], r4
 159 0041 75 24 F0                		and #-16, r4
 160 0044 CB E4 02 03             		mov.B	r4, 770[r14]
 139:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     IEN(FCU, FRDYI) = 0;
 161                             		.loc 1 139 0
 162 0048 CE E4 02 02             		mov.B	514[r14], r4
 163 004c 7A 74                   		bclr	#7, r4
 164 004e CB E4 02 02             		mov.B	r4, 514[r14]
 145:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FENTRYR.WORD != 0x0000)
 165                             		.loc 1 145 0
 166 0052 FB EE B2 FF 7F          		mov.L	#0x7fffb2, r14
 167 0057 5C E4                   		movu.W	[r14], r4
 168 0059 61 04                   		cmp	#0, r4
 169 005b 15                      		beq	.L10
 149:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FENTRYR.WORD = 0xAA00;
 170                             		.loc 1 149 0
 171 005c F8 E9 00 AA             		mov.W	#0xffffaa00, [r14]
 172                             		.balign 2,3,4
 173                             	.L10:
 153:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FCURAME.WORD = 0xC401;
 174                             		.loc 1 153 0
 175 0060 FB EE 54 C4 7F          		mov.L	#0x7fc454, r14
 176 0065 F8 E9 01 C4             		mov.W	#0xffffc401, [r14]
 177                             	.LVL9:
 162:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     dst = (uint32_t *)FCU_RAM_TOP;
 178                             		.loc 1 162 0
 179 0069 FB EE 00 80 7F          		mov.L	#0x7f8000, r14
 180                             	.LVL10:
 181                             		.balign 2,3,5
 182                             	.L11:
 116:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t _Flash_Init(void)
 183                             		.loc 1 116 0 discriminator 2
 184 006e 70 E4 00 60 80 FE       		add	#0xfe806000, r14, r4
 168:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *dst = *src;
 185                             		.loc 1 168 0 discriminator 2
 186 0074 EC 44                   		mov.L	[r4], r4
 187 0076 FD 22 E4                		mov.L	r4, [r14+]
 188                             	.LVL11:
 165:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     for( i=0; i<(FCU_RAM_SIZE/4); i++)
 189                             		.loc 1 165 0 discriminator 2
 190 0079 77 0E 00 A0 7F          		cmp	#0x7fa000, r14
 191 007e 21 F0                   		bne	.L11
 176:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     fcu_transfer_complete = 1;
 192                             		.loc 1 176 0
 193 0080 FB E2 00 00 00 00       		mov.L	#_fcu_transfer_complete, r14
 194                             	.LVL12:
 195 0086 F8 E4 01                		mov.B	#1, [r14]
 180:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 196                             		.loc 1 180 0
 197 0089 66 01                   		mov.L	#0, r1
 198 008b 02                      		rts
 199                             	.LFE1:
 201                             		.section	.text.R_FlashDataAreaAccess,"ax",@progbits
 202                             		.global	_R_FlashDataAreaAccess
 204                             	_R_FlashDataAreaAccess:
 205                             	.LFB5:
 523:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 206                             		.loc 1 523 0
 207                             	.LVL13:
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLRE0.WORD = 0x2D00 | (read_en_mask & 0x00FF);
 208                             		.loc 1 525 0
 209 0000 5B 11                   		movu.B	r1, r1
 210                             	.LVL14:
 211 0002 76 31 00 2D             		or	#0x2d00, r1
 212 0006 FB EE 40 C4 7F          		mov.L	#0x7fc440, r14
 213 000b D3 E1                   		mov.W	r1, [r14]
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLWE0.WORD = 0x1E00 |  (write_en_mask & 0x00FF);
 214                             		.loc 1 528 0
 215 000d 5B 22                   		movu.B	r2, r2
 216                             	.LVL15:
 217 000f 76 32 00 1E             		or	#0x1e00, r2
 218 0013 FB EE 50 C4 7F          		mov.L	#0x7fc450, r14
 219 0018 D3 E2                   		mov.W	r2, [r14]
 220 001a 02                      		rts
 221                             	.LFE5:
 223                             		.section	.PRAM
 224                             		.global	__Flash_Reset
 226                             	__Flash_Reset:
 227                             	.LFB14:
1523:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 228                             		.loc 1 1523 0
 229 0043 60 40                   		sub	#4, r0
 230                             	.LCFI0:
1528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FRESETR.WORD = 0xCC01;
 231                             		.loc 1 1528 0
 232 0045 FB EE B6 FF 7F          		mov.L	#0x7fffb6, r14
 233 004a F8 E9 01 CC             		mov.W	#0xffffcc01, [r14]
1531:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_tRESW;
 234                             		.loc 1 1531 0
 235 004e F8 0A BC 02             		mov.L	#0x2bc, [r0]
 236                             	.LVL16:
1534:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(wait_cnt != 0)
 237                             		.loc 1 1534 0
 238 0052 08                      		bra	.L18
 239                             	.L19:
1537:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 240                             		.loc 1 1537 0
 241 0053 EC 0E                   		mov.L	[r0], r14
 242 0055 60 1E                   		sub	#1, r14
 243                             	.LVL17:
 244 0057 E3 0E                   		mov.L	r14, [r0]
 245                             	.LVL18:
 246 0059 03                      		.balign 2,3,1
 247                             	.L18:
1534:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(wait_cnt != 0)
 248                             		.loc 1 1534 0 discriminator 1
 249 005a EC 0E                   		mov.L	[r0], r14
 250 005c 61 0E                   		cmp	#0, r14
 251 005e 21 F5                   		bne	.L19
1541:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
 252                             		.loc 1 1541 0
 253 0060 39 C7 FF                		bsr	__FlashReleaseState
 254                             	.LVL19:
1544:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FRESETR.WORD = 0xCC00;
 255                             		.loc 1 1544 0
 256 0063 FB EE B6 FF 7F          		mov.L	#0x7fffb6, r14
 257 0068 F8 E9 00 CC             		mov.W	#0xffffcc00, [r14]
1547:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FENTRYR.WORD = 0xAA00;
 258                             		.loc 1 1547 0
 259 006c FB EE B2 FF 7F          		mov.L	#0x7fffb2, r14
 260 0071 F8 E9 00 AA             		mov.W	#0xffffaa00, [r14]
1550:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FWEPROR.BYTE = 0x02;
 261                             		.loc 1 1550 0
 262 0075 FB EE 96 C2 08          		mov.L	#0x8c296, r14
 263 007a F8 E4 02                		mov.B	#2, [r14]
1551:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 264                             		.loc 1 1551 0
 265 007d 67 01                   		rtsd	#4
 266                             	.LFE14:
 269                             	__Enter_PE_Mode.isra.0:
 270                             	.LFB30:
 620:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** static uint8_t _Enter_PE_Mode( uint32_t flash_addr, uint16_t bytes )
 271                             		.loc 1 620 0
 272                             	.LVL20:
 273 007f 7E A7                   		push.l	r7
 274                             	.LCFI1:
 275 0081 60 40                   		sub	#4, r0
 276                             	.LCFI2:
 277 0083 EF 17                   		mov.L	r1, r7
 278                             	.LVL21:
 624:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( !fcu_transfer_complete )
 279                             		.loc 1 624 0
 280 0085 FB E2 00 00 00 00       		mov.L	#_fcu_transfer_complete, r14
 281 008b 58 EE                   		movu.B	[r14], r14
 282 008d 61 0E                   		cmp	#0, r14
 283 008f 20 1C                   		beq	.L22
 284                             	.LVL22:
 285 0091 03                      		.balign 2,3,4
 286                             	.L25:
 636:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FENTRYR.WORD = 0xAA00;
 287                             		.loc 1 636 0
 288 0092 FB EE B2 FF 7F          		mov.L	#0x7fffb2, r14
 289 0097 F8 E9 00 AA             		mov.W	#0xffffaa00, [r14]
 640:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
 290                             		.loc 1 640 0
 291                             	 ; 640 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
 292 009b 03                      		nop
 293                             	 ; 0 "" 2
 641:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     __asm__("nop");
 294                             		.loc 1 641 0
 295                             	 ; 641 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.c" 1
 296 009c 03                      		nop
 297                             	 ; 0 "" 2
 644:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( current_mode == ROM_PE_MODE)
 298                             		.loc 1 644 0
 299 009d FB 42 00 00 00 00       		mov.L	#_current_mode, r4
 300 00a3 58 44                   		movu.B	[r4], r4
 301 00a5 61 14                   		cmp	#1, r4
 302 00a7 21 22                   		bne	.L47
 303 00a9 2E 0F                   		bra	.L23
 304                             	.LVL23:
 305                             	.L22:
 628:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( _Flash_Init() != FLASH_SUCCESS )
 306                             		.loc 1 628 0
 307 00ab 05 00 00 00             		bsr	__Flash_Init
 308                             	.LVL24:
 309 00af 76 21 FF 00             		and #0xff, r1
 310 00b3 20 DF                   		beq	.L25
 311 00b5 38 DA 00                		bra	.L35
 312                             	.L23:
 647:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FRDYIE.BIT.FRDYIE = 0;
 313                             		.loc 1 647 0
 314 00b8 FB 4E 12 C4 7F          		mov.L	#0x7fc412, r4
 315 00bd CC 43                   		mov.B	[r4], r3
 316 00bf 7A 03                   		bclr	#0, r3
 317 00c1 C3 43                   		mov.B	r3, [r4]
 648:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FENTRYR.WORD = 0xAA01;
 318                             		.loc 1 648 0
 319 00c3 F8 E9 01 AA             		mov.W	#0xffffaa01, [r14]
 320 00c7 2E 39                   		bra	.L27
 321                             	.L47:
 651:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( current_mode == FLD_PE_MODE )
 322                             		.loc 1 651 0
 323 00c9 61 24                   		cmp	#2, r4
 324 00cb 3B C4 00                		bne	.L35
 654:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FRDYIE.BIT.FRDYIE = 0;
 325                             		.loc 1 654 0
 326 00ce FB 4E 12 C4 7F          		mov.L	#0x7fc412, r4
 327 00d3 CC 43                   		mov.B	[r4], r3
 328 00d5 7A 03                   		bclr	#0, r3
 329 00d7 C3 43                   		mov.B	r3, [r4]
 657:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FENTRYR.WORD = 0xAA80;
 330                             		.loc 1 657 0
 331 00d9 F8 E9 80 AA             		mov.W	#0xffffaa80, [r14]
 332                             	.LVL25:
 333                             	.LBB9:
 334                             	.LBB10:
 203:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ILGLERR == 1)
 335                             		.loc 1 203 0
 336 00dd FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 337 00e2 CC EE                   		mov.B [r14], r14
 338 00e4 75 2E 40                		and #64, r14
 339 00e7 20 11                   		beq	.L29
 207:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(FLASH.FASTAT.BYTE != 0x10)
 340                             		.loc 1 207 0
 341 00e9 FB EE 10 C4 7F          		mov.L	#0x7fc410, r14
 342 00ee 58 E4                   		movu.B	[r14], r4
 343 00f0 75 54 10                		cmp	#16, r4
 344 00f3 15                      		beq	.L29
 211:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             FLASH.FASTAT.BYTE = 0x10;
 345                             		.loc 1 211 0
 346 00f4 F8 E4 10                		mov.B	#16, [r14]
 347 00f7 03                      		.balign 2,3,4
 348                             	.L29:
 216:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *ptrb = 0x50;
 349                             		.loc 1 216 0
 350 00f8 FB EE 00 00 10          		mov.L	#0x100000, r14
 351 00fd F8 E4 50                		mov.B	#0x50, [r14]
 352                             	.LVL26:
 353                             		.balign 2,3,4
 354                             	.L27:
 355                             	.LBE10:
 356                             	.LBE9:
 674:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FWEPROR.BYTE = 0x01;
 357                             		.loc 1 674 0
 358 0100 FB EE 96 C2 08          		mov.L	#0x8c296, r14
 359 0105 F8 E4 01                		mov.B	#1, [r14]
 677:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(		(FLASH.FSTATR0.BIT.ILGLERR == 1)
 360                             		.loc 1 677 0
 361 0108 FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 362 010d CC E4                   		mov.B [r14], r4
 363 010f 75 24 40                		and #64, r4
 364 0112 21 7D                   		bne	.L35
 678:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||	(FLASH.FSTATR0.BIT.ERSERR  == 1)
 365                             		.loc 1 678 0
 366 0114 CC E4                   		mov.B [r14], r4
 367 0116 75 24 20                		and #32, r4
 368 0119 21 76                   		bne	.L35
 679:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||	(FLASH.FSTATR0.BIT.PRGERR  == 1)
 369                             		.loc 1 679 0
 370 011b CC E4                   		mov.B [r14], r4
 371 011d 75 24 10                		and #16, r4
 372 0120 21 6F                   		bne	.L35
 373                             	.LVL27:
 374                             	.LBB11:
 375                             	.LBB12:
 680:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||	(FLASH.FSTATR1.BIT.FCUERR  == 1))
 376                             		.loc 1 680 0
 377 0122 FB 4E B1 FF 7F          		mov.L	#0x7fffb1, r4
 378 0127 CC 41                   		mov.B [r4], r1
 379 0129 76 21 80 00             		and #0x80, r1
 380 012d 21 62                   		bne	.L35
 687:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( fcu_pclk_command == 0 )
 381                             		.loc 1 687 0
 382 012f FB 42 00 00 00 00       		mov.L	#_fcu_pclk_command, r4
 383 0135 58 44                   		movu.B	[r4], r4
 384 0137 61 04                   		cmp	#0, r4
 385 0139 21 59                   		bne	.L26
 691:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FRDYIE.BIT.FRDYIE = 0;
 386                             		.loc 1 691 0
 387 013b FB 4E 12 C4 7F          		mov.L	#0x7fc412, r4
 388 0140 CC 43                   		mov.B	[r4], r3
 389 0142 7A 03                   		bclr	#0, r3
 390 0144 C3 43                   		mov.B	r3, [r4]
 391                             	.LVL28:
 392                             	.LBB13:
 393                             	.LBB14:
1468:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.PCKAR.WORD = (FLASH_CLOCK_FREQUENCY / 1000000);
 394                             		.loc 1 1468 0
 395 0146 FB 4E E8 FF 7F          		mov.L	#0x7fffe8, r4
 396 014b 3D 40 14                		mov.W	#20, [r4]
1471:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *flash_addr = 0xE9;
 397                             		.loc 1 1471 0
 398 014e F8 74 E9                		mov.B	#-23, [r7]
1472:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *flash_addr = 0x03;
 399                             		.loc 1 1472 0
 400 0151 3C 70 03                		mov.B	#3, [r7]
1473:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint16_t *)flash_addr = 0x0F0F;
 401                             		.loc 1 1473 0
 402 0154 F8 79 0F 0F             		mov.W	#0xf0f, [r7]
1474:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint16_t *)flash_addr = 0x0F0F;
 403                             		.loc 1 1474 0
 404 0158 F8 79 0F 0F             		mov.W	#0xf0f, [r7]
1475:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint16_t *)flash_addr = 0x0F0F;
 405                             		.loc 1 1475 0
 406 015c F8 79 0F 0F             		mov.W	#0xf0f, [r7]
1476:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *flash_addr = 0xD0;
 407                             		.loc 1 1476 0
 408 0160 F8 74 D0                		mov.B	#-48, [r7]
1479:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_NOTIFY_PERIPHERAL_CLOCK;
 409                             		.loc 1 1479 0
 410 0163 F8 0A B8 0B             		mov.L	#0xbb8, [r0]
 411                             	.LVL29:
 412 0167 2E 13                   		bra	.L31
 413                             	.LVL30:
 414                             	.L33:
1485:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 415                             		.loc 1 1485 0
 416 0169 EC 07                   		mov.L	[r0], r7
 417 016b 60 17                   		sub	#1, r7
 418                             	.LVL31:
 419 016d E3 07                   		mov.L	r7, [r0]
 420                             	.LVL32:
1488:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
 421                             		.loc 1 1488 0
 422 016f EC 07                   		mov.L	[r0], r7
 423                             	.LVL33:
 424 0171 61 07                   		cmp	#0, r7
 425 0173 1F                      		bne	.L31
1492:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
 426                             		.loc 1 1492 0
 427 0174 05 00 00 00             		bsr	__Flash_Reset
 428                             	.LVL34:
 429 0178 2E 17                   		bra	.L35
 430                             	.L31:
1482:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 431                             		.loc 1 1482 0
 432 017a CC E7                   		mov.B [r14], r7
 433 017c 76 27 80 00             		and #0x80, r7
 434 0180 20 E9                   		beq	.L33
1500:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ILGLERR == 1)
 435                             		.loc 1 1500 0
 436 0182 FB 7E B0 FF 7F          		mov.L	#0x7fffb0, r7
 437 0187 CC 71                   		mov.B [r7], r1
 438 0189 75 21 40                		and #64, r1
 439 018c 21 03                   		bne	.L35
 440 018e 08                      		bra	.L48
 441                             	.LVL35:
 442                             	.L35:
 443                             	.LBE14:
 444                             	.LBE13:
 683:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 445                             		.loc 1 683 0
 446 018f 66 61                   		mov	#6, r1
 447 0191 03                      		.balign 2,3,1
 448                             	.L26:
 449 0192 5B 11                   		movu.B	r1, r1
 450 0194 2E 0D                   		bra	.L49
 451                             	.LVL36:
 452                             	.L48:
 701:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fcu_pclk_command = 1;
 453                             		.loc 1 701 0
 454 0196 FB 72 00 00 00 00       		mov.L	#_fcu_pclk_command, r7
 455 019c 3C 70 01                		mov.B	#1, [r7]
 456 019f 2E F3                   		bra	.L26
 457                             	.LVL37:
 458                             	.L49:
 459                             	.LBE12:
 460                             	.LBE11:
 706:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 461                             		.loc 1 706 0
 462 01a1 3F 77 02                		rtsd	#8, r7-r7
 463                             	.LFE30:
 466                             	__Exit_PE_Mode:
 467                             	.LFB8:
 721:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 468                             		.loc 1 721 0
 469 01a4 60 40                   		sub	#4, r0
 470                             	.LCFI3:
 471                             	.LVL38:
 729:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_ERASE;
 472                             		.loc 1 729 0
 473 01a6 F8 02 00 5A 62 02       		mov.L	#0x2625a00, [r0]
 474                             	.LVL39:
 732:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 475                             		.loc 1 732 0
 476 01ac FB 4E B0 FF 7F          		mov.L	#0x7fffb0, r4
 477 01b1 2E 12                   		bra	.L52
 478                             	.L54:
 735:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 479                             		.loc 1 735 0
 480 01b3 EC 0E                   		mov.L	[r0], r14
 481 01b5 60 1E                   		sub	#1, r14
 482                             	.LVL40:
 483 01b7 E3 0E                   		mov.L	r14, [r0]
 484                             	.LVL41:
 738:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
 485                             		.loc 1 738 0
 486 01b9 EC 0E                   		mov.L	[r0], r14
 487                             	.LVL42:
 488 01bb 61 0E                   		cmp	#0, r14
 489 01bd 1E                      		bne	.L52
 742:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
 490                             		.loc 1 742 0
 491 01be 05 00 00 00             		bsr	__Flash_Reset
 492                             	.LVL43:
 745:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             break;
 493                             		.loc 1 745 0
 494 01c2 0A                      		bra	.L53
 495                             	.L52:
 732:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 496                             		.loc 1 732 0 discriminator 1
 497 01c3 CC 4E                   		mov.B [r4], r14
 498 01c5 76 2E 80 00             		and #0x80, r14
 499 01c9 20 EA                   		beq	.L54
 500 01cb 03                      		.balign 2,3,4
 501                             	.L53:
 750:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(		(FLASH.FSTATR0.BIT.ILGLERR == 1)
 502                             		.loc 1 750 0
 503 01cc FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 504 01d1 CC E4                   		mov.B [r14], r4
 505 01d3 75 24 40                		and #64, r4
 506 01d6 21 10                   		bne	.L55
 751:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||  (FLASH.FSTATR0.BIT.ERSERR  == 1)
 507                             		.loc 1 751 0
 508 01d8 CC E4                   		mov.B [r14], r4
 509 01da 75 24 20                		and #32, r4
 510 01dd 19                      		bne	.L55
 752:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             ||  (FLASH.FSTATR0.BIT.PRGERR  == 1))
 511                             		.loc 1 752 0
 512 01de CC EE                   		mov.B [r14], r14
 513 01e0 75 2E 10                		and #16, r14
 514 01e3 20 47                   		beq	.L56
 515 01e5 03                      		.balign 2,3,4
 516                             	.L55:
 756:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(FLASH.FSTATR0.BIT.ILGLERR == 1)
 517                             		.loc 1 756 0
 518 01e6 FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 519 01eb CC EE                   		mov.B [r14], r14
 520 01ed 75 2E 40                		and #64, r14
 521 01f0 20 10                   		beq	.L57
 760:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(FLASH.FASTAT.BYTE != 0x10)
 522                             		.loc 1 760 0
 523 01f2 FB EE 10 C4 7F          		mov.L	#0x7fc410, r14
 524 01f7 58 E4                   		movu.B	[r14], r4
 525 01f9 75 54 10                		cmp	#16, r4
 526 01fc 14                      		beq	.L57
 764:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 FLASH.FASTAT.BYTE = 0x10;
 527                             		.loc 1 764 0
 528 01fd F8 E4 10                		mov.B	#16, [r14]
 529                             		.balign 2,3,5
 530                             	.L57:
 769:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( current_mode == ROM_PE_MODE )
 531                             		.loc 1 769 0
 532 0200 FB E2 00 00 00 00       		mov.L	#_current_mode, r14
 533 0206 58 EE                   		movu.B	[r14], r14
 534 0208 61 1E                   		cmp	#1, r14
 535 020a 21 16                   		bne	.L58
 775:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( FLASH.FENTRYR.BIT.FENTRY0 == 1 )
 536                             		.loc 1 775 0
 537 020c FB EE B2 FF 7F          		mov.L	#0x7fffb2, r14
 538 0211 DC EE                   		mov.W	[r14], r14
 539 0213 FD 74 CE 01             		tst	#1, r14
 540 0217 20 13                   		beq	.L56
 541                             	.LVL44:
 780:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 *pAddr = 0x50;
 542                             		.loc 1 780 0
 543 0219 FB E2 00 00 F8 00       		mov.L	#0xf80000, r14
 544 021f 0F                      		bra	.L71
 545                             	.LVL45:
 546                             	.L58:
 789:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *pAddr = 0x50;
 547                             		.loc 1 789 0
 548 0220 FB EE 00 00 10          		mov.L	#0x100000, r14
 549                             	.LVL46:
 550 0225 03                      		.balign 2,3,4
 551                             	.L71:
 552 0226 F8 E4 50                		mov.B	#0x50, [r14]
 553 0229 03                      		.balign 2,3,4
 554                             	.L56:
 794:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FENTRYR.WORD = 0xAA00;
 555                             		.loc 1 794 0
 556 022a FB EE B2 FF 7F          		mov.L	#0x7fffb2, r14
 557 022f F8 E9 00 AA             		mov.W	#0xffffaa00, [r14]
 797:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FRDYIE.BIT.FRDYIE = 0;
 558                             		.loc 1 797 0
 559 0233 FB EE 12 C4 7F          		mov.L	#0x7fc412, r14
 560 0238 CC E4                   		mov.B	[r14], r4
 561 023a 7A 04                   		bclr	#0, r4
 562 023c C3 E4                   		mov.B	r4, [r14]
 800:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FWEPROR.BYTE = 0x02;
 563                             		.loc 1 800 0
 564 023e FB EE 96 C2 08          		mov.L	#0x8c296, r14
 565 0243 F8 E4 02                		mov.B	#2, [r14]
 802:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 566                             		.loc 1 802 0
 567 0246 67 01                   		rtsd	#4
 568                             	.LFE8:
 570                             		.global	_R_FlashWrite_1
 572                             	_R_FlashWrite_1:
 573                             	.LFB12:
1256:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 574                             		.loc 1 1256 0
 575                             	.LVL47:
 576 0248 6E 7C                   		pushm	r7-r12
 577                             	.LCFI4:
 578 024a 60 80                   		sub	#8, r0
 579                             	.LCFI5:
 580 024c EF 2B                   		mov.L	r2, r11
 581 024e DF 3A                   		mov.W	r3, r10
 582                             	.LVL48:
1264:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     flash_addr &= 0x00FFFFFF;
 583                             		.loc 1 1264 0
 584 0250 EF 17                   		mov.L	r1, r7
 585 0252 74 27 FF FF FF 00       		and #0xffffff, r7
 586                             	.LVL49:
1267:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( flash_addr >= DF_ADDRESS && (flash_addr < DF_ADDRESS + DF_SIZE) )
 587                             		.loc 1 1267 0
 588 0258 73 7C 00 00 F0          		add	#0xfff00000, r7, r12
 589 025d 76 0C FF 1F             		cmp	#0x1fff, r12
 590 0261 24 0F                   		bgtu	.L73
1271:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( bytes & (DF_PROGRAM_SIZE_SMALL-1) )
 591                             		.loc 1 1271 0
 592 0263 FD 74 CA 01             		tst	#1, r10
 593 0267 3B 44 01                		bne	.L101
1277:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( flash_addr & (DF_PROGRAM_SIZE_SMALL-1) )
 594                             		.loc 1 1277 0
 595 026a FD 74 C1 01             		tst	#1, r1
 596 026e 2E 1D                   		bra	.L118
 597                             	.L73:
1284:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( (flash_addr >= ROM_PE_ADDR) &&	(flash_addr < ROM_PE_ADDR + ROM_SIZE) )
 598                             		.loc 1 1284 0
 599 0270 70 7C 00 00 08 FF       		add	#0xff080000, r7, r12
 600 0276 77 0C FF FF 07          		cmp	#0x7ffff, r12
 601 027b 25 05 38 2B 01          		bgtu	.L100
1288:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( bytes & (ROM_PROGRAM_SIZE-1) )
 602                             		.loc 1 1288 0
 603 0280 FD 74 CA 07             		tst	#7, r10
 604 0284 3B 27 01                		bne	.L101
1295:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( flash_addr & (ROM_PROGRAM_SIZE-1))
 605                             		.loc 1 1295 0
 606 0287 FD 74 C1 07             		tst	#7, r1
 607                             	.L118:
 608 028b 3B 23 01                		bne	.L102
1317:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_WRITING) != FLASH_SUCCESS )
 609                             		.loc 1 1317 0
 610 028e 66 21                   		mov.L	#2, r1
 611 0290 39 70 FD                		bsr	__FlashGrabState
 612                             	.LVL50:
 613 0293 76 21 FF 00             		and #0xff, r1
 614 0297 3B 1A 01                		bne	.L103
 615                             	.LVL51:
 616 029a FB C2 00 00 00 00       		mov.L	#_current_mode, r12
1327:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = FLD_PE_MODE;
 617                             		.loc 1 1327 0
 618 02a0 74 07 FF FF FB 00       		cmp	#0xfbffff, r7
 619 02a6 FC DB E4                		scgtu.L	r14
 620 02a9 66 24                   		mov.L	#2, r4
 621 02ab FF 0E E4                		sub	r14, r4, r14
 622 02ae C3 CE                   		mov.B	r14, [r12]
1336:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode( flash_addr, bytes ) != FLASH_SUCCESS)
 623                             		.loc 1 1336 0
 624 02b0 EF 71                   		mov.L	r7, r1
 625 02b2 39 CD FD                		bsr	__Enter_PE_Mode.isra.0
 626                             	.LVL52:
 627 02b5 76 21 FF 00             		and #0xff, r1
 628 02b9 11                      		beq	.L78
1339:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
 629                             		.loc 1 1339 0
 630 02ba 39 6D FD                		bsr	__FlashReleaseState
 631                             	.LVL53:
1342:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 632                             		.loc 1 1342 0
 633 02bd 66 67                   		mov	#6, r7
 634                             	.LVL54:
 635 02bf 38 F5 00                		bra	.L74
 636                             	.LVL55:
 637                             	.L78:
1349:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FPROTR.WORD = 0x5501;
 638                             		.loc 1 1349 0
 639 02c2 FB EE B4 FF 7F          		mov.L	#0x7fffb4, r14
 640 02c7 F8 E9 01 55             		mov.W	#0x5501, [r14]
1362:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( current_mode == FLD_PE_MODE )
 641                             		.loc 1 1362 0
 642 02cb 58 CC                   		movu.B	[r12], r12
 643 02cd 61 2C                   		cmp	#2, r12
 644 02cf 20 73                   		beq	.L81
1362:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( current_mode == FLD_PE_MODE )
 645                             		.loc 1 1362 0 is_stmt 0 discriminator 1
 646 02d1 EF B2                   		mov.L	r11, r2
1253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashWrite_1 ( uint32_t flash_addr,
 647                             		.loc 1 1253 0 is_stmt 1 discriminator 1
 648 02d3 4B BA                   		add	r11, r10
 649                             	.LVL56:
1415:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while( bytes )
 650                             		.loc 1 1415 0 discriminator 1
 651 02d5 5F AA                   		movu.W	r10, r10
1253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashWrite_1 ( uint32_t flash_addr,
 652                             		.loc 1 1253 0 discriminator 1
 653 02d7 43 B7                   		sub	r11, r7
 654                             	.LVL57:
 655                             	.LBB21:
 656                             	.LBB22:
 577:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 657                             		.loc 1 577 0 discriminator 1
 658 02d9 FB CE B0 FF 7F          		mov.L	#0x7fffb0, r12
 659 02de EF CE                   		mov.L	r12, r14
 660 02e0 38 B8 00                		bra	.L80
 661                             	.LVL58:
 662                             	.L90:
 663                             	.LBE22:
 664                             	.LBE21:
1373:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( (bytes >= DF_PROGRAM_SIZE_LARGE) &&
 665                             		.loc 1 1373 0
 666 02e3 61 7E                   		cmp	#7, r14
 667 02e5 25 07                   		bleu	.L104
1373:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( (bytes >= DF_PROGRAM_SIZE_LARGE) &&
 668                             		.loc 1 1373 0 is_stmt 0 discriminator 1
 669 02e7 FD 74 C7 07             		tst	#7, r7
 670 02eb 14                      		beq	.L105
 671                             		.balign 2,3,1
 672                             	.L104:
1373:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( (bytes >= DF_PROGRAM_SIZE_LARGE) &&
 673                             		.loc 1 1373 0
 674 02ec 66 2E                   		mov	#2, r14
 675 02ee 0C                      		bra	.L82
 676                             	.L105:
1377:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 num_byte_to_write = DF_PROGRAM_SIZE_LARGE;
 677                             		.loc 1 1377 0 is_stmt 1
 678 02ef 66 8E                   		mov	#8, r14
 679 02f1 03                      		.balign 2,3,1
 680                             	.L82:
 681                             	.LBB24:
 682                             	.LBB25:
 251:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         size = size >> 1;
 683                             		.loc 1 251 0
 684 02f2 5B E5                   		movu.B	r14, r5
 685 02f4 68 15                   		shlr	#1, r5
 686                             	.LVL59:
 254:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)DF_ADDRESS = 0xE8;
 687                             		.loc 1 254 0
 688 02f6 F8 44 E8                		mov.B	#-24, [r4]
 257:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)DF_ADDRESS = size;
 689                             		.loc 1 257 0
 690 02f9 C3 45                   		mov.B	r5, [r4]
 691 02fb EF B1                   		mov.L	r11, r1
 692 02fd 66 03                   		mov.L	#0, r3
 693 02ff 09                      		bra	.L83
 694                             	.LVL60:
 695                             	.L84:
 263:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *(volatile uint16_t *)address = *(uint16_t *)data;
 696                             		.loc 1 263 0
 697 0300 FD 29 1F                		mov.W	[r1+], r15
 698                             	.LVL61:
 699 0303 D3 7F                   		mov.W	r15, [r7]
 700                             	.LVL62:
 701 0305 62 13                   		add	#1, r3
 702                             	.LVL63:
 703 0307 03                      		.balign 2,3,1
 704                             	.L83:
 260:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while(n++ < size)
 705                             		.loc 1 260 0
 706 0308 5B 3F                   		movu.B	r3, r15
 707 030a 47 F5                   		cmp	r15, r5
 708 030c 24 F4                   		bgtu	.L84
 270:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)(DF_ADDRESS) = 0xD0;
 709                             		.loc 1 270 0
 710 030e F8 44 D0                		mov.B	#-48, [r4]
 273:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt = WAIT_MAX_DF_WRITE;
 711                             		.loc 1 273 0
 712 0311 3E 01 00                		mov.L	#0, 4[r0]
 713 0314 2E 15                   		bra	.L85
 714                             	.L87:
 279:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             wait_cnt--;
 715                             		.loc 1 279 0
 716 0316 A8 0B                   		mov.L	4[r0], r3
 717 0318 60 13                   		sub	#1, r3
 718                             	.LVL64:
 719 031a A0 0B                   		mov.L	r3, 4[r0]
 720                             	.LVL65:
 282:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(wait_cnt == 0)
 721                             		.loc 1 282 0
 722 031c A8 0B                   		mov.L	4[r0], r3
 723                             	.LVL66:
 724 031e 61 03                   		cmp	#0, r3
 725 0320 19                      		bne	.L85
 726                             	.LVL67:
 727 0321 03                      		.balign 2,3,3
 728                             	.L94:
 286:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 _Flash_Reset();
 729                             		.loc 1 286 0
 730 0322 05 00 00 00             		bsr	__Flash_Reset
 731                             	.LVL68:
 732 0326 38 92 00                		bra	.L86
 733                             	.LVL69:
 734                             	.L85:
 276:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while(FLASH.FSTATR0.BIT.FRDY == 0)
 735                             		.loc 1 276 0
 736 0329 CC C3                   		mov.B [r12], r3
 737 032b 76 23 80 00             		and #0x80, r3
 738 032f 20 E7                   		beq	.L87
 294:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if((FLASH.FSTATR0.BIT.ILGLERR == 1) || (FLASH.FSTATR0.BIT.PRGERR == 1))
 739                             		.loc 1 294 0
 740 0331 CC 23                   		mov.B [r2], r3
 741 0333 75 23 40                		and #64, r3
 742 0336 3B 82 00                		bne	.L86
 743 0339 CC 23                   		mov.B [r2], r3
 744 033b 75 23 10                		and #16, r3
 745 033e 21 7A                   		bne	.L86
 746 0340 2E 7C                   		bra	.L113
 747                             	.LVL70:
 748                             	.L81:
 254:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)DF_ADDRESS = 0xE8;
 749                             		.loc 1 254 0 discriminator 1
 750 0342 FB 4E 00 00 10          		mov.L	#0x100000, r4
 276:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while(FLASH.FSTATR0.BIT.FRDY == 0)
 751                             		.loc 1 276 0 discriminator 1
 752 0347 FB CE B0 FF 7F          		mov.L	#0x7fffb0, r12
 753 034c EF C2                   		mov.L	r12, r2
 754                             	.LVL71:
 755                             		.balign 2,3,1
 756                             	.L115:
 757                             	.LBE25:
 758                             	.LBE24:
1365:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while( bytes )
 759                             		.loc 1 1365 0 discriminator 1
 760 034e 5F AE                   		movu.W	r10, r14
 761 0350 61 0E                   		cmp	#0, r14
 762 0352 21 91                   		bne	.L90
 763                             	.LVL72:
 764                             		.balign 2,3,1
 765                             	.L97:
 766                             	.LBB28:
 767                             	.LBB26:
 257:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)DF_ADDRESS = size;
 768                             		.loc 1 257 0
 769 0354 66 07                   		mov	#0, r7
 770 0356 2E 4A                   		bra	.L91
 771                             	.LVL73:
 772                             	.L96:
 773                             	.LBE26:
 774                             	.LBE28:
1253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashWrite_1 ( uint32_t flash_addr,
 775                             		.loc 1 1253 0
 776 0358 FF 2B 27                		add	r2, r7, r11
 777                             	.LBB29:
 778                             	.LBB23:
 557:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint8_t *)address = 0xE8;
 779                             		.loc 1 557 0
 780 035b F8 B4 E8                		mov.B	#-24, [r11]
 558:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint8_t *)address = size;
 781                             		.loc 1 558 0
 782 035e F8 B4 04                		mov.B	#4, [r11]
 783                             	.LVL74:
1253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashWrite_1 ( uint32_t flash_addr,
 784                             		.loc 1 1253 0
 785 0361 71 24 08                		add	#8, r2, r4
 786                             	.LVL75:
 787                             		.balign 2,3,5
 788                             	.L92:
 564:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint16_t *)address = *(uint16_t *)data;
 789                             		.loc 1 564 0
 790 0364 FD 29 23                		mov.W	[r2+], r3
 791                             	.LVL76:
 792 0367 D3 B3                   		mov.W	r3, [r11]
 793                             	.LVL77:
 561:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     for(i = 0; i < size; i++)
 794                             		.loc 1 561 0
 795 0369 47 42                   		cmp	r4, r2
 796 036b 21 F9                   		bne	.L92
 571:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *(volatile uint8_t *)address = 0xD0;
 797                             		.loc 1 571 0
 798 036d F8 B4 D0                		mov.B	#-48, [r11]
 574:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_ROM_WRITE;
 799                             		.loc 1 574 0
 800 0370 3E 00 00                		mov.L	#0, [r0]
 801 0373 2E 0F                   		bra	.L93
 802                             	.L95:
 580:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 803                             		.loc 1 580 0
 804 0375 EC 0B                   		mov.L	[r0], r11
 805 0377 60 1B                   		sub	#1, r11
 806                             	.LVL78:
 807 0379 E3 0B                   		mov.L	r11, [r0]
 808                             	.LVL79:
 583:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
 809                             		.loc 1 583 0
 810 037b EC 0B                   		mov.L	[r0], r11
 811                             	.LVL80:
 812 037d 61 0B                   		cmp	#0, r11
 813 037f 20 A3                   		beq	.L94
 814 0381 03                      		.balign 2,3,5
 815                             	.L93:
 577:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 816                             		.loc 1 577 0
 817 0382 CC CB                   		mov.B [r12], r11
 818 0384 76 2B 80 00             		and #0x80, r11
 819 0388 20 ED                   		beq	.L95
 595:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((FLASH.FSTATR0.BIT.ILGLERR == 1) || (FLASH.FSTATR0.BIT.PRGERR  == 1))
 820                             		.loc 1 595 0
 821 038a CC EB                   		mov.B [r14], r11
 822 038c 75 2B 40                		and #64, r11
 823 038f 21 29                   		bne	.L86
 824 0391 CC EB                   		mov.B [r14], r11
 825 0393 75 2B 10                		and #16, r11
 826 0396 21 22                   		bne	.L86
 827                             	.LVL81:
 828                             		.balign 2,3,1
 829                             	.L80:
 830                             	.LBE23:
 831                             	.LBE29:
1415:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while( bytes )
 832                             		.loc 1 1415 0 discriminator 1
 833 0398 5F 2B                   		movu.W	r2, r11
 834 039a 47 BA                   		cmp	r11, r10
 835 039c 21 BC                   		bne	.L96
 836 039e 2E B6                   		bra	.L97
 837                             	.LVL82:
 838                             	.L91:
1439:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
 839                             		.loc 1 1439 0
 840 03a0 39 04 FE                		bsr	__Exit_PE_Mode
 841                             	.LVL83:
1442:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
 842                             		.loc 1 1442 0
 843 03a3 39 84 FC                		bsr	__FlashReleaseState
 844                             	.LVL84:
1445:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
 845                             		.loc 1 1445 0
 846 03a6 2E 0E                   		bra	.L74
 847                             	.LVL85:
 848                             	.L100:
1313:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_ERROR_ADDRESS;
 849                             		.loc 1 1313 0
 850 03a8 66 37                   		mov	#3, r7
 851                             	.LVL86:
 852 03aa 0A                      		bra	.L74
 853                             	.LVL87:
 854                             	.L101:
1274:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_BYTES;
 855                             		.loc 1 1274 0
 856 03ab 66 27                   		mov	#2, r7
 857                             	.LVL88:
 858 03ad 0F                      		bra	.L74
 859                             	.LVL89:
 860                             	.L102:
1280:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_ALIGNED;
 861                             		.loc 1 1280 0
 862 03ae 66 17                   		mov	#1, r7
 863                             	.LVL90:
 864 03b0 0C                      		bra	.L74
 865                             	.LVL91:
 866                             	.L103:
1320:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
 867                             		.loc 1 1320 0
 868 03b1 66 57                   		mov	#5, r7
 869                             	.LVL92:
 870 03b3 03                      		.balign 2,3,1
 871                             	.L74:
 872 03b4 5B 71                   		movu.B	r7, r1
 873 03b6 2E 10                   		bra	.L114
 874                             	.LVL93:
 875                             	.L86:
 876                             	.LBB30:
 877                             	.LBB27:
 257:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         *(volatile uint8_t *)DF_ADDRESS = size;
 878                             		.loc 1 257 0
 879 03b8 66 67                   		mov	#6, r7
 880 03ba 2E E6                   		bra	.L91
 881                             	.LVL94:
 882                             	.L113:
 883                             	.LBE27:
 884                             	.LBE30:
1403:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             flash_addr += num_byte_to_write;
 885                             		.loc 1 1403 0
 886 03bc 5B EE                   		movu.B	r14, r14
 887 03be 4B E7                   		add	r14, r7
 888                             	.LVL95:
1404:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             buffer_addr += num_byte_to_write;
 889                             		.loc 1 1404 0
 890 03c0 4B EB                   		add	r14, r11
 891                             	.LVL96:
1408:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             bytes -= num_byte_to_write;
 892                             		.loc 1 1408 0
 893 03c2 43 EA                   		sub	r14, r10
 894                             	.LVL97:
 895 03c4 2E 8A                   		bra	.L115
 896                             	.LVL98:
 897                             	.L114:
1446:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 898                             		.loc 1 1446 0
 899 03c6 3F 7C 08                		rtsd	#32, r7-r12
 900                             	.LFE12:
 903                             	__Flash_Erase_Command:
 904                             	.LFB11:
1183:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 905                             		.loc 1 1183 0
 906                             	.LVL99:
 907 03c9 60 40                   		sub	#4, r0
 908                             	.LCFI6:
 909                             	.LVL100:
1190:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *erase_addr = 0x20;
 910                             		.loc 1 1190 0
 911 03cb 3C 10 20                		mov.B	#32, [r1]
1191:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *erase_addr = 0xD0;
 912                             		.loc 1 1191 0
 913 03ce F8 14 D0                		mov.B	#-48, [r1]
1194:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_ERASE;
 914                             		.loc 1 1194 0
 915 03d1 F8 02 00 5A 62 02       		mov.L	#0x2625a00, [r0]
 916                             	.LVL101:
1197:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 917                             		.loc 1 1197 0
 918 03d7 FB 3E B0 FF 7F          		mov.L	#0x7fffb0, r3
 919 03dc 2E 13                   		bra	.L120
 920                             	.L122:
1200:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
 921                             		.loc 1 1200 0
 922 03de EC 0E                   		mov.L	[r0], r14
 923 03e0 60 1E                   		sub	#1, r14
 924                             	.LVL102:
 925 03e2 E3 0E                   		mov.L	r14, [r0]
 926                             	.LVL103:
1203:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
 927                             		.loc 1 1203 0
 928 03e4 EC 0E                   		mov.L	[r0], r14
 929                             	.LVL104:
 930 03e6 61 0E                   		cmp	#0, r14
 931 03e8 1F                      		bne	.L120
1208:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
 932                             		.loc 1 1208 0
 933 03e9 05 00 00 00             		bsr	__Flash_Reset
 934                             	.LVL105:
 935 03ed 2E 1D                   		bra	.L125
 936                             	.LVL106:
 937                             	.L120:
1197:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
 938                             		.loc 1 1197 0 discriminator 1
 939 03ef FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 940 03f4 CC 34                   		mov.B [r3], r4
 941 03f6 76 24 80 00             		and #0x80, r4
 942 03fa 20 E4                   		beq	.L122
 943                             	.LBB33:
 944                             	.LBB34:
1218:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((FLASH.FSTATR0.BIT.ILGLERR == 1) || (FLASH.FSTATR0.BIT.ERSERR  == 1))
 945                             		.loc 1 1218 0
 946 03fc CC E4                   		mov.B [r14], r4
 947 03fe 75 24 40                		and #64, r4
 948 0401 19                      		bne	.L125
 949                             	.LVL107:
 950 0402 CC E1                   		mov.B [r14], r1
 951 0404 75 21 20                		and #32, r1
 952 0407 21 03                   		bne	.L125
 953 0409 0B                      		bra	.L121
 954                             	.L125:
1220:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;
 955                             		.loc 1 1220 0
 956 040a 66 61                   		mov	#6, r1
 957                             	.LVL108:
 958                             		.balign 2,3,2
 959                             	.L121:
 960                             	.LBE34:
 961                             	.LBE33:
1225:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 962                             		.loc 1 1225 0
 963 040c 75 21 26                		and #38, r1
 964 040f 67 01                   		rtsd	#4
 965                             	.LFE11:
 967                             		.global	_R_FlashEraseRange
 969                             	_R_FlashEraseRange:
 970                             	.LFB10:
1078:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 971                             		.loc 1 1078 0
 972                             	.LVL109:
 973 0411 6E 7B                   		pushm	r7-r11
 974                             	.LCFI7:
 975                             	.LVL110:
1085:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     start_addr &= 0x00FFFFFF;
 976                             		.loc 1 1085 0
 977 0413 EF 1B                   		mov.L	r1, r11
 978 0415 74 2B FF FF FF 00       		and #0xffffff, r11
 979                             	.LVL111:
1088:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( start_addr >= DF_ADDRESS && start_addr < (DF_ADDRESS + DF_SIZE) )
 980                             		.loc 1 1088 0
 981 041b 73 B7 00 00 F0          		add	#0xfff00000, r11, r7
 982 0420 76 07 FF 1F             		cmp	#0x1fff, r7
 983 0424 24 5C                   		bgtu	.L133
 984 0426 EF 2A                   		mov.L	r2, r10
1092:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( bytes & (DF_BLOCK_SIZE-1) )
 985                             		.loc 1 1092 0
 986 0428 FD 74 C2 7F             		tst	#0x7f, r2
 987 042c 21 57                   		bne	.L134
1098:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( start_addr & (DF_BLOCK_SIZE-1) )
 988                             		.loc 1 1098 0
 989 042e FD 74 C1 7F             		tst	#0x7f, r1
 990 0432 21 54                   		bne	.L135
1111:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_ERASING) != FLASH_SUCCESS )
 991                             		.loc 1 1111 0
 992 0434 66 11                   		mov.L	#1, r1
 993 0436 39 CA FB                		bsr	__FlashGrabState
 994                             	.LVL112:
 995 0439 76 21 FF 00             		and #0xff, r1
 996 043d 21 4C                   		bne	.L136
1118:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     current_mode = FLD_PE_MODE;
 997                             		.loc 1 1118 0
 998 043f FB 72 00 00 00 00       		mov.L	#_current_mode, r7
 999 0445 3C 70 02                		mov.B	#2, [r7]
1121:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode(start_addr, 0) != FLASH_SUCCESS)
 1000                             		.loc 1 1121 0
 1001 0448 EF B1                   		mov.L	r11, r1
 1002 044a 39 35 FC                		bsr	__Enter_PE_Mode.isra.0
 1003                             	.LVL113:
 1004 044d 5B 11                   		movu.B	r1, r1
 1005 044f 61 01                   		cmp	#0, r1
 1006 0451 10                      		beq	.L130
1124:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
 1007                             		.loc 1 1124 0
 1008 0452 39 D5 FB                		bsr	__FlashReleaseState
 1009                             	.LVL114:
1127:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 1010                             		.loc 1 1127 0
 1011 0455 66 67                   		mov	#6, r7
 1012 0457 2E 35                   		bra	.L129
 1013                             	.L130:
1134:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FPROTR.WORD = 0x5501;
 1014                             		.loc 1 1134 0
 1015 0459 FB EE B4 FF 7F          		mov.L	#0x7fffb4, r14
 1016 045e F8 E9 01 55             		mov.W	#0x5501, [r14]
1080:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
 1017                             		.loc 1 1080 0
 1018 0462 CF 17                   		mov.B	r1, r7
1077:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashEraseRange(uint32_t start_addr, uint32_t bytes)
 1019                             		.loc 1 1077 0
 1020 0464 4B AB                   		add	r10, r11
 1021                             	.LVL115:
1146:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(0 < bytes)
 1022                             		.loc 1 1146 0
 1023 0466 2E 0E                   		bra	.L131
 1024                             	.LVL116:
 1025                             	.L132:
1149:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = _Flash_Erase_Command((volatile uint8_t *)start_addr);
 1026                             		.loc 1 1149 0
 1027 0468 FF 01 AB                		sub	r10, r11, r1
 1028 046b 39 5E FF                		bsr	__Flash_Erase_Command
 1029                             	.LVL117:
 1030 046e CF 17                   		mov.B	r1, r7
 1031                             	.LVL118:
1155:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         bytes -= DF_BLOCK_SIZE;
 1032                             		.loc 1 1155 0
 1033 0470 71 AA 80                		add	#0xffffff80, r10
 1034                             	.LVL119:
 1035 0473 03                      		.balign 2,3,1
 1036                             	.L131:
1146:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(0 < bytes)
 1037                             		.loc 1 1146 0 discriminator 1
 1038 0474 61 0A                   		cmp	#0, r10
 1039 0476 21 F2                   		bne	.L132
1159:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
 1040                             		.loc 1 1159 0
 1041 0478 39 2C FD                		bsr	__Exit_PE_Mode
 1042                             	.LVL120:
1162:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
 1043                             		.loc 1 1162 0
 1044 047b 39 AC FB                		bsr	__FlashReleaseState
 1045                             	.LVL121:
1165:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
 1046                             		.loc 1 1165 0
 1047 047e 2E 0E                   		bra	.L129
 1048                             	.LVL122:
 1049                             	.L133:
1107:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_ERROR_ADDRESS;
 1050                             		.loc 1 1107 0
 1051 0480 66 37                   		mov	#3, r7
 1052 0482 0A                      		bra	.L129
 1053                             	.L134:
1095:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_BYTES;
 1054                             		.loc 1 1095 0
 1055 0483 66 27                   		mov	#2, r7
 1056 0485 0F                      		bra	.L129
 1057                             	.L135:
1101:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             return FLASH_ERROR_ALIGNED;
 1058                             		.loc 1 1101 0
 1059 0486 66 17                   		mov	#1, r7
 1060 0488 0C                      		bra	.L129
 1061                             	.LVL123:
 1062                             	.L136:
1114:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
 1063                             		.loc 1 1114 0
 1064 0489 66 57                   		mov	#5, r7
 1065                             	.LVL124:
 1066 048b 03                      		.balign 2,3,1
 1067                             	.L129:
1166:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 1068                             		.loc 1 1166 0
 1069 048c 5B 71                   		movu.B	r7, r1
 1070 048e 3F 7B 05                		rtsd	#20, r7-r11
 1071                             	.LFE10:
 1073                             		.global	_R_FlashErase_1
 1075                             	_R_FlashErase_1:
 1076                             	.LFB9:
 819:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1077                             		.loc 1 819 0
 1078                             	.LVL125:
 1079 0491 6E 7B                   		pushm	r7-r11
 1080                             	.LCFI8:
 1081 0493 60 40                   		sub	#4, r0
 1082                             	.LCFI9:
 1083 0495 CF 1A                   		mov.B	r1, r10
 1084                             	.LVL126:
 827:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_ERASING) != FLASH_SUCCESS )
 1085                             		.loc 1 827 0
 1086 0497 66 11                   		mov.L	#1, r1
 1087                             	.LVL127:
 1088 0499 39 67 FB                		bsr	__FlashGrabState
 1089                             	.LVL128:
 1090 049c 76 21 FF 00             		and #0xff, r1
 1091 04a0 21 5F                   		bne	.L147
 1092                             	.LVL129:
 1093                             	.LBB38:
 1094                             	.LBB39:
 834:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     pAddr = GET_BLOCK_ADDR( block );
 1095                             		.loc 1 834 0
 1096 04a2 CF A1                   		mov.B	r10, r1
 1097 04a4 05 00 00 00             		bsr	_get_block_addresses
 1098                             	.LVL130:
 1099 04a8 EF 17                   		mov.L	r1, r7
 1100                             	.LVL131:
 837:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( block >= BLOCK_DB0 )
 1101                             		.loc 1 837 0
 1102 04aa CF AA                   		mov.B	r10, r10
 1103 04ac FB B2 00 00 00 00       		mov.L	#_current_mode, r11
 840:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = FLD_PE_MODE;
 1104                             		.loc 1 840 0
 1105 04b2 61 0A                   		cmp	#0, r10
 1106 04b4 FC DB A8                		scge.L	r10
 1107                             	.LVL132:
 1108 04b7 66 2E                   		mov.L	#2, r14
 1109 04b9 FF 0A AE                		sub	r10, r14, r10
 1110 04bc C3 BA                   		mov.B	r10, [r11]
 849:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode(pAddr, 0) != FLASH_SUCCESS)
 1111                             		.loc 1 849 0
 1112 04be 39 C1 FB                		bsr	__Enter_PE_Mode.isra.0
 1113                             	.LVL133:
 1114 04c1 76 21 FF 00             		and #0xff, r1
 1115 04c5 10                      		beq	.L142
 852:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
 1116                             		.loc 1 852 0
 1117 04c6 39 61 FB                		bsr	__FlashReleaseState
 1118                             	.LVL134:
 855:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 1119                             		.loc 1 855 0
 1120 04c9 66 61                   		mov	#6, r1
 1121 04cb 2E 37                   		bra	.L139
 1122                             	.L142:
 862:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.FPROTR.WORD = 0x5501;
 1123                             		.loc 1 862 0
 1124 04cd FB AE B4 FF 7F          		mov.L	#0x7fffb4, r10
 1125 04d2 F8 A9 01 55             		mov.W	#0x5501, [r10]
 883:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( FLD_PE_MODE == current_mode )
 1126                             		.loc 1 883 0
 1127 04d6 58 BA                   		movu.B	[r11], r10
 1128 04d8 61 2A                   		cmp	#2, r10
 1129 04da 21 14                   		bne	.L144
 818:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashErase_1(uint8_t block)
 1130                             		.loc 1 818 0
 1131 04dc 72 7A 00 08             		add	#0x800, r7, r10
 1132                             		.balign 2,3,1
 1133                             	.L145:
 1134                             	.LBB40:
 895:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = _Flash_Erase_Command((volatile uint8_t *)pAddr);
 1135                             		.loc 1 895 0
 1136 04e0 EF 71                   		mov.L	r7, r1
 1137 04e2 39 E7 FE                		bsr	__Flash_Erase_Command
 1138                             	.LVL135:
 898:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             pAddr += DF_BLOCK_SIZE;
 1139                             		.loc 1 898 0
 1140 04e5 72 77 80 00             		add	#0x80, r7
 1141                             	.LVL136:
 891:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         while(0 < bytes_to_erase)
 1142                             		.loc 1 891 0
 1143 04e9 47 A7                   		cmp	r10, r7
 1144 04eb 21 F5                   		bne	.L145
 1145 04ed 0F                      		bra	.L146
 1146                             	.LVL137:
 1147                             	.L144:
 1148                             	.LBE40:
 908:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = _Flash_Erase_Command((volatile uint8_t *)pAddr);
 1149                             		.loc 1 908 0
 1150 04ee EF 71                   		mov.L	r7, r1
 1151 04f0 39 D9 FE                		bsr	__Flash_Erase_Command
 1152                             	.LVL138:
 1153 04f3 03                      		.balign 2,3,1
 1154                             	.L146:
 912:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
 1155                             		.loc 1 912 0
 1156 04f4 E3 01                   		mov.L	r1, [r0]
 1157 04f6 39 AE FC                		bsr	__Exit_PE_Mode
 1158                             	.LVL139:
 915:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
 1159                             		.loc 1 915 0
 1160 04f9 39 2E FB                		bsr	__FlashReleaseState
 1161                             	.LVL140:
 1162 04fc EC 01                   		mov.L	[r0], r1
 1163 04fe 0C                      		bra	.L139
 1164                             	.LVL141:
 1165                             	.L147:
 1166                             	.LBE39:
 1167                             	.LBE38:
 830:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
 1168                             		.loc 1 830 0
 1169 04ff 66 51                   		mov	#5, r1
 1170                             	.LVL142:
 1171 0501 03                      		.balign 2,3,1
 1172                             	.L139:
 919:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 1173                             		.loc 1 919 0
 1174 0502 5B 11                   		movu.B	r1, r1
 1175 0504 3F 7B 06                		rtsd	#24, r7-r11
 1176                             	.LFE9:
 1178                             		.section	.text.R_FlashDataAreaBlankCheck,"ax",@progbits
 1179                             		.global	_R_FlashDataAreaBlankCheck
 1181                             	_R_FlashDataAreaBlankCheck:
 1182                             	.LFB4:
 344:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1183                             		.loc 1 344 0
 1184                             	.LVL143:
 1185 0000 6E 7B                   		pushm	r7-r11
 1186                             	.LCFI10:
 1187 0002 60 40                   		sub	#4, r0
 1188                             	.LCFI11:
 1189 0004 EF 17                   		mov.L	r1, r7
 1190 0006 CF 2A                   		mov.B	r2, r10
 1191                             	.LVL144:
 355:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	FLS_EnterCriticalSection();
 1192                             		.loc 1 355 0
 1193 0008 05 00 00 00             		bsr	_OS_DisableInterrupt
 1194                             	.LVL145:
 1195 000c FB E2 00 00 00 00       		mov.L	#_OS_Global, r14
 1196 0012 CD EB 01                		mov.B	1[r14], r11
 1197 0015 62 1B                   		add	#1, r11
 1198 0017 C7 EB 01                		mov.B	r11, 1[r14]
 358:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( ((address > (DF_NUM_BLOCKS+BLOCK_DB0)) && (address < DF_ADDRESS))
 1199                             		.loc 1 358 0
 1200 001a 72 7B 7B FF             		add	#0xffffff7b, r7, r11
 1201 001e 77 0B 7A FF 0F          		cmp	#0xfff7a, r11
 1202 0023 24 05 38 03 01          		bleu	.L165
 359:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             || (address > DF_ADDRESS + DF_SIZE) )
 1203                             		.loc 1 359 0
 1204 0028 77 07 00 20 10          		cmp	#0x102000, r7
 1205 002d 25 05 38 F9 00          		bgtu	.L165
 365:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( (size != BLANK_CHECK_ENTIRE_BLOCK)
 1206                             		.loc 1 365 0
 1207 0032 5B AE                   		movu.B	r10, r14
 1208 0034 61 0E                   		cmp	#0, r14
 1209 0036 16                      		beq	.L152
 369:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             && (size != BLANK_CHECK_2_BYTE)
 1210                             		.loc 1 369 0
 1211 0037 61 2E                   		cmp	#2, r14
 1212 0039 3B F3 00                		bne	.L166
 1213                             		.balign 2,3,1
 1214                             	.L152:
 377:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if( _FlashGrabState(FLASH_BLANKCHECK) != FLASH_SUCCESS )
 1215                             		.loc 1 377 0
 1216 003c 66 31                   		mov.L	#3, r1
 1217 003e 05 00 00 00             		bsr	__FlashGrabState
 1218                             	.LVL146:
 1219 0042 76 21 FF 00             		and #0xff, r1
 1220 0046 3B EA 00                		bne	.L167
 385:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         current_mode = FLD_PE_MODE;
 1221                             		.loc 1 385 0
 1222 0049 FB B2 00 00 00 00       		mov.L	#_current_mode, r11
 1223 004f F8 B4 02                		mov.B	#2, [r11]
 388:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( _Enter_PE_Mode( address, 0 ) != FLASH_SUCCESS)
 1224                             		.loc 1 388 0
 1225 0052 EF 71                   		mov.L	r7, r1
 1226 0054 05 7F 00 00             		bsr	__Enter_PE_Mode.isra.0
 1227                             	.LVL147:
 1228 0058 76 21 FF 00             		and #0xff, r1
 1229 005c 10                      		beq	.L153
 391:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _FlashReleaseState();
 1230                             		.loc 1 391 0
 1231 005d 05 27 00 00             		bsr	__FlashReleaseState
 1232                             	.LVL148:
 1233 0061 38 94 00                		bra	.L168
 1234                             	.LVL149:
 1235                             	.L153:
 399:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             FLASH.FMODR.BIT.FRDMD = 1;
 1236                             		.loc 1 399 0
 1237 0064 FB EE 02 C4 7F          		mov.L	#0x7fc402, r14
 1238 0069 CC E4                   		mov.B	[r14], r4
 1239 006b 78 44                   		bset	#4, r4
 1240 006d C3 E4                   		mov.B	r4, [r14]
 402:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(size == BLANK_CHECK_2_BYTE)
 1241                             		.loc 1 402 0
 1242 006f 5B AA                   		movu.B	r10, r10
 1243 0071 61 2A                   		cmp	#2, r10
 1244 0073 21 15                   		bne	.L154
 405:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 ptrb = (volatile uint8_t *)(address & DF_MASK);
 1245                             		.loc 1 405 0
 1246 0075 EF 71                   		mov.L	r7, r1
 1247 0077 76 21 00 F8             		and #0xfffff800, r1
 1248                             	.LVL150:
 410:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 FLASH.DFLBCCNT.WORD = (uint16_t)(address & (DF_BLOCK_SIZE_LARGE-2));
 1249                             		.loc 1 410 0
 1250 007b 76 27 FE 07             		and #0x7fe, r7
 1251                             	.LVL151:
 1252 007f FB AE CA FF 7F          		mov.L	#0x7fffca, r10
 1253                             	.LVL152:
 1254 0084 D3 A7                   		mov.W	r7, [r10]
 1255 0086 2E 1C                   		bra	.L155
 1256                             	.LVL153:
 1257                             	.L154:
 420:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 if( address < (DF_NUM_BLOCKS+BLOCK_DB0) )
 1258                             		.loc 1 420 0
 1259 0088 75 57 83                		cmp	#0x83, r7
 1260 008b 24 09                   		bgtu	.L156
 1261                             	.LBB41:
 422:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 	uint32_t tmp_addr = GET_BLOCK_ADDR(address);
 1262                             		.loc 1 422 0
 1263 008d CF 71                   		mov.B	r7, r1
 1264 008f 05 00 00 00             		bsr	_get_block_addresses
 1265                             	.LVL154:
 1266 0093 0B                      		bra	.L157
 1267                             	.LVL155:
 1268                             	.L156:
 1269                             	.LBE41:
 430:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     ptrb = (volatile uint8_t *)address;
 1270                             		.loc 1 430 0
 1271 0094 EF 71                   		mov.L	r7, r1
 1272                             	.LVL156:
 1273                             		.balign 2,3,4
 1274                             	.L157:
 435:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 FLASH.DFLBCCNT.BIT.BCSIZE = 1;
 1275                             		.loc 1 435 0
 1276 0096 FB 7E CA FF 7F          		mov.L	#0x7fffca, r7
 1277                             	.LVL157:
 1278 009b DC 7A                   		mov.W	[r7], r10
 1279 009d 78 FA                   		bset	#15, r10
 1280 009f D3 7A                   		mov.W	r10, [r7]
 1281 00a1 03                      		.balign 2,3,4
 1282                             	.L155:
 439:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *ptrb = 0x71;
 1283                             		.loc 1 439 0
 1284 00a2 3C 10 71                		mov.B	#0x71, [r1]
 440:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             *ptrb = 0xD0;
 1285                             		.loc 1 440 0
 1286 00a5 F8 14 D0                		mov.B	#-48, [r1]
 443:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             wait_cnt = WAIT_MAX_BLANK_CHECK;
 1287                             		.loc 1 443 0
 1288 00a8 3E 00 00                		mov.L	#0, [r0]
 1289                             	.LVL158:
 349:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_NOT_BLANK;
 1290                             		.loc 1 349 0
 1291 00ab 66 17                   		mov	#1, r7
 446:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             while(FLASH.FSTATR0.BIT.FRDY == 0)
 1292                             		.loc 1 446 0
 1293 00ad FB BE B0 FF 7F          		mov.L	#0x7fffb0, r11
 1294 00b2 2E 14                   		bra	.L174
 1295                             	.LVL159:
 1296                             	.L160:
 449:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 wait_cnt--;
 1297                             		.loc 1 449 0
 1298 00b4 EC 0A                   		mov.L	[r0], r10
 1299 00b6 60 1A                   		sub	#1, r10
 1300                             	.LVL160:
 1301 00b8 E3 0A                   		mov.L	r10, [r0]
 1302                             	.LVL161:
 452:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 if(wait_cnt == 0)
 1303                             		.loc 1 452 0
 1304 00ba EC 0A                   		mov.L	[r0], r10
 1305                             	.LVL162:
 1306 00bc 61 0A                   		cmp	#0, r10
 1307 00be 18                      		bne	.L174
 456:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     _Flash_Reset();
 1308                             		.loc 1 456 0
 1309 00bf 05 00 00 00             		bsr	__Flash_Reset
 1310                             	.LVL163:
 459:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     result = FLASH_FAILURE;
 1311                             		.loc 1 459 0
 1312 00c3 66 67                   		mov	#6, r7
 1313                             	.LVL164:
 1314 00c5 03                      		.balign 2,3,5
 1315                             	.L174:
 446:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             while(FLASH.FSTATR0.BIT.FRDY == 0)
 1316                             		.loc 1 446 0 discriminator 1
 1317 00c6 CC BA                   		mov.B [r11], r10
 1318 00c8 76 2A 80 00             		and #0x80, r10
 1319 00cc 20 E8                   		beq	.L160
 467:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if (result == FLASH_NOT_BLANK)
 1320                             		.loc 1 467 0
 1321 00ce 5B 7A                   		movu.B	r7, r10
 1322 00d0 61 1A                   		cmp	#1, r10
 1323 00d2 21 26                   		bne	.L161
 470:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FLASH.FMODR.BIT.FRDMD = 0x00;
 1324                             		.loc 1 470 0
 1325 00d4 FB 7E 02 C4 7F          		mov.L	#0x7fc402, r7
 1326                             	.LVL165:
 1327 00d9 CC 7A                   		mov.B	[r7], r10
 1328                             	.LVL166:
 1329 00db 7A 4A                   		bclr	#4, r10
 1330 00dd C3 7A                   		mov.B	r10, [r7]
 473:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(FLASH.FSTATR0.BIT.ILGLERR == 1)	/* Check 'ILGERR' bit */
 1331                             		.loc 1 473 0
 1332 00df FB 7E B0 FF 7F          		mov.L	#0x7fffb0, r7
 1333 00e4 CC 77                   		mov.B [r7], r7
 1334 00e6 75 27 40                		and #64, r7
 1335 00e9 21 0C                   		bne	.L168
 482:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = (FLASH.DFLBCSTAT.BIT.BCST ? FLASH_NOT_BLANK : FLASH_BLANK);
 1336                             		.loc 1 482 0
 1337 00eb FB 7E CE FF 7F          		mov.L	#0x7fffce, r7
 1338 00f0 DC 77                   		mov.W	[r7], r7
 1339 00f2 64 17                   		and #1, r7
 1340                             	.LVL167:
 1341 00f4 0C                      		bra	.L161
 1342                             	.LVL168:
 1343                             	.L168:
 476:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLASH_FAILURE;
 1344                             		.loc 1 476 0
 1345 00f5 66 67                   		mov	#6, r7
 1346 00f7 03                      		.balign 2,3,5
 1347                             	.L161:
 1348                             	.LVL169:
 489:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if (current_mode == FLD_PE_MODE)
 1349                             		.loc 1 489 0
 1350 00f8 FB A2 00 00 00 00       		mov.L	#_current_mode, r10
 1351 00fe 58 AA                   		movu.B	[r10], r10
 1352 0100 61 2A                   		cmp	#2, r10
 1353 0102 1A                      		bne	.L162
 492:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _Exit_PE_Mode( );
 1354                             		.loc 1 492 0
 1355 0103 05 A4 01 00             		bsr	__Exit_PE_Mode
 1356                             	.LVL170:
 495:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
 1357                             		.loc 1 495 0
 1358 0107 05 27 00 00             		bsr	__FlashReleaseState
 1359                             	.LVL171:
 1360 010b 03                      		.balign 2,3,5
 1361                             	.L162:
 498:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLS_ExitCriticalSection();
 1362                             		.loc 1 498 0
 1363 010c FB E2 00 00 00 00       		mov.L	#_OS_Global, r14
 1364 0112 CD EA 01                		mov.B	1[r14], r10
 1365 0115 60 1A                   		sub	#1, r10
 1366 0117 C7 EA 01                		mov.B	r10, 1[r14]
 1367 011a 76 2A FF 00             		and #0xff, r10
 1368 011e 1E                      		bne	.L163
 498:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLS_ExitCriticalSection();
 1369                             		.loc 1 498 0 is_stmt 0 discriminator 1
 1370 011f 05 00 00 00             		bsr	_OS_EnableInterrupt
 1371                             	.LVL172:
 1372 0123 03                      		.balign 2,3,1
 1373                             	.L163:
 500:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
 1374                             		.loc 1 500 0 is_stmt 1
 1375 0124 5B 71                   		movu.B	r7, r1
 1376 0126 2E 0E                   		bra	.L175
 1377                             	.LVL173:
 1378                             	.L165:
 362:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	result = FLASH_ERROR_ADDRESS;
 1379                             		.loc 1 362 0
 1380 0128 66 37                   		mov	#3, r7
 1381                             	.LVL174:
 1382 012a 2E CE                   		bra	.L161
 1383                             	.LVL175:
 1384                             	.L166:
 374:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	result = FLASH_ERROR_BYTES;
 1385                             		.loc 1 374 0
 1386 012c 66 27                   		mov	#2, r7
 1387                             	.LVL176:
 1388 012e 2E CA                   		bra	.L161
 1389                             	.LVL177:
 1390                             	.L167:
 380:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	result = FLASH_BUSY;
 1391                             		.loc 1 380 0
 1392 0130 66 57                   		mov	#5, r7
 1393                             	.LVL178:
 1394 0132 2E C6                   		bra	.L161
 1395                             	.LVL179:
 1396                             	.L175:
 502:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 1397                             		.loc 1 502 0
 1398 0134 3F 7B 06                		rtsd	#24, r7-r11
 1399                             	.LFE4:
 1401 0137 03                      		.section	.PRAM
 1402                             		.global	_R_FlashGetStatus
 1404                             	_R_FlashGetStatus:
 1405                             	.LFB15:
1564:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1406                             		.loc 1 1564 0
1567:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( flash_state == FLASH_READY )
 1407                             		.loc 1 1567 0
 1408 0507 FB E2 00 00 00 00       		mov.L	#_flash_state, r14
 1409 050d EC E1                   		mov.L	[r14], r1
 1410 050f 61 01                   		cmp	#0, r1
 1411 0511 13                      		beq	.L178
1572:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_BUSY;
 1412                             		.loc 1 1572 0
 1413 0512 66 51                   		mov	#5, r1
 1414                             		.balign 2,3,1
 1415                             	.L178:
1573:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 1416                             		.loc 1 1573 0
 1417 0514 5B 11                   		movu.B	r1, r1
 1418 0516 02                      		rts
 1419                             	.LFE15:
 1421 0517 03                      		.section	.text.FLS_Init,"ax",@progbits
 1422                             		.global	_FLS_Init
 1424                             	_FLS_Init:
 1425                             	.LFB19:
1645:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1646:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1647:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  _FlashReleaseState
1648:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1649:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1650:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #ifndef  IGNORE_LOCK_BITS
1651:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1652:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1653:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashProgramLockBit
1654:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Programs the lock bit for a specified ROM erasure block. If
1655:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                the lock bit for a block is set and lock bit protection is
1656:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                enabled then that block cannot be programmed/erased.
1657:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : block - Which ROM erasure block to set the lock bit for
1658:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
1659:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
1660:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Another flash operation is in progress
1661:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1662:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashProgramLockBit(uint8_t block)
1663:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1664:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare address pointer */
1665:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint8_t *pAddr;
1666:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1667:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare operation result container variable */
1668:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
1669:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1670:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare timer wait count variable */
1671:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint32_t wait_cnt;
1672:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1673:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state */
1674:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_LOCK_BIT) != FLASH_SUCCESS )
1675:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1676:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
1677:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
1678:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1679:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1680:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Flash Command Address */
1681:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     pAddr = (volatile uint8_t *)(GET_BLOCK_ADDR( block ));
1682:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1683:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set FCU to ROM PE mode */
1684:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     current_mode = ROM_PE_MODE;
1685:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1686:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter ROM PE mode, check if operation successful */
1687:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode((uint32_t)pAddr, 0) != FLASH_SUCCESS)
1688:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1689:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
1690:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
1691:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1692:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
1693:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
1694:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1695:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1696:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Send the FCU Command */
1697:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *pAddr = 0x77;
1698:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *pAddr = 0xD0;
1699:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1700:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set timeout wait counter value */
1701:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wait_cnt = WAIT_MAX_ROM_WRITE;
1702:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1703:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Wait until FCU operation finishes, or a timeout occurs */
1704:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     while(FLASH.FSTATR0.BIT.FRDY == 0)
1705:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1706:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Decrement the wait counter */
1707:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         wait_cnt--;
1708:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1709:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if the wait counter has reached zero */
1710:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(wait_cnt == 0)
1711:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1712:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Maximum timeout duration for writing to ROM has elapsed -
1713:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                assume operation failure and reset the FCU */
1714:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             _Flash_Reset();
1715:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1716:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Return FLASH_FAILURE, operation failure */
1717:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLASH_FAILURE;
1718:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1719:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1720:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1721:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check for illegal command or programming errors */
1722:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((FLASH.FSTATR0.BIT.ILGLERR == 1) || (FLASH.FSTATR0.BIT.PRGERR  == 1))
1723:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1724:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
1725:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;
1726:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1727:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1728:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Leave Program/Erase Mode */
1729:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
1730:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1731:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
1732:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
1733:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1734:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return result of lock bit programming */
1735:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
1736:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1737:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1738:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashProgramLockBit
1739:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1740:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1741:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1742:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashReadLockBit
1743:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Reads and returns the lock bit status for a ROM block
1744:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : block - Which ROM erasure block to read the lock bit of
1745:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_LOCK_BIT_SET = Lock bit was set
1746:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_LOCK_BIT_NOT_SET = Lock bit was not set
1747:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_FAILURE = Operation Failed
1748:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Another flash operation is in progress
1749:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1750:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashReadLockBit(uint8_t block)
1751:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1752:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare address pointer */
1753:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint8_t *pAddr;
1754:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1755:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Declare operation result container variable */
1756:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
1757:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1758:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Holds outcome of lock-bit read */
1759:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t lock_bit;
1760:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1761:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state */;
1762:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_LOCK_BIT) != FLASH_SUCCESS )
1763:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1764:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
1765:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
1766:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1767:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1768:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Flash Command Address */
1769:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     pAddr = (volatile uint8_t *)(GET_BLOCK_ADDR( block ));
1770:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1771:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Set FCU to ROM PE mode */
1772:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     current_mode = ROM_PE_MODE;
1773:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1774:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enter ROM PE mode, check if operation successful */
1775:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _Enter_PE_Mode((uint32_t)pAddr, 0) != FLASH_SUCCESS)
1776:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1777:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Release state */
1778:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _FlashReleaseState();
1779:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1780:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
1781:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
1782:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1783:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1784:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Switch to ROM Lock-Bit Read Mode */
1785:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     *pAddr = 0x71;
1786:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1787:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check for illegal command */
1788:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ILGLERR == 1)
1789:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1790:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Return FLASH_FAILURE, operation failure */
1791:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;
1792:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1793:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
1794:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1795:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Read lock bit value */
1796:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         lock_bit = *pAddr;
1797:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1798:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Set return value */
1799:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(lock_bit != 0x00)
1800:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1801:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Lock bit is not set */
1802:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLASH_LOCK_BIT_NOT_SET;
1803:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1804:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         else
1805:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1806:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /* Lock bit is set */
1807:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLASH_LOCK_BIT_SET;
1808:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1809:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1810:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1811:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Leave Program/Erase Mode */
1812:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Exit_PE_Mode();
1813:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1814:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
1815:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
1816:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1817:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return result of lock bit programming */
1818:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
1819:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1820:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1821:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashReadLockBit
1822:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1823:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1824:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1825:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function Name: R_FlashSetLockBitProtection
1826:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description  : Enables or disables lock bit protection.
1827:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Arguments    : lock_bit - Boolean, whether to enable or disable lock bit
1828:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                           protection (true = enabled, false = disabled)
1829:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Return Value : FLASH_SUCCESS = Operation Successful
1830:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** *                FLASH_BUSY = Another flash operation is in progress
1831:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1832:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashSetLockBitProtection(uint8_t lock_bit)
1833:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1834:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Attempt to grab state */;
1835:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( _FlashGrabState(FLASH_LOCK_BIT) != FLASH_SUCCESS )
1836:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1837:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Another operation is already in progress */
1838:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_BUSY;
1839:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1840:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1841:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Enable or disable? */
1842:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     lock_bit_protection = lock_bit;
1843:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1844:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Release state */
1845:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _FlashReleaseState();
1846:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1847:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Return success */
1848:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
1849:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1850:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
1851:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** End of function  R_FlashSetLockBitProtection
1852:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
1853:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1854:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif /* IGNORE_LOCK_BITS */
1855:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1856:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1857:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* ********************************************************************************************** *
1858:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*                                  START FLS Class HAL Support                                   *
1859:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /* ********************************************************************************************** *
1860:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1861:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1862:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t cloneSector(uint32_t dest, uint32_t source);
1863:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1864:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t cloneSector(uint32_t dest, uint32_t source)
1865:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1866:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	uint8_t result;
1867:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	uint32_t buff[FLS_WRITE_SIZE/sizeof(uint32_t)];
1868:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	int i;
1869:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	/* Erase the destination sector */
1870:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	result = R_FlashEraseRange(dest, CLONE_BLOCK_SIZE);
1871:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	if(result == FLASH_SUCCESS )
1872:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1873:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		/* Write - No write sector are left blank */
1874:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		for(i = 0; i < CLONE_BLOCK_SIZE; i+= FLS_WRITE_SIZE)
1875:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		{
1876:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 			if(BlankCheckDataFlash((source + i), FLS_WRITE_SIZE) != FLASH_BLANK)
1877:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1878:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				/* copy to ram */
1879:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				/*for(j=0; j<(FLS_WRITE_SIZE/sizeof(uint32_t)); j+= sizeof(uint32_t)) */
1880:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				buff[0] = *(uint32_t*)(source+i);
1881:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				buff[1] = *(uint32_t*)(source+i+4);
1882:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1883:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				/* write to destination */
1884:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				result = R_FlashWrite(dest + i, (uint32_t)&buff[0], FLS_WRITE_SIZE);
1885:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				if(result != FLASH_SUCCESS )
1886:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             break;
1887:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
1888:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1889:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	}
1890:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
1891:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1892:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(DATA_CLONE_RECOVERY)
1893:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t restoreUncompleteWrite(void);
1894:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1895:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t restoreUncompleteWrite(void)
1896:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1897:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t sector_restore_addr;
1898:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result=FLASH_SUCCESS;
1899:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t check_word_start_clone = 0;
1900:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1901:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(BlankCheckDataFlash(CLONE_TRANS_BLOCK_ADDRESS, FLS_WRITE_SIZE))
1902:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1903:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     	sector_restore_addr    = *(uint32_t*)CLONE_TRANS_BLOCK_ADDRESS;
1904:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		check_word_start_clone = *(uint8_t*)(CLONE_TRANS_BLOCK_ADDRESS + CLONE_START_WORD_POS);
1905:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(check_word_start_clone == CLONE_START_WORD_VALUE) /* verifica che non sia un valore casu
1906:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
1907:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         	result = cloneSector(sector_restore_addr, CLONE_BLOCK_ADDRESS);
1908:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1909:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         	if(result != FLASH_SUCCESS)
1910:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
1911:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             /*== Erase clone sector ==*/
1912:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = R_FlashEraseRange((FLS_positionType) CLONE_TRANS_BLOCK_ADDRESS, CLONE_BLOCK_SI
1913:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
1914:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }/* end if check word */
1915:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }/* end if restore clone block */
1916:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	R_FlashDataAreaAccess(0xFFFF, 0x0000); /*MS ????? */
1917:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	return result;
1918:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
1919:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
1920:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
1921:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Function: FLS_Init
1922:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Description: Initialization of the FLASH Module Clock. Programming and erase operation are allow
1923:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Note: Modified from define to function.
1924:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Status: Test me on Hardware!
1925:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  */
1926:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** void FLS_Init(void)
1927:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1426                             		.loc 1 1927 0
1928:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     CopyFlashRoutinesToRAM();
 1427                             		.loc 1 1928 0
 1428 0000 05 00 00 00             		bsr	_CopyFlashRoutinesToRAM
 1429                             	.LVL180:
1929:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     _Flash_Init();	/* It is call by Flash Erase Function*/
 1430                             		.loc 1 1929 0
 1431 0004 05 00 00 00             		bsr	__Flash_Init
 1432                             	.LVL181:
 1433                             	.LBB44:
 1434                             	.LBB45:
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLRE0.WORD = 0x2D00 | (read_en_mask & 0x00FF);
 1435                             		.loc 1 525 0
 1436 0008 FB EE 40 C4 7F          		mov.L	#0x7fc440, r14
 1437 000d F8 E9 FF 2D             		mov.W	#0x2dff, [r14]
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLWE0.WORD = 0x1E00 |  (write_en_mask & 0x00FF);
 1438                             		.loc 1 528 0
 1439 0011 FB EE 50 C4 7F          		mov.L	#0x7fc450, r14
 1440 0016 F8 E9 FF 1E             		mov.W	#0x1eff, [r14]
 1441 001a 02                      		rts
 1442                             	.LBE45:
 1443                             	.LBE44:
 1444                             	.LFE19:
 1446                             		.section	.text.FLS_Erase,"ax",@progbits
 1447                             		.global	_FLS_Erase
 1449                             	_FLS_Erase:
 1450                             	.LFB20:
1930:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     R_FlashDataAreaAccess(0xFFFF, 0xFFFF);
1931:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(DATA_CLONE_RECOVERY)
1932:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     restoreUncompleteWrite();
1933:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
1934:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }/*FlashInit*/
1935:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1936:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
1937:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Function: FLS_Ease
1938:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Description: Call "R_FlashErase(position)" API From Renesas Flash Library
1939:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Note:
1940:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Status:
1941:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  */
1942:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_Erase(FLS_positionType address)
1943:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1451                             		.loc 1 1943 0
 1452                             	.LVL182:
 1453 0000 60 40                   		sub	#4, r0
 1454                             	.LCFI12:
 1455                             	.LVL183:
 1456                             	.LBB50:
 1457                             	.LBB51:
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLRE0.WORD = 0x2D00 | (read_en_mask & 0x00FF);
 1458                             		.loc 1 525 0
 1459 0002 FB EE 40 C4 7F          		mov.L	#0x7fc440, r14
 1460 0007 F8 E9 FF 2D             		mov.W	#0x2dff, [r14]
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLWE0.WORD = 0x1E00 |  (write_en_mask & 0x00FF);
 1461                             		.loc 1 528 0
 1462 000b FB EE 50 C4 7F          		mov.L	#0x7fc450, r14
 1463 0010 F8 E9 FF 1E             		mov.W	#0x1eff, [r14]
 1464                             	.LBE51:
 1465                             	.LBE50:
1944:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     volatile uint8_t fls_erase_status;
1945:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t block;
1946:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1947:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Block Calcolus ROM*/
1948:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     R_FlashDataAreaAccess(0xFFFF, 0xFFFF);
1949:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((address >= FLASH_BASE_ADDRESS) && (address < FLASH_END_ADDRESS))
 1466                             		.loc 1 1949 0
 1467 0014 73 1E 00 00 08          		add	#0x80000, r1, r14
 1468 0019 77 0E FE FF 07          		cmp	#0x7fffe, r14
 1469 001e 24 08                   		bgtu	.L182
 1470                             	.LVL184:
1950:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1951:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         block = ((FLASH_END_ADDRESS - address )/FLASH_ERASE_BLK_SZ);
 1471                             		.loc 1 1951 0
 1472 0020 7E 01                   		not	r1
 1473                             	.LVL185:
1952:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_erase_status = R_FlashErase(block);	/* !< Block ID as parameter */
 1474                             		.loc 1 1952 0
 1475 0022 68 B1                   		shlr	#11, r1
 1476                             	.LVL186:
 1477 0024 2E 12                   		bra	.L186
 1478                             	.LVL187:
 1479                             	.L182:
1953:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1954:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Block Calcolus DATA*/
1955:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else if((address >= FLASH_DATA_BASE_ADDRESS) && (address <= FLASH_DATA_END_ADDRESS))
 1480                             		.loc 1 1955 0
 1481 0026 73 11 00 00 F0          		add	#0xfff00000, r1
 1482                             	.LVL188:
 1483 002b 76 01 FF 1F             		cmp	#0x1fff, r1
 1484 002f 24 0E                   		bgtu	.L184
 1485                             	.LVL189:
1956:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1957:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(OPT_FALSH_1) /*MS prova ottimizzazione */
1958:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_erase_status = R_FlashDataErase(address, FLASH_ERASE_BLK_SZ);
1959:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #else
1960:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         block = ((address - FLASH_DATA_BASE_ADDRESS)/FLASH_ERASE_BLK_SZ)+ BLOCK_DB0;
 1486                             		.loc 1 1960 0
 1487 0031 68 B1                   		shlr	#11, r1
 1488                             	.LVL190:
1961:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_erase_status = R_FlashErase(block);	/* !< Block ID as parameter */
 1489                             		.loc 1 1961 0
 1490 0033 71 11 80                		add	#0xffffff80, r1
 1491                             	.LVL191:
 1492                             		.balign 2,3,3
 1493                             	.L186:
 1494 0036 05 00 00 00             		bsr	_R_FlashErase_1
 1495                             	.LVL192:
 1496 003a C3 01                   		mov.B	r1, [r0]
 1497                             	.LVL193:
 1498 003c 0C                      		bra	.L183
 1499                             	.LVL194:
 1500                             	.L184:
1962:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
1963:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1964:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
1965:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1966:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_erase_status = FLASH_ERROR_ADDRESS;
 1501                             		.loc 1 1966 0
 1502 003d 3C 00 03                		mov.B	#3, [r0]
 1503                             	.LVL195:
 1504                             		.balign 2,3,4
 1505                             	.L183:
 1506                             	.LBB52:
 1507                             	.LBB53:
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLRE0.WORD = 0x2D00 | (read_en_mask & 0x00FF);
 1508                             		.loc 1 525 0
 1509 0040 FB EE 40 C4 7F          		mov.L	#0x7fc440, r14
 1510 0045 F8 E9 FF 2D             		mov.W	#0x2dff, [r14]
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLWE0.WORD = 0x1E00 |  (write_en_mask & 0x00FF);
 1511                             		.loc 1 528 0
 1512 0049 FB EE 50 C4 7F          		mov.L	#0x7fc450, r14
 1513 004e F8 E9 00 1E             		mov.W	#0x1e00, [r14]
 1514                             	.LBE53:
 1515                             	.LBE52:
1967:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1968:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     R_FlashDataAreaAccess(0xFFFF, 0x0000);
1969:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return fls_erase_status;
1970:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }/*end FLS_Erase*/
 1516                             		.loc 1 1970 0
 1517 0052 58 01                   		movu.B	[r0], r1
 1518 0054 67 01                   		rtsd	#4
 1519                             	.LFE20:
 1521                             		.section	.text.FLS_CheckErrors,"ax",@progbits
 1522                             		.global	_FLS_CheckErrors
 1524                             	_FLS_CheckErrors:
 1525                             	.LFB22:
1971:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1972:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
1973:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Function: FLS_Programming
1974:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Description:  The Function call
1975:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Status:
1976:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  *
1977:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  */
1978:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #define ADDR_MASK	  ((uint32_t)(ROM_PROGRAM_SIZE-1))
1979:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_Programming(uint8_t* pSource, uint32_t len, FLS_positionType dest)
1980:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
1981:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t fls_programming_status=0;
1982:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned char *srcPtr=(unsigned char *)pSource;
1983:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int headOffset=0;
1984:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int headLen=0;
1985:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int tailLen=0;
1986:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int i;
1987:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     char writeBuff[FLS_WRITE_SIZE];
1988:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1989:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     R_FlashDataAreaAccess(0xFFFF, 0xFFFF);
1990:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1991:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((dest >= DF_ADDRESS) && (dest < DF_ADDRSS_END))	/* Write Data in DATA FLASH */
1992:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1993:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_programming_status=FLS_ProgrammingData( pSource, len, dest);
1994:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
1995:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else /*Write Data in ROM */
1996:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
1997:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         headOffset = (dest & ADDR_MASK);
1998:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
1999:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* head ------------------------------------------*/
2000:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(headOffset > 0)
2001:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2002:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             headLen = FLS_WRITE_SIZE-headOffset;
2003:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2004:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if (headLen > len)
2005:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2006:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	headLen = len;
2007:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2008:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2009:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             for(i=0; i<FLS_WRITE_SIZE; i++)  /* init write buffer */
2010:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2011:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	if ( (i < headOffset) || (i >= headOffset+headLen) )
2012:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	{
2013:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i] = 0xFF;
2014:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	}
2015:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	else
2016:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	{
2017:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i]=*srcPtr;
2018:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     srcPtr++;
2019:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	}
2020:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2021:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2022:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             fls_programming_status=R_FlashWrite((uint32_t)dest-headOffset, (uint32_t)&writeBuff[0],
2023:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2024:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2025:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* body -----------------------------------------*/
2026:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( !fls_programming_status )
2027:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2028:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             int writePos= dest+headLen;
2029:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             int nByte=len;
2030:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             tailLen = (len + headOffset) & ADDR_MASK;
2031:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(headLen>0)
2032:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2033:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 nByte -= headLen;
2034:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2035:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             nByte -= tailLen;
2036:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(nByte>0)
2037:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2038:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 fls_programming_status=R_FlashWrite(writePos, (uint32_t)srcPtr, nByte);
2039:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 srcPtr += nByte;
2040:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2041:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2042:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2043:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* tail ------------------------------------------*/
2044:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( !fls_programming_status )
2045:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2046:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             unsigned int beginTail = dest+(len-tailLen);
2047:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( tailLen > 0 && dest < beginTail)
2048:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2049:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 for(i=0; i<ROM_PROGRAM_SIZE; i++)  /* init write buffer */
2050:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
2051:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i] = 0xFF;
2052:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 }
2053:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 for(i=0; i<tailLen; i++)
2054:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
2055:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i] = *srcPtr++;
2056:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 }
2057:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 fls_programming_status=R_FlashWrite(beginTail, (uint32_t)&writeBuff[0], ROM_PROGRAM
2058:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2059:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2060:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2061:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         R_FlashDataAreaAccess(0xFFFF, 0x0000);
2062:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }/* end else to write in ROM */
2063:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return fls_programming_status;
2064:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
2065:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2066:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
2067:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function: FLS_CheckErrors
2068:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description: Check the Flash Status Error Byte
2069:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Note:
2070:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** */
2071:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_CheckErrors(void)
2072:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1526                             		.loc 1 2072 0
 1527                             	.LVL196:
2073:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
2074:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ERSERR == 1)	/* Flash Erase Error*/
 1528                             		.loc 1 2074 0
 1529 0000 FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 1530 0005 CC E1                   		mov.B [r14], r1
 1531 0007 75 21 20                		and #32, r1
 1532 000a 14                      		beq	.L188
2075:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2076:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;		/* Return FLASH_FAILURE, operation failure*/
 1533                             		.loc 1 2076 0
 1534 000b 66 61                   		mov	#6, r1
 1535 000d 03                      		.balign 2,3,5
 1536                             	.L188:
 1537                             	.LVL197:
2077:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2078:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.PRGERR == 1)	/* Flash Programming Error*/
 1538                             		.loc 1 2078 0
 1539 000e CC EE                   		mov.B [r14], r14
 1540 0010 75 2E 10                		and #16, r14
 1541 0013 13                      		beq	.L189
2079:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2080:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;		/* Return FLASH_FAILURE, operation failure*/
 1542                             		.loc 1 2080 0
 1543 0014 66 61                   		mov	#6, r1
 1544                             	.LVL198:
 1545                             		.balign 2,3,4
 1546                             	.L189:
2081:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2082:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR0.BIT.ILGLERR == 1)	/* Flash Illegal Istraction Error*/
 1547                             		.loc 1 2082 0
 1548 0016 FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 1549 001b CC EE                   		mov.B [r14], r14
 1550 001d 75 2E 40                		and #64, r14
 1551 0020 14                      		beq	.L190
2083:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2084:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;		/* Return FLASH_FAILURE, operation failure*/
 1552                             		.loc 1 2084 0
 1553 0021 66 61                   		mov	#6, r1
 1554                             	.LVL199:
 1555 0023 03                      		.balign 2,3,4
 1556                             	.L190:
2085:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2086:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(FLASH.FSTATR1.BIT.FCUERR == 1)	/* FCU processing Error*/
 1557                             		.loc 1 2086 0
 1558 0024 FB EE B1 FF 7F          		mov.L	#0x7fffb1, r14
 1559 0029 CC EE                   		mov.B [r14], r14
 1560 002b 76 2E 80 00             		and #0x80, r14
 1561 002f 13                      		beq	.L191
2087:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2088:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;		/* Return FLASH_FAILURE, operation failure*/
 1562                             		.loc 1 2088 0
 1563 0030 66 61                   		mov	#6, r1
 1564                             	.LVL200:
 1565                             		.balign 2,3,4
 1566                             	.L191:
2089:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2090:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( (FLASH.FSTATR0.BIT.FRDY) && (FLASH.FPESTAT.BIT.PEERRST != 0) )	/* FCU processing Error*/
 1567                             		.loc 1 2090 0
 1568 0032 FB EE B0 FF 7F          		mov.L	#0x7fffb0, r14
 1569 0037 CC EE                   		mov.B [r14], r14
 1570 0039 76 2E 80 00             		and #0x80, r14
 1571 003d 20 15                   		beq	.L192
 1572                             		.loc 1 2090 0 is_stmt 0 discriminator 1
 1573 003f FB EE CC FF 7F          		mov.L	#0x7fffcc, r14
 1574 0044 DC EE                   		mov.W	[r14], r14
 1575 0046 76 2E FF 00             		and	#0xff, r14
 1576 004a 10                      		beq	.L192
 1577                             	.LVL201:
2091:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2092:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /*The value of the PEERRST bits is valid only when the FSTATR0.FRDY bit is set to 1 while t
2093:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         FSTATR0.ERSERR bit or FSTATR0.PRGERR bit is 1. The value of the reason of the past error is
2094:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         PEERRST[7:0] bits when the ERSERR bit and PRGERR bit is 0*/
2095:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2096:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;		/* Return FLASH_FAILURE, operation failure*/
2097:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         _Flash_Reset();
 1578                             		.loc 1 2097 0 is_stmt 1
 1579 004b 05 00 00 00             		bsr	__Flash_Reset
 1580                             	.LVL202:
2096:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = FLASH_FAILURE;		/* Return FLASH_FAILURE, operation failure*/
 1581                             		.loc 1 2096 0
 1582 004f 66 61                   		mov	#6, r1
 1583                             	.LVL203:
 1584 0051 03                      		.balign 2,3,2
 1585                             	.L192:
2098:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2099:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
2100:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }/* end FLS_CheckErrors(void) */
 1586                             		.loc 1 2100 0
 1587 0052 75 21 26                		and #38, r1
 1588                             	.LVL204:
 1589 0055 02                      		rts
 1590                             	.LFE22:
 1592                             		.section	.text.FLS_InitRegsForErasing,"ax",@progbits
 1593                             		.global	_FLS_InitRegsForErasing
 1595                             	_FLS_InitRegsForErasing:
 1596                             	.LFB23:
2101:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2102:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
2103:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function: FLS_InitRegsForErasing
2104:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description: Should clear the last Flash error
2105:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Note: The Flash Status registers are read only
2106:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** */
2107:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** void FLS_InitRegsForErasing(void)
2108:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1597                             		.loc 1 2108 0
 1598 0000 02                      		rts
 1599                             	.LFE23:
 1601                             		.section	.text.BlankCheckDataFlash,"ax",@progbits
 1602                             		.global	_BlankCheckDataFlash
 1604                             	_BlankCheckDataFlash:
 1605                             	.LFB24:
2109:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }/*end FLS_InitRegsForErasing*/
2110:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2111:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2112:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #define BLANK_CHECK_BYTE_SIZE 	2
2113:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #define BLANK_CHECK_SIZE_CMD 	BLANK_CHECK_2_BYTE
2114:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #define ADDR_MASK_BLANK_CHECK 	0x1
2115:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2116:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
2117:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #define BLANK_CHECK_BYTE_SIZE 	8
2118:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #define BLANK_CHECK_SIZE_CMD 	BLANK_CHECK_8_BYTE
2119:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #define ADDR_MASK_BLANK_CHECK 	0x7
2120:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** */
2121:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t BlankCheckDataFlash(FLS_positionType dest, FLS_sizeType len)
2122:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1606                             		.loc 1 2122 0
 1607                             		.loc 1 2122 0
 1608 0000 6E 7D                   		pushm	r7-r13
 1609                             	.LCFI13:
 1610 0002 EF 17                   		mov.L	r1, r7
 1611 0004 EF 2A                   		mov.L	r2, r10
2123:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t fls_status=FLASH_SUCCESS;
2124:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t headOffset=0;
2125:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t headLen=0;
2126:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t tailLen=0;
2127:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t writePos;
2128:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t nByte;
2129:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int i;
2130:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2131:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     headOffset=0;
2132:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     headLen=0;
2133:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     tailLen=0;
2134:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /********************/
2135:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Ottimizzazione */
2136:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(((dest&0x7F) == 0) && (len & 0x7F)==0)
 1612                             		.loc 1 2136 0
 1613 0006 FD 74 C1 7F             		tst	#0x7f, r1
 1614 000a 21 26                   		bne	.L205
 1615                             		.loc 1 2136 0 is_stmt 0 discriminator 1
 1616 000c EF 2B                   		mov.L	r2, r11
 1617 000e 75 2B 7F                		and	#0x7f, r11
 1618 0011 20 17                   		beq	.L206
 1619 0013 2E 1D                   		bra	.L205
 1620                             	.L208:
2137:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2138:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(writePos = 0;(fls_status == FLASH_SUCCESS) && (writePos < len) ; writePos += DF_BLOCK_S
2139:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2140:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             fls_status=R_FlashDataAreaBlankCheck(dest + writePos, BLANK_CHECK_ENTIRE_BLOCK);
 1621                             		.loc 1 2140 0 is_stmt 1 discriminator 1
 1622 0015 FF 21 7B                		add	r7, r11, r1
 1623 0018 66 02                   		mov	#0, r2
 1624 001a 05 00 00 00             		bsr	_R_FlashDataAreaBlankCheck
2138:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(writePos = 0;(fls_status == FLASH_SUCCESS) && (writePos < len) ; writePos += DF_BLOCK_S
 1625                             		.loc 1 2138 0 discriminator 1
 1626 001e 72 BB 80 00             		add	#0x80, r11
 1627 0022 5B 1C                   		movu.B	r1, r12
 1628 0024 61 0C                   		cmp	#0, r12
 1629 0026 21 6C                   		bne	.L207
 1630                             		.balign 2,3,1
 1631                             	.L206:
2138:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(writePos = 0;(fls_status == FLASH_SUCCESS) && (writePos < len) ; writePos += DF_BLOCK_S
 1632                             		.loc 1 2138 0 is_stmt 0 discriminator 2
 1633 0028 47 AB                   		cmp	r10, r11
 1634 002a 23 EB                   		bltu	.L208
 1635                             		.balign 2,3,1
 1636                             	.L214:
2141:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2142:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return fls_status;
2143:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2144:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2145:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*******************/
2146:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2147:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     headOffset = (int)(dest & ADDR_MASK_BLANK_CHECK);
2148:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2149:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(headOffset > 0)
2150:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         headLen = BLANK_CHECK_BYTE_SIZE-headOffset;
2151:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2152:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* head ------------------------------------------*/
2153:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((headLen >0) || (len < BLANK_CHECK_BYTE_SIZE))
2154:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2155:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_status=R_FlashDataAreaBlankCheck(dest-headOffset, BLANK_CHECK_SIZE_CMD);
2156:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2157:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* body -----------------------------------------*/
2158:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( !fls_status )
2159:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2160:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         writePos= dest+headLen;
2161:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         nByte=len;
2162:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         tailLen = (len + headOffset) & ADDR_MASK_BLANK_CHECK;
2163:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(headLen>0)
2164:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2165:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             nByte -= headLen;
2166:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2167:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         nByte -= tailLen;
2168:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(nByte>0)
2169:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2170:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 for(i=0; (i < nByte) && (fls_status == FLASH_BLANK); i += BLANK_CHECK_BYTE_SIZE)
2171:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
2172:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     fls_status=R_FlashDataAreaBlankCheck(writePos + i, BLANK_CHECK_SIZE_CMD);
 1637                             		.loc 1 2172 0 is_stmt 1
 1638 002c 66 01                   		mov	#0, r1
 1639 002e 2E 64                   		bra	.L207
 1640                             	.L205:
2147:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     headOffset = (int)(dest & ADDR_MASK_BLANK_CHECK);
 1641                             		.loc 1 2147 0
 1642 0030 EF 7B                   		mov.L	r7, r11
 1643 0032 64 1B                   		and	#1, r11
2149:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(headOffset > 0)
 1644                             		.loc 1 2149 0
 1645 0034 20 61                   		beq	.L209
2150:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         headLen = BLANK_CHECK_BYTE_SIZE-headOffset;
 1646                             		.loc 1 2150 0
 1647 0036 66 1C                   		mov.L	#1, r12
 1648                             		.balign 2,3,2
 1649                             	.L217:
2155:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_status=R_FlashDataAreaBlankCheck(dest-headOffset, BLANK_CHECK_SIZE_CMD);
 1650                             		.loc 1 2155 0
 1651 0038 FF 01 B7                		sub	r11, r7, r1
 1652 003b 66 22                   		mov	#2, r2
 1653 003d 05 00 00 00             		bsr	_R_FlashDataAreaBlankCheck
2158:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( !fls_status )
 1654                             		.loc 1 2158 0
 1655 0041 5B 1D                   		movu.B	r1, r13
 1656 0043 61 0D                   		cmp	#0, r13
 1657 0045 21 4D                   		bne	.L207
 1658 0047 03                      		.balign 2,3,1
 1659                             	.L218:
2162:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         tailLen = (len + headOffset) & ADDR_MASK_BLANK_CHECK;
 1660                             		.loc 1 2162 0
 1661 0048 4B AB                   		add	r10, r11
 1662 004a 64 1B                   		and #1, r11
2163:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(headLen>0)
 1663                             		.loc 1 2163 0
 1664 004c 61 0C                   		cmp	#0, r12
 1665 004e 15                      		beq	.L220
2165:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             nByte -= headLen;
 1666                             		.loc 1 2165 0
 1667 004f 71 A9 FF                		add	#-1, r10, r9
 1668 0052 0C                      		bra	.L211
 1669                             	.L220:
2163:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(headLen>0)
 1670                             		.loc 1 2163 0
 1671 0053 EF A9                   		mov.L	r10, r9
 1672 0055 03                      		.balign 2,3,1
 1673                             	.L211:
2167:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         nByte -= tailLen;
 1674                             		.loc 1 2167 0
 1675 0056 43 B9                   		sub	r11, r9
2168:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(nByte>0)
 1676                             		.loc 1 2168 0
 1677 0058 18                      		bne	.L221
 1678 0059 03                      		.balign 2,3,1
 1679                             	.L216:
 1680                             	.LBB54:
2173:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2174:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2175:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2176:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* tail ------------------------------------------*/
2177:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( !fls_status )
2178:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2179:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         unsigned int beginTail = dest+(len-tailLen);
2180:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( (tailLen > 0) && (dest < beginTail))
 1681                             		.loc 1 2180 0
 1682 005a 61 0B                   		cmp	#0, r11
 1683 005c 21 25                   		bne	.L213
 1684 005e 2E CE                   		bra	.L214
 1685                             	.L221:
 1686                             	.LBE54:
2168:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(nByte>0)
 1687                             		.loc 1 2168 0
 1688 0060 66 0D                   		mov.L	#0, r13
2160:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         writePos= dest+headLen;
 1689                             		.loc 1 2160 0
 1690 0062 4B 7C                   		add	r7, r12
 1691                             		.balign 2,3,2
 1692                             	.L212:
2172:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     fls_status=R_FlashDataAreaBlankCheck(writePos + i, BLANK_CHECK_SIZE_CMD);
 1693                             		.loc 1 2172 0 discriminator 1
 1694 0064 FF 21 DC                		add	r13, r12, r1
 1695 0067 66 22                   		mov	#2, r2
 1696 0069 05 00 00 00             		bsr	_R_FlashDataAreaBlankCheck
2170:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 for(i=0; (i < nByte) && (fls_status == FLASH_BLANK); i += BLANK_CHECK_BYTE_SIZE)
 1697                             		.loc 1 2170 0 discriminator 1
 1698 006d 62 2D                   		add	#2, r13
 1699 006f 5B 1E                   		movu.B	r1, r14
 1700 0071 47 9D                   		cmp	r9, r13
 1701 0073 22 08                   		bgeu	.L215
2170:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 for(i=0; (i < nByte) && (fls_status == FLASH_BLANK); i += BLANK_CHECK_BYTE_SIZE)
 1702                             		.loc 1 2170 0 is_stmt 0 discriminator 2
 1703 0075 61 0E                   		cmp	#0, r14
 1704 0077 20 ED                   		beq	.L212
 1705 0079 2E 19                   		bra	.L207
 1706                             	.L215:
2177:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( !fls_status )
 1707                             		.loc 1 2177 0 is_stmt 1
 1708 007b 61 0E                   		cmp	#0, r14
 1709 007d 20 DD                   		beq	.L216
 1710 007f 2E 13                   		bra	.L207
 1711                             	.L213:
 1712                             	.LBB55:
2179:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         unsigned int beginTail = dest+(len-tailLen);
 1713                             		.loc 1 2179 0 discriminator 1
 1714 0081 4B 7A                   		add	r7, r10
 1715 0083 71 A1 FF                		add	#-1, r10, r1
 1716                             		.loc 1 2180 0 discriminator 1
 1717 0086 47 17                   		cmp	r1, r7
 1718 0088 22 A4                   		bgeu	.L214
2181:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2182:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             fls_status=R_FlashDataAreaBlankCheck(beginTail, BLANK_CHECK_SIZE_CMD);
 1719                             		.loc 1 2182 0
 1720 008a 66 22                   		mov	#2, r2
 1721                             	.LBE55:
2183:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2184:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2185:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2186:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return fls_status;
2187:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 1722                             		.loc 1 2187 0
 1723 008c 6F 7D                   		popm	r7-r13
 1724                             	.LBB56:
2182:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             fls_status=R_FlashDataAreaBlankCheck(beginTail, BLANK_CHECK_SIZE_CMD);
 1725                             		.loc 1 2182 0
 1726 008e 04 00 00 00             		bra	_R_FlashDataAreaBlankCheck
 1727                             	.L207:
 1728 0092 5B 11                   		movu.B	r1, r1
 1729 0094 09                      		bra	.L230
 1730                             	.L209:
 1731                             	.LBE56:
2132:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     headLen=0;
 1732                             		.loc 1 2132 0
 1733 0095 EF BC                   		mov.L	r11, r12
2153:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((headLen >0) || (len < BLANK_CHECK_BYTE_SIZE))
 1734                             		.loc 1 2153 0
 1735 0097 61 1A                   		cmp	#1, r10
 1736 0099 25 9F                   		bleu	.L217
 1737 009b 2E AD                   		bra	.L218
 1738                             	.L230:
 1739                             		.loc 1 2187 0
 1740 009d 3F 7D 07                		rtsd	#28, r7-r13
 1741                             	.LFE24:
 1743                             		.section	.text.cloneSector,"ax",@progbits
 1744                             		.global	_cloneSector
 1746                             	_cloneSector:
 1747                             	.LFB18:
1865:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1748                             		.loc 1 1865 0
 1749                             	.LVL205:
 1750 0000 6E 7C                   		pushm	r7-r12
 1751                             	.LCFI14:
 1752 0002 60 80                   		sub	#8, r0
 1753                             	.LCFI15:
 1754 0004 EF 1C                   		mov.L	r1, r12
 1755 0006 EF 27                   		mov.L	r2, r7
1870:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	result = R_FlashEraseRange(dest, CLONE_BLOCK_SIZE);
 1756                             		.loc 1 1870 0
 1757 0008 75 42 80                		mov.L	#0x80, r2
 1758                             	.LVL206:
 1759 000b 05 00 00 00             		bsr	_R_FlashEraseRange
 1760                             	.LVL207:
 1761 000f CF 1B                   		mov.B	r1, r11
 1762                             	.LVL208:
1871:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	if(result == FLASH_SUCCESS )
 1763                             		.loc 1 1871 0
 1764 0011 5B 1A                   		movu.B	r1, r10
 1765 0013 61 0A                   		cmp	#0, r10
 1766 0015 21 33                   		bne	.L233
 1767                             	.LVL209:
 1768 0017 03                      		.balign 2,3,1
 1769                             	.L235:
1876:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 			if(BlankCheckDataFlash((source + i), FLS_WRITE_SIZE) != FLASH_BLANK)
 1770                             		.loc 1 1876 0
 1771 0018 EF 71                   		mov.L	r7, r1
 1772 001a 66 82                   		mov.L	#8, r2
 1773 001c 05 00 00 00             		bsr	_BlankCheckDataFlash
 1774                             	.LVL210:
 1775 0020 76 21 FF 00             		and #0xff, r1
 1776 0024 21 0D                   		bne	.L234
 1777                             		.balign 2,3,1
 1778                             	.L236:
 1779                             	.LVL211:
1874:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		for(i = 0; i < CLONE_BLOCK_SIZE; i+= FLS_WRITE_SIZE)
 1780                             		.loc 1 1874 0
 1781 0026 62 8A                   		add	#8, r10
 1782                             	.LVL212:
 1783 0028 62 87                   		add	#8, r7
 1784 002a 75 5A 80                		cmp	#0x80, r10
 1785 002d 21 EB                   		bne	.L235
 1786 002f 2E 19                   		bra	.L233
 1787                             	.LVL213:
 1788                             	.L234:
1880:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				buff[0] = *(uint32_t*)(source+i);
 1789                             		.loc 1 1880 0
 1790 0031 E0 70                   		mov.L	[r7], [r0]
1881:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				buff[1] = *(uint32_t*)(source+i+4);
 1791                             		.loc 1 1881 0
 1792 0033 E5 70 01 01             		mov.L	4[r7], 4[r0]
1884:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				result = R_FlashWrite(dest + i, (uint32_t)&buff[0], FLS_WRITE_SIZE);
 1793                             		.loc 1 1884 0
 1794 0037 FF 21 CA                		add	r12, r10, r1
 1795 003a EF 02                   		mov.L	r0, r2
 1796 003c 66 83                   		mov	#8, r3
 1797 003e 05 00 00 00             		bsr	_R_FlashWrite_1
 1798                             	.LVL214:
1885:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				if(result != FLASH_SUCCESS )
 1799                             		.loc 1 1885 0
 1800 0042 61 01                   		cmp	#0, r1
 1801 0044 20 E2                   		beq	.L236
1884:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 				result = R_FlashWrite(dest + i, (uint32_t)&buff[0], FLS_WRITE_SIZE);
 1802                             		.loc 1 1884 0
 1803 0046 CF 1B                   		mov.B	r1, r11
 1804                             	.LVL215:
 1805                             		.balign 2,3,1
 1806                             	.L233:
1891:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 1807                             		.loc 1 1891 0
 1808 0048 5B B1                   		movu.B	r11, r1
 1809 004a 3F 7C 08                		rtsd	#32, r7-r12
 1810                             	.LFE18:
 1812 004d 03                      		.section	.text.FLS_BlankCheck,"ax",@progbits
 1813                             		.global	_FLS_BlankCheck
 1815                             	_FLS_BlankCheck:
 1816                             	.LFB25:
2188:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2189:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
2190:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Function: FLS_BlankCheck
2191:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** * Description:
2192:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** */
2193:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_BlankCheck(FLS_sizeType size, FLS_positionType position)
2194:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1817                             		.loc 1 2194 0
 1818                             	.LVL216:
 1819 0000 EF 14                   		mov.L	r1, r4
 1820                             	.LVL217:
2195:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     char *p = (char*)position;
2196:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int i = 0;
2197:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
2198:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* Check if ROM PROGRAM FLASH IS BLANK */
2199:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((position >= FLASH_BASE_ADDRESS) && (position < FLASH_END_ADDRESS))
 1821                             		.loc 1 2199 0
 1822 0002 73 23 00 00 08          		add	#0x80000, r2, r3
 1823 0007 77 03 FE FF 07          		cmp	#0x7fffe, r3
 1824 000c 24 18                   		bgtu	.L243
2193:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_BlankCheck(FLS_sizeType size, FLS_positionType position)
 1825                             		.loc 1 2193 0
 1826 000e 4B 24                   		add	r2, r4
 1827 0010 2E 0E                   		bra	.L244
 1828                             	.LVL218:
 1829                             	.L246:
2200:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2201:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(i = 0; i < size; i++, p++)
2202:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2203:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( *p != 0xFF )
 1830                             		.loc 1 2203 0
 1831 0012 FD 38 23                		movu.B	[r2+], r3
 1832 0015 75 53 FF                		cmp	#0xff, r3
 1833 0018 16                      		beq	.L244
 1834                             	.LVL219:
 1835 0019 03                      		.balign 2,3,1
 1836                             	.L247:
2204:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2205:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 result = FLASH_FAILURE;
 1837                             		.loc 1 2205 0
 1838 001a 66 61                   		mov	#6, r1
 1839 001c 2E 24                   		bra	.L245
 1840                             	.LVL220:
 1841                             	.L244:
2201:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(i = 0; i < size; i++, p++)
 1842                             		.loc 1 2201 0 discriminator 1
 1843 001e 47 42                   		cmp	r4, r2
 1844 0020 21 F2                   		bne	.L246
 1845 0022 2E 1C                   		bra	.L248
 1846                             	.LVL221:
 1847                             	.L243:
2206:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 break;
2207:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2208:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2209:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2210:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     else
2211:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2212:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* Check if DATA FLASH IS BLANK */
2213:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if((position >= FLASH_DATA_BASE_ADDRESS) && (position <= FLASH_DATA_END_ADDRESS))
 1848                             		.loc 1 2213 0
 1849 0024 73 23 00 00 F0          		add	#0xfff00000, r2, r3
 1850 0029 76 03 FF 1F             		cmp	#0x1fff, r3
 1851 002d 24 11                   		bgtu	.L248
2214:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2215:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = BlankCheckDataFlash(position, size);
 1852                             		.loc 1 2215 0
 1853 002f EF 21                   		mov.L	r2, r1
 1854                             	.LVL222:
 1855 0031 EF 42                   		mov.L	r4, r2
 1856                             	.LVL223:
 1857 0033 05 00 00 00             		bsr	_BlankCheckDataFlash
 1858                             	.LVL224:
2216:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( result != FLASH_BLANK)
 1859                             		.loc 1 2216 0
 1860 0037 5B 1E                   		movu.B	r1, r14
 1861 0039 61 0E                   		cmp	#0, r14
 1862 003b 21 DF                   		bne	.L247
 1863 003d 0B                      		bra	.L245
 1864                             	.LVL225:
 1865                             	.L248:
2197:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
 1866                             		.loc 1 2197 0
 1867 003e 66 01                   		mov	#0, r1
 1868                             	.LVL226:
 1869                             		.balign 2,3,1
 1870                             	.L245:
2217:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	result = FLASH_FAILURE;
2218:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2219:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2220:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return result;
2221:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 1871                             		.loc 1 2221 0
 1872 0040 5B 11                   		movu.B	r1, r1
 1873 0042 02                      		rts
 1874                             	.LFE25:
 1876 0043 03                      		.section	.text.FLS_DataFlashClone,"ax",@progbits
 1877                             		.global	_FLS_DataFlashClone
 1879                             	_FLS_DataFlashClone:
 1880                             	.LFB26:
2222:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2223:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
2224:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Function: DataFlashClone(FLS_positionType dest)
2225:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Parameters:
2226:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * source: of DATA to clone
2227:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * data: New data to write
2228:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  *
2229:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  */
2230:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_DataFlashClone(FLS_positionType aligned_address, uint32_t pSource, uint32_t len, uint8_
2231:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 1881                             		.loc 1 2231 0
 1882                             	.LVL227:
 1883 0000 6E 6D                   		pushm	r6-r13
 1884                             	.LCFI16:
 1885 0002 60 80                   		sub	#8, r0
 1886                             	.LCFI17:
 1887 0004 EF 1A                   		mov.L	r1, r10
 1888 0006 EF 2D                   		mov.L	r2, r13
 1889 0008 EF 39                   		mov.L	r3, r9
 1890 000a CF 4C                   		mov.B	r4, r12
 1891                             	.LVL228:
2232:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = 0;
2233:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     int i = 0;
2234:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     int j = 0;
2235:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t  wBuff[FLS_WRITE_SIZE/sizeof(uint32_t)];
2236:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t  *writeBuff;
2237:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint32_t sector_addr;
2238:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2239:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     writeBuff = (uint8_t*)wBuff;
2240:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     sector_addr = aligned_address & 0xFFFFFF80;
2241:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2242:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*== a. Erase the clone sector  ==*/
2243:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     result = R_FlashEraseRange(CLONE_BLOCK_ADDRESS, CLONE_BLOCK_SIZE);
 1892                             		.loc 1 2243 0
 1893 000c FB 1E 00 1F 10          		mov.L	#0x101f00, r1
 1894                             	.LVL229:
 1895 0011 75 42 80                		mov.L	#0x80, r2
 1896                             	.LVL230:
 1897 0014 05 00 00 00             		bsr	_R_FlashEraseRange
 1898                             	.LVL231:
2244:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(result != FLASH_SUCCESS)
 1899                             		.loc 1 2244 0
 1900 0018 76 21 FF 00             		and #0xff, r1
 1901                             	.LVL232:
 1902 001c 17                      		beq	.L254
 1903                             	.LVL233:
 1904 001d 03                      		.balign 2,3,1
 1905                             	.L256:
2245:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2246:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 1906                             		.loc 1 2246 0
 1907 001e 66 61                   		mov	#6, r1
 1908 0020 38 85 00                		bra	.L255
 1909                             	.LVL234:
 1910                             	.L254:
2240:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     sector_addr = aligned_address & 0xFFFFFF80;
 1911                             		.loc 1 2240 0
 1912 0023 EF AB                   		mov.L	r10, r11
 1913 0025 75 2B 80                		and #0xffffff80, r11
2247:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2248:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2249:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*== b. Clone the sector to write - preserve the blank block ==*/
2250:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     result = cloneSector(CLONE_BLOCK_ADDRESS, sector_addr);
 1914                             		.loc 1 2250 0
 1915 0028 FB 1E 00 1F 10          		mov.L	#0x101f00, r1
 1916 002d EF B2                   		mov.L	r11, r2
 1917 002f 05 00 00 00             		bsr	_cloneSector
 1918                             	.LVL235:
2251:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2252:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(DATA_CLONE_RECOVERY)
2253:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2254:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(BlankCheckDataFlash(CLONE_TRANS_BLOCK_ADDRESS, FLS_WRITE_SIZE) != FLASH_BLANK)
2255:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2256:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         result = R_FlashEraseRange(CLONE_TRANS_BLOCK_ADDRESS, CLONE_BLOCK_SIZE);
2257:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		if(result != FLASH_SUCCESS)
2258:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		{
2259:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 			return FLASH_FAILURE;
2260:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		}
2261:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2262:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*== c. Write address of block to clone ==*/
2263:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wBuff[0] = sector_addr;
2264:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2265:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     wBuff[CLONE_START_WORD_POS/sizeof(uint32_t)] = CLONE_START_WORD_VALUE;
2266:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     result = R_FlashWrite(CLONE_TRANS_BLOCK_ADDRESS, (uint32_t)&wBuff[0], FLS_WRITE_SIZE);
2267:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(result != FLASH_SUCCESS)
2268:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2269:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
2270:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }/* end if error in flash critical section write */
2271:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif /* defined(DATA_CLONE_RECOVERY) */
2272:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2273:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*== d. Erase sector to write ==*/
2274:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     result = R_FlashEraseRange(sector_addr, CLONE_BLOCK_SIZE);
 1919                             		.loc 1 2274 0
 1920 0033 EF B1                   		mov.L	r11, r1
 1921 0035 75 42 80                		mov.L	#0x80, r2
 1922 0038 05 00 00 00             		bsr	_R_FlashEraseRange
 1923                             	.LVL236:
2275:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(result != FLASH_SUCCESS )
 1924                             		.loc 1 2275 0
 1925 003c 5B 11                   		movu.B	r1, r1
 1926 003e 61 01                   		cmp	#0, r1
 1927 0040 21 DE                   		bne	.L256
 1928 0042 EF 17                   		mov.L	r1, r7
2276:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
2277:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*== e. copy data to clone sector ==*/
2278:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     for(i = 0; i < CLONE_BLOCK_SIZE ; i+=FLS_WRITE_SIZE)
2279:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2280:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(BlankCheckDataFlash((CLONE_BLOCK_ADDRESS + i), FLS_WRITE_SIZE) != FLASH_BLANK)
2281:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2282:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             for(j = 0; j < FLS_WRITE_SIZE ; j++)
2283:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2284:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	if( (sector_addr+(i+j)) >= (aligned_address + headOffset)
 1929                             		.loc 1 2284 0
 1930 0044 5B CC                   		movu.B	r12, r12
 1931 0046 4B AC                   		add	r10, r12
 1932                             	.LVL237:
2285:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             			&& (sector_addr+(i+j)) < (aligned_address + headOffset+ len))
 1933                             		.loc 1 2285 0
 1934 0048 4B C9                   		add	r12, r9
 1935                             	.LVL238:
 1936                             		.balign 2,3,4
 1937                             	.L258:
2230:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_DataFlashClone(FLS_positionType aligned_address, uint32_t pSource, uint32_t len, uint8_
 1938                             		.loc 1 2230 0
 1939 004a 73 7A 00 1F 10          		add	#0x101f00, r7, r10
2280:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(BlankCheckDataFlash((CLONE_BLOCK_ADDRESS + i), FLS_WRITE_SIZE) != FLASH_BLANK)
 1940                             		.loc 1 2280 0
 1941 004f EF A1                   		mov.L	r10, r1
 1942 0051 66 82                   		mov.L	#8, r2
 1943 0053 05 00 00 00             		bsr	_BlankCheckDataFlash
 1944                             	.LVL239:
 1945 0057 76 21 FF 00             		and #0xff, r1
 1946 005b 21 0E                   		bne	.L257
 1947 005d 03                      		.balign 2,3,1
 1948                             	.L262:
2278:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     for(i = 0; i < CLONE_BLOCK_SIZE ; i+=FLS_WRITE_SIZE)
 1949                             		.loc 1 2278 0
 1950 005e 62 87                   		add	#8, r7
 1951                             	.LVL240:
 1952 0060 75 57 80                		cmp	#0x80, r7
 1953 0063 21 E7                   		bne	.L258
2286:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
2287:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[j] =  *(uint8_t*)(CLONE_BLOCK_ADDRESS+i+j) &  *((uint8_t*)pSource + j
2288:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 }
2289:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 else
2290:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 {
2291:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 	writeBuff[j] =  *(uint8_t*)(CLONE_BLOCK_ADDRESS+i+j);
2292:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 }
2293:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2294:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = R_FlashWrite(sector_addr + i, (uint32_t)&writeBuff[0], FLS_WRITE_SIZE);
2295:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(result != FLASH_SUCCESS )
2296:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 return FLASH_FAILURE;
2297:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2298:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2299:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #if defined(DATA_CLONE_RECOVERY)
2300:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*== g. Erase of clone transaction  block ==*/
2301:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     result = R_FlashEraseRange((FLS_positionType) CLONE_TRANS_BLOCK_ADDRESS, CLONE_BLOCK_SIZE);
2302:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(result != FLASH_SUCCESS)
2303:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2304:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
2305:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2306:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** #endif
2307:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
 1954                             		.loc 1 2307 0
 1955 0065 66 01                   		mov	#0, r1
 1956 0067 2E 3E                   		bra	.L255
 1957                             	.LVL241:
 1958                             	.L257:
2230:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_DataFlashClone(FLS_positionType aligned_address, uint32_t pSource, uint32_t len, uint8_
 1959                             		.loc 1 2230 0
 1960 0069 FF 21 B7                		add	r11, r7, r1
 1961 006c 71 03 08                		add	#8, r0, r3
 1962 006f EF 06                   		mov.L	r0, r6
 1963 0071 EF D4                   		mov.L	r13, r4
 1964 0073 EF 1E                   		mov.L	r1, r14
 1965 0075 03                      		.balign 2,3,1
 1966                             	.L261:
2284:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	if( (sector_addr+(i+j)) >= (aligned_address + headOffset)
 1967                             		.loc 1 2284 0
 1968 0076 47 CE                   		cmp	r12, r14
 1969 0078 23 0E                   		bltu	.L259
2285:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             			&& (sector_addr+(i+j)) < (aligned_address + headOffset+ len))
 1970                             		.loc 1 2285 0
 1971 007a 47 9E                   		cmp	r9, r14
 1972 007c 22 0A                   		bgeu	.L259
2287:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[j] =  *(uint8_t*)(CLONE_BLOCK_ADDRESS+i+j) &  *((uint8_t*)pSource + j
 1973                             		.loc 1 2287 0
 1974 007e CC 42                   		mov.B	[r4], r2
 1975 0080 06 10 A2                		and	[r10].B, r2
 1976 0083 C3 62                   		mov.B	r2, [r6]
 1977 0085 0B                      		bra	.L260
 1978                             	.L259:
2291:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 	writeBuff[j] =  *(uint8_t*)(CLONE_BLOCK_ADDRESS+i+j);
 1979                             		.loc 1 2291 0
 1980 0086 C0 A6                   		mov.B	[r10], [r6]
 1981                             		.balign 2,3,1
 1982                             	.L260:
 1983 0088 62 1E                   		add	#1, r14
 1984 008a 62 1A                   		add	#1, r10
 1985 008c 62 14                   		add	#1, r4
 1986 008e 62 16                   		add	#1, r6
2282:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             for(j = 0; j < FLS_WRITE_SIZE ; j++)
 1987                             		.loc 1 2282 0
 1988 0090 47 36                   		cmp	r3, r6
 1989 0092 21 E4                   		bne	.L261
2294:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = R_FlashWrite(sector_addr + i, (uint32_t)&writeBuff[0], FLS_WRITE_SIZE);
 1990                             		.loc 1 2294 0
 1991 0094 EF 02                   		mov.L	r0, r2
 1992 0096 66 83                   		mov	#8, r3
 1993 0098 05 00 00 00             		bsr	_R_FlashWrite_1
 1994                             	.LVL242:
2295:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(result != FLASH_SUCCESS )
 1995                             		.loc 1 2295 0
 1996 009c 76 21 FF 00             		and #0xff, r1
 1997                             	.LVL243:
 1998 00a0 20 BE                   		beq	.L262
 1999 00a2 38 7C FF                		bra	.L256
 2000                             	.L255:
2308:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }/* end DataFlashClone */
 2001                             		.loc 1 2308 0
 2002 00a5 64 61                   		and #6, r1
 2003 00a7 3F 6D 0A                		rtsd	#40, r6-r13
 2004                             	.LFE26:
 2006                             		.section	.text.FLS_ProgrammingData,"ax",@progbits
 2007                             		.global	_FLS_ProgrammingData
 2009                             	_FLS_ProgrammingData:
 2010                             	.LFB27:
2309:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2310:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /*
2311:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Function: FLS_ProgrammingData
2312:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  * Description:
2313:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  *
2314:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****  */
2315:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_ProgrammingData(uint8_t* pSource, uint32_t len, FLS_positionType dest)
2316:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 2011                             		.loc 1 2316 0
 2012                             	.LVL244:
 2013 0000 6E 6D                   		pushm	r6-r13
 2014                             	.LCFI18:
 2015 0002 60 80                   		sub	#8, r0
 2016                             	.LCFI19:
 2017 0004 EF 29                   		mov.L	r2, r9
 2018                             	.LVL245:
2317:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	unsigned int headOffset = 0;
2318:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	unsigned int headLen = 0;
2319:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	unsigned int bodyLen = 0;
2320:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int i = 0;
2321:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLS_positionType alineated_address = 0;
2322:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t result = FLASH_SUCCESS;
2323:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t *srcPtr=(uint8_t *)pSource;
2324:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t writeBuff[ROM_PROGRAM_SIZE];
2325:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2326:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     headOffset = (dest & (ROM_PROGRAM_SIZE-1));
 2019                             		.loc 1 2326 0
 2020 0006 EF 3D                   		mov.L	r3, r13
 2021 0008 64 7D                   		and #7, r13
 2022                             	.LVL246:
2327:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2328:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /*  Calcolus start address */
2329:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     alineated_address = (uint32_t)(dest-headOffset);
 2023                             		.loc 1 2329 0
 2024 000a EF 3B                   		mov.L	r3, r11
 2025 000c 75 2B F8                		and #-8, r11
 2026                             	.LVL247:
2330:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2331:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* head ------------------------------------------*/
2332:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if (headOffset)
 2027                             		.loc 1 2332 0
 2028 000f 61 0D                   		cmp	#0, r13
 2029 0011 20 5B                   		beq	.L288
 2030                             	.LVL248:
 2031 0013 66 8C                   		mov.L	#8, r12
 2032 0015 43 DC                   		sub	r13, r12
 2033                             	.LVL249:
 2034 0017 47 2C                   		cmp	r2, r12
 2035 0019 25 05                   		bleu	.L268
 2036 001b EF 2C                   		mov.L	r2, r12
 2037                             	.LVL250:
 2038 001d 03                      		.balign 2,3,1
 2039                             	.L268:
 2040 001e EF 06                   		mov.L	r0, r6
2323:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t *srcPtr=(uint8_t *)pSource;
 2041                             		.loc 1 2323 0
 2042 0020 EF 17                   		mov.L	r1, r7
2333:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2334:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         headLen    = ROM_PROGRAM_SIZE - headOffset;
2335:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2336:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if (headLen > len)
2337:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2338:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             headLen = len;
2339:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2340:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2341:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(i=0; i<ROM_PROGRAM_SIZE; i++)  /* init write buffer */
 2043                             		.loc 1 2341 0
 2044 0022 66 0A                   		mov.L	#0, r10
2342:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2343:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if ( (i < headOffset) || (i >= (headOffset + headLen)) )
 2045                             		.loc 1 2343 0
 2046 0024 FF 2E DC                		add	r13, r12, r14
 2047                             	.LVL251:
 2048 0027 03                      		.balign 2,3,1
 2049                             	.L272:
 2050 0028 47 DA                   		cmp	r13, r10
 2051 002a 23 06                   		bltu	.L269
 2052                             		.loc 1 2343 0 is_stmt 0 discriminator 1
 2053 002c 47 EA                   		cmp	r14, r10
 2054 002e 23 06                   		bltu	.L270
 2055                             		.balign 2,3,4
 2056                             	.L269:
2344:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2345:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 writeBuff[i] = 0xFF;
 2057                             		.loc 1 2345 0 is_stmt 1
 2058 0030 F8 64 FF                		mov.B	#-1, [r6]
 2059 0033 0F                      		bra	.L271
 2060                             	.L270:
2346:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2347:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             else
2348:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2349:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 writeBuff[i]=*srcPtr;
 2061                             		.loc 1 2349 0
 2062 0034 FD 28 74                		mov.B	[r7+], r4
 2063                             	.LVL252:
 2064 0037 C3 64                   		mov.B	r4, [r6]
 2065                             	.LVL253:
 2066 0039 03                      		.balign 2,3,1
 2067                             	.L271:
2341:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(i=0; i<ROM_PROGRAM_SIZE; i++)  /* init write buffer */
 2068                             		.loc 1 2341 0
 2069 003a 62 1A                   		add	#1, r10
 2070                             	.LVL254:
 2071 003c 62 16                   		add	#1, r6
 2072 003e 61 8A                   		cmp	#8, r10
 2073 0040 21 E8                   		bne	.L272
2350:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 srcPtr++;
2351:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2352:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2353:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2354:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         /* scrive nel buffer i dati */
2355:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(BlankCheckDataFlash(alineated_address, ROM_PROGRAM_SIZE) == FLASH_BLANK)
 2074                             		.loc 1 2355 0
 2075 0042 EF B1                   		mov.L	r11, r1
 2076                             	.LVL255:
 2077 0044 EF A2                   		mov.L	r10, r2
 2078                             	.LVL256:
 2079 0046 05 00 00 00             		bsr	_BlankCheckDataFlash
 2080                             	.LVL257:
 2081 004a 76 21 FF 00             		and #0xff, r1
2356:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2357:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = R_FlashWrite(alineated_address, (uint32_t)&writeBuff[0],ROM_PROGRAM_SIZE);
 2082                             		.loc 1 2357 0
 2083 004e EF B1                   		mov.L	r11, r1
 2084 0050 EF 02                   		mov.L	r0, r2
2355:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(BlankCheckDataFlash(alineated_address, ROM_PROGRAM_SIZE) == FLASH_BLANK)
 2085                             		.loc 1 2355 0
 2086 0052 18                      		bne	.L273
 2087                             	.LVL258:
 2088                             		.loc 1 2357 0
 2089 0053 DF A3                   		mov.W	r10, r3
 2090 0055 05 00 00 00             		bsr	_R_FlashWrite_1
 2091                             	.LVL259:
 2092 0059 09                      		bra	.L274
 2093                             	.LVL260:
 2094                             	.L273:
2358:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2359:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         else
2360:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2361:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLS_DataFlashClone(alineated_address, (uint32_t)&writeBuff[0], headLen, headOf
 2095                             		.loc 1 2361 0
 2096 005a EF C3                   		mov.L	r12, r3
 2097 005c CF D4                   		mov.B	r13, r4
 2098 005e 05 00 00 00             		bsr	_FLS_DataFlashClone
 2099                             	.LVL261:
 2100                             		.balign 2,3,3
 2101                             	.L274:
2362:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2363:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2364:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         alineated_address += ROM_PROGRAM_SIZE;
2365:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2366:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }
2367:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2368:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* body -----------------------------------------*/
2369:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	if( result == FLASH_SUCCESS  )
 2102                             		.loc 1 2369 0
 2103 0062 76 21 FF 00             		and #0xff, r1
 2104                             	.LVL262:
 2105 0066 3B 8A 00                		bne	.L296
2364:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         alineated_address += ROM_PROGRAM_SIZE;
 2106                             		.loc 1 2364 0
 2107 0069 62 8B                   		add	#8, r11
 2108                             	.LVL263:
 2109 006b 0D                      		bra	.L267
 2110                             	.LVL264:
 2111                             	.L288:
2323:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t *srcPtr=(uint8_t *)pSource;
 2112                             		.loc 1 2323 0
 2113 006c EF 17                   		mov.L	r1, r7
2318:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 	unsigned int headLen = 0;
 2114                             		.loc 1 2318 0
 2115 006e EF DC                   		mov.L	r13, r12
 2116                             	.LVL265:
 2117                             		.balign 2,3,2
 2118                             	.L267:
2370:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2371:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		bodyLen = len - headLen;
 2119                             		.loc 1 2371 0
 2120 0070 FF 0C C9                		sub	r12, r9, r12
 2121                             	.LVL266:
2315:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_ProgrammingData(uint8_t* pSource, uint32_t len, FLS_positionType dest)
 2122                             		.loc 1 2315 0
 2123 0073 43 7B                   		sub	r7, r11
2372:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		while( bodyLen > ROM_PROGRAM_SIZE )
 2124                             		.loc 1 2372 0
 2125 0075 2E 2D                   		bra	.L276
 2126                             	.LVL267:
 2127                             	.L279:
2373:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2374:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 			if(BlankCheckDataFlash(alineated_address, ROM_PROGRAM_SIZE) == FLASH_BLANK)
 2128                             		.loc 1 2374 0
 2129 0077 EF D1                   		mov.L	r13, r1
 2130 0079 66 82                   		mov.L	#8, r2
 2131 007b 05 00 00 00             		bsr	_BlankCheckDataFlash
 2132                             	.LVL268:
 2133 007f 76 21 FF 00             		and #0xff, r1
2375:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2376:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 result = R_FlashWrite(alineated_address, (uint32_t)srcPtr, ROM_PROGRAM_SIZE);
 2134                             		.loc 1 2376 0
 2135 0083 EF D1                   		mov.L	r13, r1
 2136 0085 EF 72                   		mov.L	r7, r2
2374:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 			if(BlankCheckDataFlash(alineated_address, ROM_PROGRAM_SIZE) == FLASH_BLANK)
 2137                             		.loc 1 2374 0
 2138 0087 18                      		bne	.L277
 2139                             	.LVL269:
 2140                             		.loc 1 2376 0
 2141 0088 66 83                   		mov	#8, r3
 2142 008a 05 00 00 00             		bsr	_R_FlashWrite_1
 2143                             	.LVL270:
 2144 008e 0A                      		bra	.L278
 2145                             	.LVL271:
 2146                             	.L277:
2377:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2378:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             else
2379:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2380:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 result = FLS_DataFlashClone(alineated_address, (uint32_t)srcPtr, ROM_PROGRAM_SIZE, 
 2147                             		.loc 1 2380 0
 2148 008f 66 83                   		mov.L	#8, r3
 2149 0091 66 04                   		mov	#0, r4
 2150 0093 05 00 00 00             		bsr	_FLS_DataFlashClone
 2151                             	.LVL272:
 2152 0097 03                      		.balign 2,3,1
 2153                             	.L278:
2381:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2382:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             bodyLen -= ROM_PROGRAM_SIZE;
 2154                             		.loc 1 2382 0
 2155 0098 60 8C                   		sub	#8, r12
 2156                             	.LVL273:
2383:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             srcPtr += ROM_PROGRAM_SIZE;
 2157                             		.loc 1 2383 0
 2158 009a 62 87                   		add	#8, r7
 2159                             	.LVL274:
2384:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             alineated_address += ROM_PROGRAM_SIZE;
2385:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2386:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(FLASH_SUCCESS != result)
 2160                             		.loc 1 2386 0
 2161 009c 76 21 FF 00             		and #0xff, r1
 2162                             	.LVL275:
 2163 00a0 21 50                   		bne	.L296
 2164                             		.balign 2,3,2
 2165                             	.L276:
2315:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_ProgrammingData(uint8_t* pSource, uint32_t len, FLS_positionType dest)
 2166                             		.loc 1 2315 0 discriminator 1
 2167 00a2 FF 2D 7B                		add	r7, r11, r13
 2168                             	.LVL276:
2372:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 		while( bodyLen > ROM_PROGRAM_SIZE )
 2169                             		.loc 1 2372 0 discriminator 1
 2170 00a5 61 8C                   		cmp	#8, r12
 2171 00a7 24 D0                   		bgtu	.L279
2387:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 break;
2388:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2389:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }/* end if body */
2390:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2391:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     /* tail ------------------------------------------*/
2392:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( (result == FLASH_SUCCESS) &&  (bodyLen > 0))
 2172                             		.loc 1 2392 0
 2173 00a9 61 0C                   		cmp	#0, r12
 2174 00ab 1D                      		bne	.L280
 2175                             	.LVL277:
 2176                             		.balign 2,3,1
 2177                             	.L287:
2393:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     {
2394:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2395:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(i=0; i<ROM_PROGRAM_SIZE; i++)   /* init write buffer */
2396:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2397:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( i<bodyLen )
2398:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2399:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 writeBuff[i] = *srcPtr;
2400:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 srcPtr++;
2401:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2402:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             else
2403:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             {
2404:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 writeBuff[i] = 0xFF;
2405:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             }
2406:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2407:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2408:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(BlankCheckDataFlash(alineated_address, ROM_PROGRAM_SIZE) == FLASH_BLANK)
2409:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2410:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = R_FlashWrite(alineated_address, (uint32_t)&writeBuff[0], ROM_PROGRAM_SIZE);
2411:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2412:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         else
2413:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         {
2414:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLS_DataFlashClone(alineated_address, (uint32_t)&writeBuff[0], ROM_PROGRAM_SIZ
2415:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         }
2416:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     }/* end if tail */
2417:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2418:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2419:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(result != FLASH_SUCCESS)
2420:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
2421:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2422:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return FLASH_SUCCESS;
 2178                             		.loc 1 2422 0
 2179 00ac 66 01                   		mov	#0, r1
 2180 00ae 2E 44                   		bra	.L281
 2181                             	.LVL278:
 2182                             	.L280:
 2183 00b0 EF 06                   		mov.L	r0, r6
2392:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if( (result == FLASH_SUCCESS) &&  (bodyLen > 0))
 2184                             		.loc 1 2392 0
 2185 00b2 66 0A                   		mov.L	#0, r10
 2186                             		.balign 2,3,1
 2187                             	.L284:
2397:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( i<bodyLen )
 2188                             		.loc 1 2397 0
 2189 00b4 47 CA                   		cmp	r12, r10
 2190 00b6 22 08                   		bgeu	.L282
2399:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 writeBuff[i] = *srcPtr;
 2191                             		.loc 1 2399 0
 2192 00b8 FD 28 7B                		mov.B	[r7+], r11
 2193                             	.LVL279:
 2194 00bb C3 6B                   		mov.B	r11, [r6]
 2195                             	.LVL280:
 2196 00bd 0D                      		bra	.L283
 2197                             	.L282:
2404:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 writeBuff[i] = 0xFF;
 2198                             		.loc 1 2404 0
 2199 00be F8 64 FF                		mov.B	#-1, [r6]
 2200 00c1 03                      		.balign 2,3,1
 2201                             	.L283:
2395:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         for(i=0; i<ROM_PROGRAM_SIZE; i++)   /* init write buffer */
 2202                             		.loc 1 2395 0
 2203 00c2 62 1A                   		add	#1, r10
 2204                             	.LVL281:
 2205 00c4 62 16                   		add	#1, r6
 2206 00c6 61 8A                   		cmp	#8, r10
 2207 00c8 21 EC                   		bne	.L284
2408:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(BlankCheckDataFlash(alineated_address, ROM_PROGRAM_SIZE) == FLASH_BLANK)
 2208                             		.loc 1 2408 0
 2209 00ca EF D1                   		mov.L	r13, r1
 2210 00cc EF A2                   		mov.L	r10, r2
 2211 00ce 05 00 00 00             		bsr	_BlankCheckDataFlash
 2212                             	.LVL282:
 2213 00d2 76 21 FF 00             		and #0xff, r1
2410:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = R_FlashWrite(alineated_address, (uint32_t)&writeBuff[0], ROM_PROGRAM_SIZE);
 2214                             		.loc 1 2410 0
 2215 00d6 EF D1                   		mov.L	r13, r1
 2216 00d8 EF 02                   		mov.L	r0, r2
2408:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(BlankCheckDataFlash(alineated_address, ROM_PROGRAM_SIZE) == FLASH_BLANK)
 2217                             		.loc 1 2408 0
 2218 00da 18                      		bne	.L285
 2219                             	.LVL283:
2410:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = R_FlashWrite(alineated_address, (uint32_t)&writeBuff[0], ROM_PROGRAM_SIZE);
 2220                             		.loc 1 2410 0
 2221 00db DF A3                   		mov.W	r10, r3
 2222 00dd 05 00 00 00             		bsr	_R_FlashWrite_1
 2223                             	.LVL284:
 2224 00e1 09                      		bra	.L286
 2225                             	.LVL285:
 2226                             	.L285:
2414:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             result = FLS_DataFlashClone(alineated_address, (uint32_t)&writeBuff[0], ROM_PROGRAM_SIZ
 2227                             		.loc 1 2414 0
 2228 00e2 EF A3                   		mov.L	r10, r3
 2229 00e4 66 04                   		mov	#0, r4
 2230 00e6 05 00 00 00             		bsr	_FLS_DataFlashClone
 2231                             	.LVL286:
 2232                             		.balign 2,3,3
 2233                             	.L286:
2419:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if(result != FLASH_SUCCESS)
 2234                             		.loc 1 2419 0
 2235 00ea 76 21 FF 00             		and #0xff, r1
 2236                             	.LVL287:
 2237 00ee 20 BE                   		beq	.L287
 2238                             	.LVL288:
 2239                             		.balign 2,3,1
 2240                             	.L296:
2420:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         return FLASH_FAILURE;
 2241                             		.loc 1 2420 0
 2242 00f0 66 61                   		mov	#6, r1
 2243                             		.balign 2,3,1
 2244                             	.L281:
 2245 00f2 5B 11                   		movu.B	r1, r1
2423:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }/* FLS_ProgrammingData */
 2246                             		.loc 1 2423 0
 2247 00f4 3F 6D 0A                		rtsd	#40, r6-r13
 2248                             	.LFE27:
 2250 00f7 03                      		.section	.text.FLS_Programming,"ax",@progbits
 2251                             		.global	_FLS_Programming
 2253                             	_FLS_Programming:
 2254                             	.LFB21:
1980:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 2255                             		.loc 1 1980 0
 2256                             	.LVL289:
 2257 0000 6E 6D                   		pushm	r6-r13
 2258                             	.LCFI20:
 2259 0002 60 80                   		sub	#8, r0
 2260                             	.LCFI21:
 2261 0004 EF 3C                   		mov.L	r3, r12
 2262                             	.LVL290:
 2263                             	.LBB63:
 2264                             	.LBB64:
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLRE0.WORD = 0x2D00 | (read_en_mask & 0x00FF);
 2265                             		.loc 1 525 0
 2266 0006 FB 7E 40 C4 7F          		mov.L	#0x7fc440, r7
 2267 000b F8 79 FF 2D             		mov.W	#0x2dff, [r7]
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLWE0.WORD = 0x1E00 |  (write_en_mask & 0x00FF);
 2268                             		.loc 1 528 0
 2269 000f FB 7E 50 C4 7F          		mov.L	#0x7fc450, r7
 2270 0014 F8 79 FF 1E             		mov.W	#0x1eff, [r7]
 2271                             	.LBE64:
 2272                             	.LBE63:
1991:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     if((dest >= DF_ADDRESS) && (dest < DF_ADDRSS_END))	/* Write Data in DATA FLASH */
 2273                             		.loc 1 1991 0
 2274 0018 73 37 00 00 F0          		add	#0xfff00000, r3, r7
 2275 001d 76 07 FF 1F             		cmp	#0x1fff, r7
 2276 0021 24 09                   		bgtu	.L298
1993:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         fls_programming_status=FLS_ProgrammingData( pSource, len, dest);
 2277                             		.loc 1 1993 0
 2278 0023 05 00 00 00             		bsr	_FLS_ProgrammingData
 2279                             	.LVL291:
 2280 0027 38 CD 00                		bra	.L299
 2281                             	.LVL292:
 2282                             	.L298:
 2283 002a EF 1A                   		mov.L	r1, r10
 2284                             	.LVL293:
 2285 002c EF 2D                   		mov.L	r2, r13
1997:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         headOffset = (dest & ADDR_MASK);
 2286                             		.loc 1 1997 0
 2287 002e EF 37                   		mov.L	r3, r7
 2288 0030 64 77                   		and	#7, r7
 2289                             	.LVL294:
2000:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if(headOffset > 0)
 2290                             		.loc 1 2000 0
 2291 0032 20 3E                   		beq	.L311
 2292                             	.LVL295:
 2293 0034 66 8B                   		mov.L	#8, r11
 2294 0036 43 7B                   		sub	r7, r11
 2295                             	.LVL296:
 2296 0038 47 2B                   		cmp	r2, r11
 2297 003a 25 04                   		bleu	.L301
 2298 003c EF 2B                   		mov.L	r2, r11
 2299                             	.LVL297:
 2300                             		.balign 2,3,1
 2301                             	.L301:
 2302 003e EF 06                   		mov.L	r0, r6
2009:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             for(i=0; i<FLS_WRITE_SIZE; i++)  /* init write buffer */
 2303                             		.loc 1 2009 0
 2304 0040 66 03                   		mov.L	#0, r3
 2305                             	.LVL298:
2011:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	if ( (i < headOffset) || (i >= headOffset+headLen) )
 2306                             		.loc 1 2011 0
 2307 0042 FF 2E 7B                		add	r7, r11, r14
 2308                             	.LVL299:
 2309 0045 03                      		.balign 2,3,1
 2310                             	.L305:
 2311 0046 47 73                   		cmp	r7, r3
 2312 0048 23 06                   		bltu	.L302
2011:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             	if ( (i < headOffset) || (i >= headOffset+headLen) )
 2313                             		.loc 1 2011 0 is_stmt 0 discriminator 1
 2314 004a 47 E3                   		cmp	r14, r3
 2315 004c 23 06                   		bltu	.L303
 2316                             		.balign 2,3,4
 2317                             	.L302:
2013:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i] = 0xFF;
 2318                             		.loc 1 2013 0 is_stmt 1
 2319 004e F8 64 FF                		mov.B	#-1, [r6]
 2320 0051 0F                      		bra	.L304
 2321                             	.L303:
2017:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i]=*srcPtr;
 2322                             		.loc 1 2017 0
 2323 0052 FD 28 A4                		mov.B	[r10+], r4
 2324                             	.LVL300:
 2325 0055 C3 64                   		mov.B	r4, [r6]
 2326                             	.LVL301:
 2327 0057 03                      		.balign 2,3,1
 2328                             	.L304:
2009:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             for(i=0; i<FLS_WRITE_SIZE; i++)  /* init write buffer */
 2329                             		.loc 1 2009 0
 2330 0058 62 13                   		add	#1, r3
 2331                             	.LVL302:
 2332 005a 62 16                   		add	#1, r6
 2333 005c 61 83                   		cmp	#8, r3
 2334 005e 21 E8                   		bne	.L305
2022:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             fls_programming_status=R_FlashWrite((uint32_t)dest-headOffset, (uint32_t)&writeBuff[0],
 2335                             		.loc 1 2022 0
 2336 0060 FF 01 7C                		sub	r7, r12, r1
 2337                             	.LVL303:
 2338 0063 EF 02                   		mov.L	r0, r2
 2339                             	.LVL304:
 2340 0065 05 00 00 00             		bsr	_R_FlashWrite_1
 2341                             	.LVL305:
2026:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( !fls_programming_status )
 2342                             		.loc 1 2026 0
 2343 0069 5B 1E                   		movu.B	r1, r14
 2344 006b 61 0E                   		cmp	#0, r14
 2345 006d 21 75                   		bne	.L306
 2346 006f 0B                      		bra	.L300
 2347                             	.LVL306:
 2348                             	.L311:
1984:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     unsigned int headLen=0;
 2349                             		.loc 1 1984 0
 2350 0070 EF 7B                   		mov.L	r7, r11
 2351                             	.LVL307:
 2352                             		.balign 2,3,1
 2353                             	.L300:
 2354                             	.LBB65:
2030:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             tailLen = (len + headOffset) & ADDR_MASK;
 2355                             		.loc 1 2030 0
 2356 0072 4B D7                   		add	r13, r7
 2357                             	.LVL308:
 2358 0074 64 77                   		and #7, r7
 2359                             	.LVL309:
2031:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(headLen>0)
 2360                             		.loc 1 2031 0
 2361 0076 61 0B                   		cmp	#0, r11
 2362 0078 1C                      		bne	.L307
2029:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             int nByte=len;
 2363                             		.loc 1 2029 0
 2364 0079 EF D6                   		mov.L	r13, r6
 2365 007b 0D                      		bra	.L308
 2366                             	.L307:
2033:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 nByte -= headLen;
 2367                             		.loc 1 2033 0
 2368 007c FF 06 BD                		sub	r11, r13, r6
 2369                             	.LVL310:
 2370 007f 03                      		.balign 2,3,1
 2371                             	.L308:
2035:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             nByte -= tailLen;
 2372                             		.loc 1 2035 0
 2373 0080 43 76                   		sub	r7, r6
 2374                             	.LVL311:
2036:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if(nByte>0)
 2375                             		.loc 1 2036 0
 2376 0082 61 06                   		cmp	#0, r6
 2377 0084 2B 16                   		ble	.L309
2038:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 fls_programming_status=R_FlashWrite(writePos, (uint32_t)srcPtr, nByte);
 2378                             		.loc 1 2038 0
 2379 0086 FF 21 CB                		add	r12, r11, r1
 2380 0089 EF A2                   		mov.L	r10, r2
 2381 008b DF 63                   		mov.W	r6, r3
 2382 008d 05 00 00 00             		bsr	_R_FlashWrite_1
 2383                             	.LVL312:
2039:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 srcPtr += nByte;
 2384                             		.loc 1 2039 0
 2385 0091 4B 6A                   		add	r6, r10
 2386                             	.LVL313:
 2387                             	.LBE65:
2044:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****         if( !fls_programming_status )
 2388                             		.loc 1 2044 0
 2389 0093 5B 1B                   		movu.B	r1, r11
 2390                             	.LVL314:
 2391 0095 61 0B                   		cmp	#0, r11
 2392 0097 21 4B                   		bne	.L306
 2393                             	.LVL315:
 2394 0099 03                      		.balign 2,3,1
 2395                             	.L309:
 2396                             	.LBB66:
2047:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( tailLen > 0 && dest < beginTail)
 2397                             		.loc 1 2047 0
 2398 009a 61 07                   		cmp	#0, r7
 2399 009c 20 41                   		beq	.L312
2046:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             unsigned int beginTail = dest+(len-tailLen);
 2400                             		.loc 1 2046 0 discriminator 1
 2401 009e 4B CD                   		add	r12, r13
 2402                             	.LVL316:
 2403 00a0 FF 01 7D                		sub	r7, r13, r1
2047:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( tailLen > 0 && dest < beginTail)
 2404                             		.loc 1 2047 0 discriminator 1
 2405 00a3 47 1C                   		cmp	r1, r12
 2406 00a5 22 3B                   		bgeu	.L313
2051:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i] = 0xFF;
 2407                             		.loc 1 2051 0
 2408 00a7 F8 04 FF                		mov.B	#-1, [r0]
 2409                             	.LVL317:
 2410 00aa F9 04 01 FF             		mov.B	#-1, 1[r0]
 2411                             	.LVL318:
 2412 00ae F9 04 02 FF             		mov.B	#-1, 2[r0]
 2413                             	.LVL319:
 2414 00b2 F9 04 03 FF             		mov.B	#-1, 3[r0]
 2415                             	.LVL320:
 2416 00b6 F9 04 04 FF             		mov.B	#-1, 4[r0]
 2417                             	.LVL321:
 2418 00ba F9 04 05 FF             		mov.B	#-1, 5[r0]
 2419                             	.LVL322:
 2420 00be F9 04 06 FF             		mov.B	#-1, 6[r0]
 2421                             	.LVL323:
 2422 00c2 F9 04 07 FF             		mov.B	#-1, 7[r0]
 2423                             	.LVL324:
 2424 00c6 EF 06                   		mov.L	r0, r6
 2425                             	.LVL325:
1979:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t FLS_Programming(uint8_t* pSource, uint32_t len, FLS_positionType dest)
 2426                             		.loc 1 1979 0
 2427 00c8 4B A7                   		add	r10, r7
 2428                             	.LVL326:
 2429                             		.balign 2,3,5
 2430                             	.L310:
2055:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                     writeBuff[i] = *srcPtr++;
 2431                             		.loc 1 2055 0 discriminator 2
 2432 00ca FD 28 AB                		mov.B	[r10+], r11
 2433 00cd FD 20 6B                		mov.B	r11, [r6+]
2053:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 for(i=0; i<tailLen; i++)
 2434                             		.loc 1 2053 0 discriminator 2
 2435 00d0 47 7A                   		cmp	r7, r10
 2436 00d2 21 F8                   		bne	.L310
2057:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****                 fls_programming_status=R_FlashWrite(beginTail, (uint32_t)&writeBuff[0], ROM_PROGRAM
 2437                             		.loc 1 2057 0
 2438 00d4 EF 02                   		mov.L	r0, r2
 2439 00d6 66 83                   		mov	#8, r3
 2440 00d8 05 00 00 00             		bsr	_R_FlashWrite_1
 2441                             	.LVL327:
 2442 00dc 0E                      		bra	.L306
 2443                             	.LVL328:
 2444                             	.L312:
2047:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****             if( tailLen > 0 && dest < beginTail)
 2445                             		.loc 1 2047 0
 2446 00dd CF 71                   		mov.B	r7, r1
 2447 00df 0B                      		bra	.L306
 2448                             	.LVL329:
 2449                             	.L313:
 2450 00e0 66 01                   		mov	#0, r1
 2451                             	.LVL330:
 2452                             		.balign 2,3,4
 2453                             	.L306:
 2454                             	.LBE66:
 2455                             	.LBB67:
 2456                             	.LBB68:
 525:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLRE0.WORD = 0x2D00 | (read_en_mask & 0x00FF);
 2457                             		.loc 1 525 0
 2458 00e2 FB 7E 40 C4 7F          		mov.L	#0x7fc440, r7
 2459 00e7 F8 79 FF 2D             		mov.W	#0x2dff, [r7]
 528:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     FLASH.DFLWE0.WORD = 0x1E00 |  (write_en_mask & 0x00FF);
 2460                             		.loc 1 528 0
 2461 00eb FB 7E 50 C4 7F          		mov.L	#0x7fc450, r7
 2462 00f0 F8 79 00 1E             		mov.W	#0x1e00, [r7]
 2463                             	.LVL331:
 2464                             		.balign 2,3,1
 2465                             	.L299:
 2466                             	.LBE68:
 2467                             	.LBE67:
2064:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 2468                             		.loc 1 2064 0
 2469 00f4 5B 11                   		movu.B	r1, r1
 2470 00f6 3F 6D 0A                		rtsd	#40, r6-r13
 2471                             	.LFE21:
 2473 00f9 03                      		.section	.text.R_FlashErase_2,"ax",@progbits
 2474                             		.global	_R_FlashErase_2
 2476                             	_R_FlashErase_2:
 2477                             	.LFB28:
2424:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2425:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** /******************************************************************************
2426:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** Typedef definitions
2427:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** ******************************************************************************/
2428:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** extern char _load_start_PRAMERASE, _load_stop_PRAMERASE;
2429:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** extern char _load_start_PRAMWRITE, _load_stop_PRAMWRITE;
2430:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** extern char hal_ovl ;
2431:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2432:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashErase_2(uint8_t block)
2433:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 2478                             		.loc 1 2433 0
 2479                             	.LVL332:
 2480 0000 7E A7                   		push.l	r7
 2481                             	.LCFI22:
 2482 0002 CF 1E                   		mov.B	r1, r14
 2483                             	.LVL333:
2434:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t retVal=FLASH_SUCCESS;
2435:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2436:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     memcpy( (void*)&hal_ovl, (const void*)&_load_start_PRAMERASE, (&_load_stop_PRAMERASE - &_load_s
 2484                             		.loc 1 2436 0
 2485 0004 FB 12 00 00 00 00       		mov.L	#_hal_ovl, r1
 2486                             	.LVL334:
 2487 000a FB 22 00 00 00 00       		mov.L	#__load_start_PRAMERASE, r2
 2488 0010 FB 32 00 00 00 00       		mov.L	#__load_stop_PRAMERASE, r3
 2489 0016 43 23                   		sub	r2, r3
 2490 0018 7F 8F                   		smovf
2437:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2438:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     retVal = R_FlashErase_1(block);
 2491                             		.loc 1 2438 0
 2492 001a CF E1                   		mov.B	r14, r1
2439:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2440:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return retVal;
2441:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 2493                             		.loc 1 2441 0
 2494 001c 7E B7                   		pop	r7
2438:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     retVal = R_FlashErase_1(block);
 2495                             		.loc 1 2438 0
 2496 001e 04 00 00 00             		bra	_R_FlashErase_1
 2497                             	.LVL335:
 2498                             	.LFE28:
 2500                             		.section	.text.R_FlashWrite_2,"ax",@progbits
 2501                             		.global	_R_FlashWrite_2
 2503                             	_R_FlashWrite_2:
 2504                             	.LFB29:
2442:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2443:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** uint8_t R_FlashWrite_2 ( uint32_t flash_addr, uint32_t buffer_addr, uint16_t bytes )
2444:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** {
 2505                             		.loc 1 2444 0
 2506                             	.LVL336:
 2507 0000 7E A7                   		push.l	r7
 2508                             	.LCFI23:
 2509 0002 EF 15                   		mov.L	r1, r5
 2510 0004 EF 24                   		mov.L	r2, r4
 2511 0006 DF 3E                   		mov.W	r3, r14
 2512                             	.LVL337:
2445:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     uint8_t retVal=FLASH_SUCCESS;
2446:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2447:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     memcpy( (void*)&hal_ovl, (const void*)&_load_start_PRAMWRITE, (&_load_stop_PRAMWRITE - &_load_s
 2513                             		.loc 1 2447 0
 2514 0008 FB 12 00 00 00 00       		mov.L	#_hal_ovl, r1
 2515                             	.LVL338:
 2516 000e FB 22 00 00 00 00       		mov.L	#__load_start_PRAMWRITE, r2
 2517                             	.LVL339:
 2518 0014 FB 32 00 00 00 00       		mov.L	#__load_stop_PRAMWRITE, r3
 2519                             	.LVL340:
 2520 001a 43 23                   		sub	r2, r3
 2521 001c 7F 8F                   		smovf
2448:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2449:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     retVal = R_FlashWrite_1 ( flash_addr, buffer_addr, bytes );
 2522                             		.loc 1 2449 0
 2523 001e EF 51                   		mov.L	r5, r1
 2524 0020 EF 42                   		mov.L	r4, r2
 2525 0022 DF E3                   		mov.W	r14, r3
2450:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** 
2451:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     return retVal;
2452:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c **** }
 2526                             		.loc 1 2452 0
 2527 0024 7E B7                   		pop	r7
2449:C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200\RN_RX200_hal_Flash.c ****     retVal = R_FlashWrite_1 ( flash_addr, buffer_addr, bytes );
 2528                             		.loc 1 2449 0
 2529 0026 04 00 00 00             		bra	_R_FlashWrite_1
 2530                             	.LVL341:
 2531                             	.LFE29:
 2533                             		.section	.bss.fcu_transfer_complete,"aw",@nobits
 2536                             	_fcu_transfer_complete:
 2537 0000 00                      		.zero	1
 2538                             		.section	.bss.current_mode,"aw",@nobits
 2541                             	_current_mode:
 2542 0000 00                      		.zero	1
 2543                             		.section	.bss.flash_semaphore,"aw",@nobits
 2544                             		.balign 4
 2547                             	_flash_semaphore:
 2548 0000 00 00 00 00             		.zero	4
 2549                             		.section	.bss.flash_state,"aw",@nobits
 2550                             		.balign 4
 2553                             	_flash_state:
 2554 0000 00 00 00 00             		.zero	4
 2555                             		.section	.bss.fcu_pclk_command,"aw",@nobits
 2558                             	_fcu_pclk_command:
 2559 0000 00                      		.zero	1
 3004                             	.Letext0:
 3005                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 3006                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\OS\\EmbOS\\RX200_GNU\\V388\\Inc/RTOS.h"
 3007                             		.file 4 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_reg.h"
 3008                             		.file 5 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_cfg.h"
 3009                             		.file 6 "C:/Workspace/FW_Inertia/branch_indesit/HAL/RN_RX200/RN_RX200_hal_Flash.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RN_RX200_hal_Flash.c
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:6      .PRAM:00000000 __FlashGrabState
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13     .PRAM:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2547   .bss.flash_semaphore:00000000 _flash_semaphore
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2553   .bss.flash_state:00000000 _flash_state
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:78     .PRAM:00000027 __FlashReleaseState
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2541   .bss.current_mode:00000000 _current_mode
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:96     .text.get_block_addresses:00000000 _get_block_addresses
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:101    .text.get_block_addresses:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:124    .text._Flash_Init:00000000 __Flash_Init
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:128    .text._Flash_Init:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2536   .bss.fcu_transfer_complete:00000000 _fcu_transfer_complete
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:204    .text.R_FlashDataAreaAccess:00000000 _R_FlashDataAreaAccess
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:209    .text.R_FlashDataAreaAccess:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:226    .PRAM:00000043 __Flash_Reset
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:269    .PRAM:0000007f __Enter_PE_Mode.isra.0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2558   .bss.fcu_pclk_command:00000000 _fcu_pclk_command
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:466    .PRAM:000001a4 __Exit_PE_Mode
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:572    .PRAM:00000248 _R_FlashWrite_1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:903    .PRAM:000003c9 __Flash_Erase_Command
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:969    .PRAM:00000411 _R_FlashEraseRange
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1075   .PRAM:00000491 _R_FlashErase_1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1181   .text.R_FlashDataAreaBlankCheck:00000000 _R_FlashDataAreaBlankCheck
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1185   .text.R_FlashDataAreaBlankCheck:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1404   .PRAM:00000507 _R_FlashGetStatus
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1424   .text.FLS_Init:00000000 _FLS_Init
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1428   .text.FLS_Init:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1449   .text.FLS_Erase:00000000 _FLS_Erase
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1453   .text.FLS_Erase:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1524   .text.FLS_CheckErrors:00000000 _FLS_CheckErrors
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1529   .text.FLS_CheckErrors:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1595   .text.FLS_InitRegsForErasing:00000000 _FLS_InitRegsForErasing
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1598   .text.FLS_InitRegsForErasing:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1604   .text.BlankCheckDataFlash:00000000 _BlankCheckDataFlash
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1608   .text.BlankCheckDataFlash:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1746   .text.cloneSector:00000000 _cloneSector
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1750   .text.cloneSector:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1815   .text.FLS_BlankCheck:00000000 _FLS_BlankCheck
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1819   .text.FLS_BlankCheck:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1879   .text.FLS_DataFlashClone:00000000 _FLS_DataFlashClone
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1883   .text.FLS_DataFlashClone:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2009   .text.FLS_ProgrammingData:00000000 _FLS_ProgrammingData
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2013   .text.FLS_ProgrammingData:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2253   .text.FLS_Programming:00000000 _FLS_Programming
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2257   .text.FLS_Programming:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2476   .text.R_FlashErase_2:00000000 _R_FlashErase_2
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2480   .text.R_FlashErase_2:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2503   .text.R_FlashWrite_2:00000000 _R_FlashWrite_2
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2507   .text.R_FlashWrite_2:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2561   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:7      .PRAM:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:79     .PRAM:00000027 .LFB17
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:97     .text.get_block_addresses:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:125    .text._Flash_Init:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:205    .text.R_FlashDataAreaAccess:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:227    .PRAM:00000043 .LFB14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:270    .PRAM:0000007f .LFB30
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:467    .PRAM:000001a4 .LFB8
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:573    .PRAM:00000248 .LFB12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:904    .PRAM:000003c9 .LFB11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:970    .PRAM:00000411 .LFB10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1076   .PRAM:00000491 .LFB9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1182   .text.R_FlashDataAreaBlankCheck:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1405   .PRAM:00000507 .LFB15
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1425   .text.FLS_Init:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1450   .text.FLS_Erase:00000000 .LFB20
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1525   .text.FLS_CheckErrors:00000000 .LFB22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1596   .text.FLS_InitRegsForErasing:00000000 .LFB23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1605   .text.BlankCheckDataFlash:00000000 .LFB24
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1747   .text.cloneSector:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1816   .text.FLS_BlankCheck:00000000 .LFB25
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1880   .text.FLS_DataFlashClone:00000000 .LFB26
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2010   .text.FLS_ProgrammingData:00000000 .LFB27
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2254   .text.FLS_Programming:00000000 .LFB21
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2477   .text.R_FlashErase_2:00000000 .LFB28
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2504   .text.R_FlashWrite_2:00000000 .LFB29
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:9344   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13814  .debug_str:000009a1 .LASF563
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13996  .debug_str:00000ddc .LASF564
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13294  .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13386  .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14514  .debug_str:00001a80 .LASF0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13466  .debug_str:000001e5 .LASF2
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14030  .debug_str:00000edd .LASF1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14140  .debug_str:00001189 .LASF3
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14156  .debug_str:000011e4 .LASF4
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13560  .debug_str:000003f3 .LASF5
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14090  .debug_str:00001057 .LASF6
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14374  .debug_str:000016fd .LASF7
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14446  .debug_str:000018de .LASF8
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13804  .debug_str:00000968 .LASF9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13688  .debug_str:000006bc .LASF10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14032  .debug_str:00000ef0 .LASF11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14504  .debug_str:00001a49 .LASF12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14022  .debug_str:00000ebc .LASF13
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14154  .debug_str:000011db .LASF14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14358  .debug_str:0000168b .LASF15
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13498  .debug_str:000002b9 .LASF16
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13828  .debug_str:00000a1c .LASF17
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13860  .debug_str:00000ae4 .LASF18
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13620  .debug_str:0000055d .LASF19
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14344  .debug_str:00001634 .LASF33
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13780  .debug_str:000008e7 .LASF20
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14382  .debug_str:00001748 .LASF21
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13868  .debug_str:00000b08 .LASF22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14068  .debug_str:00000fbb .LASF23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13572  .debug_str:00000442 .LASF24
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14478  .debug_str:000019b4 .LASF25
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13456  .debug_str:000001a9 .LASF26
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14162  .debug_str:00001210 .LASF27
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13480  .debug_str:0000023d .LASF28
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13628  .debug_str:0000057b .LASF29
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13856  .debug_str:00000acc .LASF30
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13706  .debug_str:00000708 .LASF31
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14270  .debug_str:00001472 .LASF32
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14438  .debug_str:000018a5 .LASF34
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13682  .debug_str:00000696 .LASF35
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13396  .debug_str:00000030 .LASF36
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14260  .debug_str:00001433 .LASF37
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14158  .debug_str:000011f6 .LASF38
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13478  .debug_str:0000022a .LASF39
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14014  .debug_str:00000e8b .LASF40
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13822  .debug_str:000009f4 .LASF41
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13750  .debug_str:00000830 .LASF42
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13966  .debug_str:00000d2c .LASF43
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14062  .debug_str:00000f99 .LASF44
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14182  .debug_str:0000127c .LASF45
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14208  .debug_str:000012ff .LASF46
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13544  .debug_str:0000038a .LASF47
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13454  .debug_str:000001a2 .LASF48
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14516  .debug_str:00001a8a .LASF49
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14100  .debug_str:00001098 .LASF50
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14244  .debug_str:000013da .LASF51
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13610  .debug_str:00000518 .LASF52
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13686  .debug_str:000006ab .LASF53
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14106  .debug_str:000010bd .LASF54
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13644  .debug_str:000005d3 .LASF55
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13598  .debug_str:000004d8 .LASF56
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13834  .debug_str:00000a41 .LASF57
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14176  .debug_str:0000125c .LASF58
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13724  .debug_str:00000781 .LASF59
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13806  .debug_str:00000970 .LASF60
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14048  .debug_str:00000f5b .LASF61
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14064  .debug_str:00000fa6 .LASF62
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13476  .debug_str:00000223 .LASF63
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14192  .debug_str:000012a6 .LASF64
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14492  .debug_str:00001a00 .LASF65
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13388  .debug_str:00000000 .LASF66
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14466  .debug_str:00001961 .LASF67
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14006  .debug_str:00000e5a .LASF68
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13630  .debug_str:00000585 .LASF69
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13500  .debug_str:000002c5 .LASF70
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14428  .debug_str:0000185a .LASF71
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14342  .debug_str:0000162f .LASF73
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13534  .debug_str:0000034c .LASF72
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13642  .debug_str:000005cd .LASF74
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13622  .debug_str:00000565 .LASF75
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14362  .debug_str:000016a8 .LASF76
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13802  .debug_str:00000962 .LASF77
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13672  .debug_str:0000065c .LASF78
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14226  .debug_str:00001365 .LASF79
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14390  .debug_str:0000177a .LASF80
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14422  .debug_str:00001841 .LASF81
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14484  .debug_str:000019ce .LASF82
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13486  .debug_str:00000257 .LASF83
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14130  .debug_str:0000115c .LASF84
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13552  .debug_str:000003be .LASF85
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13528  .debug_str:0000032a .LASF86
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13526  .debug_str:00000323 .LASF87
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13524  .debug_str:0000031c .LASF88
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13522  .debug_str:00000315 .LASF89
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13656  .debug_str:0000061a .LASF90
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13986  .debug_str:00000da5 .LASF91
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13984  .debug_str:00000d9e .LASF92
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13982  .debug_str:00000d97 .LASF93
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13980  .debug_str:00000d90 .LASF94
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13764  .debug_str:00000884 .LASF95
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13520  .debug_str:00000310 .LASF96
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14186  .debug_str:00001289 .LASF97
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14052  .debug_str:00000f65 .LASF98
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14476  .debug_str:000019ad .LASF99
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13518  .debug_str:00000309 .LASF100
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14424  .debug_str:00001849 .LASF101
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13690  .debug_str:000006ca .LASF102
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14116  .debug_str:00001107 .LASF103
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14340  .debug_str:00001627 .LASF104
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13948  .debug_str:00000cb4 .LASF105
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14196  .debug_str:000012bd .LASF106
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14190  .debug_str:0000129e .LASF107
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14294  .debug_str:00001500 .LASF108
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14012  .debug_str:00000e83 .LASF109
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14252  .debug_str:0000140a .LASF110
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14482  .debug_str:000019c7 .LASF111
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13594  .debug_str:000004c4 .LASF112
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14346  .debug_str:00001643 .LASF113
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13794  .debug_str:00000934 .LASF114
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14520  .debug_str:00001aa5 .LASF115
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13776  .debug_str:000008cc .LASF116
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13716  .debug_str:00000750 .LASF117
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14488  .debug_str:000019e8 .LASF118
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13632  .debug_str:00000590 .LASF119
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14050  .debug_str:00000f60 .LASF120
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13768  .debug_str:00000899 .LASF121
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14220  .debug_str:0000133f .LASF122
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14210  .debug_str:00001306 .LASF123
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13852  .debug_str:00000ab3 .LASF124
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14326  .debug_str:000015c7 .LASF125
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13424  .debug_str:000000dd .LASF126
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14020  .debug_str:00000eb5 .LASF127
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14164  .debug_str:0000121a .LASF128
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13414  .debug_str:000000a8 .LASF129
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13416  .debug_str:000000b0 .LASF130
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14204  .debug_str:000012eb .LASF131
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13932  .debug_str:00000c57 .LASF132
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14094  .debug_str:0000106f .LASF133
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14184  .debug_str:00001283 .LASF134
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13658  .debug_str:0000061f .LASF135
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14126  .debug_str:00001144 .LASF136
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13798  .debug_str:0000094c .LASF137
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13626  .debug_str:00000571 .LASF138
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14056  .debug_str:00000f79 .LASF139
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13742  .debug_str:00000807 .LASF140
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13896  .debug_str:00000b84 .LASF141
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13894  .debug_str:00000b7f .LASF142
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13892  .debug_str:00000b7a .LASF143
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13890  .debug_str:00000b75 .LASF144
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13888  .debug_str:00000b70 .LASF145
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13886  .debug_str:00000b6b .LASF146
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13884  .debug_str:00000b66 .LASF147
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13882  .debug_str:00000b61 .LASF148
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13624  .debug_str:0000056b .LASF149
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13666  .debug_str:0000064a .LASF150
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13938  .debug_str:00000c7b .LASF151
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13848  .debug_str:00000aa6 .LASF152
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14304  .debug_str:00001530 .LASF153
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13516  .debug_str:00000302 .LASF154
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13514  .debug_str:000002fb .LASF155
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13512  .debug_str:000002f4 .LASF156
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13510  .debug_str:000002ed .LASF157
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13508  .debug_str:000002e6 .LASF158
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13506  .debug_str:000002df .LASF159
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13504  .debug_str:000002d8 .LASF160
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14300  .debug_str:00001518 .LASF161
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14298  .debug_str:0000150f .LASF162
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14296  .debug_str:00001506 .LASF163
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14470  .debug_str:0000197a .LASF164
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14292  .debug_str:000014f7 .LASF165
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14290  .debug_str:000014ee .LASF166
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14288  .debug_str:000014e5 .LASF167
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14286  .debug_str:000014dc .LASF168
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14026  .debug_str:00000eca .LASF169
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13912  .debug_str:00000bf3 .LASF170
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14256  .debug_str:0000141f .LASF171
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13866  .debug_str:00000b02 .LASF172
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13590  .debug_str:000004b0 .LASF173
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14412  .debug_str:00001809 .LASF174
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13760  .debug_str:00000873 .LASF175
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13652  .debug_str:00000605 .LASF176
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14002  .debug_str:00000e4a .LASF177
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13600  .debug_str:000004e2 .LASF178
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14460  .debug_str:00001941 .LASF179
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14134  .debug_str:00001174 .LASF180
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13604  .debug_str:000004f3 .LASF181
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14174  .debug_str:00001254 .LASF182
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14444  .debug_str:000018d6 .LASF183
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13748  .debug_str:00000829 .LASF184
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13680  .debug_str:0000068f .LASF185
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14114  .debug_str:00001100 .LASF186
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14274  .debug_str:0000148e .LASF187
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13864  .debug_str:00000afb .LASF188
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14042  .debug_str:00000f3a .LASF189
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13670  .debug_str:00000655 .LASF190
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13754  .debug_str:00000850 .LASF191
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14112  .debug_str:000010f9 .LASF192
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13924  .debug_str:00000c3b .LASF193
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13926  .debug_str:00000c42 .LASF194
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13928  .debug_str:00000c49 .LASF195
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13930  .debug_str:00000c50 .LASF196
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13668  .debug_str:0000064f .LASF197
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13694  .debug_str:000006e0 .LASF198
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14172  .debug_str:0000124b .LASF199
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13696  .debug_str:000006e5 .LASF200
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14136  .debug_str:0000117a .LASF201
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13698  .debug_str:000006ea .LASF202
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14410  .debug_str:00001803 .LASF203
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14138  .debug_str:00001183 .LASF204
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14086  .debug_str:00001049 .LASF205
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13700  .debug_str:000006ef .LASF206
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13406  .debug_str:00000074 .LASF207
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13702  .debug_str:000006f4 .LASF208
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14088  .debug_str:0000104f .LASF209
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14198  .debug_str:000012c5 .LASF329
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14272  .debug_str:0000147f .LASF210
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13492  .debug_str:00000288 .LASF211
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14096  .debug_str:00001077 .LASF212
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13872  .debug_str:00000b21 .LASF213
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14348  .debug_str:00001649 .LASF214
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14332  .debug_str:000015ea .LASF215
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14314  .debug_str:00001575 .LASF216
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13654  .debug_str:0000060c .LASF217
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13710  .debug_str:00000725 .LASF218
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14040  .debug_str:00000f2c .LASF219
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14102  .debug_str:000010a5 .LASF220
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13420  .debug_str:000000be .LASF221
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13740  .debug_str:000007f7 .LASF222
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13964  .debug_str:00000d1c .LASF223
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13876  .debug_str:00000b35 .LASF224
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14282  .debug_str:000014bf .LASF225
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14370  .debug_str:000016db .LASF226
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14372  .debug_str:000016ec .LASF227
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14366  .debug_str:000016bc .LASF228
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13530  .debug_str:00000331 .LASF229
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13914  .debug_str:00000bfa .LASF230
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13916  .debug_str:00000c07 .LASF231
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13918  .debug_str:00000c14 .LASF232
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13920  .debug_str:00000c21 .LASF233
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13922  .debug_str:00000c2e .LASF234
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13540  .debug_str:00000370 .LASF235
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13542  .debug_str:0000037d .LASF236
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14168  .debug_str:00001231 .LASF237
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14170  .debug_str:0000123e .LASF238
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14322  .debug_str:000015a5 .LASF239
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14324  .debug_str:000015b6 .LASF240
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13788  .debug_str:00000914 .LASF241
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14420  .debug_str:00001835 .LASF242
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14486  .debug_str:000019d6 .LASF243
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13576  .debug_str:00000458 .LASF244
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14338  .debug_str:00001617 .LASF245
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14360  .debug_str:00001698 .LASF246
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13660  .debug_str:00000625 .LASF247
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13684  .debug_str:0000069c .LASF248
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13704  .debug_str:000006f9 .LASF249
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13718  .debug_str:00000756 .LASF250
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14128  .debug_str:0000114d .LASF251
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13738  .debug_str:000007e8 .LASF252
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13752  .debug_str:00000841 .LASF253
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13908  .debug_str:00000bd6 .LASF254
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13936  .debug_str:00000c6c .LASF255
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14380  .debug_str:00001739 .LASF256
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14368  .debug_str:000016cc .LASF257
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14142  .debug_str:00001192 .LASF258
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13596  .debug_str:000004c9 .LASF259
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13464  .debug_str:000001d6 .LASF260
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13426  .debug_str:000000e4 .LASF261
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14396  .debug_str:0000179d .LASF262
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14416  .debug_str:00001818 .LASF263
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14436  .debug_str:00001896 .LASF264
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14454  .debug_str:00001918 .LASF265
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13726  .debug_str:0000078a .LASF266
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13490  .debug_str:00000279 .LASF267
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13536  .debug_str:00000351 .LASF268
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13556  .debug_str:000003d6 .LASF269
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13566  .debug_str:0000041b .LASF270
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13970  .debug_str:00000d42 .LASF271
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14092  .debug_str:00001060 .LASF272
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14120  .debug_str:00001114 .LASF273
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14254  .debug_str:00001410 .LASF274
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14058  .debug_str:00000f7f .LASF275
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14060  .debug_str:00000f8c .LASF276
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14018  .debug_str:00000ea6 .LASF277
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14038  .debug_str:00000f1d .LASF278
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14150  .debug_str:000011c4 .LASF279
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14250  .debug_str:000013fb .LASF280
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14268  .debug_str:00001463 .LASF281
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13502  .debug_str:000002ca .LASF282
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14496  .debug_str:00001a10 .LASF283
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14512  .debug_str:00001a71 .LASF284
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13474  .debug_str:00000215 .LASF285
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13612  .debug_str:00000520 .LASF286
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13634  .debug_str:00000595 .LASF287
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13450  .debug_str:00000186 .LASF288
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14462  .debug_str:00001947 .LASF289
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14472  .debug_str:00001983 .LASF290
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14490  .debug_str:000019f0 .LASF291
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14500  .debug_str:00001a29 .LASF292
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14402  .debug_str:000017c6 .LASF293
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14228  .debug_str:0000136c .LASF294
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14178  .debug_str:00001261 .LASF295
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14376  .debug_str:00001714 .LASF296
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14384  .debug_str:0000174f .LASF297
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14214  .debug_str:00001315 .LASF298
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14160  .debug_str:00001202 .LASF299
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14364  .debug_str:000016ae .LASF300
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13676  .debug_str:00000673 .LASF301
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13608  .debug_str:0000050a .LASF302
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13428  .debug_str:000000f3 .LASF303
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13650  .debug_str:000005f7 .LASF304
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14146  .debug_str:000011a7 .LASF305
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13994  .debug_str:00000dce .LASF306
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13720  .debug_str:00000765 .LASF307
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14066  .debug_str:00000fad .LASF308
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14108  .debug_str:000010db .LASF309
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13956  .debug_str:00000ce4 .LASF310
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14246  .debug_str:000013df .LASF311
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14080  .debug_str:0000101b .LASF312
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13446  .debug_str:00000169 .LASF313
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14440  .debug_str:000018b9 .LASF314
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14400  .debug_str:000017b8 .LASF315
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13410  .debug_str:0000008c .LASF316
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14074  .debug_str:00000fe7 .LASF317
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14046  .debug_str:00000f4b .LASF318
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13638  .debug_str:000005b3 .LASF319
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13408  .debug_str:0000007c .LASF320
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13838  .debug_str:00000a5d .LASF321
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13840  .debug_str:00000a6d .LASF322
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13842  .debug_str:00000a7d .LASF323
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13844  .debug_str:00000a8d .LASF324
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14302  .debug_str:00001521 .LASF325
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14430  .debug_str:00001865 .LASF326
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14284  .debug_str:000014cd .LASF327
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13392  .debug_str:00000019 .LASF328
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14414  .debug_str:0000180f .LASF330
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13636  .debug_str:000005a4 .LASF331
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13978  .debug_str:00000d81 .LASF332
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13712  .debug_str:00000733 .LASF333
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13468  .debug_str:000001ee .LASF334
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13412  .debug_str:0000009a .LASF335
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13934  .debug_str:00000c5e .LASF336
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13910  .debug_str:00000be5 .LASF337
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13878  .debug_str:00000b45 .LASF338
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14458  .debug_str:00001933 .LASF339
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13968  .debug_str:00000d34 .LASF340
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14320  .debug_str:00001598 .LASF341
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13904  .debug_str:00000bb9 .LASF342
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14194  .debug_str:000012ad .LASF343
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14122  .debug_str:00001123 .LASF344
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14352  .debug_str:0000165d .LASF345
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13880  .debug_str:00000b53 .LASF346
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13818  .debug_str:000009d4 .LASF347
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14276  .debug_str:00001494 .LASF348
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13674  .debug_str:00000663 .LASF349
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13430  .debug_str:00000101 .LASF350
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13432  .debug_str:0000010e .LASF351
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13434  .debug_str:0000011b .LASF352
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13436  .debug_str:00000128 .LASF353
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13438  .debug_str:00000135 .LASF354
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13440  .debug_str:00000142 .LASF355
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13442  .debug_str:0000014f .LASF356
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13444  .debug_str:0000015c .LASF357
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13732  .debug_str:000007b7 .LASF358
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13734  .debug_str:000007c4 .LASF359
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14240  .debug_str:000013b8 .LASF360
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14242  .debug_str:000013c9 .LASF361
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13774  .debug_str:000008c0 .LASF362
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14398  .debug_str:000017ac .LASF363
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13854  .debug_str:00000aba .LASF364
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13538  .debug_str:00000360 .LASF365
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14278  .debug_str:000014a5 .LASF366
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14316  .debug_str:00001583 .LASF367
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14132  .debug_str:00001165 .LASF368
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14148  .debug_str:000011b5 .LASF369
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14166  .debug_str:00001222 .LASF370
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13862  .debug_str:00000aec .LASF371
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14526  .debug_str:00001ac4 .LASF372
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14218  .debug_str:00001330 .LASF373
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14232  .debug_str:00001383 .LASF374
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14386  .debug_str:0000175d .LASF375
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14408  .debug_str:000017f4 .LASF376
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13714  .debug_str:00000741 .LASF377
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13692  .debug_str:000006d1 .LASF378
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13472  .debug_str:00000206 .LASF379
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13728  .debug_str:00000799 .LASF380
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13958  .debug_str:00000cf2 .LASF381
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13946  .debug_str:00000ca5 .LASF382
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13730  .debug_str:000007a8 .LASF383
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13746  .debug_str:0000081a .LASF384
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13766  .debug_str:0000088a .LASF385
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13782  .debug_str:000008ed .LASF386
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14200  .debug_str:000012ce .LASF387
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13974  .debug_str:00000d64 .LASF388
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13998  .debug_str:00000e25 .LASF389
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14016  .debug_str:00000e97 .LASF390
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14034  .debug_str:00000efc .LASF391
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14448  .debug_str:000018ec .LASF392
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13422  .debug_str:000000ce .LASF393
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13448  .debug_str:00000177 .LASF394
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14406  .debug_str:000017e5 .LASF395
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14262  .debug_str:00001439 .LASF396
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14264  .debug_str:00001446 .LASF397
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13546  .debug_str:00000396 .LASF398
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13578  .debug_str:00000468 .LASF399
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13758  .debug_str:00000865 .LASF400
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13606  .debug_str:000004fb .LASF401
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13618  .debug_str:0000054e .LASF402
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14236  .debug_str:0000139c .LASF403
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13820  .debug_str:000009e5 .LASF404
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13462  .debug_str:000001c7 .LASF405
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14224  .debug_str:00001357 .LASF406
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14528  .debug_str:00001ad3 .LASF407
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14078  .debug_str:0000100c .LASF408
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13648  .debug_str:000005e9 .LASF409
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13772  .debug_str:000008b0 .LASF410
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13784  .debug_str:000008fc .LASF411
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13796  .debug_str:0000093c .LASF412
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13812  .debug_str:00000991 .LASF413
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13496  .debug_str:000002ab .LASF414
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14468  .debug_str:0000196c .LASF415
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14434  .debug_str:00001888 .LASF416
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13452  .debug_str:00000194 .LASF417
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13992  .debug_str:00000dc0 .LASF418
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13800  .debug_str:00000954 .LASF419
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13770  .debug_str:000008a2 .LASF420
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13954  .debug_str:00000cd6 .LASF421
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14418  .debug_str:00001827 .LASF422
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14238  .debug_str:000013aa .LASF423
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14202  .debug_str:000012dd .LASF424
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14388  .debug_str:0000176c .LASF425
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14248  .debug_str:000013ed .LASF426
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13950  .debug_str:00000cba .LASF427
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13952  .debug_str:00000cc8 .LASF428
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14308  .debug_str:00001547 .LASF429
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13722  .debug_str:00000773 .LASF430
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13570  .debug_str:00000434 .LASF431
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13532  .debug_str:0000033e .LASF432
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13580  .debug_str:00000477 .LASF433
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13708  .debug_str:00000717 .LASF434
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13558  .debug_str:000003e5 .LASF435
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13404  .debug_str:00000066 .LASF436
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13678  .debug_str:00000681 .LASF437
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14530  .debug_str:00001ae2 .LASF438
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14502  .debug_str:00001a39 .LASF439
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14070  .debug_str:00000fc3 .LASF440
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14266  .debug_str:00001453 .LASF441
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14306  .debug_str:00001537 .LASF442
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14524  .debug_str:00001ab4 .LASF443
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14310  .debug_str:00001555 .LASF444
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14312  .debug_str:00001565 .LASF445
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13646  .debug_str:000005da .LASF446
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13756  .debug_str:00000856 .LASF447
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14442  .debug_str:000018c7 .LASF448
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13900  .debug_str:00000b99 .LASF449
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13564  .debug_str:00000412 .LASF450
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14464  .debug_str:00001957 .LASF451
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14480  .debug_str:000019bd .LASF452
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14494  .debug_str:00001a06 .LASF453
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13832  .debug_str:00000a37 .LASF454
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13582  .debug_str:00000485 .LASF455
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14212  .debug_str:0000130c .LASF456
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13906  .debug_str:00000bc9 .LASF457
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13816  .debug_str:000009c7 .LASF458
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14258  .debug_str:00001426 .LASF459
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14180  .debug_str:0000126f .LASF460
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13460  .debug_str:000001ba .LASF461
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13826  .debug_str:00000a0f .LASF462
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14082  .debug_str:00001029 .LASF463
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14188  .debug_str:00001291 .LASF464
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13942  .debug_str:00000c8b .LASF465
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13470  .debug_str:000001fc .LASF466
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14506  .debug_str:00001a56 .LASF467
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13550  .debug_str:000003b4 .LASF468
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13762  .debug_str:0000087a .LASF469
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13458  .debug_str:000001b0 .LASF470
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13568  .debug_str:0000042a .LASF471
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13586  .debug_str:00000497 .LASF472
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13616  .debug_str:00000544 .LASF473
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13640  .debug_str:000005c3 .LASF474
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14518  .debug_str:00001a98 .LASF475
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13824  .debug_str:000009fe .LASF476
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14054  .debug_str:00000f6c .LASF477
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14206  .debug_str:000012f3 .LASF478
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13592  .debug_str:000004b6 .LASF479
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13858  .debug_str:00000ad6 .LASF480
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14124  .debug_str:00001133 .LASF481
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13792  .debug_str:00000925 .LASF482
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13870  .debug_str:00000b12 .LASF485
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14104  .debug_str:000010b2 .LASF483
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14350  .debug_str:00001657 .LASF484
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14328  .debug_str:000015ce .LASF486
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13484  .debug_str:0000024c .LASF487
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13846  .debug_str:00000a9d .LASF488
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13990  .debug_str:00000db9 .LASF489
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14354  .debug_str:0000166d .LASF493
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13418  .debug_str:000000b8 .LASF490
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14118  .debug_str:0000110e .LASF491
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13548  .debug_str:000003a5 .LASF492
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13962  .debug_str:00000d0c .LASF565
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:75     .PRAM:00000027 .LFE16
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14280  .debug_str:000014b5 .LASF509
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10676  .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13662  .debug_str:00000634 .LASF497
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10699  .debug_loc:0000003b .LLST1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13400  .debug_str:00000041 .LASF566
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:91     .PRAM:00000043 .LFE17
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13494  .debug_str:00000297 .LASF494
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14230  .debug_str:0000137a .LASF495
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14330  .debug_str:000015e3 .LASF496
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:119    .text.get_block_addresses:00000017 .LFE0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10716  .debug_loc:00000069 .LLST2
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14028  .debug_str:00000ed1 .LASF507
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:199    .text._Flash_Init:0000008c .LFE1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10730  .debug_loc:0000008a .LLST3
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10739  .debug_loc:000000a2 .LLST4
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10754  .debug_loc:000000c4 .LLST5
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14084  .debug_str:00001033 .LASF567
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13988  .debug_str:00000dac .LASF498
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13744  .debug_str:0000080c .LASF499
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:221    .text.R_FlashDataAreaAccess:0000001b .LFE5
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10762  .debug_loc:000000d8 .LLST6
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10776  .debug_loc:000000f9 .LLST7
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13390  .debug_str:0000000c .LASF516
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:266    .PRAM:0000007f .LFE14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10790  .debug_loc:0000011a .LLST8
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10803  .debug_loc:0000013a .LLST9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:254    .PRAM:00000063 .LVL19
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14392  .debug_str:00001782 .LASF568
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13836  .debug_str:00000a58 .LASF500
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13488  .debug_str:00000260 .LASF501
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:463    .PRAM:000001a4 .LFE30
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10815  .debug_loc:00000159 .LLST10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10833  .debug_loc:00000185 .LLST11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:333    .PRAM:000000dd .LBB9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:356    .PRAM:00000100 .LBE9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:334    .PRAM:000000dd .LBB10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:355    .PRAM:00000100 .LBE10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10859  .debug_loc:000001c7 .LLST12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:374    .PRAM:00000122 .LBB11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:460    .PRAM:000001a1 .LBE11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10869  .debug_loc:000001dd .LLST13
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:375    .PRAM:00000122 .LBB12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:459    .PRAM:000001a1 .LBE12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:392    .PRAM:00000146 .LBB13
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:444    .PRAM:0000018f .LBE13
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10890  .debug_loc:0000020c .LLST14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:393    .PRAM:00000146 .LBB14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:443    .PRAM:0000018f .LBE14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10911  .debug_loc:0000023b .LLST15
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:428    .PRAM:00000178 .LVL34
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:308    .PRAM:000000af .LVL24
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13976  .debug_str:00000d73 .LASF569
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:568    .PRAM:00000248 .LFE8
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10928  .debug_loc:00000266 .LLST16
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10941  .debug_loc:00000286 .LLST17
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10958  .debug_loc:000002b1 .LLST18
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:492    .PRAM:000001c2 .LVL43
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13554  .debug_str:000003c5 .LASF502
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14044  .debug_str:00000f43 .LASF503
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14318  .debug_str:00001593 .LASF504
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13790  .debug_str:00000920 .LASF505
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13940  .debug_str:00000c80 .LASF506
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14008  .debug_str:00000e65 .LASF508
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:900    .PRAM:000003c9 .LFE12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10980  .debug_loc:000002e1 .LLST19
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10998  .debug_loc:0000030d .LLST20
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13810  .debug_str:00000985 .LASF510
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11085  .debug_loc:000003e1 .LLST21
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11126  .debug_loc:0000044e .LLST22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11164  .debug_loc:000004b1 .LLST23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14450  .debug_str:000018fb .LASF511
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:655    .PRAM:000002d9 .LBB21
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11181  .debug_loc:000004dc .LLST24
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11198  .debug_loc:00000507 .LLST25
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11206  .debug_loc:0000051b .LLST26
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11238  .debug_loc:0000056a .LLST27
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:681    .PRAM:000002f2 .LBB24
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11246  .debug_loc:0000057e .LLST28
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11261  .debug_loc:000005a7 .LLST29
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11286  .debug_loc:000005e8 .LLST30
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:731    .PRAM:00000326 .LVL68
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:612    .PRAM:00000293 .LVL50
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:626    .PRAM:000002b5 .LVL52
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:631    .PRAM:000002bd .LVL53
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:841    .PRAM:000003a3 .LVL83
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:844    .PRAM:000003a6 .LVL84
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:965    .PRAM:00000411 .LFE11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11318  .debug_loc:00000637 .LLST31
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11331  .debug_loc:00000657 .LLST32
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11356  .debug_loc:00000691 .LLST33
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:943    .PRAM:000003fc .LBB33
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:961    .PRAM:0000040c .LBE33
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:944    .PRAM:000003fc .LBB34
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:960    .PRAM:0000040c .LBE34
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:934    .PRAM:000003ed .LVL105
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14036  .debug_str:00000f0b .LASF512
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1071   .PRAM:00000491 .LFE10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11373  .debug_loc:000006bc .LLST34
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13960  .debug_str:00000d01 .LASF513
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11386  .debug_loc:000006dc .LLST35
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11411  .debug_loc:00000719 .LLST36
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11430  .debug_loc:0000074d .LLST37
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:994    .PRAM:00000439 .LVL112
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1003   .PRAM:0000044d .LVL113
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1009   .PRAM:00000455 .LVL114
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1029   .PRAM:0000046e .LVL117
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1042   .PRAM:0000047b .LVL120
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1045   .PRAM:0000047e .LVL121
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1176   .PRAM:00000507 .LFE9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11455  .debug_loc:0000078e .LLST38
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11473  .debug_loc:000007ba .LLST39
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1093   .PRAM:000004a2 .LBB38
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1167   .PRAM:000004ff .LBE38
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11502  .debug_loc:000007ff .LLST40
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1094   .PRAM:000004a2 .LBB39
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1166   .PRAM:000004ff .LBE39
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11516  .debug_loc:00000820 .LLST41
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11527  .debug_loc:0000083e .LLST42
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1134   .PRAM:000004e0 .LBB40
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1148   .PRAM:000004ee .LBE40
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1138   .PRAM:000004e5 .LVL135
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1098   .PRAM:000004a8 .LVL130
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1113   .PRAM:000004c1 .LVL133
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1118   .PRAM:000004c9 .LVL134
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1152   .PRAM:000004f3 .LVL138
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1158   .PRAM:000004f9 .LVL139
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1161   .PRAM:000004fc .LVL140
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1089   .PRAM:0000049c .LVL128
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14474  .debug_str:00001993 .LASF514
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1399   .text.R_FlashDataAreaBlankCheck:00000137 .LFE4
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11538  .debug_loc:0000085c .LLST43
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11556  .debug_loc:00000888 .LLST44
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11622  .debug_loc:00000926 .LLST45
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11651  .debug_loc:0000096b .LLST46
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11666  .debug_loc:00000994 .LLST47
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11723  .debug_loc:00000a26 .LLST48
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1261   .text.R_FlashDataAreaBlankCheck:0000008d .LBB41
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1269   .text.R_FlashDataAreaBlankCheck:00000094 .LBE41
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14508  .debug_str:00001a60 .LASF515
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1265   .text.R_FlashDataAreaBlankCheck:00000093 .LVL154
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1194   .text.R_FlashDataAreaBlankCheck:0000000c .LVL145
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1218   .text.R_FlashDataAreaBlankCheck:00000042 .LVL146
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1227   .text.R_FlashDataAreaBlankCheck:00000058 .LVL147
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1232   .text.R_FlashDataAreaBlankCheck:00000061 .LVL148
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1310   .text.R_FlashDataAreaBlankCheck:000000c3 .LVL163
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1356   .text.R_FlashDataAreaBlankCheck:00000107 .LVL170
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1359   .text.R_FlashDataAreaBlankCheck:0000010b .LVL171
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1371   .text.R_FlashDataAreaBlankCheck:00000123 .LVL172
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14404  .debug_str:000017d4 .LASF570
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1419   .PRAM:00000517 .LFE15
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14334  .debug_str:000015f8 .LASF517
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1444   .text.FLS_Init:0000001b .LFE19
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1433   .text.FLS_Init:00000008 .LBB44
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1443   .text.FLS_Init:0000001b .LBE44
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1429   .text.FLS_Init:00000004 .LVL180
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1432   .text.FLS_Init:00000008 .LVL181
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14498  .debug_str:00001a1f .LASF518
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1519   .text.FLS_Erase:00000056 .LFE20
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11745  .debug_loc:00000a5d .LLST49
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11758  .debug_loc:00000a7d .LLST50
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13902  .debug_str:00000ba8 .LASF519
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11814  .debug_loc:00000b03 .LLST51
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11827  .debug_loc:00000b23 .LLST52
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1456   .text.FLS_Erase:00000002 .LBB50
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1465   .text.FLS_Erase:00000014 .LBE50
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1506   .text.FLS_Erase:00000040 .LBB52
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1515   .text.FLS_Erase:00000052 .LBE52
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1495   .text.FLS_Erase:0000003a .LVL192
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14110  .debug_str:000010e9 .LASF520
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1590   .text.FLS_CheckErrors:00000056 .LFE22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11878  .debug_loc:00000b83 .LLST53
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1580   .text.FLS_CheckErrors:0000004f .LVL202
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13562  .debug_str:000003fb .LASF571
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1599   .text.FLS_InitRegsForErasing:00000001 .LFE23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13778  .debug_str:000008d3 .LASF521
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1741   .text.BlankCheckDataFlash:000000a0 .LFE24
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11899  .debug_loc:00000bb9 .LLST54
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14394  .debug_str:00001798 .LASF522
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14452  .debug_str:0000190d .LASF523
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13602  .debug_str:000004e8 .LASF524
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13394  .debug_str:00000028 .LASF525
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14522  .debug_str:00001aac .LASF526
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14004  .debug_str:00000e51 .LASF527
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14144  .debug_str:000011a1 .LASF528
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14426  .debug_str:00001850 .LASF529
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14456  .debug_str:00001927 .LASF530
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1810   .text.cloneSector:0000004d .LFE18
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11912  .debug_loc:00000bd9 .LLST55
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11930  .debug_loc:00000c05 .LLST56
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13584  .debug_str:00000490 .LASF531
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11941  .debug_loc:00000c23 .LLST57
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11959  .debug_loc:00000c4f .LLST58
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14024  .debug_str:00000ec5 .LASF532
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11979  .debug_loc:00000c84 .LLST59
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1760   .text.cloneSector:0000000f .LVL207
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1774   .text.cloneSector:00000020 .LVL210
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1798   .text.cloneSector:00000042 .LVL214
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13588  .debug_str:000004a1 .LASF533
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1874   .text.FLS_BlankCheck:00000043 .LFE25
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:11986  .debug_loc:00000c97 .LLST60
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14152  .debug_str:000011d2 .LASF534
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12026  .debug_loc:00000cf5 .LLST61
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12055  .debug_loc:00000d3a .LLST62
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12077  .debug_loc:00000d71 .LLST63
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12090  .debug_loc:00000d91 .LLST64
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1858   .text.FLS_BlankCheck:00000037 .LVL224
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14098  .debug_str:00001085 .LASF535
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2004   .text.FLS_DataFlashClone:000000aa .LFE26
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12116  .debug_loc:00000dd3 .LLST65
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14222  .debug_str:00001347 .LASF536
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12134  .debug_loc:00000dff .LLST66
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13398  .debug_str:00000039 .LASF537
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12163  .debug_loc:00000e44 .LLST67
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12174  .debug_loc:00000e62 .LLST68
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12203  .debug_loc:00000ea7 .LLST69
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12232  .debug_loc:00000eec .LLST70
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12252  .debug_loc:00000f21 .LLST71
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12269  .debug_loc:00000f4c .LLST72
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13874  .debug_str:00000b2f .LASF538
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13482  .debug_str:00000242 .LASF539
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13808  .debug_str:00000979 .LASF540
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12282  .debug_loc:00000f6c .LLST73
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1898   .text.FLS_DataFlashClone:00000018 .LVL231
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1918   .text.FLS_DataFlashClone:00000033 .LVL235
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1923   .text.FLS_DataFlashClone:0000003c .LVL236
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1944   .text.FLS_DataFlashClone:00000057 .LVL239
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1994   .text.FLS_DataFlashClone:0000009c .LVL242
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14072  .debug_str:00000fd3 .LASF541
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2248   .text.FLS_ProgrammingData:000000f7 .LFE27
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12332  .debug_loc:00000fc6 .LLST74
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12350  .debug_loc:00000ff2 .LLST75
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12375  .debug_loc:0000102c .LLST76
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12394  .debug_loc:00001060 .LLST77
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12419  .debug_loc:0000109a .LLST78
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12440  .debug_loc:000010c9 .LLST79
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14510  .debug_str:00001a69 .LASF542
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12465  .debug_loc:00001103 .LLST80
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12477  .debug_loc:00001122 .LLST81
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13402  .debug_str:00000054 .LASF543
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12498  .debug_loc:00001158 .LLST82
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12576  .debug_loc:00001229 .LLST83
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13850  .debug_str:00000aac .LASF544
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12643  .debug_loc:000012d3 .LLST84
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2080   .text.FLS_ProgrammingData:0000004a .LVL257
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2091   .text.FLS_ProgrammingData:00000059 .LVL259
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2099   .text.FLS_ProgrammingData:00000062 .LVL261
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2132   .text.FLS_ProgrammingData:0000007f .LVL268
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2143   .text.FLS_ProgrammingData:0000008e .LVL270
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2151   .text.FLS_ProgrammingData:00000097 .LVL272
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2212   .text.FLS_ProgrammingData:000000d2 .LVL282
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2223   .text.FLS_ProgrammingData:000000e1 .LVL284
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2231   .text.FLS_ProgrammingData:000000ea .LVL286
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13898  .debug_str:00000b89 .LASF545
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2471   .text.FLS_Programming:000000f9 .LFE21
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12698  .debug_loc:00001363 .LLST85
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12716  .debug_loc:0000138f .LLST86
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12752  .debug_loc:000013e2 .LLST87
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12800  .debug_loc:00001456 .LLST88
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14378  .debug_str:00001722 .LASF546
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12827  .debug_loc:000014a0 .LLST89
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12865  .debug_loc:00001503 .LLST90
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12904  .debug_loc:00001567 .LLST91
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12924  .debug_loc:00001595 .LLST92
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12949  .debug_loc:000015cf .LLST93
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:12977  .debug_loc:0000160c .LLST94
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2263   .text.FLS_Programming:00000006 .LBB63
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2272   .text.FLS_Programming:00000018 .LBE63
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2354   .text.FLS_Programming:00000072 .LBB65
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2387   .text.FLS_Programming:00000093 .LBE65
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13029  .debug_loc:0000168b .LLST95
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13041  .debug_loc:000016a3 .LLST96
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2383   .text.FLS_Programming:00000091 .LVL312
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2396   .text.FLS_Programming:0000009a .LBB66
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2454   .text.FLS_Programming:000000e2 .LBE66
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13056  .debug_loc:000016cc .LLST97
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2441   .text.FLS_Programming:000000dc .LVL327
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2455   .text.FLS_Programming:000000e2 .LBB67
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2467   .text.FLS_Programming:000000f4 .LBE67
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13116  .debug_loc:00001730 .LLST98
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13124  .debug_loc:00001744 .LLST99
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2279   .text.FLS_Programming:00000027 .LVL291
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2341   .text.FLS_Programming:00000069 .LVL305
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14356  .debug_str:0000167c .LASF547
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2498   .text.R_FlashErase_2:00000022 .LFE28
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13133  .debug_loc:00001759 .LLST100
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13146  .debug_loc:00001779 .LLST101
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2497   .text.R_FlashErase_2:00000022 .LVL335
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14010  .debug_str:00000e74 .LASF548
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2531   .text.R_FlashWrite_2:0000002a .LFE29
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13164  .debug_loc:000017a5 .LLST102
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13177  .debug_loc:000017c5 .LLST103
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13195  .debug_loc:000017f1 .LLST104
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13213  .debug_loc:0000181d .LLST105
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2530   .text.R_FlashWrite_2:0000002a .LVL341
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14000  .debug_str:00000e34 .LASF549
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14216  .debug_str:00001323 .LASF550
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13574  .debug_str:00000447 .LASF551
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13944  .debug_str:00000c95 .LASF552
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13664  .debug_str:0000063e .LASF553
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14234  .debug_str:00001392 .LASF554
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13830  .debug_str:00000a21 .LASF555
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13614  .debug_str:0000052f .LASF556
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14336  .debug_str:00001601 .LASF557
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14076  .debug_str:00000ff7 .LASF558
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13786  .debug_str:0000090c .LASF559
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:14432  .debug_str:00001874 .LASF560
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13972  .debug_str:00000d51 .LASF561
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:13736  .debug_str:000007d1 .LASF562
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:10     .PRAM:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:63     .PRAM:00000020 .LVL3
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:65     .PRAM:00000021 .LVL4
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:69     .PRAM:00000023 .LVL5
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:31     .PRAM:00000005 .LVL1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:55     .PRAM:00000012 .LVL2
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:99     .text.get_block_addresses:00000000 .LVL6
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:108    .text.get_block_addresses:0000000f .LVL7
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:177    .text._Flash_Init:00000069 .LVL9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:180    .text._Flash_Init:0000006e .LVL10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:188    .text._Flash_Init:00000079 .LVL11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:194    .text._Flash_Init:00000086 .LVL12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:207    .text.R_FlashDataAreaAccess:00000000 .LVL13
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:210    .text.R_FlashDataAreaAccess:00000002 .LVL14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:216    .text.R_FlashDataAreaAccess:0000000f .LVL15
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:230    .PRAM:00000045 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:236    .PRAM:00000052 .LVL16
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:243    .PRAM:00000057 .LVL17
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:245    .PRAM:00000059 .LVL18
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:274    .PRAM:00000081 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:276    .PRAM:00000083 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:272    .PRAM:0000007f .LVL20
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:284    .PRAM:00000091 .LVL22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:304    .PRAM:000000ab .LVL23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:413    .PRAM:00000169 .LVL30
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:332    .PRAM:000000dd .LVL25
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:352    .PRAM:00000100 .LVL26
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:373    .PRAM:00000122 .LVL27
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:441    .PRAM:0000018f .LVL35
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:451    .PRAM:00000196 .LVL36
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:457    .PRAM:000001a1 .LVL37
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:391    .PRAM:00000146 .LVL28
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:411    .PRAM:00000167 .LVL29
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:418    .PRAM:0000016d .LVL31
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:420    .PRAM:0000016f .LVL32
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:423    .PRAM:00000171 .LVL33
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:470    .PRAM:000001a6 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:474    .PRAM:000001ac .LVL39
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:482    .PRAM:000001b7 .LVL40
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:484    .PRAM:000001b9 .LVL41
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:487    .PRAM:000001bb .LVL42
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:471    .PRAM:000001a6 .LVL38
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:541    .PRAM:00000219 .LVL44
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:545    .PRAM:00000220 .LVL45
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:549    .PRAM:00000225 .LVL46
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:577    .PRAM:0000024a .LCFI4
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:579    .PRAM:0000024c .LCFI5
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:575    .PRAM:00000248 .LVL47
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:586    .PRAM:00000258 .LVL49
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:634    .PRAM:000002bf .LVL54
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:636    .PRAM:000002c2 .LVL55
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:654    .PRAM:000002d9 .LVL57
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:661    .PRAM:000002e3 .LVL58
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:726    .PRAM:00000321 .LVL67
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:733    .PRAM:00000329 .LVL69
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:763    .PRAM:00000354 .LVL72
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:847    .PRAM:000003a8 .LVL85
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:851    .PRAM:000003aa .LVL86
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:853    .PRAM:000003ab .LVL87
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:857    .PRAM:000003ad .LVL88
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:859    .PRAM:000003ae .LVL89
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:863    .PRAM:000003b0 .LVL90
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:865    .PRAM:000003b1 .LVL91
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:869    .PRAM:000003b3 .LVL92
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:881    .PRAM:000003bc .LVL94
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:896    .PRAM:000003c6 .LVL98
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:771    .PRAM:00000358 .LVL73
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:786    .PRAM:00000364 .LVL75
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:827    .PRAM:00000398 .LVL81
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:837    .PRAM:000003a0 .LVL82
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:649    .PRAM:000002d5 .LVL56
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:582    .PRAM:00000250 .LVL48
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:791    .PRAM:00000367 .LVL76
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:793    .PRAM:00000369 .LVL77
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:783    .PRAM:00000361 .LVL74
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:806    .PRAM:00000379 .LVL78
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:808    .PRAM:0000037b .LVL79
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:811    .PRAM:0000037d .LVL80
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:686    .PRAM:000002f6 .LVL59
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:747    .PRAM:00000342 .LVL70
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:694    .PRAM:00000300 .LVL60
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:698    .PRAM:00000303 .LVL61
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:700    .PRAM:00000305 .LVL62
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:718    .PRAM:0000031a .LVL64
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:720    .PRAM:0000031c .LVL65
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:723    .PRAM:0000031e .LVL66
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:754    .PRAM:0000034e .LVL71
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:908    .PRAM:000003cb .LCFI6
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:906    .PRAM:000003c9 .LVL99
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:936    .PRAM:000003ef .LVL106
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:949    .PRAM:00000402 .LVL107
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:916    .PRAM:000003d7 .LVL101
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:924    .PRAM:000003e2 .LVL102
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:926    .PRAM:000003e4 .LVL103
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:929    .PRAM:000003e6 .LVL104
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:974    .PRAM:00000413 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:972    .PRAM:00000411 .LVL109
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:979    .PRAM:0000041b .LVL111
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1021   .PRAM:00000466 .LVL115
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1024   .PRAM:00000468 .LVL116
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1048   .PRAM:00000480 .LVL122
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1065   .PRAM:0000048b .LVL124
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1061   .PRAM:00000489 .LVL123
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:975    .PRAM:00000413 .LVL110
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1031   .PRAM:00000470 .LVL118
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1034   .PRAM:00000473 .LVL119
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1080   .PRAM:00000493 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1082   .PRAM:00000495 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1078   .PRAM:00000491 .LVL125
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1087   .PRAM:00000499 .LVL127
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1107   .PRAM:000004b7 .LVL132
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1164   .PRAM:000004ff .LVL141
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1170   .PRAM:00000501 .LVL142
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1092   .PRAM:000004a2 .LVL129
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1100   .PRAM:000004aa .LVL131
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1146   .PRAM:000004ee .LVL137
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1186   .text.R_FlashDataAreaBlankCheck:00000002 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1188   .text.R_FlashDataAreaBlankCheck:00000004 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1184   .text.R_FlashDataAreaBlankCheck:00000000 .LVL143
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1251   .text.R_FlashDataAreaBlankCheck:0000007f .LVL151
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1256   .text.R_FlashDataAreaBlankCheck:00000088 .LVL153
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1277   .text.R_FlashDataAreaBlankCheck:0000009b .LVL157
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1377   .text.R_FlashDataAreaBlankCheck:00000128 .LVL173
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1381   .text.R_FlashDataAreaBlankCheck:0000012a .LVL174
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1383   .text.R_FlashDataAreaBlankCheck:0000012c .LVL175
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1387   .text.R_FlashDataAreaBlankCheck:0000012e .LVL176
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1389   .text.R_FlashDataAreaBlankCheck:00000130 .LVL177
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1393   .text.R_FlashDataAreaBlankCheck:00000132 .LVL178
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1395   .text.R_FlashDataAreaBlankCheck:00000134 .LVL179
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1253   .text.R_FlashDataAreaBlankCheck:00000084 .LVL152
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1248   .text.R_FlashDataAreaBlankCheck:0000007b .LVL150
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1267   .text.R_FlashDataAreaBlankCheck:00000094 .LVL155
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1272   .text.R_FlashDataAreaBlankCheck:00000096 .LVL156
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1295   .text.R_FlashDataAreaBlankCheck:000000b4 .LVL159
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1191   .text.R_FlashDataAreaBlankCheck:00000008 .LVL144
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1234   .text.R_FlashDataAreaBlankCheck:00000064 .LVL149
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1313   .text.R_FlashDataAreaBlankCheck:000000c5 .LVL164
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1326   .text.R_FlashDataAreaBlankCheck:000000d9 .LVL165
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1328   .text.R_FlashDataAreaBlankCheck:000000db .LVL166
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1340   .text.R_FlashDataAreaBlankCheck:000000f4 .LVL167
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1342   .text.R_FlashDataAreaBlankCheck:000000f5 .LVL168
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1348   .text.R_FlashDataAreaBlankCheck:000000f8 .LVL169
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1289   .text.R_FlashDataAreaBlankCheck:000000ab .LVL158
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1300   .text.R_FlashDataAreaBlankCheck:000000b8 .LVL160
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1302   .text.R_FlashDataAreaBlankCheck:000000ba .LVL161
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1305   .text.R_FlashDataAreaBlankCheck:000000bc .LVL162
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1454   .text.FLS_Erase:00000002 .LCFI12
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1452   .text.FLS_Erase:00000000 .LVL182
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1473   .text.FLS_Erase:00000022 .LVL185
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1476   .text.FLS_Erase:00000024 .LVL186
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1478   .text.FLS_Erase:00000026 .LVL187
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1482   .text.FLS_Erase:0000002b .LVL188
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1488   .text.FLS_Erase:00000033 .LVL190
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1499   .text.FLS_Erase:0000003d .LVL194
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1503   .text.FLS_Erase:00000040 .LVL195
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1497   .text.FLS_Erase:0000003c .LVL193
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1470   .text.FLS_Erase:00000020 .LVL184
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1485   .text.FLS_Erase:00000031 .LVL189
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1491   .text.FLS_Erase:00000036 .LVL191
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1527   .text.FLS_CheckErrors:00000000 .LVL196
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1537   .text.FLS_CheckErrors:0000000e .LVL197
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1577   .text.FLS_CheckErrors:0000004b .LVL201
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1583   .text.FLS_CheckErrors:00000051 .LVL203
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1588   .text.FLS_CheckErrors:00000055 .LVL204
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1609   .text.BlankCheckDataFlash:00000002 .LCFI13
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1751   .text.cloneSector:00000002 .LCFI14
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1753   .text.cloneSector:00000004 .LCFI15
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1749   .text.cloneSector:00000000 .LVL205
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1758   .text.cloneSector:0000000b .LVL206
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1767   .text.cloneSector:00000017 .LVL209
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1762   .text.cloneSector:00000011 .LVL208
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1779   .text.cloneSector:00000026 .LVL211
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1787   .text.cloneSector:00000031 .LVL213
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1804   .text.cloneSector:00000048 .LVL215
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1782   .text.cloneSector:00000028 .LVL212
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1818   .text.FLS_BlankCheck:00000000 .LVL216
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1834   .text.FLS_BlankCheck:00000019 .LVL219
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1840   .text.FLS_BlankCheck:0000001e .LVL220
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1854   .text.FLS_BlankCheck:00000031 .LVL222
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1864   .text.FLS_BlankCheck:0000003e .LVL225
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1868   .text.FLS_BlankCheck:00000040 .LVL226
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1828   .text.FLS_BlankCheck:00000012 .LVL218
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1846   .text.FLS_BlankCheck:00000024 .LVL221
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1856   .text.FLS_BlankCheck:00000033 .LVL223
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1820   .text.FLS_BlankCheck:00000002 .LVL217
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1884   .text.FLS_DataFlashClone:00000002 .LCFI16
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1886   .text.FLS_DataFlashClone:00000004 .LCFI17
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1882   .text.FLS_DataFlashClone:00000000 .LVL227
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1894   .text.FLS_DataFlashClone:00000011 .LVL229
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1903   .text.FLS_DataFlashClone:0000001d .LVL233
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1909   .text.FLS_DataFlashClone:00000023 .LVL234
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1935   .text.FLS_DataFlashClone:0000004a .LVL238
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1896   .text.FLS_DataFlashClone:00000014 .LVL230
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1932   .text.FLS_DataFlashClone:00000048 .LVL237
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1891   .text.FLS_DataFlashClone:0000000c .LVL228
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1901   .text.FLS_DataFlashClone:0000001c .LVL232
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1997   .text.FLS_DataFlashClone:000000a0 .LVL243
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1951   .text.FLS_DataFlashClone:00000060 .LVL240
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1957   .text.FLS_DataFlashClone:00000069 .LVL241
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2014   .text.FLS_ProgrammingData:00000002 .LCFI18
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2016   .text.FLS_ProgrammingData:00000004 .LCFI19
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2012   .text.FLS_ProgrammingData:00000000 .LVL244
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2076   .text.FLS_ProgrammingData:00000044 .LVL255
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2110   .text.FLS_ProgrammingData:0000006c .LVL264
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2116   .text.FLS_ProgrammingData:00000070 .LVL265
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2078   .text.FLS_ProgrammingData:00000046 .LVL256
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2018   .text.FLS_ProgrammingData:00000006 .LVL245
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2022   .text.FLS_ProgrammingData:0000000a .LVL246
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2126   .text.FLS_ProgrammingData:00000077 .LVL267
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2030   .text.FLS_ProgrammingData:00000013 .LVL248
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2033   .text.FLS_ProgrammingData:00000017 .LVL249
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2121   .text.FLS_ProgrammingData:00000073 .LVL266
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2238   .text.FLS_ProgrammingData:000000f0 .LVL288
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2047   .text.FLS_ProgrammingData:00000027 .LVL251
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2070   .text.FLS_ProgrammingData:0000003c .LVL254
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2204   .text.FLS_ProgrammingData:000000c4 .LVL281
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2026   .text.FLS_ProgrammingData:0000000f .LVL247
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2087   .text.FLS_ProgrammingData:00000053 .LVL258
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2093   .text.FLS_ProgrammingData:0000005a .LVL260
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2108   .text.FLS_ProgrammingData:0000006b .LVL263
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2139   .text.FLS_ProgrammingData:00000088 .LVL269
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2145   .text.FLS_ProgrammingData:0000008f .LVL271
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2159   .text.FLS_ProgrammingData:0000009c .LVL274
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2168   .text.FLS_ProgrammingData:000000a5 .LVL276
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2219   .text.FLS_ProgrammingData:000000db .LVL283
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2225   .text.FLS_ProgrammingData:000000e2 .LVL285
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2104   .text.FLS_ProgrammingData:00000066 .LVL262
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2162   .text.FLS_ProgrammingData:000000a0 .LVL275
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2175   .text.FLS_ProgrammingData:000000ac .LVL277
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2181   .text.FLS_ProgrammingData:000000b0 .LVL278
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2236   .text.FLS_ProgrammingData:000000ee .LVL287
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2063   .text.FLS_ProgrammingData:00000037 .LVL252
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2065   .text.FLS_ProgrammingData:00000039 .LVL253
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2193   .text.FLS_ProgrammingData:000000bb .LVL279
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2195   .text.FLS_ProgrammingData:000000bd .LVL280
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2258   .text.FLS_Programming:00000002 .LCFI20
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2260   .text.FLS_Programming:00000004 .LCFI21
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2256   .text.FLS_Programming:00000000 .LVL289
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2281   .text.FLS_Programming:0000002a .LVL292
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2337   .text.FLS_Programming:00000063 .LVL303
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2347   .text.FLS_Programming:00000070 .LVL306
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2351   .text.FLS_Programming:00000072 .LVL307
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2339   .text.FLS_Programming:00000065 .LVL304
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2402   .text.FLS_Programming:000000a0 .LVL316
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2443   .text.FLS_Programming:000000dd .LVL328
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2448   .text.FLS_Programming:000000e0 .LVL329
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2305   .text.FLS_Programming:00000042 .LVL298
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2262   .text.FLS_Programming:00000006 .LVL290
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2393   .text.FLS_Programming:00000099 .LVL315
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2451   .text.FLS_Programming:000000e2 .LVL330
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2284   .text.FLS_Programming:0000002c .LVL293
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2299   .text.FLS_Programming:0000003e .LVL297
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2308   .text.FLS_Programming:00000045 .LVL299
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2324   .text.FLS_Programming:00000055 .LVL300
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2326   .text.FLS_Programming:00000057 .LVL301
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2386   .text.FLS_Programming:00000093 .LVL313
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2289   .text.FLS_Programming:00000032 .LVL294
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2357   .text.FLS_Programming:00000074 .LVL308
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2463   .text.FLS_Programming:000000f4 .LVL331
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2292   .text.FLS_Programming:00000034 .LVL295
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2295   .text.FLS_Programming:00000038 .LVL296
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2359   .text.FLS_Programming:00000076 .LVL309
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2428   .text.FLS_Programming:000000ca .LVL326
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2331   .text.FLS_Programming:0000005a .LVL302
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2409   .text.FLS_Programming:000000aa .LVL317
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2411   .text.FLS_Programming:000000ae .LVL318
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2413   .text.FLS_Programming:000000b2 .LVL319
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2415   .text.FLS_Programming:000000b6 .LVL320
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2417   .text.FLS_Programming:000000ba .LVL321
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2419   .text.FLS_Programming:000000be .LVL322
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2421   .text.FLS_Programming:000000c2 .LVL323
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2423   .text.FLS_Programming:000000c6 .LVL324
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2390   .text.FLS_Programming:00000095 .LVL314
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2369   .text.FLS_Programming:0000007f .LVL310
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2425   .text.FLS_Programming:000000c8 .LVL325
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2481   .text.R_FlashErase_2:00000002 .LCFI22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2479   .text.R_FlashErase_2:00000000 .LVL332
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2486   .text.R_FlashErase_2:0000000a .LVL334
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2508   .text.R_FlashWrite_2:00000002 .LCFI23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2506   .text.R_FlashWrite_2:00000000 .LVL336
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2515   .text.R_FlashWrite_2:0000000e .LVL338
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2517   .text.R_FlashWrite_2:00000014 .LVL339
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:2519   .text.R_FlashWrite_2:0000001a .LVL340
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:3011   .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:664    .PRAM:000002e3 .LBE21
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:777    .PRAM:0000035b .LBB29
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:831    .PRAM:00000398 .LBE29
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:656    .PRAM:000002d9 .LBB22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:663    .PRAM:000002e3 .LBE22
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:778    .PRAM:0000035b .LBB23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:830    .PRAM:00000398 .LBE23
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:758    .PRAM:0000034e .LBE24
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:766    .PRAM:00000354 .LBB28
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:774    .PRAM:00000358 .LBE28
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:876    .PRAM:000003b8 .LBB30
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:884    .PRAM:000003bc .LBE30
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:682    .PRAM:000002f2 .LBB25
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:757    .PRAM:0000034e .LBE25
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:767    .PRAM:00000354 .LBB26
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:773    .PRAM:00000358 .LBE26
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:877    .PRAM:000003b8 .LBB27
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:883    .PRAM:000003bc .LBE27
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1680   .text.BlankCheckDataFlash:0000005a .LBB54
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1686   .text.BlankCheckDataFlash:00000060 .LBE54
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1712   .text.BlankCheckDataFlash:00000081 .LBB55
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1721   .text.BlankCheckDataFlash:0000008c .LBE55
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1724   .text.BlankCheckDataFlash:0000008e .LBB56
C:\Users\Andrea\AppData\Local\Temp\cccJU2Ok.s:1731   .text.BlankCheckDataFlash:00000095 .LBE56

UNDEFINED SYMBOLS
_OS_DisableInterrupt
_OS_Global
_OS_EnableInterrupt
_CopyFlashRoutinesToRAM
_hal_ovl
__load_start_PRAMERASE
__load_stop_PRAMERASE
__load_start_PRAMWRITE
__load_stop_PRAMWRITE
