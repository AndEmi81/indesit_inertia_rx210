   1                             		.file	"Analog.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.LIB_ADC_InitSync,"ax",@progbits
   5                             		.global	_LIB_ADC_InitSync
   7                             	_LIB_ADC_InitSync:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog/Analog.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Copyright (c) 2004-2005, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
   6:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
   7:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
   8:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \Par		Analog.c
   9:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n			Implementation of all functions necessary to achieve the aim.
  10:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
  11:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \file		Analog.c
  12:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \ingroup	LIB_Analog
  13:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		Jun 16, 2010
  14:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	01.00.00
  15:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author		stefano.ughi
  16:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
  17:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
  18:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \par\b	History:
  19:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
  20:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		01.00.00
  21:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		Jun 16, 2010
  22:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		stefano.ughi
  23:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		changes
  24:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		- Creation
  25:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
  26:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		01.00.01
  27:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		Feb 3, 2011
  28:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		stefano.ughi
  29:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		changes
  30:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		- Removed RTN_BACKUP define
  31:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
  32:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		01.00.02
  33:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		Mar 9, 2011
  34:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		stefano.ughi
  35:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		changes
  36:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		- Added ADC_ValueType LIB_ADC_GetRefInput(void)
  37:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n      - Added bool_t LIB_ADC_IsRefInputReady(void)
  38:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n      - Added SFC_VlineMeasureOnNegativeLevel(Ch_Vline) under AD_CONVERTER_CHECK
  39:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n
  40:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		01.00.03
  41:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		Apr 1, 2011
  42:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		stefano.ughi
  43:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n		changes
  44:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 		- #include "Trash.h" and #include "TrashExp.h" under defines
  45:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n      - #include "LIB_GridVoltage.h" under defines
  46:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
  47:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #define MODULE_BODY_LIB_ANALOG
  48:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ******** */
  49:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Includes */
  50:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ******** */
  51:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include <stdlib.h>
  52:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include <string.h>
  53:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "Config.h"
  54:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "Analog.h"
  55:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "callback.h"
  56:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "LIB_Error.h"
  57:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "LIB_ClassBVar.h"
  58:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  59:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined (CONFIG_MAIN_LIVE_UPDATE_ZC_LINE_VOLTAGE)
  60:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "LIB_ZeroCrossing.h"
  61:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
  62:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  63:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(PLATFORM2_SUPPORT) && defined(WILD_CARD)
  64:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "LIB_GridVoltage.h"
  65:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
  66:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  67:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(CONFIG_LIB_CLASS_B_ADC)
  68:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "LIB_ClassBCheck.h"
  69:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
  70:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  71:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #include "LIB_Trace.h"
  72:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  73:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ****************** */
  74:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Defines and Macros */
  75:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ****************** */
  76:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  77:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  78:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  79:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* *************************** */
  80:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Typedef, Structs and Unions */
  81:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* *************************** */
  82:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
  83:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* A/D channel config. Setting file params */
  84:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** typedef union analogLLIparams_tag
  85:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
  86:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint16_t wrd;
  87:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	struct
  88:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
  89:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(__BIT_ORDER_MSB_FIRST__)
  90:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* High Byte */
  91:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t automatic:  1;  /* Automatic Readings */
  92:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t unused_0:   4;
  93:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t nRead:      3;  /* Real number of samples is 2^nRead */
  94:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* Low Byte */
  95:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t vLine:      1;  /* the channel is tagged as V line */
  96:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t vRef:       1;  /* the channel is tagged as V ref */
  97:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t comp:       1;  /* if '1' measure must be compesated with V ref measure */
  98:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t chDisch:    1;  /* if '1' read V line channel before reading the channel */										
  99:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t fal:        4;  /* Filter validation of reading (real number is 2^fal) */
 100:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #else
 101:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* High Byte */
 102:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t nRead:      3;  /* Real number of samples is 2^nRead */
 103:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t unused_0:   4;
 104:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t automatic:  1;  /* Automatic Readings */
 105:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* Low Byte */
 106:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t fal:        4;  /* Filter validation of reading (real number is 2^fal) */
 107:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t chDisch:    1;  /* if '1' read V line channel before reading the channel */
 108:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t comp:       1;  /* if '1' measure must be compesated with V ref measure */
 109:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t vRef:       1;  /* the channel is tagged as V ref */
 110:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		uint8_t vLine:      1;  /* the channel is tagged as V line */
 111:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 112:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif								
 113:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	} bit;
 114:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 115:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** } analogLLIparams_t;
 116:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 117:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** typedef struct analog_tag
 118:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 119:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analogLLIparams_t analogConfigData;     /* Low Level Input Params */
 120:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t channel;                        /* A/D channel */
 121:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t analogInputRamPos;              /* Position where result is stored */
 122:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t analogInputIndex;				/* Number of Samples collected */
 123:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t analogInputCnt;                 /* Counter used for max. variation between two samples */
 124:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ad_sum_t analogInputSum;   			    /* A/D samples's sum */
 125:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType analogInputOldValue;      /* A/D old sample */
 126:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 127:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** } analog_t;
 128:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 129:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* V Line measure */
 130:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** typedef struct V_Line_tag
 131:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 132:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* V Line new measure A/D value */
 133:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType newVPeak;
 134:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* V Line current measure A/D value */
 135:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType vPeak;
 136:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* samples */
 137:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t samples;
 138:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 139:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** } V_Line_t;
 140:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 141:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (defined(CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES) && (CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES > 1))
 142:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 143:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Check if average computation can fit into an uint16_t accumulator */
 144:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if ((ONE_AD_SAMPLE_MAX_VALUE * CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES) <= 0xFFFF)
 145:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** typedef uint16_t ADC_SumValueType;
 146:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 147:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #else
 148:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 149:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* uin32_t is necessary for accumulator */
 150:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** typedef uint32_t ADC_SumValueType;
 151:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 152:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if ((ONE_AD_SAMPLE_MAX_VALUE * CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES) > 0xFFFFFFFF)
 153:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #error "Too many A/D Average samples used - sum computation may not fit into a 32 bit integer"
 154:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 155:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 156:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 157:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 158:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 159:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 160:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 161:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** typedef struct RefInput_s
 162:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 163:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/** Main Voltage A/D Channel */
 164:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t Ch_Vline;
 165:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/** RTN/Compensation A/D Channel */
 166:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t RefCh;
 167:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/** RTN A/D value */
 168:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType RefVal;
 169:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(CONFIG_VLINE_ON_NEG_LEVEL)
 170:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType VlineOnNegLev;
 171:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 172:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (defined(CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES) && (CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES > 1))
 173:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_SumValueType SumVlineOnNegLev;
 174:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	#if (CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES > 0xFFFFFFFF)
 175:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	#error "Too many A/D Average samples!"
 176:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	#elif (CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES > 0xFFFF)
 177:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint32_t SumVlineSamples;
 178:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	#elif (CONFIG_VLINE_ON_NEG_LEVEL_AVGSAMPLES > 0xFF)
 179:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint16_t SumVlineSamples;
 180:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	#else
 181:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t SumVlineSamples;
 182:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	#endif
 183:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 184:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/** If TRUE RTN measure is ready */
 185:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	bool8_t RefReady;
 186:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/** Number of registered channels */
 187:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t ChannelRegistered;
 188:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** } RefInput_t;
 189:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 190:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ********* */
 191:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Variables */
 192:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ********* */
 193:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 194:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Global */
 195:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 196:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* bitmap if '0' update AnalogInput[] */
 197:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** analogInput_t AnalogInputDisable;
 198:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* bitmap, this variable can only be set never clear except on Cold Reset */
 199:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** analogInput_t AnalogInputReady;
 200:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* bitmap, this variable can only be set from Platform when A/D readings is ready and
 201:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** can only be cleared by Application  */
 202:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** analogInput_t ApplianceAnalogInputReady;
 203:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 204:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (MANAGE_AD_CHANNEL_READ==TRUE)
 205:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* bitmap */
 206:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static analogInput_t AD_ChInputReady;
 207:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 208:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 209:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /** Array with the acquired analog values */
 210:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** ADC_ValueType AnalogInput[ADC_NUM_CHANNELLS_USED];
 211:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 212:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Static */
 213:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static analog_t AnalogInputParam[ADC_NUM_CHANNELLS_USED];
 214:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static RefInput_t RefInput;
 215:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 216:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined (ATD_INTERRUPT_ENABLED)
 217:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static uint8_t AD_Index;
 218:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #elif defined (ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS)
 219:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS == 0)
 220:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static uint8_t AD_Index;
 221:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 222:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #else
 223:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* do nothing */
 224:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 225:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 226:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /** If TRUE RTN value is in acceptable (good) */
 227:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static bool_t GoodRef = FALSE;
 228:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /** If TRUE RTN value is in range */
 229:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static bool_t RtnOutRange = FALSE;
 230:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 231:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ******************* */
 232:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Functions Prototype */
 233:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* ******************* */
 234:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 235:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Exported function */
 236:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 237:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Local Function */
 238:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static void LIB_ADC_AvgFilter ( uint8_t index, ADC_ValueType conversion );
 239:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static void LIB_ADC_DeltaCtrl( uint8_t index, ADC_ValueType newADvalue );
 240:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(CONFIG_VLINE_ON_NEG_LEVEL)
 241:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static void LIB_ADC_VlineMeasOnNegLevel(uint8_t ch_Vline);
 242:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 243:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 244:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined (ATD_INTERRUPT_ENABLED)
 245:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static IO_ErrorType EndConvCallback (IO_NotificationType notifVal, IO_ChannelType chid, IO_ErrorTyp
 246:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 247:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 248:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* *************** */
 249:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Function Bodies */
 250:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* *************** */
 251:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 252:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Exported function */
 253:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 254:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n Initialization of variables relating to analog inputs.
 255:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n This function is called inside OnColdReset() if SystemMode == SYSTEM_NORMAL_MODE
 256:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 257:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[] (global) used as W
 258:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AD_Index (global) used as W
 259:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputDisable (global) used as W
 260:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputReady (global) used as W
 261:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.RefReady (global) used as W
 262:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.Ch_Vline (global) used as W
 263:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.RefCh (global) used as W
 264:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AD_ChInputReady (global) used as W
 265:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b ApplianceAnalogInputReady (global) used as W
 266:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 267:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	stefano.ughi
 268:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		Jun 28, 2010
 269:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 270:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 271:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Note 1:
 272:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by stefano.ughi
 273:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Note 2:
 274:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			tested
 275:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 276:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_InitSync (void)
 277:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
  10                             		.loc 1 277 0
 278:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t i;
 279:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined (ATD_INTERRUPT_ENABLED)
 280:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 281:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_Index = 0;
 282:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 283:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #elif defined (ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS)
 284:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 285:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS == 0)
 286:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 287:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_Index = 0;
 288:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 289:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 290:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 291:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #else
 292:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* do nothing */
 293:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 294:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 295:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AnalogInputDisable = 0;	    /* Sample on Analog Inputs Enabled */
  11                             		.loc 1 295 0
  12 0000 FB E2 00 00 00 00       		mov.L	#_AnalogInputDisable, r14
  13 0006 F8 E4 00                		mov.B	#0, [r14]
 296:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AnalogInputReady = 0;	    /* A/D Reading not ready */
  14                             		.loc 1 296 0
  15 0009 FB E2 00 00 00 00       		mov.L	#_AnalogInputReady, r14
  16 000f F8 E4 00                		mov.B	#0, [r14]
 297:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ApplianceAnalogInputReady = 0;
  17                             		.loc 1 297 0
  18 0012 FB E2 00 00 00 00       		mov.L	#_ApplianceAnalogInputReady, r14
  19 0018 F8 E4 00                		mov.B	#0, [r14]
 298:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (MANAGE_AD_CHANNEL_READ==TRUE)
 299:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_ChInputReady = 0;
  20                             		.loc 1 299 0
  21 001b FB E2 00 00 00 00       		mov.L	#_AD_ChInputReady, r14
  22 0021 F8 E4 00                		mov.B	#0, [r14]
 300:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 301:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 302:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
 303:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 304:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* V ref. not ready */
 305:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	RefInput.RefReady = FALSE;
  23                             		.loc 1 305 0
  24 0024 FB E2 00 00 00 00       		mov.L	#_RefInput, r14
  25 002a F9 E4 04 00             		mov.B	#0, 4[r14]
 306:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	RefInput.RefVal = 0;
  26                             		.loc 1 306 0
  27 002e F9 E5 01 00             		mov.W	#0, 2[r14]
 307:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* Channel for Vline Measure not defined */
 308:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	RefInput.Ch_Vline = CH_VLINE_IS_NOT_DEFINED;
  28                             		.loc 1 308 0
  29 0032 F8 E4 FF                		mov.B	#-1, [r14]
 309:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* Channel for Compensation Measure not defined */
 310:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	RefInput.RefCh = CH_FOR_COMPENSATION_IS_NOT_DEFINED;
  30                             		.loc 1 310 0
  31 0035 F9 E4 01 FF             		mov.B	#-1, 1[r14]
 311:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 312:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_UPDATE( RefInput );
 313:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_UPDATE( AnalogInputDisable );
 314:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 315:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	memset(AnalogInputParam, 0, sizeof(AnalogInputParam));
  32                             		.loc 1 315 0
  33 0039 FB 12 00 00 00 00       		mov.L	#_AnalogInputParam, r1
  34 003f 75 43 50                		mov.L	#0x50, r3
  35 0042 66 02                   		mov	#0, r2
  36 0044 7F 88                   		sstr.b
  37                             	.LVL0:
 316:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
 317:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 318:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_DATA_ELEM_UPDATE( AnalogInputParam, i );
 319:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_DATA_ELEM_UPDATE( AnalogInput, i );
 320:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 321:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 322:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined (CONFIG_MAIN_LIVE_UPDATE_ZC_LINE_VOLTAGE)
 323:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	LIB_ZC_SetLineVoltageParams(FALSE, 0);
  38                             		.loc 1 323 0
  39 0046 66 01                   		mov.L	#0, r1
  40 0048 DF 12                   		mov.W	r1, r2
  41 004a 04 00 00 00             		bra	_LIB_ZC_SetLineVoltageParams
  42                             	.LVL1:
  43                             	.LFE0:
  45                             		.section	.text.LIB_ADC_RegisterADchannel,"ax",@progbits
  46                             		.global	_LIB_ADC_RegisterADchannel
  48                             	_LIB_ADC_RegisterADchannel:
  49                             	.LFB1:
 324:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 325:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 326:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
 327:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 328:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 329:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 330:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 331:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n Setup of a single A/D channel.
 332:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n This function is called inside LIB_IOM_InputInitialization()  regardless cold or warm reset.
 333:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 334:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] channel A/D Converter channel
 335:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] posResult  position vs AnalogInput[] vector where A/D conv. is stored
 336:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] *pADlowLevelParams pointer to the Setting File Structure that describes the channel.
 337:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.Ch_Vline (global) W A/D channel where Vpeak is measured.
 339:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.RefCh (global) W A/D channel where V ref is measured..
 340:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[channel] (global) W A/D channel config. structure.
 341:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 342:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	stefano.ughi
 343:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		Jun 28, 2010
 344:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 345:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 346:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Note 1:
 347:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by stefano.ughi
 348:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Note 2:
 349:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			tested
 350:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 351:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 352:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 353:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_RegisterADchannel( uint8_t channel, uint8_t posResult, const uint8_t *pADlowLevelParam
 354:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
  50                             		.loc 1 354 0
  51                             	.LVL2:
  52 0000 7E A7                   		push.l	r7
  53                             	.LCFI0:
  54 0002 CF 15                   		mov.B	r1, r5
  55 0004 CF 2F                   		mov.B	r2, r15
  56 0006 EF 37                   		mov.L	r3, r7
 355:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analog_t *pAnalogInputParam;
 356:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 357:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*MS errato check PLT_ASSERT( channel < ADC_NUM_CHANNELLS_USED ) */
 358:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 359:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
 360:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_CHECK(RefInput);
 361:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_CHECK(AnalogInputParam, RefInput.ChannelRegistered);
 362:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 363:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[RefInput.ChannelRegistered];
  57                             		.loc 1 363 0
  58 0008 FB 42 00 00 00 00       		mov.L	#_RefInput, r4
  59 000e 59 4E 05                		movu.B	5[r4], r14
  60 0011 63 AE                   		mul	#10, r14
  61 0013 70 EE 00 00 00 00       		add	#_AnalogInputParam, r14
  62                             	.LVL3:
 364:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 365:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 366:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	(void)memset(pAnalogInputParam,0,sizeof(AnalogInputParam[0]));
  63                             		.loc 1 366 0
  64 0019 EF E1                   		mov.L	r14, r1
  65                             	.LVL4:
  66 001b 66 A3                   		mov.L	#10, r3
  67                             	.LVL5:
  68 001d 66 02                   		mov	#0, r2
  69                             	.LVL6:
  70 001f 7F 88                   		sstr.b
 367:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 368:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->channel = channel;
  71                             		.loc 1 368 0
  72 0021 C7 E5 02                		mov.B	r5, 2[r14]
 369:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*lint -e826 pointer-to-pointer conversion area too small */
 370:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*TODO: plausibility on pADlowLevelParams , verificare se � un parametro di sicurezza nel settin
 371:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogConfigData = *(analogLLIparams_t*)pADlowLevelParams;
  73                             		.loc 1 371 0
  74 0024 DC 73                   		mov.W	[r7], r3
  75 0026 D3 E3                   		mov.W	r3, [r14]
 372:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*lint +e826 */
 373:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogInputRamPos = posResult;
  76                             		.loc 1 373 0
  77 0028 C7 EF 03                		mov.B	r15, 3[r14]
 374:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_UPDATE(AnalogInputParam, RefInput.ChannelRegistered);
 375:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 376:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (pAnalogInputParam->analogConfigData.bit.vLine)
  78                             		.loc 1 376 0
  79 002b EF 37                   		mov.L	r3, r7
  80                             	.LVL7:
  81 002d 76 27 80 00             		and #0x80, r7
  82 0031 5F 77                   		movu.W	r7, r7
  83 0033 61 07                   		cmp	#0, r7
  84 0035 20 0E                   		beq	.L3
 377:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 378:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		RefInput.Ch_Vline = pAnalogInputParam->channel;
  85                             		.loc 1 378 0
  86 0037 C3 45                   		mov.B	r5, [r4]
 379:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined (CONFIG_MAIN_LIVE_UPDATE_ZC_LINE_VOLTAGE)
 380:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ZC_SetLineVoltageParams(TRUE, 0);
  87                             		.loc 1 380 0
  88 0039 66 11                   		mov.L	#1, r1
  89 003b 66 02                   		mov	#0, r2
  90 003d 05 00 00 00             		bsr	_LIB_ZC_SetLineVoltageParams
  91                             	.LVL8:
  92 0041 2E 0D                   		bra	.L4
  93                             	.LVL9:
  94                             	.L3:
 381:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 382:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 383:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else if (pAnalogInputParam->analogConfigData.bit.vRef)
  95                             		.loc 1 383 0
  96 0043 75 23 40                		and #64, r3
  97 0046 5F 33                   		movu.W	r3, r3
  98 0048 61 03                   		cmp	#0, r3
  99 004a 14                      		beq	.L4
 384:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 385:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		RefInput.RefCh = pAnalogInputParam->channel;
 100                             		.loc 1 385 0
 101 004b 80 4D                   		mov.B	r5, 1[r4]
 102                             	.LVL10:
 103 004d 03                      		.balign 2,3,5
 104                             	.L4:
 386:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 387:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else
 388:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 389:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* do nothing */
 390:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 391:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 392:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	RefInput.ChannelRegistered++;
 105                             		.loc 1 392 0
 106 004e FB E2 00 00 00 00       		mov.L	#_RefInput, r14
 107 0054 CD E7 05                		mov.B	5[r14], r7
 108 0057 62 17                   		add	#1, r7
 109 0059 C7 E7 05                		mov.B	r7, 5[r14]
 393:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 394:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_UPDATE(RefInput);
 395:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
 396:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 397:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 110                             		.loc 1 397 0
 111 005c 3F 77 01                		rtsd	#4, r7-r7
 112                             	.LFE1:
 114 005f 03                      		.section	.text.LIB_ADC_UnregisterAllADch,"ax",@progbits
 115                             		.global	_LIB_ADC_UnregisterAllADch
 117                             	_LIB_ADC_UnregisterAllADch:
 118                             	.LFB2:
 398:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 399:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n Unregister A/D channel structure.
 400:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n This function is called inside LIB_IOM_InputInitialization()  regardless cold or warm reset.
 401:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 402:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b ChannelRegistered (global) used as W
 403:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 404:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	stefano.ughi
 405:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		Jun 28, 2010
 406:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 407:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 408:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Note 1:
 409:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by stefano.ughi
 410:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 411:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 412:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_UnregisterAllADch(void)
 413:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 119                             		.loc 1 413 0
 414:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
 415:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_CHECK(RefInput);
 416:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 417:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	RefInput.ChannelRegistered = 0;      /* No channel registered */
 120                             		.loc 1 417 0
 121 0000 FB E2 00 00 00 00       		mov.L	#_RefInput, r14
 122 0006 F9 E4 05 00             		mov.B	#0, 5[r14]
 418:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 419:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_UPDATE(RefInput);
 420:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
 421:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 422:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* Start ADC Check is performed here
 423:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	 * LIB_ADC_InitSync() is called only on cold reset
 424:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	 */
 425:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 426:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #ifdef CONFIG_LIB_CLASS_B_ADC
 427:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_CheckInit();
 123                             		.loc 1 427 0
 124 000a 04 00 00 00             		bra	_ADC_CheckInit
 125                             	.LVL11:
 126                             	.LFE2:
 128                             		.section	.text.LIB_ADC_AreAnalogInputsReady,"ax",@progbits
 129                             		.global	_LIB_ADC_AreAnalogInputsReady
 131                             	_LIB_ADC_AreAnalogInputsReady:
 132                             	.LFB5:
 428:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif /* CONFIG_LIB_CLASS_B_ADC */
 429:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 430:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 431:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 432:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 433:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 434:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n A/D channels manager, called inside Task Main_AnalogInputTask.
 435:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n if ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS = 1
 436:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n all channels defined inside setting file, except for the Vline channel,
 437:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n are sampled in the negative half-wave voltage
 438:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n if ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS = 0
 439:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n all channels defined inside setting file, except for the Vline channel,
 440:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n are sampled in the negative half-wave voltage one for each half-wave
 441:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n if defined ATD_INTERRUPT_ENABLED
 442:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n all channels defined inside setting file
 443:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n are sampled in interrupt (Not Tested)
 444:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 445:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[i].analogConfigData.AnalogInputEnable (global) used as input
 446:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.Ch_Vline = 0xFF -> Vline non presente (global) used as input
 447:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[i].analogConfigData.AnalogInputMustBeDischBeforeRead (global) used a
 448:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.RefCh (global) used as input
 449:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AD_Index (global) used as input
 450:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 451:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b   RefInput.RefReady (global) used as output
 452:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b   RefInput (global) used as output
 453:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 454:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 455:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	x
 456:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		gg/mm/aaaa
 457:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	x.y.z
 458:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 459:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 460:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
 461:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			Se per un certo canale AnalogInputParam[i].analogConfigData.AnalogInputMustBeDischBeforeRead
 462:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			vale '1' viene eseguita prima una lettura dummy della Vline per scaricare il canale
 463:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			si e' infatti notato che se il canale ? flottante tende a "caricarsi"
 464:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Nota 2:
 465:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			Se ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS vale 0 si potrebbe implementare un metodo diverso\n
 466:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			di gestione delle letture per mantenere costante il periodo di campionamento, del tipo\n
 467:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			se il canale e' abilitato eseguo lettura altrimenti aspetto la successiva chiamata del Manager.
 468:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 469:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_Manager(void)
 470:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 471:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t i;
 472:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #ifndef ATD_INTERRUPT_ENABLED
 473:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType res;
 474:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 475:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 476:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined (ATD_INTERRUPT_ENABLED)
 477:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 478:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	i=0;
 479:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*  Read all enabled channel, using end convertion interrupt, except V line Channel if present.*/
 480:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	while ( ( ( AnalogInputParam[AD_Index].analogConfigData.bit.automatic == 0 ) || ( AnalogInputParam
 481:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	        ( i < ADC_NUM_CHANNELLS_USED ) &&
 482:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	        ( AD_Index < ADC_NUM_CHANNELLS_USED ) )
 483:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 484:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		i++;
 485:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		AD_Index++;
 486:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AD_Index >= ADC_NUM_CHANNELLS_USED )
 487:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 488:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AD_Index=0;
 489:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 490:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 491:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 492:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 493:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( i >= ADC_NUM_CHANNELLS_USED )
 494:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 495:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* No automatic channels found !!*/
 496:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return;
 497:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 498:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 499:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* if Ch_Vline is defined and the channel must be discharged before read it, we discharge it on Ch
 500:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	with a dummy read */
 501:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( ( RefInput.Ch_Vline != CH_VLINE_IS_NOT_DEFINED ) &&
 502:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	        ( AnalogInputParam[AD_Index].analogConfigData.bit.chDisch ) )
 503:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 504:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		(void)OCADC_SampleSync (RefInput.Ch_Vline,AD_DUMMY_POS);
 505:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 506:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 507:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ((IO_ErrorType)IO_E_BUSY != OCADC_StartSampleSync (AnalogInputParam[AD_Index].channel,AnalogInp
 508:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 509:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		AD_Index++;
 510:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if (AD_Index >= ADC_NUM_CHANNELLS_USED)
 511:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 512:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AD_Index=0;
 513:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 514:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 515:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 516:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #elif defined (ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS)
 517:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 518:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* No interrupts to manage A/D conversions */
 519:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS == 1)
 520:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 521:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*  Read all enabled channel "one shot reading" except V line Channel if present.*/
 522:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 523:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
 524:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 525:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_REGION_START();
 526:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_DATA_ELEM_CHECK( AnalogInputParam, i );
 527:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* AnalogInput position is not directly related to AnalogInputParam; anyway this check is useful
 528:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		 * to check all AnalogInput channels
 529:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		 */
 530:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_DATA_ELEM_CHECK( AnalogInput, i);
 531:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_REGION_END();
 532:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* N.B.: if Ch_Vline not defined Ch_Vline = 0xFF and ADC_NUM_CHANNELLS_USED is <= 32 */
 533:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( ( AnalogInputParam[i].analogConfigData.bit.automatic ) &&
 534:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		        ( AnalogInputParam[i].channel != RefInput.Ch_Vline ) )
 535:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 536:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/* Ch_Vline is defined and the channel must be discharged before read it, we discharge it on Ch_
 537:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			   with a dummy read */
 538:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( ( RefInput.Ch_Vline != CH_VLINE_IS_NOT_DEFINED ) &&
 539:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			        ( AnalogInputParam[i].analogConfigData.bit.chDisch ) )
 540:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
 541:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				(void)OCADC_SampleSync (RefInput.Ch_Vline, AD_DUMMY_POS);
 542:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
 543:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 544:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/* consecutive readings performed 2^AD_LOCAL_SAMPLES_POWER_OF_TWO */
 545:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			res = LIB_ADC_Conv_F( i, AD_LOCAL_SAMPLES_POWER_OF_TWO, AD_LOCAL_SAMPLES_DISCARDED);
 546:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 547:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( AnalogInputParam[i].channel == RefInput.RefCh )
 548:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
 549:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				SAFETY_REGION_START();
 550:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				SAFETY_DATA_CHECK( RefInput );
 551:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				/* V ref Ready */
 552:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RefInput.RefReady = TRUE;
 553:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				/* I'm reading compensation channel */
 554:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RefInput.RefVal = res;
 555:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				SAFETY_DATA_UPDATE( RefInput );
 556:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				SAFETY_REGION_END();
 557:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
 558:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 559:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			CBF_AnalogInputIntManager_Polling();
 560:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 561:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 562:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
 563:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #else
 564:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 565:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	i=0;
 566:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*  Read all enabled channel "one reading per call" except V line Channel if present.*/
 567:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* N.B.: con questo metodo il periodo di campionamento di un canale non e' costante ma dipende da 
 568:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	   canali di tipo automatic sono presenti */
 569:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 570:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	while ( ( ( AnalogInputParam[AD_Index].analogConfigData.bit.automatic == 0 ) || ( AnalogInputParam
 571:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	        ( i < ADC_NUM_CHANNELLS_USED ) &&
 572:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	        ( AD_Index < ADC_NUM_CHANNELLS_USED ) )
 573:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 574:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		i++;
 575:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		AD_Index++;
 576:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AD_Index >= ADC_NUM_CHANNELLS_USED )
 577:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 578:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AD_Index=0;
 579:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 580:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 581:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 582:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 583:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( i >= ADC_NUM_CHANNELLS_USED )
 584:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 585:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* No automatic channels found !!*/
 586:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return;
 587:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 588:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 589:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* if Ch_Vline is defined and the channel must be discharged before read it, we discharge it on Ch
 590:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	   with a dummy read */
 591:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( ( RefInput.Ch_Vline != CH_VLINE_IS_NOT_DEFINED ) &&
 592:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	        ( AnalogInputParam[AD_Index].analogConfigData.bit.chDisch ) )
 593:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 594:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		(void)OCADC_SampleSync (RefInput.Ch_Vline,AD_DUMMY_POS);
 595:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 596:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 597:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* consecutive readings performed 2^AD_LOCAL_SAMPLES_POWER_OF_TWO */
 598:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	res = LIB_ADC_Conv_F  ( AD_Index, AD_LOCAL_SAMPLES_POWER_OF_TWO, AD_LOCAL_SAMPLES_DISCARDED );
 599:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 600:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* I'm reading compensation channel */
 601:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( AnalogInputParam[AD_Index].channel == RefInput.RefCh )
 602:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 603:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_REGION_START();
 604:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_DATA_CHECK( RefInput );
 605:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		
 606:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* V ref Ready */
 607:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		RefInput.RefReady = TRUE;
 608:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* I'm reading compensation channel */
 609:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		RefInput.RefVal = res;
 610:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		
 611:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_DATA_UPDATE( RefInput );
 612:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		SAFETY_REGION_END();
 613:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 614:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 615:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	CBF_AnalogInputIntManager_Polling();
 616:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 617:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_Index++;
 618:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (AD_Index >= ADC_NUM_CHANNELLS_USED)
 619:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 620:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		AD_Index=0;
 621:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 622:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 623:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif /*#if (ANALOG_INPUT_MANAGE_POLLING_CONTINUOUS == 1)*/
 624:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 625:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #else
 626:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #error "How have I to manage A/D readings?"     
 627:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif  /* ATD_INTERRUPT_ENABLED */
 628:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 629:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(CONFIG_VLINE_ON_NEG_LEVEL)
 630:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	LIB_ADC_VlineMeasOnNegLevel(RefInput.Ch_Vline);
 631:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 632:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 633:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #ifdef CONFIG_LIB_CLASS_B_ADC
 634:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_Check();
 635:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif /* CONFIG_LIB_CLASS_B_ADC */
 636:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 637:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 638:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 639:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 640:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n This function performs, fixed index inside AnalogInputParam[] vector,
 641:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n 2^ad_sample_num_pot2 samples on the channel linked to AnalogInputParam[index] and returns the av
 642:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \n The average is also passed to the functions LIB_ADC_AvgFilter or LIB_ADC_DeltaCtrl.
 643:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 644:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] index index of AnalogInputParam[].
 645:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] ad_sample_num_pot2 2^ad_sample_num_pot2 = numbers of reading to do.
 646:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] samples_to_discard readings to discharge.
 647:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 648:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[channel] (global) R.
 649:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 650:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	ADC_ValueType
 651:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 652:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		average average of readings
 653:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 654:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano ughi
 655:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		29/06/2010
 656:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.2
 657:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 658:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 659:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note	    \par \b Nota 1:
 660:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c ****             added parameter samples_to_discard, Number of readings to be discharged\n
 661:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c ****             due to floating channels problem.
 662:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 663:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 664:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 665:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** ADC_ValueType LIB_ADC_Conv_F  ( uint8_t _index, uint8_t ad_sample_num_pot2, uint8_t samples_to_disc
 666:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 667:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analog_t *pAnalogInputParam;
 668:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType adValue;
 669:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	lowFilterADCsum_t lf_sum;
 670:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (VLINEMEASURE_COMP_FACTOR != 0)
 671:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType tmp_adValue;
 672:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
 673:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t i;
 674:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t localSamples;
 675:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 676:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
 677:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	localSamples = (uint8_t)(1u<<ad_sample_num_pot2);
 678:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	lf_sum = 0;
 679:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i = 0; i < localSamples; i++ )
 681:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 682:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		(void)OCADC_SampleSync(pAnalogInputParam->channel,pAnalogInputParam->analogInputRamPos);
 683:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		adValue = OCADC_GetSync(pAnalogInputParam->analogInputRamPos);
 684:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 685:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( i >= samples_to_discard )
 686:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 687:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			lf_sum += (lowFilterADCsum_t)adValue;
 688:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 689:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 690:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 691:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (localSamples>samples_to_discard)
 692:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 693:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		adValue = (ADC_ValueType)(lf_sum/(uint8_t)(localSamples-samples_to_discard));
 694:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 695:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else
 696:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 697:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* Serious RunTime Error */
 698:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		adValue = ONE_AD_SAMPLE_MAX_VALUE;
 699:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		PLT_ERROR_WARNING(PLT_ERROR_ANALOG_1);
 700:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 701:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 702:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (VLINEMEASURE_COMP_FACTOR != 0)
 703:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* V line compensation */
 704:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( pAnalogInputParam->channel == RefInput.Ch_Vline )
 705:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 706:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		tmp_adValue = (ADC_ValueType) (adValue+VLINEMEASURE_COMP_FACTOR);
 707:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( tmp_adValue > ONE_AD_SAMPLE_MAX_VALUE )
 708:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 709:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			adValue = ONE_AD_SAMPLE_MAX_VALUE;
 710:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 711:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		else
 712:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 713:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			adValue=tmp_adValue;
 714:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 715:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 716:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif /* #if (VLINEMEASURE_COMP_FACTOR != 0) */
 717:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
 718:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_CHECK( AnalogInputParam,      _index );
 719:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 720:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( pAnalogInputParam->analogConfigData.bit.fal == 0 )
 721:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 722:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* Don't care that between current value and previous there is a difference of more than
 723:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		   a fixed value.*/
 724:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ADC_AvgFilter(_index,adValue);
 725:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 726:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else
 727:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 728:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* Between current value and previous must be a difference less than a fixed value.*/
 729:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ADC_DeltaCtrl(_index,adValue);
 730:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 731:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_UPDATE( AnalogInputParam,      _index );
 732:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
 733:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 734:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return adValue;
 735:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 736:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 737:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 738:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function returns TRUE if all A/D channels labeled as automatic were acquired, otherwise FALSE.
 739:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 740:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[i] (global) R.
 741:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.Ch_Vline (global) R.
 742:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputReady (global) R.
 743:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[i].AnalogInputRamPos (global) R.
 744:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 745:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
 746:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 747:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE
 748:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval     FALSE
 749:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 750:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 751:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		28/06/2010
 752:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 753:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 754:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 755:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_AreAnalogInputsReady(void)
 756:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 133                             		.loc 1 756 0
 134 0000 7E A7                   		push.l	r7
 135                             	.LCFI1:
 136                             	.LVL12:
 757:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t i;
 758:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	bool_t retVal=TRUE;
 759:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 760:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; (i<ADC_NUM_CHANNELLS_USED) && (retVal == TRUE); i++)
 761:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 762:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AnalogInputParam[i].analogConfigData.bit.automatic
 763:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		        && (AnalogInputParam[i].channel != RefInput.Ch_Vline)
 764:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		   )
 765:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
 766:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( (AnalogInputReady & (analogInput_t)(1u << AnalogInputParam[i].analogInputRamPos)) == 0)
 137                             		.loc 1 766 0
 138 0002 FB E2 00 00 00 00       		mov.L	#_AnalogInputReady, r14
 139 0008 CC E3                   		mov.B	[r14], r3
 140 000a FB E2 00 00 00 00       		mov.L	#_AnalogInputParam, r14
 141 0010 66 04                   		mov.L	#0, r4
 762:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AnalogInputParam[i].analogConfigData.bit.automatic
 142                             		.loc 1 762 0
 143 0012 66 12                   		mov.L	#1, r2
 763:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		        && (AnalogInputParam[i].channel != RefInput.Ch_Vline)
 144                             		.loc 1 763 0
 145 0014 FB 12 00 00 00 00       		mov.L	#_RefInput, r1
 146 001a 58 15                   		movu.B	[r1], r5
 147                             	.LVL13:
 148                             		.balign 2,3,1
 149                             	.L13:
 762:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AnalogInputParam[i].analogConfigData.bit.automatic
 150                             		.loc 1 762 0
 151 001c EF 41                   		mov.L	r4, r1
 152 001e 63 A1                   		mul	#10, r1
 153 0020 70 11 00 00 00 00       		add	#_AnalogInputParam, r1
 154 0026 DC 11                   		mov.W	[r1], r1
 155 0028 61 01                   		cmp	#0, r1
 156 002a 28 1D                   		bge	.L15
 763:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		        && (AnalogInputParam[i].channel != RefInput.Ch_Vline)
 157                             		.loc 1 763 0
 158 002c 59 E1 02                		movu.B	2[r14], r1
 159 002f 47 51                   		cmp	r5, r1
 160 0031 20 16                   		beq	.L15
 161                             		.loc 1 766 0
 162 0033 59 E1 03                		movu.B	3[r14], r1
 163 0036 EF 27                   		mov.L	r2, r7
 164 0038 FD 62 17                		shll	r1, r7
 165 003b EF 71                   		mov.L	r7, r1
 166 003d 53 31                   		and	r3, r1
 167 003f 76 21 FF 00             		and #0xff, r1
 168 0043 FC DB 11                		scne.L	r1
 169 0046 0C                      		bra	.L11
 170                             	.L15:
 763:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		        && (AnalogInputParam[i].channel != RefInput.Ch_Vline)
 171                             		.loc 1 763 0
 172 0047 66 11                   		mov.L	#1, r1
 173 0049 03                      		.balign 2,3,1
 174                             	.L11:
 175                             	.LVL14:
 760:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; (i<ADC_NUM_CHANNELLS_USED) && (retVal == TRUE); i++)
 176                             		.loc 1 760 0
 177 004a 61 74                   		cmp	#7, r4
 178 004c 20 0C                   		beq	.L12
 179 004e 62 14                   		add	#1, r4
 180 0050 62 AE                   		add	#10, r14
 760:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; (i<ADC_NUM_CHANNELLS_USED) && (retVal == TRUE); i++)
 181                             		.loc 1 760 0 is_stmt 0 discriminator 2
 182 0052 61 11                   		cmp	#1, r1
 183 0054 20 C8                   		beq	.L13
 760:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; (i<ADC_NUM_CHANNELLS_USED) && (retVal == TRUE); i++)
 184                             		.loc 1 760 0
 185 0056 66 01                   		mov.L	#0, r1
 186                             	.LVL15:
 187                             		.balign 2,3,2
 188                             	.L12:
 767:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
 768:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				retVal = FALSE;
 769:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
 770:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
 771:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 772:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
 773:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return retVal;
 774:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 189                             		.loc 1 774 0 is_stmt 1
 190 0058 3F 77 01                		rtsd	#4, r7-r7
 191                             	.LFE5:
 193 005b 03                      		.section	.text.LIB_ADC_IsAnalogReady,"ax",@progbits
 194                             		.global	_LIB_ADC_IsAnalogReady
 196                             	_LIB_ADC_IsAnalogReady:
 197                             	.LFB6:
 775:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 776:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function returns TRUE if A/D convertion of the channel linked to position "pos" is ready\n
 777:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** otherwise FALSE.
 778:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 779:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] pos A/D channel position vs AnalogInput[] vector.
 780:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputReady bitmap (global) R.
 781:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[pos].AnalogInputRamPos (global) R.
 782:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 783:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
 784:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 785:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE    conversion ready
 786:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		FALSE   conversion not ready
 787:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 788:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 789:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		01/07/2010
 790:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 791:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 792:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 793:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 794:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_IsAnalogReady(uint8_t pos)
 795:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 198                             		.loc 1 795 0
 199                             	.LVL16:
 796:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return (bool_t) (((((AnalogInputReady & (1u << AnalogInputParam[pos].analogInputRamPos)) == 0))?(F
 200                             		.loc 1 796 0
 201 0000 FB E2 00 00 00 00       		mov.L	#_AnalogInputReady, r14
 202 0006 58 EE                   		movu.B	[r14], r14
 203 0008 5B 11                   		movu.B	r1, r1
 204 000a 63 A1                   		mul	#10, r1
 205                             	.LVL17:
 206 000c 70 11 00 00 00 00       		add	#_AnalogInputParam, r1
 207 0012 B0 9C                   		movu.B	3[r1], r4
 208 0014 FD 60 4E                		shlr	r4, r14
 797:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 209                             		.loc 1 797 0
 210 0017 EF E1                   		mov.L	r14, r1
 211 0019 64 11                   		and #1, r1
 212 001b 02                      		rts
 213                             	.LFE6:
 215                             		.section	.text.LIB_ADC_IsApplAnalogReady,"ax",@progbits
 216                             		.global	_LIB_ADC_IsApplAnalogReady
 218                             	_LIB_ADC_IsApplAnalogReady:
 219                             	.LFB7:
 798:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 799:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function returns TRUE if A/D convertion of the channel linked to position "pos" is ready\n
 800:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** otherwise FALSE.
 801:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 802:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] pos A/D channel position vs AnalogInput[] vector.
 803:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b ApplianceAnalogInputReady bitmap (global) R.
 804:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[pos].AnalogInputRamPos (global) R.
 805:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 806:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
 807:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 808:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE    conversion ready
 809:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		FALSE   conversion not ready
 810:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 811:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \warning    The function is reserved to the Appliance.
 812:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 813:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 814:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		06/07/2010
 815:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 816:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 817:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 818:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 819:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_IsApplAnalogReady(uint8_t pos)
 820:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 220                             		.loc 1 820 0
 221                             	.LVL18:
 821:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return (bool_t) (((((ApplianceAnalogInputReady & (1u << pos)) == 0))?(FALSE):(TRUE)));
 222                             		.loc 1 821 0
 223 0000 FB E2 00 00 00 00       		mov.L	#_ApplianceAnalogInputReady, r14
 224 0006 58 EE                   		movu.B	[r14], r14
 225 0008 5B 11                   		movu.B	r1, r1
 226 000a FD 60 1E                		shlr	r1, r14
 822:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 227                             		.loc 1 822 0
 228 000d EF E1                   		mov.L	r14, r1
 229                             	.LVL19:
 230 000f 64 11                   		and #1, r1
 231 0011 02                      		rts
 232                             	.LFE7:
 234                             		.section	.text.LIB_ADC_ResetApplAnalogReady,"ax",@progbits
 235                             		.global	_LIB_ADC_ResetApplAnalogReady
 237                             	_LIB_ADC_ResetApplAnalogReady:
 238                             	.LFB8:
 823:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 824:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function given pos, position of Analog inside AnalogInput[], reset the correspondent bit\n
 825:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** inside  ApplianceAnalogInputReady var.
 826:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 827:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] pos A/D channel position vs AnalogInput[] vector.
 828:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b ApplianceAnalogInputReady bitmap (global) W.
 829:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 830:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
 831:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 832:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE    conversion ready
 833:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		FALSE   conversion not ready
 834:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 835:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \warning    The function is reserved to the Appliance.
 836:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 837:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 838:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		06/07/2010
 839:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 840:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 841:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 842:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 843:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_ResetApplAnalogReady(uint8_t pos)
 844:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 239                             		.loc 1 844 0
 240                             	.LVL20:
 241 0000 7E A7                   		push.l	r7
 242                             	.LCFI2:
 845:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	PLT_ASSERT(pos < ADC_NUM_CHANNELLS_USED)
 846:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 847:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ApplianceAnalogInputReady&=(~(1u << pos));
 243                             		.loc 1 847 0
 244 0002 FB 42 00 00 00 00       		mov.L	#_ApplianceAnalogInputReady, r4
 245 0008 5B 11                   		movu.B	r1, r1
 246 000a FC 64 41                		bclr	r1, [r4].B
 848:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 247                             		.loc 1 848 0
 248 000d 3F 77 01                		rtsd	#4, r7-r7
 249                             	.LFE8:
 251                             		.section	.text.LIB_ADC_SetAnalogValue,"ax",@progbits
 252                             		.global	_LIB_ADC_SetAnalogValue
 254                             	_LIB_ADC_SetAnalogValue:
 255                             	.LFB9:
 849:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 850:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 851:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function fills the global A/D result (AnalogInput[]) in position pos with value.
 852:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 853:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] pos offset vs AnalogInput[] where to store the value.
 854:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] value value to store.
 855:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInput[]	 (global) W.
 856:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 857:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 858:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		28/06/2010
 859:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 860:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 861:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 862:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_SetAnalogValue( uint8_t pos, ADC_ValueType value )
 863:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 256                             		.loc 1 863 0
 257                             	.LVL21:
 864:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	PLT_ASSERT(pos < ADC_NUM_CHANNELLS_USED)
 865:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 866:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
 867:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AnalogInput[pos] = value;
 258                             		.loc 1 867 0
 259 0000 5B 11                   		movu.B	r1, r1
 260 0002 FB E2 00 00 00 00       		mov.L	#_AnalogInput, r14
 261 0008 FE 11 E2                		mov.W	r2, [r1,r14]
 262 000b 02                      		rts
 263                             	.LFE9:
 265                             		.section	.text.LIB_ADC_GetAnalogValue,"ax",@progbits
 266                             		.global	_LIB_ADC_GetAnalogValue
 268                             	_LIB_ADC_GetAnalogValue:
 269                             	.LFB10:
 868:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_UPDATE( AnalogInput, pos );
 869:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
 870:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 871:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 872:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 873:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function returns the A/D result in position pos of AnalogInput[].
 874:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 875:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] pos offset vs AnalogInput[].
 876:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInput[]	 (global) R.
 877:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	ADC_ValueType
 878:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 879:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		A/D coversion result
 880:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 881:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 882:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		29/06/2010
 883:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 884:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 885:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 886:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** ADC_ValueType LIB_ADC_GetAnalogValue(uint8_t pos)
 887:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 270                             		.loc 1 887 0
 271                             	.LVL22:
 888:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	PLT_ASSERT(pos < ADC_NUM_CHANNELLS_USED)
 889:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return AnalogInput[pos];
 272                             		.loc 1 889 0
 273 0000 5B 11                   		movu.B	r1, r1
 890:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 274                             		.loc 1 890 0
 275 0002 FB E2 00 00 00 00       		mov.L	#_AnalogInput, r14
 276 0008 FE D1 E1                		movu.W	[r1,r14], r1
 277                             	.LVL23:
 278 000b 02                      		rts
 279                             	.LFE10:
 281                             		.section	.text.LIB_ADC_ADposVsIndex,"ax",@progbits
 282                             		.global	_LIB_ADC_ADposVsIndex
 284                             	_LIB_ADC_ADposVsIndex:
 285                             	.LFB15:
 891:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 892:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 893:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function disables measure on A/D channel, init all variables related to the measure\n
 894:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** on that channel and restart readings.
 895:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 896:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in]	channel A/D channel
 897:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 898:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[] (global) R/W
 899:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AD_ChInputReady used as W
 900:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 901:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 902:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		11/02/2008
 903:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 904:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 905:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 906:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		01/07/2010
 907:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.1
 908:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 909:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Alessandro Sabbatini
 910:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		13/06/2014
 911:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.2
 912:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 913:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
 914:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
 915:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Nota 2:
 916:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			Ver 1.0.1 added call to LIB_ADC_ADChVsAnalogInputParamIndex
 917:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Nota 3:
 918:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			Ver 1.0.2 removed constraint of Automatic flag set after calling this function: previous state w
 919:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 920:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 921:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (MANAGE_AD_CHANNEL_READ==TRUE)
 922:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_InitMeasureForCh ( uint8_t channel )
 923:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 924:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analog_t *pAnalogInputParam;
 925:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t _index;
 926:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	bool_t tmpAuto;
 927:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 928:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_ADChVsAnalogInputParamIndex(channel);
 929:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (AD_INDEX_NOT_FOUND == _index)
 930:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 931:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return;
 932:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 933:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 934:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
 935:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_CHECK( AnalogInputParam,      _index );
 936:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 937:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
 938:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 939:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	tmpAuto = pAnalogInputParam->analogConfigData.bit.automatic;
 940:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogConfigData.bit.automatic = 0;
 941:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	LIB_ADC_ResetAnalogMeasure(_index);
 942:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_ChInputReady &= (analogInput_t)(~(1u<<pAnalogInputParam->analogInputRamPos));
 943:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (tmpAuto)
 944:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 945:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		pAnalogInputParam->analogConfigData.bit.automatic = 1;
 946:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 947:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 948:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_UPDATE( AnalogInputParam,      _index );
 949:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
 950:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 951:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 952:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif /* #if (MANAGE_AD_CHANNEL_READ==TRUE) */
 953:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 954:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** The function returns TRUE if reading on A/D channel "channel" is ready otherwise FALSE.
 955:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 956:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in]	channel A/D channel
 957:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 958:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AD_ChInputReady (global) used as R
 959:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[index].analogInputRamPos (global) used as R
 960:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 961:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 962:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 963:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		11/02/2008
 964:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
 965:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 966:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
 967:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		01/07/2010
 968:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.1
 969:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 970:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \warning    index not tested
 971:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 972:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
 973:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
 974:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Nota 2:
 975:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			Ver 1.0.1 added call to LIB_ADC_ADChVsAnalogInputParamIndex
 976:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 977:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
 978:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (MANAGE_AD_CHANNEL_READ==TRUE)
 979:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 980:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_IsNoAutoMeasureReady( uint8_t channel )
 981:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 982:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t _index;
 983:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 984:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_ADChVsAnalogInputParamIndex(channel);
 985:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 986:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( AD_ChInputReady & (1u<<AnalogInputParam[_index].analogInputRamPos) )
 987:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 988:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return TRUE;
 989:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 990:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else
 991:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
 992:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return FALSE;
 993:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
 994:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 995:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 996:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif  /* #if (MANAGE_AD_CHANNEL_READ==TRUE) */
 997:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
 998:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
 999:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function disables measure on A/D channel linked to pos, init all variables related to the meas
1000:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** on that channel and restart readings.
1001:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1002:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in]    pos position where the A/D measure is stored
1003:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1004:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[] (global) R/W
1005:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AD_ChInputReady used as W
1006:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1007:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1008:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1009:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		05/07/2010
1010:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1011:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1012:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Alessandro Sabbatini
1013:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		13/06/2014
1014:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.1
1015:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1016:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1017:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1018:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Nota 2:
1019:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			Ver 1.0.1 removed constraint of Automatic flag set after calling this function: previous state w
1020:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1021:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1022:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (MANAGE_AD_CHANNEL_READ==TRUE)
1023:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_InitMeasureForChInPos ( uint8_t pos )
1024:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1025:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analog_t *pAnalogInputParam;
1026:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t _index;
1027:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	bool_t tmpAuto;
1028:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1029:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_AnalogInputParamIndexVsPos(pos);
1030:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (AD_INDEX_NOT_FOUND == _index)
1031:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1032:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return;
1033:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1034:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
1035:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_CHECK( AnalogInputParam,      _index );
1036:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1037:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
1038:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	tmpAuto = pAnalogInputParam->analogConfigData.bit.automatic;
1039:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogConfigData.bit.automatic = 0;
1040:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	LIB_ADC_ResetAnalogMeasure(_index);
1041:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_ChInputReady &= (analogInput_t)(~(1u<<pAnalogInputParam->analogInputRamPos));
1042:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (tmpAuto)
1043:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1044:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		pAnalogInputParam->analogConfigData.bit.automatic = 1;
1045:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1046:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1047:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_UPDATE( AnalogInputParam,      _index );
1048:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
1049:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1050:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1051:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif /* #if (MANAGE_AD_CHANNEL_READ==TRUE) */
1052:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1053:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function returns if measure on A/D channel linked to pos is ready.
1054:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1055:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in]    pos position where the A/D measure is stored
1056:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1057:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[] (global) R/W
1058:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AD_ChInputReady used as W
1059:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1060:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1061:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
1062:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1063:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE measure ready
1064:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		FALSE measure not ready
1065:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1066:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1067:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		05/07/2010
1068:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1069:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1070:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1071:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1072:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1073:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1074:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (MANAGE_AD_CHANNEL_READ==TRUE)
1075:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_IsNoAutoMeasureForChInPosReady ( uint8_t pos )
1076:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1077:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t _index;
1078:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1079:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_AnalogInputParamIndexVsPos(pos);
1080:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( AD_ChInputReady & (1u<<AnalogInputParam[_index].analogInputRamPos) )
1081:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1082:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return TRUE;
1083:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1084:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else
1085:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1086:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return FALSE;
1087:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1088:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1089:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1090:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif /* #if (MANAGE_AD_CHANNEL_READ==TRUE) */
1091:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1092:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Search functions */
1093:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1094:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1095:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function, given index of AnalogInputParam[], \n
1096:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** returns the position where is stored the A/D measure.
1097:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1098:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] index index of AnalogInputParam[]
1099:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1100:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	uint8_t
1101:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1102:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		position inside AnalogInput[] if success
1103:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval     AD_POS_NOT_FOUND
1104:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1105:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1106:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		05/07/2010
1107:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1108:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1109:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1110:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_ADposVsIndex(uint8_t _index)
1111:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 286                             		.loc 1 1111 0
 287                             	.LVL24:
1112:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (_index < ADC_NUM_CHANNELLS_USED)
 288                             		.loc 1 1112 0
 289 0000 5B 11                   		movu.B	r1, r1
 290 0002 61 71                   		cmp	#7, r1
 291 0004 24 0D                   		bgtu	.L32
1113:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1114:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return(AnalogInputParam[_index].analogInputRamPos);
 292                             		.loc 1 1114 0
 293 0006 63 A1                   		mul	#10, r1
 294                             	.LVL25:
 295 0008 70 11 00 00 00 00       		add	#_AnalogInputParam, r1
 296 000e 88 99                   		mov.B	3[r1], r1
 297 0010 0C                      		bra	.L31
 298                             	.L32:
1115:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1116:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else
1117:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1118:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return(AD_POS_NOT_FOUND);
 299                             		.loc 1 1118 0
 300 0011 FB 16 FF                		mov	#-1, r1
 301                             		.balign 2,3,1
 302                             	.L31:
1119:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1120:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 303                             		.loc 1 1120 0
 304 0014 5B 11                   		movu.B	r1, r1
 305 0016 02                      		rts
 306                             	.LFE15:
 308 0017 03                      		.section	.text.LIB_ADC_AnalogChRamPos,"ax",@progbits
 309                             		.global	_LIB_ADC_AnalogChRamPos
 311                             	_LIB_ADC_AnalogChRamPos:
 312                             	.LFB16:
1121:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1122:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function, given an A/D channel, returns result position inside AnalogInputParam[].
1123:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1124:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] channel A/D channel
1125:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1126:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	uint8_t
1127:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1128:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		position inside AnalogInputParam[] if success
1129:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval     AD_POS_NOT_FOUND
1130:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1131:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1132:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		28/06/2010
1133:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1134:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1135:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1136:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_AnalogChRamPos(uint8_t channel)
1137:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 313                             		.loc 1 1137 0
 314                             	.LVL26:
 315                             		.loc 1 1137 0
 316 0000 66 0E                   		mov.L	#0, r14
1138:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t i;
1139:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
1140:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1141:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AnalogInputParam[i].channel == channel )
 317                             		.loc 1 1141 0
 318 0002 5B 11                   		movu.B	r1, r1
 319                             	.LVL27:
 320                             		.balign 2,3,1
 321                             	.L36:
1136:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_AnalogChRamPos(uint8_t channel)
 322                             		.loc 1 1136 0
 323 0004 EF E4                   		mov.L	r14, r4
 324 0006 63 A4                   		mul	#10, r4
 325 0008 70 44 00 00 00 00       		add	#_AnalogInputParam, r4
 326                             		.loc 1 1141 0
 327 000e B0 C3                   		movu.B	2[r4], r3
 328 0010 47 13                   		cmp	r1, r3
 329 0012 1D                      		bne	.L34
1142:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1143:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			return(AnalogInputParam[i].analogInputRamPos);
 330                             		.loc 1 1143 0
 331 0013 88 C9                   		mov.B	3[r4], r1
 332                             	.LVL28:
 333 0015 2E 0B                   		bra	.L35
 334                             	.L34:
 335 0017 62 1E                   		add	#1, r14
1139:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
 336                             		.loc 1 1139 0
 337 0019 61 8E                   		cmp	#8, r14
 338 001b 21 E9                   		bne	.L36
1144:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1145:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1146:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return AD_POS_NOT_FOUND;
 339                             		.loc 1 1146 0
 340 001d FB 16 FF                		mov	#-1, r1
 341                             		.balign 2,3,1
 342                             	.L35:
1147:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 343                             		.loc 1 1147 0
 344 0020 5B 11                   		movu.B	r1, r1
 345 0022 02                      		rts
 346                             	.LFE16:
 348 0023 03                      		.section	.text.LIB_ADC_ADChVsAnalogInputParamIndex,"ax",@progbits
 349                             		.global	_LIB_ADC_ADChVsAnalogInputParamIndex
 351                             	_LIB_ADC_ADChVsAnalogInputParamIndex:
 352                             	.LFB17:
1148:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1149:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function, given an A/D channel, returns the index of AnalogInputParam[] related to that channe
1150:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1151:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] channel A/D channel
1152:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1153:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	uint8_t
1154:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1155:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		index inside AnalogInputParam[] if success
1156:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval     AD_INDEX_NOT_FOUND
1157:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1158:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1159:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		01/07/2010
1160:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1161:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1162:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1163:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_ADChVsAnalogInputParamIndex(uint8_t channel)
1164:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 353                             		.loc 1 1164 0
 354                             	.LVL29:
 355                             		.loc 1 1164 0
 356 0000 66 0E                   		mov.L	#0, r14
1165:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t i;
1166:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
1167:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1168:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AnalogInputParam[i].channel == channel )
 357                             		.loc 1 1168 0
 358 0002 5B 11                   		movu.B	r1, r1
 359                             	.LVL30:
 360                             		.balign 2,3,1
 361                             	.L40:
 362 0004 CF E4                   		mov.B	r14, r4
1163:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_ADChVsAnalogInputParamIndex(uint8_t channel)
 363                             		.loc 1 1163 0
 364 0006 EF E3                   		mov.L	r14, r3
 365 0008 63 A3                   		mul	#10, r3
 366 000a 70 33 00 00 00 00       		add	#_AnalogInputParam, r3
 367                             		.loc 1 1168 0
 368 0010 B0 B3                   		movu.B	2[r3], r3
 369 0012 47 13                   		cmp	r1, r3
 370 0014 12                      		beq	.L39
 371 0015 62 1E                   		add	#1, r14
1166:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
 372                             		.loc 1 1166 0
 373 0017 61 8E                   		cmp	#8, r14
 374 0019 21 EB                   		bne	.L40
1169:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1170:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			return(i);
1171:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1172:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1173:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1174:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return AD_INDEX_NOT_FOUND;
 375                             		.loc 1 1174 0
 376 001b FB 46 FF                		mov	#-1, r4
 377                             		.balign 2,3,1
 378                             	.L39:
1175:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1176:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 379                             		.loc 1 1176 0
 380 001e 5B 41                   		movu.B	r4, r1
 381                             	.LVL31:
 382 0020 02                      		rts
 383                             	.LFE17:
 385 0021 03                      		.section	.text.LIB_ADC_IsNoAutoMeasureReady,"ax",@progbits
 386                             		.global	_LIB_ADC_IsNoAutoMeasureReady
 388                             	_LIB_ADC_IsNoAutoMeasureReady:
 389                             	.LFB12:
 981:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 390                             		.loc 1 981 0
 391                             	.LVL32:
 984:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_ADChVsAnalogInputParamIndex(channel);
 392                             		.loc 1 984 0
 393 0000 05 00 00 00             		bsr	_LIB_ADC_ADChVsAnalogInputParamIndex
 394                             	.LVL33:
 986:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( AD_ChInputReady & (1u<<AnalogInputParam[_index].analogInputRamPos) )
 395                             		.loc 1 986 0
 396 0004 FB E2 00 00 00 00       		mov.L	#_AD_ChInputReady, r14
 397 000a 58 EE                   		movu.B	[r14], r14
 398 000c 5B 11                   		movu.B	r1, r1
 399 000e 63 A1                   		mul	#10, r1
 400                             	.LVL34:
 401 0010 70 11 00 00 00 00       		add	#_AnalogInputParam, r1
 402 0016 B0 9C                   		movu.B	3[r1], r4
 403 0018 FD 60 4E                		shlr	r4, r14
 994:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 404                             		.loc 1 994 0
 405 001b EF E1                   		mov.L	r14, r1
 406 001d 64 11                   		and #1, r1
 407 001f 02                      		rts
 408                             	.LFE12:
 410                             		.section	.text.LIB_ADC_AnalogInputParamIndexVsPos,"ax",@progbits
 411                             		.global	_LIB_ADC_AnalogInputParamIndexVsPos
 413                             	_LIB_ADC_AnalogInputParamIndexVsPos:
 414                             	.LFB18:
1177:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1178:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function, given pos,position vs AnalogInput[] where the A/D result is stored,\n
1179:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** returns the index of AnalogInputParam[] related to.
1180:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1181:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] pos ram position where is stored A/D result
1182:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1183:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	uint8_t
1184:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1185:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		index inside AnalogInputParam[] if success
1186:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval     AD_INDEX_NOT_FOUND
1187:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1188:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1189:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		05/07/2010
1190:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1191:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1192:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1193:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_AnalogInputParamIndexVsPos(uint8_t pos)
1194:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 415                             		.loc 1 1194 0
 416                             	.LVL35:
 417                             		.loc 1 1194 0
 418 0000 66 0E                   		mov.L	#0, r14
1195:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t i;
1196:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
1197:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1198:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( AnalogInputParam[i].analogInputRamPos == pos )
 419                             		.loc 1 1198 0
 420 0002 5B 11                   		movu.B	r1, r1
 421                             	.LVL36:
 422                             		.balign 2,3,1
 423                             	.L45:
 424 0004 CF E4                   		mov.B	r14, r4
1193:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_AnalogInputParamIndexVsPos(uint8_t pos)
 425                             		.loc 1 1193 0
 426 0006 EF E3                   		mov.L	r14, r3
 427 0008 63 A3                   		mul	#10, r3
 428 000a 70 33 00 00 00 00       		add	#_AnalogInputParam, r3
 429                             		.loc 1 1198 0
 430 0010 B0 BB                   		movu.B	3[r3], r3
 431 0012 47 13                   		cmp	r1, r3
 432 0014 12                      		beq	.L44
 433 0015 62 1E                   		add	#1, r14
1196:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
 434                             		.loc 1 1196 0
 435 0017 61 8E                   		cmp	#8, r14
 436 0019 21 EB                   		bne	.L45
1199:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1200:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			return(i);
1201:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1202:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1203:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return AD_INDEX_NOT_FOUND;
 437                             		.loc 1 1203 0
 438 001b FB 46 FF                		mov	#-1, r4
 439                             		.balign 2,3,1
 440                             	.L44:
1204:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 441                             		.loc 1 1204 0
 442 001e 5B 41                   		movu.B	r4, r1
 443                             	.LVL37:
 444 0020 02                      		rts
 445                             	.LFE18:
 447 0021 03                      		.section	.text.LIB_ADC_IsNoAutoMeasureForChInPosReady,"ax",@progbits
 448                             		.global	_LIB_ADC_IsNoAutoMeasureForChInPosReady
 450                             	_LIB_ADC_IsNoAutoMeasureForChInPosReady:
 451                             	.LFB14:
1076:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 452                             		.loc 1 1076 0
 453                             	.LVL38:
1079:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_AnalogInputParamIndexVsPos(pos);
 454                             		.loc 1 1079 0
 455 0000 05 00 00 00             		bsr	_LIB_ADC_AnalogInputParamIndexVsPos
 456                             	.LVL39:
1080:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( AD_ChInputReady & (1u<<AnalogInputParam[_index].analogInputRamPos) )
 457                             		.loc 1 1080 0
 458 0004 FB E2 00 00 00 00       		mov.L	#_AD_ChInputReady, r14
 459 000a 58 EE                   		movu.B	[r14], r14
 460 000c 5B 11                   		movu.B	r1, r1
 461 000e 63 A1                   		mul	#10, r1
 462                             	.LVL40:
 463 0010 70 11 00 00 00 00       		add	#_AnalogInputParam, r1
 464 0016 B0 9C                   		movu.B	3[r1], r4
 465 0018 FD 60 4E                		shlr	r4, r14
1089:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 466                             		.loc 1 1089 0
 467 001b EF E1                   		mov.L	r14, r1
 468 001d 64 11                   		and #1, r1
 469 001f 02                      		rts
 470                             	.LFE14:
 472                             		.section	.text.LIB_ADC_ResetAnalogMeasure,"ax",@progbits
 473                             		.global	_LIB_ADC_ResetAnalogMeasure
 475                             	_LIB_ADC_ResetAnalogMeasure:
 476                             	.LFB19:
1205:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1206:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Fixed index, displacement vs AnalogInputParam[],this functions reset the A/D measure.
1207:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1208:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] index index of AnalogInputParam[].
1209:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1210:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[index] (global) W
1211:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1212:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1213:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1214:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		02/07/2010
1215:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1216:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1217:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1218:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1219:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1220:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1221:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_ResetAnalogMeasure(uint8_t _index)
1222:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 477                             		.loc 1 1222 0
 478                             	.LVL41:
1223:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analog_t *pAnalogInputParam;
1224:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
1225:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
1226:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
1227:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
 479                             		.loc 1 1227 0
 480 0000 5B 11                   		movu.B	r1, r1
 481 0002 63 A1                   		mul	#10, r1
 482                             	.LVL42:
 483 0004 70 11 00 00 00 00       		add	#_AnalogInputParam, r1
 484                             	.LVL43:
1228:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogInputIndex = 0;
 485                             		.loc 1 1228 0
 486 000a 3C 14 00                		mov.B	#0, 4[r1]
1229:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogInputSum = 0;
 487                             		.loc 1 1229 0
 488 000d 3D 13 00                		mov.W	#0, 6[r1]
1230:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogInputOldValue = 0;
 489                             		.loc 1 1230 0
 490 0010 3D 14 00                		mov.W	#0, 8[r1]
1231:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogInputCnt = 0;
 491                             		.loc 1 1231 0
 492 0013 3C 15 00                		mov.B	#0, 5[r1]
 493 0016 02                      		rts
 494                             	.LFE19:
 496                             		.section	.text.LIB_ADC_InitMeasureForChInPos,"ax",@progbits
 497                             		.global	_LIB_ADC_InitMeasureForChInPos
 499                             	_LIB_ADC_InitMeasureForChInPos:
 500                             	.LFB13:
1024:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 501                             		.loc 1 1024 0
 502                             	.LVL44:
 503 0000 6E 7B                   		pushm	r7-r11
 504                             	.LCFI3:
1029:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_AnalogInputParamIndexVsPos(pos);
 505                             		.loc 1 1029 0
 506 0002 05 00 00 00             		bsr	_LIB_ADC_AnalogInputParamIndexVsPos
 507                             	.LVL45:
1030:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (AD_INDEX_NOT_FOUND == _index)
 508                             		.loc 1 1030 0
 509 0006 EF 17                   		mov.L	r1, r7
 510 0008 75 51 FF                		cmp	#0xff, r1
 511 000b 20 2F                   		beq	.L49
1037:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
 512                             		.loc 1 1037 0
 513 000d 63 A7                   		mul	#10, r7
 514 000f 70 77 00 00 00 00       		add	#_AnalogInputParam, r7
 515                             	.LVL46:
1038:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	tmpAuto = pAnalogInputParam->analogConfigData.bit.automatic;
 516                             		.loc 1 1038 0
 517 0015 5C 7A                   		movu.W	[r7], r10
 518 0017 68 FA                   		shlr	#15, r10
 519                             	.LVL47:
1039:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogConfigData.bit.automatic = 0;
 520                             		.loc 1 1039 0
 521 0019 DC 7E                   		mov.W	[r7], r14
 522 001b 7A FE                   		bclr	#15, r14
 523 001d D3 7E                   		mov.W	r14, [r7]
1040:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	LIB_ADC_ResetAnalogMeasure(_index);
 524                             		.loc 1 1040 0
 525 001f 05 00 00 00             		bsr	_LIB_ADC_ResetAnalogMeasure
 526                             	.LVL48:
1041:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_ChInputReady &= (analogInput_t)(~(1u<<pAnalogInputParam->analogInputRamPos));
 527                             		.loc 1 1041 0
 528 0023 FB 42 00 00 00 00       		mov.L	#_AD_ChInputReady, r4
 529 0029 B0 FB                   		movu.B	3[r7], r3
 530 002b FC 64 43                		bclr	r3, [r4].B
1042:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (tmpAuto)
 531                             		.loc 1 1042 0
 532 002e 76 2A FF 00             		and #0xff, r10
 533                             	.LVL49:
 534 0032 10                      		beq	.L49
1044:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		pAnalogInputParam->analogConfigData.bit.automatic = 1;
 535                             		.loc 1 1044 0
 536 0033 DC 7E                   		mov.W	[r7], r14
 537 0035 78 FE                   		bset	#15, r14
 538 0037 D3 7E                   		mov.W	r14, [r7]
 539                             	.LVL50:
 540 0039 03                      		.balign 2,3,2
 541                             	.L49:
1050:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 542                             		.loc 1 1050 0
 543 003a 3F 7B 05                		rtsd	#20, r7-r11
 544                             	.LFE13:
 546 003d 03                      		.section	.text.LIB_ADC_InitMeasureForCh,"ax",@progbits
 547                             		.global	_LIB_ADC_InitMeasureForCh
 549                             	_LIB_ADC_InitMeasureForCh:
 550                             	.LFB11:
 923:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 551                             		.loc 1 923 0
 552                             	.LVL51:
 553 0000 6E 7B                   		pushm	r7-r11
 554                             	.LCFI4:
 928:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_ADChVsAnalogInputParamIndex(channel);
 555                             		.loc 1 928 0
 556 0002 05 00 00 00             		bsr	_LIB_ADC_ADChVsAnalogInputParamIndex
 557                             	.LVL52:
 929:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (AD_INDEX_NOT_FOUND == _index)
 558                             		.loc 1 929 0
 559 0006 EF 17                   		mov.L	r1, r7
 560 0008 75 51 FF                		cmp	#0xff, r1
 561 000b 20 2F                   		beq	.L57
 937:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
 562                             		.loc 1 937 0
 563 000d 63 A7                   		mul	#10, r7
 564 000f 70 77 00 00 00 00       		add	#_AnalogInputParam, r7
 565                             	.LVL53:
 939:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	tmpAuto = pAnalogInputParam->analogConfigData.bit.automatic;
 566                             		.loc 1 939 0
 567 0015 5C 7A                   		movu.W	[r7], r10
 568 0017 68 FA                   		shlr	#15, r10
 569                             	.LVL54:
 940:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogConfigData.bit.automatic = 0;
 570                             		.loc 1 940 0
 571 0019 DC 7E                   		mov.W	[r7], r14
 572 001b 7A FE                   		bclr	#15, r14
 573 001d D3 7E                   		mov.W	r14, [r7]
 941:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	LIB_ADC_ResetAnalogMeasure(_index);
 574                             		.loc 1 941 0
 575 001f 05 00 00 00             		bsr	_LIB_ADC_ResetAnalogMeasure
 576                             	.LVL55:
 942:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AD_ChInputReady &= (analogInput_t)(~(1u<<pAnalogInputParam->analogInputRamPos));
 577                             		.loc 1 942 0
 578 0023 FB 42 00 00 00 00       		mov.L	#_AD_ChInputReady, r4
 579 0029 B0 FB                   		movu.B	3[r7], r3
 580 002b FC 64 43                		bclr	r3, [r4].B
 943:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (tmpAuto)
 581                             		.loc 1 943 0
 582 002e 76 2A FF 00             		and #0xff, r10
 583                             	.LVL56:
 584 0032 10                      		beq	.L57
 945:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		pAnalogInputParam->analogConfigData.bit.automatic = 1;
 585                             		.loc 1 945 0
 586 0033 DC 7E                   		mov.W	[r7], r14
 587 0035 78 FE                   		bset	#15, r14
 588 0037 D3 7E                   		mov.W	r14, [r7]
 589                             	.LVL57:
 590 0039 03                      		.balign 2,3,2
 591                             	.L57:
 951:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 592                             		.loc 1 951 0
 593 003a 3F 7B 05                		rtsd	#20, r7-r11
 594                             	.LFE11:
 596 003d 03                      		.section	.text.LIB_ADC_AvgFilter,"ax",@progbits
 598                             	_LIB_ADC_AvgFilter:
 599                             	.LFB28:
1232:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
1233:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_UPDATE( AnalogInputParam, _index );
1234:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
1235:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1236:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1237:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1238:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function, given index of AnalogInputParam[] and new value to set,
1239:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** overrides automatic flag in setting file
1240:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1241:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] _index index of AnalogInputParam[].
1242:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] newVal New value to be set
1243:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1244:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[index] (global) W
1245:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1246:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1247:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Alessandro Sabbatini
1248:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		18/06/2014
1249:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1250:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1251:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1252:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Alessandro Sabbatini
1253:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1254:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1255:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** void LIB_ADC_ForceAutoRead(uint8_t _index, bool_t newVal)
1256:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1257:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_START();
1258:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_CHECK( AnalogInputParam, _index );
1259:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1260:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AnalogInputParam[_index].analogConfigData.bit.automatic = newVal;
1261:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1262:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_ELEM_UPDATE( AnalogInputParam, _index );
1263:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_REGION_END();
1264:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1265:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1266:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1267:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function check if Vref is in range.
1268:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1269:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.RefCh (global) R
1270:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.RefReady (global) R
1271:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput A/D channel readings on Vref channel (global) R.
1272:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b GoodRef (global) W
1273:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1274:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
1275:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1276:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		FALSE Vref channel not present or GoodRef not significant.
1277:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval     TRUE GoodRef significant.
1278:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1279:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1280:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		07/07/2010
1281:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1282:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1283:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1284:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1285:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1286:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1287:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1288:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_CheckRef(void)
1289:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1290:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	static ADC_ValueType PreviousVref;
1291:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	static bool_t FirstSample = FALSE;
1292:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1293:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType avg;
1294:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	bool_t retValue = FALSE;
1295:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1296:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( ( RefInput.RefCh != CH_FOR_COMPENSATION_IS_NOT_DEFINED ) && (TRUE == RefInput.RefReady) )
1297:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1298:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( FirstSample == TRUE )
1299:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1300:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/*lint -esym(727,PreviousVref) previousVref is init before
1301:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			  enter here !! cfr. FirstSample */
1302:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (ADC_RESOLUTION==16)
1303:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			avg = (ADC_ValueType)(((uint32_t)PreviousVref + RefInput.RefVal)/2);
1304:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #else
1305:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			avg = (ADC_ValueType)((PreviousVref + RefInput.RefVal)/2);
1306:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
1307:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/*lint +esym(727,PreviousVref) */
1308:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1309:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( ( avg < REF_MIN_ADC_UNITS ) || ( avg > REF_MAX_ADC_UNITS ) )
1310:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
1311:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				GoodRef = FALSE;
1312:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
1313:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			else
1314:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
1315:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				GoodRef = TRUE;
1316:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
1317:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1318:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( ( avg < BOTTOM_BOUND_RTN_ADC_UNITS ) || ( avg > UPPER_BOUND_RTN_ADC_UNITS ) )
1319:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
1320:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RtnOutRange = TRUE;
1321:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
1322:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			else
1323:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
1324:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RtnOutRange = FALSE;
1325:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
1326:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1327:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			retValue = TRUE;
1328:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1329:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1330:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		PreviousVref = RefInput.RefVal;
1331:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		FirstSample = TRUE;
1332:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1333:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1334:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return retValue;
1335:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1336:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1337:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1338:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This functions returns TRUE if Vref in range otherwise FALSE.
1339:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1340:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b GoodRef (global) R.
1341:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1342:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
1343:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1344:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE/FALSE
1345:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1346:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1347:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1348:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		07/07/2010
1349:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1350:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1351:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1352:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1353:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1354:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1355:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1356:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_Is_Ref_Good(void)
1357:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1358:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return GoodRef;
1359:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1360:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1361:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1362:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1363:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Returns TRUE if Vref measure, taking into account tolerances of hardware components, is out of rang
1364:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1365:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
1366:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1367:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE/FALSE
1368:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1369:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1370:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Roberto Fioravanti
1371:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		08/11/2012
1372:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1373:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1374:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1375:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1376:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Roberto Fioravanti
1377:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1378:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1379:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_Is_RTN_Out_Range(void)
1380:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1381:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c ****     return RtnOutRange;
1382:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1383:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1384:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1385:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** This function performs V peak measure.
1386:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1387:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [out]    pVlinePeak
1388:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1389:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
1390:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1391:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE  V Line Channel not defined
1392:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		FALSE V peak ready
1393:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1394:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1395:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1396:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		07/07/2010
1397:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1398:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1399:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1400:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1401:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1402:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1403:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1404:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (N_SAMPLE_V_LINE<0)
1405:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #error "N_SAMPLE_V_LINE must be >= 0"
1406:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
1407:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (N_SAMPLE_V_LINE>255)
1408:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #error "N_SAMPLE_V_LINE must be <= 255"
1409:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
1410:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_VLineMeasure  (ADC_ValueType *pVlinePeak)
1411:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1412:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	V_Line_t vLine;
1413:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t pos;
1414:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t _index;
1415:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1416:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	(void)memset(&vLine,0,sizeof(vLine));
1417:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1418:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (CH_VLINE_IS_NOT_DEFINED==RefInput.Ch_Vline)
1419:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1420:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return TRUE;
1421:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1422:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1423:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(CONFIG_LIB_TRACE_SUPPORT)
1424:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	TRACE_LINE_PEAK_START();
1425:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
1426:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1427:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_ADChVsAnalogInputParamIndex(RefInput.Ch_Vline);
1428:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1429:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	do
1430:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1431:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		vLine.newVPeak = LIB_ADC_Conv_F (_index, (uint8_t)0, (uint8_t)0);
1432:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1433:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( vLine.newVPeak > vLine.vPeak )
1434:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1435:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			vLine.vPeak = vLine.newVPeak;
1436:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1437:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		vLine.samples ++;
1438:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1439:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	while ( vLine.samples < N_SAMPLE_V_LINE );
1440:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1441:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/*
1442:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	   Vline adjustment is performed inside LIB_ADC_Conv_F (index, 0, 0) and in any case
1443:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	   saturated to ONE_AD_SAMPLE_MAX_VALUE
1444:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	   check VLINEMEASURE_COMP_FACTOR
1445:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	*/
1446:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1447:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* Updates AnalogInput[] where we store VLine */
1448:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pos = LIB_ADC_AnalogChRamPos(RefInput.Ch_Vline);
1449:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1450:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( AD_POS_NOT_FOUND != pos ){
1451:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ADC_SetAnalogValue( pos, vLine.vPeak );
1452:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1453:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1454:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (CHECK_VLINE_CROSSING == 1)
1455:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* Only for statistics */
1456:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ManageVLineRefCrossing(vLine.vPeak);
1457:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
1458:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1459:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	*pVlinePeak= vLine.vPeak;
1460:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1461:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if defined(CONFIG_LIB_TRACE_SUPPORT)
1462:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	TRACE_LINE_PEAK_END();
1463:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
1464:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1465:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return FALSE;
1466:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1467:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1468:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1469:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Returns RefInput (A/D).
1470:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1471:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	ADC_ValueType
1472:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1473:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		RTN A/D value
1474:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1475:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	stefano.ughi
1476:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		Mar 9, 2011
1477:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1478:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1479:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Note 1:
1480:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by stefano.ughi
1481:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1482:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1483:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** ADC_ValueType LIB_ADC_GetRefInput(void)
1484:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1485:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return(RefInput.RefVal);
1486:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1487:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1488:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Returns if RefInput is ready.
1489:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1490:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	bool_t
1491:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1492:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		TRUE RefInput.RefReady is ready
1493:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \retval		FALSE RefInput.RefReady is not ready
1494:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1495:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	stefano.ughi
1496:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		Mar 9, 2011
1497:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1498:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1499:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Note 1:
1500:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by stefano.ughi
1501:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1502:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1503:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** bool_t LIB_ADC_IsRefInputReady(void)
1504:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1505:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return (RefInput.RefReady);
1506:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1507:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1508:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1509:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Return Compensation Channel position
1510:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1511:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \return 	uint8_t		Compensation Channel position
1512:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1513:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Alessandro Sabbatini
1514:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		Feb 20, 2014
1515:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1516:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1517:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Note 1:
1518:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Alessandro Sabbatini
1519:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1520:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1521:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** uint8_t LIB_ADC_GetChCompPos(void)
1522:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1523:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return RefInput.RefCh;
1524:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1525:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1526:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /* Local Function */
1527:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1528:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1529:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Fixed index, displacement vs AnalogInputParam[],this functions performs the average over n samples\
1530:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** and insert the value in the global variable AnalogInput[].
1531:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1532:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] index index of AnalogInputParam[].
1533:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] conversion A/D measure.
1534:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1535:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[index] (global) R/W
1536:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b RefInput.RefCh A/D compensation channel  R
1537:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputDisable (global) R
1538:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInput[adChPos] (global) A/D output W
1539:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputReady (global) W
1540:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1541:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1542:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1543:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		02/07/2010
1544:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1545:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1546:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1547:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1548:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			\par \b Nota 2:
1549:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			added  pAnalogInputParam->analogConfigData.bit.automatic = 0;\n
1550:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			under condition  #if (MANAGE_AD_CHANNEL_READ == TRUE)
1551:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1552:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1553:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1554:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static void LIB_ADC_AvgFilter ( uint8_t _index, ADC_ValueType conversion )
1555:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 600                             		.loc 1 1555 0
 601 0000 6E 7C                   		pushm	r7-r12
 602                             	.LCFI5:
 603 0002 CF 1B                   		mov.B	r1, r11
1556:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analog_t *pAnalogInputParam = &AnalogInputParam[_index];
 604                             		.loc 1 1556 0
 605 0004 5B 1E                   		movu.B	r1, r14
 606 0006 63 AE                   		mul	#10, r14
 607 0008 70 EE 00 00 00 00       		add	#_AnalogInputParam, r14
1557:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType adAverage;
1558:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t nSamplesToCollect;
1559:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t adChCompPos;
1560:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	uint8_t adChPos = pAnalogInputParam->analogInputRamPos;
 608                             		.loc 1 1560 0
 609 000e CD EA 03                		mov.B	3[r14], r10
1561:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
1562:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* updates the average */
1563:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogInputSum += (ad_sum_t)conversion;
 610                             		.loc 1 1563 0
 611 0011 DD E7 03                		mov.W	6[r14], r7
 612 0014 4B 72                   		add	r7, r2
 613 0016 D7 E2 03                		mov.W	r2, 6[r14]
1564:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	/* updates the readings's  counter */
1565:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam->analogInputIndex++;
 614                             		.loc 1 1565 0
 615 0019 CD EC 04                		mov.B	4[r14], r12
 616 001c 62 1C                   		add	#1, r12
 617 001e C7 EC 04                		mov.B	r12, 4[r14]
1566:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
1567:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	SAFETY_DATA_CHECK(AnalogInputDisable);
1568:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	
1569:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	nSamplesToCollect = (uint8_t)(1u<<pAnalogInputParam->analogConfigData.bit.nRead);
 618                             		.loc 1 1569 0
 619 0021 58 E3                   		movu.B	[r14], r3
 620 0023 64 73                   		and #7, r3
 621 0025 66 14                   		mov.L	#1, r4
 622 0027 FD 62 34                		shll	r3, r4
1570:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1571:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (pAnalogInputParam->analogInputIndex >= nSamplesToCollect)
 623                             		.loc 1 1571 0
 624 002a 5B CC                   		movu.B	r12, r12
 625 002c 5B 43                   		movu.B	r4, r3
 626 002e 47 3C                   		cmp	r3, r12
 627 0030 22 05 38 B8 00          		bltu	.L65
1572:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1573:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* if channel is enabled */
1574:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ((AnalogInputDisable & (1u<<adChPos)) == 0)
 628                             		.loc 1 1574 0
 629 0035 5B AA                   		movu.B	r10, r10
 630 0037 FB C2 00 00 00 00       		mov.L	#_AnalogInputDisable, r12
 631 003d 58 C3                   		movu.B	[r12], r3
 632 003f FC 6B 3A                		btst	r10, r3
 633 0042 3B A0 00                		bne	.L67
1575:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1576:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1577:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			adAverage = (ADC_ValueType) (pAnalogInputParam->analogInputSum/nSamplesToCollect);
 634                             		.loc 1 1577 0
 635 0045 5F 27                   		movu.W	r2, r7
1578:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1579:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if (pAnalogInputParam->analogConfigData.bit.comp)
1580:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
1581:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				/* channel must be compesated with RTN reference */
1582:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				/* Get position where RefCh is stored */
1583:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				adChCompPos = LIB_ADC_AnalogChRamPos(RefInput.RefCh);
1584:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				if ( AD_POS_NOT_FOUND != adChCompPos )
1585:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				{
1586:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					ADC_ValueType tmpAdCompVal = AnalogInput[adChCompPos];
1587:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					uint32_t adCompesatedValue;
1588:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1589:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					/* Check if RefCh A/D measure is ready and has valid value */
1590:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					if ( (  ( AnalogInputReady & (1u<<adChCompPos) ) ) &&
1591:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 							( tmpAdCompVal > COMP_MIN_ADC_UNITS) &&
1592:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 							( tmpAdCompVal < COMP_MAX_ADC_UNITS) )
1593:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					{
1594:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						adCompesatedValue = (((uint32_t)adAverage*AD_COMP_VAL)/tmpAdCompVal);
1595:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1596:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						/* Get rid an overflow value */
1597:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						if (adCompesatedValue > ONE_AD_SAMPLE_MAX_VALUE)
1598:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						{
1599:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 							adCompesatedValue = ONE_AD_SAMPLE_MAX_VALUE;
1600:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						}
1601:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1602:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						/* Override new Analog average value with compensated one */
1603:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						adAverage = (ADC_ValueType)adCompesatedValue;
1604:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					}
1605:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				}
1606:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				else
1607:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				{
1608:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					/* Compensation's channel not found ! Serious error */
1609:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					PLT_ERROR_WARNING(PLT_ERROR_ANALOG_2);
1610:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				}
1611:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
1612:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1613:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/* Set value as is - good if no compensation needed or it cannot be applied */
1614:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AnalogInput[adChPos] = adAverage;
1615:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1616:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			SAFETY_DATA_ELEM_UPDATE(AnalogInput, adChPos);
1617:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1618:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AnalogInputReady |= (analogInput_t)(1u<<adChPos);
1619:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/* Flag for Appliance */
1620:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			ApplianceAnalogInputReady |= (analogInput_t)(1u<<adChPos);
1621:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			
1622:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #if (MANAGE_AD_CHANNEL_READ == TRUE)
1623:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AD_ChInputReady |= (analogInput_t)(1u<<adChPos);
1624:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** #endif
1625:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1626:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		
1627:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ADC_ResetAnalogMeasure(_index);
1628:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1629:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
1630:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1631:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1632:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** /**
1633:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** Fixed index, displacement vs AnalogInputParam[],this functions performs a control between\n
1634:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** current ADC reading and old ADC reading, if the distance between the measures is is less than or eq
1635:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** to a certain setting parameter the new measure is validated.
1636:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1637:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] index index of AnalogInputParam[].
1638:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \param  [in] newADvalue A/D measure.
1639:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1640:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \attention \b AnalogInputParam[index] (global) R/W
1641:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1642:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \author 	Stefano Ughi
1643:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \date		05/07/2010
1644:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \version	1.0.0
1645:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1646:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** \note		\par \b Nota 1:
1647:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			documentation by Stefano Ughi
1648:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1649:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** */
1650:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1651:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** static void LIB_ADC_DeltaCtrl( uint8_t _index, ADC_ValueType newADvalue)
1652:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
1653:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	analog_t *pAnalogInputParam;
1654:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType delta;
1655:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_ValueType maxVar;
1656:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1657:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
1658:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1659:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	delta = (ADC_ValueType)labs((int32_t)newADvalue-(int32_t)pAnalogInputParam->analogInputOldValue);
1660:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	maxVar = (ADC_ValueType)(1u<<pAnalogInputParam->analogConfigData.bit.fal);
1661:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 
1662:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (pAnalogInputParam->analogInputCnt < ANALOG_SYNC_THR )
1663:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1664:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		/* synchronization phase */
1665:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if (0 == pAnalogInputParam->analogInputCnt)
1666:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1667:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputOldValue = newADvalue;
1668:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputCnt++;
1669:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1670:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		else
1671:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1672:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if (delta <= maxVar)
1673:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
1674:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				pAnalogInputParam->analogInputOldValue = newADvalue;
1675:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				pAnalogInputParam->analogInputCnt++;
1676:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
1677:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			else
1678:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			{
1679:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				/* restart synch. */
1680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				pAnalogInputParam->analogInputCnt = 0;
1681:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			}
1682:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1683:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1684:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	else
1685:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	{
1686:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if (delta <= maxVar)
1687:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1688:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/* Valid data */
1689:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			LIB_ADC_AvgFilter (_index, newADvalue);
1690:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1691:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		else
1692:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		{
1693:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			/* Restart acquisition */
1694:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputSum = 0;
1695:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputIndex = 0;
1696:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		}
1697:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		pAnalogInputParam->analogInputOldValue = newADvalue;
1698:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	}
1699:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 636                             		.loc 1 1699 0
 637 0047 76 24 FF 00             		and #0xff, r4
1577:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			adAverage = (ADC_ValueType) (pAnalogInputParam->analogInputSum/nSamplesToCollect);
 638                             		.loc 1 1577 0
 639 004b FC 23 47                		div	r4, r7
 640 004e DF 7C                   		mov.W	r7, r12
1579:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if (pAnalogInputParam->analogConfigData.bit.comp)
 641                             		.loc 1 1579 0
 642 0050 DC EE                   		mov.W	[r14], r14
 643 0052 75 2E 20                		and #32, r14
 644 0055 5F EE                   		movu.W	r14, r14
 645 0057 61 0E                   		cmp	#0, r14
 646 0059 20 57                   		beq	.L68
1583:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				adChCompPos = LIB_ADC_AnalogChRamPos(RefInput.RefCh);
 647                             		.loc 1 1583 0
 648 005b FB E2 00 00 00 00       		mov.L	#_RefInput, r14
 649 0061 CD E1 01                		mov.B	1[r14], r1
 650 0064 05 00 00 00             		bsr	_LIB_ADC_AnalogChRamPos
1584:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				if ( AD_POS_NOT_FOUND != adChCompPos )
 651                             		.loc 1 1584 0
 652 0068 5B 11                   		movu.B	r1, r1
 653 006a 75 51 FF                		cmp	#0xff, r1
 654 006d 20 3C                   		beq	.L69
 655                             	.LBB4:
1586:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					ADC_ValueType tmpAdCompVal = AnalogInput[adChCompPos];
 656                             		.loc 1 1586 0
 657 006f FB E2 00 00 00 00       		mov.L	#_AnalogInput, r14
 658 0075 FE 51 E4                		mov.W	[r1,r14], r4
1590:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					if ( (  ( AnalogInputReady & (1u<<adChCompPos) ) ) &&
 659                             		.loc 1 1590 0
 660 0078 FB E2 00 00 00 00       		mov.L	#_AnalogInputReady, r14
 661 007e 58 E3                   		movu.B	[r14], r3
 662 0080 FC 6B 31                		btst	r1, r3
 663 0083 20 2D                   		beq	.L68
1590:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					if ( (  ( AnalogInputReady & (1u<<adChCompPos) ) ) &&
 664                             		.loc 1 1590 0 is_stmt 0 discriminator 1
 665 0085 5F 44                   		movu.W	r4, r4
 666 0087 76 04 7C 01             		cmp	#0x17c, r4
 667 008b 25 25                   		bleu	.L68
1591:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 							( tmpAdCompVal > COMP_MIN_ADC_UNITS) &&
 668                             		.loc 1 1591 0 is_stmt 1
 669 008d 76 04 BA 02             		cmp	#0x2ba, r4
 670 0091 24 1F                   		bgtu	.L68
1594:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						adCompesatedValue = (((uint32_t)adAverage*AD_COMP_VAL)/tmpAdCompVal);
 671                             		.loc 1 1594 0
 672 0093 EF 7E                   		mov.L	r7, r14
 673 0095 76 1E 13 02             		mul	#0x213, r14
1603:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 						adAverage = (ADC_ValueType)adCompesatedValue;
 674                             		.loc 1 1603 0
 675 0099 FC 27 4E                		divu	r4, r14
 676 009c 76 0E FF 03             		cmp	#0x3ff, r14
 677 00a0 25 06                   		bleu	.L70
 678 00a2 FB EA FF 03             		mov.L	#0x3ff, r14
 679                             		.balign 2,3,1
 680                             	.L70:
 681 00a6 DF EC                   		mov.W	r14, r12
 682 00a8 08                      		bra	.L68
 683                             	.L69:
 684                             	.LBE4:
1609:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 					PLT_ERROR_WARNING(PLT_ERROR_ANALOG_2);
 685                             		.loc 1 1609 0
 686 00a9 66 21                   		mov.L	#2, r1
 687 00ab 05 00 00 00             		bsr	_LIB_Error_Warning_Handler
 688 00af 03                      		.balign 2,3,5
 689                             	.L68:
1614:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AnalogInput[adChPos] = adAverage;
 690                             		.loc 1 1614 0
 691 00b0 FB 72 00 00 00 00       		mov.L	#_AnalogInput, r7
 692 00b6 FE 1A 7C                		mov.W	r12, [r10,r7]
1618:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AnalogInputReady |= (analogInput_t)(1u<<adChPos);
 693                             		.loc 1 1618 0
 694 00b9 66 1E                   		mov.L	#1, r14
 695 00bb FD 62 AE                		shll	r10, r14
 696 00be FB 72 00 00 00 00       		mov.L	#_AnalogInputReady, r7
 697 00c4 CC 7A                   		mov.B	[r7], r10
 698 00c6 57 EA                   		or	r14, r10
 699 00c8 C3 7A                   		mov.B	r10, [r7]
1620:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			ApplianceAnalogInputReady |= (analogInput_t)(1u<<adChPos);
 700                             		.loc 1 1620 0
 701 00ca FB 72 00 00 00 00       		mov.L	#_ApplianceAnalogInputReady, r7
 702 00d0 CC 7A                   		mov.B	[r7], r10
 703 00d2 57 EA                   		or	r14, r10
 704 00d4 C3 7A                   		mov.B	r10, [r7]
1623:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			AD_ChInputReady |= (analogInput_t)(1u<<adChPos);
 705                             		.loc 1 1623 0
 706 00d6 FB 72 00 00 00 00       		mov.L	#_AD_ChInputReady, r7
 707 00dc 06 14 7E                		or	[r7].B, r14
 708 00df C3 7E                   		mov.B	r14, [r7]
 709 00e1 03                      		.balign 2,3,1
 710                             	.L67:
1627:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ADC_ResetAnalogMeasure(_index);
 711                             		.loc 1 1627 0
 712 00e2 CF B1                   		mov.B	r11, r1
1629:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 713                             		.loc 1 1629 0
 714 00e4 6F 7C                   		popm	r7-r12
1627:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ADC_ResetAnalogMeasure(_index);
 715                             		.loc 1 1627 0
 716 00e6 04 00 00 00             		bra	_LIB_ADC_ResetAnalogMeasure
 717                             	.L65:
1629:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 718                             		.loc 1 1629 0
 719 00ea 3F 7C 06                		rtsd	#24, r7-r12
 720                             	.LFE28:
 722 00ed 03                      		.section	.text.LIB_ADC_Conv_F,"ax",@progbits
 723                             		.global	_LIB_ADC_Conv_F
 725                             	_LIB_ADC_Conv_F:
 726                             	.LFB4:
 666:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 727                             		.loc 1 666 0
 728                             	.LVL58:
 729 0000 6E 6D                   		pushm	r6-r13
 730                             	.LCFI6:
 731 0002 60 40                   		sub	#4, r0
 732                             	.LCFI7:
 733 0004 CF 1C                   		mov.B	r1, r12
 734 0006 CF 3D                   		mov.B	r3, r13
 676:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pAnalogInputParam = &AnalogInputParam[_index];
 735                             		.loc 1 676 0
 736 0008 5B 17                   		movu.B	r1, r7
 737 000a 63 A7                   		mul	#10, r7
 738 000c 70 77 00 00 00 00       		add	#_AnalogInputParam, r7
 739                             	.LVL59:
 677:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	localSamples = (uint8_t)(1u<<ad_sample_num_pot2);
 740                             		.loc 1 677 0
 741 0012 5B 22                   		movu.B	r2, r2
 742 0014 66 1B                   		mov.L	#1, r11
 743 0016 FD 62 2B                		shll	r2, r11
 744                             	.LVL60:
 680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i = 0; i < localSamples; i++ )
 745                             		.loc 1 680 0
 746 0019 66 09                   		mov	#0, r9
 678:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	lf_sum = 0;
 747                             		.loc 1 678 0
 748 001b 66 0A                   		mov	#0, r10
 680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i = 0; i < localSamples; i++ )
 749                             		.loc 1 680 0
 750 001d 5B B8                   		movu.B	r11, r8
 685:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( i >= samples_to_discard )
 751                             		.loc 1 685 0
 752 001f 5B 3E                   		movu.B	r3, r14
 680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i = 0; i < localSamples; i++ )
 753                             		.loc 1 680 0
 754 0021 2E 1D                   		bra	.L79
 755                             	.LVL61:
 756                             	.L81:
 682:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		(void)OCADC_SampleSync(pAnalogInputParam->channel,pAnalogInputParam->analogInputRamPos);
 757                             		.loc 1 682 0
 758 0023 88 F1                   		mov.B	2[r7], r1
 759 0025 88 FA                   		mov.B	3[r7], r2
 760 0027 E3 0E                   		mov.L	r14, [r0]
 761 0029 05 00 00 00             		bsr	_OCADC_SampleSync
 762                             	.LVL62:
 683:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		adValue = OCADC_GetSync(pAnalogInputParam->analogInputRamPos);
 763                             		.loc 1 683 0
 764 002d 88 F9                   		mov.B	3[r7], r1
 765 002f 05 00 00 00             		bsr	_OCADC_GetSync
 766                             	.LVL63:
 685:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( i >= samples_to_discard )
 767                             		.loc 1 685 0
 768 0033 EC 0E                   		mov.L	[r0], r14
 769 0035 47 E6                   		cmp	r14, r6
 770 0037 23 05                   		bltu	.L80
 687:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			lf_sum += (lowFilterADCsum_t)adValue;
 771                             		.loc 1 687 0
 772 0039 4B 1A                   		add	r1, r10
 773                             	.LVL64:
 774 003b 03                      		.balign 2,3,1
 775                             	.L80:
 680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i = 0; i < localSamples; i++ )
 776                             		.loc 1 680 0
 777 003c 62 19                   		add	#1, r9
 778                             	.LVL65:
 779                             		.balign 2,3,1
 780                             	.L79:
 680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i = 0; i < localSamples; i++ )
 781                             		.loc 1 680 0 is_stmt 0 discriminator 1
 782 003e 5B 96                   		movu.B	r9, r6
 783 0040 47 86                   		cmp	r8, r6
 784 0042 23 E1                   		bltu	.L81
 691:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (localSamples>samples_to_discard)
 785                             		.loc 1 691 0 is_stmt 1
 786 0044 5B DE                   		movu.B	r13, r14
 787 0046 47 E8                   		cmp	r14, r8
 788 0048 25 0D                   		bleu	.L82
 693:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		adValue = (ADC_ValueType)(lf_sum/(uint8_t)(localSamples-samples_to_discard));
 789                             		.loc 1 693 0
 790 004a 5F AA                   		movu.W	r10, r10
 791 004c 43 DB                   		sub	r13, r11
 792                             	.LVL66:
 793 004e 5B BB                   		movu.B	r11, r11
 794 0050 FC 23 BA                		div	r11, r10
 795                             	.LVL67:
 796 0053 2E 0D                   		bra	.L83
 797                             	.LVL68:
 798                             	.L82:
 699:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		PLT_ERROR_WARNING(PLT_ERROR_ANALOG_1);
 799                             		.loc 1 699 0
 800 0055 66 11                   		mov.L	#1, r1
 801 0057 05 00 00 00             		bsr	_LIB_Error_Warning_Handler
 802                             	.LVL69:
 698:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		adValue = ONE_AD_SAMPLE_MAX_VALUE;
 803                             		.loc 1 698 0
 804 005b FB AA FF 03             		mov	#0x3ff, r10
 805                             	.LVL70:
 806 005f 03                      		.balign 2,3,3
 807                             	.L83:
 704:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( pAnalogInputParam->channel == RefInput.Ch_Vline )
 808                             		.loc 1 704 0
 809 0060 59 7D 02                		movu.B	2[r7], r13
 810                             	.LVL71:
 811 0063 FB B2 00 00 00 00       		mov.L	#_RefInput, r11
 812 0069 44 BD                   		cmp	[r11].UB, r13
 813 006b 21 11                   		bne	.L84
 814 006d 62 FA                   		add	#15, r10
 815                             	.LVL72:
 816 006f 5F AB                   		movu.W	r10, r11
 817 0071 76 0B FF 03             		cmp	#0x3ff, r11
 818 0075 25 07                   		bleu	.L84
 819 0077 FB AA FF 03             		mov	#0x3ff, r10
 820 007b 03                      		.balign 2,3,5
 821                             	.L84:
 822                             	.LVL73:
 720:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( pAnalogInputParam->analogConfigData.bit.fal == 0 )
 823                             		.loc 1 720 0
 824 007c DC 7D                   		mov.W	[r7], r13
 825 007e FD 74 CD 0F             		tst	#15, r13
 826 0082 21 0C                   		bne	.L86
 724:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		LIB_ADC_AvgFilter(_index,adValue);
 827                             		.loc 1 724 0
 828 0084 CF C1                   		mov.B	r12, r1
 829 0086 DF A2                   		mov.W	r10, r2
 830 0088 05 00 00 00             		bsr	_LIB_ADC_AvgFilter
 831                             	.LVL74:
 832 008c 2E 56                   		bra	.L87
 833                             	.L86:
 834                             	.LVL75:
 835                             	.LBB7:
 836                             	.LBB8:
1659:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	delta = (ADC_ValueType)labs((int32_t)newADvalue-(int32_t)pAnalogInputParam->analogInputOldValue);
 837                             		.loc 1 1659 0
 838 008e 5F AB                   		movu.W	r10, r11
 839 0090 06 C1 7B 04             		sub	8[r7].UW, r11
 840 0094 7E 2B                   		abs	r11
 841                             	.LVL76:
1660:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	maxVar = (ADC_ValueType)(1u<<pAnalogInputParam->analogConfigData.bit.fal);
 842                             		.loc 1 1660 0
 843 0096 64 FD                   		and #15, r13
 844 0098 66 1E                   		mov.L	#1, r14
 845                             	.LVL77:
 846 009a EF E4                   		mov.L	r14, r4
 847 009c FD 62 D4                		shll	r13, r4
 848 009f EF 4D                   		mov.L	r4, r13
 849                             	.LVL78:
1662:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (pAnalogInputParam->analogInputCnt < ANALOG_SYNC_THR )
 850                             		.loc 1 1662 0
 851 00a1 B1 7C                   		movu.B	5[r7], r4
 852 00a3 47 E4                   		cmp	r14, r4
 853 00a5 24 22                   		bgtu	.L88
1665:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if (0 == pAnalogInputParam->analogInputCnt)
 854                             		.loc 1 1665 0
 855 00a7 61 04                   		cmp	#0, r4
 856 00a9 19                      		bne	.L89
1667:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputOldValue = newADvalue;
 857                             		.loc 1 1667 0
 858 00aa D7 7A 04                		mov.W	r10, 8[r7]
1668:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputCnt++;
 859                             		.loc 1 1668 0
 860 00ad C7 7E 05                		mov.B	r14, 5[r7]
 861 00b0 2E 32                   		bra	.L87
 862                             	.L89:
1672:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if (delta <= maxVar)
 863                             		.loc 1 1672 0
 864 00b2 5F BB                   		movu.W	r11, r11
 865 00b4 5F DD                   		movu.W	r13, r13
 866 00b6 47 DB                   		cmp	r13, r11
 867 00b8 24 0A                   		bgtu	.L90
1674:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				pAnalogInputParam->analogInputOldValue = newADvalue;
 868                             		.loc 1 1674 0
 869 00ba D7 7A 04                		mov.W	r10, 8[r7]
1675:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				pAnalogInputParam->analogInputCnt++;
 870                             		.loc 1 1675 0
 871 00bd 3C 75 02                		mov.B	#2, 5[r7]
 872 00c0 2E 22                   		bra	.L87
 873                             	.L90:
1680:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				pAnalogInputParam->analogInputCnt = 0;
 874                             		.loc 1 1680 0
 875 00c2 3C 75 00                		mov.B	#0, 5[r7]
 876 00c5 2E 1D                   		bra	.L87
 877                             	.L88:
1686:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if (delta <= maxVar)
 878                             		.loc 1 1686 0
 879 00c7 5F BB                   		movu.W	r11, r11
 880 00c9 5F DD                   		movu.W	r13, r13
 881 00cb 47 DB                   		cmp	r13, r11
 882 00cd 24 0B                   		bgtu	.L91
1689:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			LIB_ADC_AvgFilter (_index, newADvalue);
 883                             		.loc 1 1689 0
 884 00cf CF C1                   		mov.B	r12, r1
 885 00d1 DF A2                   		mov.W	r10, r2
 886 00d3 05 00 00 00             		bsr	_LIB_ADC_AvgFilter
 887                             	.LVL79:
 888 00d7 0F                      		bra	.L92
 889                             	.LVL80:
 890                             	.L91:
1694:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputSum = 0;
 891                             		.loc 1 1694 0
 892 00d8 3D 73 00                		mov.W	#0, 6[r7]
1695:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			pAnalogInputParam->analogInputIndex = 0;
 893                             		.loc 1 1695 0
 894 00db 3C 74 00                		mov.B	#0, 4[r7]
 895                             	.LVL81:
 896                             		.balign 2,3,5
 897                             	.L92:
1697:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		pAnalogInputParam->analogInputOldValue = newADvalue;
 898                             		.loc 1 1697 0
 899 00de D7 7A 04                		mov.W	r10, 8[r7]
 900                             	.LVL82:
 901 00e1 03                      		.balign 2,3,1
 902                             	.L87:
 903                             	.LBE8:
 904                             	.LBE7:
 735:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 905                             		.loc 1 735 0
 906 00e2 5F A1                   		movu.W	r10, r1
 907 00e4 3F 6D 09                		rtsd	#36, r6-r13
 908                             	.LFE4:
 910 00e7 03                      		.section	.text.LIB_ADC_Manager,"ax",@progbits
 911                             		.global	_LIB_ADC_Manager
 913                             	_LIB_ADC_Manager:
 914                             	.LFB3:
 470:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 915                             		.loc 1 470 0
 916 0000 6E 7C                   		pushm	r7-r12
 917                             	.LCFI8:
 918                             	.LVL83:
 919 0002 FB A2 00 00 00 00       		mov.L	#_AnalogInputParam, r10
 470:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 920                             		.loc 1 470 0
 921 0008 66 07                   		mov.L	#0, r7
 534:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		        ( AnalogInputParam[i].channel != RefInput.Ch_Vline ) )
 922                             		.loc 1 534 0
 923 000a FB B2 00 00 00 00       		mov.L	#_RefInput, r11
 924                             	.LVL84:
 925                             		.balign 2,3,1
 926                             	.L98:
 927 0010 CF 7C                   		mov.B	r7, r12
 533:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( ( AnalogInputParam[i].analogConfigData.bit.automatic ) &&
 928                             		.loc 1 533 0
 929 0012 EF 7E                   		mov.L	r7, r14
 930 0014 63 AE                   		mul	#10, r14
 931 0016 70 EE 00 00 00 00       		add	#_AnalogInputParam, r14
 932 001c 5C E4                   		movu.W	[r14], r4
 933 001e FD 8F 4E                		shlr	#15, r4, r14
 934 0021 20 39                   		beq	.L95
 534:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		        ( AnalogInputParam[i].channel != RefInput.Ch_Vline ) )
 935                             		.loc 1 534 0 discriminator 1
 936 0023 CC B1                   		mov.B	[r11], r1
 533:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( ( AnalogInputParam[i].analogConfigData.bit.automatic ) &&
 937                             		.loc 1 533 0 discriminator 1
 938 0025 59 A2 02                		movu.B	2[r10], r2
 939 0028 5B 13                   		movu.B	r1, r3
 940 002a 47 32                   		cmp	r3, r2
 941 002c 20 2E                   		beq	.L95
 538:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( ( RefInput.Ch_Vline != CH_VLINE_IS_NOT_DEFINED ) &&
 942                             		.loc 1 538 0
 943 002e 75 53 FF                		cmp	#0xff, r3
 944 0031 20 0D                   		beq	.L96
 538:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( ( RefInput.Ch_Vline != CH_VLINE_IS_NOT_DEFINED ) &&
 945                             		.loc 1 538 0 is_stmt 0 discriminator 1
 946 0033 7C 44                   		btst #4, r4
 947 0035 11                      		beq	.L96
 541:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				(void)OCADC_SampleSync (RefInput.Ch_Vline, AD_DUMMY_POS);
 948                             		.loc 1 541 0 is_stmt 1
 949 0036 FB 26 FF                		mov	#-1, r2
 950 0039 05 00 00 00             		bsr	_OCADC_SampleSync
 951                             	.LVL85:
 952 003d 03                      		.balign 2,3,1
 953                             	.L96:
 545:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			res = LIB_ADC_Conv_F( i, AD_LOCAL_SAMPLES_POWER_OF_TWO, AD_LOCAL_SAMPLES_DISCARDED);
 954                             		.loc 1 545 0
 955 003e CF C1                   		mov.B	r12, r1
 956 0040 66 22                   		mov	#2, r2
 957 0042 66 03                   		mov	#0, r3
 958 0044 05 00 00 00             		bsr	_LIB_ADC_Conv_F
 959                             	.LVL86:
 547:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( AnalogInputParam[i].channel == RefInput.RefCh )
 960                             		.loc 1 547 0
 961 0048 59 AE 02                		movu.B	2[r10], r14
 962 004b 45 BE 01                		cmp	1[r11].UB, r14
 963 004e 18                      		bne	.L97
 552:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RefInput.RefReady = TRUE;
 964                             		.loc 1 552 0
 965 004f F9 B4 04 01             		mov.B	#1, 4[r11]
 554:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RefInput.RefVal = res;
 966                             		.loc 1 554 0
 967 0053 D7 B1 01                		mov.W	r1, 2[r11]
 968                             		.balign 2,3,3
 969                             	.L97:
 559:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			CBF_AnalogInputIntManager_Polling();
 970                             		.loc 1 559 0
 971 0056 05 00 00 00             		bsr	_CBF_AnalogInputIntManager_Polling
 972                             	.LVL87:
 973                             		.balign 2,3,1
 974                             	.L95:
 975 005a 62 17                   		add	#1, r7
 976 005c 62 AA                   		add	#10, r10
 523:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	for ( i=0; i<ADC_NUM_CHANNELLS_USED; i++)
 977                             		.loc 1 523 0
 978 005e 61 87                   		cmp	#8, r7
 979 0060 21 B0                   		bne	.L98
 637:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 980                             		.loc 1 637 0
 981 0062 6F 7C                   		popm	r7-r12
 634:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	ADC_Check();
 982                             		.loc 1 634 0
 983 0064 04 00 00 00             		bra	_ADC_Check
 984                             	.LVL88:
 985                             	.LFE3:
 987                             		.section	.text.LIB_ADC_ForceAutoRead,"ax",@progbits
 988                             		.global	_LIB_ADC_ForceAutoRead
 990                             	_LIB_ADC_ForceAutoRead:
 991                             	.LFB20:
1256:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 992                             		.loc 1 1256 0
 993                             	.LVL89:
1260:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AnalogInputParam[_index].analogConfigData.bit.automatic = newVal;
 994                             		.loc 1 1260 0
 995 0000 5B 11                   		movu.B	r1, r1
 996 0002 63 A1                   		mul	#10, r1
 997                             	.LVL90:
 998 0004 70 11 00 00 00 00       		add	#_AnalogInputParam, r1
 999 000a DC 1E                   		mov.W	[r1], r14
 1000 000c FD 74 C2 01             		tst	#1, r2
 1001 0010 FD EF 1E                		bmne	#15, r14
 1002 0013 D3 1E                   		mov.W	r14, [r1]
 1003 0015 02                      		rts
 1004                             	.LFE20:
 1006                             		.section	.text.LIB_ADC_CheckRef,"ax",@progbits
 1007                             		.global	_LIB_ADC_CheckRef
 1009                             	_LIB_ADC_CheckRef:
 1010                             	.LFB21:
1289:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 1011                             		.loc 1 1289 0
 1012                             	.LVL91:
1296:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( ( RefInput.RefCh != CH_FOR_COMPENSATION_IS_NOT_DEFINED ) && (TRUE == RefInput.RefReady) )
 1013                             		.loc 1 1296 0
 1014 0000 FB E2 00 00 00 00       		mov.L	#_RefInput, r14
 1015 0006 59 E4 01                		movu.B	1[r14], r4
 1016 0009 75 54 FF                		cmp	#0xff, r4
 1017 000c 20 69                   		beq	.L118
1296:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( ( RefInput.RefCh != CH_FOR_COMPENSATION_IS_NOT_DEFINED ) && (TRUE == RefInput.RefReady) )
 1018                             		.loc 1 1296 0 is_stmt 0 discriminator 1
 1019 000e 59 E4 04                		movu.B	4[r14], r4
 1020 0011 61 14                   		cmp	#1, r4
 1021 0013 21 62                   		bne	.L118
1298:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( FirstSample == TRUE )
 1022                             		.loc 1 1298 0 is_stmt 1
 1023 0015 FB 42 00 00 00 00       		mov.L	#_FirstSample.10705, r4
 1024 001b EC 41                   		mov.L	[r4], r1
 1025 001d 61 11                   		cmp	#1, r1
 1026 001f 21 3A                   		bne	.L119
1305:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			avg = (ADC_ValueType)((PreviousVref + RefInput.RefVal)/2);
 1027                             		.loc 1 1305 0
 1028 0021 FB 42 00 00 00 00       		mov.L	#_PreviousVref.10704, r4
 1029 0027 5C 44                   		movu.W	[r4], r4
 1030 0029 5D EE 01                		movu.W	2[r14], r14
 1031 002c 4B 4E                   		add	r4, r14
 1032 002e 6A 1E                   		shar	#1, r14
 1033                             	.LVL92:
1309:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( ( avg < REF_MIN_ADC_UNITS ) || ( avg > REF_MAX_ADC_UNITS ) )
 1034                             		.loc 1 1309 0
 1035 0030 72 E3 72 FE             		add	#0xfffffe72, r14, r3
1311:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				GoodRef = FALSE;
 1036                             		.loc 1 1311 0
 1037 0034 76 03 44 02             		cmp	#0x244, r3
 1038 0038 FC DB 35                		scleu.L	r3
 1039 003b FB 42 00 00 00 00       		mov.L	#_GoodRef, r4
 1040 0041 E3 43                   		mov.L	r3, [r4]
1318:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			if ( ( avg < BOTTOM_BOUND_RTN_ADC_UNITS ) || ( avg > UPPER_BOUND_RTN_ADC_UNITS ) )
 1041                             		.loc 1 1318 0
 1042 0043 72 E4 23 FE             		add	#0xfffffe23, r14, r4
 1043 0047 FB E2 00 00 00 00       		mov.L	#_RtnOutRange, r14
 1044                             	.LVL93:
 1045 004d 75 54 6C                		cmp	#0x6c, r4
 1046 0050 25 05                   		bleu	.L116
1320:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RtnOutRange = TRUE;
 1047                             		.loc 1 1320 0
 1048 0052 E3 E1                   		mov.L	r1, [r14]
 1049 0054 08                      		bra	.L113
 1050                             	.L116:
1324:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 				RtnOutRange = FALSE;
 1051                             		.loc 1 1324 0
 1052 0055 F8 E6 00                		mov.L	#0, [r14]
 1053 0058 0C                      		bra	.L113
 1054                             	.LVL94:
 1055                             	.L119:
1294:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	bool_t retValue = FALSE;
 1056                             		.loc 1 1294 0
 1057 0059 66 01                   		mov.L	#0, r1
 1058 005b 03                      		.balign 2,3,5
 1059                             	.L113:
 1060                             	.LVL95:
1330:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		PreviousVref = RefInput.RefVal;
 1061                             		.loc 1 1330 0
 1062 005c FB 42 00 00 00 00       		mov.L	#_RefInput, r4
 1063 0062 FB E2 00 00 00 00       		mov.L	#_PreviousVref.10704, r14
 1064 0068 D1 4E 01                		mov.W	2[r4], [r14]
1331:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		FirstSample = TRUE;
 1065                             		.loc 1 1331 0
 1066 006b FB E2 00 00 00 00       		mov.L	#_FirstSample.10705, r14
 1067 0071 F8 E6 01                		mov.L	#1, [r14]
 1068 0074 02                      		rts
 1069                             	.LVL96:
 1070                             	.L118:
1294:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	bool_t retValue = FALSE;
 1071                             		.loc 1 1294 0
 1072 0075 66 01                   		mov.L	#0, r1
 1073                             	.LVL97:
1336:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 1074                             		.loc 1 1336 0
 1075 0077 02                      		rts
 1076                             	.LFE21:
 1078                             		.section	.text.LIB_ADC_Is_Ref_Good,"ax",@progbits
 1079                             		.global	_LIB_ADC_Is_Ref_Good
 1081                             	_LIB_ADC_Is_Ref_Good:
 1082                             	.LFB22:
1357:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 1083                             		.loc 1 1357 0
1359:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 1084                             		.loc 1 1359 0
 1085 0000 FB E2 00 00 00 00       		mov.L	#_GoodRef, r14
 1086 0006 EC E1                   		mov.L	[r14], r1
 1087 0008 02                      		rts
 1088                             	.LFE22:
 1090                             		.section	.text.LIB_ADC_Is_RTN_Out_Range,"ax",@progbits
 1091                             		.global	_LIB_ADC_Is_RTN_Out_Range
 1093                             	_LIB_ADC_Is_RTN_Out_Range:
 1094                             	.LFB23:
1380:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 1095                             		.loc 1 1380 0
1382:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 1096                             		.loc 1 1382 0
 1097 0000 FB E2 00 00 00 00       		mov.L	#_RtnOutRange, r14
 1098 0006 EC E1                   		mov.L	[r14], r1
 1099 0008 02                      		rts
 1100                             	.LFE23:
 1102                             		.section	.text.LIB_ADC_VLineMeasure,"ax",@progbits
 1103                             		.global	_LIB_ADC_VLineMeasure
 1105                             	_LIB_ADC_VLineMeasure:
 1106                             	.LFB24:
1411:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 1107                             		.loc 1 1411 0
 1108                             	.LVL98:
 1109 0000 6E 7A                   		pushm	r7-r10
 1110                             	.LCFI9:
 1111 0002 60 80                   		sub	#8, r0
 1112                             	.LCFI10:
 1113 0004 EF 17                   		mov.L	r1, r7
1416:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	(void)memset(&vLine,0,sizeof(vLine));
 1114                             		.loc 1 1416 0
 1115 0006 EF 01                   		mov.L	r0, r1
 1116                             	.LVL99:
 1117 0008 66 63                   		mov.L	#6, r3
 1118 000a 66 02                   		mov	#0, r2
 1119 000c 7F 88                   		sstr.b
1418:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if (CH_VLINE_IS_NOT_DEFINED==RefInput.Ch_Vline)
 1120                             		.loc 1 1418 0
 1121 000e FB A2 00 00 00 00       		mov.L	#_RefInput, r10
 1122 0014 CC A1                   		mov.B	[r10], r1
 1123 0016 5B 1A                   		movu.B	r1, r10
 1124 0018 75 5A FF                		cmp	#0xff, r10
 1125 001b 20 50                   		beq	.L127
1427:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	_index = LIB_ADC_ADChVsAnalogInputParamIndex(RefInput.Ch_Vline);
 1126                             		.loc 1 1427 0
 1127 001d 05 00 00 00             		bsr	_LIB_ADC_ADChVsAnalogInputParamIndex
 1128                             	.LVL100:
 1129 0021 CF 1A                   		mov.B	r1, r10
 1130                             	.LVL101:
 1131 0023 03                      		.balign 2,3,1
 1132                             	.L125:
1431:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		vLine.newVPeak = LIB_ADC_Conv_F (_index, (uint8_t)0, (uint8_t)0);
 1133                             		.loc 1 1431 0
 1134 0024 CF A1                   		mov.B	r10, r1
 1135 0026 66 02                   		mov	#0, r2
 1136 0028 CF 23                   		mov.B	r2, r3
 1137 002a 05 00 00 00             		bsr	_LIB_ADC_Conv_F
 1138                             	.LVL102:
 1139 002e D3 01                   		mov.W	r1, [r0]
1433:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		if ( vLine.newVPeak > vLine.vPeak )
 1140                             		.loc 1 1433 0
 1141 0030 06 C5 01 01             		cmp	2[r0].UW, r1
 1142 0034 25 04                   		bleu	.L124
1435:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 			vLine.vPeak = vLine.newVPeak;
 1143                             		.loc 1 1435 0
 1144 0036 90 09                   		mov.W	r1, 2[r0]
 1145                             		.balign 2,3,5
 1146                             	.L124:
1437:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		vLine.samples ++;
 1147                             		.loc 1 1437 0
 1148 0038 CD 0E 04                		mov.B	4[r0], r14
 1149 003b 62 1E                   		add	#1, r14
 1150 003d C7 0E 04                		mov.B	r14, 4[r0]
1439:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	while ( vLine.samples < N_SAMPLE_V_LINE );
 1151                             		.loc 1 1439 0
 1152 0040 5B EE                   		movu.B	r14, r14
 1153 0042 61 4E                   		cmp	#4, r14
 1154 0044 25 E0                   		bleu	.L125
1448:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	pos = LIB_ADC_AnalogChRamPos(RefInput.Ch_Vline);
 1155                             		.loc 1 1448 0
 1156 0046 FB A2 00 00 00 00       		mov.L	#_RefInput, r10
 1157                             	.LVL103:
 1158 004c CC A1                   		mov.B	[r10], r1
 1159 004e 05 00 00 00             		bsr	_LIB_ADC_AnalogChRamPos
 1160                             	.LVL104:
1450:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	if ( AD_POS_NOT_FOUND != pos ){
 1161                             		.loc 1 1450 0
 1162 0052 5B 11                   		movu.B	r1, r1
 1163 0054 DD 0E 01                		mov.W	2[r0], r14
 1164 0057 75 51 FF                		cmp	#0xff, r1
 1165 005a 20 0C                   		beq	.L126
 1166                             	.LVL105:
 1167                             	.LBB9:
 1168                             	.LBB10:
 867:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	AnalogInput[pos] = value;
 1169                             		.loc 1 867 0
 1170 005c FB A2 00 00 00 00       		mov.L	#_AnalogInput, r10
 1171 0062 FE 11 AE                		mov.W	r14, [r1,r10]
 1172                             	.LVL106:
 1173 0065 03                      		.balign 2,3,1
 1174                             	.L126:
 1175                             	.LBE10:
 1176                             	.LBE9:
1459:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	*pVlinePeak= vLine.vPeak;
 1177                             		.loc 1 1459 0
 1178 0066 D3 7E                   		mov.W	r14, [r7]
1465:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 	return FALSE;
 1179                             		.loc 1 1465 0
 1180 0068 66 01                   		mov.L	#0, r1
 1181                             	.LVL107:
 1182 006a 0C                      		bra	.L123
 1183                             	.L127:
1420:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** 		return TRUE;
 1184                             		.loc 1 1420 0
 1185 006b 66 11                   		mov.L	#1, r1
 1186 006d 03                      		.balign 2,3,2
 1187                             	.L123:
1466:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 1188                             		.loc 1 1466 0
 1189 006e 3F 7A 06                		rtsd	#24, r7-r10
 1190                             	.LFE24:
 1192 0071 03                      		.section	.text.LIB_ADC_GetRefInput,"ax",@progbits
 1193                             		.global	_LIB_ADC_GetRefInput
 1195                             	_LIB_ADC_GetRefInput:
 1196                             	.LFB25:
1484:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 1197                             		.loc 1 1484 0
1486:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 1198                             		.loc 1 1486 0
 1199 0000 FB E2 00 00 00 00       		mov.L	#_RefInput, r14
 1200 0006 5D E1 01                		movu.W	2[r14], r1
 1201 0009 02                      		rts
 1202                             	.LFE25:
 1204                             		.section	.text.LIB_ADC_IsRefInputReady,"ax",@progbits
 1205                             		.global	_LIB_ADC_IsRefInputReady
 1207                             	_LIB_ADC_IsRefInputReady:
 1208                             	.LFB26:
1504:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 1209                             		.loc 1 1504 0
1506:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 1210                             		.loc 1 1506 0
 1211 0000 FB E2 00 00 00 00       		mov.L	#_RefInput, r14
 1212 0006 59 E1 04                		movu.B	4[r14], r1
 1213 0009 02                      		rts
 1214                             	.LFE26:
 1216                             		.section	.text.LIB_ADC_GetChCompPos,"ax",@progbits
 1217                             		.global	_LIB_ADC_GetChCompPos
 1219                             	_LIB_ADC_GetChCompPos:
 1220                             	.LFB27:
1522:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** {
 1221                             		.loc 1 1522 0
1524:C:/Workspace/FW_Inertia/branch_indesit/PlatformLibrary/LIB_Analog\Analog.c **** }
 1222                             		.loc 1 1524 0
 1223 0000 FB E2 00 00 00 00       		mov.L	#_RefInput, r14
 1224 0006 59 E1 01                		movu.B	1[r14], r1
 1225 0009 02                      		rts
 1226                             	.LFE27:
 1228                             		.comm	_AnalogInput,16,2
 1229                             		.comm	_ApplianceAnalogInputReady,1,1
 1230                             		.comm	_AnalogInputReady,1,1
 1231                             		.comm	_AnalogInputDisable,1,1
 1232                             		.section	.bss.AD_ChInputReady,"aw",@nobits
 1235                             	_AD_ChInputReady:
 1236 0000 00                      		.zero	1
 1237                             		.section	.bss.RefInput,"aw",@nobits
 1238                             		.balign 2
 1241                             	_RefInput:
 1242 0000 00 00 00 00 00 00       		.zero	6
 1243                             		.section	.bss.AnalogInputParam,"aw",@nobits
 1244                             		.balign 2
 1247                             	_AnalogInputParam:
 1248 0000 00 00 00 00 00 00 00 00 		.zero	80
 1248      00 00 00 00 00 00 00 00 
 1248      00 00 00 00 00 00 00 00 
 1248      00 00 00 00 00 00 00 00 
 1248      00 00 00 00 00 00 00 00 
 1249                             		.section	.bss.FirstSample.10705,"aw",@nobits
 1250                             		.balign 4
 1253                             	_FirstSample.10705:
 1254 0000 00 00 00 00             		.zero	4
 1255                             		.section	.bss.PreviousVref.10704,"aw",@nobits
 1256                             		.balign 2
 1259                             	_PreviousVref.10704:
 1260 0000 00 00                   		.zero	2
 1261                             		.section	.bss.GoodRef,"aw",@nobits
 1262                             		.balign 4
 1265                             	_GoodRef:
 1266 0000 00 00 00 00             		.zero	4
 1267                             		.section	.bss.RtnOutRange,"aw",@nobits
 1268                             		.balign 4
 1271                             	_RtnOutRange:
 1272 0000 00 00 00 00             		.zero	4
 1641                             	.Letext0:
 1642                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 1643                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/AdcConfig.h"
 1644                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers/IO_driver.h"
 1645                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers\\OCADC/OCADC_drv.h"
 1646                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Error/LIB_Error.h"
 1647                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_ZeroCrossing/LIB_ZeroCros
 1648                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_SecurityCheck/LIB_ClassBC
 1649                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary/callback.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Analog.c
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:7      .text.LIB_ADC_InitSync:00000000 _LIB_ADC_InitSync
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:12     .text.LIB_ADC_InitSync:00000000 L0
                            *COM*:00000001 _AnalogInputDisable
                            *COM*:00000001 _AnalogInputReady
                            *COM*:00000001 _ApplianceAnalogInputReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1235   .bss.AD_ChInputReady:00000000 _AD_ChInputReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1241   .bss.RefInput:00000000 _RefInput
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1247   .bss.AnalogInputParam:00000000 _AnalogInputParam
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:48     .text.LIB_ADC_RegisterADchannel:00000000 _LIB_ADC_RegisterADchannel
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:52     .text.LIB_ADC_RegisterADchannel:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:117    .text.LIB_ADC_UnregisterAllADch:00000000 _LIB_ADC_UnregisterAllADch
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:121    .text.LIB_ADC_UnregisterAllADch:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:131    .text.LIB_ADC_AreAnalogInputsReady:00000000 _LIB_ADC_AreAnalogInputsReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:134    .text.LIB_ADC_AreAnalogInputsReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:196    .text.LIB_ADC_IsAnalogReady:00000000 _LIB_ADC_IsAnalogReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:201    .text.LIB_ADC_IsAnalogReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:218    .text.LIB_ADC_IsApplAnalogReady:00000000 _LIB_ADC_IsApplAnalogReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:223    .text.LIB_ADC_IsApplAnalogReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:237    .text.LIB_ADC_ResetApplAnalogReady:00000000 _LIB_ADC_ResetApplAnalogReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:241    .text.LIB_ADC_ResetApplAnalogReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:254    .text.LIB_ADC_SetAnalogValue:00000000 _LIB_ADC_SetAnalogValue
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:259    .text.LIB_ADC_SetAnalogValue:00000000 L0
                            *COM*:00000010 _AnalogInput
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:268    .text.LIB_ADC_GetAnalogValue:00000000 _LIB_ADC_GetAnalogValue
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:273    .text.LIB_ADC_GetAnalogValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:284    .text.LIB_ADC_ADposVsIndex:00000000 _LIB_ADC_ADposVsIndex
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:289    .text.LIB_ADC_ADposVsIndex:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:311    .text.LIB_ADC_AnalogChRamPos:00000000 _LIB_ADC_AnalogChRamPos
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:316    .text.LIB_ADC_AnalogChRamPos:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:351    .text.LIB_ADC_ADChVsAnalogInputParamIndex:00000000 _LIB_ADC_ADChVsAnalogInputParamIndex
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:356    .text.LIB_ADC_ADChVsAnalogInputParamIndex:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:388    .text.LIB_ADC_IsNoAutoMeasureReady:00000000 _LIB_ADC_IsNoAutoMeasureReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:393    .text.LIB_ADC_IsNoAutoMeasureReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:413    .text.LIB_ADC_AnalogInputParamIndexVsPos:00000000 _LIB_ADC_AnalogInputParamIndexVsPos
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:418    .text.LIB_ADC_AnalogInputParamIndexVsPos:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:450    .text.LIB_ADC_IsNoAutoMeasureForChInPosReady:00000000 _LIB_ADC_IsNoAutoMeasureForChInPosReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:455    .text.LIB_ADC_IsNoAutoMeasureForChInPosReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:475    .text.LIB_ADC_ResetAnalogMeasure:00000000 _LIB_ADC_ResetAnalogMeasure
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:480    .text.LIB_ADC_ResetAnalogMeasure:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:499    .text.LIB_ADC_InitMeasureForChInPos:00000000 _LIB_ADC_InitMeasureForChInPos
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:503    .text.LIB_ADC_InitMeasureForChInPos:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:549    .text.LIB_ADC_InitMeasureForCh:00000000 _LIB_ADC_InitMeasureForCh
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:553    .text.LIB_ADC_InitMeasureForCh:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:598    .text.LIB_ADC_AvgFilter:00000000 _LIB_ADC_AvgFilter
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:601    .text.LIB_ADC_AvgFilter:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:725    .text.LIB_ADC_Conv_F:00000000 _LIB_ADC_Conv_F
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:729    .text.LIB_ADC_Conv_F:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:913    .text.LIB_ADC_Manager:00000000 _LIB_ADC_Manager
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:916    .text.LIB_ADC_Manager:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:990    .text.LIB_ADC_ForceAutoRead:00000000 _LIB_ADC_ForceAutoRead
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:995    .text.LIB_ADC_ForceAutoRead:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1009   .text.LIB_ADC_CheckRef:00000000 _LIB_ADC_CheckRef
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1014   .text.LIB_ADC_CheckRef:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1253   .bss.FirstSample.10705:00000000 _FirstSample.10705
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1259   .bss.PreviousVref.10704:00000000 _PreviousVref.10704
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1265   .bss.GoodRef:00000000 _GoodRef
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1271   .bss.RtnOutRange:00000000 _RtnOutRange
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1081   .text.LIB_ADC_Is_Ref_Good:00000000 _LIB_ADC_Is_Ref_Good
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1085   .text.LIB_ADC_Is_Ref_Good:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1093   .text.LIB_ADC_Is_RTN_Out_Range:00000000 _LIB_ADC_Is_RTN_Out_Range
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1097   .text.LIB_ADC_Is_RTN_Out_Range:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1105   .text.LIB_ADC_VLineMeasure:00000000 _LIB_ADC_VLineMeasure
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1109   .text.LIB_ADC_VLineMeasure:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1195   .text.LIB_ADC_GetRefInput:00000000 _LIB_ADC_GetRefInput
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1199   .text.LIB_ADC_GetRefInput:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1207   .text.LIB_ADC_IsRefInputReady:00000000 _LIB_ADC_IsRefInputReady
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1211   .text.LIB_ADC_IsRefInputReady:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1219   .text.LIB_ADC_GetChCompPos:00000000 _LIB_ADC_GetChCompPos
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1223   .text.LIB_ADC_GetChCompPos:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1274   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:8      .text.LIB_ADC_InitSync:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:49     .text.LIB_ADC_RegisterADchannel:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:118    .text.LIB_ADC_UnregisterAllADch:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:132    .text.LIB_ADC_AreAnalogInputsReady:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:197    .text.LIB_ADC_IsAnalogReady:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:219    .text.LIB_ADC_IsApplAnalogReady:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:238    .text.LIB_ADC_ResetApplAnalogReady:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:255    .text.LIB_ADC_SetAnalogValue:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:269    .text.LIB_ADC_GetAnalogValue:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:285    .text.LIB_ADC_ADposVsIndex:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:312    .text.LIB_ADC_AnalogChRamPos:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:352    .text.LIB_ADC_ADChVsAnalogInputParamIndex:00000000 .LFB17
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:389    .text.LIB_ADC_IsNoAutoMeasureReady:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:414    .text.LIB_ADC_AnalogInputParamIndexVsPos:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:451    .text.LIB_ADC_IsNoAutoMeasureForChInPosReady:00000000 .LFB14
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:476    .text.LIB_ADC_ResetAnalogMeasure:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:500    .text.LIB_ADC_InitMeasureForChInPos:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:550    .text.LIB_ADC_InitMeasureForCh:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:599    .text.LIB_ADC_AvgFilter:00000000 .LFB28
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:726    .text.LIB_ADC_Conv_F:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:914    .text.LIB_ADC_Manager:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:991    .text.LIB_ADC_ForceAutoRead:00000000 .LFB20
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1010   .text.LIB_ADC_CheckRef:00000000 .LFB21
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1082   .text.LIB_ADC_Is_Ref_Good:00000000 .LFB22
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1094   .text.LIB_ADC_Is_RTN_Out_Range:00000000 .LFB23
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1106   .text.LIB_ADC_VLineMeasure:00000000 .LFB24
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1196   .text.LIB_ADC_GetRefInput:00000000 .LFB25
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1208   .text.LIB_ADC_IsRefInputReady:00000000 .LFB26
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1220   .text.LIB_ADC_GetChCompPos:00000000 .LFB27
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:3594   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5479   .debug_str:000004e9 .LASF218
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5743   .debug_str:0000104c .LASF219
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5291   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5353   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5703   .debug_str:00000e71 .LASF0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5395   .debug_str:00000196 .LASF1
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5657   .debug_str:00000c62 .LASF2
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5449   .debug_str:000003a7 .LASF4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5527   .debug_str:0000071e .LASF3
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5689   .debug_str:00000de5 .LASF5
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5515   .debug_str:000006b9 .LASF6
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5645   .debug_str:00000c05 .LASF7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5401   .debug_str:000001b5 .LASF8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5421   .debug_str:0000025b .LASF9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5757   .debug_str:00001116 .LASF10
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5647   .debug_str:00000c0d .LASF11
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5423   .debug_str:00000269 .LASF12
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5653   .debug_str:00000c3c .LASF13
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5429   .debug_str:000002aa .LASF14
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5581   .debug_str:00000945 .LASF15
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5697   .debug_str:00000e46 .LASF16
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5405   .debug_str:000001d9 .LASF17
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5543   .debug_str:000007cf .LASF18
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5363   .debug_str:0000004b .LASF19
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5403   .debug_str:000001cc .LASF20
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5789   .debug_str:00001273 .LASF21
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5731   .debug_str:00000fda .LASF22
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5409   .debug_str:000001f3 .LASF23
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5741   .debug_str:0000103d .LASF24
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5683   .debug_str:00000dad .LASF25
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5685   .debug_str:00000dc0 .LASF26
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5381   .debug_str:00000116 .LASF27
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5383   .debug_str:00000129 .LASF28
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5765   .debug_str:00001166 .LASF29
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5477   .debug_str:000004d5 .LASF30
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5625   .debug_str:00000b1a .LASF31
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5627   .debug_str:00000b2f .LASF32
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5545   .debug_str:000007d8 .LASF33
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5497   .debug_str:000005c9 .LASF34
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5671   .debug_str:00000d0c .LASF35
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5603   .debug_str:00000a2a .LASF36
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5723   .debug_str:00000f5f .LASF37
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5555   .debug_str:00000846 .LASF38
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5711   .debug_str:00000eb9 .LASF39
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5677   .debug_str:00000d5e .LASF40
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5667   .debug_str:00000cc5 .LASF41
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5483   .debug_str:0000052b .LASF42
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5485   .debug_str:00000542 .LASF43
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5793   .debug_str:0000129a .LASF44
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5489   .debug_str:0000055f .LASF45
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5491   .debug_str:00000576 .LASF46
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5493   .debug_str:0000058d .LASF47
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5799   .debug_str:000012e5 .LASF48
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5355   .debug_str:00000000 .LASF49
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5579   .debug_str:0000092d .LASF50
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5529   .debug_str:00000731 .LASF51
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5583   .debug_str:0000094e .LASF52
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5585   .debug_str:00000966 .LASF53
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5785   .debug_str:00001243 .LASF54
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5787   .debug_str:0000125b .LASF55
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5791   .debug_str:00001282 .LASF56
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5593   .debug_str:000009b3 .LASF57
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5531   .debug_str:00000749 .LASF58
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5533   .debug_str:00000762 .LASF59
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5535   .debug_str:0000077b .LASF60
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5537   .debug_str:00000794 .LASF61
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5539   .debug_str:000007ad .LASF62
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5795   .debug_str:000012b1 .LASF63
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5613   .debug_str:00000ab9 .LASF64
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5615   .debug_str:00000ad2 .LASF65
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5631   .debug_str:00000b5e .LASF66
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5729   .debug_str:00000fb5 .LASF67
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5781   .debug_str:00001210 .LASF68
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5565   .debug_str:000008b1 .LASF69
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5375   .debug_str:000000e1 .LASF70
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5669   .debug_str:00000cf9 .LASF71
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5797   .debug_str:000012d5 .LASF72
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5511   .debug_str:0000069f .LASF73
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5501   .debug_str:0000062a .LASF74
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5733   .debug_str:00000fea .LASF75
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5481   .debug_str:0000050f .LASF76
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5467   .debug_str:0000045b .LASF77
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5495   .debug_str:000005a4 .LASF78
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5451   .debug_str:000003b0 .LASF79
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5605   .debug_str:00000a5e .LASF80
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5523   .debug_str:000006ed .LASF81
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5471   .debug_str:0000048f .LASF82
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5745   .debug_str:00001097 .LASF83
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5453   .debug_str:000003cc .LASF84
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5777   .debug_str:000011c1 .LASF85
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5499   .debug_str:00000605 .LASF86
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5393   .debug_str:00000170 .LASF87
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5447   .debug_str:00000383 .LASF88
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5779   .debug_str:000011ec .LASF89
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5595   .debug_str:000009cb .LASF90
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5589   .debug_str:0000098a .LASF91
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5749   .debug_str:000010bd .LASF92
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5435   .debug_str:000002de .LASF93
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5503   .debug_str:00000647 .LASF94
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5427   .debug_str:00000287 .LASF95
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5713   .debug_str:00000eee .LASF96
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5609   .debug_str:00000a82 .LASF97
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5643   .debug_str:00000bd7 .LASF98
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5715   .debug_str:00000f1d .LASF99
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5413   .debug_str:00000207 .LASF100
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5367   .debug_str:00000078 .LASF101
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5577   .debug_str:00000912 .LASF102
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5759   .debug_str:0000111e .LASF103
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5441   .debug_str:0000033a .LASF104
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5437   .debug_str:000002ff .LASF105
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5365   .debug_str:00000059 .LASF106
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5655   .debug_str:00000c44 .LASF107
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5563   .debug_str:00000896 .LASF108
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5735   .debug_str:00001004 .LASF109
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5699   .debug_str:00000e4b .LASF110
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5753   .debug_str:000010f6 .LASF111
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5707   .debug_str:00000e86 .LASF112
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5389   .debug_str:00000152 .LASF113
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5599   .debug_str:00000a04 .LASF114
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5463   .debug_str:0000042a .LASF115
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5721   .debug_str:00000f54 .LASF116
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5415   .debug_str:00000238 .LASF117
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5567   .debug_str:000008c6 .LASF118
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5461   .debug_str:00000424 .LASF119
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5717   .debug_str:00000f48 .LASF120
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5559   .debug_str:00000885 .LASF121
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5391   .debug_str:0000016b .LASF122
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5737   .debug_str:00001021 .LASF123
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5739   .debug_str:00001029 .LASF220
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5425   .debug_str:00000275 .LASF124
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5775   .debug_str:000011b6 .LASF133
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5651   .debug_str:00000c2b .LASF125
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5675   .debug_str:00000d56 .LASF126
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5455   .debug_str:000003ea .LASF127
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5701   .debug_str:00000e60 .LASF128
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5591   .debug_str:000009a4 .LASF129
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5399   .debug_str:000001a6 .LASF130
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5691   .debug_str:00000dee .LASF131
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5557   .debug_str:0000087c .LASF132
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5569   .debug_str:000008cf .LASF134
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5433   .debug_str:000002d5 .LASF135
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5719   .debug_str:00000f4e .LASF136
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5571   .debug_str:000008da .LASF137
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5541   .debug_str:000007c6 .LASF138
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5617   .debug_str:00000aeb .LASF139
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5387   .debug_str:00000149 .LASF140
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5519   .debug_str:000006d6 .LASF141
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5639   .debug_str:00000bc0 .LASF142
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5681   .debug_str:00000da4 .LASF143
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5505   .debug_str:00000669 .LASF144
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5619   .debug_str:00000af6 .LASF145
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5465   .debug_str:00000444 .LASF210
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5487   .debug_str:00000559 .LASF146
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5459   .debug_str:00000413 .LASF147
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:43     .text.LIB_ADC_InitSync:0000004e .LFE0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:42     .text.LIB_ADC_InitSync:0000004e .LVL1
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5629   .debug_str:00000b44 .LASF148
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:112    .text.LIB_ADC_RegisterADchannel:0000005f .LFE1
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4425   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4438   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5607   .debug_str:00000a78 .LASF149
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4467   .debug_loc:00000065 .LLST2
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5573   .debug_str:000008e2 .LASF150
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4496   .debug_loc:000000aa .LLST3
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5663   .debug_str:00000c97 .LASF151
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4514   .debug_loc:000000d6 .LLST4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:91     .text.LIB_ADC_RegisterADchannel:00000041 .LVL8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5469   .debug_str:00000475 .LASF152
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:126    .text.LIB_ADC_UnregisterAllADch:0000000e .LFE2
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:125    .text.LIB_ADC_UnregisterAllADch:0000000e .LVL11
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5633   .debug_str:00000b7e .LASF154
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:191    .text.LIB_ADC_AreAnalogInputsReady:0000005b .LFE5
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4525   .debug_loc:000000f4 .LLST5
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4538   .debug_loc:00000114 .LLST6
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5379   .debug_str:0000010f .LASF153
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4546   .debug_loc:00000128 .LLST7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5551   .debug_str:00000827 .LASF155
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:213    .text.LIB_ADC_IsAnalogReady:0000001c .LFE6
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4558   .debug_loc:00000147 .LLST8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5475   .debug_str:000004bb .LASF156
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:232    .text.LIB_ADC_IsApplAnalogReady:00000012 .LFE7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4572   .debug_loc:00000168 .LLST9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5445   .debug_str:00000366 .LASF157
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:249    .text.LIB_ADC_ResetApplAnalogReady:00000010 .LFE8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4586   .debug_loc:00000189 .LLST10
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:263    .text.LIB_ADC_SetAnalogValue:0000000c .LFE9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5369   .debug_str:000000a6 .LASF158
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:279    .text.LIB_ADC_GetAnalogValue:0000000c .LFE10
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4599   .debug_loc:000001a9 .LLST11
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5361   .debug_str:00000036 .LASF159
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:306    .text.LIB_ADC_ADposVsIndex:00000017 .LFE15
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5397   .debug_str:0000019f .LASF160
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4613   .debug_loc:000001ca .LLST12
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5457   .debug_str:000003fc .LASF161
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:346    .text.LIB_ADC_AnalogChRamPos:00000023 .LFE16
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4627   .debug_loc:000001eb .LLST13
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4641   .debug_loc:0000020c .LLST14
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5431   .debug_str:000002b1 .LASF162
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:383    .text.LIB_ADC_ADChVsAnalogInputParamIndex:00000021 .LFE17
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4649   .debug_loc:00000220 .LLST15
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4663   .debug_loc:00000241 .LLST16
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5693   .debug_str:00000e02 .LASF163
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:408    .text.LIB_ADC_IsNoAutoMeasureReady:00000020 .LFE12
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4671   .debug_loc:00000255 .LLST17
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4685   .debug_loc:00000276 .LLST18
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:394    .text.LIB_ADC_IsNoAutoMeasureReady:00000004 .LVL33
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5439   .debug_str:00000317 .LASF164
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:445    .text.LIB_ADC_AnalogInputParamIndexVsPos:00000021 .LFE18
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4692   .debug_loc:00000289 .LLST19
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4706   .debug_loc:000002aa .LLST20
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5695   .debug_str:00000e1f .LASF165
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:470    .text.LIB_ADC_IsNoAutoMeasureForChInPosReady:00000020 .LFE14
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4714   .debug_loc:000002be .LLST21
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4728   .debug_loc:000002df .LLST22
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:456    .text.LIB_ADC_IsNoAutoMeasureForChInPosReady:00000004 .LVL39
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5371   .debug_str:000000bd .LASF166
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:494    .text.LIB_ADC_ResetAnalogMeasure:00000017 .LFE19
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4735   .debug_loc:000002f2 .LLST23
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5575   .debug_str:000008f4 .LASF167
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:544    .text.LIB_ADC_InitMeasureForChInPos:0000003d .LFE13
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4749   .debug_loc:00000313 .LLST24
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4762   .debug_loc:00000333 .LLST25
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4776   .debug_loc:00000354 .LLST26
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4783   .debug_loc:00000367 .LLST27
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5705   .debug_str:00000e7e .LASF168
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4790   .debug_loc:0000037a .LLST28
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:507    .text.LIB_ADC_InitMeasureForChInPos:00000006 .LVL45
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:526    .text.LIB_ADC_InitMeasureForChInPos:00000023 .LVL48
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5767   .debug_str:00001179 .LASF169
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:594    .text.LIB_ADC_InitMeasureForCh:0000003d .LFE11
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4802   .debug_loc:00000392 .LLST29
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4815   .debug_loc:000003b2 .LLST30
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4829   .debug_loc:000003d3 .LLST31
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4836   .debug_loc:000003e6 .LLST32
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4843   .debug_loc:000003f9 .LLST33
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:557    .text.LIB_ADC_InitMeasureForCh:00000006 .LVL52
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:576    .text.LIB_ADC_InitMeasureForCh:00000023 .LVL55
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5635   .debug_str:00000b9b .LASF221
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:720    .text.LIB_ADC_AvgFilter:000000ed .LFE28
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4855   .debug_loc:00000411 .LLST34
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5513   .debug_str:000006ae .LASF170
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5549   .debug_str:0000081d .LASF171
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5623   .debug_str:00000b08 .LASF172
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5473   .debug_str:000004af .LASF173
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5419   .debug_str:00000253 .LASF174
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:655    .text.LIB_ADC_AvgFilter:0000006f .LBB4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:684    .text.LIB_ADC_AvgFilter:000000a9 .LBE4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5525   .debug_str:00000711 .LASF175
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5687   .debug_str:00000dd3 .LASF176
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5443   .debug_str:00000354 .LASF222
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5517   .debug_str:000006cb .LASF177
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5411   .debug_str:00000201 .LASF178
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5621   .debug_str:00000b01 .LASF179
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5507   .debug_str:0000067b .LASF180
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:908    .text.LIB_ADC_Conv_F:000000e7 .LFE4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4868   .debug_loc:00000431 .LLST35
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4886   .debug_loc:0000045d .LLST36
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5377   .debug_str:000000fc .LASF181
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4897   .debug_loc:0000047b .LLST37
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5725   .debug_str:00000f95 .LASF182
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4911   .debug_loc:0000049c .LLST38
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5611   .debug_str:00000ab1 .LASF183
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4929   .debug_loc:000004c8 .LLST39
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5359   .debug_str:0000002f .LASF184
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4954   .debug_loc:0000050a .LLST40
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5747   .debug_str:000010b1 .LASF185
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4970   .debug_loc:00000534 .LLST41
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5385   .debug_str:0000013c .LASF186
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:4982   .debug_loc:00000553 .LLST42
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:835    .text.LIB_ADC_Conv_F:0000008e .LBB7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:904    .text.LIB_ADC_Conv_F:000000e2 .LBE7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5067   .debug_loc:000005e5 .LLST43
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5074   .debug_loc:000005f8 .LLST44
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:836    .text.LIB_ADC_Conv_F:0000008e .LBB8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:903    .text.LIB_ADC_Conv_F:000000e2 .LBE8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5081   .debug_loc:0000060b .LLST45
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5088   .debug_loc:0000061e .LLST46
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5095   .debug_loc:00000631 .LLST47
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:887    .text.LIB_ADC_Conv_F:000000d7 .LVL79
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:762    .text.LIB_ADC_Conv_F:0000002d .LVL62
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:766    .text.LIB_ADC_Conv_F:00000033 .LVL63
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:802    .text.LIB_ADC_Conv_F:0000005b .LVL69
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:831    .text.LIB_ADC_Conv_F:0000008c .LVL74
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5649   .debug_str:00000c1b .LASF187
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:985    .text.LIB_ADC_Manager:00000068 .LFE3
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5102   .debug_loc:00000644 .LLST48
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5115   .debug_loc:00000664 .LLST49
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:951    .text.LIB_ADC_Manager:0000003d .LVL85
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:959    .text.LIB_ADC_Manager:00000048 .LVL86
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:972    .text.LIB_ADC_Manager:0000005a .LVL87
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:984    .text.LIB_ADC_Manager:00000068 .LVL88
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5547   .debug_str:00000807 .LASF188
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1004   .text.LIB_ADC_ForceAutoRead:00000016 .LFE20
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5123   .debug_loc:00000678 .LLST50
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5755   .debug_str:0000110f .LASF189
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5417   .debug_str:00000242 .LASF190
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1076   .text.LIB_ADC_CheckRef:00000078 .LFE21
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5727   .debug_str:00000fa8 .LASF191
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5561   .debug_str:0000088a .LASF192
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5137   .debug_loc:00000699 .LLST51
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5553   .debug_str:0000083d .LASF193
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5150   .debug_loc:000006ba .LLST52
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5761   .debug_str:0000113e .LASF194
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1088   .text.LIB_ADC_Is_Ref_Good:00000009 .LFE22
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5709   .debug_str:00000ea0 .LASF195
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1100   .text.LIB_ADC_Is_RTN_Out_Range:00000009 .LFE23
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5673   .debug_str:00000d41 .LASF196
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1190   .text.LIB_ADC_VLineMeasure:00000071 .LFE24
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5171   .debug_loc:000006f0 .LLST53
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5601   .debug_str:00000a1f .LASF197
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5189   .debug_loc:0000071c .LLST54
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5200   .debug_loc:0000073a .LLST55
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5207   .debug_loc:0000074d .LLST56
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1167   .text.LIB_ADC_VLineMeasure:0000005c .LBB9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1176   .text.LIB_ADC_VLineMeasure:00000066 .LBE9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5214   .debug_loc:00000760 .LLST57
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1128   .text.LIB_ADC_VLineMeasure:00000021 .LVL100
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1138   .text.LIB_ADC_VLineMeasure:0000002e .LVL102
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1160   .text.LIB_ADC_VLineMeasure:00000052 .LVL104
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5763   .debug_str:00001152 .LASF198
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1202   .text.LIB_ADC_GetRefInput:0000000a .LFE25
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5357   .debug_str:00000017 .LASF199
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1214   .text.LIB_ADC_IsRefInputReady:0000000a .LFE26
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5509   .debug_str:0000068a .LASF200
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1226   .text.LIB_ADC_GetChCompPos:0000000a .LFE27
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5641   .debug_str:00000bc7 .LASF201
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5521   .debug_str:000006dc .LASF202
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5373   .debug_str:000000d8 .LASF203
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5407   .debug_str:000001eb .LASF204
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5771   .debug_str:000011a0 .LASF205
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5637   .debug_str:00000bad .LASF206
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5659   .debug_str:00000c6c .LASF207
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5597   .debug_str:000009ea .LASF208
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5587   .debug_str:0000097e .LASF209
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5665   .debug_str:00000ca9 .LASF211
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5769   .debug_str:00001192 .LASF215
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5679   .debug_str:00000d93 .LASF212
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5783   .debug_str:00001235 .LASF213
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5661   .debug_str:00000c7d .LASF214
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5751   .debug_str:000010d4 .LASF216
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:5773   .debug_str:000011ac .LASF217
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:53     .text.LIB_ADC_RegisterADchannel:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:51     .text.LIB_ADC_RegisterADchannel:00000000 .LVL2
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:65     .text.LIB_ADC_RegisterADchannel:0000001b .LVL4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:93     .text.LIB_ADC_RegisterADchannel:00000043 .LVL9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:102    .text.LIB_ADC_RegisterADchannel:0000004d .LVL10
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:69     .text.LIB_ADC_RegisterADchannel:0000001f .LVL6
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:67     .text.LIB_ADC_RegisterADchannel:0000001d .LVL5
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:80     .text.LIB_ADC_RegisterADchannel:0000002d .LVL7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:62     .text.LIB_ADC_RegisterADchannel:00000019 .LVL3
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:135    .text.LIB_ADC_AreAnalogInputsReady:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:136    .text.LIB_ADC_AreAnalogInputsReady:00000002 .LVL12
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:147    .text.LIB_ADC_AreAnalogInputsReady:0000001c .LVL13
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:175    .text.LIB_ADC_AreAnalogInputsReady:0000004a .LVL14
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:186    .text.LIB_ADC_AreAnalogInputsReady:00000058 .LVL15
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:199    .text.LIB_ADC_IsAnalogReady:00000000 .LVL16
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:205    .text.LIB_ADC_IsAnalogReady:0000000c .LVL17
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:221    .text.LIB_ADC_IsApplAnalogReady:00000000 .LVL18
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:229    .text.LIB_ADC_IsApplAnalogReady:0000000f .LVL19
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:242    .text.LIB_ADC_ResetApplAnalogReady:00000002 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:271    .text.LIB_ADC_GetAnalogValue:00000000 .LVL22
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:277    .text.LIB_ADC_GetAnalogValue:0000000b .LVL23
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:287    .text.LIB_ADC_ADposVsIndex:00000000 .LVL24
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:294    .text.LIB_ADC_ADposVsIndex:00000008 .LVL25
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:314    .text.LIB_ADC_AnalogChRamPos:00000000 .LVL26
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:332    .text.LIB_ADC_AnalogChRamPos:00000015 .LVL28
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:319    .text.LIB_ADC_AnalogChRamPos:00000004 .LVL27
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:354    .text.LIB_ADC_ADChVsAnalogInputParamIndex:00000000 .LVL29
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:381    .text.LIB_ADC_ADChVsAnalogInputParamIndex:00000020 .LVL31
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:359    .text.LIB_ADC_ADChVsAnalogInputParamIndex:00000004 .LVL30
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:391    .text.LIB_ADC_IsNoAutoMeasureReady:00000000 .LVL32
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:400    .text.LIB_ADC_IsNoAutoMeasureReady:00000010 .LVL34
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:416    .text.LIB_ADC_AnalogInputParamIndexVsPos:00000000 .LVL35
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:443    .text.LIB_ADC_AnalogInputParamIndexVsPos:00000020 .LVL37
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:421    .text.LIB_ADC_AnalogInputParamIndexVsPos:00000004 .LVL36
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:453    .text.LIB_ADC_IsNoAutoMeasureForChInPosReady:00000000 .LVL38
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:462    .text.LIB_ADC_IsNoAutoMeasureForChInPosReady:00000010 .LVL40
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:478    .text.LIB_ADC_ResetAnalogMeasure:00000000 .LVL41
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:482    .text.LIB_ADC_ResetAnalogMeasure:00000004 .LVL42
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:504    .text.LIB_ADC_InitMeasureForChInPos:00000002 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:502    .text.LIB_ADC_InitMeasureForChInPos:00000000 .LVL44
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:515    .text.LIB_ADC_InitMeasureForChInPos:00000015 .LVL46
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:539    .text.LIB_ADC_InitMeasureForChInPos:00000039 .LVL50
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:519    .text.LIB_ADC_InitMeasureForChInPos:00000019 .LVL47
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:533    .text.LIB_ADC_InitMeasureForChInPos:00000032 .LVL49
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:554    .text.LIB_ADC_InitMeasureForCh:00000002 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:552    .text.LIB_ADC_InitMeasureForCh:00000000 .LVL51
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:565    .text.LIB_ADC_InitMeasureForCh:00000015 .LVL53
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:589    .text.LIB_ADC_InitMeasureForCh:00000039 .LVL57
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:569    .text.LIB_ADC_InitMeasureForCh:00000019 .LVL54
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:583    .text.LIB_ADC_InitMeasureForCh:00000032 .LVL56
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:602    .text.LIB_ADC_AvgFilter:00000002 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:730    .text.LIB_ADC_Conv_F:00000002 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:732    .text.LIB_ADC_Conv_F:00000004 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:728    .text.LIB_ADC_Conv_F:00000000 .LVL58
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:755    .text.LIB_ADC_Conv_F:00000023 .LVL61
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:810    .text.LIB_ADC_Conv_F:00000063 .LVL71
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:778    .text.LIB_ADC_Conv_F:0000003e .LVL65
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:795    .text.LIB_ADC_Conv_F:00000053 .LVL67
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:797    .text.LIB_ADC_Conv_F:00000055 .LVL68
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:805    .text.LIB_ADC_Conv_F:0000005f .LVL70
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:815    .text.LIB_ADC_Conv_F:0000006f .LVL72
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:822    .text.LIB_ADC_Conv_F:0000007c .LVL73
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:744    .text.LIB_ADC_Conv_F:00000019 .LVL60
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:792    .text.LIB_ADC_Conv_F:0000004e .LVL66
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:845    .text.LIB_ADC_Conv_F:0000009a .LVL77
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:889    .text.LIB_ADC_Conv_F:000000d8 .LVL80
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:895    .text.LIB_ADC_Conv_F:000000de .LVL81
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:834    .text.LIB_ADC_Conv_F:0000008e .LVL75
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:900    .text.LIB_ADC_Conv_F:000000e1 .LVL82
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:841    .text.LIB_ADC_Conv_F:00000096 .LVL76
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:849    .text.LIB_ADC_Conv_F:000000a1 .LVL78
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:917    .text.LIB_ADC_Manager:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:918    .text.LIB_ADC_Manager:00000002 .LVL83
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:924    .text.LIB_ADC_Manager:00000010 .LVL84
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:993    .text.LIB_ADC_ForceAutoRead:00000000 .LVL89
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:997    .text.LIB_ADC_ForceAutoRead:00000004 .LVL90
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1033   .text.LIB_ADC_CheckRef:00000030 .LVL92
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1044   .text.LIB_ADC_CheckRef:0000004d .LVL93
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1054   .text.LIB_ADC_CheckRef:00000059 .LVL94
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1012   .text.LIB_ADC_CheckRef:00000000 .LVL91
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1060   .text.LIB_ADC_CheckRef:0000005c .LVL95
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1069   .text.LIB_ADC_CheckRef:00000075 .LVL96
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1073   .text.LIB_ADC_CheckRef:00000077 .LVL97
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1110   .text.LIB_ADC_VLineMeasure:00000002 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1112   .text.LIB_ADC_VLineMeasure:00000004 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1108   .text.LIB_ADC_VLineMeasure:00000000 .LVL98
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1116   .text.LIB_ADC_VLineMeasure:00000008 .LVL99
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1181   .text.LIB_ADC_VLineMeasure:0000006a .LVL107
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1130   .text.LIB_ADC_VLineMeasure:00000023 .LVL101
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1157   .text.LIB_ADC_VLineMeasure:0000004c .LVL103
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1166   .text.LIB_ADC_VLineMeasure:0000005c .LVL105
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1172   .text.LIB_ADC_VLineMeasure:00000065 .LVL106
C:\Users\Andrea\AppData\Local\Temp\cce0P6jL.s:1651   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_LIB_ZC_SetLineVoltageParams
_ADC_CheckInit
_LIB_Error_Warning_Handler
_OCADC_SampleSync
_OCADC_GetSync
_CBF_AnalogInputIntManager_Polling
_ADC_Check
