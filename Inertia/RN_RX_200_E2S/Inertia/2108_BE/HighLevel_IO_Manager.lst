   1                             		.file	"HighLevel_IO_Manager.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.set_limit4_state5,"ax",@progbits
   6                             	_set_limit4_state5:
   7                             	.LFB21:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control/HighLevel_IO_Manager.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** ** **************************************************************************
   3:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** ** **************************************************************************
   4:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */ 
   5:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
   6:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
   7:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Gestisce elaborazioni su ingressi e uscite ad alto livello (applicazione).
   8:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Source file 
   9:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
  10:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \file    	HighLevel_IO_Manager.c
  11:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
  12:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version 	1.0.0
  13:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date    	09/02/2006
  14:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \authors	Simone Costantini - Valeria Catani - Lucio Bianchi
  15:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */ 
  16:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*
  17:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** ** **************************************************************************
  18:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** ** **************************************************************************
  19:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
  20:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  21:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*
  22:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Copyright (c) 2004-2006, Indesit Company, EDT.
  23:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Tutti i diritti sono riservati. All rights reserved.
  24:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
  25:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  26:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Old Versions
  27:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version
  28:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date
  29:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author
  30:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
  31:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  32:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ******** */
  33:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Includes */
  34:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ******** */
  35:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "CstmHeaders.h"
  36:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "AnalogExp.h"
  37:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "InputManagerExp.h"
  38:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "ExternalOutputManagerExp.h"
  39:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "DigitalInputsExp.h"
  40:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "LIB_ZeroCrossingExp.h"
  41:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  42:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
  43:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "ExternalOutputManagerExp.h"
  44:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif	/* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT */
  45:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "BusCommPltf_cfg.h"
  46:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "PM_ConsistencyExp.h"
  47:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "PM_TurbiditySensor.h"
  48:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #include "PM_PulseCounterExp.h"
  49:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  50:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  51:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ****************** */
  52:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Defines and Macros */
  53:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ****************** */
  54:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  55:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Dimensione in byte dei dati relativi ad un carico nella Output Map */
  56:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #define HIO_LOAD_DATA_SIZE_B						8
  57:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  58:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifndef _ENABLE_TOUT_BULK_OFF_IN_SETTING_
  59:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Delay da attendere per spegnere il DSP dopo lo spegnimento della BULK (x 100 msec) */
  60:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #define TOUT_BULK_OFF	30
  61:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /* _ENABLE_TOUT_BULK_OFF_IN_SETTING_ */
  62:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  63:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* *************************** */
  64:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Typedef, Structs and Unions */
  65:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* *************************** */
  66:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  67:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* **************************** */
  68:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Prototype of local functions */
  69:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* **************************** */
  70:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_trbProcessSmpl(uint16_t sample, uint8_t* p_samples);
  71:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GetSparklingAidCriterionValue(GIMap_Struct const* pGI, uint16_t* cr_val);
  72:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GIConv(GIMap_Struct const* pGI, uint16_t *pResult);
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GIScaleConv(GIMap_Struct const* pGI, uint16_t *pResult);
  74:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GIGetCriterionDigitalTable(GIMap_Struct const* pGI, Loader_Struct *pTable);
  75:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_BulkAndKillDSP_Mgmt(void);
  76:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
  77:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_Check_VS_Valid(uint8_t aux_index);
  78:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_Check_VS_Stability(void);
  79:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** static void set_limit4_state5(uint16_t target);
  80:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** static void HIO_State5_SpeedControl(void);
  81:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
  82:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  83:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ****************** */
  84:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Exported variables */
  85:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ****************** */
  86:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  87:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* **************** */
  88:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Global variables */
  89:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* **************** */
  90:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  91:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t CriterionOldState;
  92:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t CriterionFilter[GI_CRITERION_NUM];
  93:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
  94:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ******************* */
  95:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* External variables  */
  96:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ******************* */
  97:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ***************** */
  98:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Exported function */
  99:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ***************** */
 100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
 103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Gestisce le elaborazioni sui carichi ad alto livello e l'attivazione.
 104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
 106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			30/01/2008
 107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Valeria Catani, Roberto Fioravanti
 108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note	
 110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_loadsManagement(void)
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t i;
 115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t nLoads;
 116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** GIOM_LoadStruct load;
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** bool_t  setLoadCallEn;
 118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( Fan_Pos[LD_DRY_FAN_IND] != NO_LD_POS )
 120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* funzione per lo spunto iniziale delle ventole */
 122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Fan_GenericLoadMgmt() ;
 123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc_drain != 0 ) 
 126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Presente pompa lavaggio BLAC */
 128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		HIO_OverHeat_DrainPump_Control();
 129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Servir� una routine analoga anche per la pompa scarico MQ.*/
 131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}	
 132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc1 != 0 ) 
 136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/*uint8_t prova_speed[2]={87,76};*/
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Presente pompa lavaggio BLAC */
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (( uP_Load_Data.pump_act)&&(uPDoorStatus != UP_DOOR_WAIT) )
 140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* uP carica cambia la velocità della pompa lavaggio*/
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{		
 142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],OFFS_B(uPLoad_setting_data.Data, 2)*PUMP_CTRL_BL
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], OFFS_B(uPLoad_setting_data.Data,3)*PUMP_CTRL_BLD
 144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (( dirty_foam_Data.reduc_speed)&&(uPDoorStatus != UP_DOOR_WAIT))
 147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{/* riduzione della velocit� pompa lavaggio per presenza di sporco*/
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			uint16_t speed;
 149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			speed=((GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP])/PUMP_CTRL_BLDC_SPEED_MUL)* OFFS_B(dirty
 150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],(speed*PUMP_CTRL_BLDC_SPEED_MUL) );
 151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (HWC_Flags.bit.vs_wash_presence != 0) 
 154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
 155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			HIO_State5_SpeedControl();
 156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
 158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Servirà una routine analoga anche per la pompa scarico MQ.*/
 159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}	
 160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if((HWC_Flags.bit.bldc_drain != 0) && (HWC_Flags.bit.bldc1 != 0))
 162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{ 
 163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	  
 164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     /* LR 25/05/2011: controllo per evitare che entrambe le pompe siano accese */
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if((GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP])!=0)||(DrainSftReq_New.b == LOAD_ON))
 166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{ /* LR 25/5/2011: se la pompa scarico è attiva, la pompa lavaggio s'adda stuta' */
 167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (HWC_Flags.bit.vs_wash_presence != 0) 
 169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{/* l'algoritmo di riduzione della velocità deve essere azzerato  quando si attiva la pompa sca
 170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				State5.max_speed_value =0xFFFF;
 171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
 173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( DrainSftReq_New.b == LOAD_ON)
 175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if( (HWC_Flags.bit.bldc_drain != 0) && (HWC_Flags.bit.vs_wash_presence != 0)  && (HWC_Flags.bit
 187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		 
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if((GET_BLDC_SPEED(BLDC_PumpReq_Old[DRAIN_BLDC_PUMP])==0) && (GET_BLDC_SPEED(BLDC_PumpReq_New[DRA
 190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{ /* qui impostare il timer per il calcolo dell'attivazione della pompa drain */
 191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		 	SETBIT(Flags_2, FLAG2_VIRTUALSENSOR_TEST_STARTED_FLAG);			 
 193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			 
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else
 196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
 197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP])==0 )
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				CLRBIT(Flags_2, FLAG2_VIRTUALSENSOR_TEST_STARTED_FLAG);
 201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}	
 204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT */
 210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( ( HWC_Flags.bit.bldc1 != 0 ) || ( HWC_Flags.bit.bldc_drain != 0 ) )
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		&&
 213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	 	( RegDev_Pos[LD_KILL_DSP_REG_IND] != NO_LD_POS )
 214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	  )
 215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	{
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Presenti pompa lavaggio e/o pompa scarico BLAC e DSP */
 217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
 218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Deve stare dopo HIO_OverPower_Pump_Control() per avere la velocità aggiornata
 219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		della pompa (più che altro per pulizia, in realtà guarda solo se è accesa o
 220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		spenta, e questo non viene modificato da HIO_OverPower_Pump_Control().
 221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
 222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		HIO_BulkAndKillDSP_Mgmt();
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	if(HWC_Flags.bit.vs_wash_presence)
 226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	{
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   		HIO_Check_VS_Stability();
 228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	}	
 229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
 230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Numero di carichi */ 
 231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	/* DEBUG: da sistemare la #define "IO_MANAGER_LOAD_TABLE_ITEM_SIZE" */
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	nLoads = ( Tab_OutputData.DataLenght /4 /*IO_MANAGER_LOAD_TABLE_ITEM_SIZE*/); /* lunghezze espress
 234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Loop pilotaggio carichi */
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	for ( i = 0; i < nLoads; i++ ) 	
 237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{		  
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Default: abilitata richiesta aggiornamento stato carico */
 239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		setLoadCallEn = TRUE;
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT				
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( Pump_Pos[LD_WASH_PUMP_IND] == i )
 242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
 243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* QI 06.11.09 gestione flag nuovo BLDC */
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if(( HWC_Flags.bit.bldc )&&(!HWC_Flags.bit.bldc1)) 
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* Flag non necessario in DEA 700 */
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_FLAG(BLDC_PumpReq_New[WASH_BLDC_PUMP].data,NEW_BLDC_ENABLE_FLAG_POS );
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}	
 250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( HWC_Flags.bit.bldc1 )
 253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if (SWTC_IsExpired((SWTC_CountersType)SFT_FILTER_VS56_STATE_W) )
 255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{ 					
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					SET_BLDC_FLAG((BLDC_PumpReq_New[WASH_BLDC_PUMP].data+1),NEW_BLDC_ENABLE_FLAG_POS );
 257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 																				
 258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef _STATISTICS_ON_
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( !SWTC_IsStopped((SWTC_CountersType )SFT_FILTER_VS56_STATE_W) )
 260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{/* transizione brillantante presente -> assente*/
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						IncWordWithCheck(&MachineStatistics.globalStats.unblockvirtualsensorStateW);
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						IncByteWithCheck(&MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].reset_VS_StateW);
 263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}	
 264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif	
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)SWTC_Stop((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
 266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								
 267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						
 268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}	
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( (LONIBBLE(FltBLDCUnblock.pumpandspeed ) ==WASH_BLDC_PUMP)&& TESTBIT(FltBLDCUnblock.flags,P
 270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					SET_BLDC_FLAG((BLDC_PumpReq_New[WASH_BLDC_PUMP].data+1),NEW_BLDC_STALLO_FLAG_POS );
 272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}		
 274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /*#if (VIRTUAL_SENSOR_ENABLE == 1)*/
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			BLDC_PumpReq_New[WASH_BLDC_PUMP].loadID = i;
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			load = BLDC_PumpReq_New[WASH_BLDC_PUMP];
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			BLDC_PumpReq_Old[WASH_BLDC_PUMP] = BLDC_PumpReq_New[WASH_BLDC_PUMP];      /* salvataggio stato p
 278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{	        
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( i == Pump_Pos[LD_DRAIN_PUMP_IND] )
 284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{ /* drain pump */
 285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                 if(HWC_Flags.bit.bldc_drain != 0)
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					BLDC_PumpReq_New[DRAIN_BLDC_PUMP].loadID = i;
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( (LONIBBLE(FltBLDCUnblock.pumpandspeed )==DRAIN_BLDC_PUMP)&& TESTBIT(FltBLDCUnblock.flags,
 290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						SET_BLDC_FLAG((BLDC_PumpReq_New[DRAIN_BLDC_PUMP].data+1),NEW_BLDC_STALLO_FLAG_POS );
 292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}
 293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					load = BLDC_PumpReq_New[DRAIN_BLDC_PUMP];
 295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					BLDC_PumpReq_Old[DRAIN_BLDC_PUMP] = BLDC_PumpReq_New[DRAIN_BLDC_PUMP];      /* salvataggio sta
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
 298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				else
 299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
 300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				    load.loadID = i;
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					load.loadParam.b = LOAD_OFF;
 302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* loads req new -- file di setting, DrainSftReq_New è per la sicurezza */
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( (LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON) || (DrainSftReq_New.b == LOAD_ON
 304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						load.loadParam.b = LOAD_ON;  
 306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			else
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				load.loadID = i;
 313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    load.loadParam = LoadsReq_New[i];	  
 314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #else /*CONFIG_LIB_EXTERNAL_BOARD_SUPPORT*/			        
 318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		load.loadID = i;
 319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		load.loadParam = LoadsReq_New[i];	  
 320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /*CONFIG_LIB_EXTERNAL_BOARD_SUPPORT */
 321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	    
 322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( i == EV_Pos[LD_WASH_EV_IND] )
 323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{ /* EV wash */
 324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			load.loadParam.b = EV_OFF;
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( (LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b == EV_ON) || (LoadEVFltReq_New.b == EV_ON)  )   
 328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				load.loadParam.b = EV_ON;   
 330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( i == Pump_Pos[LD_DRAIN_PUMP_IND] )
 334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{ /* drain pump */
 335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			load.loadParam.b = LOAD_OFF;
 337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( (LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON) || (DrainSftReq_New.b == LOAD_ON) 
 339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				load.loadParam.b = LOAD_ON;   
 341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* QI 10.12.09 */			
 346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( (HWC_Flags.bit.bldc1) && ( i == RegDev_Pos[LD_KILL_DSP_REG_IND] ) )
 349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (load.loadParam.b == LOAD_OFF) 
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				uint8_t cnt;
 353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				for(cnt=0; cnt< NR_OF_BLDC_PUMPS; cnt++)
 355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		      		memset(&BLDC_Pump_InfoBuffer[cnt][0], 0, IOM_EXTERNAL_0_INFOBUFFER_SIZE);
 357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
 358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT */			
 362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( ( Alt_Pos == i ) && ( LoadsReq_Old[i].b == LoadsReq_New[i].b ) )
 364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
 365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* per l'alternato si filtrano i comandi */
 366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			setLoadCallEn = FALSE;
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( setLoadCallEn )
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{	        
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)LIB_IOM_GIOM_SetLoad(&load);
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_Old[i] = LoadsReq_New[i];	/* salvataggio stato carichi */
 375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}		
 376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
 380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Aggiorna lo stato del buffer contenente i dati
 381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** del motore 3fase ad uso dell'interprete
 382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
 384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			02/07/2008
 385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Roberto Fioavanti
 386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
 389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_updateEngineData(void)
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {/* EA commentato*/
 391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( ( HWC_Flags.bit.bldc ) || ( HWC_Flags.bit.bldc1 ) )
 393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		UseExternalInfo();
 395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		memcpy(ExtMotor_DataBuffer, ExternalGlobalData_0, IOM_EXTERNAL_0_GLOBALDATABUFFER_SIZE);
 396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		UnuseExternalInfo();
 397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 399:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /*end CONFIG_LIB_EXTERNAL_BOARD_SUPPORT*/
 400:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
 404:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Azzera lo stato attuale dei carichi
 405:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
 407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			17/09/2013
 408:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Andrea Emili
 409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_loadsReset(void)
 412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** L_PARAM loadsReqNew_tmp;
 414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.alternate != 0 )
 417:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		loadsReqNew_tmp = LoadsReq_New[Alt_Pos];
 419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 420:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
 422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* reset array di stato carichi */
 423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	memset(&LoadsReq_New[0], 0, sizeof(LoadsReq_New));
 424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 425:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.alternate != 0 )
 427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 428:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* lo stato dell'alternato non va resettato perchè contiene la posizione del motorino */
 430:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*lint -e644
 431:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Se HWC_Flags.bit.alternate != 0 loadsReqNew_tmp è inizializzato
 432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_New[Alt_Pos] = loadsReqNew_tmp;
 434:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*lint +e644*/
 435:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 437:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	uint8_t cnt;
 441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* reset stato pompe bldc */
 442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	for(cnt=0; cnt< NR_OF_BLDC_PUMPS; cnt++)
 444:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		memset(&BLDC_PumpReq_New[cnt], 0, sizeof(BLDC_PumpReq_New[0])); 
 446:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 448:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 449:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* reset stato richiesto per EV */	
 450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	LoadEVFltReq_New.b = 0;
 451:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 452:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* reset stato richiesto per Drain */	
 453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	DrainSftReq_New.b = 0;
 454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 455:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 456:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
 458:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Inizializza le variabili globali con posizione dei carichi in base alla Output Map
 459:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return S_OK se non ci sono errori di caricamento o nel contenuto dei dati, un codice d'errore altr
 461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 462:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
 463:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			30/01/2008
 464:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Valeria Catani
 465:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 466:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 468:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_ldPosInit(void)
 469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t i,aux;
 471:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Id_Struct *pId;
 472:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* Init var posizioni al default: NO_LD_POS */
 474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Pump_Pos[LD_WASH_PUMP_IND] = NO_LD_POS;
 475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Pump_Pos[LD_DRAIN_PUMP_IND] = NO_LD_POS;
 476:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Res_Pos[LD_WASH_RES_IND] = NO_LD_POS;
 477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Res_Pos[LD_DRY_RES_IND]  = NO_LD_POS;
 478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Res_Pos[LD_RESIN_RES_IND]  = NO_LD_POS;
 479:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	EV_Pos[LD_WASH_EV_IND] = NO_LD_POS;
 480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	EV_Pos[LD_RIG_EV_IND] = NO_LD_POS;
 481:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	EV_Pos[LD_7LITER_EV_IND] = NO_LD_POS;
 482:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Disp_Pos = NO_LD_POS;
 483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Alt_Pos = NO_LD_POS;
 484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Fan_Pos[LD_DRY_FAN_IND] = NO_LD_POS;
 485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Fan_Pos[LD_RESIN_FAN_IND] = NO_LD_POS;
 486:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Ozonator_Pos[LD_OZONATOR_IND]= NO_LD_POS;
 487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Ozonator_Pos[LD_AEROSOL_IND]= NO_LD_POS;
 488:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Lamp_Pos= NO_LD_POS;
 489:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 490:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	for (i=0; i<N_MAX_LD_REG_DEV; i++)
 491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		RegDev_Pos[i] = NO_LD_POS;		
 493:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 494:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 495:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 496:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* Init con posizioni dalla output map */
 497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	i = 0;
 498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	do
 499:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 501:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		pId =(Id_Struct *)((uint8_t *)(Tab_OutputData.Data + (HIO_LOAD_DATA_SIZE_B * i)));
 503:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		aux = pId->index;				
 505:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		switch (pId->type)
 507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
 508:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						
 509:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case(LD_PUMP_TYPE):
 510:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 511:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    Pump_Pos[aux] = i;
 512:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 513:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* LR: pregevoli colleghi, in data 13/05/2011 ho spostato qui le istruzioni seguenti, cos� da leg
 514:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 515:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             
 516:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 517:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 518:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT	
 519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             if ( (aux == LD_WASH_PUMP_IND)&&  ( HWC_Flags.bit.bldc || HWC_Flags.bit.bldc1 ))
 520:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             	/* qui bisogna aggiungere if( ( ( HWC_Flags.bit.bldc != 0 ) || ( HWC_Flags.bit.bldc1 !
 522:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				 dopo aver memorizzato le posizioni dei carichi configuro la "UART" ,WASH_PUMP */
 523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)LIB_IOM_External_New ( &BLDC_Pump_InfoBuffer[WASH_BLDC_PUMP][0], (uint8_t)IOM_EXTERNAL_0_
 524:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if((aux == LD_DRAIN_PUMP_IND)&&  ( HWC_Flags.bit.bldc_drain!=0) )
 526:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
 527:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* configurazione uart anche per questo, � ok???? */	
 528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    (void)LIB_IOM_External_New ( &BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][0], IOM_EXTERNAL_0_INFOB
 529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
 531:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 532:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case(LD_RES_TYPE):
 534:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Res_Pos[aux] = i;
 536:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 538:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 539:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case(LD_EV_TYPE):
 540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				EV_Pos[aux] = i;
 542:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 544:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 545:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case(LD_DISPENSER_TYPE):
 546:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 547:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Disp_Pos = i;
 548:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 549:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 550:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case(LD_ALT_ENGINE_TYPE):
 552:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 553:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Alt_Pos = i;
 554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 555:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 556:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case(LD_REGULATION_DEV_TYPE):
 558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				RegDev_Pos[aux] = i;
 560:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 561:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case ( LD_FAN_TYPE):
 563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 564:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Fan_Pos[aux] = i;
 565:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 566:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;	
 567:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		 
 568:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case(LD_LAMP_TYPE):
 569:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 570:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Lamp_Pos = i;
 571:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 573:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 575:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case (LD_DUMMY_TYPE):
 576:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			  
 577:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			  
 578:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 579:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case (LD_OZONE_TYPE):
 580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Ozonator_Pos[aux]=i;
 581:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			  
 582:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 583:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			default:
 584:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 585:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				return HIO_ERR_OUT_NOT_FOUND;
 586:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
 587:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/*break;*/
 588:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 589:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		i++;	/*campo dati per ogni carico = 8 byte*/
 591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	} while(i<(Tab_OutputData.DataLenght/4));/*IO_MANAGER_LOAD_TABLE_ITEM_SIZE));*/
 593:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 594:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
 595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return S_OK;
 596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 597:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**/
 598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 599:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
 600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Gestisce l'elaborazione sul criterio della presenza sale per
 601:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** avviare conteggio rigenere
 602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
 604:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			30/06/2008
 605:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Valeria Catani
 606:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \todo       -
 607:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_saltCriterionRegMgmt(void)
 609:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 610:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
 611:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if (HWC_Flags.bit.saltreed)
 612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{/* reed sale presente */
 613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( TESTBIT (GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) )!=0 )	
 615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{/* criterio sale valido */
 616:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( TESTBIT(GICriteria, GI_SALT_IND) == 0 )
 618:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{	/* stato attuale : sale assente */
 619:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 620:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* richiesto aggiornamento conteggio rigenere */
 621:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				NoSalt_Reg = TRUE; /* LO RIBADISCO SEMPRE */
 622:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 623:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( TESTBIT(GICriteriaOld, GI_SALT_IND) != 0)
 624:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
 625:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					/*
 626:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					transizione sale presente -> sale assente =>
 627:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					start conteggio rigenere
 628:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					*/
 629:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					uP_Regenerate_Data.nReg = 1;
 631:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 632:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
 633:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 634:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			else
 635:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{	/* stato attuale : sale presente */
 636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
 637:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( TESTBIT(GICriteriaOld, GI_SALT_IND) == 0 ) 
 638:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{	/*
 639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					transizione sale assente -> sale presente
 640:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					*/
 641:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 642:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					/* rigenera forzata */
 643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					uP_Regenerate_Data.forceReg_cnt = 1;
 645:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
 646:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				NoSalt_Reg = FALSE; 
 648:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
 649:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 650:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/*GICriteriaOld = GICriteria;*/
 651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
 652:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* else WAIT for valid*/
 653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
 654:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 655:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 656:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
 657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Gestisce l'aggiornamento della variabile GICriteriaOld
 658:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 659:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
 660:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			09/07/2008
 661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Valeria Catani
 662:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \todo       -
 663:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 664:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 665:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_gICriteriaOld_Update(void)
 666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 667:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
 668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   GICriteriaOld = GICriteria; /*FATTO IN OGNI CASO O CONTROLLANDO GIVALID???*/
 669:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*
 671:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Gestisce l'aggiornamento e le elaborazioni sugli ingressi ad alto livello
 672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** (si basa sul presupposto che i dati nel setting vengono ordinati per ID (categoria ed indice))
 673:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
 674:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
 675:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			09/02/2008
 676:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Roberto Fioravanti
 677:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \todo       -
 678:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
 679:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_inputManagement(void)
 680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 681:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** GIMap_Struct *pGenInput=(GIMap_Struct *)Tab_GIData.Data;
 682:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint16_t GI_tmp; 
 683:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t aux_index, fault;
 684:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* GI_PRESS_SENSOR_LEVEL_BIT nn può essere resettato perché va testato in un criterio (si andreb
 686:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	GIValid &= (GI_PRESS_SENSOR_LEVEL_MSK|GI_TURB_SENSOR_MSK);
 687:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
 688:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	FltGICriteria = 0;
 689:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 690:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	while((uint8_t*)pGenInput<Tab_GIData.Data+Tab_GIData.DataLenght*2)
 691:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
 692:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		aux_index = pGenInput->id.s.index;
 694:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						
 695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		switch (pGenInput->id.s.type)
 696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
 697:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 698:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case GI_PROBE_TYPE:
 699:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 700:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				FltGITemp = 0;
 701:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								
 702:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( HIO_GIConv(pGenInput,&GI_tmp) == S_OK )
 703:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{	
 704:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( ((uint8_t)(GI_tmp) != PROBE_UNDEF_CC) && ((uint8_t)(GI_tmp) != PROBE_UNDEF_CA) ) 
 705:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
 706:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						GITemp = (uint8_t)(GI_tmp);
 707:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						
 708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						SETBIT(GIValid,(aux_index+GI_FIRST_PROBE_BIT));
 709:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}	
 710:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					else
 711:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{/* byte indicativo per Fault su NTC - valori out of range */
 712:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 713:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						if ( (uint8_t)(GI_tmp) == PROBE_UNDEF_CC )
 714:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						{
 715:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							FltGITemp = FLT_SUBCODE_PROBE_CC;
 716:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						}
 717:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						else
 718:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						{
 719:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							FltGITemp = FLT_SUBCODE_PROBE_CA;
 720:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						}
 721:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}	
 722:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
 723:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 724:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				break;
 725:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 726:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case GI_CRITERION_TYPE:
 727:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
 728:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				switch (pGenInput->readType)
 729:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
 730:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					/* @_@ */
 731:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					case ANALOG_I:
 732:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						if ( HIO_GIConv(pGenInput,&GI_tmp) == S_OK )
 734:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						{							
 735:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							if (CRITERION_UNDEF != (uint8_t)(GI_tmp))
 736:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							{
 737:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 738:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 739:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if ( aux_index == GI_SALT_IND)
 740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								/* si sta prendendo il considerazione il Sale come ingresso analogico*/
 741:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{	
 742:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 743:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									/* Criterio presenza sale*/
 744:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( RegDev_Pos[LD_SALT_ACTIVATION_REG_IND] != NO_LD_POS )
 745:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 746:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										/* Presente il pilotaggio del sensore sale */
 747:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										
 748:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if( LoadsReq_Old[RegDev_Pos[LD_SALT_ACTIVATION_REG_IND]].b == LOAD_OFF )
 749:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{
 750:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/* Sensore sale non pilotato */
 751:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/*
 752:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											Si forza il criterio a non valido e si resetta
 753:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											il filtro.
 754:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											*/
 755:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) );
 756:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											Salt_Time_Of_Stability = 0;
 757:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											
 758:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											break;
 759:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}
 760:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 761:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 762:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if ( GETBITVAL(GICriteria, GI_SALT_IND) != ((uint8_t)(GI_tmp)))
 763:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 764:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if ( Salt_Time_Of_Stability < Salt_Filtro_Stab)
 765:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{/*criterio non costante*/
 766:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/* Attendi che passi il tempo corretto all'incirca 10 secondi sono sufficenti */
 767:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											Salt_Time_Of_Stability++;
 768:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/* non  è considerato uno stato valido per quel criterio*/
 769:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);	
 770:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}
 771:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 772:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									else
 773:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 774:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										/* il criterio  non è stabile */
 775:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										Salt_Time_Of_Stability = 0;
 776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 777:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}
 778:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								
 779:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if ( TESTBIT(GIValid,aux_index+GI_FIRST_CRITERION_BIT))
 780:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 781:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if (CRITERION_ON == (uint8_t)(GI_tmp))
 782:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 783:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										SETBIT(GICriteria, aux_index);
 784:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 785:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									else
 786:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 787:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										CLRBIT(GICriteria, aux_index);
 788:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 789:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}	
 790:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							}
 791:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							else
 792:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							{
 793:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								/* bit indicativo per il fault su pressostato - valori out of range */
 794:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								SETBIT(FltGICriteria, aux_index);
 795:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							}
 796:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						}
 797:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 798:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						break;
 799:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 800:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					case DIGITAL_I:
 801:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 802:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						{
 803:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							/* filtro */
 804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							uint8_t currInputVal=(LIB_DIO_GetDigInputVal(pGenInput->pos)<<aux_index);
 805:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							Loader_Struct table={0,0};
 806:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		                    
 807:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							HIO_GIGetCriterionDigitalTable(pGenInput,&table);
 808:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 809:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							if(table.Data && ((GICriterionDigitalTab_Struct*)(table.Data))->Filter) 
 810:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							{
 811:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								/* Previsto un filtro di stabilit� */
 812:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 813:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( aux_index == GI_SALT_IND )
 814:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 815:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									/* Criterio presenza sale*/
 816:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( RegDev_Pos[LD_SALT_ACTIVATION_REG_IND] != NO_LD_POS )
 817:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 818:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										/* Presente il pilotaggio del sensore sale */
 819:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										
 820:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if( LoadsReq_Old[RegDev_Pos[LD_SALT_ACTIVATION_REG_IND]].b == LOAD_OFF )
 821:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{
 822:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/* Sensore sale non pilotato */
 823:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											
 824:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/*
 825:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											Si forza il criterio a non valido e si resetta
 826:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											il filtro.
 827:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											Il valore di CriterionOldState[] non viene modificato ma
 828:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											tanto cambia poco, visto che il filtro è azzerato.
 829:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											*/
 830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) );
 831:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CriterionFilter[GI_SALT_IND] = 0;
 832:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											
 833:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											break;
 834:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}
 835:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 836:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}
 837:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 838:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 839:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if ( (currInputVal&(1<<aux_index)) == (CriterionOldState&(1<<aux_index)) )
 840:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 841:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if ( CriterionFilter[aux_index] < ((GICriterionDigitalTab_Struct*)(table.Data))->Filter )
 842:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 843:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										CriterionFilter[aux_index]++;                                    
 844:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										CLRBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 845:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									} 
 846:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									else
 847:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 848:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if( currInputVal&(1<<aux_index) )
 849:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{
 850:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											SETBIT(GICriteria,aux_index);
 851:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}
 852:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										else
 853:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{
 854:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GICriteria,aux_index);
 855:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}                                        
 856:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 857:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 858:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}		                        
 859:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}
 860:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								else
 861:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 862:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CriterionFilter[aux_index] = 0;
 863:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 864:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CLRBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 865:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 866:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( currInputVal&(1<<aux_index) ) 
 867:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 868:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										SETBIT(CriterionOldState, aux_index);   
 869:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 870:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									else 
 871:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 872:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										CLRBIT(CriterionOldState, aux_index);
 873:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}                    		        
 874:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}
 875:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							}
 876:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							else
 877:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							{
 878:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								/* Non previsto un filtro di stabilit� */
 879:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 880:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( aux_index == GI_SALT_IND )
 881:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 882:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									/* Criterio presenza sale*/
 883:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( RegDev_Pos[LD_SALT_ACTIVATION_REG_IND] != NO_LD_POS )
 884:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 885:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										/* Presente il pilotaggio del sensore sale */
 886:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										
 887:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if( LoadsReq_Old[RegDev_Pos[LD_SALT_ACTIVATION_REG_IND]].b == LOAD_OFF )
 888:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{
 889:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/* Sensore sale non pilotato */
 890:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											
 891:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											/* Si forza il criterio a non valido */
 892:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) );
 893:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											
 894:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											break;
 895:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}
 896:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 897:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}
 898:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 899:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 900:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( currInputVal&(1<<aux_index) )
 901:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 902:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									SETBIT(GICriteria,aux_index);
 903:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}
 904:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								else
 905:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 906:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CLRBIT(GICriteria,aux_index);
 907:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}                                        
 908:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								
 909:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 910:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							}
 911:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 912:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						}											    
 913:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 914:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						break;
 915:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				  
 916:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					case I2C_I:
 917:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						CLRBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 918:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						if( UI_Info_Ctrl == TRUE )
 919:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						{
 920:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							
 921:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							if (uPDoorStatus == UP_DOOR_CLOSE)
 922:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							{
 923:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if (TESTBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE) )
 924:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 925:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								
 926:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 927:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									
 928:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}else
 929:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{	
 930:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								           
 931:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if(HIO_GetSparklingAidCriterionValue(pGenInput,&GI_tmp)==S_OK)
 932:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									{
 933:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if((uint8_t)GI_tmp)
 934:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{                                                                        
 935:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											SETBIT(GICriteria,aux_index);
 936:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(Flags_2,FLAGS2_REED_NO_SPARKL_BIT);
 937:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											SETBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
 938:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}
 939:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										else 
 940:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										{                                                                          
 941:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												
 942:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN )|| (Interpreter_Data[0].compl
 943:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											{
 944:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												CLRBIT(GICriteria,aux_index);
 945:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												SETBIT(Flags_2,FLAGS2_REED_NO_SPARKL_BIT);
 946:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												SETBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);	
 947:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								
 948:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											}else
 949:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											{
 950:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												SparklingReads.nSamples=0;
 951:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											}	
 952:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
 953:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										}
 954:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									
 955:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 956:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									}
 957:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}	
 958:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							}else
 959:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							{
 960:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 961:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								{
 962:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									SparklingReads.nSamples=0;
 963:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
 964:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								}	
 965:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							}
 966:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							UI_Info_Ctrl=FALSE;
 967:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						}
 968:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 969:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						break;
 970:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 971:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
 972:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					default:
 973:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
 974:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						break;
 975:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}	
 976:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
 977:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 978:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 979:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case GI_PULSE_COUNTER_TYPE:	
 980:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    /* Lettura warnings */
 981:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    /*rientra in questo caso anche TURBINA_BLOCCATA     ???*/
 982:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    fault=PM_PulseCounter_GetWarning();
 983:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    if(fault) 
 984:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    {
 985:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			        /*Gestire del fault*/
 986:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			        FltGIPulseCount=fault;
 987:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			        break; /* non aggiornare la lettura dell'ingresso */
 988:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    }
 989:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
 990:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    /* è possibile convertire la lettura */
 991:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    if(HIO_GIScaleConv(pGenInput, &GI_tmp) == S_OK)
 992:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    {
 993:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			      GIWaterLoaded=GI_tmp;
 994:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_PM_PULSECOUNTER
 995:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		            if (pGenInput->readType == PULSECNTR_I)
 996:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		          	{
 997:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		          	  PulseLoaded=PM_PulseCounter_GetCount();
 998:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		          	}
 999:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /*__PULSECOUNTER_H	*/
1000:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		          	SETBIT(GIValid, aux_index+GI_FIRST_PULSE_COUNTER_BIT);
1001:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    } 			    
1002:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1003:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1004:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1005:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  case GI_TURB_SENSOR_TYPE:
1006:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    if((TurbiditySensorCal.state == (uint8_t)TURBSENS_VALID_CALIBR_VALUE_STATE)
1007:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			|| (TurbiditySensorCal.state == (uint8_t)TURBSENS_CALIBR_VALIDATE_STATE)
1008:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    || (TurbiditySensor.state==TURBIDITY_PWM_CUSTOM_STATE)
1009:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    || (TurbiditySensor.state==TURBIDITY_CONTINUOUS_READ_CUSTOM_STATE))
1010:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    {   
1011:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		         /*gestione del sensore solo in caso di valore di calibrazione valido*/
1012:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        		    
1013:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        if(!TurbidityReads.readers)
1014:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        {
1015:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		             /*disabilita la lettura*/
1016:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        	/*AE Fioravanti dice che il modulo si auto disabilità
1017:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        	 * quindi non necessario invio del comando*/
1018:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1019:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                      /*segnala 'acquisizione disabilitata'*/
1020:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     TurbiditySensorCal.flags.bit.cmdAcquireDone=0;
1021:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1022:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     /* lettura non valida*/
1023:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     CLRBIT(GIValid, (aux_index+GI_FIRST_TURB_SENSOR_BIT));
1024:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        }
1025:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        else
1026:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        {
1027:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		             /*at least one reader*/
1028:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		            
1029:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     if((TurbiditySensorCal.flags.bit.cmdAcquireDone==0))
1030:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     {
1031:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                          /*avvia una nuova lettura*/
1032:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1033:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     	PM_TurbiditySensor_StartAcq(TurbiditySensor.pwmval);
1034:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         /* segnala 'acquisizione abilitata'*/
1035:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         TurbiditySensorCal.flags.bit.cmdAcquireDone=1;
1036:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 															    
1037:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.ADvalue=0;
1038:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.nSamples=0;
1039:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.a=0;
1040:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.flags.b.SampleInit=1;
1041:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						
1042:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     }
1043:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        
1044:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		      		    
1045:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****           		     /*è possibile convertire la lettura*/
1046:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****           		    if(PM_TurbiditySensor_AcqIsReady())
1047:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****           		    {		      
1048:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     
1049:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         FltGITurbidity = 0;
1050:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     
1051:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         if ( HIO_GIConv(pGenInput,&GI_tmp) == S_OK )
1052:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         {
1053:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1054:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                             if(TurbidityReads.readers!=(1<<((uint8_t)TURBSENS_READ_cstm_CONTINUOUS)
1055:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                             {           
1056:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                                 /* non aggiornare la lettura in caso di SOLA lettura custom in cont
1057:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     						    per non influenzare il comportamento dei microprogrammi*/
1058:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1059:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						                         
1060:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                                 GITurbidity = (uint8_t)(GI_tmp);
1061:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                                 SETBIT(GIValid, (GI_FIRST_TURB_SENSOR_BIT));
1062:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                             }
1063:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                             TurbiditySensor.lvl=(uint8_t)(GI_tmp);
1064:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         
1065:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         }
1066:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****           		    }		    
1067:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****       		    }
1068:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    } 
1069:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    else
1070:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    {
1071:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        TurbiditySensorCal.flags.bit.cmdAcquireDone=0;
1072:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    }
1073:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		     
1074:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1075:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* nuovo generic input per gestire i sensori virtuali dati dalle pompe*/
1076:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
1077:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case GI_VIRTUAL_SENSOR_TYPE:
1078:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1079:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if (HIO_Check_VS_Valid( aux_index))/*controllare se i dati per il sensore sono validi*/
1080:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* dati validi per il sensore*/
1081:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1082:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
1083:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					GI_tmp = MAKEWORD(BLDC_Pump_InfoBuffer[aux_index][BLDC_VS_STATE_MSB], BLDC_Pump_InfoBuffer[aux
1084:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if (( aux_index== WASH_BLDC_PUMP)&& ((GI_tmp == VS_UNDEFINED_NEW)||( GI_tmp ==5)) )
1085:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
1086:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						 if( !SWTC_IsExpired((SWTC_CountersType)SFT_FILTER_VS56_STATE_W) )
1087:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						 {
1088:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							(void)SWTC_Run((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
1089:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						 }	
1090:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}else
1091:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
1092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
1093:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_Stop((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
1094:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}
1095:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1096:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1097:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if (( GI_tmp == VS_UNDEFINED)||( GI_tmp == VS_UNDEFINED_NEW)||(!SWTC_IsStopped((SWTC_CountersT
1098:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
1099:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						CLRBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+aux_index));	
1100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}
1101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					else
1102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
1103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						Virtual_Sensor_Value[aux_index]=(uint8_t)GI_tmp;
1104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						SETBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+aux_index));	
1105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						/*GI_VIRTUAL_SENSOR_WASH ==LD_WASH_PUMP_IND*/
1106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
1107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
1108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}
1109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						
1110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}	else
1111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					CLRBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+aux_index));
1113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( aux_index== WASH_BLDC_PUMP)
1114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					{
1115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
1116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_Stop((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
1117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					}	
1118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
1121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
1124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			default:
1125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		} 			
1129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		pGenInput++;
1130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**/
1136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Gestisce l'aggiornamento dell'array di consistency
1139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** (valori di coerenza tra stato del carico e feedback associato)
1140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
1142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			03/10/2006
1143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Valeria Catani
1144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
1146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_consistencyManagement(void)
1148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	PM_Consistency_GetAllCsValues(&Consistency_Current[0]);
1150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**/
1153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ************** */
1155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* Local Function */
1156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /* ************** */
1157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Routine di conversione per Generic Inputs.
1160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** (ANALOG TO DEGREES, FREQ TO WATER LEVEL, PRESSURE SENSOR - LINEAR
1161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** ANALOG TO CRITERION, FREQ TO CRITERION, ANALOG TO LEVELS)
1162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
1164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		*pGI : puntatore alla struttura del Generic Input in questione
1165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		*pResult : puntatore al risultato della conversione
1166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return 			uint8_t
1167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		S_OK se la conversione è andata a buon fine
1168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		HIO_ERR_BASIC_LOADER errore caricamento dati dal file di setting
1169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.1
1171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			12/02/2008
1172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Valeria Catani, Roberto Fioravanti
1173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note		\par \b Nota 1:
1175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             Generic Inputs supportati:
1176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             ANALOG_I
1177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             TURBIDITY_I
1178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             PRESSLIN_I
1179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \todo       introdurre 
1181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             -gestione calibrazione del pressostato lineare
1182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             
1183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */	
1184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GIConv(GIMap_Struct const* pGI, uint16_t *pResult) 
1185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Loader_Struct table;                    /*pnt alla tabella del GI*/
1187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t *pSamples;	                    /*pnt campo samples */
1188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint16_t value = 0;                     /*valore lettura ingresso*/
1189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** TabQueryResult_t    qresult;        
1190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** TabQueryIn_t        qin;
1191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     /* caricamento tabella parametri di conversione */
1194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( BasicLoader( (settingPntr_t)APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
1195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
1197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if (pGI->readType == ANALOG_I)
1200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     {
1201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     	value = LIB_ADC_GetAnalogValue (pGI->pos);
1202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     }
1203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if (pGI->readType == TURBIDITY_I)
1205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     {             
1206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         /* lettura valore analogico */
1207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         value = LIB_ADC_GetAnalogValue (pGI->pos);
1208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         /* puntatore al campo Samples (allineato a word) */        
1210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         pSamples=( (uint8_t*)table.Data + sizeof(TabHeader_t) + (((TabHeader_t *)table.Data)->point
1211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if((( ((TabHeader_t *)table.Data)->S1 & GI_WORD ) == GI_BYTE) && (((TabHeader_t *)table.Dat
1214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         {
1215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             pSamples++;
1216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         }
1217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         pSamples+=(((TabHeader_t *)table.Data)->pointNumber<<(((TabHeader_t *)table.Data)->S2&GI_WO
1219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if(((((TabHeader_t *)table.Data)->S2&GI_WORD) == GI_BYTE) && (((TabHeader_t *)table.Data)->
1220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         {
1221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             pSamples++;
1222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         }
1223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                 
1224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if(!HIO_trbProcessSmpl(value, pSamples))
1225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         {        
1226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****           return S_FALSE;
1227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         }
1228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             
1229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         value=TurbidityReads.perc;    
1230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     }
1231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
1232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     qin.cfr_val=value;
1234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     qin.opt.all=0;
1235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     qin.tab=(TabHeader_t *)table.Data;
1236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         
1237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TabQuery(&qin, &qresult);
1238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
1240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/*formato dati in uscita*/
1242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( (pGI->id.s.type == GI_CRITERION_TYPE) ) 
1243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  if(qresult.b.ubound) 
1245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  {
1246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    *pResult = qresult.oBoundVal;
1247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  } else 
1248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  {
1249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    *pResult = qresult.data;
1250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  }
1251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  
1252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	} else
1253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(qresult.b.lbound)
1258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Error : out of range MIN */
1260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			*pResult = GIVALUE_UNDEF_MIN;
1262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    if (pGI->readType == TURBIDITY_I)
1264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    /* anche se non trova il valore, esce con l'output massimo possibile */
1266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    *pResult=qresult.oBoundVal;
1267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			return S_OK;
1270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}		
1271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else if(qresult.b.ubound)
1272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Error : out of range MAX */
1274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			*pResult = GIVALUE_UNDEF_MAX;
1276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (pGI->readType == TURBIDITY_I)
1278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    /* anche se non trova il valore, esce con l'output massimo possibile */
1280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    *pResult=qresult.oBoundVal;
1281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             return S_OK;
1284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else						
1286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  *pResult = qresult.data;
1288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   return S_OK;
1295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Routine di conversione con fattore di scala per Generic Inputs
1301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
1302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		*pGI : puntatore alla struttura del Generic Input in questione
1303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		*pResult : puntatore al risultato della conversione
1304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return 			uint8_t
1305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		S_OK se la conversione è andata a buon fine
1306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		HIO_ERR_BASIC_LOADER errore caricamento dati dal file di setting
1307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
1311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			11/02/2008
1312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Roberto Fioravanti
1313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note		\par \b Nota 1:
1315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             Generic Inputs supportati:
1316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             PULSECNTR_I
1317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             
1318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */	
1319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GIScaleConv(GIMap_Struct const* pGI, uint16_t *pResult) 
1320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Loader_Struct table;
1322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
1323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* caricamento tabella parametri*/
1324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( BasicLoader( APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
1325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
1327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef CONFIG_PM_PULSECOUNTER
1330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if (pGI->readType == PULSECNTR_I)
1331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*caricamento divisore*/
1333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		FlowMeterDivider = OFFS_B(table.Data,0);
1335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*risultato*/
1336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*pResult = PM_PulseCounter_GetCount()/FlowMeterDivider;
1337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif /*CONFIG_PM_PULSECOUNTER	*/
1339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return S_OK;
1341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** restituisce puntatore alla tabella dei parametri per Generic Inputs Criterion Digital
1346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
1347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		*pGI : puntatore alla struttura del Generic Input in questione
1348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [out]	*pTable : puntatore alla tabella dei parametri
1349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return 			uint8_t
1350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		S_OK se la conversione è andata a buon fine
1351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		HIO_ERR_BASIC_LOADER errore caricamento dati dal file di setting
1352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		HIO_ERR_ARG_NOT_SUPPORTED errore GI non supportato
1353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
1357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			3/09/2008
1358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Roberto Fioravanti
1359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note		\par \b Nota 1:
1361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             Generic Inputs supportati:
1362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             idType:     GI_CRITERION_TYPE
1363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             readType:   DIGITAL_I
1364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             
1365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */	
1366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GIGetCriterionDigitalTable(GIMap_Struct const* pGI, Loader_Struct *pTable) 
1367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   Loader_Struct table;
1369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
1370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(pGI->id.s.type != GI_CRITERION_TYPE) 
1371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     {
1372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         return HIO_ERR_ARG_NOT_SUPPORTED;
1373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     }
1374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(pGI->readType != DIGITAL_I) 
1376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     {
1377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         return HIO_ERR_ARG_NOT_SUPPORTED;
1378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     }
1379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     /* caricamento tabella parametri*/
1381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if( BasicLoader( APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
1382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
1384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	*pTable = table; /* QI 06.11.09 correzione baco */
1387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
1388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return S_OK;
1389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   Effettua il calcolo della media tra TurbidityReads.readings
1395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   campioni
1396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
1397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		trbsample : campione
1398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		p_samples : # campione per il calcolo della media
1399:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1400:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return 			uint8_t
1401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		TRUE nuovo valore disponibile in TurbidityReads.ADvalue
1402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		FALSE media non completata
1403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1404:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
1405:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			11/04/2008
1406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Roberto Fioravanti
1407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1408:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
1409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_trbProcessSmpl(uint16_t trbsample, uint8_t * p_samples) 
1410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t retval=FALSE;
1412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint16_t adval;
1413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  
1414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   if(TurbidityReads.nSamples==0) 
1415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   {
1416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1417:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     /* imposta il valore del numero di campioni*/
1418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.pReadings=p_samples;
1419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.nSamples=*TurbidityReads.pReadings;
1420:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(TurbidityReads.flags.b.SampleInit==1)
1422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			TurbidityReads.flags.b.SampleInit=0;
1424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			return FALSE;
1425:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(!TurbidityReads.nSamples)
1428:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     {      
1429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****       return FALSE;
1430:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     }
1431:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     /* calcolo media */
1432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     adval=TurbidityReads.a/TurbidityReads.nSamples;
1433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.ADvalue=adval;
1434:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1435:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     /* calcolo torbidità percentuale */
1436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(TurbiditySensorCal.adH2oRef)
1437:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     {
1438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		adval=TurbidityReads.ADvalue;
1439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(TurbiditySensorCal.adH2oRef + (uint16_t)TurbiditySensorCal.adH2oRefDelta <= TurbidityReads.ADv
1440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	    {
1441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        TurbidityReads.ADvalue=0;
1442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        TurbidityReads.flags.b.AdTooLarge=1;
1443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        adval=0;
1444:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	    }
1445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	    else
1446:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	    {
1447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        TurbidityReads.flags.b.AdTooLarge=0;
1448:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             if(TurbiditySensorCal.adH2oRef < TurbidityReads.ADvalue)
1449:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     	    {
1450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     	        
1451:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     	        adval=TurbiditySensorCal.adH2oRef;
1452:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     	    }    	    
1453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	    }
1454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             
1455:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.perc=(uint16_t)100*(TurbiditySensorCal.adH2oRef- adval)/TurbiditySensorCal.a
1456:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.flags.b.H2ORefNull=0;
1457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     }
1458:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     else
1459:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     {
1460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.perc=100;
1461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.flags.b.H2ORefNull=1;
1462:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     }
1463:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1464:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1465:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1466:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	TurbidityReads.id++;
1467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	retval=TRUE;
1468:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* azzera accumulatore */
1470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.a=0;
1471:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   } 
1472:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
1473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   /* aggiorna numero di letture rimanenti e accumulatore */
1474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   TurbidityReads.nSamples--;
1475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   TurbidityReads.a+=trbsample;
1476:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****       
1477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   return retval;
1478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1479:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**  
1481:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  Richiede lettura del sensore di torbidità con id
1482:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]	        id
1483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return 			none
1484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
1486:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			21/05/2008
1487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Roberto Fioravanti
1488:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1489:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
1490:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_trbReadEnable(uint8_t id)
1491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     SETBIT(TurbidityReads.readers,id);
1493:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1494:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1495:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**  
1496:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  Termina la richiesta della lettura del sensore di torbidità con id
1497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]	        id
1498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return 			none
1499:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		1.0.0
1501:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			21/05/2008
1502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Roberto Fioravanti
1503:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
1505:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_trbReadDisable(uint8_t id)
1506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     CLRBIT(TurbidityReads.readers,id);
1508:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1509:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1510:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1511:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1512:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   Determina il criterio per il brillantante
1513:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   
1514:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [in]		pGI : puntatore al generic input.
1515:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \param [out]	cr_val : valore del criterio
1516:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \return 			uint8_t
1517:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		HIO_ERR_BASIC_LOADER errore basic loader
1518:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \retvalue 		S_OK criterio valutato correttamente
1519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version		2.0.0
1520:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date 			14/01/2011
1521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author			Emanuela Antognoli
1522:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Modificata logica per correggere il problema della perdita della vaschetta e delle gocce di condens
1523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1524:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1526:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
1527:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_GetSparklingAidCriterionValue(GIMap_Struct const* pGI, uint16_t* cr_val)
1528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Loader_Struct table;
1530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** GITabSpa_Struct *pParams;                /*pnt ai dati del GI*/
1531:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t       on;
1532:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t       cr_val_tmp;
1533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t sparklingsample=BufUIInfo[pGI->pos];
1534:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     
1535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( BasicLoader( APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
1536:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
1538:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1539:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	pParams=(GITabSpa_Struct *)table.Data;
1541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	on=pParams->On;
1542:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	cr_val_tmp=(1 && TESTBIT(GICriteria, GI_SPARKLING_AID_IND) );        
1543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	*cr_val=cr_val_tmp;
1544:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1545:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1546:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if(SparklingReads.nSamples<pParams->Samples)
1547:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1548:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		SparklingReads.nSamples++;
1549:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_SPRK_NOT_READY;
1550:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	else
1552:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1553:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(!
1555:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(
1556:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			((on==cr_val_tmp) && (sparklingsample<pParams->Hb))
1557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			||
1558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(((!on)==cr_val_tmp) && (sparklingsample>pParams->Lb))
1559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			)
1560:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  )
1561:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			*cr_val=cr_val_tmp^1;
1563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1564:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1565:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		SparklingReads.nSamples=0;
1566:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1567:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1568:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return S_OK;
1569:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1570:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1571:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1573:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** <Fan_GenericLoad_Mgmt> 
1574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1575:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \ param  [in]		none 
1576:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1577:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1578:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \warning	[variabile globale : modificato il valore LoadsReq_New: stato finale di attivazione del ca
1579:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			 e' usata come input/output
1580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author 	Emanuela Antognoli
1581:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date		 9/09/10
1582:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version	1.0.0
1583:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \bug		
1584:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \
1585:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note	
1586:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1587:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */  
1588:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void Fan_GenericLoadMgmt() 
1589:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( Surge_Fan_Params.fan_startup_timer != 0 )
1593:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1594:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b != FAN_SPEED_OFF )
1595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( LoadsReq_Old[Fan_Pos[LD_DRY_FAN_IND]].b == FAN_SPEED_OFF )
1597:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{/*trans OFF - ON*/
1598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/*Setup Timer*/
1599:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)Set_SmallCounter((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER, (SWTC_PrescalerType)COUNTE
1600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1601:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( SWTC_IsExpired((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER) )
1603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1604:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/*
1605:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Tempo di startup scaduto, si lascia il valore impostato precedentemente
1606:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				di LoadsReq_New[Fan_pos]
1607:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				*/
1608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Stop((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER);			
1609:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1610:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			else
1611:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* Tempo di startup non scaduto, si impone la velocità fan_startup_speed */
1613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Run((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER);
1614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b= Surge_Fan_Params.fan_startup_speed;
1616:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1618:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1619:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	else
1620:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1621:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Se fan_startup_timer == 0 la protezione non va applicata */	
1622:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1623:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1624:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1625:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1626:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1627:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1628:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
1629:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** <HIO_OverPower_Pump_Control> 
1630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1631:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \ param  [in]		none 
1632:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1633:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1634:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \warning	[variabile globale : modificato il valore WashPumpReq_New: stato finale della pompa lavagg
1635:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			 e' usata come output
1636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author 	Emanuela Antognoli
1637:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date		 10/09/10
1638:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version	1.0.0
1639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \bug		
1640:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \
1641:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note	
1642:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */  
1644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_OverHeat_DrainPump_Control ( void) 
1645:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1646:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** static Over_Power_Bldc_Struct over_power_algorithm = {0};
1648:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint16_t act_power, threshold;
1649:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint16_t targetSpeed;
1650:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1652:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	act_power = MAKEWORD(BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][BLDC_OH_INDEX_MSB], BLDC_Pump_InfoBuffe
1654:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     threshold = DRAINPUMP_OVERHEAT_THRESHOLD;
1655:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1656:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	targetSpeed = GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP]);
1658:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1659:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( targetSpeed == 0 )
1660:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		over_power_algorithm.s.status=DISABLED_OP_ALGO;
1662:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1663:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1664:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	switch ( over_power_algorithm.s.status )
1665:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		case DISABLED_OP_ALGO:
1667:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( act_power > threshold ) 
1669:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{ /* LR 19 maggio, anno del Signore 2011 (benché molte circostanze facciano pensare che il demo
1670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				 
1671:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVal
1673:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Stop((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER); 
1674:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				over_power_algorithm.s.status = REDUX_OP_ALGO;
1675:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    }
1676:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			else
1677:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1678:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Stop((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
1679:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* permane nello stato disable*/
1680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1681:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1682:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1683:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		case REDUX_OP_ALGO:
1684:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Run((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
1686:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1687:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER))
1688:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1689:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( DRAINPUMP_OFF_OVERHEAT_DURATION )
1690:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1691:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVa
1692:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					over_power_algorithm.s.status = OFF_OP_ALGO;		
1693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}else
1694:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVa
1696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					over_power_algorithm.s.status=ON_OP_ALGO;
1697:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					
1698:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
1699:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1700:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1701:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1702:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1703:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* DURANTE 	lo stato di ON la velocit� va ridotta*/
1704:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1705:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1706:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( targetSpeed >= 0 )
1707:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( targetSpeed >= DRAINPUMP_OVERHEAT_SPEED_REDUCTION )
1709:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1710:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					targetSpeed -= DRAINPUMP_OVERHEAT_SPEED_REDUCTION;
1711:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
1712:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1713:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( targetSpeed < DRAINPUMP_SAFETY_MIN_SPEED )
1714:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1715:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					targetSpeed = DRAINPUMP_SAFETY_MIN_SPEED;
1716:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
1717:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1718:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], targetSpeed);
1719:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1720:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	            SET_PUMP(LD_DRAIN_PUMP_IND, BLDC_PumpReq_New[DRAIN_BLDC_PUMP].loadParam.b);
1721:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1722:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			else
1723:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1724:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/*
1725:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				La richiesta pompa è già i fase di spegnimento, non si fa niente,
1726:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				altrimenti si corre il rischio di riaccenderla chiedendo MIN_SPEED,
1727:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				e quindi di modificare lo stato On/Off del carico
1728:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				*/
1729:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* Verificare con Danilo/Alessio MQ */
1730:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1731:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1732:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1734:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1735:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		case OFF_OP_ALGO:
1736:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1737:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Run((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
1738:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1739:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( SWTC_IsExpired((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER) )
1740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1741:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1742:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVal
1743:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				over_power_algorithm.s.status=ON_OP_ALGO;
1744:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1745:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1746:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1747:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], 0);
1748:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1749:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        SET_PUMP(LD_DRAIN_PUMP_IND, LOAD_OFF);
1750:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1751:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			case ON_OP_ALGO:
1752:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* non applico nessun cambiamento di velocità*/
1753:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Run((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
1754:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1755:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( SWTC_IsExpired((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER) )
1756:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{		
1757:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterV
1758:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						over_power_algorithm.s.status=REDUX_OP_ALGO;
1759:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
1760:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				 
1761:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
1762:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1763:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1764:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1765:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		default:
1766:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			over_power_algorithm.s.status = DISABLED_OP_ALGO;
1767:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
1768:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}	
1769:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1770:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1771:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
1772:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1773:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1774:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_BulkAndKillDSP_Mgmt( void) 
1775:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
1776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t BLDC_washPumpState;
1777:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t BLDC_drainPumpState;
1778:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t bulk_DSP_Side_ReqState;
1779:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t bulk_uP_Side_ReqState;
1780:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t killDSPReqState;
1781:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t bulkFilteredState;
1782:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** static uint8_t oldBulkState = LOAD_OFF;
1783:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*
1784:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Come inizializzare oldBulkState (conta solo alla prima esecuzione dopo
1785:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** un reset freddo)?
1786:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Se la inizializzo LOAD_ON:
1787:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	- se al reset freddo la BULK è richiesta spenta, vedo una transizione
1788:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	  che mi fa scattare il delay e accendere il DSP.
1789:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	- se al reset freddo la BULK è richiesta accesa, il valore di oldBulkState
1790:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	  è ininfluente.
1791:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** Se la inizializzo LOAD_OFF:
1792:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	- se al reset freddo la BULK è richiesta spenta, non vedo nessuna transizione
1793:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	  e, dato che il timer è inizializzato a scaduto, il DSP si può spegnere.
1794:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	- se al reset freddo la BULK è richiesta accesa, il valore di oldBulkState
1795:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	  è ininfluente.
1796:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
1797:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1798:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* **** Determinazione dello stato richiesto per la pompa lavaggio BLDC **** */
1799:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1800:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* Default: stato richiesto OFF */
1801:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	BLDC_washPumpState = LOAD_OFF;
1802:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1803:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc1 != 0 ) 
1804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1805:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1806:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Il controllo su bldc1 non è ridondante perchè non necessariamente,
1807:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		se eseguo questa routine, è presente la pompa lavaggio BLAC. Potrebbe
1808:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		essere presente anche solo la pompa scarico BLAC.
1809:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1810:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( BLDC_PumpReq_New[WASH_BLDC_PUMP].loadParam.b == LOAD_ON )
1811:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1812:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Pompa lavaggio BLAC presente e richiesta accesa */
1813:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			BLDC_washPumpState = LOAD_ON;
1814:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1815:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1816:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1817:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* **** Determinazione dello stato richiesto per la pompa scarico BLDC **** */
1818:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1819:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* Default: stato richiesto OFF */
1820:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	BLDC_drainPumpState = LOAD_OFF;
1821:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1822:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1823:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc_drain != 0 )
1824:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1825:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1826:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Il controllo su bldc_drain non è ridondante perchè non necessariamente,
1827:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		se eseguo questa routine, è presente la pompa scarico BLAC. Potrebbe
1828:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		essere presente anche solo la pompa lavaggio BLAC.
1829:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( ( LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON ) ||
1831:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    ( DrainSftReq_New.b == LOAD_ON ) )
1832:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1833:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Quando sarà gestita anche la pompa scarico BLAC lo stato della pompa sarà
1834:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		dedotto da DrainPumpReq_New.loadParam.b, che però al momento non esiste.
1835:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Per ora, come pro-memoria, si controlla LoadsReq_New[]. MQ
1836:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1837:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1838:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Pompa scarico BLAC presente e richiesta accesa */
1839:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			BLDC_drainPumpState = LOAD_ON;
1840:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1841:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1842:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1843:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* **** Impostazione dello stato richiesto per la BULK DSP SIDE (pilot 4) **** */
1844:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1845:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* Default: BULK DSP SIDE non presente */
1846:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	bulk_DSP_Side_ReqState = 0xFF;	/* Introdurre una define MQ */
1847:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1848:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( RegDev_Pos[LD_BULK_ACT_DSPSIDE_REG_IND] != NO_LD_POS )
1849:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1850:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* BULK DSP SIDE presente */
1851:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1852:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( TESTBIT(FltBLDCUnblock.flags,PUMPOFF) )
1853:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1854:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Spegnimento forzato della BULK per routine di sblocco */
1855:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulk_DSP_Side_ReqState = LOAD_OFF;
1856:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1857:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else
1858:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1859:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Normale gestione */
1860:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
1861:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
1862:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1863:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* In RUN BULK DSP sempre pilotata */
1864:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				bulk_DSP_Side_ReqState = LOAD_ON;	
1865:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1866:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			else
1867:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1868:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/*
1869:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Se non in RUN, BULK DSP pilotata se almeno una delle pompe BLDC
1870:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				è richiesta attiva.
1871:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				*/
1872:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( ( BLDC_washPumpState == LOAD_ON ) || ( BLDC_drainPumpState == LOAD_ON ) )
1873:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1874:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					/* Almeno una delle due pompe BLDC è richiesta attiva */
1875:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					bulk_DSP_Side_ReqState = LOAD_ON;	
1876:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
1877:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				else
1878:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
1879:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					/* Nessuna delle due pompe BLDC è richiesta attiva */
1880:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					bulk_DSP_Side_ReqState = LOAD_OFF;	
1881:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
1882:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1883:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1884:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1885:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1886:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Posso agire direttamente su LoadsReq_New[]: per i carichi BULK DSP SIDE,
1887:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		BULK uPR SIDE e KILL_DSP lo stato richiesto dai microprogrammi è ignorato.
1888:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1889:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_New[RegDev_Pos[LD_BULK_ACT_DSPSIDE_REG_IND]].b = bulk_DSP_Side_ReqState;
1890:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1891:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1892:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1893:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* **** Impostazione dello stato richiesto per la BULK uPR SIDE (pilot 1-2-3) **** */
1894:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1895:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* Default: BULK uPR SIDE non presente */
1896:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	bulk_uP_Side_ReqState = 0xFF;	/* Introdurre una define MQ */
1897:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1898:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( RegDev_Pos[LD_BULK_ACT_UPSIDE_REG_IND] != NO_LD_POS )
1899:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1900:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* BULK uPR SIDE presente */
1901:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1902:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( TESTBIT(FltBLDCUnblock.flags,PUMPOFF) )
1903:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1904:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Spegnimento forzato della BULK per routine di sblocco */
1905:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulk_uP_Side_ReqState = LOAD_OFF;
1906:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1907:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else
1908:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1909:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1910:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( ( BLDC_drainPumpState == LOAD_ON ) && ( BLDC_washPumpState == LOAD_OFF ) )
1911:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1912:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/*
1913:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				La pompa scarico è BLAC ed è richiesta attiva e la pompa lavaggio o
1914:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				non è BLAC o comunque è richiesta spenta (è una sicurezza
1915:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				ulteriore in ottica certificazione, in realtà è una situazione che
1916:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				non dovrebbe mai verificarsi, funzionalmente le due pompe non devono
1917:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				mai essere accese insieme).
1918:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				*/
1919:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				bulk_uP_Side_ReqState = LOAD_ON;
1920:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1921:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			else
1922:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
1923:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				/* La pompa scarico non è BLAC o è richiesta spenta */
1924:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				bulk_uP_Side_ReqState = LOAD_OFF;
1925:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
1926:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1927:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
1928:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1929:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Posso agire direttamente su LoadsReq_New[]: per i carichi BULK DSP SIDE,
1930:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		BULK uPR SIDE e KILL_DSP lo stato richiesto dai microprogrammi è ignorato.
1931:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1932:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_New[RegDev_Pos[LD_BULK_ACT_UPSIDE_REG_IND]].b = bulk_uP_Side_ReqState;
1933:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1934:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1935:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1936:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* **** Determinazione dello stato filtrato della BULK **** */
1937:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1938:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( bulk_DSP_Side_ReqState != LOAD_OFF )
1939:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		&&
1940:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		( ( bulk_uP_Side_ReqState == LOAD_ON ) || ( TESTBIT(GICriteria,GI_CR_DOOR_IND) != 0 ) )
1941:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	  )
1942:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1943:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1944:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		BULK attiva: relay collegato a GND da LD_BULK_ACT_DSPSIDE_REG_IND
1945:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		e collegato a RTN da LD_BULK_ACT_UPSIDE_REG_IND o dalla porta chiusa.
1946:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1947:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1948:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		E' corretto usare come informazione lo stato che verrà richiesto per la
1949:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		BULK in questa iterazione (e non ad esempio quello all'iterazione precedente)?
1950:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Dato che l'informazione viene utilizzata per decidere lo stato che sarà
1951:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		richiesto al KILL DSP in questa iterazione, usando bulk_DSP/uP_Side_ReqState e
1952:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		e non considerando altri filtraggi, l'accensione (o lo spegnimento) di KILL DSP
1953:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		e BULK sarà richiesto nella stessa iterazione.
1954:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Eventuali problemi potrebbero nascere da specifiche che richiedono di accendere
1955:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		un carico prima dell'altro o viceversa, e dal fatto che, nell'ambito della stessa
1956:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		iterazione, l'ordine di attuazione dello stato dipende dall'Output Map.
1957:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		- In spegnimento: è richiesto che il KILL DSP venga spento con qualche secondo
1958:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  di ritardo rispetto alla BULK. Questo è gestito da un apposito contatore,
1959:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  per cui la BULK è spenta nella stessa iterazione in cui bulk_DSP/uP_Side_ReqState
1960:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  la indica come spenta (a meno di Pylot Type di tipo ritardato, di cui si dovrà
1961:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  tener conto nel definire il valore del contatore), mentre il KILL DSP qualche
1962:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  secondo più tardi. Quindi non ci sono problemi.
1963:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		- In accensione: è richiesto che il DSP sia acceso prima della BULK, quindi,
1964:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  richiedendone l'accensione nella stessa iterazione, potrebbero nascere dei
1965:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  problemi se nell'Ouput Map la BULK precede il KILL DSP.
1966:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  Tuttavia, se anche vengono accesi entrambi nella stessa iterazione, il fatto
1967:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  che la BULK sia comandata da un relay ci assicura qualche millisecondo di margine,
1968:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  e quindi anche in questo caso non ci sono problemi.
1969:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  L'importante è che siano effettivamente accesi nella stessa iterazione, e non
1970:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  il KILL DSP un'iterazione (== 100 ms) dopo.
1971:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  In caso di dubbi si potrebbe scegliere per la BULK un Digital Delayed, ma
1972:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  poi occorre tenerne conto anche in spegnimento. MQ
1973:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1974:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		bulkFilteredState = LOAD_ON;
1975:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
1976:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		oldBulkState = LOAD_ON;
1977:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
1978:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	else
1979:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
1980:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
1981:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		BULK non attiva.
1982:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
1983:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( oldBulkState == LOAD_ON )
1984:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1985:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* Transizione ON -> OFF della BULK: filtro sullo spegnimento */
1986:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1987:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_SetSValueAndRun((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER, (SWTC_SCounterValue)
1988:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1989:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1990:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( SWTC_IsExpired((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER) ) 
1991:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
1992:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			 /* BULK non attiva e timeout scaduto */
1993:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1994:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulkFilteredState = LOAD_OFF;
1995:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
1996:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Stop((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER);
1997:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
1998:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else
1999:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
2000:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			/* BULK non attiva ma timeout non scaduto */
2001:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2002:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulkFilteredState = LOAD_ON;
2003:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2004:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Run((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER); 
2005:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
2006:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2007:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		oldBulkState = LOAD_OFF;
2008:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2009:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2010:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2011:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* **** Impostazione dello stato richiesto per il KILL DSP **** */
2012:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2013:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( ( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING ) &&
2014:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(Interpreter_Data[0].phase == 0) )
2015:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		||
2016:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		( TESTBIT(FltBLDCUnblock.flags,PUMPOFF) )
2017:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	  )
2018:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2019:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/* Richiesta di spegnimento per tentativi di sblocco o OFF logico */
2020:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2021:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
2022:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Il KILL DSP segue lo stato filtrato della BULK: se è attiva o spenta
2023:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		da poco il KILL DSP dev'essere attivo, se è spenta da abbastanza tempo
2024:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		il KILL DSP può essere spento.
2025:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
2026:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		killDSPReqState = bulkFilteredState;
2027:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2028:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	else
2029:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2030:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		/*
2031:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Non siamo in OFF LOGICO nè durante i tentativi di sblocco:
2032:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		il KILL DSP dev'essere attivo.
2033:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*/
2034:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		killDSPReqState = LOAD_ON;
2035:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2036:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2037:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/*
2038:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Posso agire direttamente su LoadsReq_New[]: per i carichi BULK DSP SIDE,
2039:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	BULK uPR SIDE e KILL_DSP lo stato richiesto dai microprogrammi è ignorato.
2040:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	*/
2041:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	LoadsReq_New[RegDev_Pos[LD_KILL_DSP_REG_IND]].b = killDSPReqState;
2042:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2043:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
2044:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2045:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2046:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
2047:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** <HIO_Check_VS_Valid> 
2048:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2049:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \ param  [in]		pump index 
2050:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author 	Emanuela Antognoli
2051:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date		 19/07/11
2052:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version	1.0.0
2053:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \bug		
2054:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \
2055:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note	
2056:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** questa funzione mi dice se il dato di quel determinato sensore virtuale è valido oppure no.
2057:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** non devono esserci fault /warning attivi e non deve mancare la comunicazione con il DSP e il motore
2058:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  */
2059:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
2060:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_Check_VS_Valid(uint8_t aux_index)
2061:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
2062:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /*	if (FltBLDCUnblock.data_ready_4SV==FALSE )
2063:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2064:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return FALSE;
2065:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2066:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	else{*/
2067:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if (LoadsReq_Old[RegDev_Pos[LD_KILL_DSP_REG_IND]].b==0 )
2068:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{/* in realtà il none del pin è sbagliato : 0 vuol dire che il dsp non è alimentato, 1 vuol dir
2069:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return FALSE;
2070:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2071:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	else{
2072:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2073:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (GET_BLDC_SPEED(BLDC_PumpReq_Old[aux_index])>0)
2074:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
2075:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( BLDC_Pump_InfoBuffer[aux_index][BLDC_FLAGS_MSB] & 0x08)
2076:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{/* questo flag lo passa il DSP quando lo stato del sensore è valido ( rampa+4 sec)*/ 
2077:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				
2078:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				return TRUE;
2079:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}	
2080:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
2081:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2082:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}	
2083:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return FALSE;
2084:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
2085:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** /**
2086:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** <HIO_Check_VS_Stability> 
2087:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2088:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \ param  [in]		carico  
2089:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \author 	Emanuela Antognoli
2090:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \date		 19/07/11
2091:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \version	1.0.0
2092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \bug		
2093:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \
2094:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** \note	
2095:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** quando il motore cambia velocità o stato è necessario aspettare un tempo per permettere di render
2096:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2097:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** il timer viene inizializzato a -1(expired) in modo che solo il cambiamento di velocità delle influ
2098:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2099:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** */
2101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** void HIO_Check_VS_Stability(void)
2103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
2104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	uint16_t speedy_check;
2105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	speedy_check= GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP]);
2107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( (speedy_check!=GET_BLDC_SPEED(BLDC_PumpReq_Old[WASH_BLDC_PUMP]) )&& (speedy_check>0))  /* cam
2109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		(void)Set_SmallCounter((SWTC_CountersType)HIO_STABILITY_FILTER_VS, (SWTC_PrescalerType)COUNTERS2_
2111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}else{
2112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
2113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( (speedy_check>0)&& (MAKEWORD(BLDC_Pump_InfoBuffer[WASH_BLDC_PUMP][BLDC_VS_STATE_MSB], BLDC_P
2114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
2115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)Set_SmallCounter((SWTC_CountersType)HIO_STABILITY_FILTER_VS, (SWTC_PrescalerType)COUNTERS
2116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}else
2117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{	
2118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			speedy_check= GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP]);
2119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			
2120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( ( speedy_check!= GET_BLDC_SPEED(BLDC_PumpReq_Old[DRAIN_BLDC_PUMP]))&&(speedy_check>0)) /*  
2121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
2122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)Set_SmallCounter((SWTC_CountersType)HIO_STABILITY_FILTER_VS, (SWTC_PrescalerType)COUNTERS
2123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}else
2124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			{
2125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( (speedy_check>0)&& (MAKEWORD(BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][BLDC_VS_STATE_MSB], BLD
2126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				{
2127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)Set_SmallCounter((SWTC_CountersType)HIO_STABILITY_FILTER_VS, (SWTC_PrescalerType)COUNTER
2128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				}
2129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			}
2130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
2131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}	
2132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	/* se entrambe le pompe sono spente non c'è bisogno che parte il contatore del filtro, tanto lo s
2133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	è comunque invalido perchè il motore non gira*/
2134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)HIO_STABILITY_FILTER_VS))  
2136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{/* conteggio concluso */
2137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		(void)SWTC_Stop((SWTC_CountersType)HIO_STABILITY_FILTER_VS); 
2139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}else
2140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{	
2141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		(void)SWTC_Run((SWTC_CountersType)HIO_STABILITY_FILTER_VS);
2142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
2145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** static void HIO_State5_SpeedControl(void)
2150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {	
2151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP]) ==0 )
2153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return;
2155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==5)&&(TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+
2158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{		
2159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( State5.max_speed_value==0xFFFF)
2160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
2161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			set_limit4_state5( (uint16_t)GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP]));
2162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}else
2163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		{
2164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			set_limit4_state5( State5.max_speed_value);
2165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		}
2166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		
2167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( (State5.max_speed_value!=0xFFFF) && ( GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP])> State
2169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{ 
2170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],State5.max_speed_value);
2171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
2173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 
2175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** static void set_limit4_state5(uint16_t target)
2176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
   9                             		.loc 1 2176 0
  10                             	.LVL0:
2177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef _STATISTICS_ON_
2178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	uint16_t old_target;
2179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	
2180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	old_target=target;
2181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
2182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( target > SPEEDY_STEP_WASH)
  11                             		.loc 1 2182 0
  12 0000 5F 14                   		movu.W	r1, r4
  13 0002 FB E2 00 00 00 00       		mov.L	#_Tab_SFT_MotorWash, r14
  14 0008 DD E3 02                		mov.W	4[r14], r3
  15 000b 5F 32                   		movu.W	r3, r2
  16 000d 61 12                   		cmp	#1, r2
  17 000f 25 6C                   		bleu	.L2
  18                             		.loc 1 2182 0 is_stmt 0 discriminator 1
  19 0011 EC EE                   		mov.L	[r14], r14
  20 0013 59 EE 02                		movu.B	2[r14], r14
  21 0016 75 1E 19                		mul	#25, r14
  22 0019 47 E4                   		cmp	r14, r4
  23 001b 2B 13                   		ble	.L3
  24 001d 0D                      		bra	.L7
  25                             	.L9:
2183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		State5.max_speed_value= target-SPEEDY_STEP_WASH;
  26                             		.loc 1 2184 0 is_stmt 1
  27 001e 75 4E C8                		mov	#0xc8, r14
  28 0021 03                      		.balign 2,3,2
  29                             	.L7:
  30                             		.loc 1 2184 0 is_stmt 0 discriminator 3
  31 0022 FF 0E E1                		sub	r14, r1, r14
  32 0025 FB 42 00 00 00 00       		mov.L	#_State5, r4
  33 002b D3 4E                   		mov.W	r14, [r4]
  34 002d 03                      		.balign 2,3,5
  35                             	.L3:
2185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( State5.max_speed_value < MIN_SPEED_WASH )
  36                             		.loc 1 2186 0 is_stmt 1
  37 002e FB E2 00 00 00 00       		mov.L	#_State5, r14
  38 0034 5C E4                   		movu.W	[r14], r4
  39 0036 5F 33                   		movu.W	r3, r3
  40 0038 61 13                   		cmp	#1, r3
  41 003a 25 48                   		bleu	.L4
  42                             		.loc 1 2186 0 is_stmt 0 discriminator 1
  43 003c FB E2 00 00 00 00       		mov.L	#_Tab_SFT_MotorWash, r14
  44 0042 EC EE                   		mov.L	[r14], r14
  45 0044 59 EE 03                		movu.B	3[r14], r14
  46 0047 75 1E 19                		mul	#25, r14
  47 004a 47 E4                   		cmp	r14, r4
  48 004c 28 10                   		bge	.L5
  49 004e 0E                      		bra	.L8
  50                             	.L10:
2187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		State5.max_speed_value= MIN_SPEED_WASH;
  51                             		.loc 1 2188 0 is_stmt 1
  52 004f FB EA B0 04             		mov	#0x4b0, r14
  53 0053 03                      		.balign 2,3,5
  54                             	.L8:
  55                             		.loc 1 2188 0 is_stmt 0 discriminator 3
  56 0054 FB 42 00 00 00 00       		mov.L	#_State5, r4
  57 005a D3 4E                   		mov.W	r14, [r4]
  58                             		.balign 2,3,1
  59                             	.L5:
2189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}	
2190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #ifdef _STATISTICS_ON_
2191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if (( old_target!=State5.max_speed_value)&& (State5.max_speed_value!=0xFFFF))
  60                             		.loc 1 2191 0 is_stmt 1
  61 005c 5F 11                   		movu.W	r1, r1
  62 005e FB E2 00 00 00 00       		mov.L	#_State5, r14
  63 0064 5C EE                   		movu.W	[r14], r14
  64 0066 47 E1                   		cmp	r14, r1
  65 0068 20 22                   		beq	.L1
  66                             		.loc 1 2191 0 is_stmt 0 discriminator 1
  67 006a 77 0E FF FF 00          		cmp	#0xffff, r14
  68 006f 20 1B                   		beq	.L1
2192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	{
2193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		IncByteWithCheck(&MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].state5_reduction);
  69                             		.loc 1 2193 0 is_stmt 1
  70 0071 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+131, r1
  71                             	.LVL1:
  72 0077 04 00 00 00             		bra	_IncByteWithCheck
  73                             	.LVL2:
  74                             	.L2:
2182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( target > SPEEDY_STEP_WASH)
  75                             		.loc 1 2182 0
  76 007b 75 54 C8                		cmp	#0xc8, r4
  77 007e 2A A0                   		bgt	.L9
  78 0080 2E AE                   		bra	.L3
  79                             	.L4:
2186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( State5.max_speed_value < MIN_SPEED_WASH )
  80                             		.loc 1 2186 0
  81 0082 76 04 AF 04             		cmp	#0x4af, r4
  82 0086 2B C9                   		ble	.L10
  83 0088 2E D4                   		bra	.L5
  84                             	.L1:
  85 008a 02                      		rts
  86                             	.LFE21:
  88 008b 03                      		.section	.text.HIO_updateEngineData,"ax",@progbits
  89                             		.global	_HIO_updateEngineData
  91                             	_HIO_updateEngineData:
  92                             	.LFB1:
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {/* EA commentato*/
  93                             		.loc 1 390 0
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( ( HWC_Flags.bit.bldc ) || ( HWC_Flags.bit.bldc1 ) )
  94                             		.loc 1 392 0
  95 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
  96 0006 DC EE                   		mov.W	[r14], r14
  97 0008 76 2E 00 60             		and	#0x6000, r14
  98 000c 20 1A                   		beq	.L14
 394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		UseExternalInfo();
  99                             		.loc 1 394 0
 100 000e 05 00 00 00             		bsr	_UseExternalInfo
 101                             	.LVL3:
 395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		memcpy(ExtMotor_DataBuffer, ExternalGlobalData_0, IOM_EXTERNAL_0_GLOBALDATABUFFER_SIZE);
 102                             		.loc 1 395 0
 103 0012 FB 12 00 00 00 00       		mov.L	#_ExtMotor_DataBuffer, r1
 104 0018 FB 22 00 00 00 00       		mov.L	#_ExternalGlobalData_0, r2
 105 001e 66 C3                   		mov.L	#12, r3
 106 0020 7F 8F                   		smovf
 396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		UnuseExternalInfo();
 107                             		.loc 1 396 0
 108 0022 04 00 00 00             		bra	_UnuseExternalInfo
 109                             	.LVL4:
 110                             	.L14:
 111 0026 02                      		rts
 112                             	.LFE1:
 114                             		.section	.text.HIO_loadsReset,"ax",@progbits
 115                             		.global	_HIO_loadsReset
 117                             	_HIO_loadsReset:
 118                             	.LFB2:
 412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 119                             		.loc 1 412 0
 416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.alternate != 0 )
 120                             		.loc 1 416 0
 121 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 122 0006 DC E4                   		mov.W	[r14], r4
 123 0008 76 24 00 10             		and #0x1000, r4
 124 000c 5F 4E                   		movu.W	r4, r14
 125 000e 61 0E                   		cmp	#0, r14
 126 0010 20 14                   		beq	.L17
 418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		loadsReqNew_tmp = LoadsReq_New[Alt_Pos];
 127                             		.loc 1 418 0
 128 0012 FB E2 00 00 00 00       		mov.L	#_Alt_Pos, r14
 129 0018 58 EE                   		movu.B	[r14], r14
 130 001a FB 32 00 00 00 00       		mov.L	#_LoadsReq_New, r3
 131 0020 FE 4E 35                		mov.B	[r14,r3], r5
 132 0023 03                      		.balign 2,3,5
 133                             	.L17:
 423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	memset(&LoadsReq_New[0], 0, sizeof(LoadsReq_New));
 134                             		.loc 1 423 0
 135 0024 FB E2 00 00 00 00       		mov.L	#_LoadsReq_New, r14
 136 002a EF E1                   		mov.L	r14, r1
 137 002c 75 43 10                		mov.L	#16, r3
 138 002f 66 02                   		mov	#0, r2
 139 0031 7F 88                   		sstr.b
 426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.alternate != 0 )
 140                             		.loc 1 426 0
 141 0033 5F 44                   		movu.W	r4, r4
 142 0035 61 04                   		cmp	#0, r4
 143 0037 20 0D                   		beq	.L18
 433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_New[Alt_Pos] = loadsReqNew_tmp;
 144                             		.loc 1 433 0
 145 0039 FB 42 00 00 00 00       		mov.L	#_Alt_Pos, r4
 146 003f 58 44                   		movu.B	[r4], r4
 147                             	.LVL5:
 148 0041 FE 04 E5                		mov.B	r5, [r4,r14]
 149                             		.balign 2,3,5
 150                             	.L18:
 151                             	.LVL6:
 152                             	.LBB2:
 445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		memset(&BLDC_PumpReq_New[cnt], 0, sizeof(BLDC_PumpReq_New[0])); 
 153                             		.loc 1 445 0 discriminator 1
 154 0044 FB 12 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r1
 155 004a 66 C3                   		mov.L	#12, r3
 156 004c 66 02                   		mov	#0, r2
 157 004e 7F 88                   		sstr.b
 158                             	.LVL7:
 159 0050 FB 12 00 00 00 00       		mov.L	#_BLDC_PumpReq_New+12, r1
 160 0056 66 C3                   		mov.L	#12, r3
 161 0058 7F 88                   		sstr.b
 162                             	.LVL8:
 163                             	.LBE2:
 450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	LoadEVFltReq_New.b = 0;
 164                             		.loc 1 450 0 discriminator 1
 165 005a FB E2 00 00 00 00       		mov.L	#_LoadEVFltReq_New, r14
 166 0060 C3 E2                   		mov.B	r2, [r14]
 453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	DrainSftReq_New.b = 0;
 167                             		.loc 1 453 0 discriminator 1
 168 0062 FB E2 00 00 00 00       		mov.L	#_DrainSftReq_New, r14
 169 0068 C3 E2                   		mov.B	r2, [r14]
 170 006a 02                      		rts
 171                             	.LFE2:
 173 006b 03                      		.section	.text.HIO_ldPosInit,"ax",@progbits
 174                             		.global	_HIO_ldPosInit
 176                             	_HIO_ldPosInit:
 177                             	.LFB3:
 469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 178                             		.loc 1 469 0
 179 0000 6E 7C                   		pushm	r7-r12
 180                             	.LCFI0:
 474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Pump_Pos[LD_WASH_PUMP_IND] = NO_LD_POS;
 181                             		.loc 1 474 0
 182 0002 FB 72 00 00 00 00       		mov.L	#_Pump_Pos, r7
 183 0008 F8 74 FF                		mov.B	#-1, [r7]
 475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Pump_Pos[LD_DRAIN_PUMP_IND] = NO_LD_POS;
 184                             		.loc 1 475 0
 185 000b F9 74 01 FF             		mov.B	#-1, 1[r7]
 476:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Res_Pos[LD_WASH_RES_IND] = NO_LD_POS;
 186                             		.loc 1 476 0
 187 000f FB 72 00 00 00 00       		mov.L	#_Res_Pos, r7
 188 0015 F8 74 FF                		mov.B	#-1, [r7]
 477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Res_Pos[LD_DRY_RES_IND]  = NO_LD_POS;
 189                             		.loc 1 477 0
 190 0018 F9 74 01 FF             		mov.B	#-1, 1[r7]
 478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Res_Pos[LD_RESIN_RES_IND]  = NO_LD_POS;
 191                             		.loc 1 478 0
 192 001c F9 74 02 FF             		mov.B	#-1, 2[r7]
 479:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	EV_Pos[LD_WASH_EV_IND] = NO_LD_POS;
 193                             		.loc 1 479 0
 194 0020 FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 195 0026 F8 74 FF                		mov.B	#-1, [r7]
 480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	EV_Pos[LD_RIG_EV_IND] = NO_LD_POS;
 196                             		.loc 1 480 0
 197 0029 F9 74 01 FF             		mov.B	#-1, 1[r7]
 481:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	EV_Pos[LD_7LITER_EV_IND] = NO_LD_POS;
 198                             		.loc 1 481 0
 199 002d F9 74 03 FF             		mov.B	#-1, 3[r7]
 482:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Disp_Pos = NO_LD_POS;
 200                             		.loc 1 482 0
 201 0031 FB 72 00 00 00 00       		mov.L	#_Disp_Pos, r7
 202 0037 F8 74 FF                		mov.B	#-1, [r7]
 483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Alt_Pos = NO_LD_POS;
 203                             		.loc 1 483 0
 204 003a FB 72 00 00 00 00       		mov.L	#_Alt_Pos, r7
 205 0040 F8 74 FF                		mov.B	#-1, [r7]
 484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Fan_Pos[LD_DRY_FAN_IND] = NO_LD_POS;
 206                             		.loc 1 484 0
 207 0043 FB 72 00 00 00 00       		mov.L	#_Fan_Pos, r7
 208 0049 F8 74 FF                		mov.B	#-1, [r7]
 485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Fan_Pos[LD_RESIN_FAN_IND] = NO_LD_POS;
 209                             		.loc 1 485 0
 210 004c F9 74 01 FF             		mov.B	#-1, 1[r7]
 486:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Ozonator_Pos[LD_OZONATOR_IND]= NO_LD_POS;
 211                             		.loc 1 486 0
 212 0050 FB 72 00 00 00 00       		mov.L	#_Ozonator_Pos, r7
 213 0056 F8 74 FF                		mov.B	#-1, [r7]
 487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Ozonator_Pos[LD_AEROSOL_IND]= NO_LD_POS;
 214                             		.loc 1 487 0
 215 0059 F9 74 01 FF             		mov.B	#-1, 1[r7]
 488:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	Lamp_Pos= NO_LD_POS;
 216                             		.loc 1 488 0
 217 005d FB C2 00 00 00 00       		mov.L	#_Lamp_Pos, r12
 218 0063 F8 C4 FF                		mov.B	#-1, [r12]
 219                             	.LVL9:
 492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		RegDev_Pos[i] = NO_LD_POS;		
 220                             		.loc 1 492 0
 221 0066 FB 72 00 00 00 00       		mov.L	#_RegDev_Pos, r7
 222 006c F8 74 FF                		mov.B	#-1, [r7]
 223                             	.LVL10:
 224 006f F9 74 01 FF             		mov.B	#-1, 1[r7]
 225                             	.LVL11:
 226 0073 F9 74 02 FF             		mov.B	#-1, 2[r7]
 227                             	.LVL12:
 228 0077 F9 74 03 FF             		mov.B	#-1, 3[r7]
 229                             	.LVL13:
 230 007b F9 74 04 FF             		mov.B	#-1, 4[r7]
 231                             	.LVL14:
 232 007f F9 74 05 FF             		mov.B	#-1, 5[r7]
 233                             	.LVL15:
 234 0083 F9 74 06 FF             		mov.B	#-1, 6[r7]
 235                             	.LVL16:
 236 0087 66 07                   		mov	#0, r7
 502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		pId =(Id_Struct *)((uint8_t *)(Tab_OutputData.Data + (HIO_LOAD_DATA_SIZE_B * i)));
 237                             		.loc 1 502 0
 238 0089 FB A2 00 00 00 00       		mov.L	#_Tab_OutputData, r10
 506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		switch (pId->type)
 239                             		.loc 1 506 0
 240 008f FB B2 00 00 00 00       		mov.L	#.L37, r11
 241                             	.LVL17:
 242 0095 03                      		.balign 2,3,1
 243                             	.L40:
 502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		pId =(Id_Struct *)((uint8_t *)(Tab_OutputData.Data + (HIO_LOAD_DATA_SIZE_B * i)));
 244                             		.loc 1 502 0
 245 0096 5B 74                   		movu.B	r7, r4
 246 0098 6C 34                   		shll	#3, r4
 247 009a 06 88 A4                		add	[r10], r4
 248                             	.LVL18:
 504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		aux = pId->index;				
 249                             		.loc 1 504 0
 250 009d CC 4E                   		mov.B	[r4], r14
 251 009f 64 FE                   		and #15, r14
 252                             	.LVL19:
 506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		switch (pId->type)
 253                             		.loc 1 506 0
 254 00a1 58 44                   		movu.B	[r4], r4
 255                             	.LVL20:
 256 00a3 68 44                   		shlr	#4, r4
 257 00a5 61 F4                   		cmp	#15, r4
 258 00a7 25 05 38 B6 00          		bgtu	.L41
 259 00ac FE 64 B4                		mov.L	[r4,r11], r4
 260                             		
 261 00af 7F 04                   	1:jmp	r4
 262                             		.section	.rodata.HIO_ldPosInit,"a",@progbits
 263                             		.balign 4
 264                             		.balign 4
 265                             	.L37:
 266 0000 00 00 00 B1             		.long .L27
 267 0004 00 00 01 02             		.long .L28
 268 0008 00 00 01 0C             		.long .L29
 269 000c 00 00 01 16             		.long .L30
 270 0010 00 00 01 1E             		.long .L31
 271 0014 00 00 01 26             		.long .L32
 272 0018 00 00 01 33             		.long .L33
 273 001c 00 00 01 3D             		.long .L34
 274 0020 00 00 01 41             		.long .L35
 275 0024 00 00 01 5F             		.long .L41
 276 0028 00 00 01 5F             		.long .L41
 277 002c 00 00 01 5F             		.long .L41
 278 0030 00 00 01 5F             		.long .L41
 279 0034 00 00 01 5F             		.long .L41
 280 0038 00 00 01 5F             		.long .L41
 281 003c 00 00 01 4C             		.long .L36
 282                             		.section	.text.HIO_ldPosInit
 283                             	.L27:
 511:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    Pump_Pos[aux] = i;
 284                             		.loc 1 511 0
 285 00b1 FB 42 00 00 00 00       		mov.L	#_Pump_Pos, r4
 286 00b7 5B EE                   		movu.B	r14, r14
 287 00b9 FF 23 4E                		add	r4, r14, r3
 288 00bc C3 37                   		mov.B	r7, [r3]
 519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             if ( (aux == LD_WASH_PUMP_IND)&&  ( HWC_Flags.bit.bldc || HWC_Flags.bit.bldc1 ))
 289                             		.loc 1 519 0
 290 00be 61 0E                   		cmp	#0, r14
 291 00c0 21 1C                   		bne	.L38
 519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             if ( (aux == LD_WASH_PUMP_IND)&&  ( HWC_Flags.bit.bldc || HWC_Flags.bit.bldc1 ))
 292                             		.loc 1 519 0 is_stmt 0 discriminator 1
 293 00c2 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 294                             	.LVL21:
 295 00c8 DC EE                   		mov.W	[r14], r14
 296 00ca 76 2E 00 60             		and	#0x6000, r14
 297 00ce 20 7E                   		beq	.L36
 523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)LIB_IOM_External_New ( &BLDC_Pump_InfoBuffer[WASH_BLDC_PUMP][0], (uint8_t)IOM_EXTERNAL_0_
 298                             		.loc 1 523 0 is_stmt 1
 299 00d0 FB 12 00 00 00 00       		mov.L	#_BLDC_Pump_InfoBuffer, r1
 300 00d6 66 C2                   		mov	#12, r2
 301 00d8 CC 43                   		mov.B	[r4], r3
 302                             	.LVL22:
 303 00da 2E 22                   		bra	.L52
 304                             	.L38:
 525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if((aux == LD_DRAIN_PUMP_IND)&&  ( HWC_Flags.bit.bldc_drain!=0) )
 305                             		.loc 1 525 0
 306 00dc 61 1E                   		cmp	#1, r14
 307 00de 21 6E                   		bne	.L36
 525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if((aux == LD_DRAIN_PUMP_IND)&&  ( HWC_Flags.bit.bldc_drain!=0) )
 308                             		.loc 1 525 0 is_stmt 0 discriminator 1
 309 00e0 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 310 00e6 DC EE                   		mov.W	[r14], r14
 311 00e8 76 2E 00 02             		and #0x200, r14
 312 00ec 5F EE                   		movu.W	r14, r14
 313 00ee 61 0E                   		cmp	#0, r14
 314 00f0 20 5C                   		beq	.L36
 528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    (void)LIB_IOM_External_New ( &BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][0], IOM_EXTERNAL_0_INFOB
 315                             		.loc 1 528 0 is_stmt 1
 316 00f2 FB 12 00 00 00 00       		mov.L	#_BLDC_Pump_InfoBuffer+12, r1
 317 00f8 66 C2                   		mov	#12, r2
 318 00fa 88 4B                   		mov.B	1[r4], r3
 319                             		.balign 2,3,3
 320                             	.L52:
 321 00fc 05 00 00 00             		bsr	_LIB_IOM_External_New
 322                             	.LVL23:
 323 0100 2E 4C                   		bra	.L36
 324                             	.LVL24:
 325                             	.L28:
 535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Res_Pos[aux] = i;
 326                             		.loc 1 535 0
 327 0102 5B EE                   		movu.B	r14, r14
 328 0104 FB 42 00 00 00 00       		mov.L	#_Res_Pos, r4
 329 010a 2E 24                   		bra	.L50
 330                             	.L29:
 541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				EV_Pos[aux] = i;
 331                             		.loc 1 541 0
 332 010c 5B EE                   		movu.B	r14, r14
 333 010e 70 EE 00 00 00 00       		add	#_EV_Pos, r14
 334                             	.LVL25:
 335 0114 2E 36                   		bra	.L51
 336                             	.LVL26:
 337                             	.L30:
 547:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Disp_Pos = i;
 338                             		.loc 1 547 0
 339 0116 FB E2 00 00 00 00       		mov.L	#_Disp_Pos, r14
 340                             	.LVL27:
 341 011c 2E 2E                   		bra	.L51
 342                             	.LVL28:
 343                             	.L31:
 553:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Alt_Pos = i;
 344                             		.loc 1 553 0
 345 011e FB E2 00 00 00 00       		mov.L	#_Alt_Pos, r14
 346                             	.LVL29:
 347 0124 2E 26                   		bra	.L51
 348                             	.LVL30:
 349                             	.L32:
 559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				RegDev_Pos[aux] = i;
 350                             		.loc 1 559 0
 351 0126 5B EE                   		movu.B	r14, r14
 352 0128 FB 42 00 00 00 00       		mov.L	#_RegDev_Pos, r4
 353                             	.LVL31:
 354                             		.balign 2,3,5
 355                             	.L50:
 356 012e FE 0E 47                		mov.B	r7, [r14,r4]
 561:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 357                             		.loc 1 561 0
 358 0131 2E 1B                   		bra	.L36
 359                             	.LVL32:
 360                             	.L33:
 564:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Fan_Pos[aux] = i;
 361                             		.loc 1 564 0
 362 0133 5B EE                   		movu.B	r14, r14
 363 0135 70 EE 00 00 00 00       		add	#_Fan_Pos, r14
 364                             	.LVL33:
 365 013b 2E 0F                   		bra	.L51
 366                             	.LVL34:
 367                             	.L34:
 570:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Lamp_Pos = i;
 368                             		.loc 1 570 0
 369 013d C3 C7                   		mov.B	r7, [r12]
 572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 370                             		.loc 1 572 0
 371 013f 2E 0D                   		bra	.L36
 372                             	.L35:
 580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				Ozonator_Pos[aux]=i;
 373                             		.loc 1 580 0
 374 0141 5B EE                   		movu.B	r14, r14
 375 0143 70 EE 00 00 00 00       		add	#_Ozonator_Pos, r14
 376                             	.LVL35:
 377 0149 03                      		.balign 2,3,1
 378                             	.L51:
 379 014a C3 E7                   		mov.B	r7, [r14]
 380                             	.LVL36:
 381                             		.balign 2,3,1
 382                             	.L36:
 590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		i++;	/*campo dati per ogni carico = 8 byte*/
 383                             		.loc 1 590 0
 384 014c 62 17                   		add	#1, r7
 385                             	.LVL37:
 592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	} while(i<(Tab_OutputData.DataLenght/4));/*IO_MANAGER_LOAD_TABLE_ITEM_SIZE));*/
 386                             		.loc 1 592 0
 387 014e 5D AE 02                		movu.W	4[r10], r14
 388 0151 5B 74                   		movu.B	r7, r4
 389 0153 68 2E                   		shlr	#2, r14
 390 0155 47 E4                   		cmp	r14, r4
 391 0157 22 05 38 3D FF          		bltu	.L40
 595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return S_OK;
 392                             		.loc 1 595 0
 393 015c 66 01                   		mov	#0, r1
 394 015e 0C                      		bra	.L26
 395                             	.LVL38:
 396                             	.L41:
 585:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				return HIO_ERR_OUT_NOT_FOUND;
 397                             		.loc 1 585 0
 398 015f FB 16 A9                		mov	#0xffffffa9, r1
 399                             	.LVL39:
 400                             		.balign 2,3,3
 401                             	.L26:
 596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 402                             		.loc 1 596 0
 403 0162 76 21 A9 00             		and #0xa9, r1
 404 0166 3F 7C 06                		rtsd	#24, r7-r12
 405                             	.LFE3:
 407 0169 03                      		.section	.text.HIO_saltCriterionRegMgmt,"ax",@progbits
 408                             		.global	_HIO_saltCriterionRegMgmt
 410                             	_HIO_saltCriterionRegMgmt:
 411                             	.LFB4:
 609:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 412                             		.loc 1 609 0
 611:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if (HWC_Flags.bit.saltreed)
 413                             		.loc 1 611 0
 414 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 415 0006 DC EE                   		mov.W	[r14], r14
 416 0008 64 2E                   		and #2, r14
 417 000a 5F EE                   		movu.W	r14, r14
 418 000c 61 0E                   		cmp	#0, r14
 419 000e 20 59                   		beq	.L53
 614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( TESTBIT (GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) )!=0 )	
 420                             		.loc 1 614 0
 421 0010 FB E2 00 00 00 00       		mov.L	#_GIValid, r14
 422 0016 DC EE                   		mov.W	[r14], r14
 423 0018 64 8E                   		and #8, r14
 424 001a 5F EE                   		movu.W	r14, r14
 425 001c 61 0E                   		cmp	#0, r14
 426 001e 20 49                   		beq	.L53
 617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( TESTBIT(GICriteria, GI_SALT_IND) == 0 )
 427                             		.loc 1 617 0
 428 0020 FB E2 00 00 00 00       		mov.L	#_GICriteria, r14
 429 0026 CC E4                   		mov.B [r14], r4
 430 0028 64 84                   		and #8, r4
 431 002a FB E2 00 00 00 00       		mov.L	#_GICriteriaOld, r14
 432 0030 61 04                   		cmp	#0, r4
 433 0032 21 1C                   		bne	.L57
 621:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				NoSalt_Reg = TRUE; /* LO RIBADISCO SEMPRE */
 434                             		.loc 1 621 0
 435 0034 FB 42 00 00 00 00       		mov.L	#_NoSalt_Reg, r4
 436 003a 3C 40 01                		mov.B	#1, [r4]
 623:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( TESTBIT(GICriteriaOld, GI_SALT_IND) != 0)
 437                             		.loc 1 623 0
 438 003d CC EE                   		mov.B [r14], r14
 439 003f 64 8E                   		and #8, r14
 440 0041 20 26                   		beq	.L53
 630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					uP_Regenerate_Data.nReg = 1;
 441                             		.loc 1 630 0
 442 0043 FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
 443 0049 F9 E4 07 01             		mov.B	#1, 7[r14]
 444 004d 02                      		rts
 445                             	.L57:
 637:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( TESTBIT(GICriteriaOld, GI_SALT_IND) == 0 ) 
 446                             		.loc 1 637 0
 447 004e CC EE                   		mov.B [r14], r14
 448 0050 64 8E                   		and #8, r14
 449 0052 21 0C                   		bne	.L58
 644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					uP_Regenerate_Data.forceReg_cnt = 1;
 450                             		.loc 1 644 0
 451 0054 FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
 452 005a F9 E4 06 01             		mov.B	#1, 6[r14]
 453                             		.balign 2,3,5
 454                             	.L58:
 647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				NoSalt_Reg = FALSE; 
 455                             		.loc 1 647 0
 456 005e FB E2 00 00 00 00       		mov.L	#_NoSalt_Reg, r14
 457 0064 F8 E4 00                		mov.B	#0, [r14]
 458                             	.L53:
 459 0067 02                      		rts
 460                             	.LFE4:
 462                             		.section	.text.HIO_gICriteriaOld_Update,"ax",@progbits
 463                             		.global	_HIO_gICriteriaOld_Update
 465                             	_HIO_gICriteriaOld_Update:
 466                             	.LFB5:
 666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 467                             		.loc 1 666 0
 668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   GICriteriaOld = GICriteria; /*FATTO IN OGNI CASO O CONTROLLANDO GIVALID???*/
 468                             		.loc 1 668 0
 469 0000 FB 42 00 00 00 00       		mov.L	#_GICriteria, r4
 470 0006 FB E2 00 00 00 00       		mov.L	#_GICriteriaOld, r14
 471 000c C0 4E                   		mov.B	[r4], [r14]
 472 000e 02                      		rts
 473                             	.LFE5:
 475                             		.section	.text.HIO_consistencyManagement,"ax",@progbits
 476                             		.global	_HIO_consistencyManagement
 478                             	_HIO_consistencyManagement:
 479                             	.LFB7:
1148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 480                             		.loc 1 1148 0
1149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	PM_Consistency_GetAllCsValues(&Consistency_Current[0]);
 481                             		.loc 1 1149 0
 482 0000 FB 12 00 00 00 00       		mov.L	#_Consistency_Current, r1
 483 0006 04 00 00 00             		bra	_PM_Consistency_GetAllCsValues
 484                             	.LVL40:
 485                             	.LFE7:
 487                             		.section	.text.HIO_GIScaleConv,"ax",@progbits
 488                             		.global	_HIO_GIScaleConv
 490                             	_HIO_GIScaleConv:
 491                             	.LFB9:
1320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 492                             		.loc 1 1320 0
 493                             	.LVL41:
 494 0000 6E 7B                   		pushm	r7-r11
 495                             	.LCFI1:
 496 0002 60 80                   		sub	#8, r0
 497                             	.LCFI2:
 498 0004 EF 1A                   		mov.L	r1, r10
 499 0006 EF 2B                   		mov.L	r2, r11
1324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( BasicLoader( APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
 500                             		.loc 1 1324 0
 501 0008 B0 92                   		movu.B	2[r1], r2
 502                             	.LVL42:
 503 000a 75 41 21                		mov	#33, r1
 504                             	.LVL43:
 505 000d EF 03                   		mov.L	r0, r3
 506 000f 05 00 00 00             		bsr	_BasicLoader
 507                             	.LVL44:
 508 0013 5B 17                   		movu.B	r1, r7
 509 0015 61 07                   		cmp	#0, r7
 510 0017 21 23                   		bne	.L69
1330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if (pGI->readType == PULSECNTR_I)
 511                             		.loc 1 1330 0
 512 0019 CC AA                   		mov.B	[r10], r10
 513                             	.LVL45:
 514 001b 76 2A F0 00             		and #0xf0, r10
 515 001f 75 5A B0                		cmp	#0xb0, r10
 516 0022 21 1C                   		bne	.L70
1334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		FlowMeterDivider = OFFS_B(table.Data,0);
 517                             		.loc 1 1334 0
 518 0024 FB A2 00 00 00 00       		mov.L	#_FlowMeterDivider, r10
 519 002a EC 0E                   		mov.L	[r0], r14
 520 002c C0 EA                   		mov.B	[r14], [r10]
1336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		*pResult = PM_PulseCounter_GetCount()/FlowMeterDivider;
 521                             		.loc 1 1336 0
 522 002e 05 00 00 00             		bsr	_PM_PulseCounter_GetCount
 523                             	.LVL46:
 524 0032 5F 11                   		movu.W	r1, r1
 525 0034 FC 20 A1                		div	[r10].UB, r1
 526 0037 D3 B1                   		mov.W	r1, [r11]
 527 0039 0D                      		bra	.L70
 528                             	.LVL47:
 529                             	.L69:
1326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
 530                             		.loc 1 1326 0
 531 003a FB 16 A8                		mov	#0xffffffa8, r1
 532 003d 0B                      		bra	.L68
 533                             	.LVL48:
 534                             	.L70:
1340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return S_OK;
 535                             		.loc 1 1340 0
 536 003e CF 71                   		mov.B	r7, r1
 537                             		.balign 2,3,1
 538                             	.L68:
1341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 539                             		.loc 1 1341 0
 540 0040 5B 11                   		movu.B	r1, r1
 541 0042 3F 7B 07                		rtsd	#28, r7-r11
 542                             	.LFE9:
 544 0045 03                      		.section	.text.HIO_GIGetCriterionDigitalTable,"ax",@progbits
 545                             		.global	_HIO_GIGetCriterionDigitalTable
 547                             	_HIO_GIGetCriterionDigitalTable:
 548                             	.LFB10:
1367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 549                             		.loc 1 1367 0
1370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(pGI->id.s.type != GI_CRITERION_TYPE) 
 550                             		.loc 1 1370 0
 551 0000 CD 1E 01                		mov.B	1[r1], r14
 552 0003 76 2E F0 00             		and #0xf0, r14
 553 0007 75 5E 20                		cmp	#32, r14
 554 000a 21 29                   		bne	.L74
1375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(pGI->readType != DIGITAL_I) 
 555                             		.loc 1 1375 0
 556 000c CC 1E                   		mov.B	[r1], r14
 557 000e 76 2E F0 00             		and	#0xf0, r14
 558 0012 21 21                   		bne	.L74
1367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 559                             		.loc 1 1367 0
 560 0014 7E A7                   		push.l	r7
 561                             	.LCFI3:
 562 0016 60 80                   		sub	#8, r0
 563                             	.LCFI4:
 564 0018 EF 27                   		mov.L	r2, r7
1381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if( BasicLoader( APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
 565                             		.loc 1 1381 0
 566 001a B0 92                   		movu.B	2[r1], r2
 567 001c 75 41 21                		mov	#33, r1
 568 001f EF 03                   		mov.L	r0, r3
 569 0021 05 00 00 00             		bsr	_BasicLoader
 570 0025 5B 11                   		movu.B	r1, r1
 571 0027 61 01                   		cmp	#0, r1
 572 0029 21 10                   		bne	.L76
1386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	*pTable = table; /* QI 06.11.09 correzione baco */
 573                             		.loc 1 1386 0
 574 002b E0 07                   		mov.L	[r0], [r7]
 575 002d E5 07 01 01             		mov.L	4[r0], 4[r7]
 576 0031 2E 0B                   		bra	.L73
 577                             	.L74:
 578                             	.LCFI5:
1372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         return HIO_ERR_ARG_NOT_SUPPORTED;
 579                             		.loc 1 1372 0
 580 0033 FB 16 AA                		mov	#0xffffffaa, r1
1390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 581                             		.loc 1 1390 0
 582 0036 5B 11                   		movu.B	r1, r1
 583 0038 02                      		rts
 584                             	.L76:
 585                             	.LCFI6:
1383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
 586                             		.loc 1 1383 0
 587 0039 FB 16 A8                		mov	#0xffffffa8, r1
 588                             		.balign 2,3,1
 589                             	.L73:
1390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 590                             		.loc 1 1390 0
 591 003c 5B 11                   		movu.B	r1, r1
 592 003e 3F 77 03                		rtsd	#12, r7-r7
 593                             	.LFE10:
 595 0041 03                      		.section	.text.HIO_trbProcessSmpl,"ax",@progbits
 596                             		.global	_HIO_trbProcessSmpl
 598                             	_HIO_trbProcessSmpl:
 599                             	.LFB11:
1410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 600                             		.loc 1 1410 0
 601                             	.LVL49:
 602 0000 7E A7                   		push.l	r7
 603                             	.LCFI7:
 604                             	.LVL50:
1414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   if(TurbidityReads.nSamples==0) 
 605                             		.loc 1 1414 0
 606 0002 FB E2 00 00 00 00       		mov.L	#_TurbidityReads, r14
 607 0008 59 E3 06                		movu.B	6[r14], r3
 608 000b 61 03                   		cmp	#0, r3
 609 000d 3B AD 00                		bne	.L88
1418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.pReadings=p_samples;
 610                             		.loc 1 1418 0
 611 0010 E7 E2 03                		mov.L	r2, 12[r14]
1419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.nSamples=*TurbidityReads.pReadings;
 612                             		.loc 1 1419 0
 613 0013 CC 24                   		mov.B	[r2], r4
 614 0015 C7 E4 06                		mov.B	r4, 6[r14]
1421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(TurbidityReads.flags.b.SampleInit==1)
 615                             		.loc 1 1421 0
 616 0018 ED E2 02                		mov.L	8[r14], r2
 617                             	.LVL51:
 618 001b 76 22 00 04             		and	#0x400, r2
 619 001f 20 0F                   		beq	.L81
1423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			TurbidityReads.flags.b.SampleInit=0;
 620                             		.loc 1 1423 0
 621 0021 CD E4 0A                		mov.B	10[r14], r4
 622 0024 7A 24                   		bclr	#2, r4
 623 0026 C7 E4 0A                		mov.B	r4, 10[r14]
1424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			return FALSE;
 624                             		.loc 1 1424 0
 625 0029 CF 3E                   		mov.B	r3, r14
 626                             	.LVL52:
 627 002b 38 A7 00                		bra	.L82
 628                             	.LVL53:
 629                             	.L81:
1427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(!TurbidityReads.nSamples)
 630                             		.loc 1 1427 0
 631 002e 5B 44                   		movu.B	r4, r4
 632 0030 61 04                   		cmp	#0, r4
 633 0032 3A 9E 00                		beq	.L89
1432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     adval=TurbidityReads.a/TurbidityReads.nSamples;
 634                             		.loc 1 1432 0
 635 0035 EC E3                   		mov.L	[r14], r3
 636 0037 FC 27 43                		divu	r4, r3
1433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.ADvalue=adval;
 637                             		.loc 1 1433 0
 638 003a D7 E3 02                		mov.W	r3, 4[r14]
1436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if(TurbiditySensorCal.adH2oRef)
 639                             		.loc 1 1436 0
 640 003d FB F2 00 00 00 00       		mov.L	#_TurbiditySensorCal, r15
 641 0043 DD F5 01                		mov.W	2[r15], r5
 642 0046 5F 54                   		movu.W	r5, r4
 643 0048 61 04                   		cmp	#0, r4
 644 004a 20 50                   		beq	.L83
1439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(TurbiditySensorCal.adH2oRef + (uint16_t)TurbiditySensorCal.adH2oRefDelta <= TurbidityReads.ADv
 645                             		.loc 1 1439 0
 646 004c 59 F7 08                		movu.B	8[r15], r7
 647 004f 4B 47                   		add	r4, r7
1409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t HIO_trbProcessSmpl(uint16_t trbsample, uint8_t * p_samples) 
 648                             		.loc 1 1409 0
 649 0051 EF 3F                   		mov.L	r3, r15
 650 0053 77 2F FF FF 00          		and #0xffff, r15
1439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(TurbiditySensorCal.adH2oRef + (uint16_t)TurbiditySensorCal.adH2oRefDelta <= TurbidityReads.ADv
 651                             		.loc 1 1439 0
 652 0058 47 F7                   		cmp	r15, r7
 653 005a 2A 11                   		bgt	.L84
1441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        TurbidityReads.ADvalue=0;
 654                             		.loc 1 1441 0
 655 005c D7 E2 02                		mov.W	r2, 4[r14]
1442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        TurbidityReads.flags.b.AdTooLarge=1;
 656                             		.loc 1 1442 0
 657 005f CD E3 0A                		mov.B	10[r14], r3
 658 0062 78 03                   		bset	#0, r3
 659 0064 C7 E3 0A                		mov.B	r3, 10[r14]
 660                             	.LVL54:
1443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        adval=0;
 661                             		.loc 1 1443 0
 662 0067 DF 23                   		mov.W	r2, r3
 663 0069 2E 13                   		bra	.L85
 664                             	.LVL55:
 665                             	.L84:
1447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        TurbidityReads.flags.b.AdTooLarge=0;
 666                             		.loc 1 1447 0
 667 006b CD E2 0A                		mov.B	10[r14], r2
 668 006e 7A 02                   		bclr	#0, r2
 669 0070 C7 E2 0A                		mov.B	r2, 10[r14]
 670 0073 5F 3E                   		movu.W	r3, r14
 671                             	.LVL56:
 672 0075 47 4E                   		cmp	r4, r14
 673 0077 25 05                   		bleu	.L85
 674 0079 DF 53                   		mov.W	r5, r3
 675 007b 03                      		.balign 2,3,5
 676                             	.L85:
 677                             	.LVL57:
1455:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.perc=(uint16_t)100*(TurbiditySensorCal.adH2oRef- adval)/TurbiditySensorCal.a
 678                             		.loc 1 1455 0
 679 007c FB 52 00 00 00 00       		mov.L	#_TurbidityReads, r5
 680 0082 5F 33                   		movu.W	r3, r3
 681 0084 FF 0E 34                		sub	r3, r4, r14
 682 0087 75 1E 64                		mul	#0x64, r14
 683 008a FC 23 4E                		div	r4, r14
 684 008d C7 5E 09                		mov.B	r14, 9[r5]
1456:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.flags.b.H2ORefNull=0;
 685                             		.loc 1 1456 0
 686 0090 CD 5E 0A                		mov.B	10[r5], r14
 687 0093 7A 1E                   		bclr	#1, r14
 688 0095 C7 5E 0A                		mov.B	r14, 10[r5]
 689 0098 2E 0E                   		bra	.L87
 690                             	.LVL58:
 691                             	.L83:
1460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.perc=100;
 692                             		.loc 1 1460 0
 693 009a F9 E4 09 64             		mov.B	#0x64, 9[r14]
1461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         TurbidityReads.flags.b.H2ORefNull=1;
 694                             		.loc 1 1461 0
 695 009e CD E4 0A                		mov.B	10[r14], r4
 696 00a1 78 14                   		bset	#1, r4
 697 00a3 C7 E4 0A                		mov.B	r4, 10[r14]
 698                             	.LVL59:
 699                             		.balign 2,3,5
 700                             	.L87:
1466:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	TurbidityReads.id++;
 701                             		.loc 1 1466 0
 702 00a6 FB E2 00 00 00 00       		mov.L	#_TurbidityReads, r14
 703 00ac CD E4 08                		mov.B	8[r14], r4
 704 00af 62 14                   		add	#1, r4
 705 00b1 C7 E4 08                		mov.B	r4, 8[r14]
 706                             	.LVL60:
1470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TurbidityReads.a=0;
 707                             		.loc 1 1470 0
 708 00b4 F8 E6 00                		mov.L	#0, [r14]
1467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	retval=TRUE;
 709                             		.loc 1 1467 0
 710 00b7 66 1E                   		mov	#1, r14
 711 00b9 0B                      		bra	.L80
 712                             	.LVL61:
 713                             	.L88:
1411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t retval=FALSE;
 714                             		.loc 1 1411 0
 715 00ba 66 0E                   		mov	#0, r14
 716                             	.LVL62:
 717                             		.balign 2,3,5
 718                             	.L80:
1474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   TurbidityReads.nSamples--;
 719                             		.loc 1 1474 0
 720 00bc FB 42 00 00 00 00       		mov.L	#_TurbidityReads, r4
 721 00c2 89 C3                   		mov.B	6[r4], r3
 722 00c4 60 13                   		sub	#1, r3
 723 00c6 81 C3                   		mov.B	r3, 6[r4]
1475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   TurbidityReads.a+=trbsample;
 724                             		.loc 1 1475 0
 725 00c8 5F 11                   		movu.W	r1, r1
 726 00ca 06 88 41                		add	[r4].L, r1
 727                             	.LVL63:
 728 00cd E3 41                   		mov.L	r1, [r4]
1477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   return retval;
 729                             		.loc 1 1477 0
 730 00cf 0B                      		bra	.L82
 731                             	.LVL64:
 732                             	.L89:
1429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****       return FALSE;
 733                             		.loc 1 1429 0
 734 00d0 CF 4E                   		mov.B	r4, r14
 735                             	.LVL65:
 736                             		.balign 2,3,1
 737                             	.L82:
1478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 738                             		.loc 1 1478 0
 739 00d2 5B E1                   		movu.B	r14, r1
 740 00d4 3F 77 01                		rtsd	#4, r7-r7
 741                             	.LFE11:
 743 00d7 03                      		.section	.text.HIO_GIConv,"ax",@progbits
 744                             		.global	_HIO_GIConv
 746                             	_HIO_GIConv:
 747                             	.LFB8:
1185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 748                             		.loc 1 1185 0
 749                             	.LVL66:
 750 0000 6E 7B                   		pushm	r7-r11
 751                             	.LCFI8:
 752 0002 71 00 E8                		add	#-24, r0
 753                             	.LCFI9:
 754 0005 EF 1A                   		mov.L	r1, r10
 755 0007 EF 2B                   		mov.L	r2, r11
 756                             	.LVL67:
1194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( BasicLoader( (settingPntr_t)APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
 757                             		.loc 1 1194 0
 758 0009 B0 92                   		movu.B	2[r1], r2
 759                             	.LVL68:
 760 000b 75 41 21                		mov	#33, r1
 761                             	.LVL69:
 762 000e EF 03                   		mov.L	r0, r3
 763 0010 05 00 00 00             		bsr	_BasicLoader
 764                             	.LVL70:
 765 0014 5B 11                   		movu.B	r1, r1
 766 0016 61 01                   		cmp	#0, r1
 767 0018 3B DA 00                		bne	.L103
1199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if (pGI->readType == ANALOG_I)
 768                             		.loc 1 1199 0
 769 001b CC A7                   		mov.B	[r10], r7
 770 001d 76 27 F0 00             		and #0xf0, r7
 771 0021 75 57 10                		cmp	#16, r7
 772 0024 18                      		bne	.L93
1201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     	value = LIB_ADC_GetAnalogValue (pGI->pos);
 773                             		.loc 1 1201 0
 774 0025 CD A1 03                		mov.B	3[r10], r1
 775 0028 05 00 00 00             		bsr	_LIB_ADC_GetAnalogValue
 776                             	.LVL71:
 777                             		.balign 2,3,5
 778                             	.L93:
1204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if (pGI->readType == TURBIDITY_I)
 779                             		.loc 1 1204 0
 780 002c CC A7                   		mov.B	[r10], r7
 781 002e 76 27 F0 00             		and #0xf0, r7
 782 0032 75 57 C0                		cmp	#0xc0, r7
 783 0035 21 51                   		bne	.L94
1207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         value = LIB_ADC_GetAnalogValue (pGI->pos);
 784                             		.loc 1 1207 0
 785 0037 CD A1 03                		mov.B	3[r10], r1
 786                             	.LVL72:
 787 003a 05 00 00 00             		bsr	_LIB_ADC_GetAnalogValue
 788                             	.LVL73:
1210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         pSamples=( (uint8_t*)table.Data + sizeof(TabHeader_t) + (((TabHeader_t *)table.Data)->point
 789                             		.loc 1 1210 0
 790 003e EC 05                   		mov.L	[r0], r5
 791 0040 88 5C                   		mov.B	1[r5], r4
 792 0042 5B 4F                   		movu.B	r4, r15
 793 0044 58 57                   		movu.B	[r5], r7
 794 0046 FD 81 7E                		shlr	#1, r7, r14
 795 0049 64 1E                   		and #1, r14
 796 004b EF F3                   		mov.L	r15, r3
 797 004d FD 62 E3                		shll	r14, r3
 798 0050 62 23                   		add	#2, r3
 799 0052 4B 53                   		add	r5, r3
 800                             	.LVL74:
1213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if((( ((TabHeader_t *)table.Data)->S1 & GI_WORD ) == GI_BYTE) && (((TabHeader_t *)table.Dat
 801                             		.loc 1 1213 0
 802 0054 61 0E                   		cmp	#0, r14
 803 0056 18                      		bne	.L95
1213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if((( ((TabHeader_t *)table.Data)->S1 & GI_WORD ) == GI_BYTE) && (((TabHeader_t *)table.Dat
 804                             		.loc 1 1213 0 is_stmt 0 discriminator 1
 805 0057 FD 74 C4 01             		tst	#1, r4
 806 005b 13                      		beq	.L95
1215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             pSamples++;
 807                             		.loc 1 1215 0 is_stmt 1
 808 005c 62 13                   		add	#1, r3
 809                             	.LVL75:
 810                             		.balign 2,3,1
 811                             	.L95:
1218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         pSamples+=(((TabHeader_t *)table.Data)->pointNumber<<(((TabHeader_t *)table.Data)->S2&GI_WO
 812                             		.loc 1 1218 0
 813 005e 68 37                   		shlr	#3, r7
 814 0060 64 17                   		and #1, r7
 815 0062 EF F2                   		mov.L	r15, r2
 816 0064 FD 62 72                		shll	r7, r2
 817 0067 4B 32                   		add	r3, r2
 818                             	.LVL76:
1219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if(((((TabHeader_t *)table.Data)->S2&GI_WORD) == GI_BYTE) && (((TabHeader_t *)table.Data)->
 819                             		.loc 1 1219 0
 820 0069 61 07                   		cmp	#0, r7
 821 006b 19                      		bne	.L96
1219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if(((((TabHeader_t *)table.Data)->S2&GI_WORD) == GI_BYTE) && (((TabHeader_t *)table.Data)->
 822                             		.loc 1 1219 0 is_stmt 0 discriminator 1
 823 006c FD 74 C4 01             		tst	#1, r4
 824 0070 14                      		beq	.L96
1221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****             pSamples++;
 825                             		.loc 1 1221 0 is_stmt 1
 826 0071 62 12                   		add	#1, r2
 827                             	.LVL77:
 828 0073 03                      		.balign 2,3,3
 829                             	.L96:
1224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         if(!HIO_trbProcessSmpl(value, pSamples))
 830                             		.loc 1 1224 0
 831 0074 05 00 00 00             		bsr	_HIO_trbProcessSmpl
 832                             	.LVL78:
 833 0078 76 21 FF 00             		and #0xff, r1
 834 007c 20 7A                   		beq	.L105
1229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****         value=TurbidityReads.perc;    
 835                             		.loc 1 1229 0
 836 007e FB 72 00 00 00 00       		mov.L	#_TurbidityReads, r7
 837 0084 B2 79                   		movu.B	9[r7], r1
 838                             	.LVL79:
 839                             		.balign 2,3,2
 840                             	.L94:
1233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     qin.cfr_val=value;
 841                             		.loc 1 1233 0
 842 0086 71 07 0D                		add	#13, r0, r7
 843 0089 D3 71                   		mov.W	r1, [r7]
1234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     qin.opt.all=0;
 844                             		.loc 1 1234 0
 845 008b 3C 08 00                		mov.B	#0, 8[r0]
1235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     qin.tab=(TabHeader_t *)table.Data;
 846                             		.loc 1 1235 0
 847 008e 71 07 09                		add	#9, r0, r7
 848 0091 E0 07                   		mov.L	[r0], [r7]
1237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     TabQuery(&qin, &qresult);
 849                             		.loc 1 1237 0
 850 0093 71 07 0F                		add	#15, r0, r7
 851 0096 71 01 08                		add	#8, r0, r1
 852                             	.LVL80:
 853 0099 EF 72                   		mov.L	r7, r2
 854 009b 05 00 00 00             		bsr	_TabQuery
 855                             	.LVL81:
1242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( (pGI->id.s.type == GI_CRITERION_TYPE) ) 
 856                             		.loc 1 1242 0
 857 009f CD AE 01                		mov.B	1[r10], r14
 858 00a2 76 2E F0 00             		and #0xf0, r14
 859 00a6 75 5E 20                		cmp	#32, r14
 860 00a9 21 0D                   		bne	.L97
1244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  if(qresult.b.ubound) 
 861                             		.loc 1 1244 0
 862 00ab 89 71                   		mov.B	4[r7], r1
 863 00ad 64 11                   		and	#1, r1
 864 00af 13                      		beq	.L98
 865 00b0 2E 1D                   		bra	.L100
 866                             	.L98:
1249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    *pResult = qresult.data;
 867                             		.loc 1 1249 0
 868 00b2 D0 7B                   		mov.W	[r7], [r11]
 869 00b4 2E 44                   		bra	.L92
 870                             	.L97:
1257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(qresult.b.lbound)
 871                             		.loc 1 1257 0
 872 00b6 89 79                   		mov.B 5[r7], r1
 873 00b8 76 21 80 00             		and #0x80, r1
 874 00bc 20 18                   		beq	.L99
1261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			*pResult = GIVALUE_UNDEF_MIN;
 875                             		.loc 1 1261 0
 876 00be F8 B5 FE                		mov.W	#-2, [r11]
1263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    if (pGI->readType == TURBIDITY_I)
 877                             		.loc 1 1263 0
 878 00c1 CC AA                   		mov.B	[r10], r10
 879                             	.LVL82:
 880 00c3 76 2A F0 00             		and #0xf0, r10
 881 00c7 75 5A C0                		cmp	#0xc0, r10
 882 00ca 20 03                   		beq	.L100
 883 00cc 0C                      		bra	.L113
 884                             	.L100:
1266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    *pResult=qresult.oBoundVal;
 885                             		.loc 1 1266 0
 886 00cd D1 7B 01                		mov.W	2[r7], [r11]
 887                             		.balign 2,3,1
 888                             	.L113:
1269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			return S_OK;
 889                             		.loc 1 1269 0
 890 00d0 66 01                   		mov	#0, r1
 891 00d2 2E 26                   		bra	.L92
 892                             	.LVL83:
 893                             	.L99:
1271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		else if(qresult.b.ubound)
 894                             		.loc 1 1271 0
 895 00d4 CD 7E 04                		mov.B	4[r7], r14
 896 00d7 64 1E                   		and	#1, r14
 897 00d9 20 15                   		beq	.L101
1275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			*pResult = GIVALUE_UNDEF_MAX;
 898                             		.loc 1 1275 0
 899 00db F8 B5 FF                		mov.W	#-1, [r11]
1277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (pGI->readType == TURBIDITY_I)
 900                             		.loc 1 1277 0
 901 00de CC AA                   		mov.B	[r10], r10
 902                             	.LVL84:
 903 00e0 76 2A F0 00             		and #0xf0, r10
 904 00e4 75 5A C0                		cmp	#0xc0, r10
 905 00e7 21 E9                   		bne	.L113
1280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    *pResult=qresult.oBoundVal;
 906                             		.loc 1 1280 0
 907 00e9 D1 7B 01                		mov.W	2[r7], [r11]
 908 00ec 2E 0C                   		bra	.L92
 909                             	.LVL85:
 910                             	.L101:
1287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		  *pResult = qresult.data;
 911                             		.loc 1 1287 0
 912 00ee D0 7B                   		mov.W	[r7], [r11]
 913 00f0 2E E0                   		bra	.L113
 914                             	.LVL86:
 915                             	.L103:
1196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
 916                             		.loc 1 1196 0
 917 00f2 FB 16 A8                		mov	#0xffffffa8, r1
 918 00f5 0B                      		bra	.L92
 919                             	.LVL87:
 920                             	.L105:
1226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****           return S_FALSE;
 921                             		.loc 1 1226 0
 922 00f6 66 11                   		mov	#1, r1
 923                             	.LVL88:
 924                             		.balign 2,3,3
 925                             	.L92:
1296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 926                             		.loc 1 1296 0
 927 00f8 76 21 A9 00             		and #0xa9, r1
 928 00fc 3F 7B 0B                		rtsd	#44, r7-r11
 929                             	.LFE8:
 931 00ff 03                      		.section	.text.HIO_trbReadEnable,"ax",@progbits
 932                             		.global	_HIO_trbReadEnable
 934                             	_HIO_trbReadEnable:
 935                             	.LFB12:
1491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 936                             		.loc 1 1491 0
 937                             	.LVL89:
1492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     SETBIT(TurbidityReads.readers,id);
 938                             		.loc 1 1492 0
 939 0000 FB E2 00 00 00 00       		mov.L	#_TurbidityReads, r14
 940 0006 5B 11                   		movu.B	r1, r1
 941 0008 FC 61 E1 07             		bset	r1, 7[r14].B
 942 000c 02                      		rts
 943                             	.LFE12:
 945                             		.section	.text.HIO_trbReadDisable,"ax",@progbits
 946                             		.global	_HIO_trbReadDisable
 948                             	_HIO_trbReadDisable:
 949                             	.LFB13:
1506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 950                             		.loc 1 1506 0
 951                             	.LVL90:
 952 0000 7E A7                   		push.l	r7
 953                             	.LCFI10:
1507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     CLRBIT(TurbidityReads.readers,id);
 954                             		.loc 1 1507 0
 955 0002 FB 42 00 00 00 00       		mov.L	#_TurbidityReads, r4
 956 0008 5B 11                   		movu.B	r1, r1
 957 000a FC 65 41 07             		bclr	r1, 7[r4].B
1508:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 958                             		.loc 1 1508 0
 959 000e 3F 77 01                		rtsd	#4, r7-r7
 960                             	.LFE13:
 962                             		.section	.text.HIO_GetSparklingAidCriterionValue,"ax",@progbits
 963                             		.global	_HIO_GetSparklingAidCriterionValue
 965                             	_HIO_GetSparklingAidCriterionValue:
 966                             	.LFB14:
1528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 967                             		.loc 1 1528 0
 968                             	.LVL91:
 969 0000 6E 7D                   		pushm	r7-r13
 970                             	.LCFI11:
 971 0002 60 80                   		sub	#8, r0
 972                             	.LCFI12:
 973 0004 EF 27                   		mov.L	r2, r7
1533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** uint8_t sparklingsample=BufUIInfo[pGI->pos];
 974                             		.loc 1 1533 0
 975 0006 59 1A 03                		movu.B	3[r1], r10
 976 0009 FB B2 00 00 00 00       		mov.L	#_BufUIInfo, r11
 977 000f FE 4A BA                		mov.B	[r10,r11], r10
 978                             	.LVL92:
1535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( BasicLoader( APP_PTR_IO_DEVICE_DATA,pGI->hlParamOffset,&table ) != S_OK )
 979                             		.loc 1 1535 0
 980 0012 B0 92                   		movu.B	2[r1], r2
 981                             	.LVL93:
 982 0014 75 41 21                		mov	#33, r1
 983                             	.LVL94:
 984 0017 EF 03                   		mov.L	r0, r3
 985 0019 05 00 00 00             		bsr	_BasicLoader
 986                             	.LVL95:
 987 001d 76 21 FF 00             		and #0xff, r1
 988 0021 21 61                   		bne	.L123
1540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	pParams=(GITabSpa_Struct *)table.Data;
 989                             		.loc 1 1540 0
 990 0023 EC 04                   		mov.L	[r0], r4
 991                             	.LVL96:
1541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	on=pParams->On;
 992                             		.loc 1 1541 0
 993 0025 88 CB                   		mov.B 3[r4], r3
 994 0027 64 13                   		and #1, r3
 995                             	.LVL97:
1542:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	cr_val_tmp=(1 && TESTBIT(GICriteria, GI_SPARKLING_AID_IND) );        
 996                             		.loc 1 1542 0
 997 0029 FB C2 00 00 00 00       		mov.L	#_GICriteria, r12
 998 002f CC CE                   		mov.B	[r12], r14
 999 0031 6A 4E                   		shar	#4, r14
 1000 0033 64 1E                   		and #1, r14
 1001 0035 CF E2                   		mov.B	r14, r2
 1002                             	.LVL98:
1543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	*cr_val=cr_val_tmp;
 1003                             		.loc 1 1543 0
 1004 0037 5B E1                   		movu.B	r14, r1
 1005 0039 D3 71                   		mov.W	r1, [r7]
1546:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if(SparklingReads.nSamples<pParams->Samples)
 1006                             		.loc 1 1546 0
 1007 003b FB 52 00 00 00 00       		mov.L	#_SparklingReads, r5
 1008 0041 CD 5F 01                		mov.B	1[r5], r15
 1009 0044 5B FD                   		movu.B	r15, r13
 1010 0046 45 4D 02                		cmp	2[r4].UB, r13
 1011 0049 22 0C                   		bgeu	.L119
1548:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		SparklingReads.nSamples++;
 1012                             		.loc 1 1548 0
 1013 004b 62 1F                   		add	#1, r15
 1014 004d C7 5F 01                		mov.B	r15, 1[r5]
1549:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_SPRK_NOT_READY;
 1015                             		.loc 1 1549 0
 1016 0050 FB 16 AB                		mov	#0xffffffab, r1
 1017 0053 2E 33                   		bra	.L118
 1018                             	.L119:
1554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(!
 1019                             		.loc 1 1554 0
 1020 0055 5B 35                   		movu.B	r3, r5
 1021 0057 47 15                   		cmp	r1, r5
 1022 0059 1F                      		bne	.L120
1556:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			((on==cr_val_tmp) && (sparklingsample<pParams->Hb))
 1023                             		.loc 1 1556 0
 1024 005a 5B A5                   		movu.B	r10, r5
 1025 005c 44 45                   		cmp	[r4].UB, r5
 1026 005e 23 18                   		bltu	.L121
 1027                             		.balign 2,3,1
 1028                             	.L120:
1554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if(!
 1029                             		.loc 1 1554 0 discriminator 1
 1030 0060 5B 22                   		movu.B	r2, r2
 1031                             	.LVL99:
 1032 0062 FD 74 D3 01             		xor	#1, r3
 1033                             	.LVL100:
 1034 0066 47 32                   		cmp	r3, r2
 1035 0068 18                      		bne	.L122
1558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(((!on)==cr_val_tmp) && (sparklingsample>pParams->Lb))
 1036                             		.loc 1 1558 0
 1037 0069 5B AA                   		movu.B	r10, r10
 1038 006b 45 4A 01                		cmp	1[r4].UB, r10
 1039 006e 24 08                   		bgtu	.L121
 1040                             	.LVL101:
 1041                             		.balign 2,3,3
 1042                             	.L122:
1562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			*cr_val=cr_val_tmp^1;
 1043                             		.loc 1 1562 0
 1044 0070 FD 74 DE 01             		xor	#1, r14
 1045                             	.LVL102:
 1046 0074 D3 7E                   		mov.W	r14, [r7]
 1047                             	.LVL103:
 1048                             		.balign 2,3,5
 1049                             	.L121:
1565:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		SparklingReads.nSamples=0;
 1050                             		.loc 1 1565 0
 1051 0076 FB 72 00 00 00 00       		mov.L	#_SparklingReads, r7
 1052                             	.LVL104:
 1053 007c 3C 71 00                		mov.B	#0, 1[r7]
1568:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return S_OK;
 1054                             		.loc 1 1568 0
 1055 007f 66 01                   		mov	#0, r1
 1056                             	.LVL105:
 1057 0081 0D                      		bra	.L118
 1058                             	.LVL106:
 1059                             	.L123:
1537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return HIO_ERR_BASIC_LOADER;
 1060                             		.loc 1 1537 0
 1061 0082 FB 16 A8                		mov	#0xffffffa8, r1
 1062                             	.LVL107:
 1063 0085 03                      		.balign 2,3,3
 1064                             	.L118:
1569:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 1065                             		.loc 1 1569 0
 1066 0086 76 21 AB 00             		and #0xab, r1
 1067 008a 3F 7D 09                		rtsd	#36, r7-r13
 1068                             	.LFE14:
 1070 008d 03                      		.section	.text.Fan_GenericLoadMgmt,"ax",@progbits
 1071                             		.global	_Fan_GenericLoadMgmt
 1073                             	_Fan_GenericLoadMgmt:
 1074                             	.LFB15:
1589:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 1075                             		.loc 1 1589 0
1592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( Surge_Fan_Params.fan_startup_timer != 0 )
 1076                             		.loc 1 1592 0
 1077 0000 FB E2 00 00 00 00       		mov.L	#_Surge_Fan_Params, r14
 1078 0006 CC E3                   		mov.B	[r14], r3
 1079 0008 5B 3E                   		movu.B	r3, r14
 1080 000a 61 0E                   		cmp	#0, r14
 1081 000c 20 5E                   		beq	.L125
1594:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b != FAN_SPEED_OFF )
 1082                             		.loc 1 1594 0
 1083 000e FB E2 00 00 00 00       		mov.L	#_Fan_Pos, r14
 1084 0014 58 EE                   		movu.B	[r14], r14
 1085 0016 FB 42 00 00 00 00       		mov.L	#_LoadsReq_New, r4
 1086 001c FE CE 44                		movu.B	[r14,r4], r4
 1087 001f 61 04                   		cmp	#0, r4
 1088 0021 20 49                   		beq	.L125
1596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( LoadsReq_Old[Fan_Pos[LD_DRY_FAN_IND]].b == FAN_SPEED_OFF )
 1089                             		.loc 1 1596 0
 1090 0023 FB 42 00 00 00 00       		mov.L	#_LoadsReq_Old, r4
 1091 0029 FE CE 4E                		movu.B	[r14,r4], r14
 1092 002c 61 0E                   		cmp	#0, r14
 1093 002e 21 0C                   		bne	.L127
1599:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)Set_SmallCounter((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER, (SWTC_PrescalerType)COUNTE
 1094                             		.loc 1 1599 0
 1095 0030 75 41 13                		mov	#19, r1
 1096 0033 66 12                   		mov	#1, r2
 1097 0035 05 00 00 00             		bsr	_Set_SmallCounter
 1098                             	.LVL108:
 1099 0039 03                      		.balign 2,3,2
 1100                             	.L127:
1602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( SWTC_IsExpired((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER) )
 1101                             		.loc 1 1602 0
 1102 003a 75 41 13                		mov	#19, r1
 1103 003d 05 00 00 00             		bsr	_SWTC_IsExpired
 1104                             	.LVL109:
 1105 0041 61 01                   		cmp	#0, r1
1608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Stop((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER);			
 1106                             		.loc 1 1608 0
 1107 0043 75 41 13                		mov	#19, r1
1602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( SWTC_IsExpired((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER) )
 1108                             		.loc 1 1602 0
 1109 0046 15                      		beq	.L128
1608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Stop((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER);			
 1110                             		.loc 1 1608 0
 1111 0047 04 00 00 00             		bra	_SWTC_Stop
 1112                             	.LVL110:
 1113                             	.L128:
1613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Run((SWTC_CountersType)SFT_FAN_STARTUP_S_COUNTER);
 1114                             		.loc 1 1613 0
 1115 004b 05 00 00 00             		bsr	_SWTC_Run
 1116                             	.LVL111:
1615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b= Surge_Fan_Params.fan_startup_speed;
 1117                             		.loc 1 1615 0
 1118 004f FB E2 00 00 00 00       		mov.L	#_Fan_Pos, r14
 1119 0055 58 EE                   		movu.B	[r14], r14
 1120 0057 FB 42 00 00 00 00       		mov.L	#_Surge_Fan_Params, r4
 1121 005d 88 4B                   		mov.B	1[r4], r3
 1122 005f 64 33                   		and #3, r3
 1123 0061 FB 42 00 00 00 00       		mov.L	#_LoadsReq_New, r4
 1124 0067 FE 0E 43                		mov.B	r3, [r14,r4]
 1125                             	.L125:
 1126 006a 02                      		rts
 1127                             	.LFE15:
 1129 006b 03                      		.section	.text.HIO_OverHeat_DrainPump_Control,"ax",@progbits
 1130                             		.global	_HIO_OverHeat_DrainPump_Control
 1132                             	_HIO_OverHeat_DrainPump_Control:
 1133                             	.LFB16:
1645:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 1134                             		.loc 1 1645 0
 1135 0000 6E 7B                   		pushm	r7-r11
 1136                             	.LCFI13:
1653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	act_power = MAKEWORD(BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][BLDC_OH_INDEX_MSB], BLDC_Pump_InfoBuffe
 1137                             		.loc 1 1653 0
 1138 0002 FB 72 00 00 00 00       		mov.L	#_BLDC_Pump_InfoBuffer, r7
 1139 0008 8C F9                   		mov.B	19[r7], r1
 1140 000a 8C F5                   		mov.B	18[r7], r5
1654:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     threshold = DRAINPUMP_OVERHEAT_THRESHOLD;
 1141                             		.loc 1 1654 0
 1142 000c FB 72 00 00 00 00       		mov.L	#_Tab_SFT_MotorDrain, r7
 1143 0012 EC 74                   		mov.L	[r7], r4
 1144 0014 DC 42                   		mov.W	[r4], r2
1657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	targetSpeed = GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP]);
 1145                             		.loc 1 1657 0
 1146 0016 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 1147 001c 59 7B 0E                		movu.B	14[r7], r11
 1148 001f 6C 8B                   		shll	#8, r11
 1149 0021 B3 FF                   		movu.B	15[r7], r7
 1150 0023 57 7B                   		or	r7, r11
1659:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( targetSpeed == 0 )
 1151                             		.loc 1 1659 0
 1152 0025 DF BA                   		mov.W	r11, r10
 1153 0027 21 0F                   		bne	.L136
1661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		over_power_algorithm.s.status=DISABLED_OP_ALGO;
 1154                             		.loc 1 1661 0
 1155 0029 FB 72 00 00 00 00       		mov.L	#_over_power_algorithm.12764, r7
 1156 002f CC 7E                   		mov.B	[r7], r14
 1157 0031 75 2E F0                		and #-16, r14
 1158 0034 C3 7E                   		mov.B	r14, [r7]
 1159                             		.balign 2,3,5
 1160                             	.L136:
1664:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	switch ( over_power_algorithm.s.status )
 1161                             		.loc 1 1664 0
 1162 0036 FB 72 00 00 00 00       		mov.L	#_over_power_algorithm.12764, r7
 1163 003c CC 7E                   		mov.B	[r7], r14
 1164 003e 64 FE                   		and #15, r14
 1165 0040 EF 73                   		mov.L	r7, r3
 1166 0042 61 1E                   		cmp	#1, r14
 1167 0044 3A 2C 01                		beq	.L139
 1168 0047 2A 09                   		bgt	.L142
 1169 0049 61 0E                   		cmp	#0, r14
 1170 004b 20 11                   		beq	.L138
 1171 004d 38 51 01                		bra	.L137
 1172                             	.L142:
 1173 0050 61 2E                   		cmp	#2, r14
 1174 0052 3A CD 00                		beq	.L140
 1175 0055 61 3E                   		cmp	#3, r14
 1176 0057 3B 47 01                		bne	.L137
 1177 005a 2E 29                   		bra	.L141
 1178                             	.L138:
1653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	act_power = MAKEWORD(BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][BLDC_OH_INDEX_MSB], BLDC_Pump_InfoBuffe
 1179                             		.loc 1 1653 0
 1180 005c 5B 5A                   		movu.B	r5, r10
 1181 005e 6C 8A                   		shll	#8, r10
 1182 0060 5B 1E                   		movu.B	r1, r14
1668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( act_power > threshold ) 
 1183                             		.loc 1 1668 0
 1184 0062 5F 2B                   		movu.W	r2, r11
 1185 0064 57 EA                   		or	r14, r10
1672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVal
 1186                             		.loc 1 1672 0
 1187 0066 75 41 14                		mov	#20, r1
1668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( act_power > threshold ) 
 1188                             		.loc 1 1668 0
 1189 0069 47 AB                   		cmp	r10, r11
 1190 006b 22 12                   		bgeu	.L143
1672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVal
 1191                             		.loc 1 1672 0
 1192 006d 98 4A                   		mov.W	2[r4], r2
 1193 006f 05 00 00 00             		bsr	_SWTC_SetMValue
1673:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Stop((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER); 
 1194                             		.loc 1 1673 0
 1195 0073 75 41 14                		mov	#20, r1
 1196 0076 05 00 00 00             		bsr	_SWTC_Stop
 1197 007a 38 1A 01                		bra	.L161
 1198                             	.L143:
1771:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 1199                             		.loc 1 1771 0
 1200 007d 6F 7B                   		popm	r7-r11
1678:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Stop((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
 1201                             		.loc 1 1678 0
 1202 007f 04 00 00 00             		bra	_SWTC_Stop
 1203                             	.L141:
1685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Run((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
 1204                             		.loc 1 1685 0
 1205 0083 75 41 14                		mov	#20, r1
 1206 0086 05 00 00 00             		bsr	_SWTC_Run
1687:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER))
 1207                             		.loc 1 1687 0
 1208 008a 75 41 14                		mov	#20, r1
 1209 008d 05 00 00 00             		bsr	_SWTC_IsExpired
 1210 0091 61 01                   		cmp	#0, r1
 1211 0093 20 33                   		beq	.L145
1689:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( DRAINPUMP_OFF_OVERHEAT_DURATION )
 1212                             		.loc 1 1689 0
 1213 0095 FB E2 00 00 00 00       		mov.L	#_Tab_SFT_MotorDrain, r14
 1214 009b EC EE                   		mov.L	[r14], r14
 1215 009d CD E2 07                		mov.B	7[r14], r2
1691:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVa
 1216                             		.loc 1 1691 0
 1217 00a0 75 41 14                		mov	#20, r1
1689:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( DRAINPUMP_OFF_OVERHEAT_DURATION )
 1218                             		.loc 1 1689 0
 1219 00a3 75 22 7F                		and	#0x7f, r2
 1220 00a6 20 0F                   		beq	.L146
1691:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVa
 1221                             		.loc 1 1691 0
 1222 00a8 05 00 00 00             		bsr	_SWTC_SetMValue
1692:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					over_power_algorithm.s.status = OFF_OP_ALGO;		
 1223                             		.loc 1 1692 0
 1224 00ac CC 7E                   		mov.B	[r7], r14
 1225 00ae 75 2E F0                		and #-16, r14
 1226 00b1 78 1E                   		bset #1, r14
 1227 00b3 2E 11                   		bra	.L160
 1228                             	.L146:
1695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVa
 1229                             		.loc 1 1695 0
 1230 00b5 DD E2 04                		mov.W	8[r14], r2
 1231 00b8 05 00 00 00             		bsr	_SWTC_SetMValue
1696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					over_power_algorithm.s.status=ON_OP_ALGO;
 1232                             		.loc 1 1696 0
 1233 00bc CC 7E                   		mov.B	[r7], r14
 1234 00be 75 2E F0                		and #-16, r14
 1235 00c1 78 0E                   		bset #0, r14
 1236 00c3 03                      		.balign 2,3,1
 1237                             	.L160:
 1238 00c4 C3 7E                   		mov.B	r14, [r7]
 1239                             		.balign 2,3,5
 1240                             	.L145:
1708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( targetSpeed >= DRAINPUMP_OVERHEAT_SPEED_REDUCTION )
 1241                             		.loc 1 1708 0
 1242 00c6 FB 72 00 00 00 00       		mov.L	#_Tab_SFT_MotorDrain, r7
 1243 00cc EC 77                   		mov.L	[r7], r7
 1244 00ce 5F A3                   		movu.W	r10, r3
 1245 00d0 59 7E 04                		movu.B	4[r7], r14
 1246 00d3 EF E4                   		mov.L	r14, r4
 1247 00d5 75 14 19                		mul	#25, r4
 1248 00d8 47 43                   		cmp	r4, r3
 1249 00da 29 0A                   		blt	.L147
1710:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					targetSpeed -= DRAINPUMP_OVERHEAT_SPEED_REDUCTION;
 1250                             		.loc 1 1710 0
 1251 00dc EF EA                   		mov.L	r14, r10
 1252 00de 75 1A E7                		mul	#-25, r10
 1253 00e1 4B BA                   		add	r11, r10
 1254 00e3 03                      		.balign 2,3,1
 1255                             	.L147:
1713:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( targetSpeed < DRAINPUMP_SAFETY_MIN_SPEED )
 1256                             		.loc 1 1713 0
 1257 00e4 5F AB                   		movu.W	r10, r11
 1258 00e6 B1 7F                   		movu.B	5[r7], r7
 1259 00e8 75 17 19                		mul	#25, r7
 1260 00eb 47 7B                   		cmp	r7, r11
 1261 00ed 28 05                   		bge	.L148
1715:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					targetSpeed = DRAINPUMP_SAFETY_MIN_SPEED;
 1262                             		.loc 1 1715 0
 1263 00ef DF 7A                   		mov.W	r7, r10
 1264 00f1 03                      		.balign 2,3,5
 1265                             	.L148:
1718:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], targetSpeed);
 1266                             		.loc 1 1718 0
 1267 00f2 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 1268 00f8 5F AB                   		movu.W	r10, r11
 1269 00fa FD 88 BE                		shlr	#8, r11, r14
 1270 00fd C7 7E 0E                		mov.B	r14, 14[r7]
 1271 0100 C7 7A 0F                		mov.B	r10, 15[r7]
 1272 0103 61 0B                   		cmp	#0, r11
 1273 0105 FC DB A1                		scne.L	r10
 1274 0108 C7 7A 0D                		mov.B	r10, 13[r7]
1720:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	            SET_PUMP(LD_DRAIN_PUMP_IND, BLDC_PumpReq_New[DRAIN_BLDC_PUMP].loadParam.b);
 1275                             		.loc 1 1720 0
 1276 010b FB 72 00 00 00 00       		mov.L	#_Pump_Pos, r7
 1277 0111 B0 7F                   		movu.B	1[r7], r7
 1278 0113 FB B2 00 00 00 00       		mov.L	#_LoadsReq_New, r11
 1279 0119 FE 07 BA                		mov.B	r10, [r7,r11]
1733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 1280                             		.loc 1 1733 0
 1281 011c 38 8A 00                		bra	.L135
 1282                             	.L140:
1737:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Run((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
 1283                             		.loc 1 1737 0
 1284 011f 75 41 14                		mov	#20, r1
 1285 0122 05 00 00 00             		bsr	_SWTC_Run
1739:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( SWTC_IsExpired((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER) )
 1286                             		.loc 1 1739 0
 1287 0126 75 41 14                		mov	#20, r1
 1288 0129 05 00 00 00             		bsr	_SWTC_IsExpired
 1289 012d 61 01                   		cmp	#0, r1
 1290 012f 20 1D                   		beq	.L149
1742:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterVal
 1291                             		.loc 1 1742 0
 1292 0131 FB A2 00 00 00 00       		mov.L	#_Tab_SFT_MotorDrain, r10
 1293 0137 EC AA                   		mov.L	[r10], r10
 1294 0139 75 41 14                		mov	#20, r1
 1295 013c DD A2 04                		mov.W	8[r10], r2
 1296 013f 05 00 00 00             		bsr	_SWTC_SetMValue
1743:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				over_power_algorithm.s.status=ON_OP_ALGO;
 1297                             		.loc 1 1743 0
 1298 0143 CC 7A                   		mov.B	[r7], r10
 1299 0145 75 2A F0                		and #-16, r10
 1300 0148 78 0A                   		bset #0, r10
 1301 014a C3 7A                   		mov.B	r10, [r7]
 1302                             		.balign 2,3,5
 1303                             	.L149:
1747:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], 0);
 1304                             		.loc 1 1747 0
 1305 014c FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 1306 0152 3C 7E 00                		mov.B	#0, 14[r7]
 1307 0155 3C 7F 00                		mov.B	#0, 15[r7]
 1308 0158 3C 7D 00                		mov.B	#0, 13[r7]
1749:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	        SET_PUMP(LD_DRAIN_PUMP_IND, LOAD_OFF);
 1309                             		.loc 1 1749 0
 1310 015b FB 72 00 00 00 00       		mov.L	#_Pump_Pos, r7
 1311 0161 B0 7F                   		movu.B	1[r7], r7
 1312 0163 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 1313 0169 66 0B                   		mov	#0, r11
 1314 016b FE 07 AB                		mov.B	r11, [r7,r10]
1750:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			break;
 1315                             		.loc 1 1750 0
 1316 016e 2E 38                   		bra	.L135
 1317                             	.L139:
1753:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)SWTC_Run((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER);
 1318                             		.loc 1 1753 0
 1319 0170 75 41 14                		mov	#20, r1
 1320 0173 05 00 00 00             		bsr	_SWTC_Run
1755:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( SWTC_IsExpired((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER) )
 1321                             		.loc 1 1755 0
 1322 0177 75 41 14                		mov	#20, r1
 1323 017a 05 00 00 00             		bsr	_SWTC_IsExpired
 1324 017e 61 01                   		cmp	#0, r1
 1325 0180 20 26                   		beq	.L135
1757:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetMValue((SWTC_CountersType)SFT_DRAINPUMP_OVER_HEATING_M_COUNTER, (SWTC_MCounterV
 1326                             		.loc 1 1757 0
 1327 0182 FB A2 00 00 00 00       		mov.L	#_Tab_SFT_MotorDrain, r10
 1328 0188 EC AA                   		mov.L	[r10], r10
 1329 018a 75 41 14                		mov	#20, r1
 1330 018d DD A2 01                		mov.W	2[r10], r2
 1331 0190 05 00 00 00             		bsr	_SWTC_SetMValue
 1332                             		.balign 2,3,5
 1333                             	.L161:
1758:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						over_power_algorithm.s.status=REDUX_OP_ALGO;
 1334                             		.loc 1 1758 0
 1335 0194 CC 7A                   		mov.B	[r7], r10
 1336 0196 75 2A F0                		and #-16, r10
 1337 0199 65 3A                   		or	#3, r10
 1338 019b C3 7A                   		mov.B	r10, [r7]
 1339 019d 09                      		bra	.L135
 1340                             	.L137:
1766:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			over_power_algorithm.s.status = DISABLED_OP_ALGO;
 1341                             		.loc 1 1766 0
 1342 019e CC 37                   		mov.B	[r3], r7
 1343 01a0 75 27 F0                		and #-16, r7
 1344 01a3 C3 37                   		mov.B	r7, [r3]
 1345 01a5 03                      		.balign 2,3,2
 1346                             	.L135:
1771:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 1347                             		.loc 1 1771 0
 1348 01a6 3F 7B 05                		rtsd	#20, r7-r11
 1349                             	.LFE16:
 1351 01a9 03                      		.section	.text.HIO_BulkAndKillDSP_Mgmt,"ax",@progbits
 1352                             		.global	_HIO_BulkAndKillDSP_Mgmt
 1354                             	_HIO_BulkAndKillDSP_Mgmt:
 1355                             	.LFB17:
1775:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 1356                             		.loc 1 1775 0
 1357                             	.LVL112:
1803:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc1 != 0 ) 
 1358                             		.loc 1 1803 0
 1359 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 1360 0006 DC E2                   		mov.W	[r14], r2
 1361 0008 EF 23                   		mov.L	r2, r3
 1362 000a 76 23 00 40             		and #0x4000, r3
 1363 000e 5F 33                   		movu.W	r3, r3
 1364 0010 61 03                   		cmp	#0, r3
 1365 0012 20 10                   		beq	.L163
1810:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( BLDC_PumpReq_New[WASH_BLDC_PUMP].loadParam.b == LOAD_ON )
 1366                             		.loc 1 1810 0
 1367 0014 FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 1368 001a 59 E3 01                		movu.B	1[r14], r3
 1369 001d 61 13                   		cmp	#1, r3
 1370 001f FC DB 30                		sceq.L	r3
 1371                             		.balign 2,3,3
 1372                             	.L163:
 1373                             	.LVL113:
1823:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc_drain != 0 )
 1374                             		.loc 1 1823 0
 1375 0022 76 22 00 02             		and #0x200, r2
 1376 0026 5F 22                   		movu.W	r2, r2
 1377 0028 61 02                   		cmp	#0, r2
 1378 002a 20 2A                   		beq	.L164
1830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( ( LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON ) ||
 1379                             		.loc 1 1830 0
 1380 002c FB E2 00 00 00 00       		mov.L	#_Pump_Pos, r14
 1381 0032 59 EE 01                		movu.B	1[r14], r14
 1382 0035 FB 42 00 00 00 00       		mov.L	#_LoadsReq_New, r4
 1383 003b FE CE 4E                		movu.B	[r14,r4], r14
 1384 003e 61 1E                   		cmp	#1, r14
 1385 0040 1E                      		bne	.L165
 1386 0041 03                      		.balign 2,3,1
 1387                             	.L166:
1839:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			BLDC_drainPumpState = LOAD_ON;
 1388                             		.loc 1 1839 0
 1389 0042 66 12                   		mov	#1, r2
 1390 0044 2E 10                   		bra	.L164
 1391                             	.L165:
1831:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    ( DrainSftReq_New.b == LOAD_ON ) )
 1392                             		.loc 1 1831 0 discriminator 1
 1393 0046 FB E2 00 00 00 00       		mov.L	#_DrainSftReq_New, r14
1830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( ( LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON ) ||
 1394                             		.loc 1 1830 0 discriminator 1
 1395 004c 58 EE                   		movu.B	[r14], r14
 1396 004e 61 1E                   		cmp	#1, r14
 1397 0050 20 F2                   		beq	.L166
1820:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	BLDC_drainPumpState = LOAD_OFF;
 1398                             		.loc 1 1820 0
 1399 0052 66 02                   		mov	#0, r2
 1400                             		.balign 2,3,5
 1401                             	.L164:
 1402                             	.LVL114:
1848:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( RegDev_Pos[LD_BULK_ACT_DSPSIDE_REG_IND] != NO_LD_POS )
 1403                             		.loc 1 1848 0
 1404 0054 FB E2 00 00 00 00       		mov.L	#_RegDev_Pos, r14
 1405 005a CD E4 05                		mov.B	5[r14], r4
 1406 005d 5B 4E                   		movu.B	r4, r14
 1407 005f 75 5E FF                		cmp	#0xff, r14
 1408 0062 20 38                   		beq	.L182
1852:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( TESTBIT(FltBLDCUnblock.flags,PUMPOFF) )
 1409                             		.loc 1 1852 0
 1410 0064 FB E2 00 00 00 00       		mov.L	#_FltBLDCUnblock, r14
 1411 006a CC EE                   		mov.B	[r14], r14
 1412 006c FD 74 CE 01             		tst	#1, r14
 1413 0070 21 18                   		bne	.L183
1861:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
 1414                             		.loc 1 1861 0
 1415 0072 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 1416 0078 CC EE                   		mov.B	[r14], r14
 1417 007a 64 FE                   		and #15, r14
 1418 007c 61 1E                   		cmp	#1, r14
 1419 007e 20 10                   		beq	.L168
1872:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if( ( BLDC_washPumpState == LOAD_ON ) || ( BLDC_drainPumpState == LOAD_ON ) )
 1420                             		.loc 1 1872 0
 1421 0080 5B 3E                   		movu.B	r3, r14
 1422 0082 61 1E                   		cmp	#1, r14
 1423 0084 17                      		beq	.L185
1880:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					bulk_DSP_Side_ReqState = LOAD_OFF;	
 1424                             		.loc 1 1880 0 discriminator 1
 1425 0085 CF 2E                   		mov.B	r2, r14
 1426 0087 0F                      		bra	.L168
 1427                             	.L183:
1855:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulk_DSP_Side_ReqState = LOAD_OFF;
 1428                             		.loc 1 1855 0
 1429 0088 66 0E                   		mov	#0, r14
 1430 008a 0C                      		bra	.L168
 1431                             	.L185:
1864:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				bulk_DSP_Side_ReqState = LOAD_ON;	
 1432                             		.loc 1 1864 0
 1433 008b CF 3E                   		mov.B	r3, r14
 1434 008d 03                      		.balign 2,3,1
 1435                             	.L168:
 1436                             	.LVL115:
1889:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_New[RegDev_Pos[LD_BULK_ACT_DSPSIDE_REG_IND]].b = bulk_DSP_Side_ReqState;
 1437                             		.loc 1 1889 0
 1438 008e 5B 44                   		movu.B	r4, r4
 1439 0090 FB 12 00 00 00 00       		mov.L	#_LoadsReq_New, r1
 1440 0096 FE 04 1E                		mov.B	r14, [r4,r1]
 1441 0099 0D                      		bra	.L167
 1442                             	.LVL116:
 1443                             	.L182:
1846:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	bulk_DSP_Side_ReqState = 0xFF;	/* Introdurre una define MQ */
 1444                             		.loc 1 1846 0
 1445 009a FB E6 FF                		mov	#-1, r14
 1446                             	.LVL117:
 1447 009d 03                      		.balign 2,3,5
 1448                             	.L167:
1898:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( RegDev_Pos[LD_BULK_ACT_UPSIDE_REG_IND] != NO_LD_POS )
 1449                             		.loc 1 1898 0
 1450 009e FB 42 00 00 00 00       		mov.L	#_RegDev_Pos, r4
 1451 00a4 89 41                   		mov.B	4[r4], r1
 1452 00a6 5B 14                   		movu.B	r1, r4
 1453 00a8 75 54 FF                		cmp	#0xff, r4
 1454 00ab 3A C7 00                		beq	.L169
1902:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( TESTBIT(FltBLDCUnblock.flags,PUMPOFF) )
 1455                             		.loc 1 1902 0
 1456 00ae FB 42 00 00 00 00       		mov.L	#_FltBLDCUnblock, r4
 1457 00b4 CC 44                   		mov.B	[r4], r4
 1458 00b6 64 14                   		and	#1, r4
 1459 00b8 21 0F                   		bne	.L186
1910:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( ( BLDC_drainPumpState == LOAD_ON ) && ( BLDC_washPumpState == LOAD_OFF ) )
 1460                             		.loc 1 1910 0
 1461 00ba 5B 22                   		movu.B	r2, r2
 1462 00bc 61 12                   		cmp	#1, r2
 1463 00be 21 0C                   		bne	.L170
1910:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( ( BLDC_drainPumpState == LOAD_ON ) && ( BLDC_washPumpState == LOAD_OFF ) )
 1464                             		.loc 1 1910 0 is_stmt 0 discriminator 1
 1465 00c0 5B 34                   		movu.B	r3, r4
 1466 00c2 FD 74 D4 01             		xor	#1, r4
 1467 00c6 0C                      		bra	.L170
 1468                             	.L186:
1905:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulk_uP_Side_ReqState = LOAD_OFF;
 1469                             		.loc 1 1905 0 is_stmt 1
 1470 00c7 66 04                   		mov	#0, r4
 1471                             	.LVL118:
 1472 00c9 03                      		.balign 2,3,1
 1473                             	.L170:
1932:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_New[RegDev_Pos[LD_BULK_ACT_UPSIDE_REG_IND]].b = bulk_uP_Side_ReqState;
 1474                             		.loc 1 1932 0
 1475 00ca 5B 11                   		movu.B	r1, r1
 1476 00cc FB 32 00 00 00 00       		mov.L	#_LoadsReq_New, r3
 1477                             	.LVL119:
 1478 00d2 FE 01 34                		mov.B	r4, [r1,r3]
1938:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( bulk_DSP_Side_ReqState != LOAD_OFF )
 1479                             		.loc 1 1938 0
 1480 00d5 76 2E FF 00             		and #0xff, r14
 1481                             	.LVL120:
 1482 00d9 20 23                   		beq	.L171
1939:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		&&
 1483                             		.loc 1 1939 0
 1484 00db 5B 44                   		movu.B	r4, r4
 1485                             	.LVL121:
 1486 00dd 61 14                   		cmp	#1, r4
 1487 00df 21 10                   		bne	.L172
 1488                             	.LVL122:
 1489 00e1 03                      		.balign 2,3,5
 1490                             	.L174:
1976:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		oldBulkState = LOAD_ON;
 1491                             		.loc 1 1976 0
 1492 00e2 FB E2 00 00 00 00       		mov.L	#_oldBulkState.12783, r14
 1493 00e8 F8 E4 01                		mov.B	#1, [r14]
1974:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		bulkFilteredState = LOAD_ON;
 1494                             		.loc 1 1974 0
 1495 00eb 66 1E                   		mov	#1, r14
1976:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		oldBulkState = LOAD_ON;
 1496                             		.loc 1 1976 0
 1497 00ed 2E 4F                   		bra	.L173
 1498                             	.LVL123:
 1499                             	.L172:
1940:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		( ( bulk_uP_Side_ReqState == LOAD_ON ) || ( TESTBIT(GICriteria,GI_CR_DOOR_IND) != 0 ) )
 1500                             		.loc 1 1940 0
 1501 00ef FB E2 00 00 00 00       		mov.L	#_GICriteria, r14
 1502 00f5 CC EE                   		mov.B [r14], r14
 1503 00f7 64 4E                   		and #4, r14
 1504 00f9 21 E9                   		bne	.L174
 1505 00fb 03                      		.balign 2,3,5
 1506                             	.L171:
1983:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( oldBulkState == LOAD_ON )
 1507                             		.loc 1 1983 0
 1508 00fc FB E2 00 00 00 00       		mov.L	#_oldBulkState.12783, r14
 1509 0102 58 EE                   		movu.B	[r14], r14
 1510 0104 61 1E                   		cmp	#1, r14
 1511 0106 21 12                   		bne	.L175
1987:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_SetSValueAndRun((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER, (SWTC_SCounterValue)
 1512                             		.loc 1 1987 0
 1513 0108 75 41 12                		mov	#18, r1
 1514 010b FB E2 00 00 00 00       		mov.L	#_Bulk_DSP_Off_Delay, r14
 1515 0111 CC E2                   		mov.B	[r14], r2
 1516 0113 05 00 00 00             		bsr	_SWTC_SetSValueAndRun
 1517                             	.LVL124:
 1518 0117 03                      		.balign 2,3,2
 1519                             	.L175:
1990:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( SWTC_IsExpired((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER) ) 
 1520                             		.loc 1 1990 0
 1521 0118 75 41 12                		mov	#18, r1
 1522 011b 05 00 00 00             		bsr	_SWTC_IsExpired
 1523                             	.LVL125:
 1524 011f 61 01                   		cmp	#0, r1
1996:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Stop((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER);
 1525                             		.loc 1 1996 0
 1526 0121 75 41 12                		mov	#18, r1
1990:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( SWTC_IsExpired((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER) ) 
 1527                             		.loc 1 1990 0
 1528 0124 10                      		beq	.L176
 1529                             	.LVL126:
1996:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Stop((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER);
 1530                             		.loc 1 1996 0
 1531 0125 05 00 00 00             		bsr	_SWTC_Stop
 1532                             	.LVL127:
1994:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulkFilteredState = LOAD_OFF;
 1533                             		.loc 1 1994 0
 1534 0129 66 0E                   		mov	#0, r14
 1535 012b 0F                      		bra	.L177
 1536                             	.LVL128:
 1537                             	.L176:
2004:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)SWTC_Run((SWTC_CountersType)HIO_BULK_OFF_DELAY_S_COUNTER); 
 1538                             		.loc 1 2004 0
 1539 012c 05 00 00 00             		bsr	_SWTC_Run
 1540                             	.LVL129:
2002:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			bulkFilteredState = LOAD_ON;
 1541                             		.loc 1 2002 0
 1542 0130 66 1E                   		mov	#1, r14
 1543                             	.LVL130:
 1544                             		.balign 2,3,5
 1545                             	.L177:
2007:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		oldBulkState = LOAD_OFF;
 1546                             		.loc 1 2007 0
 1547 0132 FB 42 00 00 00 00       		mov.L	#_oldBulkState.12783, r4
 1548 0138 3C 40 00                		mov.B	#0, [r4]
 1549                             	.LVL131:
 1550 013b 03                      		.balign 2,3,5
 1551                             	.L173:
2013:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( ( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING ) &&
 1552                             		.loc 1 2013 0
 1553 013c FB 42 00 00 00 00       		mov.L	#_Interpreter_Data, r4
 1554 0142 CC 43                   		mov.B	[r4], r3
 1555 0144 FD 74 C3 0F             		tst	#15, r3
 1556 0148 18                      		bne	.L178
2013:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( ( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING ) &&
 1557                             		.loc 1 2013 0 is_stmt 0 discriminator 1
 1558 0149 B0 C4                   		movu.B	2[r4], r4
 1559 014b 61 04                   		cmp	#0, r4
 1560 014d 20 13                   		beq	.L179
 1561 014f 03                      		.balign 2,3,5
 1562                             	.L178:
2016:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		( TESTBIT(FltBLDCUnblock.flags,PUMPOFF) )
 1563                             		.loc 1 2016 0 is_stmt 1
 1564 0150 FB 42 00 00 00 00       		mov.L	#_FltBLDCUnblock, r4
 1565 0156 CC 44                   		mov.B	[r4], r4
2015:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		||
 1566                             		.loc 1 2015 0
 1567 0158 FD 74 C4 01             		tst	#1, r4
 1568 015c 1C                      		bne	.L179
2034:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		killDSPReqState = LOAD_ON;
 1569                             		.loc 1 2034 0
 1570 015d 66 1E                   		mov	#1, r14
 1571                             	.LVL132:
 1572 015f 03                      		.balign 2,3,5
 1573                             	.L179:
2041:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	LoadsReq_New[RegDev_Pos[LD_KILL_DSP_REG_IND]].b = killDSPReqState;
 1574                             		.loc 1 2041 0
 1575 0160 FB 42 00 00 00 00       		mov.L	#_RegDev_Pos, r4
 1576 0166 B1 C4                   		movu.B	6[r4], r4
 1577 0168 FB 32 00 00 00 00       		mov.L	#_LoadsReq_New, r3
 1578 016e FE 04 3E                		mov.B	r14, [r4,r3]
 1579 0171 02                      		rts
 1580                             	.LVL133:
 1581                             	.L169:
1938:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( bulk_DSP_Side_ReqState != LOAD_OFF )
 1582                             		.loc 1 1938 0
 1583 0172 76 2E FF 00             		and #0xff, r14
 1584                             	.LVL134:
 1585 0176 3B 79 FF                		bne	.L172
 1586 0179 2E 83                   		bra	.L171
 1587                             	.LFE17:
 1589 017b 03                      		.section	.text.HIO_Check_VS_Valid,"ax",@progbits
 1590                             		.global	_HIO_Check_VS_Valid
 1592                             	_HIO_Check_VS_Valid:
 1593                             	.LFB18:
2061:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 1594                             		.loc 1 2061 0
 1595                             	.LVL135:
2067:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if (LoadsReq_Old[RegDev_Pos[LD_KILL_DSP_REG_IND]].b==0 )
 1596                             		.loc 1 2067 0
 1597 0000 FB E2 00 00 00 00       		mov.L	#_RegDev_Pos, r14
 1598 0006 59 EE 06                		movu.B	6[r14], r14
 1599 0009 FB 42 00 00 00 00       		mov.L	#_LoadsReq_Old, r4
 1600 000f FE CE 4E                		movu.B	[r14,r4], r14
 1601 0012 61 0E                   		cmp	#0, r14
 1602 0014 20 27                   		beq	.L200
2073:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (GET_BLDC_SPEED(BLDC_PumpReq_Old[aux_index])>0)
 1603                             		.loc 1 2073 0
 1604 0016 5B 11                   		movu.B	r1, r1
 1605 0018 63 C1                   		mul	#12, r1
 1606                             	.LVL136:
 1607 001a 70 14 00 00 00 00       		add	#_BLDC_PumpReq_Old, r1, r4
 1608 0020 59 4E 02                		movu.B	2[r4], r14
 1609 0023 6C 8E                   		shll	#8, r14
 1610 0025 55 4E 03                		or	3[r4].UB, r14
 1611 0028 DF EE                   		mov.W	r14, r14
 1612 002a 61 0E                   		cmp	#0, r14
 1613 002c 20 0F                   		beq	.L200
2075:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( BLDC_Pump_InfoBuffer[aux_index][BLDC_FLAGS_MSB] & 0x08)
 1614                             		.loc 1 2075 0
 1615 002e 70 11 00 00 00 00       		add	#_BLDC_Pump_InfoBuffer, r1
 1616 0034 8A 91                   		mov.B	10[r1], r1
 1617 0036 6A 31                   		shar	#3, r1
2069:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		return FALSE;
 1618                             		.loc 1 2069 0
 1619 0038 64 11                   		and #1, r1
 1620 003a 0C                      		bra	.L198
 1621                             	.L200:
2083:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	return FALSE;
 1622                             		.loc 1 2083 0
 1623 003b CF E1                   		mov.B	r14, r1
 1624 003d 03                      		.balign 2,3,1
 1625                             	.L198:
2084:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 1626                             		.loc 1 2084 0
 1627 003e 5B 11                   		movu.B	r1, r1
 1628 0040 02                      		rts
 1629                             	.LFE18:
 1631 0041 03                      		.section	.text.HIO_inputManagement,"ax",@progbits
 1632                             		.global	_HIO_inputManagement
 1634                             	_HIO_inputManagement:
 1635                             	.LFB6:
 680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 1636                             		.loc 1 680 0
 1637 0000 6E 6D                   		pushm	r6-r13
 1638                             	.LCFI14:
 1639 0002 60 C0                   		sub	#12, r0
 1640                             	.LCFI15:
 681:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** GIMap_Struct *pGenInput=(GIMap_Struct *)Tab_GIData.Data;
 1641                             		.loc 1 681 0
 1642 0004 FB D2 00 00 00 00       		mov.L	#_Tab_GIData, r13
 1643 000a EC DB                   		mov.L	[r13], r11
 1644                             	.LVL137:
 686:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	GIValid &= (GI_PRESS_SENSOR_LEVEL_MSK|GI_TURB_SENSOR_MSK);
 1645                             		.loc 1 686 0
 1646 000c FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 1647 0012 DC 7A                   		mov.W	[r7], r10
 1648 0014 76 2A 80 02             		and #0x280, r10
 1649 0018 D3 7A                   		mov.W	r10, [r7]
 688:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	FltGICriteria = 0;
 1650                             		.loc 1 688 0
 1651 001a FB A2 00 00 00 00       		mov.L	#_FltGICriteria, r10
 1652 0020 F8 A4 00                		mov.B	#0, [r10]
 695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		switch (pGenInput->id.s.type)
 1653                             		.loc 1 695 0
 1654 0023 FB 92 00 00 00 00       		mov.L	#.L209, r9
 690:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	while((uint8_t*)pGenInput<Tab_GIData.Data+Tab_GIData.DataLenght*2)
 1655                             		.loc 1 690 0
 1656 0029 38 15 05                		bra	.L202
 1657                             	.LVL138:
 1658                             	.L257:
 693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		aux_index = pGenInput->id.s.index;
 1659                             		.loc 1 693 0
 1660 002c CD B8 01                		mov.B	1[r11], r8
 1661 002f 64 F8                   		and #15, r8
 1662 0031 CF 8A                   		mov.B	r8, r10
 1663                             	.LVL139:
 695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		switch (pGenInput->id.s.type)
 1664                             		.loc 1 695 0
 1665 0033 59 BC 01                		movu.B	1[r11], r12
 1666 0036 68 4C                   		shlr	#4, r12
 1667 0038 61 5C                   		cmp	#5, r12
 1668 003a 25 05 38 00 05          		bgtu	.L203
 1669 003f FE 6C 9C                		mov.L	[r12,r9], r12
 1670                             		
 1671 0042 7F 0C                   	1:jmp	r12
 1672                             		.section	.rodata.HIO_inputManagement,"a",@progbits
 1673                             		.balign 4
 1674                             		.balign 4
 1675                             	.L209:
 1676 0000 00 00 00 44             		.long .L204
 1677 0004 00 00 05 3C             		.long .L203
 1678 0008 00 00 00 89             		.long .L205
 1679 000c 00 00 03 3C             		.long .L206
 1680 0010 00 00 03 88             		.long .L207
 1681 0014 00 00 04 58             		.long .L208
 1682                             		.section	.text.HIO_inputManagement
 1683                             	.L204:
 700:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				FltGITemp = 0;
 1684                             		.loc 1 700 0
 1685 0044 FB C2 00 00 00 00       		mov.L	#_FltGITemp, r12
 1686 004a F8 C4 00                		mov.B	#0, [r12]
 702:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( HIO_GIConv(pGenInput,&GI_tmp) == S_OK )
 1687                             		.loc 1 702 0
 1688 004d EF B1                   		mov.L	r11, r1
 1689 004f 71 02 08                		add	#8, r0, r2
 1690 0052 05 00 00 00             		bsr	_HIO_GIConv
 1691                             	.LVL140:
 1692 0056 76 21 FF 00             		and #0xff, r1
 1693 005a 3B E2 04                		bne	.L203
 704:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( ((uint8_t)(GI_tmp) != PROBE_UNDEF_CC) && ((uint8_t)(GI_tmp) != PROBE_UNDEF_CA) ) 
 1694                             		.loc 1 704 0
 1695 005d 99 04                   		mov.W	8[r0], r4
 1696 005f CF 4E                   		mov.B	r4, r14
 1697 0061 71 E3 02                		add	#2, r14, r3
 1698 0064 5B 33                   		movu.B	r3, r3
 1699 0066 61 13                   		cmp	#1, r3
 1700 0068 25 12                   		bleu	.L211
 706:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						GITemp = (uint8_t)(GI_tmp);
 1701                             		.loc 1 706 0
 1702 006a FB C2 00 00 00 00       		mov.L	#_GITemp, r12
 1703 0070 C3 C4                   		mov.B	r4, [r12]
 708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						SETBIT(GIValid,(aux_index+GI_FIRST_PROBE_BIT));
 1704                             		.loc 1 708 0
 1705 0072 5B 8A                   		movu.B	r8, r10
 1706 0074 71 AC 06                		add	#6, r10, r12
 1707 0077 38 87 04                		bra	.L308
 1708                             	.L211:
 713:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						if ( (uint8_t)(GI_tmp) == PROBE_UNDEF_CC )
 1709                             		.loc 1 713 0
 1710 007a 5B 4E                   		movu.B	r4, r14
 715:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							FltGITemp = FLT_SUBCODE_PROBE_CC;
 1711                             		.loc 1 715 0
 1712 007c 75 5E FF                		cmp	#0xff, r14
 1713 007f FC DB E1                		scne.L	r14
 1714 0082 62 1E                   		add	#1, r14
 1715 0084 C3 CE                   		mov.B	r14, [r12]
 1716 0086 38 B6 04                		bra	.L203
 1717                             	.L205:
 728:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				switch (pGenInput->readType)
 1718                             		.loc 1 728 0
 1719 0089 58 BC                   		movu.B	[r11], r12
 1720 008b 68 4C                   		shlr	#4, r12
 1721 008d 61 1C                   		cmp	#1, r12
 1722 008f 20 0F                   		beq	.L214
 1723 0091 61 3C                   		cmp	#3, r12
 1724 0093 3A E0 01                		beq	.L215
 1725 0096 61 0C                   		cmp	#0, r12
 1726 0098 3A C4 00                		beq	.L213
 1727 009b 38 A1 04                		bra	.L203
 1728                             	.L214:
 733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						if ( HIO_GIConv(pGenInput,&GI_tmp) == S_OK )
 1729                             		.loc 1 733 0
 1730 009e EF B1                   		mov.L	r11, r1
 1731 00a0 71 02 08                		add	#8, r0, r2
 1732 00a3 05 00 00 00             		bsr	_HIO_GIConv
 1733                             	.LVL141:
 1734 00a7 76 21 FF 00             		and #0xff, r1
 1735 00ab 3B 91 04                		bne	.L203
 735:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							if (CRITERION_UNDEF != (uint8_t)(GI_tmp))
 1736                             		.loc 1 735 0
 1737 00ae CD 0E 09                		mov.B	9[r0], r14
 1738 00b1 5B E4                   		movu.B	r14, r4
 1739 00b3 5B 8A                   		movu.B	r8, r10
 1740 00b5 61 24                   		cmp	#2, r4
 1741 00b7 3A 92 00                		beq	.L217
 737:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 1742                             		.loc 1 737 0
 1743 00ba FD 62 AC                		shll	r10, r12
 1744 00bd DC 73                   		mov.W	[r7], r3
 1745 00bf 57 C3                   		or	r12, r3
 1746 00c1 D3 73                   		mov.W	r3, [r7]
 739:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if ( aux_index == GI_SALT_IND)
 1747                             		.loc 1 739 0
 1748 00c3 5B 88                   		movu.B	r8, r8
 1749 00c5 61 38                   		cmp	#3, r8
 1750 00c7 21 61                   		bne	.L218
 744:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( RegDev_Pos[LD_SALT_ACTIVATION_REG_IND] != NO_LD_POS )
 1751                             		.loc 1 744 0
 1752 00c9 FB 42 00 00 00 00       		mov.L	#_RegDev_Pos, r4
 1753 00cf B0 CC                   		movu.B	3[r4], r4
 1754 00d1 75 54 FF                		cmp	#0xff, r4
 1755 00d4 20 1E                   		beq	.L219
 748:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if( LoadsReq_Old[RegDev_Pos[LD_SALT_ACTIVATION_REG_IND]].b == LOAD_OFF )
 1756                             		.loc 1 748 0
 1757 00d6 FB 22 00 00 00 00       		mov.L	#_LoadsReq_Old, r2
 1758 00dc FE C4 24                		movu.B	[r4,r2], r4
 1759 00df 61 04                   		cmp	#0, r4
 1760 00e1 21 11                   		bne	.L219
 755:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) );
 1761                             		.loc 1 755 0
 1762 00e3 7A 33                   		bclr #3, r3
 1763 00e5 D3 73                   		mov.W	r3, [r7]
 756:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											Salt_Time_Of_Stability = 0;
 1764                             		.loc 1 756 0
 1765 00e7 FB A2 00 00 00 00       		mov.L	#_Salt_Time_Of_Stability, r10
 1766 00ed C3 A4                   		mov.B	r4, [r10]
 758:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											break;
 1767                             		.loc 1 758 0
 1768 00ef 38 4D 04                		bra	.L203
 1769                             	.L219:
 762:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if ( GETBITVAL(GICriteria, GI_SALT_IND) != ((uint8_t)(GI_tmp)))
 1770                             		.loc 1 762 0
 1771 00f2 FB 42 00 00 00 00       		mov.L	#_GICriteria, r4
 1772 00f8 CC 42                   		mov.B	[r4], r2
 1773 00fa 6A 32                   		shar	#3, r2
 1774 00fc 64 12                   		and #1, r2
 1775 00fe 5B E1                   		movu.B	r14, r1
 1776 0100 FB 42 00 00 00 00       		mov.L	#_Salt_Time_Of_Stability, r4
 1777 0106 47 12                   		cmp	r1, r2
 1778 0108 20 1C                   		beq	.L220
 764:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if ( Salt_Time_Of_Stability < Salt_Filtro_Stab)
 1779                             		.loc 1 764 0
 1780 010a CC 42                   		mov.B	[r4], r2
 1781 010c 5B 28                   		movu.B	r2, r8
 1782                             	.LVL142:
 1783 010e FB 12 00 00 00 00       		mov.L	#_Salt_Filtro_Stab, r1
 1784 0114 44 18                   		cmp	[r1].UB, r8
 1785 0116 22 12                   		bgeu	.L218
 767:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											Salt_Time_Of_Stability++;
 1786                             		.loc 1 767 0
 1787 0118 62 12                   		add	#1, r2
 1788 011a C3 42                   		mov.B	r2, [r4]
 769:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);	
 1789                             		.loc 1 769 0
 1790 011c FC 3B C4                		not	r12, r4
 1791 011f 53 43                   		and	r4, r3
 1792 0121 D3 73                   		mov.W	r3, [r7]
 1793 0123 0D                      		bra	.L218
 1794                             	.LVL143:
 1795                             	.L220:
 775:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										Salt_Time_Of_Stability = 0;
 1796                             		.loc 1 775 0
 1797 0124 3C 40 00                		mov.B	#0, [r4]
 1798                             	.LVL144:
 1799 0127 03                      		.balign 2,3,3
 1800                             	.L218:
 779:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if ( TESTBIT(GIValid,aux_index+GI_FIRST_CRITERION_BIT))
 1801                             		.loc 1 779 0
 1802 0128 5C 74                   		movu.W	[r7], r4
 1803 012a FC 6B 4A                		btst	r10, r4
 1804 012d 3A 0F 04                		beq	.L203
 781:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if (CRITERION_ON == (uint8_t)(GI_tmp))
 1805                             		.loc 1 781 0
 1806 0130 5B EA                   		movu.B	r14, r10
 1807                             	.LVL145:
 1808 0132 FB E2 00 00 00 00       		mov.L	#_GICriteria, r14
 1809 0138 61 1A                   		cmp	#1, r10
 1810 013a 1F                      		bne	.L221
 783:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										SETBIT(GICriteria, aux_index);
 1811                             		.loc 1 783 0
 1812 013b 06 14 EC                		or	[r14].B, r12
 1813 013e 38 CE 00                		bra	.L306
 1814                             	.L221:
 787:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										CLRBIT(GICriteria, aux_index);
 1815                             		.loc 1 787 0
 1816 0141 7E 0C                   		not	r12
 1817 0143 06 10 EC                		and	[r14].B, r12
 1818 0146 38 C6 00                		bra	.L306
 1819                             	.LVL146:
 1820                             	.L217:
 794:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								SETBIT(FltGICriteria, aux_index);
 1821                             		.loc 1 794 0
 1822 0149 FB E2 00 00 00 00       		mov.L	#_FltGICriteria, r14
 1823 014f FD 62 AC                		shll	r10, r12
 1824 0152 EF CA                   		mov.L	r12, r10
 1825 0154 06 14 EA                		or	[r14].B, r10
 1826 0157 C3 EA                   		mov.B	r10, [r14]
 1827 0159 38 E3 03                		bra	.L203
 1828                             	.L213:
 1829                             	.LBB3:
 804:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							uint8_t currInputVal=(LIB_DIO_GetDigInputVal(pGenInput->pos)<<aux_index);
 1830                             		.loc 1 804 0
 1831 015c CD B1 03                		mov.B	3[r11], r1
 1832 015f 05 00 00 00             		bsr	_LIB_DIO_GetDigInputVal
 1833                             	.LVL147:
 1834 0163 5B 8A                   		movu.B	r8, r10
 1835 0165 EF 16                   		mov.L	r1, r6
 1836 0167 FD 62 A6                		shll	r10, r6
 1837                             	.LVL148:
 805:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							Loader_Struct table={0,0};
 1838                             		.loc 1 805 0
 1839 016a E3 0C                   		mov.L	r12, [r0]
 1840 016c D7 0C 02                		mov.W	r12, 4[r0]
 807:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							HIO_GIGetCriterionDigitalTable(pGenInput,&table);
 1841                             		.loc 1 807 0
 1842 016f EF B1                   		mov.L	r11, r1
 1843 0171 EF 02                   		mov.L	r0, r2
 1844 0173 05 00 00 00             		bsr	_HIO_GIGetCriterionDigitalTable
 1845                             	.LVL149:
 809:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							if(table.Data && ((GICriterionDigitalTab_Struct*)(table.Data))->Filter) 
 1846                             		.loc 1 809 0
 1847 0177 EC 0C                   		mov.L	[r0], r12
 1848 0179 5B 88                   		movu.B	r8, r8
 1849 017b 61 0C                   		cmp	#0, r12
 1850 017d 3A 9B 00                		beq	.L222
 809:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							if(table.Data && ((GICriterionDigitalTab_Struct*)(table.Data))->Filter) 
 1851                             		.loc 1 809 0 is_stmt 0 discriminator 1
 1852 0180 CC C2                   		mov.B	[r12], r2
 1853 0182 5B 2C                   		movu.B	r2, r12
 1854 0184 61 0C                   		cmp	#0, r12
 1855 0186 3A 92 00                		beq	.L222
 813:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( aux_index == GI_SALT_IND )
 1856                             		.loc 1 813 0 is_stmt 1
 1857 0189 61 38                   		cmp	#3, r8
 1858 018b 21 2F                   		bne	.L223
 816:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( RegDev_Pos[LD_SALT_ACTIVATION_REG_IND] != NO_LD_POS )
 1859                             		.loc 1 816 0
 1860 018d FB C2 00 00 00 00       		mov.L	#_RegDev_Pos, r12
 1861 0193 59 CC 03                		movu.B	3[r12], r12
 1862 0196 75 5C FF                		cmp	#0xff, r12
 1863 0199 20 21                   		beq	.L223
 820:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if( LoadsReq_Old[RegDev_Pos[LD_SALT_ACTIVATION_REG_IND]].b == LOAD_OFF )
 1864                             		.loc 1 820 0
 1865 019b FB E2 00 00 00 00       		mov.L	#_LoadsReq_Old, r14
 1866 01a1 FE CC EC                		movu.B	[r12,r14], r12
 1867 01a4 61 0C                   		cmp	#0, r12
 1868 01a6 21 14                   		bne	.L223
 830:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) );
 1869                             		.loc 1 830 0
 1870 01a8 DC 7A                   		mov.W	[r7], r10
 1871 01aa 7A 3A                   		bclr #3, r10
 1872 01ac D3 7A                   		mov.W	r10, [r7]
 831:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CriterionFilter[GI_SALT_IND] = 0;
 1873                             		.loc 1 831 0
 1874 01ae FB A2 00 00 00 00       		mov.L	#_CriterionFilter, r10
 1875 01b4 C7 AC 03                		mov.B	r12, 3[r10]
 1876 01b7 38 85 03                		bra	.L203
 1877                             	.L223:
2194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	}
2195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** #endif
2196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 1878                             		.loc 1 2196 0
 1879 01ba EF 61                   		mov.L	r6, r1
 1880 01bc 76 21 FF 00             		and #0xff, r1
 839:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if ( (currInputVal&(1<<aux_index)) == (CriterionOldState&(1<<aux_index)) )
 1881                             		.loc 1 839 0
 1882 01c0 FB E2 00 00 00 00       		mov.L	#_CriterionOldState, r14
 1883 01c6 CC E4                   		mov.B	[r14], r4
 1884 01c8 5B 4C                   		movu.B	r4, r12
 1885 01ca FC 37 1C                		xor	r1, r12
 1886 01cd FD 61 AC                		shar	r10, r12
 1887 01d0 FB 32 00 00 00 00       		mov.L	#_CriterionFilter, r3
 1888 01d6 FD 74 CC 01             		tst	#1, r12
 1889 01da 21 15                   		bne	.L225
 841:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if ( CriterionFilter[aux_index] < ((GICriterionDigitalTab_Struct*)(table.Data))->Filter )
 1890                             		.loc 1 841 0
 1891 01dc FE 4A 3C                		mov.B	[r10,r3], r12
 1892 01df 5B CE                   		movu.B	r12, r14
 1893 01e1 5B 22                   		movu.B	r2, r2
 1894 01e3 47 2E                   		cmp	r2, r14
 1895 01e5 22 5D                   		bgeu	.L312
 843:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										CriterionFilter[aux_index]++;                                    
 1896                             		.loc 1 843 0
 1897 01e7 62 1C                   		add	#1, r12
 1898 01e9 FE 0A 3C                		mov.B	r12, [r10,r3]
 1899 01ec 38 DE 01                		bra	.L309
 1900                             	.L225:
 862:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CriterionFilter[aux_index] = 0;
 1901                             		.loc 1 862 0
 1902 01ef 66 0C                   		mov	#0, r12
 1903 01f1 FE 0A 3C                		mov.B	r12, [r10,r3]
 864:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CLRBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 1904                             		.loc 1 864 0
 1905 01f4 66 1C                   		mov.L	#1, r12
 1906 01f6 FD 62 AC                		shll	r10, r12
 1907 01f9 FC 3B C3                		not	r12, r3
 1908 01fc DC 72                   		mov.W	[r7], r2
 1909 01fe 53 32                   		and	r3, r2
 1910 0200 D3 72                   		mov.W	r2, [r7]
 866:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( currInputVal&(1<<aux_index) ) 
 1911                             		.loc 1 866 0
 1912 0202 FD 61 A1                		shar	r10, r1
 1913 0205 FD 74 C1 01             		tst	#1, r1
 1914 0209 10                      		beq	.L230
 868:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										SETBIT(CriterionOldState, aux_index);   
 1915                             		.loc 1 868 0
 1916 020a 57 4C                   		or	r4, r12
 1917                             	.LVL150:
 1918                             		.balign 2,3,1
 1919                             	.L306:
 1920 020c C3 EC                   		mov.B	r12, [r14]
 1921 020e 38 2E 03                		bra	.L203
 1922                             	.LVL151:
 1923                             	.L230:
 872:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										CLRBIT(CriterionOldState, aux_index);
 1924                             		.loc 1 872 0
 1925 0211 53 34                   		and	r3, r4
 1926 0213 C3 E4                   		mov.B	r4, [r14]
 1927 0215 38 27 03                		bra	.L203
 1928                             	.L222:
 880:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( aux_index == GI_SALT_IND )
 1929                             		.loc 1 880 0
 1930 0218 61 38                   		cmp	#3, r8
 1931 021a 21 22                   		bne	.L231
 883:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if( RegDev_Pos[LD_SALT_ACTIVATION_REG_IND] != NO_LD_POS )
 1932                             		.loc 1 883 0
 1933 021c FB C2 00 00 00 00       		mov.L	#_RegDev_Pos, r12
 1934 0222 59 CC 03                		movu.B	3[r12], r12
 1935 0225 75 5C FF                		cmp	#0xff, r12
 1936 0228 20 14                   		beq	.L231
 887:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if( LoadsReq_Old[RegDev_Pos[LD_SALT_ACTIVATION_REG_IND]].b == LOAD_OFF )
 1937                             		.loc 1 887 0
 1938 022a FB E2 00 00 00 00       		mov.L	#_LoadsReq_Old, r14
 1939 0230 FE CC EC                		movu.B	[r12,r14], r12
 1940 0233 61 0C                   		cmp	#0, r12
 1941 0235 1F                      		bne	.L231
 892:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(GIValid, (GI_FIRST_CRITERION_BIT + GI_SALT_IND) );
 1942                             		.loc 1 892 0
 1943 0236 DC 7A                   		mov.W	[r7], r10
 1944 0238 7A 3A                   		bclr #3, r10
 1945 023a 2E 34                   		bra	.L304
 1946                             	.L231:
 1947                             		.loc 1 2196 0
 1948 023c EF 61                   		mov.L	r6, r1
 1949 023e 76 21 FF 00             		and #0xff, r1
 1950                             		.balign 2,3,2
 1951                             	.L312:
 900:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( currInputVal&(1<<aux_index) )
 1952                             		.loc 1 900 0
 1953 0242 FD 61 A1                		shar	r10, r1
 1954 0245 FB C2 00 00 00 00       		mov.L	#_GICriteria, r12
 1955 024b FD 74 C1 01             		tst	#1, r1
 1956 024f 10                      		beq	.L232
 902:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									SETBIT(GICriteria,aux_index);
 1957                             		.loc 1 902 0
 1958 0250 CC CE                   		mov.B	[r12], r14
 1959 0252 FC 63 EA                		bset	r10, r14
 1960 0255 2E 0D                   		bra	.L301
 1961                             	.L232:
 906:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CLRBIT(GICriteria,aux_index);
 1962                             		.loc 1 906 0
 1963 0257 66 1E                   		mov.L	#1, r14
 1964 0259 FD 62 AE                		shll	r10, r14
 1965 025c 7E 0E                   		not	r14
 1966 025e 06 10 CE                		and	[r12].B, r14
 1967 0261 03                      		.balign 2,3,1
 1968                             	.L301:
 1969 0262 C3 CE                   		mov.B	r14, [r12]
 909:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 1970                             		.loc 1 909 0
 1971 0264 DC 7C                   		mov.W	[r7], r12
 1972 0266 EF CE                   		mov.L	r12, r14
 1973 0268 FC 63 EA                		bset	r10, r14
 1974 026b EF EA                   		mov.L	r14, r10
 1975                             	.LVL152:
 1976 026d 03                      		.balign 2,3,1
 1977                             	.L304:
 1978 026e D3 7A                   		mov.W	r10, [r7]
 1979                             	.LBE3:
 914:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						break;
 1980                             		.loc 1 914 0
 1981 0270 38 CC 02                		bra	.L203
 1982                             	.LVL153:
 1983                             	.L215:
 917:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						CLRBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 1984                             		.loc 1 917 0
 1985 0273 5B 8A                   		movu.B	r8, r10
 1986 0275 66 1C                   		mov.L	#1, r12
 1987 0277 FD 62 AC                		shll	r10, r12
 1988 027a FC 3B C8                		not	r12, r8
 1989                             	.LVL154:
 1990 027d DC 7E                   		mov.W	[r7], r14
 1991 027f 53 8E                   		and	r8, r14
 1992 0281 D3 7E                   		mov.W	r14, [r7]
 918:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						if( UI_Info_Ctrl == TRUE )
 1993                             		.loc 1 918 0
 1994 0283 FB A2 00 00 00 00       		mov.L	#_UI_Info_Ctrl, r10
 1995                             	.LVL155:
 1996 0289 58 AA                   		movu.B	[r10], r10
 1997 028b 61 1A                   		cmp	#1, r10
 1998 028d 3B AF 02                		bne	.L203
 921:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							if (uPDoorStatus == UP_DOOR_CLOSE)
 1999                             		.loc 1 921 0
 2000 0290 FB A2 00 00 00 00       		mov.L	#_uPDoorStatus, r10
 2001 0296 58 AA                   		movu.B	[r10], r10
 2002 0298 61 1A                   		cmp	#1, r10
 2003 029a 21 74                   		bne	.L234
 923:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if (TESTBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE) )
 2004                             		.loc 1 923 0
 2005 029c FB A2 00 00 00 00       		mov.L	#_Flags_2, r10
 2006 02a2 CC A4                   		mov.B	[r10], r4
 2007 02a4 61 04                   		cmp	#0, r4
 2008 02a6 28 06                   		bge	.L235
 926:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 2009                             		.loc 1 926 0
 2010 02a8 57 EC                   		or	r14, r12
 2011 02aa 2E 60                   		bra	.L303
 2012                             	.L235:
 931:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									if(HIO_GetSparklingAidCriterionValue(pGenInput,&GI_tmp)==S_OK)
 2013                             		.loc 1 931 0
 2014 02ac EF B1                   		mov.L	r11, r1
 2015 02ae 71 02 08                		add	#8, r0, r2
 2016 02b1 05 00 00 00             		bsr	_HIO_GetSparklingAidCriterionValue
 2017                             	.LVL156:
 2018 02b5 76 21 FF 00             		and #0xff, r1
 2019 02b9 21 77                   		bne	.L236
 933:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										if((uint8_t)GI_tmp)
 2020                             		.loc 1 933 0
 2021 02bb DD 0E 04                		mov.W	8[r0], r14
 2022 02be 5B E4                   		movu.B	r14, r4
 2023                             	.LVL157:
 2024 02c0 61 04                   		cmp	#0, r4
 2025                             	.LVL158:
 2026 02c2 20 17                   		beq	.L238
 935:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											SETBIT(GICriteria,aux_index);
 2027                             		.loc 1 935 0
 2028 02c4 FB E2 00 00 00 00       		mov.L	#_GICriteria, r14
 2029 02ca CC E4                   		mov.B	[r14], r4
 2030                             	.LVL159:
 2031 02cc 57 C4                   		or	r12, r4
 2032 02ce C3 E4                   		mov.B	r4, [r14]
 936:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											CLRBIT(Flags_2,FLAGS2_REED_NO_SPARKL_BIT);
 2033                             		.loc 1 936 0
 2034 02d0 CC AE                   		mov.B	[r10], r14
 2035 02d2 7A 0E                   		bclr #0, r14
 937:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											SETBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
 2036                             		.loc 1 937 0
 2037 02d4 75 3E 80                		or	#0xffffff80, r14
 2038 02d7 2E 23                   		bra	.L302
 2039                             	.LVL160:
 2040                             	.L238:
 942:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 											if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN )|| (Interpreter_Data[0].compl
 2041                             		.loc 1 942 0
 2042 02d9 FB 42 00 00 00 00       		mov.L	#_Interpreter_Data, r4
 2043                             	.LVL161:
 2044 02df CC 44                   		mov.B	[r4], r4
 2045 02e1 64 F4                   		and #15, r4
 2046 02e3 60 14                   		sub	#1, r4
 2047 02e5 61 14                   		cmp	#1, r4
 2048 02e7 24 16                   		bgtu	.L240
 944:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												CLRBIT(GICriteria,aux_index);
 2049                             		.loc 1 944 0
 2050 02e9 FB E2 00 00 00 00       		mov.L	#_GICriteria, r14
 2051 02ef 06 10 E8                		and	[r14].B, r8
 2052 02f2 C3 E8                   		mov.B	r8, [r14]
 946:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												SETBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);	
 2053                             		.loc 1 946 0
 2054 02f4 CC AE                   		mov.B	[r10], r14
 2055 02f6 75 3E 81                		or	#0xffffff81, r14
 2056 02f9 03                      		.balign 2,3,1
 2057                             	.L302:
 2058 02fa C3 AE                   		mov.B	r14, [r10]
 2059 02fc 0A                      		bra	.L239
 2060                             	.L240:
 950:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 												SparklingReads.nSamples=0;
 2061                             		.loc 1 950 0
 2062 02fd FB A2 00 00 00 00       		mov.L	#_SparklingReads, r10
 2063 0303 C7 AE 01                		mov.B	r14, 1[r10]
 2064                             		.balign 2,3,2
 2065                             	.L239:
 955:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 										SETBIT(GIValid, aux_index+GI_FIRST_CRITERION_BIT);
 2066                             		.loc 1 955 0
 2067 0306 06 54 7C                		or	[r7].W, r12
 2068                             	.LVL162:
 2069 0309 03                      		.balign 2,3,1
 2070                             	.L303:
 2071 030a D3 7C                   		mov.W	r12, [r7]
 2072 030c 2E 24                   		bra	.L236
 2073                             	.LVL163:
 2074                             	.L234:
 960:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 								if( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 2075                             		.loc 1 960 0
 2076 030e FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 2077 0314 CC AA                   		mov.B	[r10], r10
 2078 0316 64 FA                   		and	#15, r10
 2079 0318 21 18                   		bne	.L236
 962:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									SparklingReads.nSamples=0;
 2080                             		.loc 1 962 0
 2081 031a FB C2 00 00 00 00       		mov.L	#_SparklingReads, r12
 2082 0320 C7 CA 01                		mov.B	r10, 1[r12]
 963:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 									CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
 2083                             		.loc 1 963 0
 2084 0323 FB A2 00 00 00 00       		mov.L	#_Flags_2, r10
 2085 0329 CC AC                   		mov.B	[r10], r12
 2086 032b 75 2C 7F                		and #0x7f, r12
 2087 032e C3 AC                   		mov.B	r12, [r10]
 2088                             	.LVL164:
 2089                             		.balign 2,3,5
 2090                             	.L236:
 966:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							UI_Info_Ctrl=FALSE;
 2091                             		.loc 1 966 0
 2092 0330 FB A2 00 00 00 00       		mov.L	#_UI_Info_Ctrl, r10
 2093 0336 F8 A4 00                		mov.B	#0, [r10]
 2094 0339 38 03 02                		bra	.L203
 2095                             	.LVL165:
 2096                             	.L206:
 982:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    fault=PM_PulseCounter_GetWarning();
 2097                             		.loc 1 982 0
 2098 033c 05 00 00 00             		bsr	_PM_PulseCounter_GetWarning
 2099                             	.LVL166:
 983:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    if(fault) 
 2100                             		.loc 1 983 0
 2101 0340 61 01                   		cmp	#0, r1
 2102 0342 20 0D                   		beq	.L242
 986:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			        FltGIPulseCount=fault;
 2103                             		.loc 1 986 0
 2104 0344 FB A2 00 00 00 00       		mov.L	#_FltGIPulseCount, r10
 2105 034a C3 A1                   		mov.B	r1, [r10]
 987:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			        break; /* non aggiornare la lettura dell'ingresso */
 2106                             		.loc 1 987 0
 2107 034c 38 F0 01                		bra	.L203
 2108                             	.L242:
 991:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    if(HIO_GIScaleConv(pGenInput, &GI_tmp) == S_OK)
 2109                             		.loc 1 991 0
 2110 034f EF B1                   		mov.L	r11, r1
 2111                             	.LVL167:
 2112 0351 71 02 08                		add	#8, r0, r2
 2113 0354 05 00 00 00             		bsr	_HIO_GIScaleConv
 2114                             	.LVL168:
 2115 0358 76 21 FF 00             		and #0xff, r1
 2116 035c 3B E0 01                		bne	.L203
 993:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			      GIWaterLoaded=GI_tmp;
 2117                             		.loc 1 993 0
 2118 035f FB C2 00 00 00 00       		mov.L	#_GIWaterLoaded, r12
 2119 0365 D1 0C 04                		mov.W	8[r0], [r12]
 995:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		            if (pGenInput->readType == PULSECNTR_I)
 2120                             		.loc 1 995 0
 2121 0368 CC BC                   		mov.B	[r11], r12
 2122 036a 76 2C F0 00             		and #0xf0, r12
 2123 036e 75 5C B0                		cmp	#0xb0, r12
 2124 0371 21 0F                   		bne	.L243
 997:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		          	  PulseLoaded=PM_PulseCounter_GetCount();
 2125                             		.loc 1 997 0
 2126 0373 05 00 00 00             		bsr	_PM_PulseCounter_GetCount
 2127                             	.LVL169:
 2128 0377 FB C2 00 00 00 00       		mov.L	#_PulseLoaded, r12
 2129 037d D3 C1                   		mov.W	r1, [r12]
 2130 037f 03                      		.balign 2,3,1
 2131                             	.L243:
1000:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		          	SETBIT(GIValid, aux_index+GI_FIRST_PULSE_COUNTER_BIT);
 2132                             		.loc 1 1000 0
 2133 0380 5B AA                   		movu.B	r10, r10
 2134 0382 71 AC 08                		add	#8, r10, r12
 2135 0385 38 79 01                		bra	.L308
 2136                             	.L207:
1006:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    if((TurbiditySensorCal.state == (uint8_t)TURBSENS_VALID_CALIBR_VALUE_STATE)
 2137                             		.loc 1 1006 0
 2138 0388 FB C2 00 00 00 00       		mov.L	#_TurbiditySensorCal, r12
 2139 038e 59 CE 05                		movu.B	5[r12], r14
 2140 0391 61 0E                   		cmp	#0, r14
 2141 0393 20 17                   		beq	.L244
1007:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			|| (TurbiditySensorCal.state == (uint8_t)TURBSENS_CALIBR_VALIDATE_STATE)
 2142                             		.loc 1 1007 0
 2143 0395 61 3E                   		cmp	#3, r14
 2144 0397 20 13                   		beq	.L244
1008:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    || (TurbiditySensor.state==TURBIDITY_PWM_CUSTOM_STATE)
 2145                             		.loc 1 1008 0
 2146 0399 FB E2 00 00 00 00       		mov.L	#_TurbiditySensor, r14
 2147 039f 59 EE 07                		movu.B	7[r14], r14
 2148 03a2 61 2E                   		cmp	#2, r14
 2149 03a4 16                      		beq	.L244
1009:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		    || (TurbiditySensor.state==TURBIDITY_CONTINUOUS_READ_CUSTOM_STATE))
 2150                             		.loc 1 1009 0
 2151 03a5 61 4E                   		cmp	#4, r14
 2152 03a7 3B A6 00                		bne	.L245
 2153                             		.balign 2,3,5
 2154                             	.L244:
1013:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        if(!TurbidityReads.readers)
 2155                             		.loc 1 1013 0
 2156 03aa FB C2 00 00 00 00       		mov.L	#_TurbidityReads, r12
 2157 03b0 59 CE 07                		movu.B	7[r12], r14
 2158 03b3 FB 82 00 00 00 00       		mov.L	#_TurbiditySensorCal, r8
 2159                             	.LVL170:
 2160 03b9 61 0E                   		cmp	#0, r14
 2161 03bb 21 17                   		bne	.L246
1020:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     TurbiditySensorCal.flags.bit.cmdAcquireDone=0;
 2162                             		.loc 1 1020 0
 2163 03bd CD 8C 06                		mov.B	6[r8], r12
 2164 03c0 7A 0C                   		bclr	#0, r12
 2165 03c2 C7 8C 06                		mov.B	r12, 6[r8]
1023:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     CLRBIT(GIValid, (aux_index+GI_FIRST_TURB_SENSOR_BIT));
 2166                             		.loc 1 1023 0
 2167 03c5 5B AA                   		movu.B	r10, r10
 2168 03c7 62 9A                   		add	#9, r10
 2169                             	.LVL171:
 2170 03c9 03                      		.balign 2,3,5
 2171                             	.L309:
 2172 03ca DC 7C                   		mov.W	[r7], r12
 2173 03cc FC 67 CA                		bclr	r10, r12
 2174 03cf 38 05 01                		bra	.L305
 2175                             	.LVL172:
 2176                             	.L246:
1029:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     if((TurbiditySensorCal.flags.bit.cmdAcquireDone==0))
 2177                             		.loc 1 1029 0
 2178 03d2 CD 86 06                		mov.B	6[r8], r6
 2179 03d5 64 16                   		and	#1, r6
 2180 03d7 21 27                   		bne	.L247
1033:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                     	PM_TurbiditySensor_StartAcq(TurbiditySensor.pwmval);
 2181                             		.loc 1 1033 0
 2182 03d9 FB E2 00 00 00 00       		mov.L	#_TurbiditySensor, r14
 2183 03df 5D E1 02                		movu.W	4[r14], r1
 2184 03e2 05 00 00 00             		bsr	_PM_TurbiditySensor_StartAcq
 2185                             	.LVL173:
1035:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         TurbiditySensorCal.flags.bit.cmdAcquireDone=1;
 2186                             		.loc 1 1035 0
 2187 03e6 CD 8E 06                		mov.B	6[r8], r14
 2188 03e9 78 0E                   		bset	#0, r14
 2189 03eb C7 8E 06                		mov.B	r14, 6[r8]
1037:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.ADvalue=0;
 2190                             		.loc 1 1037 0
 2191 03ee D7 C6 02                		mov.W	r6, 4[r12]
1038:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.nSamples=0;
 2192                             		.loc 1 1038 0
 2193 03f1 C7 C6 06                		mov.B	r6, 6[r12]
1039:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.a=0;
 2194                             		.loc 1 1039 0
 2195 03f4 E3 C6                   		mov.L	r6, [r12]
1040:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						TurbidityReads.flags.b.SampleInit=1;
 2196                             		.loc 1 1040 0
 2197 03f6 CD CA 0A                		mov.B	10[r12], r10
 2198                             	.LVL174:
 2199 03f9 78 2A                   		bset	#2, r10
 2200 03fb C7 CA 0A                		mov.B	r10, 10[r12]
 2201                             		.balign 2,3,3
 2202                             	.L247:
1046:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****           		    if(PM_TurbiditySensor_AcqIsReady())
 2203                             		.loc 1 1046 0
 2204 03fe 05 00 00 00             		bsr	_PM_TurbiditySensor_AcqIsReady
 2205                             	.LVL175:
 2206 0402 76 21 FF 00             		and #0xff, r1
 2207 0406 3A 36 01                		beq	.L203
1049:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         FltGITurbidity = 0;
 2208                             		.loc 1 1049 0
 2209 0409 FB A2 00 00 00 00       		mov.L	#_FltGITurbidity, r10
 2210 040f F8 A4 00                		mov.B	#0, [r10]
1051:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                         if ( HIO_GIConv(pGenInput,&GI_tmp) == S_OK )
 2211                             		.loc 1 1051 0
 2212 0412 EF B1                   		mov.L	r11, r1
 2213 0414 71 02 08                		add	#8, r0, r2
 2214 0417 05 00 00 00             		bsr	_HIO_GIConv
 2215                             	.LVL176:
 2216 041b 76 21 FF 00             		and #0xff, r1
 2217 041f 3B 1D 01                		bne	.L203
1054:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                             if(TurbidityReads.readers!=(1<<((uint8_t)TURBSENS_READ_cstm_CONTINUOUS)
 2218                             		.loc 1 1054 0
 2219 0422 FB A2 00 00 00 00       		mov.L	#_TurbidityReads, r10
 2220 0428 59 AA 07                		movu.B	7[r10], r10
 2221 042b 75 5A 20                		cmp	#32, r10
 2222 042e 20 12                   		beq	.L248
1060:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                                 GITurbidity = (uint8_t)(GI_tmp);
 2223                             		.loc 1 1060 0
 2224 0430 FB A2 00 00 00 00       		mov.L	#_GITurbidity, r10
 2225 0436 C1 0A 09                		mov.B	9[r0], [r10]
1061:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                                 SETBIT(GIValid, (GI_FIRST_TURB_SENSOR_BIT));
 2226                             		.loc 1 1061 0
 2227 0439 DC 7A                   		mov.W	[r7], r10
 2228 043b 78 9A                   		bset #9, r10
 2229 043d D3 7A                   		mov.W	r10, [r7]
 2230 043f 03                      		.balign 2,3,5
 2231                             	.L248:
1063:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                             TurbiditySensor.lvl=(uint8_t)(GI_tmp);
 2232                             		.loc 1 1063 0
 2233 0440 FB A2 00 00 00 00       		mov.L	#_TurbiditySensor, r10
 2234 0446 C5 0A 09 08             		mov.B	9[r0], 8[r10]
 2235 044a 38 F2 00                		bra	.L203
 2236                             	.LVL177:
 2237                             	.L245:
1071:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		        TurbiditySensorCal.flags.bit.cmdAcquireDone=0;
 2238                             		.loc 1 1071 0
 2239 044d CD CA 06                		mov.B	6[r12], r10
 2240 0450 7A 0A                   		bclr	#0, r10
 2241 0452 C7 CA 06                		mov.B	r10, 6[r12]
 2242 0455 38 E7 00                		bra	.L203
 2243                             	.L208:
1079:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if (HIO_Check_VS_Valid( aux_index))/*controllare se i dati per il sensore sono validi*/
 2244                             		.loc 1 1079 0
 2245 0458 CF 81                   		mov.B	r8, r1
 2246 045a 05 00 00 00             		bsr	_HIO_Check_VS_Valid
 2247                             	.LVL178:
 2248 045e 5B 11                   		movu.B	r1, r1
 2249 0460 5B 8A                   		movu.B	r8, r10
 2250 0462 61 01                   		cmp	#0, r1
 2251 0464 3A A2 00                		beq	.L249
1083:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					GI_tmp = MAKEWORD(BLDC_Pump_InfoBuffer[aux_index][BLDC_VS_STATE_MSB], BLDC_Pump_InfoBuffer[aux
 2252                             		.loc 1 1083 0
 2253 0467 EF AE                   		mov.L	r10, r14
 2254 0469 63 CE                   		mul	#12, r14
 2255 046b 70 EE 00 00 00 00       		add	#_BLDC_Pump_InfoBuffer, r14
 2256 0471 59 EC 04                		movu.B	4[r14], r12
 2257 0474 6C 8C                   		shll	#8, r12
 2258 0476 55 EC 05                		or	5[r14].UB, r12
 2259 0479 D7 0C 04                		mov.W	r12, 8[r0]
1084:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if (( aux_index== WASH_BLDC_PUMP)&& ((GI_tmp == VS_UNDEFINED_NEW)||( GI_tmp ==5)) )
 2260                             		.loc 1 1084 0
 2261 047c 76 28 FF 00             		and #0xff, r8
 2262                             	.LVL179:
 2263 0480 21 1C                   		bne	.L250
1084:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if (( aux_index== WASH_BLDC_PUMP)&& ((GI_tmp == VS_UNDEFINED_NEW)||( GI_tmp ==5)) )
 2264                             		.loc 1 1084 0 is_stmt 0 discriminator 1
 2265 0482 60 5C                   		sub	#5, r12
 2266 0484 61 1C                   		cmp	#1, r12
 2267 0486 24 16                   		bgtu	.L250
1086:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						 if( !SWTC_IsExpired((SWTC_CountersType)SFT_FILTER_VS56_STATE_W) )
 2268                             		.loc 1 1086 0 is_stmt 1
 2269 0488 75 41 1D                		mov	#29, r1
 2270 048b 05 00 00 00             		bsr	_SWTC_IsExpired
 2271                             	.LVL180:
 2272 048f 61 01                   		cmp	#0, r1
 2273 0491 21 33                   		bne	.L251
1088:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 							(void)SWTC_Run((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
 2274                             		.loc 1 1088 0
 2275 0493 75 41 1D                		mov	#29, r1
 2276 0496 05 00 00 00             		bsr	_SWTC_Run
 2277                             	.LVL181:
 2278 049a 2E 2A                   		bra	.L251
 2279                             	.L250:
1092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2280                             		.loc 1 1092 0
 2281 049c FB C2 00 00 00 00       		mov.L	#_Tab_HWCVS_data, r12
 2282 04a2 5D CE 02                		movu.W	4[r12], r14
 2283 04a5 61 2E                   		cmp	#2, r14
 2284 04a7 25 0B                   		bleu	.L258
1092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2285                             		.loc 1 1092 0 is_stmt 0 discriminator 1
 2286 04a9 EC CC                   		mov.L	[r12], r12
 2287 04ab CD C2 04                		mov.B	4[r12], r2
 2288 04ae 75 22 7F                		and #0x7f, r2
 2289 04b1 0D                      		bra	.L252
 2290                             	.L258:
1092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2291                             		.loc 1 1092 0
 2292 04b2 75 42 3C                		mov	#60, r2
 2293 04b5 03                      		.balign 2,3,2
 2294                             	.L252:
1092:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2295                             		.loc 1 1092 0 discriminator 3
 2296 04b6 75 41 1D                		mov	#29, r1
 2297 04b9 05 00 00 00             		bsr	_SWTC_SetSValue
 2298                             	.LVL182:
1093:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_Stop((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
 2299                             		.loc 1 1093 0 is_stmt 1 discriminator 3
 2300 04bd 75 41 1D                		mov	#29, r1
 2301 04c0 05 00 00 00             		bsr	_SWTC_Stop
 2302                             	.LVL183:
 2303                             		.balign 2,3,3
 2304                             	.L251:
1097:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if (( GI_tmp == VS_UNDEFINED)||( GI_tmp == VS_UNDEFINED_NEW)||(!SWTC_IsStopped((SWTC_CountersT
 2305                             		.loc 1 1097 0
 2306 04c4 5D 0C 04                		movu.W	8[r0], r12
 2307 04c7 61 4C                   		cmp	#4, r12
 2308 04c9 21 0F                   		bne	.L253
 2309 04cb 03                      		.balign 2,3,1
 2310                             	.L254:
1099:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						CLRBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+aux_index));	
 2311                             		.loc 1 1099 0
 2312 04cc 62 AA                   		add	#10, r10
 2313                             	.LVL184:
 2314 04ce DC 7C                   		mov.W	[r7], r12
 2315 04d0 FC 67 CA                		bclr	r10, r12
 2316                             	.LVL185:
 2317 04d3 03                      		.balign 2,3,1
 2318                             	.L305:
 2319 04d4 D3 7C                   		mov.W	r12, [r7]
 2320 04d6 2E 66                   		bra	.L203
 2321                             	.LVL186:
 2322                             	.L253:
1097:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if (( GI_tmp == VS_UNDEFINED)||( GI_tmp == VS_UNDEFINED_NEW)||(!SWTC_IsStopped((SWTC_CountersT
 2323                             		.loc 1 1097 0 discriminator 1
 2324 04d8 61 6C                   		cmp	#6, r12
 2325 04da 20 F2                   		beq	.L254
 2326 04dc 75 41 1A                		mov	#26, r1
 2327 04df 05 00 00 00             		bsr	_SWTC_IsStopped
 2328                             	.LVL187:
 2329 04e3 61 01                   		cmp	#0, r1
 2330 04e5 21 0D                   		bne	.L255
 2331 04e7 75 41 1A                		mov	#26, r1
 2332 04ea 05 00 00 00             		bsr	_SWTC_IsExpired
 2333                             	.LVL188:
 2334 04ee 61 01                   		cmp	#0, r1
 2335 04f0 20 DC                   		beq	.L254
 2336                             		.balign 2,3,5
 2337                             	.L255:
1103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						Virtual_Sensor_Value[aux_index]=(uint8_t)GI_tmp;
 2338                             		.loc 1 1103 0
 2339 04f2 70 AC 00 00 00 00       		add	#_Virtual_Sensor_Value, r10, r12
 2340 04f8 C1 0C 09                		mov.B	9[r0], [r12]
1104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						SETBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+aux_index));	
 2341                             		.loc 1 1104 0
 2342 04fb 71 AC 0A                		add	#10, r10, r12
 2343                             	.LVL189:
 2344                             		.balign 2,3,5
 2345                             	.L308:
 2346 04fe DC 7A                   		mov.W	[r7], r10
 2347 0500 FC 63 AC                		bset	r12, r10
 2348 0503 38 6B FD                		bra	.L304
 2349                             	.LVL190:
 2350                             	.L249:
1112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					CLRBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+aux_index));
 2351                             		.loc 1 1112 0
 2352 0506 62 AA                   		add	#10, r10
 2353 0508 DC 7C                   		mov.W	[r7], r12
 2354 050a FC 67 CA                		bclr	r10, r12
 2355 050d D3 7C                   		mov.W	r12, [r7]
1113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( aux_index== WASH_BLDC_PUMP)
 2356                             		.loc 1 1113 0
 2357 050f 76 28 FF 00             		and #0xff, r8
 2358                             	.LVL191:
 2359 0513 21 29                   		bne	.L203
1115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2360                             		.loc 1 1115 0
 2361 0515 FB A2 00 00 00 00       		mov.L	#_Tab_HWCVS_data, r10
 2362                             	.LVL192:
 2363 051b 5D AC 02                		movu.W	4[r10], r12
 2364 051e 61 2C                   		cmp	#2, r12
 2365 0520 25 0B                   		bleu	.L259
1115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2366                             		.loc 1 1115 0 is_stmt 0 discriminator 1
 2367 0522 EC AA                   		mov.L	[r10], r10
 2368 0524 CD A2 04                		mov.B	4[r10], r2
 2369 0527 75 22 7F                		and #0x7f, r2
 2370 052a 0C                      		bra	.L256
 2371                             	.L259:
1115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2372                             		.loc 1 1115 0
 2373 052b 75 42 3C                		mov	#60, r2
 2374                             		.balign 2,3,2
 2375                             	.L256:
1115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_SetSValue ((SWTC_CountersType)SFT_FILTER_VS56_STATE_W, HIGH_IMPROB_SECURITY_FILTER
 2376                             		.loc 1 1115 0 discriminator 3
 2377 052e 75 41 1D                		mov	#29, r1
 2378 0531 05 00 00 00             		bsr	_SWTC_SetSValue
 2379                             	.LVL193:
1116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						(void)SWTC_Stop((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
 2380                             		.loc 1 1116 0 is_stmt 1 discriminator 3
 2381 0535 75 41 1D                		mov	#29, r1
 2382 0538 05 00 00 00             		bsr	_SWTC_Stop
 2383                             	.LVL194:
 2384                             		.balign 2,3,1
 2385                             	.L203:
1129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		pGenInput++;
 2386                             		.loc 1 1129 0
 2387 053c 62 4B                   		add	#4, r11
 2388                             	.LVL195:
 2389                             		.balign 2,3,3
 2390                             	.L202:
 690:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	while((uint8_t*)pGenInput<Tab_GIData.Data+Tab_GIData.DataLenght*2)
 2391                             		.loc 1 690 0 discriminator 1
 2392 053e 5D DA 02                		movu.W	4[r13], r10
 2393 0541 4B AA                   		add	r10, r10
 2394 0543 06 88 DA                		add	[r13], r10
 2395 0546 47 AB                   		cmp	r10, r11
 2396 0548 22 05 38 E2 FA          		bltu	.L257
1134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 2397                             		.loc 1 1134 0
 2398 054d 3F 6D 0B                		rtsd	#44, r6-r13
 2399                             	.LFE6:
 2401                             		.section	.text.HIO_Check_VS_Stability,"ax",@progbits
 2402                             		.global	_HIO_Check_VS_Stability
 2404                             	_HIO_Check_VS_Stability:
 2405                             	.LFB19:
2103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 2406                             		.loc 1 2103 0
2106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	speedy_check= GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP]);
 2407                             		.loc 1 2106 0
 2408 0000 FB 42 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r4
 2409 0006 59 4E 02                		movu.B	2[r4], r14
 2410 0009 6C 8E                   		shll	#8, r14
 2411 000b B0 C9                   		movu.B	3[r4], r1
 2412                             	.LVL196:
2108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( (speedy_check!=GET_BLDC_SPEED(BLDC_PumpReq_Old[WASH_BLDC_PUMP]) )&& (speedy_check>0))  /* cam
 2413                             		.loc 1 2108 0
 2414 000d FB 42 00 00 00 00       		mov.L	#_BLDC_PumpReq_Old, r4
 2415 0013 B0 C2                   		movu.B	2[r4], r2
 2416 0015 6C 82                   		shll	#8, r2
 2417 0017 B0 CB                   		movu.B	3[r4], r3
 2418 0019 57 1E                   		or	r1, r14
 2419                             	.LVL197:
 2420 001b FF 54 32                		or	r3, r2, r4
 2421 001e 47 4E                   		cmp	r4, r14
 2422 0020 20 12                   		beq	.L314
2108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( (speedy_check!=GET_BLDC_SPEED(BLDC_PumpReq_Old[WASH_BLDC_PUMP]) )&& (speedy_check>0))  /* cam
 2423                             		.loc 1 2108 0 is_stmt 0 discriminator 1
 2424 0022 61 0E                   		cmp	#0, r14
 2425 0024 20 28                   		beq	.L315
 2426                             		.balign 2,3,5
 2427                             	.L317:
2110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		(void)Set_SmallCounter((SWTC_CountersType)HIO_STABILITY_FILTER_VS, (SWTC_PrescalerType)COUNTERS2_
 2428                             		.loc 1 2110 0 is_stmt 1
 2429 0026 FB E2 00 00 00 00       		mov.L	#_Tab_SFT_MotorWash, r14
 2430 002c EC EE                   		mov.L	[r14], r14
 2431 002e CC E3                   		mov.B	[r14], r3
 2432 0030 2E 4E                   		bra	.L339
 2433                             	.L314:
2113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( (speedy_check>0)&& (MAKEWORD(BLDC_Pump_InfoBuffer[WASH_BLDC_PUMP][BLDC_VS_STATE_MSB], BLDC_P
 2434                             		.loc 1 2113 0
 2435 0032 61 0E                   		cmp	#0, r14
 2436 0034 20 18                   		beq	.L315
2113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( (speedy_check>0)&& (MAKEWORD(BLDC_Pump_InfoBuffer[WASH_BLDC_PUMP][BLDC_VS_STATE_MSB], BLDC_P
 2437                             		.loc 1 2113 0 is_stmt 0 discriminator 1
 2438 0036 FB E2 00 00 00 00       		mov.L	#_BLDC_Pump_InfoBuffer, r14
 2439 003c 59 E3 04                		movu.B	4[r14], r3
 2440 003f 6C 83                   		shll	#8, r3
 2441 0041 59 E4 05                		movu.B	5[r14], r4
 2442 0044 FF 5E 43                		or	r4, r3, r14
 2443 0047 61 4E                   		cmp	#4, r14
 2444 0049 20 DD                   		beq	.L317
 2445 004b 03                      		.balign 2,3,5
 2446                             	.L315:
2118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			speedy_check= GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP]);
 2447                             		.loc 1 2118 0 is_stmt 1
 2448 004c FB 42 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r4
 2449                             	.LVL198:
 2450 0052 59 4E 0E                		movu.B	14[r4], r14
 2451 0055 6C 8E                   		shll	#8, r14
 2452 0057 B3 C9                   		movu.B	15[r4], r1
 2453                             	.LVL199:
2120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( ( speedy_check!= GET_BLDC_SPEED(BLDC_PumpReq_Old[DRAIN_BLDC_PUMP]))&&(speedy_check>0)) /*  
 2454                             		.loc 1 2120 0
 2455 0059 FB 42 00 00 00 00       		mov.L	#_BLDC_PumpReq_Old, r4
 2456 005f B3 C2                   		movu.B	14[r4], r2
 2457 0061 6C 82                   		shll	#8, r2
 2458 0063 B3 CB                   		movu.B	15[r4], r3
 2459 0065 57 1E                   		or	r1, r14
 2460                             	.LVL200:
 2461 0067 FF 54 32                		or	r3, r2, r4
 2462 006a 47 4E                   		cmp	r4, r14
 2463 006c 20 20                   		beq	.L318
2120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( ( speedy_check!= GET_BLDC_SPEED(BLDC_PumpReq_Old[DRAIN_BLDC_PUMP]))&&(speedy_check>0)) /*  
 2464                             		.loc 1 2120 0 is_stmt 0 discriminator 1
 2465 006e 61 0E                   		cmp	#0, r14
 2466 0070 20 36                   		beq	.L316
 2467                             		.balign 2,3,5
 2468                             	.L319:
2122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				(void)Set_SmallCounter((SWTC_CountersType)HIO_STABILITY_FILTER_VS, (SWTC_PrescalerType)COUNTERS
 2469                             		.loc 1 2122 0 is_stmt 1
 2470 0072 FB E2 00 00 00 00       		mov.L	#_Tab_SFT_MotorDrain, r14
 2471 0078 EC EE                   		mov.L	[r14], r14
 2472 007a CD E3 06                		mov.B	6[r14], r3
 2473                             	.LVL201:
 2474 007d 03                      		.balign 2,3,2
 2475                             	.L339:
 2476 007e 75 41 1A                		mov	#26, r1
 2477 0081 66 32                   		mov	#3, r2
 2478 0083 75 23 7F                		and #0x7f, r3
 2479 0086 05 00 00 00             		bsr	_Set_SmallCounter
 2480                             	.LVL202:
 2481 008a 2E 1C                   		bra	.L316
 2482                             	.LVL203:
 2483                             	.L318:
2125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( (speedy_check>0)&& (MAKEWORD(BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][BLDC_VS_STATE_MSB], BLD
 2484                             		.loc 1 2125 0
 2485 008c 61 0E                   		cmp	#0, r14
 2486 008e 20 18                   		beq	.L316
2125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( (speedy_check>0)&& (MAKEWORD(BLDC_Pump_InfoBuffer[DRAIN_BLDC_PUMP][BLDC_VS_STATE_MSB], BLD
 2487                             		.loc 1 2125 0 is_stmt 0 discriminator 1
 2488 0090 FB E2 00 00 00 00       		mov.L	#_BLDC_Pump_InfoBuffer, r14
 2489 0096 59 E3 10                		movu.B	16[r14], r3
 2490 0099 6C 83                   		shll	#8, r3
 2491 009b 59 E4 11                		movu.B	17[r14], r4
 2492 009e FF 5E 43                		or	r4, r3, r14
 2493 00a1 61 4E                   		cmp	#4, r14
 2494 00a3 20 CF                   		beq	.L319
 2495                             	.LVL204:
 2496 00a5 03                      		.balign 2,3,2
 2497                             	.L316:
2135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)HIO_STABILITY_FILTER_VS))  
 2498                             		.loc 1 2135 0 is_stmt 1
 2499 00a6 75 41 1A                		mov	#26, r1
 2500 00a9 05 00 00 00             		bsr	_SWTC_IsExpired
 2501                             	.LVL205:
 2502 00ad 61 01                   		cmp	#0, r1
2138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		(void)SWTC_Stop((SWTC_CountersType)HIO_STABILITY_FILTER_VS); 
 2503                             		.loc 1 2138 0
 2504 00af 75 41 1A                		mov	#26, r1
2135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)HIO_STABILITY_FILTER_VS))  
 2505                             		.loc 1 2135 0
 2506 00b2 15                      		beq	.L320
2138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		(void)SWTC_Stop((SWTC_CountersType)HIO_STABILITY_FILTER_VS); 
 2507                             		.loc 1 2138 0
 2508 00b3 04 00 00 00             		bra	_SWTC_Stop
 2509                             	.LVL206:
 2510                             	.L320:
2141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		(void)SWTC_Run((SWTC_CountersType)HIO_STABILITY_FILTER_VS);
 2511                             		.loc 1 2141 0
 2512 00b7 04 00 00 00             		bra	_SWTC_Run
 2513                             	.LVL207:
 2514                             	.LFE19:
 2516 00bb 03                      		.section	.text.HIO_loadsManagement,"ax",@progbits
 2517                             		.global	_HIO_loadsManagement
 2519                             	_HIO_loadsManagement:
 2520                             	.LFB0:
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** {
 2521                             		.loc 1 113 0
 2522 0000 6E 7D                   		pushm	r7-r13
 2523                             	.LCFI16:
 2524 0002 60 C0                   		sub	#12, r0
 2525                             	.LCFI17:
 119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( Fan_Pos[LD_DRY_FAN_IND] != NO_LD_POS )
 2526                             		.loc 1 119 0
 2527 0004 FB 72 00 00 00 00       		mov.L	#_Fan_Pos, r7
 2528 000a 58 77                   		movu.B	[r7], r7
 2529 000c 75 57 FF                		cmp	#0xff, r7
 2530 000f 15                      		beq	.L341
 122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		Fan_GenericLoadMgmt() ;
 2531                             		.loc 1 122 0
 2532 0010 05 00 00 00             		bsr	_Fan_GenericLoadMgmt
 2533                             	.LVL208:
 2534                             		.balign 2,3,5
 2535                             	.L341:
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc_drain != 0 ) 
 2536                             		.loc 1 125 0
 2537 0014 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 2538 001a DC 7A                   		mov.W	[r7], r10
 2539 001c 76 2A 00 02             		and #0x200, r10
 2540 0020 5F AA                   		movu.W	r10, r10
 2541 0022 61 0A                   		cmp	#0, r10
 2542 0024 16                      		beq	.L342
 128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		HIO_OverHeat_DrainPump_Control();
 2543                             		.loc 1 128 0
 2544 0025 05 00 00 00             		bsr	_HIO_OverHeat_DrainPump_Control
 2545                             	.LVL209:
 2546 0029 03                      		.balign 2,3,5
 2547                             	.L342:
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( HWC_Flags.bit.bldc1 != 0 ) 
 2548                             		.loc 1 135 0
 2549 002a DC 7C                   		mov.W	[r7], r12
 2550 002c EF C7                   		mov.L	r12, r7
 2551 002e 76 27 00 40             		and #0x4000, r7
 2552 0032 5F 77                   		movu.W	r7, r7
 2553 0034 61 07                   		cmp	#0, r7
 2554 0036 3A 3A 01                		beq	.L344
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (( uP_Load_Data.pump_act)&&(uPDoorStatus != UP_DOOR_WAIT) )
 2555                             		.loc 1 139 0
 2556 0039 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 2557 003f 88 FF                   		mov.B 3[r7], r7
 2558 0041 64 27                   		and #2, r7
 2559 0043 20 4D                   		beq	.L345
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (( uP_Load_Data.pump_act)&&(uPDoorStatus != UP_DOOR_WAIT) )
 2560                             		.loc 1 139 0 is_stmt 0 discriminator 1
 2561 0045 FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
 2562 004b 58 77                   		movu.B	[r7], r7
 2563 004d 61 07                   		cmp	#0, r7
 2564 004f 20 41                   		beq	.L345
 142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],OFFS_B(uPLoad_setting_data.Data, 2)*PUMP_CTRL_BL
 2565                             		.loc 1 142 0 is_stmt 1
 2566 0051 FB 72 00 00 00 00       		mov.L	#_uPLoad_setting_data, r7
 2567 0057 EC 7A                   		mov.L	[r7], r10
 2568 0059 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 2569 005f 59 AB 02                		movu.B	2[r10], r11
 2570 0062 75 1B 19                		mul	#25, r11
 2571 0065 68 8B                   		shlr	#8, r11
 2572 0067 C7 7B 02                		mov.B	r11, 2[r7]
 2573 006a CD AB 02                		mov.B	2[r10], r11
 2574 006d 75 1B 19                		mul	#25, r11
 2575 0070 C7 7B 03                		mov.B	r11, 3[r7]
 2576 0073 59 AB 02                		movu.B	2[r10], r11
 2577 0076 61 0B                   		cmp	#0, r11
 2578 0078 FC DB B1                		scne.L	r11
 2579 007b C7 7B 01                		mov.B	r11, 1[r7]
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], OFFS_B(uPLoad_setting_data.Data,3)*PUMP_CTRL_BLD
 2580                             		.loc 1 143 0
 2581 007e 59 AB 03                		movu.B	3[r10], r11
 2582 0081 63 5B                   		mul	#5, r11
 2583 0083 68 8B                   		shlr	#8, r11
 2584 0085 C7 7B 04                		mov.B	r11, 4[r7]
 2585 0088 CD AA 03                		mov.B	3[r10], r10
 2586 008b 63 5A                   		mul	#5, r10
 2587 008d C7 7A 05                		mov.B	r10, 5[r7]
 2588                             		.balign 2,3,5
 2589                             	.L345:
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (( dirty_foam_Data.reduc_speed)&&(uPDoorStatus != UP_DOOR_WAIT))
 2590                             		.loc 1 146 0
 2591 0090 FB B2 00 00 00 00       		mov.L	#_dirty_foam_Data, r11
 2592 0096 CD B7 01                		mov.B	1[r11], r7
 2593 0099 64 67                   		and	#6, r7
 2594 009b 20 51                   		beq	.L346
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (( dirty_foam_Data.reduc_speed)&&(uPDoorStatus != UP_DOOR_WAIT))
 2595                             		.loc 1 146 0 is_stmt 0 discriminator 1
 2596 009d FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
 2597 00a3 58 77                   		movu.B	[r7], r7
 2598 00a5 61 07                   		cmp	#0, r7
 2599 00a7 20 45                   		beq	.L346
 2600                             	.LBB8:
 149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			speed=((GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP])/PUMP_CTRL_BLDC_SPEED_MUL)* OFFS_B(dirty
 2601                             		.loc 1 149 0 is_stmt 1
 2602 00a9 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 2603 00af 59 7A 02                		movu.B	2[r7], r10
 2604 00b2 6C 8A                   		shll	#8, r10
 2605 00b4 55 7A 03                		or	3[r7].UB, r10
 2606 00b7 FD 74 9A 19             		divu	#25, r10
 2607 00bb 59 BB 01                		movu.B	1[r11], r11
 2608 00be 68 1B                   		shlr	#1, r11
 2609 00c0 64 3B                   		and #3, r11
 2610 00c2 FB D2 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r13
 2611 00c8 EC DD                   		mov.L	[r13], r13
 2612 00ca FE CB DB                		movu.B	[r11,r13], r11
 2613 00cd 4F BA                   		mul	r11, r10
 2614 00cf FD 74 8A 64             		div	#0x64, r10
 2615                             	.LVL210:
 150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],(speed*PUMP_CTRL_BLDC_SPEED_MUL) );
 2616                             		.loc 1 150 0
 2617 00d3 EF AB                   		mov.L	r10, r11
 2618 00d5 75 1B 19                		mul	#25, r11
 2619 00d8 FD 88 BD                		shlr	#8, r11, r13
 2620 00db C7 7D 02                		mov.B	r13, 2[r7]
 2621 00de C7 7B 03                		mov.B	r11, 3[r7]
 2622 00e1 5F AA                   		movu.W	r10, r10
 2623                             	.LVL211:
 2624 00e3 61 0A                   		cmp	#0, r10
 2625 00e5 FC DB A1                		scne.L	r10
 2626 00e8 C7 7A 01                		mov.B	r10, 1[r7]
 2627                             	.LVL212:
 2628 00eb 03                      		.balign 2,3,2
 2629                             	.L346:
 2630                             	.LBE8:
 153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if (HWC_Flags.bit.vs_wash_presence != 0) 
 2631                             		.loc 1 153 0
 2632 00ec 75 2C 10                		and #16, r12
 2633 00ef 5F CC                   		movu.W	r12, r12
 2634 00f1 61 0C                   		cmp	#0, r12
 2635 00f3 20 7D                   		beq	.L344
 2636                             	.LBB9:
 2637                             	.LBB10:
2152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP]) ==0 )
 2638                             		.loc 1 2152 0
 2639 00f5 FB A2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r10
 2640 00fb 59 A7 02                		movu.B	2[r10], r7
 2641 00fe 6C 87                   		shll	#8, r7
 2642 0100 59 AA 03                		movu.B	3[r10], r10
 2643 0103 57 A7                   		or	r10, r7
 2644 0105 20 6B                   		beq	.L344
2157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==5)&&(TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+
 2645                             		.loc 1 2157 0
 2646 0107 FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 2647 010d 58 AA                   		movu.B	[r10], r10
 2648 010f 61 5A                   		cmp	#5, r10
 2649 0111 21 2B                   		bne	.L348
 2650                             	.LBE10:
 2651 0113 FB A2 00 00 00 00       		mov.L	#_GIValid, r10
 2652 0119 DC AA                   		mov.W	[r10], r10
 2653                             	.LBB11:
 2654 011b 76 2A 00 04             		and #0x400, r10
 2655 011f 5F AA                   		movu.W	r10, r10
 2656 0121 61 0A                   		cmp	#0, r10
 2657 0123 20 19                   		beq	.L348
2159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( State5.max_speed_value==0xFFFF)
 2658                             		.loc 1 2159 0
 2659 0125 FB A2 00 00 00 00       		mov.L	#_State5, r10
 2660 012b DC A1                   		mov.W	[r10], r1
 2661 012d 5F 1A                   		movu.W	r1, r10
 2662 012f 77 0A FF FF 00          		cmp	#0xffff, r10
 2663 0134 1C                      		bne	.L349
2161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			set_limit4_state5( (uint16_t)GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP]));
 2664                             		.loc 1 2161 0
 2665 0135 DF 71                   		mov.W	r7, r1
 2666 0137 03                      		.balign 2,3,3
 2667                             	.L349:
2164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			set_limit4_state5( State5.max_speed_value);
 2668                             		.loc 1 2164 0
 2669 0138 05 00 00 00             		bsr	_set_limit4_state5
 2670                             	.LVL213:
 2671                             		.balign 2,3,5
 2672                             	.L348:
2168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if ( (State5.max_speed_value!=0xFFFF) && ( GET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP])> State
 2673                             		.loc 1 2168 0
 2674 013c FB 72 00 00 00 00       		mov.L	#_State5, r7
 2675 0142 DC 7B                   		mov.W	[r7], r11
 2676 0144 5F BA                   		movu.W	r11, r10
 2677 0146 77 0A FF FF 00          		cmp	#0xffff, r10
 2678 014b 20 25                   		beq	.L344
 2679 014d FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 2680 0153 59 7C 02                		movu.B	2[r7], r12
 2681 0156 6C 8C                   		shll	#8, r12
 2682 0158 55 7C 03                		or	3[r7].UB, r12
 2683 015b 47 CA                   		cmp	r12, r10
 2684 015d 22 13                   		bgeu	.L344
2170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],State5.max_speed_value);
 2685                             		.loc 1 2170 0
 2686 015f FD 88 AC                		shlr	#8, r10, r12
 2687 0162 C7 7C 02                		mov.B	r12, 2[r7]
 2688 0165 C7 7B 03                		mov.B	r11, 3[r7]
 2689 0168 61 0A                   		cmp	#0, r10
 2690 016a FC DB A1                		scne.L	r10
 2691 016d C7 7A 01                		mov.B	r10, 1[r7]
 2692                             		.balign 2,3,5
 2693                             	.L344:
 2694                             	.LBE11:
 2695                             	.LBE9:
 161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if((HWC_Flags.bit.bldc_drain != 0) && (HWC_Flags.bit.bldc1 != 0))
 2696                             		.loc 1 161 0
 2697 0170 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 2698 0176 DC 7A                   		mov.W	[r7], r10
 2699 0178 EF AC                   		mov.L	r10, r12
 2700 017a 76 2C 00 42             		and #0x4200, r12
 2701 017e 5F C7                   		movu.W	r12, r7
 2702 0180 76 07 00 42             		cmp	#0x4200, r7
 2703 0184 3B 06 01                		bne	.L350
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if((GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP])!=0)||(DrainSftReq_New.b == LOAD_ON))
 2704                             		.loc 1 165 0
 2705 0187 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 2706 018d 59 7D 0E                		movu.B	14[r7], r13
 2707 0190 6C 8D                   		shll	#8, r13
 2708 0192 59 7B 0F                		movu.B	15[r7], r11
 2709 0195 FF 57 BD                		or	r11, r13, r7
 2710 0198 21 10                   		bne	.L351
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if((GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP])!=0)||(DrainSftReq_New.b == LOAD_ON))
 2711                             		.loc 1 165 0 is_stmt 0 discriminator 1
 2712 019a FB 72 00 00 00 00       		mov.L	#_DrainSftReq_New, r7
 2713 01a0 58 77                   		movu.B	[r7], r7
 2714 01a2 61 17                   		cmp	#1, r7
 2715 01a4 3B E6 00                		bne	.L350
 2716 01a7 03                      		.balign 2,3,1
 2717                             	.L351:
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (HWC_Flags.bit.vs_wash_presence != 0) 
 2718                             		.loc 1 168 0 is_stmt 1
 2719 01a8 EF A7                   		mov.L	r10, r7
 2720 01aa 75 27 10                		and #16, r7
 2721 01ad 5F 77                   		movu.W	r7, r7
 2722 01af 61 07                   		cmp	#0, r7
 2723 01b1 20 0B                   		beq	.L352
 170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				State5.max_speed_value =0xFFFF;
 2724                             		.loc 1 170 0
 2725 01b3 FB 72 00 00 00 00       		mov.L	#_State5, r7
 2726 01b9 F8 75 FF                		mov.W	#-1, [r7]
 2727                             		.balign 2,3,5
 2728                             	.L352:
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( DrainSftReq_New.b == LOAD_ON)
 2729                             		.loc 1 174 0
 2730 01bc FB 72 00 00 00 00       		mov.L	#_DrainSftReq_New, r7
 2731 01c2 58 77                   		movu.B	[r7], r7
 2732 01c4 61 17                   		cmp	#1, r7
 2733 01c6 3B AE 00                		bne	.L353
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2734                             		.loc 1 176 0
 2735 01c9 FB B2 00 00 00 00       		mov.L	#_Tab_SFT_EV, r11
 2736 01cf DD B7 02                		mov.W	4[r11], r7
 2737 01d2 5F 7D                   		movu.W	r7, r13
 2738 01d4 61 2D                   		cmp	#2, r13
 2739 01d6 25 0D                   		bleu	.L388
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2740                             		.loc 1 176 0 is_stmt 0 discriminator 1
 2741 01d8 EC BB                   		mov.L	[r11], r11
 2742 01da 59 BB 04                		movu.B	4[r11], r11
 2743 01dd 75 1B 19                		mul	#25, r11
 2744 01e0 68 8B                   		shlr	#8, r11
 2745 01e2 0C                      		bra	.L354
 2746                             	.L388:
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2747                             		.loc 1 176 0
 2748 01e3 66 CB                   		mov	#12, r11
 2749 01e5 03                      		.balign 2,3,5
 2750                             	.L354:
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2751                             		.loc 1 176 0 discriminator 3
 2752 01e6 FB D2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r13
 2753 01ec C7 DB 0E                		mov.B	r11, 14[r13]
 2754 01ef 5F 7B                   		movu.W	r7, r11
 2755 01f1 61 2B                   		cmp	#2, r11
 2756 01f3 25 11                   		bleu	.L389
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2757                             		.loc 1 176 0 discriminator 4
 2758 01f5 FB B2 00 00 00 00       		mov.L	#_Tab_SFT_EV, r11
 2759 01fb EC BB                   		mov.L	[r11], r11
 2760 01fd CD BB 04                		mov.B	4[r11], r11
 2761 0200 75 1B 19                		mul	#25, r11
 2762 0203 0D                      		bra	.L355
 2763                             	.L389:
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2764                             		.loc 1 176 0
 2765 0204 FB B6 80                		mov	#0xffffff80, r11
 2766 0207 03                      		.balign 2,3,5
 2767                             	.L355:
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2768                             		.loc 1 176 0 discriminator 6
 2769 0208 FB D2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r13
 2770 020e C7 DB 0F                		mov.B	r11, 15[r13]
 2771 0211 5F 7B                   		movu.W	r7, r11
 2772 0213 61 2B                   		cmp	#2, r11
 2773 0215 25 13                   		bleu	.L390
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2774                             		.loc 1 176 0 discriminator 8
 2775 0217 FB B2 00 00 00 00       		mov.L	#_Tab_SFT_EV, r11
 2776 021d EC BB                   		mov.L	[r11], r11
 2777 021f 59 BB 04                		movu.B	4[r11], r11
 2778 0222 61 0B                   		cmp	#0, r11
 2779 0224 FC DB B1                		scne.L	r11
 2780 0227 0B                      		bra	.L356
 2781                             	.L390:
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2782                             		.loc 1 176 0
 2783 0228 66 1B                   		mov.L	#1, r11
 2784                             		.balign 2,3,5
 2785                             	.L356:
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],DRAIN_SFT_REQ_SPEED);
 2786                             		.loc 1 176 0 discriminator 10
 2787 022a FB D2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r13
 2788 0230 C7 DB 0D                		mov.B	r11, 13[r13]
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 2789                             		.loc 1 177 0 is_stmt 1 discriminator 10
 2790 0233 5F 7B                   		movu.W	r7, r11
 2791 0235 61 2B                   		cmp	#2, r11
 2792 0237 25 12                   		bleu	.L391
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 2793                             		.loc 1 177 0 is_stmt 0 discriminator 1
 2794 0239 FB B2 00 00 00 00       		mov.L	#_Tab_SFT_EV, r11
 2795 023f EC BB                   		mov.L	[r11], r11
 2796 0241 59 BB 03                		movu.B	3[r11], r11
 2797 0244 63 5B                   		mul	#5, r11
 2798 0246 68 8B                   		shlr	#8, r11
 2799 0248 0C                      		bra	.L357
 2800                             	.L391:
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 2801                             		.loc 1 177 0
 2802 0249 66 0B                   		mov	#0, r11
 2803 024b 03                      		.balign 2,3,5
 2804                             	.L357:
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 2805                             		.loc 1 177 0 discriminator 3
 2806 024c FB D2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r13
 2807 0252 C7 DB 10                		mov.B	r11, 16[r13]
 2808 0255 5F 77                   		movu.W	r7, r7
 2809 0257 61 27                   		cmp	#2, r7
 2810 0259 25 0F                   		bleu	.L392
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 2811                             		.loc 1 177 0 discriminator 4
 2812 025b FB 72 00 00 00 00       		mov.L	#_Tab_SFT_EV, r7
 2813 0261 EC 77                   		mov.L	[r7], r7
 2814 0263 88 FF                   		mov.B	3[r7], r7
 2815 0265 63 57                   		mul	#5, r7
 2816 0267 0B                      		bra	.L358
 2817                             	.L392:
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 2818                             		.loc 1 177 0
 2819 0268 66 17                   		mov	#1, r7
 2820                             		.balign 2,3,5
 2821                             	.L358:
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP], DRAIN_SFT_REQ_TIME);
 2822                             		.loc 1 177 0 discriminator 6
 2823 026a FB B2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r11
 2824 0270 C7 B7 11                		mov.B	r7, 17[r11]
 2825 0273 03                      		.balign 2,3,5
 2826                             	.L353:
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 2827                             		.loc 1 179 0 is_stmt 1
 2828 0274 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 2829 027a 3C 72 00                		mov.B	#0, 2[r7]
 2830 027d 3C 73 00                		mov.B	#0, 3[r7]
 2831 0280 3C 71 00                		mov.B	#0, 1[r7]
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 2832                             		.loc 1 180 0
 2833 0283 3C 74 00                		mov.B	#0, 4[r7]
 2834 0286 3C 75 00                		mov.B	#0, 5[r7]
 2835 0289 03                      		.balign 2,3,3
 2836                             	.L350:
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****     if( (HWC_Flags.bit.bldc_drain != 0) && (HWC_Flags.bit.vs_wash_presence != 0)  && (HWC_Flags.bit
 2837                             		.loc 1 186 0
 2838 028a 76 2A 30 02             		and #0x230, r10
 2839 028e 76 0A 30 02             		cmp	#0x230, r10
 2840 0292 21 54                   		bne	.L359
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if((GET_BLDC_SPEED(BLDC_PumpReq_Old[DRAIN_BLDC_PUMP])==0) && (GET_BLDC_SPEED(BLDC_PumpReq_New[DRA
 2841                             		.loc 1 189 0
 2842 0294 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_Old, r7
 2843 029a 59 7B 0E                		movu.B	14[r7], r11
 2844 029d 6C 8B                   		shll	#8, r11
 2845 029f 59 7A 0F                		movu.B	15[r7], r10
 2846 02a2 FF 57 AB                		or	r10, r11, r7
 2847 02a5 21 21                   		bne	.L360
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if((GET_BLDC_SPEED(BLDC_PumpReq_Old[DRAIN_BLDC_PUMP])==0) && (GET_BLDC_SPEED(BLDC_PumpReq_New[DRA
 2848                             		.loc 1 189 0 is_stmt 0 discriminator 1
 2849 02a7 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 2850 02ad 59 7B 0E                		movu.B	14[r7], r11
 2851 02b0 6C 8B                   		shll	#8, r11
 2852 02b2 59 7A 0F                		movu.B	15[r7], r10
 2853 02b5 FF 57 AB                		or	r10, r11, r7
 2854 02b8 20 0E                   		beq	.L360
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		 	SETBIT(Flags_2, FLAG2_VIRTUALSENSOR_TEST_STARTED_FLAG);			 
 2855                             		.loc 1 192 0 is_stmt 1
 2856 02ba FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 2857 02c0 CC 7A                   		mov.B	[r7], r10
 2858 02c2 78 4A                   		bset #4, r10
 2859 02c4 2E 20                   		bra	.L461
 2860                             	.L360:
 198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (GET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP])==0 )
 2861                             		.loc 1 198 0
 2862 02c6 FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 2863 02cc 59 7B 0E                		movu.B	14[r7], r11
 2864 02cf 6C 8B                   		shll	#8, r11
 2865 02d1 59 7A 0F                		movu.B	15[r7], r10
 2866 02d4 FF 57 AB                		or	r10, r11, r7
 2867 02d7 21 0F                   		bne	.L359
 200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				CLRBIT(Flags_2, FLAG2_VIRTUALSENSOR_TEST_STARTED_FLAG);
 2868                             		.loc 1 200 0
 2869 02d9 FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 2870 02df CC 7A                   		mov.B	[r7], r10
 2871 02e1 7A 4A                   		bclr #4, r10
 2872 02e3 03                      		.balign 2,3,1
 2873                             	.L461:
 2874 02e4 C3 7A                   		mov.B	r10, [r7]
 2875                             		.balign 2,3,1
 2876                             	.L359:
 211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	if( ( ( HWC_Flags.bit.bldc1 != 0 ) || ( HWC_Flags.bit.bldc_drain != 0 ) )
 2877                             		.loc 1 211 0
 2878 02e6 5F CC                   		movu.W	r12, r12
 2879 02e8 61 0C                   		cmp	#0, r12
 2880 02ea 20 12                   		beq	.L361
 213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	 	( RegDev_Pos[LD_KILL_DSP_REG_IND] != NO_LD_POS )
 2881                             		.loc 1 213 0
 2882 02ec FB 72 00 00 00 00       		mov.L	#_RegDev_Pos, r7
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		&&
 2883                             		.loc 1 212 0
 2884 02f2 B1 F7                   		movu.B	6[r7], r7
 2885 02f4 75 57 FF                		cmp	#0xff, r7
 2886 02f7 15                      		beq	.L361
 222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		HIO_BulkAndKillDSP_Mgmt();
 2887                             		.loc 1 222 0
 2888 02f8 05 00 00 00             		bsr	_HIO_BulkAndKillDSP_Mgmt
 2889                             	.LVL214:
 2890                             		.balign 2,3,5
 2891                             	.L361:
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****  	if(HWC_Flags.bit.vs_wash_presence)
 2892                             		.loc 1 225 0
 2893 02fc FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 2894 0302 DC 77                   		mov.W	[r7], r7
 2895 0304 75 27 10                		and #16, r7
 2896 0307 5F 77                   		movu.W	r7, r7
 2897 0309 61 07                   		cmp	#0, r7
 2898 030b 15                      		beq	.L362
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****   		HIO_Check_VS_Stability();
 2899                             		.loc 1 227 0
 2900 030c 05 00 00 00             		bsr	_HIO_Check_VS_Stability
 2901                             	.LVL215:
 2902                             		.balign 2,3,5
 2903                             	.L362:
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	nLoads = ( Tab_OutputData.DataLenght /4 /*IO_MANAGER_LOAD_TABLE_ITEM_SIZE*/); /* lunghezze espress
 2904                             		.loc 1 233 0
 2905 0310 FB 72 00 00 00 00       		mov.L	#_Tab_OutputData, r7
 2906 0316 5D 78 02                		movu.W	4[r7], r8
 2907 0319 68 28                   		shlr	#2, r8
 2908                             	.LVL216:
 2909 031b FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	for ( i = 0; i < nLoads; i++ ) 	
 2910                             		.loc 1 236 0
 2911 0321 66 07                   		mov.L	#0, r7
 2912 0323 5B 88                   		movu.B	r8, r8
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( Pump_Pos[LD_WASH_PUMP_IND] == i )
 2913                             		.loc 1 241 0
 2914 0325 FB C2 00 00 00 00       		mov.L	#_Pump_Pos, r12
 2915 032b FB D2 00 00 00 00       		mov.L	#_HWC_Flags, r13
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	for ( i = 0; i < nLoads; i++ ) 	
 2916                             		.loc 1 236 0
 2917 0331 38 BB 01                		bra	.L363
 2918                             	.LVL217:
 2919                             	.L386:
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( Pump_Pos[LD_WASH_PUMP_IND] == i )
 2920                             		.loc 1 241 0
 2921 0334 CC C9                   		mov.B	[r12], r9
 2922 0336 5B 94                   		movu.B	r9, r4
 2923 0338 47 E4                   		cmp	r14, r4
 2924 033a 3B 98 00                		bne	.L364
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if(( HWC_Flags.bit.bldc )&&(!HWC_Flags.bit.bldc1)) 
 2925                             		.loc 1 245 0
 2926 033d DC DE                   		mov.W	[r13], r14
 2927 033f EF E4                   		mov.L	r14, r4
 2928 0341 76 24 00 60             		and #0x6000, r4
 2929 0345 76 04 00 20             		cmp	#0x2000, r4
 2930 0349 21 0B                   		bne	.L365
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				SET_BLDC_FLAG(BLDC_PumpReq_New[WASH_BLDC_PUMP].data,NEW_BLDC_ENABLE_FLAG_POS );
 2931                             		.loc 1 248 0
 2932 034b FB 42 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r4
 2933 0351 F1 40 06                		bset #0, 6[r4].B
 2934                             		.balign 2,3,3
 2935                             	.L365:
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if( HWC_Flags.bit.bldc1 )
 2936                             		.loc 1 252 0
 2937 0354 76 2E 00 40             		and #0x4000, r14
 2938 0358 5F EE                   		movu.W	r14, r14
 2939 035a 61 0E                   		cmp	#0, r14
 2940 035c 20 5C                   		beq	.L367
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if (SWTC_IsExpired((SWTC_CountersType)SFT_FILTER_VS56_STATE_W) )
 2941                             		.loc 1 254 0
 2942 035e 75 41 1D                		mov	#29, r1
 2943 0361 05 00 00 00             		bsr	_SWTC_IsExpired
 2944                             	.LVL218:
 2945 0365 61 01                   		cmp	#0, r1
 2946 0367 20 33                   		beq	.L368
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					SET_BLDC_FLAG((BLDC_PumpReq_New[WASH_BLDC_PUMP].data+1),NEW_BLDC_ENABLE_FLAG_POS );
 2947                             		.loc 1 256 0
 2948 0369 FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 2949 036f F1 E0 07                		bset #0, 7[r14].B
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( !SWTC_IsStopped((SWTC_CountersType )SFT_FILTER_VS56_STATE_W) )
 2950                             		.loc 1 259 0
 2951 0372 75 41 1D                		mov	#29, r1
 2952 0375 05 00 00 00             		bsr	_SWTC_IsStopped
 2953                             	.LVL219:
 2954 0379 61 01                   		cmp	#0, r1
 2955 037b 21 17                   		bne	.L369
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						IncWordWithCheck(&MachineStatistics.globalStats.unblockvirtualsensorStateW);
 2956                             		.loc 1 261 0
 2957 037d FB 12 00 00 00 00       		mov.L	#_MachineStatistics+96, r1
 2958 0383 05 00 00 00             		bsr	_IncWordWithCheck
 2959                             	.LVL220:
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						IncByteWithCheck(&MachineStatistics.lastCycles[MOST_RECENT_STAT_CYCLE_POS].reset_VS_StateW);
 2960                             		.loc 1 262 0
 2961 0387 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+130, r1
 2962 038d 05 00 00 00             		bsr	_IncByteWithCheck
 2963                             	.LVL221:
 2964 0391 03                      		.balign 2,3,2
 2965                             	.L369:
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					(void)SWTC_Stop((SWTC_CountersType)SFT_FILTER_VS56_STATE_W); 
 2966                             		.loc 1 265 0
 2967 0392 75 41 1D                		mov	#29, r1
 2968 0395 05 00 00 00             		bsr	_SWTC_Stop
 2969                             	.LVL222:
 2970 0399 03                      		.balign 2,3,5
 2971                             	.L368:
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( (LONIBBLE(FltBLDCUnblock.pumpandspeed ) ==WASH_BLDC_PUMP)&& TESTBIT(FltBLDCUnblock.flags,P
 2972                             		.loc 1 269 0
 2973 039a FB E2 00 00 00 00       		mov.L	#_FltBLDCUnblock, r14
 2974 03a0 CD E4 01                		mov.B	1[r14], r4
 2975 03a3 FD 74 C4 0F             		tst	#15, r4
 2976 03a7 21 11                   		bne	.L367
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				if ( (LONIBBLE(FltBLDCUnblock.pumpandspeed ) ==WASH_BLDC_PUMP)&& TESTBIT(FltBLDCUnblock.flags,P
 2977                             		.loc 1 269 0 is_stmt 0 discriminator 1
 2978 03a9 CC EE                   		mov.B [r14], r14
 2979 03ab 64 8E                   		and #8, r14
 2980 03ad 20 0B                   		beq	.L367
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					SET_BLDC_FLAG((BLDC_PumpReq_New[WASH_BLDC_PUMP].data+1),NEW_BLDC_STALLO_FLAG_POS );
 2981                             		.loc 1 271 0 is_stmt 1
 2982 03af FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 2983 03b5 F1 E1 07                		bset #1, 7[r14].B
 2984                             		.balign 2,3,5
 2985                             	.L367:
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			BLDC_PumpReq_New[WASH_BLDC_PUMP].loadID = i;
 2986                             		.loc 1 275 0
 2987 03b8 FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 2988 03be C3 E9                   		mov.B	r9, [r14]
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			load = BLDC_PumpReq_New[WASH_BLDC_PUMP];
 2989                             		.loc 1 276 0
 2990 03c0 EF 01                   		mov.L	r0, r1
 2991 03c2 EF E2                   		mov.L	r14, r2
 2992 03c4 66 C3                   		mov.L	#12, r3
 2993 03c6 7F 8F                   		smovf
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			BLDC_PumpReq_Old[WASH_BLDC_PUMP] = BLDC_PumpReq_New[WASH_BLDC_PUMP];      /* salvataggio stato p
 2994                             		.loc 1 277 0
 2995 03c8 FB 12 00 00 00 00       		mov.L	#_BLDC_PumpReq_Old, r1
 2996 03ce EF E2                   		mov.L	r14, r2
 2997 03d0 2E 4A                   		bra	.L462
 2998                             	.L364:
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( i == Pump_Pos[LD_DRAIN_PUMP_IND] )
 2999                             		.loc 1 283 0
 3000 03d2 45 CE 01                		cmp	1[r12].UB, r14
 3001 03d5 21 67                   		bne	.L372
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c ****                 if(HWC_Flags.bit.bldc_drain != 0)
 3002                             		.loc 1 286 0
 3003 03d7 DC DE                   		mov.W	[r13], r14
 3004 03d9 76 2E 00 02             		and #0x200, r14
 3005 03dd 5F EE                   		movu.W	r14, r14
 3006 03df 61 0E                   		cmp	#0, r14
 3007 03e1 20 3F                   		beq	.L373
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					BLDC_PumpReq_New[DRAIN_BLDC_PUMP].loadID = i;
 3008                             		.loc 1 288 0
 3009 03e3 FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 3010 03e9 C7 E7 0C                		mov.B	r7, 12[r14]
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( (LONIBBLE(FltBLDCUnblock.pumpandspeed )==DRAIN_BLDC_PUMP)&& TESTBIT(FltBLDCUnblock.flags,
 3011                             		.loc 1 289 0
 3012 03ec FB 42 00 00 00 00       		mov.L	#_FltBLDCUnblock, r4
 3013 03f2 88 4B                   		mov.B	1[r4], r3
 3014 03f4 64 F3                   		and #15, r3
 3015 03f6 61 13                   		cmp	#1, r3
 3016 03f8 1A                      		bne	.L374
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( (LONIBBLE(FltBLDCUnblock.pumpandspeed )==DRAIN_BLDC_PUMP)&& TESTBIT(FltBLDCUnblock.flags,
 3017                             		.loc 1 289 0 is_stmt 0 discriminator 1
 3018 03f9 CC 44                   		mov.B [r4], r4
 3019 03fb 64 84                   		and #8, r4
 3020 03fd 15                      		beq	.L374
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						SET_BLDC_FLAG((BLDC_PumpReq_New[DRAIN_BLDC_PUMP].data+1),NEW_BLDC_STALLO_FLAG_POS );
 3021                             		.loc 1 291 0 is_stmt 1
 3022 03fe F1 E1 13                		bset #1, 19[r14].B
 3023 0401 03                      		.balign 2,3,1
 3024                             	.L374:
 294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					load = BLDC_PumpReq_New[DRAIN_BLDC_PUMP];
 3025                             		.loc 1 294 0
 3026 0402 EF 01                   		mov.L	r0, r1
 3027 0404 FB 22 00 00 00 00       		mov.L	#_BLDC_PumpReq_New+12, r2
 3028 040a 66 C3                   		mov.L	#12, r3
 3029 040c 7F 8F                   		smovf
 295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					BLDC_PumpReq_Old[DRAIN_BLDC_PUMP] = BLDC_PumpReq_New[DRAIN_BLDC_PUMP];      /* salvataggio sta
 3030                             		.loc 1 295 0
 3031 040e FB 12 00 00 00 00       		mov.L	#_BLDC_PumpReq_Old+12, r1
 3032 0414 FB 22 00 00 00 00       		mov.L	#_BLDC_PumpReq_New+12, r2
 3033                             		.balign 2,3,1
 3034                             	.L462:
 3035 041a 66 C3                   		mov.L	#12, r3
 3036 041c 7F 8F                   		smovf
 3037 041e 2E 24                   		bra	.L371
 3038                             	.L373:
 300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				    load.loadID = i;
 3039                             		.loc 1 300 0
 3040 0420 C3 07                   		mov.B	r7, [r0]
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					load.loadParam.b = LOAD_OFF;
 3041                             		.loc 1 301 0
 3042 0422 C7 0E 01                		mov.B	r14, 1[r0]
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( (LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON) || (DrainSftReq_New.b == LOAD_ON
 3043                             		.loc 1 303 0
 3044 0425 58 AE                   		movu.B	[r10], r14
 3045 0427 61 1E                   		cmp	#1, r14
 3046 0429 20 0F                   		beq	.L375
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 					if ( (LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON) || (DrainSftReq_New.b == LOAD_ON
 3047                             		.loc 1 303 0 is_stmt 0 discriminator 1
 3048 042b FB E2 00 00 00 00       		mov.L	#_DrainSftReq_New, r14
 3049 0431 58 EE                   		movu.B	[r14], r14
 3050 0433 61 1E                   		cmp	#1, r14
 3051 0435 21 0D                   		bne	.L371
 3052 0437 03                      		.balign 2,3,4
 3053                             	.L375:
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 						load.loadParam.b = LOAD_ON;  
 3054                             		.loc 1 305 0 is_stmt 1
 3055 0438 3C 01 01                		mov.B	#1, 1[r0]
 3056 043b 0F                      		bra	.L371
 3057                             	.L372:
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				load.loadID = i;
 3058                             		.loc 1 312 0
 3059 043c C3 07                   		mov.B	r7, [r0]
 313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			    load.loadParam = LoadsReq_New[i];	  
 3060                             		.loc 1 313 0
 3061 043e C4 A0 01                		mov.B	[r10], 1[r0]
 3062 0441 03                      		.balign 2,3,1
 3063                             	.L371:
 322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( i == EV_Pos[LD_WASH_EV_IND] )
 3064                             		.loc 1 322 0
 3065 0442 5B B4                   		movu.B	r11, r4
 3066 0444 FB E2 00 00 00 00       		mov.L	#_EV_Pos, r14
 3067 044a 44 E4                   		cmp	[r14].UB, r4
 3068 044c 21 1A                   		bne	.L377
 325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			load.loadParam.b = EV_OFF;
 3069                             		.loc 1 325 0
 3070 044e 3C 01 00                		mov.B	#0, 1[r0]
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( (LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b == EV_ON) || (LoadEVFltReq_New.b == EV_ON)  )   
 3071                             		.loc 1 327 0
 3072 0451 58 AE                   		movu.B	[r10], r14
 3073 0453 61 1E                   		cmp	#1, r14
 3074 0455 20 0D                   		beq	.L378
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( (LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b == EV_ON) || (LoadEVFltReq_New.b == EV_ON)  )   
 3075                             		.loc 1 327 0 is_stmt 0 discriminator 1
 3076 0457 FB E2 00 00 00 00       		mov.L	#_LoadEVFltReq_New, r14
 3077 045d 58 EE                   		movu.B	[r14], r14
 3078 045f 61 1E                   		cmp	#1, r14
 3079 0461 1D                      		bne	.L377
 3080                             		.balign 2,3,4
 3081                             	.L378:
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				load.loadParam.b = EV_ON;   
 3082                             		.loc 1 329 0 is_stmt 1
 3083 0462 3C 01 01                		mov.B	#1, 1[r0]
 3084 0465 03                      		.balign 2,3,1
 3085                             	.L377:
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( i == Pump_Pos[LD_DRAIN_PUMP_IND] )
 3086                             		.loc 1 333 0
 3087 0466 5B B4                   		movu.B	r11, r4
 3088 0468 45 C4 01                		cmp	1[r12].UB, r4
 3089 046b 21 1B                   		bne	.L381
 336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			load.loadParam.b = LOAD_OFF;
 3090                             		.loc 1 336 0
 3091 046d 3C 01 00                		mov.B	#0, 1[r0]
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( (LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON) || (DrainSftReq_New.b == LOAD_ON) 
 3092                             		.loc 1 338 0
 3093 0470 58 AE                   		movu.B	[r10], r14
 3094 0472 61 1E                   		cmp	#1, r14
 3095 0474 20 0E                   		beq	.L382
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if ( (LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b == LOAD_ON) || (DrainSftReq_New.b == LOAD_ON) 
 3096                             		.loc 1 338 0 is_stmt 0 discriminator 1
 3097 0476 FB E2 00 00 00 00       		mov.L	#_DrainSftReq_New, r14
 3098 047c 58 EE                   		movu.B	[r14], r14
 3099 047e 61 1E                   		cmp	#1, r14
 3100 0480 1E                      		bne	.L381
 3101 0481 03                      		.balign 2,3,4
 3102                             	.L382:
 340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 				load.loadParam.b = LOAD_ON;   
 3103                             		.loc 1 340 0 is_stmt 1
 3104 0482 3C 01 01                		mov.B	#1, 1[r0]
 3105 0485 03                      		.balign 2,3,5
 3106                             	.L381:
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( (HWC_Flags.bit.bldc1) && ( i == RegDev_Pos[LD_KILL_DSP_REG_IND] ) )
 3107                             		.loc 1 348 0
 3108 0486 DC DE                   		mov.W	[r13], r14
 3109 0488 76 2E 00 40             		and #0x4000, r14
 3110 048c 5F EE                   		movu.W	r14, r14
 3111 048e 61 0E                   		cmp	#0, r14
 3112 0490 20 2A                   		beq	.L384
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if ( (HWC_Flags.bit.bldc1) && ( i == RegDev_Pos[LD_KILL_DSP_REG_IND] ) )
 3113                             		.loc 1 348 0 is_stmt 0 discriminator 1
 3114 0492 5B B4                   		movu.B	r11, r4
 3115 0494 FB E2 00 00 00 00       		mov.L	#_RegDev_Pos, r14
 3116 049a 45 E4 06                		cmp	6[r14].UB, r4
 3117 049d 21 1D                   		bne	.L384
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			if (load.loadParam.b == LOAD_OFF) 
 3118                             		.loc 1 350 0 is_stmt 1
 3119 049f B0 0A                   		movu.B	1[r0], r2
 3120 04a1 61 02                   		cmp	#0, r2
 3121 04a3 21 17                   		bne	.L384
 3122                             	.LVL223:
 3123                             	.LBB12:
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		      		memset(&BLDC_Pump_InfoBuffer[cnt][0], 0, IOM_EXTERNAL_0_INFOBUFFER_SIZE);
 3124                             		.loc 1 356 0 discriminator 1
 3125 04a5 FB 12 00 00 00 00       		mov.L	#_BLDC_Pump_InfoBuffer, r1
 3126 04ab 66 C3                   		mov.L	#12, r3
 3127 04ad 7F 88                   		sstr.b
 3128                             	.LVL224:
 3129 04af FB 12 00 00 00 00       		mov.L	#_BLDC_Pump_InfoBuffer+12, r1
 3130 04b5 66 C3                   		mov.L	#12, r3
 3131 04b7 7F 88                   		sstr.b
 3132                             	.LVL225:
 3133 04b9 03                      		.balign 2,3,5
 3134                             	.L384:
 3135                             	.LBE12:
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( ( Alt_Pos == i ) && ( LoadsReq_Old[i].b == LoadsReq_New[i].b ) )
 3136                             		.loc 1 363 0
 3137 04ba FB E2 00 00 00 00       		mov.L	#_Alt_Pos, r14
 3138 04c0 58 EE                   		movu.B	[r14], r14
 3139 04c2 5B BB                   		movu.B	r11, r11
 3140 04c4 47 BE                   		cmp	r11, r14
 3141 04c6 21 32                   		bne	.L385
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		if( ( Alt_Pos == i ) && ( LoadsReq_Old[i].b == LoadsReq_New[i].b ) )
 3142                             		.loc 1 363 0 is_stmt 0 discriminator 1
 3143 04c8 FB B2 00 00 00 00       		mov.L	#_LoadsReq_Old, r11
 3144 04ce FE CE B4                		movu.B	[r14,r11], r4
 3145 04d1 FB B2 00 00 00 00       		mov.L	#_LoadsReq_New, r11
 3146 04d7 FE CE BB                		movu.B	[r14,r11], r11
 3147 04da 47 B4                   		cmp	r11, r4
 3148 04dc 21 1C                   		bne	.L385
 3149                             		.balign 2,3,5
 3150                             	.L387:
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 		LoadsReq_Old[i] = LoadsReq_New[i];	/* salvataggio stato carichi */
 3151                             		.loc 1 374 0 is_stmt 1
 3152 04de FB B2 00 00 00 00       		mov.L	#_LoadsReq_Old, r11
 3153 04e4 FD 28 A4                		mov.B	[r10+], r4
 3154 04e7 FE 07 B4                		mov.B	r4, [r7,r11]
 3155                             	.LVL226:
 3156 04ea 62 17                   		add	#1, r7
 3157                             	.LVL227:
 3158                             		.balign 2,3,1
 3159                             	.L363:
 3160 04ec CF 7B                   		mov.B	r7, r11
 3161                             	.LVL228:
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 	for ( i = 0; i < nLoads; i++ ) 	
 3162                             		.loc 1 236 0 discriminator 1
 3163 04ee 5B 7E                   		movu.B	r7, r14
 3164 04f0 47 8E                   		cmp	r8, r14
 3165 04f2 22 05 38 40 FE          		bltu	.L386
 3166 04f7 09                      		bra	.L459
 3167                             	.LVL229:
 3168                             	.L385:
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** 			(void)LIB_IOM_GIOM_SetLoad(&load);
 3169                             		.loc 1 371 0
 3170 04f8 EF 01                   		mov.L	r0, r1
 3171 04fa 05 00 00 00             		bsr	_LIB_IOM_GIOM_SetLoad
 3172                             	.LVL230:
 3173 04fe 2E E0                   		bra	.L387
 3174                             	.LVL231:
 3175                             	.L459:
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Control\HighLevel_IO_Manager.c **** }
 3176                             		.loc 1 377 0
 3177 0500 3F 7D 0A                		rtsd	#40, r7-r13
 3178                             	.LFE0:
 3180                             		.comm	_CriterionFilter,6,1
 3181                             		.comm	_CriterionOldState,1,1
 3182 0503 03                      		.section	.bss.over_power_algorithm.12764,"aw",@nobits
 3185                             	_over_power_algorithm.12764:
 3186 0000 00                      		.zero	1
 3187                             		.section	.bss.oldBulkState.12783,"aw",@nobits
 3190                             	_oldBulkState.12783:
 3191 0000 00                      		.zero	1
 3545                             	.Letext0:
 3546                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 3547                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_SwTimersCounters/SwTimersCo
 3548                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 3549                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/ProductSafety_cfg.
 3550                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmDefines.h"
 3551                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Types.h"
 3552                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers/IO_driver.h"
 3553                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_General.h"
 3554                             		.file 10 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/BusCommPltf_cfg.h
 3555                             		.file 11 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmTypes.h"
 3556                             		.file 12 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/OutputManagerE
 3557                             		.file 13 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmGlobal.h"
 3558                             		.file 14 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Drivers\\OCADC/OCADC_drv.h"
 3559                             		.file 15 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_BusCommMng.h"
 3560                             		.file 16 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Global.h"
 3561                             		.file 17 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/ExternalOutput
 3562                             		.file 18 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/Config.h"
 3563                             		.file 19 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_FuncLib.h"
 3564                             		.file 20 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Consistency/PM_Consistency
 3565                             		.file 21 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Analog/AnalogExp.h"
 3566                             		.file 22 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmFuncLib.h"
 3567                             		.file 23 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_DigitalIO/DigitalInputsE
 3568                             		.file 24 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_PulseCounter/PM_PulseCount
 3569                             		.file 25 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_TurbiditySensor/PM_Turbidi
DEFINED SYMBOLS
                            *ABS*:00000000 HighLevel_IO_Manager.c
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:6      .text.set_limit4_state5:00000000 _set_limit4_state5
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12     .text.set_limit4_state5:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:91     .text.HIO_updateEngineData:00000000 _HIO_updateEngineData
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:95     .text.HIO_updateEngineData:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:117    .text.HIO_loadsReset:00000000 _HIO_loadsReset
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:121    .text.HIO_loadsReset:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:176    .text.HIO_ldPosInit:00000000 _HIO_ldPosInit
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:179    .text.HIO_ldPosInit:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:410    .text.HIO_saltCriterionRegMgmt:00000000 _HIO_saltCriterionRegMgmt
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:414    .text.HIO_saltCriterionRegMgmt:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:465    .text.HIO_gICriteriaOld_Update:00000000 _HIO_gICriteriaOld_Update
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:469    .text.HIO_gICriteriaOld_Update:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:478    .text.HIO_consistencyManagement:00000000 _HIO_consistencyManagement
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:482    .text.HIO_consistencyManagement:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:490    .text.HIO_GIScaleConv:00000000 _HIO_GIScaleConv
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:494    .text.HIO_GIScaleConv:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:547    .text.HIO_GIGetCriterionDigitalTable:00000000 _HIO_GIGetCriterionDigitalTable
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:551    .text.HIO_GIGetCriterionDigitalTable:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:598    .text.HIO_trbProcessSmpl:00000000 _HIO_trbProcessSmpl
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:602    .text.HIO_trbProcessSmpl:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:746    .text.HIO_GIConv:00000000 _HIO_GIConv
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:750    .text.HIO_GIConv:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:934    .text.HIO_trbReadEnable:00000000 _HIO_trbReadEnable
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:939    .text.HIO_trbReadEnable:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:948    .text.HIO_trbReadDisable:00000000 _HIO_trbReadDisable
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:952    .text.HIO_trbReadDisable:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:965    .text.HIO_GetSparklingAidCriterionValue:00000000 _HIO_GetSparklingAidCriterionValue
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:969    .text.HIO_GetSparklingAidCriterionValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1073   .text.Fan_GenericLoadMgmt:00000000 _Fan_GenericLoadMgmt
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1077   .text.Fan_GenericLoadMgmt:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1132   .text.HIO_OverHeat_DrainPump_Control:00000000 _HIO_OverHeat_DrainPump_Control
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1135   .text.HIO_OverHeat_DrainPump_Control:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3185   .bss.over_power_algorithm.12764:00000000 _over_power_algorithm.12764
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1354   .text.HIO_BulkAndKillDSP_Mgmt:00000000 _HIO_BulkAndKillDSP_Mgmt
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1359   .text.HIO_BulkAndKillDSP_Mgmt:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3190   .bss.oldBulkState.12783:00000000 _oldBulkState.12783
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1592   .text.HIO_Check_VS_Valid:00000000 _HIO_Check_VS_Valid
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1597   .text.HIO_Check_VS_Valid:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1634   .text.HIO_inputManagement:00000000 _HIO_inputManagement
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1637   .text.HIO_inputManagement:00000000 L0
                            *COM*:00000006 _CriterionFilter
                            *COM*:00000001 _CriterionOldState
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2404   .text.HIO_Check_VS_Stability:00000000 _HIO_Check_VS_Stability
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2408   .text.HIO_Check_VS_Stability:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2519   .text.HIO_loadsManagement:00000000 _HIO_loadsManagement
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2522   .text.HIO_loadsManagement:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:265    .rodata.HIO_ldPosInit:00000000 .L37
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:283    .text.HIO_ldPosInit:000000b1 .L27
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:325    .text.HIO_ldPosInit:00000102 .L28
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:330    .text.HIO_ldPosInit:0000010c .L29
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:337    .text.HIO_ldPosInit:00000116 .L30
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:343    .text.HIO_ldPosInit:0000011e .L31
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:349    .text.HIO_ldPosInit:00000126 .L32
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:360    .text.HIO_ldPosInit:00000133 .L33
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:367    .text.HIO_ldPosInit:0000013d .L34
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:372    .text.HIO_ldPosInit:00000141 .L35
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:396    .text.HIO_ldPosInit:0000015f .L41
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:382    .text.HIO_ldPosInit:0000014c .L36
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1675   .rodata.HIO_inputManagement:00000000 .L209
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1683   .text.HIO_inputManagement:00000044 .L204
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2385   .text.HIO_inputManagement:0000053c .L203
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1717   .text.HIO_inputManagement:00000089 .L205
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2096   .text.HIO_inputManagement:0000033c .L206
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2136   .text.HIO_inputManagement:00000388 .L207
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2243   .text.HIO_inputManagement:00000458 .L208
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3193   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:7      .text.set_limit4_state5:00000000 .LFB21
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:92     .text.HIO_updateEngineData:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:118    .text.HIO_loadsReset:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:177    .text.HIO_ldPosInit:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:411    .text.HIO_saltCriterionRegMgmt:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:466    .text.HIO_gICriteriaOld_Update:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:479    .text.HIO_consistencyManagement:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:491    .text.HIO_GIScaleConv:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:548    .text.HIO_GIGetCriterionDigitalTable:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:599    .text.HIO_trbProcessSmpl:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:747    .text.HIO_GIConv:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:935    .text.HIO_trbReadEnable:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:949    .text.HIO_trbReadDisable:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:966    .text.HIO_GetSparklingAidCriterionValue:00000000 .LFB14
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1074   .text.Fan_GenericLoadMgmt:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1133   .text.HIO_OverHeat_DrainPump_Control:00000000 .LFB16
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1355   .text.HIO_BulkAndKillDSP_Mgmt:00000000 .LFB17
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1593   .text.HIO_Check_VS_Valid:00000000 .LFB18
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1635   .text.HIO_inputManagement:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2405   .text.HIO_Check_VS_Stability:00000000 .LFB19
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2520   .text.HIO_loadsManagement:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:9101   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12379  .debug_str:00001c1a .LASF568
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11889  .debug_str:00000b91 .LASF569
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11467  .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11513  .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12143  .debug_str:0000145d .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12445  .debug_str:00001ea3 .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12425  .debug_str:00001dee .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12303  .debug_str:00001985 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12573  .debug_str:000022b3 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12529  .debug_str:00002149 .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12005  .debug_str:00000fce .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11685  .debug_str:0000054a .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12291  .debug_str:00001920 .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12081  .debug_str:00001294 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12301  .debug_str:0000197d .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11783  .debug_str:00000879 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11519  .debug_str:00000011 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11761  .debug_str:000007ca .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12191  .debug_str:000015cd .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12467  .debug_str:00001f6b .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12131  .debug_str:00001404 .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12415  .debug_str:00001d83 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11545  .debug_str:000000c5 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12601  .debug_str:000023b1 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11529  .debug_str:00000058 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12265  .debug_str:0000182a .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12373  .debug_str:00001bf9 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11671  .debug_str:00000502 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12267  .debug_str:0000183c .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12329  .debug_str:00001a62 .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12481  .debug_str:00001fcd .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11975  .debug_str:00000eb1 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11631  .debug_str:000003bc .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12405  .debug_str:00001d28 .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12117  .debug_str:000013a3 .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11925  .debug_str:00000d13 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12333  .debug_str:00001a87 .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11823  .debug_str:000009ad .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11611  .debug_str:00000310 .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12275  .debug_str:0000188e .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11527  .debug_str:00000045 .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12477  .debug_str:00001fa5 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12085  .debug_str:000012b3 .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11995  .debug_str:00000f71 .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11721  .debug_str:00000665 .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12141  .debug_str:0000144f .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11789  .debug_str:000008a8 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12231  .debug_str:0000172b .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11651  .debug_str:00000467 .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12627  .debug_str:0000249d .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12121  .debug_str:000013ca .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12549  .debug_str:000021eb .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12533  .debug_str:0000215d .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11911  .debug_str:00000cae .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11935  .debug_str:00000d76 .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12047  .debug_str:00001154 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11665  .debug_str:000004ce .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12391  .debug_str:00001c96 .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12317  .debug_str:000019ec .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11633  .debug_str:000003ca .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11779  .debug_str:0000085b .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11585  .debug_str:00000243 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12075  .debug_str:00001258 .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12437  .debug_str:00001e4f .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12163  .debug_str:0000151b .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12065  .debug_str:000011e9 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12567  .debug_str:0000228d .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11575  .debug_str:000001d0 .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12293  .debug_str:00001937 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12495  .debug_str:0000204d .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12411  .debug_str:00001d55 .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11577  .debug_str:000001e5 .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11571  .debug_str:000001b0 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12563  .debug_str:00002272 .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12377  .debug_str:00001c03 .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12421  .debug_str:00001dc4 .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12023  .debug_str:00001074 .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12441  .debug_str:00001e7b .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11957  .debug_str:00000e2d .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11971  .debug_str:00000e92 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12351  .debug_str:00001b2e .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12609  .debug_str:000023e9 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11693  .debug_str:0000058a .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12429  .debug_str:00001e16 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12399  .debug_str:00001cf8 .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12193  .debug_str:000015d5 .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12515  .debug_str:000020eb .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11817  .debug_str:0000098a .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12181  .debug_str:0000158b .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12449  .debug_str:00001eb4 .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11881  .debug_str:00000b4c .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12491  .debug_str:00002017 .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11941  .debug_str:00000db6 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11931  .debug_str:00000d48 .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11727  .debug_str:000006b7 .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11579  .debug_str:000001fa .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11755  .debug_str:0000078a .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11537  .debug_str:0000007e .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12295  .debug_str:00001952 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11825  .debug_str:000009b2 .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11599  .debug_str:000002bf .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12153  .debug_str:000014c3 .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11903  .debug_str:00000c68 .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12459  .debug_str:00001f1f .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11765  .debug_str:000007f9 .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12417  .debug_str:00001d88 .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12025  .debug_str:0000108a .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12237  .debug_str:0000175d .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12621  .debug_str:00002442 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12599  .debug_str:00002393 .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11751  .debug_str:00000766 .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12423  .debug_str:00001ddc .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12195  .debug_str:000015e3 .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12493  .debug_str:0000202f .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12395  .debug_str:00001cc4 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12645  .debug_str:0000253f .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12473  .debug_str:00001f85 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12605  .debug_str:000023dd .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12503  .debug_str:00002092 .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11795  .debug_str:000008e2 .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12527  .debug_str:00002143 .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11659  .debug_str:000004a8 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12207  .debug_str:0000163f .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11753  .debug_str:0000077e .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12587  .debug_str:0000231e .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12541  .debug_str:000021b3 .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12389  .debug_str:00001c84 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11617  .debug_str:00000342 .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12107  .debug_str:00001357 .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12319  .debug_str:000019fd .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12239  .debug_str:00001772 .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12325  .debug_str:00001a2e .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12049  .debug_str:00001167 .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11535  .debug_str:00000073 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11839  .debug_str:00000a24 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11869  .debug_str:00000ae0 .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11933  .debug_str:00000d63 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11667  .debug_str:000004dd .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12285  .debug_str:000018de .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11627  .debug_str:00000395 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11939  .debug_str:00000d99 .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12095  .debug_str:000012fb .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11937  .debug_str:00000d8c .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11757  .debug_str:0000079b .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11573  .debug_str:000001c3 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12523  .debug_str:0000212e .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12341  .debug_str:00001ad6 .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12229  .debug_str:0000171a .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12347  .debug_str:00001b0d .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12581  .debug_str:000022ed .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11523  .debug_str:0000002d .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12101  .debug_str:00001333 .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11715  .debug_str:00000638 .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11623  .debug_str:00000382 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11969  .debug_str:00000e8c .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12251  .debug_str:000017be .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11729  .debug_str:000006d3 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12561  .debug_str:0000226d .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12577  .debug_str:000022d2 .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11649  .debug_str:0000045a .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11811  .debug_str:0000096d .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11635  .debug_str:000003e1 .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11831  .debug_str:000009e4 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12021  .debug_str:00001064 .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12177  .debug_str:00001579 .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11695  .debug_str:0000059b .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11723  .debug_str:00000683 .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12547  .debug_str:000021e4 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12165  .debug_str:0000152a .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11987  .debug_str:00000f1a .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12357  .debug_str:00001b4f .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12439  .debug_str:00001e69 .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12273  .debug_str:0000187b .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11843  .debug_str:00000a3c .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12519  .debug_str:00002113 .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12263  .debug_str:00001812 .LASF213
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12443  .debug_str:00001e8c .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11787  .debug_str:00000898 .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11553  .debug_str:00000105 .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12283  .debug_str:000018d0 .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12483  .debug_str:00001fde .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12089  .debug_str:000012c7 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12009  .debug_str:00000ff0 .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12447  .debug_str:00001eab .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12375  .debug_str:00001bfe .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11521  .debug_str:00000018 .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12159  .debug_str:000014fb .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11801  .debug_str:0000090f .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11541  .debug_str:000000a7 .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11793  .debug_str:000008d0 .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12589  .debug_str:00002334 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11615  .debug_str:00000331 .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12557  .debug_str:00002245 .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12369  .debug_str:00001be3 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12211  .debug_str:0000166b .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11705  .debug_str:000005e6 .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11595  .debug_str:00000299 .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12397  .debug_str:00001ce5 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12097  .debug_str:00001316 .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11653  .debug_str:0000047d .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12271  .debug_str:0000186d .LASF195
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11563  .debug_str:00000171 .LASF196
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12453  .debug_str:00001ef1 .LASF197
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12367  .debug_str:00001bd2 .LASF198
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11657  .debug_str:00000497 .LASF199
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12479  .debug_str:00001fb8 .LASF200
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11873  .debug_str:00000b03 .LASF201
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11629  .debug_str:000003ae .LASF202
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11767  .debug_str:00000811 .LASF203
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12385  .debug_str:00001c73 .LASF204
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12137  .debug_str:00001427 .LASF205
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11725  .debug_str:000006a1 .LASF206
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11677  .debug_str:0000051b .LASF207
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11543  .debug_str:000000b8 .LASF208
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11561  .debug_str:0000015a .LASF209
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12157  .debug_str:000014e3 .LASF210
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12069  .debug_str:00001210 .LASF211
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12139  .debug_str:00001440 .LASF212
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12189  .debug_str:000015c6 .LASF214
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11867  .debug_str:00000ada .LASF215
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12041  .debug_str:00001112 .LASF216
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12469  .debug_str:00001f72 .LASF217
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12607  .debug_str:000023e3 .LASF218
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12093  .debug_str:000012f4 .LASF219
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11747  .debug_str:00000750 .LASF220
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11893  .debug_str:00000c02 .LASF221
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12063  .debug_str:000011d1 .LASF222
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12401  .debug_str:00001d07 .LASF223
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12179  .debug_str:00001584 .LASF224
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12455  .debug_str:00001ef6 .LASF225
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12641  .debug_str:0000251d .LASF226
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11901  .debug_str:00000c60 .LASF227
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12501  .debug_str:00002089 .LASF228
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11655  .debug_str:00000486 .LASF229
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12279  .debug_str:000018ad .LASF230
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12007  .debug_str:00000fe0 .LASF231
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12185  .debug_str:000015a6 .LASF232
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12643  .debug_str:00002534 .LASF233
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11851  .debug_str:00000a65 .LASF234
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11739  .debug_str:000006ff .LASF235
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12505  .debug_str:000020a6 .LASF236
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12525  .debug_str:0000213b .LASF237
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12387  .debug_str:00001c7f .LASF238
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11999  .debug_str:00000f99 .LASF239
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11743  .debug_str:00000716 .LASF240
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11861  .debug_str:00000aaf .LASF241
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12169  .debug_str:00001556 .LASF242
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12261  .debug_str:0000180d .LASF243
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12221  .debug_str:000016d2 .LASF244
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12575  .debug_str:000022c6 .LASF245
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11613  .debug_str:00000323 .LASF246
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11877  .debug_str:00000b2c .LASF247
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12323  .debug_str:00001a1c .LASF248
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11847  .debug_str:00000a49 .LASF249
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11605  .debug_str:000002de .LASF250
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11639  .debug_str:00000409 .LASF251
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12247  .debug_str:000017a6 .LASF252
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12125  .debug_str:000013ee .LASF253
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12199  .debug_str:0000160e .LASF254
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12485  .debug_str:00001fe6 .LASF255
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12017  .debug_str:0000103a .LASF256
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11945  .debug_str:00000de4 .LASF257
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11741  .debug_str:0000070a .LASF258
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12407  .debug_str:00001d3a .LASF259
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11853  .debug_str:00000a70 .LASF260
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11871  .debug_str:00000af1 .LASF261
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12633  .debug_str:000024cf .LASF262
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11897  .debug_str:00000c36 .LASF263
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12083  .debug_str:000012a2 .LASF264
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12203  .debug_str:00001629 .LASF265
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12115  .debug_str:00001394 .LASF266
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12433  .debug_str:00001e38 .LASF267
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11827  .debug_str:000009bf .LASF268
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11679  .debug_str:00000527 .LASF269
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12649  .debug_str:00002582 .LASF270
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11855  .debug_str:00000a77 .LASF271
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11781  .debug_str:00000868 .LASF272
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12487  .debug_str:00001ff7 .LASF273
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11859  .debug_str:00000a9d .LASF274
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12289  .debug_str:00001909 .LASF275
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11981  .debug_str:00000ef4 .LASF276
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12245  .debug_str:0000179d .LASF277
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11583  .debug_str:0000022d .LASF278
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12517  .debug_str:000020fa .LASF279
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12465  .debug_str:00001f58 .LASF280
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11589  .debug_str:0000026e .LASF281
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12147  .debug_str:0000147b .LASF282
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12161  .debug_str:00001514 .LASF283
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12315  .debug_str:000019d5 .LASF284
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12105  .debug_str:0000134c .LASF285
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12307  .debug_str:00001998 .LASF286
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11687  .debug_str:00000553 .LASF287
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11549  .debug_str:000000dc .LASF288
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12471  .debug_str:00001f7b .LASF289
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12331  .debug_str:00001a71 .LASF290
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11525  .debug_str:0000003a .LASF291
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12277  .debug_str:000018a0 .LASF292
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12217  .debug_str:000016ba .LASF293
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11619  .debug_str:0000035a .LASF294
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12257  .debug_str:000017e6 .LASF295
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12031  .debug_str:000010bf .LASF296
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12615  .debug_str:0000240a .LASF297
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11703  .debug_str:000005d7 .LASF298
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12661  .debug_str:000025c5 .LASF299
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11745  .debug_str:00000727 .LASF300
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12213  .debug_str:00001673 .LASF301
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11769  .debug_str:00000820 .LASF302
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11803  .debug_str:00000923 .LASF303
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11645  .debug_str:0000042f .LASF304
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12403  .debug_str:00001d13 .LASF305
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11833  .debug_str:000009eb .LASF306
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11927  .debug_str:00000d28 .LASF307
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11749  .debug_str:0000075e .LASF308
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11991  .debug_str:00000f4d .LASF309
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12029  .debug_str:000010ad .LASF310
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11989  .debug_str:00000f33 .LASF311
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12045  .debug_str:0000113c .LASF312
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12079  .debug_str:00001284 .LASF313
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11637  .debug_str:000003e9 .LASF314
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12583  .debug_str:000022fb .LASF315
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12513  .debug_str:000020e2 .LASF316
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12639  .debug_str:0000250f .LASF317
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12335  .debug_str:00001a9e .LASF318
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12255  .debug_str:000017d9 .LASF319
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11829  .debug_str:000009cd .LASF320
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12253  .debug_str:000017cc .LASF321
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11707  .debug_str:000005f5 .LASF322
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11567  .debug_str:00000191 .LASF323
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12371  .debug_str:00001be8 .LASF324
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12613  .debug_str:00002402 .LASF325
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12037  .debug_str:000010f2 .LASF326
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11531  .debug_str:00000061 .LASF327
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11923  .debug_str:00000d0b .LASF328
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11845  .debug_str:00000a41 .LASF329
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12035  .debug_str:000010ea .LASF330
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11961  .debug_str:00000e50 .LASF331
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11771  .debug_str:0000082c .LASF332
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11533  .debug_str:00000069 .LASF333
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11913  .debug_str:00000cc3 .LASF334
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12015  .debug_str:00001023 .LASF335
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12001  .debug_str:00000fa3 .LASF336
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11973  .debug_str:00000ea0 .LASF337
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12219  .debug_str:000016cc .LASF338
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12225  .debug_str:000016f3 .LASF339
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12155  .debug_str:000014d2 .LASF340
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12129  .debug_str:000013fe .LASF341
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12659  .debug_str:000025b6 .LASF342
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12103  .debug_str:00001342 .LASF343
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11697  .debug_str:000005a5 .LASF344
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12591  .debug_str:0000234a .LASF345
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11701  .debug_str:000005cd .LASF346
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11547  .debug_str:000000d0 .LASF347
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12073  .debug_str:00001248 .LASF348
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11641  .debug_str:00000417 .LASF349
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11515  .debug_str:00000000 .LASF350
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12145  .debug_str:0000146a .LASF351
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11733  .debug_str:000006e4 .LASF352
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12511  .debug_str:000020d6 .LASF353
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12535  .debug_str:00002173 .LASF354
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11821  .debug_str:000009a1 .LASF355
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11993  .debug_str:00000f67 .LASF356
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12349  .debug_str:00001b1e .LASF357
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11689  .debug_str:00000564 .LASF358
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11865  .debug_str:00000abf .LASF359
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11565  .debug_str:0000017e .LASF360
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12297  .debug_str:00001963 .LASF361
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11775  .debug_str:0000083f .LASF362
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11799  .debug_str:00000905 .LASF363
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12061  .debug_str:000011c4 .LASF364
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11709  .debug_str:000005ff .LASF365
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11965  .debug_str:00000e71 .LASF366
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12497  .debug_str:0000205e .LASF367
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12249  .debug_str:000017af .LASF368
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11609  .debug_str:000002ff .LASF369
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11891  .debug_str:00000bdf .LASF370
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12363  .debug_str:00001b97 .LASF371
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12617  .debug_str:00002413 .LASF372
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11763  .debug_str:000007d6 .LASF373
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12071  .debug_str:00001224 .LASF374
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12327  .debug_str:00001a41 .LASF375
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12187  .debug_str:000015b4 .LASF376
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11603  .debug_str:000002d7 .LASF377
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11731  .debug_str:000006dc .LASF378
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12127  .debug_str:000013f7 .LASF379
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12175  .debug_str:0000156f .LASF380
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12311  .debug_str:000019b0 .LASF381
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12299  .debug_str:0000196f .LASF382
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12003  .debug_str:00000fb8 .LASF383
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11555  .debug_str:00000112 .LASF384
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11557  .debug_str:0000012c .LASF385
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11907  .debug_str:00000c8d .LASF386
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12647  .debug_str:0000255e .LASF387
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12521  .debug_str:0000211a .LASF388
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11717  .debug_str:00000643 .LASF389
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11759  .debug_str:000007a8 .LASF390
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12637  .debug_str:000024f3 .LASF391
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12551  .debug_str:00002200 .LASF392
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11699  .debug_str:000005b2 .LASF393
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12539  .debug_str:0000219b .LASF394
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12383  .debug_str:00001c58 .LASF395
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11979  .debug_str:00000eda .LASF396
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12623  .debug_str:00002459 .LASF397
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11539  .debug_str:0000008d .LASF398
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12361  .debug_str:00001b72 .LASF399
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11953  .debug_str:00000e0b .LASF400
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11837  .debug_str:00000a0b .LASF401
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11899  .debug_str:00000c40 .LASF402
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11581  .debug_str:0000020e .LASF403
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12603  .debug_str:000023bf .LASF404
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12019  .debug_str:0000104c .LASF405
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12543  .debug_str:000021bf .LASF406
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11621  .debug_str:00000372 .LASF407
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12381  .debug_str:00001c40 .LASF408
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11905  .debug_str:00000c77 .LASF409
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12067  .debug_str:000011f8 .LASF410
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12339  .debug_str:00001abf .LASF411
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12269  .debug_str:0000184e .LASF412
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12151  .debug_str:000014a7 .LASF413
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11791  .debug_str:000008ba .LASF414
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11929  .debug_str:00000d32 .LASF415
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12431  .debug_str:00001e23 .LASF416
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12057  .debug_str:00001198 .LASF417
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12419  .debug_str:00001da0 .LASF418
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12091  .debug_str:000012d2 .LASF419
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12011  .debug_str:00000ff9 .LASF420
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12427  .debug_str:00001df8 .LASF421
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12215  .debug_str:0000169d .LASF422
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12413  .debug_str:00001d6a .LASF423
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12625  .debug_str:00002476 .LASF424
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11983  .debug_str:00000f01 .LASF425
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12343  .debug_str:00001ae3 .LASF570
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:86     .text.set_limit4_state5:0000008b .LFE21
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12013  .debug_str:0000101c .LASF435
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10268  .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12489  .debug_str:0000200c .LASF428
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:73     .text.set_limit4_state5:0000007b .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11807  .debug_str:0000093d .LASF426
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:112    .text.HIO_updateEngineData:00000027 .LFE1
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:101    .text.HIO_updateEngineData:00000012 .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:109    .text.HIO_updateEngineData:00000026 .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12259  .debug_str:000017fe .LASF427
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:171    .text.HIO_loadsReset:0000006b .LFE2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12509  .debug_str:000020c6 .LASF429
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:152    .text.HIO_loadsReset:00000044 .LBB2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:163    .text.HIO_loadsReset:0000005a .LBE2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10286  .debug_loc:0000002c .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11997  .debug_str:00000f8b .LASF433
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:405    .text.HIO_ldPosInit:00000169 .LFE3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10304  .debug_loc:00000058 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10317  .debug_loc:00000078 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10364  .debug_loc:000000eb .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10494  .debug_loc:000001cd .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:322    .text.HIO_ldPosInit:00000100 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11711  .debug_str:0000060e .LASF430
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:460    .text.HIO_saltCriterionRegMgmt:00000068 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12499  .debug_str:00002070 .LASF431
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:473    .text.HIO_gICriteriaOld_Update:0000000f .LFE5
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12149  .debug_str:0000148d .LASF432
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:485    .text.HIO_consistencyManagement:0000000a .LFE7
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:484    .text.HIO_consistencyManagement:0000000a .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11643  .debug_str:0000041f .LASF434
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:542    .text.HIO_GIScaleConv:00000045 .LFE9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10546  .debug_loc:00000222 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10564  .debug_loc:0000024e .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11673  .debug_str:0000050a .LASF436
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10593  .debug_loc:00000293 .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11815  .debug_str:00000984 .LASF437
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:507    .text.HIO_GIScaleConv:00000013 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:523    .text.HIO_GIScaleConv:00000032 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12365  .debug_str:00001bb3 .LASF438
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:593    .text.HIO_GIGetCriterionDigitalTable:00000041 .LFE10
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10604  .debug_loc:000002b1 .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11841  .debug_str:00000a35 .LASF439
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11669  .debug_str:000004ef .LASF440
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:741    .text.HIO_trbProcessSmpl:000000d7 .LFE11
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10632  .debug_loc:000002f5 .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11917  .debug_str:00000ce4 .LASF441
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10645  .debug_loc:00000315 .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12305  .debug_str:0000198e .LASF442
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10670  .debug_loc:0000034f .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12055  .debug_str:00001191 .LASF443
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10715  .debug_loc:000003b9 .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11813  .debug_str:0000097e .LASF444
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10742  .debug_loc:000003fc .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12027  .debug_str:000010a2 .LASF445
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:929    .text.HIO_GIConv:000000ff .LFE8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10754  .debug_loc:0000041b .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10772  .debug_loc:00000447 .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10812  .debug_loc:000004a5 .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11675  .debug_str:00000512 .LASF446
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10823  .debug_loc:000004c3 .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11819  .debug_str:0000099b .LASF447
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10834  .debug_loc:000004e1 .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11663  .debug_str:000004c6 .LASF448
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:764    .text.HIO_GIConv:00000014 .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:776    .text.HIO_GIConv:0000002c .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:788    .text.HIO_GIConv:0000003e .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:832    .text.HIO_GIConv:00000078 .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:855    .text.HIO_GIConv:0000009f .LVL81
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11895  .debug_str:00000c24 .LASF449
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:943    .text.HIO_trbReadEnable:0000000d .LFE12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12569  .debug_str:00002299 .LASF450
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:960    .text.HIO_trbReadDisable:00000011 .LFE13
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10864  .debug_loc:0000052e .LLST21
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12451  .debug_str:00001ecf .LASF451
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1068   .text.HIO_GetSparklingAidCriterionValue:0000008d .LFE14
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10877  .debug_loc:0000054e .LLST22
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10895  .debug_loc:0000057a .LLST23
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12655  .debug_str:0000259f .LASF452
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10909  .debug_loc:0000059b .LLST24
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12309  .debug_str:000019a8 .LASF453
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10938  .debug_loc:000005e0 .LLST25
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10945  .debug_loc:000005f3 .LLST26
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12531  .debug_str:00002152 .LASF454
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10970  .debug_loc:00000626 .LLST27
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11805  .debug_str:0000092d .LASF455
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11005  .debug_loc:00000671 .LLST28
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:986    .text.HIO_GetSparklingAidCriterionValue:0000001d .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12287  .debug_str:000018f5 .LASF456
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1127   .text.Fan_GenericLoadMgmt:0000006b .LFE15
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1098   .text.Fan_GenericLoadMgmt:00000039 .LVL108
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1104   .text.Fan_GenericLoadMgmt:00000041 .LVL109
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1112   .text.Fan_GenericLoadMgmt:0000004b .LVL110
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1116   .text.Fan_GenericLoadMgmt:0000004f .LVL111
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12635  .debug_str:000024d4 .LASF571
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1349   .text.HIO_OverHeat_DrainPump_Control:000001a9 .LFE16
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11016  .debug_loc:0000068f .LLST29
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11797  .debug_str:000008f0 .LASF457
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12653  .debug_str:00002595 .LASF572
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12135  .debug_str:0000141d .LASF458
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12171  .debug_str:0000155c .LASF459
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11661  .debug_str:000004ae .LASF460
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1587   .text.HIO_BulkAndKillDSP_Mgmt:0000017b .LFE17
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11647  .debug_str:00000447 .LASF461
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11029  .debug_loc:000006af .LLST30
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12555  .debug_str:00002231 .LASF462
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11045  .debug_loc:000006d9 .LLST31
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12033  .debug_str:000010d3 .LASF463
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11061  .debug_loc:00000703 .LLST32
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12241  .debug_str:0000177b .LASF464
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11088  .debug_loc:00000746 .LLST33
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11921  .debug_str:00000cfb .LASF465
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11115  .debug_loc:00000782 .LLST34
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12133  .debug_str:0000140b .LASF466
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11122  .debug_loc:00000795 .LLST35
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11719  .debug_str:00000658 .LASF467
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1517   .text.HIO_BulkAndKillDSP_Mgmt:00000117 .LVL124
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1523   .text.HIO_BulkAndKillDSP_Mgmt:0000011f .LVL125
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1532   .text.HIO_BulkAndKillDSP_Mgmt:00000129 .LVL127
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1540   .text.HIO_BulkAndKillDSP_Mgmt:00000130 .LVL129
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11963  .debug_str:00000e5e .LASF468
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1629   .text.HIO_Check_VS_Valid:00000041 .LFE18
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11951  .debug_str:00000e01 .LASF469
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11144  .debug_loc:000007cc .LLST36
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11875  .debug_str:00000b18 .LASF470
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2399   .text.HIO_inputManagement:00000550 .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11158  .debug_loc:000007ed .LLST37
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12611  .debug_str:000023f8 .LASF471
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11737  .debug_str:000006f8 .LASF472
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11176  .debug_loc:00000819 .LLST38
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11197  .debug_loc:0000084f .LLST39
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12651  .debug_str:0000258f .LASF473
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11292  .debug_loc:00000938 .LLST40
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1829   .text.HIO_inputManagement:0000015c .LBB3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1979   .text.HIO_inputManagement:00000270 .LBE3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12629  .debug_str:000024b3 .LASF474
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11299  .debug_loc:0000094b .LLST41
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1833   .text.HIO_inputManagement:00000163 .LVL147
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1845   .text.HIO_inputManagement:00000177 .LVL149
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1691   .text.HIO_inputManagement:00000056 .LVL140
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1733   .text.HIO_inputManagement:000000a7 .LVL141
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2017   .text.HIO_inputManagement:000002b5 .LVL156
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2099   .text.HIO_inputManagement:00000340 .LVL166
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2114   .text.HIO_inputManagement:00000358 .LVL168
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2127   .text.HIO_inputManagement:00000377 .LVL169
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2185   .text.HIO_inputManagement:000003e6 .LVL173
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2205   .text.HIO_inputManagement:00000402 .LVL175
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2215   .text.HIO_inputManagement:0000041b .LVL176
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2247   .text.HIO_inputManagement:0000045e .LVL178
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2271   .text.HIO_inputManagement:0000048f .LVL180
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2277   .text.HIO_inputManagement:0000049a .LVL181
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2298   .text.HIO_inputManagement:000004bd .LVL182
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2302   .text.HIO_inputManagement:000004c4 .LVL183
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2328   .text.HIO_inputManagement:000004e3 .LVL187
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2333   .text.HIO_inputManagement:000004ee .LVL188
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2379   .text.HIO_inputManagement:00000535 .LVL193
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2383   .text.HIO_inputManagement:0000053c .LVL194
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11607  .debug_str:000002e8 .LASF475
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2514   .text.HIO_Check_VS_Stability:000000bb .LFE19
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12545  .debug_str:000021d7 .LASF476
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11310  .debug_loc:00000969 .LLST42
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2480   .text.HIO_Check_VS_Stability:0000008a .LVL202
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2501   .text.HIO_Check_VS_Stability:000000ad .LVL205
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2509   .text.HIO_Check_VS_Stability:000000b7 .LVL206
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2513   .text.HIO_Check_VS_Stability:000000bb .LVL207
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12345  .debug_str:00001af5 .LASF573
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12337  .debug_str:00001aab .LASF477
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3178   .text.HIO_loadsManagement:00000503 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11347  .debug_loc:000009a8 .LLST43
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11365  .debug_loc:000009d4 .LLST44
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12173  .debug_str:00001568 .LASF478
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11773  .debug_str:0000083a .LASF479
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12201  .debug_str:0000161b .LASF480
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11381  .debug_loc:000009fe .LLST45
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2600   .text.HIO_loadsManagement:000000a9 .LBB8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2630   .text.HIO_loadsManagement:000000ec .LBE8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11947  .debug_str:00000df0 .LASF481
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11394  .debug_loc:00000a1e .LLST46
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2636   .text.HIO_loadsManagement:000000f5 .LBB9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2695   .text.HIO_loadsManagement:00000170 .LBE9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2670   .text.HIO_loadsManagement:0000013c .LVL213
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3123   .text.HIO_loadsManagement:000004a5 .LBB12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3135   .text.HIO_loadsManagement:000004ba .LBE12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11401  .debug_loc:00000a31 .LLST47
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2533   .text.HIO_loadsManagement:00000014 .LVL208
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2545   .text.HIO_loadsManagement:00000029 .LVL209
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2889   .text.HIO_loadsManagement:000002fc .LVL214
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2901   .text.HIO_loadsManagement:00000310 .LVL215
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2944   .text.HIO_loadsManagement:00000365 .LVL218
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2953   .text.HIO_loadsManagement:00000379 .LVL219
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2959   .text.HIO_loadsManagement:00000387 .LVL220
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2963   .text.HIO_loadsManagement:00000391 .LVL221
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2969   .text.HIO_loadsManagement:00000399 .LVL222
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3172   .text.HIO_loadsManagement:000004fe .LVL230
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12595  .debug_str:0000237a .LASF482
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12553  .debug_str:00002220 .LASF483
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12039  .debug_str:00001100 .LASF484
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11985  .debug_str:00000f0f .LASF485
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12597  .debug_str:00002382 .LASF486
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11785  .debug_str:00000887 .LASF487
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12059  .debug_str:000011af .LASF488
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11949  .debug_str:00000df6 .LASF489
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12205  .debug_str:00001638 .LASF490
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11909  .debug_str:00000ca0 .LASF491
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12565  .debug_str:00002285 .LASF492
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12087  .debug_str:000012bb .LASF493
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11625  .debug_str:00000387 .LASF494
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12243  .debug_str:00001791 .LASF495
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12227  .debug_str:00001705 .LASF496
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11777  .debug_str:0000084a .LASF497
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12053  .debug_str:00001188 .LASF498
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11517  .debug_str:00000009 .LASF499
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12353  .debug_str:00001b3e .LASF500
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12197  .debug_str:00001605 .LASF501
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12235  .debug_str:00001755 .LASF502
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11849  .debug_str:00000a5a .LASF503
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11601  .debug_str:000002cf .LASF504
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11967  .debug_str:00000e7f .LASF505
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11835  .debug_str:00000a02 .LASF506
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12099  .debug_str:00001326 .LASF507
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12579  .debug_str:000022e0 .LASF508
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12463  .debug_str:00001f48 .LASF509
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11587  .debug_str:0000025d .LASF510
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11977  .debug_str:00000ec7 .LASF511
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12119  .debug_str:000013b9 .LASF512
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12113  .debug_str:00001383 .LASF513
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12223  .debug_str:000016dc .LASF514
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12051  .debug_str:00001179 .LASF515
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11863  .debug_str:00000ab4 .LASF516
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11887  .debug_str:00000b7f .LASF517
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11559  .debug_str:00000146 .LASF518
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11681  .debug_str:0000052f .LASF519
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12559  .debug_str:0000225a .LASF520
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12077  .debug_str:0000126c .LASF521
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11857  .debug_str:00000a8a .LASF522
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11883  .debug_str:00000b5f .LASF523
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12631  .debug_str:000024c0 .LASF524
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11683  .debug_str:0000053a .LASF525
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12571  .debug_str:000022ac .LASF526
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12123  .debug_str:000013df .LASF527
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12321  .debug_str:00001a12 .LASF528
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12409  .debug_str:00001d41 .LASF529
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12167  .debug_str:00001547 .LASF530
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11551  .debug_str:000000f7 .LASF531
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12657  .debug_str:000025a6 .LASF532
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11593  .debug_str:0000028f .LASF533
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12183  .debug_str:00001597 .LASF534
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12109  .debug_str:00001367 .LASF535
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11943  .debug_str:00000dd1 .LASF536
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11691  .debug_str:00000580 .LASF537
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12619  .debug_str:00002433 .LASF538
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11591  .debug_str:00000282 .LASF539
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11955  .debug_str:00000e25 .LASF540
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11919  .debug_str:00000cee .LASF541
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12281  .debug_str:000018bc .LASF542
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12313  .debug_str:000019c0 .LASF543
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12585  .debug_str:0000230c .LASF544
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11597  .debug_str:000002af .LASF545
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11713  .debug_str:00000627 .LASF548
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11885  .debug_str:00000b6f .LASF546
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12461  .debug_str:00001f36 .LASF547
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11879  .debug_str:00000b37 .LASF550
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12593  .debug_str:0000235c .LASF549
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11735  .debug_str:000006ec .LASF551
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12537  .debug_str:00002182 .LASF560
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12457  .debug_str:00001f08 .LASF552
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12507  .debug_str:000020bd .LASF553
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11959  .debug_str:00000e3f .LASF554
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12111  .debug_str:00001374 .LASF555
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12355  .debug_str:00001b45 .LASF556
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12435  .debug_str:00001e46 .LASF557
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12233  .debug_str:00001740 .LASF558
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12475  .debug_str:00001f8e .LASF559
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11809  .debug_str:00000952 .LASF561
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12209  .debug_str:0000164f .LASF562
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12393  .debug_str:00001ca6 .LASF563
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12043  .debug_str:0000112d .LASF564
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11569  .debug_str:000001a1 .LASF565
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:12359  .debug_str:00001b61 .LASF566
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:11915  .debug_str:00000ccf .LASF567
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:10     .text.set_limit4_state5:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:71     .text.set_limit4_state5:00000077 .LVL1
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:151    .text.HIO_loadsReset:00000044 .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:158    .text.HIO_loadsReset:00000050 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:162    .text.HIO_loadsReset:0000005a .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:180    .text.HIO_ldPosInit:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:219    .text.HIO_ldPosInit:00000066 .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:223    .text.HIO_ldPosInit:0000006f .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:225    .text.HIO_ldPosInit:00000073 .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:227    .text.HIO_ldPosInit:00000077 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:229    .text.HIO_ldPosInit:0000007b .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:231    .text.HIO_ldPosInit:0000007f .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:233    .text.HIO_ldPosInit:00000083 .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:235    .text.HIO_ldPosInit:00000087 .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:241    .text.HIO_ldPosInit:00000095 .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:252    .text.HIO_ldPosInit:000000a1 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:294    .text.HIO_ldPosInit:000000c8 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:302    .text.HIO_ldPosInit:000000da .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:324    .text.HIO_ldPosInit:00000102 .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:334    .text.HIO_ldPosInit:00000114 .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:336    .text.HIO_ldPosInit:00000116 .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:340    .text.HIO_ldPosInit:0000011c .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:342    .text.HIO_ldPosInit:0000011e .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:346    .text.HIO_ldPosInit:00000124 .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:348    .text.HIO_ldPosInit:00000126 .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:353    .text.HIO_ldPosInit:0000012e .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:359    .text.HIO_ldPosInit:00000133 .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:364    .text.HIO_ldPosInit:0000013b .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:366    .text.HIO_ldPosInit:0000013d .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:376    .text.HIO_ldPosInit:00000149 .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:380    .text.HIO_ldPosInit:0000014c .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:395    .text.HIO_ldPosInit:0000015f .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:399    .text.HIO_ldPosInit:00000162 .LVL39
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:248    .text.HIO_ldPosInit:0000009d .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:255    .text.HIO_ldPosInit:000000a3 .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:495    .text.HIO_GIScaleConv:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:497    .text.HIO_GIScaleConv:00000004 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:493    .text.HIO_GIScaleConv:00000000 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:504    .text.HIO_GIScaleConv:0000000d .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:513    .text.HIO_GIScaleConv:0000001b .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:528    .text.HIO_GIScaleConv:0000003a .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:533    .text.HIO_GIScaleConv:0000003e .LVL48
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:502    .text.HIO_GIScaleConv:0000000a .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:561    .text.HIO_GIGetCriterionDigitalTable:00000016 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:563    .text.HIO_GIGetCriterionDigitalTable:00000018 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:578    .text.HIO_GIGetCriterionDigitalTable:00000033 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:585    .text.HIO_GIGetCriterionDigitalTable:00000039 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:603    .text.HIO_trbProcessSmpl:00000002 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:601    .text.HIO_trbProcessSmpl:00000000 .LVL49
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:727    .text.HIO_trbProcessSmpl:000000cd .LVL63
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:731    .text.HIO_trbProcessSmpl:000000d0 .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:735    .text.HIO_trbProcessSmpl:000000d2 .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:617    .text.HIO_trbProcessSmpl:0000001b .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:626    .text.HIO_trbProcessSmpl:0000002b .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:628    .text.HIO_trbProcessSmpl:0000002e .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:671    .text.HIO_trbProcessSmpl:00000075 .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:690    .text.HIO_trbProcessSmpl:0000009a .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:698    .text.HIO_trbProcessSmpl:000000a6 .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:712    .text.HIO_trbProcessSmpl:000000ba .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:716    .text.HIO_trbProcessSmpl:000000bc .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:604    .text.HIO_trbProcessSmpl:00000002 .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:706    .text.HIO_trbProcessSmpl:000000b4 .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:660    .text.HIO_trbProcessSmpl:00000067 .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:664    .text.HIO_trbProcessSmpl:0000006b .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:677    .text.HIO_trbProcessSmpl:0000007c .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:751    .text.HIO_GIConv:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:753    .text.HIO_GIConv:00000005 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:749    .text.HIO_GIConv:00000000 .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:761    .text.HIO_GIConv:0000000e .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:879    .text.HIO_GIConv:000000c3 .LVL82
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:892    .text.HIO_GIConv:000000d4 .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:902    .text.HIO_GIConv:000000e0 .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:909    .text.HIO_GIConv:000000ee .LVL85
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:923    .text.HIO_GIConv:000000f8 .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:759    .text.HIO_GIConv:0000000b .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:800    .text.HIO_GIConv:00000054 .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:818    .text.HIO_GIConv:00000069 .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:756    .text.HIO_GIConv:00000009 .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:786    .text.HIO_GIConv:0000003a .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:838    .text.HIO_GIConv:00000086 .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:852    .text.HIO_GIConv:00000099 .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:914    .text.HIO_GIConv:000000f2 .LVL86
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:919    .text.HIO_GIConv:000000f6 .LVL87
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:953    .text.HIO_trbReadDisable:00000002 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:970    .text.HIO_GetSparklingAidCriterionValue:00000002 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:972    .text.HIO_GetSparklingAidCriterionValue:00000004 .LCFI12
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:968    .text.HIO_GetSparklingAidCriterionValue:00000000 .LVL91
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:983    .text.HIO_GetSparklingAidCriterionValue:00000017 .LVL94
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:981    .text.HIO_GetSparklingAidCriterionValue:00000014 .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1052   .text.HIO_GetSparklingAidCriterionValue:0000007c .LVL104
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1058   .text.HIO_GetSparklingAidCriterionValue:00000082 .LVL106
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1062   .text.HIO_GetSparklingAidCriterionValue:00000085 .LVL107
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:991    .text.HIO_GetSparklingAidCriterionValue:00000025 .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:995    .text.HIO_GetSparklingAidCriterionValue:00000029 .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1033   .text.HIO_GetSparklingAidCriterionValue:00000066 .LVL100
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1047   .text.HIO_GetSparklingAidCriterionValue:00000076 .LVL103
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1002   .text.HIO_GetSparklingAidCriterionValue:00000037 .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1031   .text.HIO_GetSparklingAidCriterionValue:00000062 .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1045   .text.HIO_GetSparklingAidCriterionValue:00000074 .LVL102
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1056   .text.HIO_GetSparklingAidCriterionValue:00000081 .LVL105
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:978    .text.HIO_GetSparklingAidCriterionValue:00000012 .LVL92
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1040   .text.HIO_GetSparklingAidCriterionValue:00000070 .LVL101
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1136   .text.HIO_OverHeat_DrainPump_Control:00000002 .LCFI13
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1357   .text.HIO_BulkAndKillDSP_Mgmt:00000000 .LVL112
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1373   .text.HIO_BulkAndKillDSP_Mgmt:00000022 .LVL113
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1477   .text.HIO_BulkAndKillDSP_Mgmt:000000d2 .LVL119
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1580   .text.HIO_BulkAndKillDSP_Mgmt:00000172 .LVL133
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1402   .text.HIO_BulkAndKillDSP_Mgmt:00000054 .LVL114
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1471   .text.HIO_BulkAndKillDSP_Mgmt:000000c9 .LVL118
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1436   .text.HIO_BulkAndKillDSP_Mgmt:0000008e .LVL115
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1442   .text.HIO_BulkAndKillDSP_Mgmt:0000009a .LVL116
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1446   .text.HIO_BulkAndKillDSP_Mgmt:0000009d .LVL117
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1481   .text.HIO_BulkAndKillDSP_Mgmt:000000d9 .LVL120
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1584   .text.HIO_BulkAndKillDSP_Mgmt:00000176 .LVL134
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1485   .text.HIO_BulkAndKillDSP_Mgmt:000000dd .LVL121
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1488   .text.HIO_BulkAndKillDSP_Mgmt:000000e1 .LVL122
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1571   .text.HIO_BulkAndKillDSP_Mgmt:0000015f .LVL132
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1498   .text.HIO_BulkAndKillDSP_Mgmt:000000ef .LVL123
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1529   .text.HIO_BulkAndKillDSP_Mgmt:00000125 .LVL126
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1536   .text.HIO_BulkAndKillDSP_Mgmt:0000012c .LVL128
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1543   .text.HIO_BulkAndKillDSP_Mgmt:00000132 .LVL130
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1595   .text.HIO_Check_VS_Valid:00000000 .LVL135
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1606   .text.HIO_Check_VS_Valid:0000001a .LVL136
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1638   .text.HIO_inputManagement:00000002 .LCFI14
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1640   .text.HIO_inputManagement:00000004 .LCFI15
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1657   .text.HIO_inputManagement:0000002c .LVL138
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2023   .text.HIO_inputManagement:000002c0 .LVL157
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2025   .text.HIO_inputManagement:000002c2 .LVL158
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2030   .text.HIO_inputManagement:000002cc .LVL159
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2039   .text.HIO_inputManagement:000002d9 .LVL160
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2043   .text.HIO_inputManagement:000002df .LVL161
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2068   .text.HIO_inputManagement:00000309 .LVL162
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1663   .text.HIO_inputManagement:00000033 .LVL139
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1782   .text.HIO_inputManagement:0000010e .LVL142
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1794   .text.HIO_inputManagement:00000124 .LVL143
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1798   .text.HIO_inputManagement:00000127 .LVL144
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1807   .text.HIO_inputManagement:00000132 .LVL145
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1819   .text.HIO_inputManagement:00000149 .LVL146
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1917   .text.HIO_inputManagement:0000020c .LVL150
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1922   .text.HIO_inputManagement:00000211 .LVL151
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1975   .text.HIO_inputManagement:0000026d .LVL152
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1982   .text.HIO_inputManagement:00000273 .LVL153
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1989   .text.HIO_inputManagement:0000027d .LVL154
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1995   .text.HIO_inputManagement:00000289 .LVL155
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2073   .text.HIO_inputManagement:0000030e .LVL163
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2088   .text.HIO_inputManagement:00000330 .LVL164
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2095   .text.HIO_inputManagement:0000033c .LVL165
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2159   .text.HIO_inputManagement:000003b9 .LVL170
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2169   .text.HIO_inputManagement:000003c9 .LVL171
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2175   .text.HIO_inputManagement:000003d2 .LVL172
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2198   .text.HIO_inputManagement:000003f9 .LVL174
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2236   .text.HIO_inputManagement:0000044d .LVL177
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2262   .text.HIO_inputManagement:00000480 .LVL179
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2313   .text.HIO_inputManagement:000004ce .LVL184
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2316   .text.HIO_inputManagement:000004d3 .LVL185
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2321   .text.HIO_inputManagement:000004d8 .LVL186
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2343   .text.HIO_inputManagement:000004fe .LVL189
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2349   .text.HIO_inputManagement:00000506 .LVL190
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2358   .text.HIO_inputManagement:00000513 .LVL191
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2362   .text.HIO_inputManagement:0000051b .LVL192
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2111   .text.HIO_inputManagement:00000351 .LVL167
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:1837   .text.HIO_inputManagement:0000016a .LVL148
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2412   .text.HIO_Check_VS_Stability:0000000d .LVL196
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2419   .text.HIO_Check_VS_Stability:0000001b .LVL197
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2449   .text.HIO_Check_VS_Stability:00000052 .LVL198
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2453   .text.HIO_Check_VS_Stability:00000059 .LVL199
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2460   .text.HIO_Check_VS_Stability:00000067 .LVL200
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2523   .text.HIO_loadsManagement:00000002 .LCFI16
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2525   .text.HIO_loadsManagement:00000004 .LCFI17
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2908   .text.HIO_loadsManagement:0000031b .LVL216
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2918   .text.HIO_loadsManagement:00000334 .LVL217
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3155   .text.HIO_loadsManagement:000004ea .LVL226
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3161   .text.HIO_loadsManagement:000004ee .LVL228
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3157   .text.HIO_loadsManagement:000004ec .LVL227
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3167   .text.HIO_loadsManagement:000004f8 .LVL229
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3174   .text.HIO_loadsManagement:00000500 .LVL231
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2615   .text.HIO_loadsManagement:000000d3 .LVL210
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:2623   .text.HIO_loadsManagement:000000e3 .LVL211
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3122   .text.HIO_loadsManagement:000004a5 .LVL223
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3128   .text.HIO_loadsManagement:000004af .LVL224
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3132   .text.HIO_loadsManagement:000004b9 .LVL225
C:\Users\Andrea\AppData\Local\Temp\ccF1hvIJ.s:3571   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Tab_SFT_MotorWash
_State5
_MachineStatistics
_IncByteWithCheck
_HWC_Flags
_UseExternalInfo
_ExtMotor_DataBuffer
_ExternalGlobalData_0
_UnuseExternalInfo
_Alt_Pos
_LoadsReq_New
_BLDC_PumpReq_New
_LoadEVFltReq_New
_DrainSftReq_New
_Pump_Pos
_Res_Pos
_EV_Pos
_Disp_Pos
_Fan_Pos
_Ozonator_Pos
_Lamp_Pos
_RegDev_Pos
_Tab_OutputData
_BLDC_Pump_InfoBuffer
_LIB_IOM_External_New
_GIValid
_GICriteria
_GICriteriaOld
_NoSalt_Reg
_uP_Regenerate_Data
_Consistency_Current
_PM_Consistency_GetAllCsValues
_BasicLoader
_FlowMeterDivider
_PM_PulseCounter_GetCount
_TurbidityReads
_TurbiditySensorCal
_LIB_ADC_GetAnalogValue
_TabQuery
_BufUIInfo
_SparklingReads
_Surge_Fan_Params
_LoadsReq_Old
_Set_SmallCounter
_SWTC_IsExpired
_SWTC_Stop
_SWTC_Run
_Tab_SFT_MotorDrain
_SWTC_SetMValue
_FltBLDCUnblock
_Interpreter_Data
_Bulk_DSP_Off_Delay
_SWTC_SetSValueAndRun
_BLDC_PumpReq_Old
_Tab_GIData
_FltGICriteria
_FltGITemp
_GITemp
_Salt_Time_Of_Stability
_Salt_Filtro_Stab
_LIB_DIO_GetDigInputVal
_UI_Info_Ctrl
_uPDoorStatus
_Flags_2
_PM_PulseCounter_GetWarning
_FltGIPulseCount
_GIWaterLoaded
_PulseLoaded
_TurbiditySensor
_PM_TurbiditySensor_StartAcq
_PM_TurbiditySensor_AcqIsReady
_FltGITurbidity
_GITurbidity
_Tab_HWCVS_data
_SWTC_SetSValue
_SWTC_IsStopped
_Virtual_Sensor_Value
_uP_Load_Data
_uPLoad_setting_data
_dirty_foam_Data
_dirty_foam_setting_data
_Tab_SFT_EV
_IncWordWithCheck
_LIB_IOM_GIOM_SetLoad
