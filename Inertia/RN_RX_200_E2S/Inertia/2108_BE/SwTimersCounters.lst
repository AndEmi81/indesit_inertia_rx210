   1                             		.file	"SwTimersCounters.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.SWTC_PrescalerManager,"ax",@progbits
   6                             	_SWTC_PrescalerManager:
   7                             	.LFB15:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters/SwTimersCounter
   1:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /*
   2:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Copyright (c) 2004-2005, Indesit Company, I.D.D..
   3:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
   5:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
   6:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****  * \page pageTimers
   7:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****  *	\ingroup	PM_SwTimersCounters
   8:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****  */
   9:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  10:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
  11:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n
  12:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \par		SW Timers Counters
  13:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n			Implementation of software timers and counters that can be used to execute a 
  14:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** user-defined action after a delay or for time measurement.
  15:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****  
  16:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n
  17:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \file		SwTimersCounters.c 
  18:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \ingroup	PM_SwTimersCounters
  19:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		28-jun-2010 
  20:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	01.00.00 
  21:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author		Roberto Fioravanti 
  22:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n
  23:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n
  24:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \par\b	History:
  25:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n 
  26:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n 		00.00.70
  27:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n		5/10/2010 
  28:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n		Roberto Fioravanti 
  29:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n		changes 
  30:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n 		- fixed return of SWTC_IsStopped
  31:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n 		00.00.50 
  32:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n		28/06/2010 
  33:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n		Roberto Fioravanti 
  34:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n		changes 
  35:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n 		- creation
  36:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n
  37:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n
  38:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \n etc.
  39:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
  40:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  41:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  42:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #define MODULE_BODY_SWTIMERS
  43:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ******** */
  44:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Includes */
  45:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ******** */
  46:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #include "SwTimersCounters.h"
  47:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #include "LIB_Error.h"
  48:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  49:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ****************** */
  50:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Defines and Macros */
  51:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ****************** */
  52:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  53:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  54:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* *************************** */
  55:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Typedef, Structs and Unions */
  56:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* *************************** */
  57:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  58:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** typedef struct SWTC_DataType_s{
  59:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_InternalCounterType*	pInternalCountersTable;
  60:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	const SWTC_PrescalerTableType*	pPrescalersTable;
  61:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	uint8_t						PrescalersNum;
  62:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* const* pCountersCfgTable;
  63:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	void* 						const* pCountersTable;
  64:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	uint8_t						CountersNum;
  65:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
  66:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** SWTC_DataType;
  67:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ********* */
  68:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Variables */
  69:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ********* */
  70:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  71:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /*
  72:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** extern const SWTC_PrescalerTableType SWTC_PrescalerTable[SWTC_PRESCALERS_NUM];
  73:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** extern SWTC_CounterConfigurationType* const SWTC_CounterConfigurationTable[SWTC_COUNTERS_NUM];
  74:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** extern void* const SWTC_CountersTable[SWTC_COUNTERS_NUM];
  75:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
  76:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Global */
  77:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  78:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Static */
  79:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /*static SWTC_InternalCounterType SWTC_InternalCounter[SWTC_PRESCALERS_NUM];*/
  80:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** static SWTC_DataType SWTC_Data;
  81:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ******************* */
  82:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Functions Prototype */
  83:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* ******************* */
  84:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  85:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Exported function */
  86:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  87:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Local Function */
  88:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** static void SWTC_PrescalerManager ( SWTC_PrescalerType ps );
  89:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  90:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* *************** */
  91:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Function Bodies */
  92:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* *************** */
  93:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  94:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Exported function */
  95:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  96:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  97:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
  98:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
  99:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Timercounters manager initialization method.
 100:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 101:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 102:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	none
 103:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****  
 104:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti
 105:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		28-06-2010
 106:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	0.0.1
 107:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 108:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 109:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 110:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 111:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_InitManager(void)
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.PrescalersNum=0;
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pPrescalersTable=NULL;
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pInternalCountersTable=NULL;
 116:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.CountersNum=0;
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersCfgTable=NULL;
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersTable=NULL;
 120:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 121:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 122:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 123:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_InitTables(	const SWTC_PrescalerTableType* pPrescalers,
 124:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				SWTC_InternalCounterType* pIntCountersTable,
 125:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				uint8_t prescalersNum,
 126:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				SWTC_CounterConfigurationType* const* pCountersCfgTable,
 127:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				void* 						const* pCountersTable,
 128:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				uint8_t						CountersNum
 129:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				)
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 131:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	uint8_t i = 0;
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.PrescalersNum=prescalersNum;
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pPrescalersTable=pPrescalers;
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pInternalCountersTable=pIntCountersTable;
 135:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for (i = 0; i < SWTC_Data.PrescalersNum; i++)
 137:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	{
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		SWTC_Data.pInternalCountersTable[i]=0;
 139:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	}
 140:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.CountersNum=CountersNum;
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersCfgTable=pCountersCfgTable;
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersTable=pCountersTable;
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 145:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 146:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 147:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Timerscounters manager to be called periodically.
 148:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** The period determines the foundamental time base.
 149:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	none
 150:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****  
 151:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti
 152:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		28-06-2010
 153:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	0.0.1
 154:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 155:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 156:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 157:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 158:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_Manager(void)
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 160:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_PrescalerType i;
 161:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pInternalCountersTable[0]++;
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_PrescalerManager (0);
 164:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for (i = 0; i < SWTC_Data.PrescalersNum; ++i)
 166:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	{
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(SWTC_Data.pInternalCountersTable[i] >= SWTC_Data.pPrescalersTable[i])
 168:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		{
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			SWTC_PrescalerManager ((SWTC_PrescalerType)(i+1));
 170:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			SWTC_Data.pInternalCountersTable[i]=0;
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			if(i < (SWTC_Data.PrescalersNum-1))
 173:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			{
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				SWTC_Data.pInternalCountersTable[i+1]++;
 175:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			}
 176:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		}
 177:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	}
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 179:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 180:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 181:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 182:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 183:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Sets the a new value for the 'small' (...SetSValue),
 184:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****  'medium' (...SetMValue) or 'large' (...SetLValue) timercounter.
 185:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** TimerCounter state (enable or not) remains unchanged, that means timercounter continues counting it
 186:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 187:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier (zero-based index of the timercounter table)
 188:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		value new value applied to the timercounter.The range depends on size 
 189:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** of the counter timercounter:
 190:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 1<= value <= 2^(n)-1, where n is the number of the bit of the counter. See \ref SWTC_SCounterValue,
 191:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 192:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 193:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	void
 194:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 195:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 196:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 197:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 198:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 199:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****    
 200:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 201:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 202:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 203:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_SetSValue(SWTC_CountersType counterID, SWTC_SCounterValue value)
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 205:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	uint8_t enable;
 206:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 207:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_SCounterVariableType* pCnt=0;
 208:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 210:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= (SWTC_CounterConfigurationType) (~SWTC_CFG_ENABLE_MSK);
 214:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_SCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_SCounterValue) (value - 1);
 217:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= enable;
 219:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 221:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 222:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 223:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_SetMValue(SWTC_CountersType counterID, SWTC_MCounterValue value)
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 225:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	uint8_t enable;
 226:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 227:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_MCounterVariableType* pCnt=0;
 228:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 229:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= (SWTC_CounterConfigurationType) (~SWTC_CFG_ENABLE_MSK);
 234:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_MCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_MCounterValue) (value - 1);
 237:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= enable;
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 240:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #if defined(SWTC_L_ENABLED)
 241:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 242:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention Available only if SWTC_L_ENABLED is defined in header configuration file
 243:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 244:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_SetLValue(SWTC_CountersType counterID, SWTC_LCounterValue value)
 245:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 246:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	uint8_t enable;
 247:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_COUNTERS_NUM), PLT_ERROR_SWTC_INVALID_COUNTER);
 248:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 249:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (*SWTC_CounterConfigurationTable[counterID] & SWTC_CFG_ENABLE_MSK);
 250:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*SWTC_CounterConfigurationTable[counterID] &= ~(SWTC_CFG_ENABLE_MSK);
 251:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 252:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	((SWTC_LCounterVariableType*)SWTC_CountersTable[counterID])->counter = value - 1;
 253:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 254:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable= *SWTC_CounterConfigurationTable[counterID] |= enable;
 255:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 256:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 257:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #endif
 258:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 259:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 260:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 261:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 262:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Sets the a new value for the prescaler of the timercounter.
 263:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** TimerCounter state (enable or not) remains unchanged.
 264:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 265:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 266:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		ps prescaler identifier.	
 267:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 268:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	void
 269:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 270:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 271:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 272:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 273:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 274:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****    
 275:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 276:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 277:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 278:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_SetPrescaler(SWTC_CountersType counterID, SWTC_PrescalerType ps)
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 280:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	uint8_t enable;
 281:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 282:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(!SWTC_CFG_PS_ASSERT(ps), PLT_ERROR_SWTC_INVALID_PS);
 284:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 286:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 289:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= (SWTC_CounterConfigurationType) (~SWTC_CFG_ENABLE_MSK);
 290:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 291:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= ~(SWTC_CFG_PS_MSK);
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= SWTC_CFG_PS(ps);
 293:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= enable;
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 296:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 297:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 298:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 299:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Starts timercounter.
 300:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 301:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 302:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 303:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	void
 304:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 305:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 306:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 307:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 308:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 309:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention
 310:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \par \b 1:
 311:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Use this method to restart a timer counter which was stopped by calling SWTC_Stop().
 312:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** In this case timercounter will continue with the remaining time value preserved by stopping the tim
 313:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 314:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \par \b 2:
 315:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** this method has any effect on:
 316:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** - 	running timercounters
 317:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** -	not running timercounters because expired. To restart those timercounters use SWTC_SetXValue() me
 318:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 319:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****     
 320:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 321:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 322:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 323:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void  SWTC_Run(SWTC_CountersType counterID)
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 325:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 327:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 329:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= SWTC_CFG_ENABLE_MSK;
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 332:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 333:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 334:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Stops timercounter.
 335:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 336:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 337:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 338:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	void
 339:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 340:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 341:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 342:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 343:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 344:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 345:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention
 346:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \par \b 1:
 347:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** The current value of the timercounter is kept until SWTC_RunTimerCounter() or SWTC_SetSValue(), 
 348:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** SWTC_SetMValue() or SWTC_SetLValue() or SWTC_SetSValueAndRun(), SWTC_SetMValueAndRun(), SWTC_SetLVa
 349:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****     
 350:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 351:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 352:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 353:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_Stop(SWTC_CountersType counterID)
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 355:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= ~(SWTC_CFG_ENABLE_MSK);
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 360:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 361:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 362:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 363:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****    Sets a new value and then starts timercounter.
 364:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****    
 365:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****    \param  [in]		counterID timercounter identifier
 366:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		value new value applied to the timercounter.The range depends on size 
 367:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** of the counter timercounter:
 368:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 1<= value <= 2^(n)-1, where n is the number of the bit of the counter. See \ref SWTC_SCounterValue,
 369:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 370:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	void
 371:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 372:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 373:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 374:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 375:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 376:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention
 377:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \par \b 1:
 378:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Use this method to restart a timer counter which was stopped by calling SWTC_Stop().
 379:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** In this case timercounter will continue with the remaining time value preserved by stopping the tim
 380:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 381:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \par \b 2:
 382:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** this method has any effect on:
 383:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** - 	running timercounters
 384:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** -	not running timercounters because expired. To restart those timercounters use SWTC_SetXValue(). 
 385:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 386:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****     
 387:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 388:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 389:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****     
 390:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 391:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 392:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 393:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 394:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 395:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_SetSValueAndRun(SWTC_CountersType counterID, SWTC_SCounterValue value)
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 397:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 398:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_SCounterVariableType* pCnt=0;
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 400:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 402:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= ~(SWTC_CFG_ENABLE_MSK);
 404:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_SCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_SCounterValue) (value - 1);
 407:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= (SWTC_CFG_ENABLE_MSK);
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 410:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 411:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 412:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 413:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 414:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_SetMValueAndRun(SWTC_CountersType counterID, SWTC_MCounterValue value)
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 416:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 417:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_MCounterVariableType* pCnt=0;
 418:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 420:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 421:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 423:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= ~(SWTC_CFG_ENABLE_MSK);
 425:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_MCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_MCounterValue) (value - 1);
 428:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= (SWTC_CFG_ENABLE_MSK);
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 431:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 432:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #if defined(SWTC_L_ENABLED)
 433:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 434:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention Available only if SWTC_L_ENABLED is defined in header configuration file
 435:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 436:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** void SWTC_SetLValueAndRun(SWTC_CountersType counterID, SWTC_LCounterValue value)
 437:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 438:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PL_ERROR_FATAL(counterID >= (SWTC_COUNTERS_NUM), PLT_ERROR_SWTC_INVALID_COUNTER);
 439:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 440:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*SWTC_CounterConfigurationTable[counterID] &= ~(SWTC_CFG_ENABLE_MSK);
 441:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 442:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	((SWTC_LCounterVariableType*)SWTC_CountersTable[counterID])->counter = value - 1;
 443:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 444:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*SWTC_CounterConfigurationTable[counterID] |= (SWTC_CFG_ENABLE_MSK);
 445:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 446:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #endif
 447:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 448:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 449:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 450:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 451:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 452:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Returns if the timercounter is expired.
 453:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 454:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 455:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 456:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	bool_t
 457:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 458:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		TRUE (returned also for not invalid timercouner IDs)
 459:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		FALSE	not expired.		 	 
 460:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 461:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 462:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 463:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 464:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 465:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 466:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 467:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention
 468:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** A timercounter not expired can be running or not.
 469:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****       
 470:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 471:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 472:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 473:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** bool_t SWTC_IsExpired(SWTC_CountersType counterID)
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 475:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 476:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	void* pCnt=0;
 477:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 479:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 482:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 484:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	{
 485:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	#if defined(SWTC_L_ENABLED)	
 486:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		case SWTC_CFG_SIZE_L:
 487:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			return (bool_t)(((SWTC_LCounterVariableType*)pCnt)->counter < 0);
 488:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			break;
 489:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	#endif
 490:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		case SWTC_CFG_SIZE_S:
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			return (bool_t)(((SWTC_SCounterVariableType*)pCnt)->counter < 0);
 492:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			/*lint -e{527} Warning 527:*/
 493:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			break;
 494:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 495:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		case SWTC_CFG_SIZE_M:
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			return (bool_t)(((SWTC_MCounterVariableType*)pCnt)->counter < 0);
 497:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			/*lint -e{527} Warning 527:*/
 498:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			break;
 499:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 500:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	}
 501:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	return FALSE;	
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 504:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 505:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 506:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 507:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Returns if the timercounter is stopped or enabled.
 508:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 509:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 510:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 511:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	bool_t
 512:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 513:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		TRUE	stopped
 514:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		FALSE	enabled (returned also for not invalid timercouner IDs).
 515:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 516:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 517:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 518:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 519:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 520:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention
 521:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** A timercounter not expired can be running or not.
 522:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****       
 523:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 524:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 525:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 526:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** bool_t SWTC_IsStopped(SWTC_CountersType counterID)
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 528:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 531:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	return (bool_t)(!(*pcfg & SWTC_CFG_ENABLE_MSK));
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 534:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 535:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 536:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 537:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 538:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Retrigger an expired timercounter.
 539:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** timercounter starts counting form it maximum value.
 540:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 541:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 542:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 543:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	bool_t
 544:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 545:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		TRUE (returned also for not invalid timercouner IDs)
 546:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		FALSE	not expired.		 	 
 547:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 548:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 549:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 550:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 551:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 552:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 553:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 554:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \attention
 555:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** This method has no effect on not expired timercounters. 
 556:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****       
 557:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 558:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 559:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			
 560:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			
 561:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 562:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** bool_t SWTC_Retrigger(SWTC_CountersType counterID)
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 564:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 565:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	bool_t pending=FALSE;
 566:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	void* pCnt=0;
 567:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 569:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 572:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 574:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	{
 575:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #if defined(SWTC_L_ENABLED)	
 576:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_L:
 577:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pending = (bool_t)(((SWTC_LCounterVariableType*)SWTC_CountersTable[counterID])->counter < 0);
 578:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(pending)
 579:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		((SWTC_LCounterVariableType*)pCnt)->counter += 0x7FFFFFFF;
 580:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;
 581:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #endif
 582:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_S:		
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pending = (bool_t)(((SWTC_SCounterVariableType*)pCnt)->counter < 0);
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(pending)
 585:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		{
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			((SWTC_SCounterVariableType*)pCnt)->counter += 0x7F;
 587:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		}
 588:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		else
 589:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		{
 590:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		}
 591:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;
 592:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_M:
 593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pending = (bool_t)(((SWTC_MCounterVariableType*)pCnt)->counter < 0);
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(pending)
 595:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		{
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			((SWTC_MCounterVariableType*)pCnt)->counter += 0x7FFF;
 597:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		}
 598:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		else
 599:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		{
 600:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		}
 601:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;	
 602:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	}
 603:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 604:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	return pending;
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 606:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 607:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 608:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Returns the remaining time before expire.
 609:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Value is in prescaler unit.
 610:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 611:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 612:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 613:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	SWTC_TimeType
 614:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 615:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		value ( 0 is returned if timercouner ID is invalid)
 616:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 617:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 618:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 619:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 620:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 621:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****       
 622:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 623:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 624:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 625:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** SWTC_TimeType SWTC_GetRemainingTime(SWTC_CountersType counterID)
 626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 627:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_TimeType time=0;
 629:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	void* pCnt=0;
 630:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 632:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 635:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 637:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	{
 638:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #if defined(SWTC_L_ENABLED)	
 639:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_L:
 640:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = ((SWTC_LCounterVariableType*)pCnt)->counter + 1;
 641:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;
 642:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #endif
 643:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_S:
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = ((SWTC_SCounterVariableType*)pCnt)->counter + 1;
 645:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;
 646:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		
 647:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_M:
 648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = ((SWTC_MCounterVariableType*)pCnt)->counter + 1;
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;	
 650:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	}
 651:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 652:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	return time;
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 654:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 655:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /**
 656:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** Returns the elapsed time is in prescaler unit.
 657:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** The returned value assumes that the TimerCounter was initialized at its maximum value.
 658:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 659:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** General formula to get the elapsed time is:
 660:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** InitVal - TimeCounterMaxVal + SWTC_GetElapsedTime()
 661:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 662:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** where TimeCounterMaxVal depends on the size of the TimerCounter.
 663:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 664:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 665:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \param  [in]		counterID timercounter identifier
 666:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 667:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \return 	SWTC_TimeType
 668:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 669:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \retval		value ( 0 is returned if timercouner ID is invalid)
 670:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 671:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \author 	Roberto Fioravanti 
 672:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \date		Jun 26, 2010 
 673:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \version	1.0.0
 674:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 675:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c ****       
 676:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** \note		\par \b Note 1:
 677:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			documentation by Roberto Fioravanti
 678:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** */
 679:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** SWTC_TimeType SWTC_GetElapsedTime(SWTC_CountersType counterID)
 680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 681:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 682:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_TimeType time=0;
 684:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	void* pCnt=0;
 685:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 687:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 690:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 692:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	{
 693:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #if defined(SWTC_L_ENABLED)	
 694:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_L:
 695:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = 0x7FFFFFFF -1 - ((SWTC_LCounterVariableType*)pCnt)->counter;
 696:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;
 697:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #endif
 698:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_S:
 699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = (0x7F -1) - ((SWTC_SCounterVariableType*)pCnt)->counter;
 700:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;
 701:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		
 702:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	case SWTC_CFG_SIZE_M:
 703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = (0x7FFF -1) - ((SWTC_MCounterVariableType*)pCnt)->counter;
 704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;	
 705:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	}
 706:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 707:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	return time;
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 709:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 710:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 711:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** /* Local Function */
 712:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** static void SWTC_PrescalerManager ( SWTC_PrescalerType ps )
 713:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
   9                             		.loc 1 713 0
  10                             	.LVL0:
  11 0000 7E A7                   		push.l	r7
  12                             	.LCFI0:
  13                             	.LVL1:
 714:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_PrescalerType i;
 715:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_CounterConfigurationType* pcfg=0;
 716:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	void* pCnt=0;
 717:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for ( i = 0; i < (SWTC_Data.CountersNum); i++ )
  14                             		.loc 1 718 0
  15 0002 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 719:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	{
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pcfg=SWTC_Data.pCountersCfgTable[i];
 721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pCnt = (void*)(SWTC_Data.pCountersTable[i]);
 722:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if ( ( *pcfg & (SWTC_CFG_ENABLE_MSK) )
 724:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		&& ( (*pcfg & SWTC_CFG_PS_MSK) == SWTC_CFG_PS(ps) )
  16                             		.loc 1 724 0
  17 0008 64 F1                   		and #15, r1
  18                             	.LVL2:
  19 000a 6C 21                   		shll	#2, r1
  20 000c ED E5 03                		mov.L	12[r14], r5
  21 000f ED E2 04                		mov.L	16[r14], r2
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for ( i = 0; i < (SWTC_Data.CountersNum); i++ )
  22                             		.loc 1 718 0
  23 0012 66 04                   		mov	#0, r4
  24 0014 59 EF 14                		movu.B	20[r14], r15
  25 0017 2E 41                   		bra	.L2
  26                             	.LVL3:
  27                             	.L6:
 720:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pcfg=SWTC_Data.pCountersCfgTable[i];
  28                             		.loc 1 720 0
  29 0019 FD 2A 57                		mov.L	[r5+], r7
  30                             	.LVL4:
 721:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pCnt = (void*)(SWTC_Data.pCountersTable[i]);
  31                             		.loc 1 721 0
  32 001c FD 2A 2E                		mov.L	[r2+], r14
  33                             	.LVL5:
 723:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if ( ( *pcfg & (SWTC_CFG_ENABLE_MSK) )
  34                             		.loc 1 723 0
  35 001f CC 73                   		mov.B	[r7], r3
  36 0021 CF 37                   		mov.B	r3, r7
  37                             	.LVL6:
  38 0023 61 07                   		cmp	#0, r7
  39 0025 28 31                   		bge	.L3
  40                             		.loc 1 724 0
  41 0027 EF 37                   		mov.L	r3, r7
  42 0029 75 27 3C                		and #60, r7
  43 002c 47 17                   		cmp	r1, r7
  44 002e 21 28                   		bne	.L3
 725:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			)
 726:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		{
 727:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				/* Down Counter */
 728:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			switch(*pcfg & SWTC_CFG_SIZE_MSK)
  45                             		.loc 1 728 0
  46 0030 64 33                   		and #3, r3
  47 0032 61 13                   		cmp	#1, r3
  48 0034 17                      		beq	.L4
  49 0035 61 23                   		cmp	#2, r3
  50 0037 21 1F                   		bne	.L3
  51 0039 2E 10                   		bra	.L5
  52                             	.L4:
 729:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			{
 730:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #if defined(SWTC_L_ENABLED)        	
 731:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			case SWTC_CFG_SIZE_L:
 732:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 					if(((SWTC_LCounterVariableType*)pCnt)->counter >= 0)
 733:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 					{
 734:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 						((SWTC_LCounterVariableType*)pCnt)->counter --;
 735:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 					}
 736:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 					break;
 737:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** #endif
 738:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			case SWTC_CFG_SIZE_S:
 739:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				if(((SWTC_SCounterVariableType*)pCnt)->counter >= 0)
  53                             		.loc 1 739 0
  54 003b CC E3                   		mov.B	[r14], r3
  55 003d CF 37                   		mov.B	r3, r7
  56 003f 61 07                   		cmp	#0, r7
  57 0041 29 15                   		blt	.L3
 740:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				{
 741:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 					((SWTC_SCounterVariableType*)pCnt)->counter --;
  58                             		.loc 1 741 0
  59 0043 60 13                   		sub	#1, r3
  60 0045 C3 E3                   		mov.B	r3, [r14]
  61 0047 2E 0F                   		bra	.L3
  62                             	.L5:
 742:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				}
 743:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				break;
 744:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			case SWTC_CFG_SIZE_M:
 745:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				if(((SWTC_MCounterVariableType*)pCnt)->counter >= 0)
  63                             		.loc 1 745 0
  64 0049 DC E3                   		mov.W	[r14], r3
  65 004b DF 37                   		mov.W	r3, r7
  66 004d 61 07                   		cmp	#0, r7
  67 004f 29 07                   		blt	.L3
 746:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 					{
 747:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 						((SWTC_MCounterVariableType*)pCnt)->counter --;
  68                             		.loc 1 747 0
  69 0051 60 13                   		sub	#1, r3
  70 0053 D3 E3                   		mov.W	r3, [r14]
  71 0055 03                      		.balign 2,3,1
  72                             	.L3:
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for ( i = 0; i < (SWTC_Data.CountersNum); i++ )
  73                             		.loc 1 718 0
  74 0056 62 14                   		add	#1, r4
  75                             	.LVL7:
  76                             		.balign 2,3,1
  77                             	.L2:
 718:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for ( i = 0; i < (SWTC_Data.CountersNum); i++ )
  78                             		.loc 1 718 0 is_stmt 0 discriminator 1
  79 0058 5B 4E                   		movu.B	r4, r14
  80 005a 47 FE                   		cmp	r15, r14
  81 005c 21 BD                   		bne	.L6
 748:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 					}
 749:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				break;
 750:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	
 751:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			}        	
 752:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		}
 753:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	}
 754:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
  82                             		.loc 1 754 0 is_stmt 1
  83 005e 3F 77 01                		rtsd	#4, r7-r7
  84                             	.LFE15:
  86 0061 03                      		.section	.text.SWTC_InitManager,"ax",@progbits
  87                             		.global	_SWTC_InitManager
  89                             	_SWTC_InitManager:
  90                             	.LFB0:
 112:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
  91                             		.loc 1 112 0
 113:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.PrescalersNum=0;
  92                             		.loc 1 113 0
  93 0000 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
  94 0006 F9 E4 08 00             		mov.B	#0, 8[r14]
 114:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pPrescalersTable=NULL;
  95                             		.loc 1 114 0
  96 000a F9 E6 01 00             		mov.L	#0, 4[r14]
 115:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pInternalCountersTable=NULL;
  97                             		.loc 1 115 0
  98 000e F8 E6 00                		mov.L	#0, [r14]
 117:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.CountersNum=0;
  99                             		.loc 1 117 0
 100 0011 F9 E4 14 00             		mov.B	#0, 20[r14]
 118:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersCfgTable=NULL;
 101                             		.loc 1 118 0
 102 0015 F9 E6 03 00             		mov.L	#0, 12[r14]
 119:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersTable=NULL;
 103                             		.loc 1 119 0
 104 0019 F9 E6 04 00             		mov.L	#0, 16[r14]
 105 001d 02                      		rts
 106                             	.LFE0:
 108                             		.section	.text.SWTC_InitTables,"ax",@progbits
 109                             		.global	_SWTC_InitTables
 111                             	_SWTC_InitTables:
 112                             	.LFB1:
 130:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 113                             		.loc 1 130 0
 114                             	.LVL8:
 115 0000 6E 7A                   		pushm	r7-r10
 116                             	.LCFI1:
 117 0002 60 80                   		sub	#8, r0
 118                             	.LCFI2:
 119 0004 75 47 1C                		mov.L	#28, r7
 120 0007 4B 07                   		add	r0, r7
 121 0009 EC 75                   		mov.L	[r7], r5
 122 000b 89 77                   		mov.B	4[r7], r7
 123                             	.LVL9:
 132:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.PrescalersNum=prescalersNum;
 124                             		.loc 1 132 0
 125 000d FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 126 0013 C7 E3 08                		mov.B	r3, 8[r14]
 133:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pPrescalersTable=pPrescalers;
 127                             		.loc 1 133 0
 128 0016 E7 E1 01                		mov.L	r1, 4[r14]
 134:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pInternalCountersTable=pIntCountersTable;
 129                             		.loc 1 134 0
 130 0019 E3 E2                   		mov.L	r2, [r14]
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for (i = 0; i < SWTC_Data.PrescalersNum; i++)
 131                             		.loc 1 136 0
 132 001b EF 2E                   		mov.L	r2, r14
 133 001d 5B 33                   		movu.B	r3, r3
 134                             	.LVL10:
 135 001f 0F                      		bra	.L10
 136                             	.LVL11:
 137                             	.L11:
 138:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		SWTC_Data.pInternalCountersTable[i]=0;
 138                             		.loc 1 138 0 discriminator 2
 139 0020 66 0A                   		mov	#0, r10
 140 0022 FD 20 EA                		mov.B	r10, [r14+]
 141 0025 03                      		.balign 2,3,2
 142                             	.L10:
 136:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for (i = 0; i < SWTC_Data.PrescalersNum; i++)
 143                             		.loc 1 136 0 discriminator 1
 144 0026 FF 01 2E                		sub	r2, r14, r1
 145 0029 5B 11                   		movu.B	r1, r1
 146 002b 47 13                   		cmp	r1, r3
 147 002d 24 F3                   		bgtu	.L11
 141:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.CountersNum=CountersNum;
 148                             		.loc 1 141 0
 149 002f FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 150 0035 C7 E7 14                		mov.B	r7, 20[r14]
 142:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersCfgTable=pCountersCfgTable;
 151                             		.loc 1 142 0
 152 0038 E7 E4 03                		mov.L	r4, 12[r14]
 143:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pCountersTable=pCountersTable;
 153                             		.loc 1 143 0
 154 003b E7 E5 04                		mov.L	r5, 16[r14]
 144:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 155                             		.loc 1 144 0
 156 003e 3F 7A 06                		rtsd	#24, r7-r10
 157                             	.LFE1:
 159 0041 03                      		.section	.text.SWTC_Manager,"ax",@progbits
 160                             		.global	_SWTC_Manager
 162                             	_SWTC_Manager:
 163                             	.LFB2:
 159:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 164                             		.loc 1 159 0
 165 0000 6E 7D                   		pushm	r7-r13
 166                             	.LCFI3:
 162:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_Data.pInternalCountersTable[0]++;
 167                             		.loc 1 162 0
 168 0002 FB D2 00 00 00 00       		mov.L	#_SWTC_Data, r13
 169 0008 EC DB                   		mov.L	[r13], r11
 170 000a CC B7                   		mov.B	[r11], r7
 171 000c 62 17                   		add	#1, r7
 172 000e C3 B7                   		mov.B	r7, [r11]
 163:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_PrescalerManager (0);
 173                             		.loc 1 163 0
 174 0010 66 01                   		mov	#0, r1
 175 0012 05 00 00 00             		bsr	_SWTC_PrescalerManager
 176                             	.LVL12:
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for (i = 0; i < SWTC_Data.PrescalersNum; ++i)
 177                             		.loc 1 165 0
 178 0016 66 0A                   		mov	#0, r10
 179 0018 2E 2E                   		bra	.L14
 180                             	.LVL13:
 181                             	.L18:
 167:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(SWTC_Data.pInternalCountersTable[i] >= SWTC_Data.pPrescalersTable[i])
 182                             		.loc 1 167 0
 183 001a FF 29 7B                		add	r7, r11, r9
 184 001d ED DE 01                		mov.L	4[r13], r14
 185 0020 58 94                   		movu.B	[r9], r4
 186 0022 FE C7 EE                		movu.B	[r7,r14], r14
 187 0025 47 E4                   		cmp	r14, r4
 188 0027 23 1D                   		bltu	.L16
 169:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			SWTC_PrescalerManager ((SWTC_PrescalerType)(i+1));
 189                             		.loc 1 169 0
 190 0029 71 A1 01                		add	#1, r10, r1
 191 002c 05 00 00 00             		bsr	_SWTC_PrescalerManager
 192                             	.LVL14:
 171:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			SWTC_Data.pInternalCountersTable[i]=0;
 193                             		.loc 1 171 0
 194 0030 F8 94 00                		mov.B	#0, [r9]
 172:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			if(i < (SWTC_Data.PrescalersNum-1))
 195                             		.loc 1 172 0
 196 0033 60 1C                   		sub	#1, r12
 197 0035 47 C7                   		cmp	r12, r7
 198 0037 28 0D                   		bge	.L16
 174:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 				SWTC_Data.pInternalCountersTable[i+1]++;
 199                             		.loc 1 174 0
 200 0039 62 17                   		add	#1, r7
 201 003b 4B B7                   		add	r11, r7
 202 003d CC 7C                   		mov.B	[r7], r12
 203 003f 62 1C                   		add	#1, r12
 204 0041 C3 7C                   		mov.B	r12, [r7]
 205 0043 03                      		.balign 2,3,1
 206                             	.L16:
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for (i = 0; i < SWTC_Data.PrescalersNum; ++i)
 207                             		.loc 1 165 0
 208 0044 62 1A                   		add	#1, r10
 209                             	.LVL15:
 210                             		.balign 2,3,1
 211                             	.L14:
 165:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	for (i = 0; i < SWTC_Data.PrescalersNum; ++i)
 212                             		.loc 1 165 0 is_stmt 0 discriminator 1
 213 0046 5B A7                   		movu.B	r10, r7
 214 0048 59 DC 08                		movu.B	8[r13], r12
 215 004b 47 C7                   		cmp	r12, r7
 216 004d 23 CD                   		bltu	.L18
 178:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 217                             		.loc 1 178 0 is_stmt 1
 218 004f 3F 7D 07                		rtsd	#28, r7-r13
 219                             	.LFE2:
 221                             		.section	.text.SWTC_SetSValue,"ax",@progbits
 222                             		.global	_SWTC_SetSValue
 224                             	_SWTC_SetSValue:
 225                             	.LFB3:
 204:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 226                             		.loc 1 204 0
 227                             	.LVL16:
 228 0000 6E 7A                   		pushm	r7-r10
 229                             	.LCFI4:
 230 0002 CF 2A                   		mov.B	r2, r10
 231                             	.LVL17:
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 232                             		.loc 1 209 0
 233 0004 5B 17                   		movu.B	r1, r7
 234 0006 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 235 000c 45 E7 14                		cmp	20[r14].UB, r7
 236 000f 23 09                   		bltu	.L21
 209:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 237                             		.loc 1 209 0 is_stmt 0 discriminator 1
 238 0011 75 41 42                		mov.L	#0x42, r1
 239                             	.LVL18:
 240 0014 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 241                             	.LVL19:
 242                             		.balign 2,3,5
 243                             	.L21:
 211:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 244                             		.loc 1 211 0 is_stmt 1
 245 0018 FB 32 00 00 00 00       		mov.L	#_SWTC_Data, r3
 246 001e ED 3E 03                		mov.L	12[r3], r14
 247 0021 FE 67 EE                		mov.L	[r7,r14], r14
 248                             	.LVL20:
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 249                             		.loc 1 212 0
 250 0024 CC E4                   		mov.B	[r14], r4
 251                             	.LVL21:
 213:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= (SWTC_CounterConfigurationType) (~SWTC_CFG_ENABLE_MSK);
 252                             		.loc 1 213 0
 253 0026 EF 42                   		mov.L	r4, r2
 254 0028 75 22 7F                		and #0x7f, r2
 255 002b C3 E2                   		mov.B	r2, [r14]
 215:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_SCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 256                             		.loc 1 215 0
 257 002d 6C 27                   		shll	#2, r7
 258                             	.LVL22:
 259 002f 06 89 37 04             		add	16[r3].L, r7
 260 0033 EC 77                   		mov.L	[r7], r7
 261                             	.LVL23:
 216:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_SCounterValue) (value - 1);
 262                             		.loc 1 216 0
 263 0035 60 1A                   		sub	#1, r10
 264                             	.LVL24:
 265 0037 C3 7A                   		mov.B	r10, [r7]
 212:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 266                             		.loc 1 212 0
 267 0039 75 24 80                		and #0xffffff80, r4
 268                             	.LVL25:
 218:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= enable;
 269                             		.loc 1 218 0
 270 003c CC E7                   		mov.B	[r14], r7
 271                             	.LVL26:
 272 003e 57 74                   		or	r7, r4
 273 0040 C3 E4                   		mov.B	r4, [r14]
 220:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 274                             		.loc 1 220 0
 275 0042 3F 7A 04                		rtsd	#16, r7-r10
 276                             	.LFE3:
 278 0045 03                      		.section	.text.SWTC_SetMValue,"ax",@progbits
 279                             		.global	_SWTC_SetMValue
 281                             	_SWTC_SetMValue:
 282                             	.LFB4:
 224:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 283                             		.loc 1 224 0
 284                             	.LVL27:
 285 0000 6E 7A                   		pushm	r7-r10
 286                             	.LCFI5:
 287 0002 DF 2A                   		mov.W	r2, r10
 288                             	.LVL28:
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 289                             		.loc 1 230 0
 290 0004 5B 17                   		movu.B	r1, r7
 291 0006 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 292 000c 45 E7 14                		cmp	20[r14].UB, r7
 293 000f 23 09                   		bltu	.L24
 230:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 294                             		.loc 1 230 0 is_stmt 0 discriminator 1
 295 0011 75 41 42                		mov.L	#0x42, r1
 296                             	.LVL29:
 297 0014 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 298                             	.LVL30:
 299                             		.balign 2,3,5
 300                             	.L24:
 231:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 301                             		.loc 1 231 0 is_stmt 1
 302 0018 FB 32 00 00 00 00       		mov.L	#_SWTC_Data, r3
 303 001e ED 3E 03                		mov.L	12[r3], r14
 304 0021 FE 67 EE                		mov.L	[r7,r14], r14
 305                             	.LVL31:
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 306                             		.loc 1 232 0
 307 0024 CC E4                   		mov.B	[r14], r4
 308                             	.LVL32:
 233:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= (SWTC_CounterConfigurationType) (~SWTC_CFG_ENABLE_MSK);
 309                             		.loc 1 233 0
 310 0026 EF 42                   		mov.L	r4, r2
 311 0028 75 22 7F                		and #0x7f, r2
 312 002b C3 E2                   		mov.B	r2, [r14]
 313                             	.LVL33:
 235:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_MCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 314                             		.loc 1 235 0
 315 002d 6C 27                   		shll	#2, r7
 316                             	.LVL34:
 317 002f 06 89 37 04             		add	16[r3].L, r7
 318                             	.LVL35:
 236:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_MCounterValue) (value - 1);
 319                             		.loc 1 236 0
 320 0033 EC 77                   		mov.L	[r7], r7
 321                             	.LVL36:
 322 0035 60 1A                   		sub	#1, r10
 323                             	.LVL37:
 324 0037 D3 7A                   		mov.W	r10, [r7]
 232:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 325                             		.loc 1 232 0
 326 0039 75 24 80                		and #0xffffff80, r4
 327                             	.LVL38:
 238:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= enable;
 328                             		.loc 1 238 0
 329 003c CC E7                   		mov.B	[r14], r7
 330                             	.LVL39:
 331 003e 57 74                   		or	r7, r4
 332 0040 C3 E4                   		mov.B	r4, [r14]
 239:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 333                             		.loc 1 239 0
 334 0042 3F 7A 04                		rtsd	#16, r7-r10
 335                             	.LFE4:
 337 0045 03                      		.section	.text.SWTC_SetPrescaler,"ax",@progbits
 338                             		.global	_SWTC_SetPrescaler
 340                             	_SWTC_SetPrescaler:
 341                             	.LFB5:
 279:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 342                             		.loc 1 279 0
 343                             	.LVL40:
 344 0000 6E 7B                   		pushm	r7-r11
 345                             	.LCFI6:
 346 0002 CF 1A                   		mov.B	r1, r10
 347 0004 CF 27                   		mov.B	r2, r7
 348                             	.LVL41:
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(!SWTC_CFG_PS_ASSERT(ps), PLT_ERROR_SWTC_INVALID_PS);
 349                             		.loc 1 283 0
 350 0006 EF 7B                   		mov.L	r7, r11
 351 0008 76 2B F0 00             		and	#0xf0, r11
 352 000c 10                      		beq	.L27
 283:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(!SWTC_CFG_PS_ASSERT(ps), PLT_ERROR_SWTC_INVALID_PS);
 353                             		.loc 1 283 0 is_stmt 0 discriminator 1
 354 000d 75 41 43                		mov.L	#0x43, r1
 355                             	.LVL42:
 356 0010 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 357                             	.LVL43:
 358                             		.balign 2,3,5
 359                             	.L27:
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 360                             		.loc 1 285 0 is_stmt 1
 361 0014 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 362 001a 5B AA                   		movu.B	r10, r10
 363 001c 59 E4 14                		movu.B	20[r14], r4
 364 001f EF EB                   		mov.L	r14, r11
 365 0021 47 4A                   		cmp	r4, r10
 366 0023 23 09                   		bltu	.L28
 285:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 367                             		.loc 1 285 0 is_stmt 0 discriminator 1
 368 0025 75 41 42                		mov.L	#0x42, r1
 369 0028 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 370                             	.LVL44:
 371                             		.balign 2,3,1
 372                             	.L28:
 287:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 373                             		.loc 1 287 0 is_stmt 1
 374 002c ED BB 03                		mov.L	12[r11], r11
 375 002f FE 6A BA                		mov.L	[r10,r11], r10
 376                             	.LVL45:
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 377                             		.loc 1 288 0
 378 0032 CC AB                   		mov.B	[r10], r11
 379                             	.LVL46:
 292:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= SWTC_CFG_PS(ps);
 380                             		.loc 1 292 0
 381 0034 64 F7                   		and #15, r7
 382                             	.LVL47:
 383 0036 6C 27                   		shll	#2, r7
 288:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	enable = (uint8_t) (*pcfg & SWTC_CFG_ENABLE_MSK);
 384                             		.loc 1 288 0
 385 0038 75 2B C3                		and #-61, r11
 386                             	.LVL48:
 294:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= enable;
 387                             		.loc 1 294 0
 388 003b 57 B7                   		or	r11, r7
 389 003d C3 A7                   		mov.B	r7, [r10]
 295:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 390                             		.loc 1 295 0
 391 003f 3F 7B 05                		rtsd	#20, r7-r11
 392                             	.LFE5:
 394                             		.section	.text.SWTC_Run,"ax",@progbits
 395                             		.global	_SWTC_Run
 397                             	_SWTC_Run:
 398                             	.LFB6:
 324:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 399                             		.loc 1 324 0
 400                             	.LVL49:
 401 0000 6E 7A                   		pushm	r7-r10
 402                             	.LCFI7:
 403                             	.LVL50:
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 404                             		.loc 1 326 0
 405 0002 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 406 0008 5B 17                   		movu.B	r1, r7
 407 000a 59 E4 14                		movu.B	20[r14], r4
 408 000d EF EA                   		mov.L	r14, r10
 409 000f 47 47                   		cmp	r4, r7
 410 0011 23 09                   		bltu	.L34
 326:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 411                             		.loc 1 326 0 is_stmt 0 discriminator 1
 412 0013 75 41 42                		mov.L	#0x42, r1
 413                             	.LVL51:
 414 0016 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 415                             	.LVL52:
 416                             		.balign 2,3,1
 417                             	.L34:
 328:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 418                             		.loc 1 328 0 is_stmt 1
 419 001a ED AA 03                		mov.L	12[r10], r10
 420 001d FE 67 A7                		mov.L	[r7,r10], r7
 421                             	.LVL53:
 330:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= SWTC_CFG_ENABLE_MSK;
 422                             		.loc 1 330 0
 423 0020 CC 7A                   		mov.B	[r7], r10
 424 0022 75 3A 80                		or	#0xffffff80, r10
 425 0025 C3 7A                   		mov.B	r10, [r7]
 331:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 426                             		.loc 1 331 0
 427 0027 3F 7A 04                		rtsd	#16, r7-r10
 428                             	.LFE6:
 430                             		.section	.text.SWTC_Stop,"ax",@progbits
 431                             		.global	_SWTC_Stop
 433                             	_SWTC_Stop:
 434                             	.LFB7:
 354:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 435                             		.loc 1 354 0
 436                             	.LVL54:
 437 0000 6E 7A                   		pushm	r7-r10
 438                             	.LCFI8:
 439                             	.LVL55:
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 440                             		.loc 1 356 0
 441 0002 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 442 0008 5B 17                   		movu.B	r1, r7
 443 000a 59 E4 14                		movu.B	20[r14], r4
 444 000d EF EA                   		mov.L	r14, r10
 445 000f 47 47                   		cmp	r4, r7
 446 0011 23 09                   		bltu	.L37
 356:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 447                             		.loc 1 356 0 is_stmt 0 discriminator 1
 448 0013 75 41 42                		mov.L	#0x42, r1
 449                             	.LVL56:
 450 0016 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 451                             	.LVL57:
 452                             		.balign 2,3,1
 453                             	.L37:
 357:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 454                             		.loc 1 357 0 is_stmt 1
 455 001a ED AA 03                		mov.L	12[r10], r10
 456 001d FE 67 A7                		mov.L	[r7,r10], r7
 457                             	.LVL58:
 358:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= ~(SWTC_CFG_ENABLE_MSK);
 458                             		.loc 1 358 0
 459 0020 CC 7A                   		mov.B	[r7], r10
 460 0022 75 2A 7F                		and #0x7f, r10
 461 0025 C3 7A                   		mov.B	r10, [r7]
 359:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 462                             		.loc 1 359 0
 463 0027 3F 7A 04                		rtsd	#16, r7-r10
 464                             	.LFE7:
 466                             		.section	.text.SWTC_SetSValueAndRun,"ax",@progbits
 467                             		.global	_SWTC_SetSValueAndRun
 469                             	_SWTC_SetSValueAndRun:
 470                             	.LFB8:
 396:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 471                             		.loc 1 396 0
 472                             	.LVL59:
 473 0000 6E 7A                   		pushm	r7-r10
 474                             	.LCFI9:
 475 0002 CF 2A                   		mov.B	r2, r10
 476                             	.LVL60:
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 477                             		.loc 1 399 0
 478 0004 5B 17                   		movu.B	r1, r7
 479 0006 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 480 000c 45 E7 14                		cmp	20[r14].UB, r7
 481 000f 23 09                   		bltu	.L40
 399:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 482                             		.loc 1 399 0 is_stmt 0 discriminator 1
 483 0011 75 41 42                		mov.L	#0x42, r1
 484                             	.LVL61:
 485 0014 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 486                             	.LVL62:
 487                             		.balign 2,3,5
 488                             	.L40:
 401:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 489                             		.loc 1 401 0 is_stmt 1
 490 0018 FB 42 00 00 00 00       		mov.L	#_SWTC_Data, r4
 491 001e ED 4E 03                		mov.L	12[r4], r14
 492 0021 FE 67 EE                		mov.L	[r7,r14], r14
 493                             	.LVL63:
 403:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= ~(SWTC_CFG_ENABLE_MSK);
 494                             		.loc 1 403 0
 495 0024 CC E3                   		mov.B	[r14], r3
 496 0026 75 23 7F                		and #0x7f, r3
 497 0029 C3 E3                   		mov.B	r3, [r14]
 405:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_SCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 498                             		.loc 1 405 0
 499 002b 6C 27                   		shll	#2, r7
 500                             	.LVL64:
 501 002d 06 89 47 04             		add	16[r4].L, r7
 502 0031 EC 77                   		mov.L	[r7], r7
 503                             	.LVL65:
 406:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_SCounterValue) (value - 1);
 504                             		.loc 1 406 0
 505 0033 60 1A                   		sub	#1, r10
 506                             	.LVL66:
 507 0035 C3 7A                   		mov.B	r10, [r7]
 408:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= (SWTC_CFG_ENABLE_MSK);
 508                             		.loc 1 408 0
 509 0037 CC E7                   		mov.B	[r14], r7
 510                             	.LVL67:
 511 0039 75 37 80                		or	#0xffffff80, r7
 512 003c C3 E7                   		mov.B	r7, [r14]
 409:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 513                             		.loc 1 409 0
 514 003e 3F 7A 04                		rtsd	#16, r7-r10
 515                             	.LFE8:
 517 0041 03                      		.section	.text.SWTC_SetMValueAndRun,"ax",@progbits
 518                             		.global	_SWTC_SetMValueAndRun
 520                             	_SWTC_SetMValueAndRun:
 521                             	.LFB9:
 415:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 522                             		.loc 1 415 0
 523                             	.LVL68:
 524 0000 6E 7A                   		pushm	r7-r10
 525                             	.LCFI10:
 526 0002 DF 2A                   		mov.W	r2, r10
 527                             	.LVL69:
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 528                             		.loc 1 419 0
 529 0004 5B 17                   		movu.B	r1, r7
 530 0006 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 531 000c 45 E7 14                		cmp	20[r14].UB, r7
 532 000f 23 09                   		bltu	.L43
 419:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 533                             		.loc 1 419 0 is_stmt 0 discriminator 1
 534 0011 75 41 42                		mov.L	#0x42, r1
 535                             	.LVL70:
 536 0014 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 537                             	.LVL71:
 538                             		.balign 2,3,5
 539                             	.L43:
 422:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 540                             		.loc 1 422 0 is_stmt 1
 541 0018 FB 42 00 00 00 00       		mov.L	#_SWTC_Data, r4
 542 001e ED 4E 03                		mov.L	12[r4], r14
 543 0021 FE 67 EE                		mov.L	[r7,r14], r14
 544                             	.LVL72:
 424:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg &= ~(SWTC_CFG_ENABLE_MSK);
 545                             		.loc 1 424 0
 546 0024 CC E3                   		mov.B	[r14], r3
 547 0026 75 23 7F                		and #0x7f, r3
 548 0029 C3 E3                   		mov.B	r3, [r14]
 549                             	.LVL73:
 426:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (SWTC_MCounterVariableType*)(SWTC_Data.pCountersTable[counterID]);
 550                             		.loc 1 426 0
 551 002b 6C 27                   		shll	#2, r7
 552                             	.LVL74:
 553 002d 06 89 47 04             		add	16[r4].L, r7
 554                             	.LVL75:
 427:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	(pCnt)->counter = (SWTC_MCounterValue) (value - 1);
 555                             		.loc 1 427 0
 556 0031 EC 77                   		mov.L	[r7], r7
 557                             	.LVL76:
 558 0033 60 1A                   		sub	#1, r10
 559                             	.LVL77:
 560 0035 D3 7A                   		mov.W	r10, [r7]
 429:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	*pcfg |= (SWTC_CFG_ENABLE_MSK);
 561                             		.loc 1 429 0
 562 0037 CC E7                   		mov.B	[r14], r7
 563                             	.LVL78:
 564 0039 75 37 80                		or	#0xffffff80, r7
 565 003c C3 E7                   		mov.B	r7, [r14]
 430:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 566                             		.loc 1 430 0
 567 003e 3F 7A 04                		rtsd	#16, r7-r10
 568                             	.LFE9:
 570 0041 03                      		.section	.text.SWTC_IsExpired,"ax",@progbits
 571                             		.global	_SWTC_IsExpired
 573                             	_SWTC_IsExpired:
 574                             	.LFB10:
 474:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 575                             		.loc 1 474 0
 576                             	.LVL79:
 577 0000 7E A7                   		push.l	r7
 578                             	.LCFI11:
 579                             	.LVL80:
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 580                             		.loc 1 478 0
 581 0002 5B 17                   		movu.B	r1, r7
 582 0004 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 583 000a 45 E7 14                		cmp	20[r14].UB, r7
 584 000d 23 09                   		bltu	.L46
 478:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 585                             		.loc 1 478 0 is_stmt 0 discriminator 1
 586 000f 75 41 42                		mov.L	#0x42, r1
 587                             	.LVL81:
 588 0012 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 589                             	.LVL82:
 590                             		.balign 2,3,5
 591                             	.L46:
 481:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 592                             		.loc 1 481 0 is_stmt 1
 593 0016 FB 42 00 00 00 00       		mov.L	#_SWTC_Data, r4
 594 001c ED 4E 04                		mov.L	16[r4], r14
 595 001f FE 67 EE                		mov.L	[r7,r14], r14
 596                             	.LVL83:
 480:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 597                             		.loc 1 480 0
 598 0022 6C 27                   		shll	#2, r7
 599                             	.LVL84:
 600 0024 06 89 47 03             		add	12[r4].L, r7
 601                             	.LVL85:
 483:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 602                             		.loc 1 483 0
 603 0028 EC 77                   		mov.L	[r7], r7
 604                             	.LVL86:
 605 002a CC 77                   		mov.B	[r7], r7
 606                             	.LVL87:
 607 002c 64 37                   		and #3, r7
 608 002e 61 17                   		cmp	#1, r7
 609 0030 16                      		beq	.L48
 610 0031 61 27                   		cmp	#2, r7
 611 0033 21 0C                   		bne	.L51
 612 0035 0C                      		bra	.L49
 613                             	.L48:
 491:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			return (bool_t)(((SWTC_SCounterVariableType*)pCnt)->counter < 0);
 614                             		.loc 1 491 0
 615 0036 CC E1                   		mov.B	[r14], r1
 616 0038 0C                      		bra	.L53
 617                             	.L49:
 496:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			return (bool_t)(((SWTC_MCounterVariableType*)pCnt)->counter < 0);
 618                             		.loc 1 496 0
 619 0039 DC E1                   		mov.W	[r14], r1
 620 003b 03                      		.balign 2,3,1
 621                             	.L53:
 622 003c 69 F1                   		shlr	#31, r1
 623 003e 0C                      		bra	.L47
 624                             	.L51:
 502:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	return FALSE;	
 625                             		.loc 1 502 0
 626 003f 66 01                   		mov.L	#0, r1
 627 0041 03                      		.balign 2,3,2
 628                             	.L47:
 503:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 629                             		.loc 1 503 0
 630 0042 3F 77 01                		rtsd	#4, r7-r7
 631                             	.LFE10:
 633 0045 03                      		.section	.text.SWTC_IsStopped,"ax",@progbits
 634                             		.global	_SWTC_IsStopped
 636                             	_SWTC_IsStopped:
 637                             	.LFB11:
 527:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 638                             		.loc 1 527 0
 639                             	.LVL88:
 640 0000 6E 7A                   		pushm	r7-r10
 641                             	.LCFI12:
 642                             	.LVL89:
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 643                             		.loc 1 529 0
 644 0002 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 645 0008 5B 17                   		movu.B	r1, r7
 646 000a 59 E4 14                		movu.B	20[r14], r4
 647 000d EF EA                   		mov.L	r14, r10
 648 000f 47 47                   		cmp	r4, r7
 649 0011 23 09                   		bltu	.L55
 529:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 650                             		.loc 1 529 0 is_stmt 0 discriminator 1
 651 0013 75 41 42                		mov.L	#0x42, r1
 652                             	.LVL90:
 653 0016 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 654                             	.LVL91:
 655                             		.balign 2,3,1
 656                             	.L55:
 530:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 657                             		.loc 1 530 0 is_stmt 1
 658 001a ED AA 03                		mov.L	12[r10], r10
 532:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	return (bool_t)(!(*pcfg & SWTC_CFG_ENABLE_MSK));
 659                             		.loc 1 532 0
 660 001d FE 67 A7                		mov.L	[r7,r10], r7
 661                             	.LVL92:
 662 0020 CC 71                   		mov.B	[r7], r1
 533:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 663                             		.loc 1 533 0
 664 0022 61 01                   		cmp	#0, r1
 665 0024 FC DB 18                		scge.L	r1
 666 0027 3F 7A 04                		rtsd	#16, r7-r10
 667                             	.LFE11:
 669                             		.section	.text.SWTC_Retrigger,"ax",@progbits
 670                             		.global	_SWTC_Retrigger
 672                             	_SWTC_Retrigger:
 673                             	.LFB12:
 563:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 674                             		.loc 1 563 0
 675                             	.LVL93:
 676 0000 7E A7                   		push.l	r7
 677                             	.LCFI13:
 678                             	.LVL94:
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 679                             		.loc 1 568 0
 680 0002 5B 17                   		movu.B	r1, r7
 681 0004 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 682 000a 45 E7 14                		cmp	20[r14].UB, r7
 683 000d 23 09                   		bltu	.L58
 568:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 684                             		.loc 1 568 0 is_stmt 0 discriminator 1
 685 000f 75 41 42                		mov.L	#0x42, r1
 686                             	.LVL95:
 687 0012 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 688                             	.LVL96:
 689                             		.balign 2,3,5
 690                             	.L58:
 571:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 691                             		.loc 1 571 0 is_stmt 1
 692 0016 FB 42 00 00 00 00       		mov.L	#_SWTC_Data, r4
 693 001c ED 4E 04                		mov.L	16[r4], r14
 694 001f FE 67 EE                		mov.L	[r7,r14], r14
 695                             	.LVL97:
 570:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 696                             		.loc 1 570 0
 697 0022 6C 27                   		shll	#2, r7
 698                             	.LVL98:
 699 0024 06 89 47 03             		add	12[r4].L, r7
 700                             	.LVL99:
 573:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 701                             		.loc 1 573 0
 702 0028 EC 77                   		mov.L	[r7], r7
 703                             	.LVL100:
 704 002a CC 71                   		mov.B	[r7], r1
 705 002c 64 31                   		and #3, r1
 706 002e 61 11                   		cmp	#1, r1
 707 0030 17                      		beq	.L60
 708 0031 61 21                   		cmp	#2, r1
 709 0033 21 24                   		bne	.L64
 710 0035 2E 11                   		bra	.L61
 711                             	.L60:
 583:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pending = (bool_t)(((SWTC_SCounterVariableType*)pCnt)->counter < 0);
 712                             		.loc 1 583 0
 713 0037 CC E7                   		mov.B	[r14], r7
 714                             	.LVL101:
 584:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(pending)
 715                             		.loc 1 584 0
 716 0039 CF 74                   		mov.B	r7, r4
 717 003b 61 04                   		cmp	#0, r4
 718 003d 28 1A                   		bge	.L64
 586:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			((SWTC_SCounterVariableType*)pCnt)->counter += 0x7F;
 719                             		.loc 1 586 0
 720 003f 71 77 7F                		add	#0x7f, r7
 721 0042 C3 E7                   		mov.B	r7, [r14]
 722 0044 2E 16                   		bra	.L59
 723                             	.LVL102:
 724                             	.L61:
 593:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		pending = (bool_t)(((SWTC_MCounterVariableType*)pCnt)->counter < 0);
 725                             		.loc 1 593 0
 726 0046 DC E7                   		mov.W	[r14], r7
 727                             	.LVL103:
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(pending)
 728                             		.loc 1 594 0
 729 0048 DF 74                   		mov.W	r7, r4
 730 004a 61 04                   		cmp	#0, r4
 731 004c 28 0B                   		bge	.L64
 596:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 			((SWTC_MCounterVariableType*)pCnt)->counter += 0x7FFF;
 732                             		.loc 1 596 0
 733 004e 72 77 FF 7F             		add	#0x7fff, r7
 734 0052 D3 E7                   		mov.W	r7, [r14]
 735 0054 66 11                   		mov.L	#1, r1
 736 0056 0C                      		bra	.L59
 737                             	.LVL104:
 738                             	.L64:
 594:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		if(pending)
 739                             		.loc 1 594 0
 740 0057 66 01                   		mov.L	#0, r1
 741 0059 03                      		.balign 2,3,2
 742                             	.L59:
 743                             	.LVL105:
 605:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 744                             		.loc 1 605 0
 745 005a 3F 77 01                		rtsd	#4, r7-r7
 746                             	.LFE12:
 748 005d 03                      		.section	.text.SWTC_GetRemainingTime,"ax",@progbits
 749                             		.global	_SWTC_GetRemainingTime
 751                             	_SWTC_GetRemainingTime:
 752                             	.LFB13:
 626:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 753                             		.loc 1 626 0
 754                             	.LVL106:
 755 0000 7E A7                   		push.l	r7
 756                             	.LCFI14:
 757                             	.LVL107:
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 758                             		.loc 1 631 0
 759 0002 5B 17                   		movu.B	r1, r7
 760 0004 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 761 000a 45 E7 14                		cmp	20[r14].UB, r7
 762 000d 23 09                   		bltu	.L68
 631:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 763                             		.loc 1 631 0 is_stmt 0 discriminator 1
 764 000f 75 41 42                		mov.L	#0x42, r1
 765                             	.LVL108:
 766 0012 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 767                             	.LVL109:
 768                             		.balign 2,3,5
 769                             	.L68:
 634:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 770                             		.loc 1 634 0 is_stmt 1
 771 0016 FB 42 00 00 00 00       		mov.L	#_SWTC_Data, r4
 772 001c ED 4E 04                		mov.L	16[r4], r14
 773 001f FE 67 EE                		mov.L	[r7,r14], r14
 774                             	.LVL110:
 633:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 775                             		.loc 1 633 0
 776 0022 6C 27                   		shll	#2, r7
 777                             	.LVL111:
 778 0024 06 89 47 03             		add	12[r4].L, r7
 779                             	.LVL112:
 636:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 780                             		.loc 1 636 0
 781 0028 EC 77                   		mov.L	[r7], r7
 782                             	.LVL113:
 783 002a CC 77                   		mov.B	[r7], r7
 784                             	.LVL114:
 785 002c 64 37                   		and #3, r7
 786 002e 61 17                   		cmp	#1, r7
 787 0030 16                      		beq	.L70
 788 0031 61 27                   		cmp	#2, r7
 789 0033 21 0C                   		bne	.L73
 790 0035 0C                      		bra	.L71
 791                             	.L70:
 644:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = ((SWTC_SCounterVariableType*)pCnt)->counter + 1;
 792                             		.loc 1 644 0
 793 0036 CC E1                   		mov.B	[r14], r1
 794 0038 0C                      		bra	.L75
 795                             	.L71:
 648:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = ((SWTC_MCounterVariableType*)pCnt)->counter + 1;
 796                             		.loc 1 648 0
 797 0039 DC E1                   		mov.W	[r14], r1
 798 003b 03                      		.balign 2,3,1
 799                             	.L75:
 800 003c 62 11                   		add	#1, r1
 801                             	.LVL115:
 649:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;	
 802                             		.loc 1 649 0
 803 003e 0C                      		bra	.L69
 804                             	.LVL116:
 805                             	.L73:
 628:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_TimeType time=0;
 806                             		.loc 1 628 0
 807 003f 66 01                   		mov.L	#0, r1
 808                             	.LVL117:
 809 0041 03                      		.balign 2,3,2
 810                             	.L69:
 653:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 811                             		.loc 1 653 0
 812 0042 3F 77 01                		rtsd	#4, r7-r7
 813                             	.LFE13:
 815 0045 03                      		.section	.text.SWTC_GetElapsedTime,"ax",@progbits
 816                             		.global	_SWTC_GetElapsedTime
 818                             	_SWTC_GetElapsedTime:
 819                             	.LFB14:
 680:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** {
 820                             		.loc 1 680 0
 821                             	.LVL118:
 822 0000 7E A7                   		push.l	r7
 823                             	.LCFI15:
 824                             	.LVL119:
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 825                             		.loc 1 686 0
 826 0002 5B 17                   		movu.B	r1, r7
 827 0004 FB E2 00 00 00 00       		mov.L	#_SWTC_Data, r14
 828 000a 45 E7 14                		cmp	20[r14].UB, r7
 829 000d 23 09                   		bltu	.L77
 686:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	PLT_ERROR_FATAL_IF(counterID >= (SWTC_Data.CountersNum), PLT_ERROR_SWTC_INVALID_COUNTER);
 830                             		.loc 1 686 0 is_stmt 0 discriminator 1
 831 000f 75 41 42                		mov.L	#0x42, r1
 832                             	.LVL120:
 833 0012 05 00 00 00             		bsr	_LIB_Error_Fatal_Handler
 834                             	.LVL121:
 835                             		.balign 2,3,5
 836                             	.L77:
 689:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pCnt = (void*)(SWTC_Data.pCountersTable[counterID]);
 837                             		.loc 1 689 0 is_stmt 1
 838 0016 FB 42 00 00 00 00       		mov.L	#_SWTC_Data, r4
 839 001c ED 4E 04                		mov.L	16[r4], r14
 840 001f FE 67 EE                		mov.L	[r7,r14], r14
 841                             	.LVL122:
 688:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	pcfg=SWTC_Data.pCountersCfgTable[counterID];
 842                             		.loc 1 688 0
 843 0022 6C 27                   		shll	#2, r7
 844                             	.LVL123:
 845 0024 06 89 47 03             		add	12[r4].L, r7
 846                             	.LVL124:
 691:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	switch(*pcfg & SWTC_CFG_SIZE_MSK)
 847                             		.loc 1 691 0
 848 0028 EC 77                   		mov.L	[r7], r7
 849                             	.LVL125:
 850 002a CC 77                   		mov.B	[r7], r7
 851                             	.LVL126:
 852 002c 64 37                   		and #3, r7
 853 002e 61 17                   		cmp	#1, r7
 854 0030 16                      		beq	.L79
 855 0031 61 27                   		cmp	#2, r7
 856 0033 21 12                   		bne	.L82
 857 0035 0F                      		bra	.L80
 858                             	.L79:
 699:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = (0x7F -1) - ((SWTC_SCounterVariableType*)pCnt)->counter;
 859                             		.loc 1 699 0
 860 0036 CC E7                   		mov.B	[r14], r7
 861 0038 75 41 7E                		mov.L	#0x7e, r1
 862 003b 0F                      		bra	.L84
 863                             	.L80:
 703:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		time = (0x7FFF -1) - ((SWTC_MCounterVariableType*)pCnt)->counter;
 864                             		.loc 1 703 0
 865 003c DC E7                   		mov.W	[r14], r7
 866 003e FB 1A FE 7F             		mov.L	#0x7ffe, r1
 867                             		.balign 2,3,1
 868                             	.L84:
 869 0042 43 71                   		sub	r7, r1
 870                             	.LVL127:
 704:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 		break;	
 871                             		.loc 1 704 0
 872 0044 0C                      		bra	.L78
 873                             	.LVL128:
 874                             	.L82:
 683:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** 	SWTC_TimeType time=0;
 875                             		.loc 1 683 0
 876 0045 66 01                   		mov.L	#0, r1
 877                             	.LVL129:
 878 0047 03                      		.balign 2,3,2
 879                             	.L78:
 708:C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters\SwTimersCounters.c **** }
 880                             		.loc 1 708 0
 881 0048 3F 77 01                		rtsd	#4, r7-r7
 882                             	.LFE14:
 884 004b 03                      		.section	.bss.SWTC_Data,"aw",@nobits
 885                             		.balign 4
 888                             	_SWTC_Data:
 889 0000 00 00 00 00 00 00 00 00 		.zero	24
 889      00 00 00 00 00 00 00 00 
 889      00 00 00 00 00 00 00 00 
 1198                             	.Letext0:
 1199                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 1200                             		.file 3 "C:/Workspace/FW_Inertia/branch_indesit/ProductModules/PM_SwTimersCounters/SwTimersCounter
 1201                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_Error/LIB_Error.h"
DEFINED SYMBOLS
                            *ABS*:00000000 SwTimersCounters.c
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:6      .text.SWTC_PrescalerManager:00000000 _SWTC_PrescalerManager
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:11     .text.SWTC_PrescalerManager:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:888    .bss.SWTC_Data:00000000 _SWTC_Data
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:89     .text.SWTC_InitManager:00000000 _SWTC_InitManager
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:93     .text.SWTC_InitManager:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:111    .text.SWTC_InitTables:00000000 _SWTC_InitTables
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:115    .text.SWTC_InitTables:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:162    .text.SWTC_Manager:00000000 _SWTC_Manager
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:165    .text.SWTC_Manager:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:224    .text.SWTC_SetSValue:00000000 _SWTC_SetSValue
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:228    .text.SWTC_SetSValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:281    .text.SWTC_SetMValue:00000000 _SWTC_SetMValue
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:285    .text.SWTC_SetMValue:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:340    .text.SWTC_SetPrescaler:00000000 _SWTC_SetPrescaler
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:344    .text.SWTC_SetPrescaler:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:397    .text.SWTC_Run:00000000 _SWTC_Run
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:401    .text.SWTC_Run:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:433    .text.SWTC_Stop:00000000 _SWTC_Stop
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:437    .text.SWTC_Stop:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:469    .text.SWTC_SetSValueAndRun:00000000 _SWTC_SetSValueAndRun
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:473    .text.SWTC_SetSValueAndRun:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:520    .text.SWTC_SetMValueAndRun:00000000 _SWTC_SetMValueAndRun
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:524    .text.SWTC_SetMValueAndRun:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:573    .text.SWTC_IsExpired:00000000 _SWTC_IsExpired
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:577    .text.SWTC_IsExpired:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:636    .text.SWTC_IsStopped:00000000 _SWTC_IsStopped
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:640    .text.SWTC_IsStopped:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:672    .text.SWTC_Retrigger:00000000 _SWTC_Retrigger
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:676    .text.SWTC_Retrigger:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:751    .text.SWTC_GetRemainingTime:00000000 _SWTC_GetRemainingTime
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:755    .text.SWTC_GetRemainingTime:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:818    .text.SWTC_GetElapsedTime:00000000 _SWTC_GetElapsedTime
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:822    .text.SWTC_GetElapsedTime:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:891    .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:7      .text.SWTC_PrescalerManager:00000000 .LFB15
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:90     .text.SWTC_InitManager:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:112    .text.SWTC_InitTables:00000000 .LFB1
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:163    .text.SWTC_Manager:00000000 .LFB2
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:225    .text.SWTC_SetSValue:00000000 .LFB3
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:282    .text.SWTC_SetMValue:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:341    .text.SWTC_SetPrescaler:00000000 .LFB5
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:398    .text.SWTC_Run:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:434    .text.SWTC_Stop:00000000 .LFB7
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:470    .text.SWTC_SetSValueAndRun:00000000 .LFB8
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:521    .text.SWTC_SetMValueAndRun:00000000 .LFB9
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:574    .text.SWTC_IsExpired:00000000 .LFB10
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:637    .text.SWTC_IsStopped:00000000 .LFB11
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:673    .text.SWTC_Retrigger:00000000 .LFB12
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:752    .text.SWTC_GetRemainingTime:00000000 .LFB13
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:819    .text.SWTC_GetElapsedTime:00000000 .LFB14
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2440   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4330   .debug_str:0000023e .LASF152
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4538   .debug_str:00000c11 .LASF153
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4242   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4278   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4336   .debug_str:0000029c .LASF3
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4506   .debug_str:00000a5d .LASF0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4570   .debug_str:00000dd7 .LASF1
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4546   .debug_str:00000c8e .LASF2
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4548   .debug_str:00000ca0 .LASF4
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4514   .debug_str:00000ac7 .LASF5
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4340   .debug_str:000002b7 .LASF6
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4442   .debug_str:00000737 .LASF7
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4432   .debug_str:000006ae .LASF8
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4554   .debug_str:00000cde .LASF9
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4326   .debug_str:00000212 .LASF10
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4566   .debug_str:00000d9c .LASF11
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4394   .debug_str:000004f4 .LASF12
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4300   .debug_str:000000da .LASF13
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4542   .debug_str:00000c77 .LASF14
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4412   .debug_str:000005da .LASF15
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4440   .debug_str:0000071e .LASF16
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4558   .debug_str:00000d22 .LASF17
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4280   .debug_str:00000000 .LASF18
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4528   .debug_str:00000b9c .LASF19
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4382   .debug_str:00000473 .LASF20
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4334   .debug_str:00000289 .LASF21
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4342   .debug_str:000002ce .LASF22
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4380   .debug_str:0000046b .LASF24
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4562   .debug_str:00000d69 .LASF23
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4534   .debug_str:00000bc2 .LASF25
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4490   .debug_str:000009a3 .LASF26
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4360   .debug_str:0000039c .LASF27
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4484   .debug_str:00000962 .LASF28
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4486   .debug_str:00000975 .LASF29
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4388   .debug_str:000004b9 .LASF30
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4390   .debug_str:000004cc .LASF31
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4338   .debug_str:000002a4 .LASF32
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4480   .debug_str:00000935 .LASF33
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4492   .debug_str:000009c1 .LASF34
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4494   .debug_str:000009d6 .LASF35
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4498   .debug_str:00000a00 .LASF36
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4406   .debug_str:0000056c .LASF37
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4536   .debug_str:00000bdc .LASF38
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4302   .debug_str:000000e7 .LASF39
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4456   .debug_str:000007e3 .LASF40
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4556   .debug_str:00000cec .LASF41
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4436   .debug_str:000006cb .LASF42
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4458   .debug_str:00000819 .LASF43
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4576   .debug_str:00000e1e .LASF44
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4414   .debug_str:000005df .LASF45
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4416   .debug_str:000005f6 .LASF46
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4418   .debug_str:0000060d .LASF47
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4420   .debug_str:00000624 .LASF48
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4422   .debug_str:0000063b .LASF49
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4424   .debug_str:00000652 .LASF50
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4426   .debug_str:00000669 .LASF51
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4428   .debug_str:00000680 .LASF52
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4460   .debug_str:0000084e .LASF53
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4462   .debug_str:00000866 .LASF54
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4464   .debug_str:0000087e .LASF55
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4466   .debug_str:00000896 .LASF56
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4468   .debug_str:000008ae .LASF57
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4470   .debug_str:000008c6 .LASF58
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4472   .debug_str:000008de .LASF59
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4474   .debug_str:000008f6 .LASF60
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4344   .debug_str:000002e1 .LASF61
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4346   .debug_str:000002fa .LASF62
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4348   .debug_str:00000313 .LASF63
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4350   .debug_str:0000032c .LASF64
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4352   .debug_str:00000345 .LASF65
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4510   .debug_str:00000a8d .LASF66
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4356   .debug_str:0000036a .LASF67
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4358   .debug_str:00000383 .LASF68
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4396   .debug_str:000004fb .LASF69
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4332   .debug_str:00000264 .LASF70
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4328   .debug_str:00000219 .LASF71
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4372   .debug_str:00000406 .LASF72
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4488   .debug_str:00000988 .LASF73
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4370   .debug_str:000003f3 .LASF74
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4448   .debug_str:00000795 .LASF75
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4450   .debug_str:000007a5 .LASF76
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4310   .debug_str:00000148 .LASF77
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4592   .debug_str:00000eee .LASF78
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4550   .debug_str:00000ca8 .LASF79
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4552   .debug_str:00000cc4 .LASF80
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4446   .debug_str:00000770 .LASF81
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4398   .debug_str:0000051b .LASF82
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4292   .debug_str:00000092 .LASF83
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4384   .debug_str:00000481 .LASF84
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4452   .debug_str:000007b4 .LASF85
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4574   .debug_str:00000e04 .LASF86
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4438   .debug_str:00000700 .LASF87
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4444   .debug_str:00000745 .LASF88
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4284   .debug_str:0000001d .LASF89
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4508   .debug_str:00000a67 .LASF90
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4318   .debug_str:000001c5 .LASF91
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4584   .debug_str:00000e8d .LASF92
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4522   .debug_str:00000b44 .LASF93
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4286   .debug_str:00000042 .LASF94
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4430   .debug_str:00000697 .LASF95
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4520   .debug_str:00000b23 .LASF96
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4516   .debug_str:00000ad0 .LASF97
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4376   .debug_str:00000436 .LASF98
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4568   .debug_str:00000da8 .LASF99
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4560   .debug_str:00000d3a .LASF100
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4364   .debug_str:000003b0 .LASF101
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4314   .debug_str:00000184 .LASF102
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4518   .debug_str:00000af2 .LASF103
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4524   .debug_str:00000b63 .LASF104
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4374   .debug_str:0000041b .LASF105
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4408   .debug_str:000005a8 .LASF106
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4582   .debug_str:00000e73 .LASF107
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4476   .debug_str:0000090e .LASF108
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4312   .debug_str:00000165 .LASF109
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4402   .debug_str:0000053f .LASF110
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4288   .debug_str:0000005c .LASF111
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4588   .debug_str:00000ec1 .LASF112
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4496   .debug_str:000009eb .LASF113
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4482   .debug_str:00000949 .LASF114
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4572   .debug_str:00000dea .LASF115
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4564   .debug_str:00000d83 .LASF116
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4290   .debug_str:00000077 .LASF117
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4324   .debug_str:000001f8 .LASF118
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4526   .debug_str:00000b91 .LASF119
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4586   .debug_str:00000eb1 .LASF154
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4304   .debug_str:0000011b .LASF120
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4500   .debug_str:00000a2f .LASF121
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4594   .debug_str:00000f08 .LASF122
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4580   .debug_str:00000e61 .LASF123
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4578   .debug_str:00000e52 .LASF124
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4354   .debug_str:0000035e .LASF125
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4502   .debug_str:00000a40 .LASF126
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4316   .debug_str:000001af .LASF155
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:84     .text.SWTC_PrescalerManager:00000061 .LFE15
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2910   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2923   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2937   .debug_loc:00000041 .LLST2
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4322   .debug_str:000001f3 .LASF127
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2949   .debug_loc:00000060 .LLST3
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4306   .debug_str:00000132 .LASF128
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2966   .debug_loc:0000008b .LLST4
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4308   .debug_str:00000137 .LASF156
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:106    .text.SWTC_InitManager:0000001e .LFE0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4590   .debug_str:00000ede .LASF132
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:157    .text.SWTC_InitTables:00000041 .LFE1
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2978   .debug_loc:000000aa .LLST5
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4294   .debug_str:000000ac .LASF129
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:2996   .debug_loc:000000d6 .LLST6
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4410   .debug_str:000005c8 .LASF130
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4544   .debug_str:00000c80 .LASF131
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3008   .debug_loc:000000f8 .LLST7
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3020   .debug_loc:0000011a .LLST8
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4532   .debug_str:00000bb5 .LASF133
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:219    .text.SWTC_Manager:00000052 .LFE2
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3028   .debug_loc:0000012e .LLST9
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3041   .debug_loc:0000014e .LLST10
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:176    .text.SWTC_Manager:00000016 .LVL12
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:192    .text.SWTC_Manager:00000030 .LVL14
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4366   .debug_str:000003de .LASF134
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:276    .text.SWTC_SetSValue:00000045 .LFE3
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3053   .debug_loc:0000016d .LLST11
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4282   .debug_str:00000013 .LASF135
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3066   .debug_loc:0000018d .LLST12
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4368   .debug_str:000003ed .LASF136
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3084   .debug_loc:000001b9 .LLST13
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4530   .debug_str:00000bae .LASF137
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3102   .debug_loc:000001e5 .LLST14
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3125   .debug_loc:0000020f .LLST15
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3137   .debug_loc:0000022e .LLST16
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:241    .text.SWTC_SetSValue:00000018 .LVL19
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4504   .debug_str:00000a4e .LASF138
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:335    .text.SWTC_SetMValue:00000045 .LFE4
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3164   .debug_loc:00000266 .LLST17
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3177   .debug_loc:00000286 .LLST18
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3195   .debug_loc:000002b2 .LLST19
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3213   .debug_loc:000002de .LLST20
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3236   .debug_loc:00000308 .LLST21
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3248   .debug_loc:00000327 .LLST22
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:298    .text.SWTC_SetMValue:00000018 .LVL30
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4378   .debug_str:00000459 .LASF139
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:392    .text.SWTC_SetPrescaler:00000042 .LFE5
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3306   .debug_loc:00000399 .LLST23
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3319   .debug_loc:000003b9 .LLST24
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3337   .debug_loc:000003e5 .LLST25
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3355   .debug_loc:00000411 .LLST26
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3378   .debug_loc:0000043b .LLST27
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:357    .text.SWTC_SetPrescaler:00000014 .LVL43
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:370    .text.SWTC_SetPrescaler:0000002c .LVL44
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4540   .debug_str:00000c6e .LASF140
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:428    .text.SWTC_Run:0000002a .LFE6
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3390   .debug_loc:0000045a .LLST28
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3403   .debug_loc:0000047a .LLST29
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3421   .debug_loc:000004a6 .LLST30
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:415    .text.SWTC_Run:0000001a .LVL52
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4296   .debug_str:000000b8 .LASF141
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:464    .text.SWTC_Stop:0000002a .LFE7
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3433   .debug_loc:000004c5 .LLST31
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3446   .debug_loc:000004e5 .LLST32
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3464   .debug_loc:00000511 .LLST33
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:451    .text.SWTC_Stop:0000001a .LVL57
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4392   .debug_str:000004df .LASF142
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:515    .text.SWTC_SetSValueAndRun:00000041 .LFE8
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3476   .debug_loc:00000530 .LLST34
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3489   .debug_loc:00000550 .LLST35
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3507   .debug_loc:0000057c .LLST36
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3525   .debug_loc:000005a8 .LLST37
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3537   .debug_loc:000005c7 .LLST38
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:486    .text.SWTC_SetSValueAndRun:00000018 .LVL62
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4434   .debug_str:000006b6 .LASF143
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:568    .text.SWTC_SetMValueAndRun:00000041 .LFE9
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3564   .debug_loc:000005ff .LLST39
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3577   .debug_loc:0000061f .LLST40
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3595   .debug_loc:0000064b .LLST41
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3613   .debug_loc:00000677 .LLST42
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3625   .debug_loc:00000696 .LLST43
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:537    .text.SWTC_SetMValueAndRun:00000018 .LVL71
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4478   .debug_str:00000926 .LASF144
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:631    .text.SWTC_IsExpired:00000045 .LFE10
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3683   .debug_loc:00000708 .LLST44
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3696   .debug_loc:00000728 .LLST45
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3714   .debug_loc:00000754 .LLST46
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3772   .debug_loc:000007c6 .LLST47
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:589    .text.SWTC_IsExpired:00000016 .LVL82
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4404   .debug_str:0000055d .LASF145
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:667    .text.SWTC_IsStopped:0000002a .LFE11
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3784   .debug_loc:000007e5 .LLST48
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3797   .debug_loc:00000805 .LLST49
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3815   .debug_loc:00000831 .LLST50
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:654    .text.SWTC_IsStopped:0000001a .LVL91
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4454   .debug_str:000007d4 .LASF146
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:746    .text.SWTC_Retrigger:0000005d .LFE12
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3823   .debug_loc:00000845 .LLST51
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3836   .debug_loc:00000865 .LLST52
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3854   .debug_loc:00000891 .LLST53
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4400   .debug_str:00000537 .LASF147
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3931   .debug_loc:00000927 .LLST54
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3943   .debug_loc:00000946 .LLST55
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:688    .text.SWTC_Retrigger:00000016 .LVL96
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4512   .debug_str:00000ab1 .LASF148
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:813    .text.SWTC_GetRemainingTime:00000045 .LFE13
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3955   .debug_loc:00000965 .LLST56
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3968   .debug_loc:00000985 .LLST57
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:3986   .debug_loc:000009b1 .LLST58
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4362   .debug_str:000003ab .LASF149
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4044   .debug_loc:00000a23 .LLST59
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4065   .debug_loc:00000a59 .LLST60
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:767    .text.SWTC_GetRemainingTime:00000016 .LVL109
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4386   .debug_str:000004a5 .LASF150
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:882    .text.SWTC_GetElapsedTime:0000004b .LFE14
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4077   .debug_loc:00000a78 .LLST61
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4090   .debug_loc:00000a98 .LLST62
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4108   .debug_loc:00000ac4 .LLST63
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4166   .debug_loc:00000b36 .LLST64
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4187   .debug_loc:00000b6c .LLST65
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:834    .text.SWTC_GetElapsedTime:00000016 .LVL121
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4320   .debug_str:000001e9 .LASF151
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:4298   .debug_str:000000c2 .LASF157
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:12     .text.SWTC_PrescalerManager:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:10     .text.SWTC_PrescalerManager:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:18     .text.SWTC_PrescalerManager:0000000a .LVL2
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:13     .text.SWTC_PrescalerManager:00000002 .LVL1
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:26     .text.SWTC_PrescalerManager:00000019 .LVL3
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:30     .text.SWTC_PrescalerManager:0000001c .LVL4
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:37     .text.SWTC_PrescalerManager:00000023 .LVL6
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:75     .text.SWTC_PrescalerManager:00000058 .LVL7
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:33     .text.SWTC_PrescalerManager:0000001f .LVL5
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:116    .text.SWTC_InitTables:00000002 .LCFI1
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:118    .text.SWTC_InitTables:00000004 .LCFI2
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:114    .text.SWTC_InitTables:00000000 .LVL8
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:136    .text.SWTC_InitTables:00000020 .LVL11
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:134    .text.SWTC_InitTables:0000001f .LVL10
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:123    .text.SWTC_InitTables:0000000d .LVL9
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:166    .text.SWTC_Manager:00000002 .LCFI3
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:180    .text.SWTC_Manager:0000001a .LVL13
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:229    .text.SWTC_SetSValue:00000002 .LCFI4
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:227    .text.SWTC_SetSValue:00000000 .LVL16
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:239    .text.SWTC_SetSValue:00000014 .LVL18
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:258    .text.SWTC_SetSValue:0000002f .LVL22
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:264    .text.SWTC_SetSValue:00000037 .LVL24
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:251    .text.SWTC_SetSValue:00000026 .LVL21
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:268    .text.SWTC_SetSValue:0000003c .LVL25
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:231    .text.SWTC_SetSValue:00000004 .LVL17
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:248    .text.SWTC_SetSValue:00000024 .LVL20
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:261    .text.SWTC_SetSValue:00000035 .LVL23
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:271    .text.SWTC_SetSValue:0000003e .LVL26
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:286    .text.SWTC_SetMValue:00000002 .LCFI5
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:284    .text.SWTC_SetMValue:00000000 .LVL27
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:296    .text.SWTC_SetMValue:00000014 .LVL29
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:316    .text.SWTC_SetMValue:0000002f .LVL34
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:323    .text.SWTC_SetMValue:00000037 .LVL37
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:308    .text.SWTC_SetMValue:00000026 .LVL32
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:327    .text.SWTC_SetMValue:0000003c .LVL38
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:288    .text.SWTC_SetMValue:00000004 .LVL28
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:305    .text.SWTC_SetMValue:00000024 .LVL31
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:313    .text.SWTC_SetMValue:0000002d .LVL33
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:318    .text.SWTC_SetMValue:00000033 .LVL35
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:321    .text.SWTC_SetMValue:00000035 .LVL36
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:330    .text.SWTC_SetMValue:0000003e .LVL39
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:345    .text.SWTC_SetPrescaler:00000002 .LCFI6
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:343    .text.SWTC_SetPrescaler:00000000 .LVL40
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:355    .text.SWTC_SetPrescaler:00000010 .LVL42
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:376    .text.SWTC_SetPrescaler:00000032 .LVL45
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:382    .text.SWTC_SetPrescaler:00000036 .LVL47
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:379    .text.SWTC_SetPrescaler:00000034 .LVL46
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:386    .text.SWTC_SetPrescaler:0000003b .LVL48
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:348    .text.SWTC_SetPrescaler:00000006 .LVL41
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:402    .text.SWTC_Run:00000002 .LCFI7
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:400    .text.SWTC_Run:00000000 .LVL49
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:413    .text.SWTC_Run:00000016 .LVL51
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:421    .text.SWTC_Run:00000020 .LVL53
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:403    .text.SWTC_Run:00000002 .LVL50
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:438    .text.SWTC_Stop:00000002 .LCFI8
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:436    .text.SWTC_Stop:00000000 .LVL54
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:449    .text.SWTC_Stop:00000016 .LVL56
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:457    .text.SWTC_Stop:00000020 .LVL58
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:439    .text.SWTC_Stop:00000002 .LVL55
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:474    .text.SWTC_SetSValueAndRun:00000002 .LCFI9
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:472    .text.SWTC_SetSValueAndRun:00000000 .LVL59
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:484    .text.SWTC_SetSValueAndRun:00000014 .LVL61
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:500    .text.SWTC_SetSValueAndRun:0000002d .LVL64
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:506    .text.SWTC_SetSValueAndRun:00000035 .LVL66
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:476    .text.SWTC_SetSValueAndRun:00000004 .LVL60
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:493    .text.SWTC_SetSValueAndRun:00000024 .LVL63
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:503    .text.SWTC_SetSValueAndRun:00000033 .LVL65
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:510    .text.SWTC_SetSValueAndRun:00000039 .LVL67
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:525    .text.SWTC_SetMValueAndRun:00000002 .LCFI10
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:523    .text.SWTC_SetMValueAndRun:00000000 .LVL68
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:535    .text.SWTC_SetMValueAndRun:00000014 .LVL70
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:552    .text.SWTC_SetMValueAndRun:0000002d .LVL74
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:559    .text.SWTC_SetMValueAndRun:00000035 .LVL77
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:527    .text.SWTC_SetMValueAndRun:00000004 .LVL69
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:544    .text.SWTC_SetMValueAndRun:00000024 .LVL72
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:549    .text.SWTC_SetMValueAndRun:0000002b .LVL73
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:554    .text.SWTC_SetMValueAndRun:00000031 .LVL75
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:557    .text.SWTC_SetMValueAndRun:00000033 .LVL76
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:563    .text.SWTC_SetMValueAndRun:00000039 .LVL78
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:578    .text.SWTC_IsExpired:00000002 .LCFI11
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:576    .text.SWTC_IsExpired:00000000 .LVL79
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:587    .text.SWTC_IsExpired:00000012 .LVL81
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:599    .text.SWTC_IsExpired:00000024 .LVL84
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:579    .text.SWTC_IsExpired:00000002 .LVL80
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:601    .text.SWTC_IsExpired:00000028 .LVL85
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:604    .text.SWTC_IsExpired:0000002a .LVL86
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:606    .text.SWTC_IsExpired:0000002c .LVL87
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:596    .text.SWTC_IsExpired:00000022 .LVL83
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:641    .text.SWTC_IsStopped:00000002 .LCFI12
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:639    .text.SWTC_IsStopped:00000000 .LVL88
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:652    .text.SWTC_IsStopped:00000016 .LVL90
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:661    .text.SWTC_IsStopped:00000020 .LVL92
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:642    .text.SWTC_IsStopped:00000002 .LVL89
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:677    .text.SWTC_Retrigger:00000002 .LCFI13
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:675    .text.SWTC_Retrigger:00000000 .LVL93
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:686    .text.SWTC_Retrigger:00000012 .LVL95
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:698    .text.SWTC_Retrigger:00000024 .LVL98
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:678    .text.SWTC_Retrigger:00000002 .LVL94
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:700    .text.SWTC_Retrigger:00000028 .LVL99
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:703    .text.SWTC_Retrigger:0000002a .LVL100
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:714    .text.SWTC_Retrigger:00000039 .LVL101
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:723    .text.SWTC_Retrigger:00000046 .LVL102
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:727    .text.SWTC_Retrigger:00000048 .LVL103
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:737    .text.SWTC_Retrigger:00000057 .LVL104
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:743    .text.SWTC_Retrigger:0000005a .LVL105
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:695    .text.SWTC_Retrigger:00000022 .LVL97
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:756    .text.SWTC_GetRemainingTime:00000002 .LCFI14
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:754    .text.SWTC_GetRemainingTime:00000000 .LVL106
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:765    .text.SWTC_GetRemainingTime:00000012 .LVL108
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:777    .text.SWTC_GetRemainingTime:00000024 .LVL111
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:757    .text.SWTC_GetRemainingTime:00000002 .LVL107
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:779    .text.SWTC_GetRemainingTime:00000028 .LVL112
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:782    .text.SWTC_GetRemainingTime:0000002a .LVL113
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:784    .text.SWTC_GetRemainingTime:0000002c .LVL114
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:801    .text.SWTC_GetRemainingTime:0000003e .LVL115
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:804    .text.SWTC_GetRemainingTime:0000003f .LVL116
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:808    .text.SWTC_GetRemainingTime:00000041 .LVL117
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:774    .text.SWTC_GetRemainingTime:00000022 .LVL110
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:823    .text.SWTC_GetElapsedTime:00000002 .LCFI15
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:821    .text.SWTC_GetElapsedTime:00000000 .LVL118
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:832    .text.SWTC_GetElapsedTime:00000012 .LVL120
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:844    .text.SWTC_GetElapsedTime:00000024 .LVL123
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:824    .text.SWTC_GetElapsedTime:00000002 .LVL119
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:846    .text.SWTC_GetElapsedTime:00000028 .LVL124
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:849    .text.SWTC_GetElapsedTime:0000002a .LVL125
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:851    .text.SWTC_GetElapsedTime:0000002c .LVL126
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:870    .text.SWTC_GetElapsedTime:00000044 .LVL127
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:873    .text.SWTC_GetElapsedTime:00000045 .LVL128
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:877    .text.SWTC_GetElapsedTime:00000047 .LVL129
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:841    .text.SWTC_GetElapsedTime:00000022 .LVL122
C:\Users\Andrea\AppData\Local\Temp\cc5tEPgx.s:1203   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_LIB_Error_Fatal_Handler
