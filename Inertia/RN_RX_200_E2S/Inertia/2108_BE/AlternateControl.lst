   1                             		.file	"AlternateControl.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.Could_Alternate_from_Virtual_Sensor,"ax",@progbits
   6                             	_Could_Alternate_from_Virtual_Sensor:
   7                             	.LFB4:
   8                             		.file 1 "C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules/AlternateControl.c"
   1:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
   2:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Source File 
   3:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
   4:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \file    AlternateControl.c
   5:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \ingroup AlternateControl
   6:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date    4/03/2008
   7:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author  Roberto Fioravanti
   8:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version 1.0.0
   9:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
  10:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  11:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /*
  12:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Copyright (c) 2004-2008, Indesit Company, EDT.
  13:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Tutti i diritti sono riservati. All rights reserved.
  14:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
  15:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  16:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Old Versions
  17:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version 
  18:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date    
  19:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author Roberto Fioravanti
  20:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
  21:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  22:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  23:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /** 
  24:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \note : 
  25:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */ 
  26:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  27:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  28:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ******** */
  29:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Includes */
  30:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ******** */
  31:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  32:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #include "CstmHeaders.h"
  33:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  34:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ****************** */
  35:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Defines and Macros */
  36:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ****************** */
  37:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #include "PM_AlternatoExp.h"
  38:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* *************************** */
  39:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Typedef, Structs and Unions */
  40:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* *************************** */
  41:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* EA : la struttura per l'alternato a 6 posizioni cambia per il microprogramma a tabella , ma la l
  42:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** quindi finchè si usa solo per determinare l'avanzamento alla posizione della tabella successiva è
  43:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /*
  44:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** struct
  45:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
  46:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t t_mnt;  
  47:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t speed;
  48:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t t_ramp;
  49:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t pos: 4
  50:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t unused:4 ;  
  51:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }up_Alt_setting_data_s;
  52:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
  53:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** struct
  54:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
  55:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t pos:2;
  56:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t t_mnt:6;  
  57:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t speed;
  58:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t t_ramp;
  59:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t unused;  
  60:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }up_Alt_setting_data_s;
  61:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  62:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  63:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  64:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  65:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* **************************** */
  66:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Prototype of local functions */
  67:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* **************************** */
  68:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static void ALT_uP_AlternateControl_Init(void); 
  69:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static uint8_t ALT_uP_AlternateControl_StepMgmt(uint8_t highStatement, uint8_t lowStatement);
  70:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  71:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static void ALT_SelectTableRuleByDishRackSelection(uint8_t dishrakcselection, uint8_t highStatement
  72:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static uint8_t ALT_SelectTableRuleByZoneWashSelection(uint8_t regulation_value);
  73:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static uint8_t Could_Alternate_from_Virtual_Sensor ( void);
  74:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ****************** */
  75:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Exported variables */
  76:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ****************** */
  77:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  78:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* **************** */
  79:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Global variables */
  80:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* **************** */
  81:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  82:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ***************** */
  83:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Exported function */
  84:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ***************** */
  85:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  86:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
  87:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Gestisce l'esecuzione del microprogramma AlternateControl.
  88:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  89:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  90:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  91:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****  
  92:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \retvalue S_OK se la condizione di avanzamento passo per il microprogramma è verificata (nel caso 
  93:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** almeno una volta)
  94:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \retvalue S_FALSE se non è ancora verificata
  95:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
  96:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Inizializza la macchina a stati (ALT_uP_AlternateControl_Init).
  97:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** sospende il microprogramma in particolari condizioni (ALT_uP_AlternateControl_Suspend).
  98:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Esegue la macchina a stati associata al microprogramma (ALT_uP_AlternateControl_StepMgmt).
  99:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 100:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \par \bSospensione del microprogramma
 101:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Il microprogramma viene sospeso in caso di apertura della porta.
 102:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** La sospensione del microprogramma durante il posizionamento dell'alternato richiede la 
 103:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** ripetizione della procedre di posizionamento (l'alternato è autoalimentato). 
 104:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Le condizioni in cui ciò può avvenire sono:
 105:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 106:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 1. apertura della porta 
 107:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 2. apertura del master relè
 108:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 109:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version		1.0.0
 110:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date 			26/02/2008
 111:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author			Roberto Fioravanti            
 112:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 113:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 114:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \todo   \par \bFaults
 115:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Gestione della sospensione del micorprogramma in presenza di faults
 116:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Attualmente la condizione sulla porta viene testata solo se non ci sono faults
 117:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 118:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 119:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 120:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** uint8_t ALT_uP_AlternateControl_Exe( uint8_t highStatement, uint8_t lowStatement)
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
 122:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** uint8_t nRet=S_FALSE;
 123:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 124:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   if ( (FALSE == Interpreter_Data[0].stepInitialized) || (FALSE == Interpreter_Data[0].optionalStep
 126:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   {
 127:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     /* Init passo o restore from backup */
 128:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     
 129:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		ALT_uP_AlternateControl_Init();    
 130:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		return nRet;
 131:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   } 
 132:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 133:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   /* TODO1: condizioni particolari in cui deve essere sospesa l'attività del microprogramma */
 134:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /*    
 135:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   if( !Alarm )
 136:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   {
 137:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */	
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     if ( uPDoorStatus == UP_DOOR_WAIT )
 139:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	{/* porta aperta o in attesa di timeout dopo la chiusura o delay MR -> il uP va sospeso */
 140:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  		  
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  (void)SWTC_Stop((SWTC_CountersType)MP_ALTCTRL_S_COUNTER);
 142:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  if (uP_AltCtrl_Data.step == ALT_CTRL_WAIT_ALTPOS_EXE)
 144:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 145:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	/* Se la condizione occorre durante il posizionamento dell'alternato 
 146:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		    si ripete la procedura
 147:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		    */
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	uP_AltCtrl_Data.step= ALT_CTRL_BEGIN;
 149:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }
 150:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		return S_FALSE;  				    
 152:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	}
 153:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /*		
 154:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
 155:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 156:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	nRet= ALT_uP_AlternateControl_StepMgmt(highStatement, lowStatement);
 157:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 158:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   return nRet;   
 159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
 160:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 161:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ************** */
 162:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* Local Function */
 163:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /* ************** */
 164:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 165:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
 166:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Inizializza la macchina a stati del microprogramma AlternateControl.
 167:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 168:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version		1.0.0
 169:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date 			26/02/2008
 170:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author			Roberto Fioravanti
 171:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 172:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 173:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static void ALT_uP_AlternateControl_Init(void) 
 174:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
 175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uP_AltCtrl_Data.step = ALT_CTRL_INIT;
 176:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
 177:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 178:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 179:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 180:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
 181:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Gestisce l'avanzamento della macchina a stati del microprogramma AlternateControl
 182:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 183:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \par \b Opzioni:
 184:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -incremento della posizione corrente dell'alternato
 185:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -posizionamento assoluto dell'alternato
 186:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -posizionamento combinato con attivazione pompa (sia BLDC che sincrona)
 187:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 188:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \par \b Condizione di avanzamento:
 189:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Nel caso di incremento della posizione corrente e posizionamento assoluto la condizione 
 190:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** consiste nel raggiungimento della posizione da parte dell'alternato.
 191:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Nel posizionamento combinato con attivazione della pompa ci sono due sotto-casi.
 192:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -mezzocarico:la condizione di avanzamento è il completamento dell'esecuzione della tabella 
 193:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** per quel cesto
 194:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -cesto non selezionato:esecuzione di tutte le tabelle.
 195:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 196:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \par \bVariante mezzocarico
 197:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** In caso di mezzocarico selezionato il microprogramma non esegue tutte le tabelle ma solo
 198:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** quella compatibile con la selezione dell'utente.
 199:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 200:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \par \b Formato dati:
 201:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Vel:
 202:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -pompa sincrona:
 203:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** ON  = FFh (per permettere la eventuale gestione della pompa asincrona )
 204:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** OFF = 0h
 205:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -pompa BLDC
 206:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** rpm/25
 207:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** tempo di rampa:
 208:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -pompa sincrona
 209:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 0
 210:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -pompa BLDC
 211:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** s/500ms
 212:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 213:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
 214:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
 215:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****  
 216:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \retvalue S_OK se la condizione di avanzamento passo per il microprogramma è verificata:
 217:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \retvalue S_FALSE se non è ancora verificata
 218:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 219:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version		1.0.0
 220:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date 			26/02/2008
 221:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author			Roberto Fioravanti
 222:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 223:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \todo       -La condizione sulla porta viene testata solo se non ci sono faults
 224:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             
 225:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 226:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static uint8_t ALT_uP_AlternateControl_StepMgmt(uint8_t highStatement, uint8_t lowStatement) 
 227:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
 228:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t nRet=S_FALSE;
 229:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t alternatecmd, altpos;
 230:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t table_displacement=0;
 231:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 232:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   if(SWTC_IsExpired(MP_ALTERNATE_UP_VS_FILTER_S_TIMER)|| (HWC_Flags.bit.vs_wash_presence==0))
 234:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   {
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     uP_AltCtrl_Data.SV_invalid_4alt=FALSE;
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     (void)SWTC_Stop((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 237:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   }
 238:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   switch(uP_AltCtrl_Data.step) 
 240:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   {
 241:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     case ALT_CTRL_INIT:
 242:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     
 243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	if (BasicLoader(PTR_UP_ALTERNATECONTROL, lowStatement, &uPAlternateCtrl_setting_data) != S_O
 244:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		{		 			
 245:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 246:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   				uP_AltCtrl_Data.step = ALT_CTRL_ERROR;
 247:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   				return S_OK;
 248:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		}
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if ( (highStatement & ALT_CTRL_OPTION) == ALT_CTRL_TABLE_PPOS)
 250:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{
 251:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			table_displacement=ALT_SelectTableRuleByZoneWashSelection(ZoneWashFunctionValue);
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if (BasicLoader(PTR_UP_ALTERNATECONTROL, table_displacement, &uPAlternateCtrl_setting_data) != S
 253:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   			{	
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step = ALT_CTRL_ERROR;
 255:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   				return S_OK;
 256:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 257:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			
 258:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 259:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		
 260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		uP_AltCtrl_Data.step=ALT_CTRL_BEGIN;
 261:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		
 262:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   	/* -fallthrough */  		
 263:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     case ALT_CTRL_BEGIN:
 264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		switch((highStatement & ALT_CTRL_OPTION)) 
 265:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		{
 266:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  case ALT_CTRL_RELATIVE_POS:
 267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		 	if( Could_Alternate_from_Virtual_Sensor()==ALTERNATE_KO)
 268:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{	/* non posso alternare */
 269:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				nRet=S_OK;	
 270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				return nRet;
 271:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 272:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    /* posizione di default */
 273:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    alternatecmd=0;
 274:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    altpos=uP_AltCtrl_Data.curr_pos;
 276:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    if(altpos>=PM_ALT_getPosNotDef( ))
 278:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    {
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		      alternatecmd=ALT_CTRL_SYNC_MSK;
 280:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    } else 
 281:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    {  		      
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		      alternatecmd=altpos+1;
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		      alternatecmd%=PM_ALT_getNumPos();
 284:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    }
 285:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			 uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			(void)SWTC_SetSValue((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER, (SWTC_SCounterValue)O
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		    (void)SWTC_Run((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    LoadsReq_New[Alt_Pos].b=alternatecmd;
 290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.step=ALT_CTRL_WAIT_ALTPOS_EXE;
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			 uP_AltCtrl_Data.curr_cmd=alternatecmd;
 292:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 293:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  break;
 294:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  
 295:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  case ALT_CTRL_ABSOLUTE_POS:
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		  	if( Could_Alternate_from_Virtual_Sensor()==ALTERNATE_KO)
 297:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{	/* non posso alternare */
 298:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				nRet=S_OK;	
 299:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				return nRet;
 300:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    alternatecmd=ALT_CTRL_GET_ALT_POS(0,highStatement);
 302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    alternatecmd|=ALT_CTRL_SYNC_MSK;  		    
 303:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    LoadsReq_New[Alt_Pos].b=alternatecmd;
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.curr_cmd=alternatecmd;
 306:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			(void)SWTC_SetSValue((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER, (SWTC_SCounterValue)O
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		    (void)SWTC_Run((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			uP_AltCtrl_Data.step=ALT_CTRL_WAIT_ALTPOS_EXE;
 311:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 312:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 313:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 314:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  break;
 315:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  case ALT_CTRL_TABLE:
 316:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		  case ALT_CTRL_TABLE_PPOS:
 317:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		  
 318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.step=ALT_CTRL_SELECT_TABLE_EXE;
 319:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 320:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			break;
 321:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  default:
 322:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    
 323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.step=ALT_CTRL_ERROR;
 324:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  
 325:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		}  		
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if((highStatement &  ALT_CTRL_OPTION_TABLE) != ALT_CTRL_TABLE)
 327:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         {        
 328:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       		break;	                    
 329:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         }
 330:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     /* -fallthrough */  
 331:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     case ALT_CTRL_SELECT_TABLE_EXE:
 332:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       /* todo: solo con BLDC? oppure anche per la sincrona? */
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if ((DishRackFunctionValue & DISH_RACK_FVALUE_MSK)&& ((highStatement &  ALT_CTRL_TABLE_PPOS)!
 334:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 335:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         ALT_SelectTableRuleByDishRackSelection(DishRackFunctionValue,highStatement);
 336:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	
 337:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }     
 338:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       uP_AltCtrl_Data.timing=1;
 340:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 341:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if(  HWC_Flags.bit.bldc1 )
 343:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 344:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	    {
 345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	      uP_AltCtrl_Data.timing+=ALT_CTRL_GET_RAMPTIME(0);
 346:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	    } 
 347:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #endif
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_ALTCTRL_S_COUNTER, (SWTC_PrescalerType)COUNTERS2_TBA
 349:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 350:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		uP_AltCtrl_Data.step=ALT_CTRL_WAIT_RAMP_EXE;
 352:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		/* -fallthrough */
 353:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     case ALT_CTRL_WAIT_RAMP_EXE:
 354:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 355:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       /* ribadire il comando alla pompa */       
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if(ALT_CTRL_GET_SPEED(0))
 357:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{
 358:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		    
 359:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
 360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if( HWC_Flags.bit.bldc1  )
 361:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             {	                                           
 362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****                 SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], ALT_CTRL_GET_RAMPTIME(0)*ALT_CTRL_B
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	        SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],ALT_CTRL_GET_SPEED(0)*ALT_CTRL_BLDC_SP
 364:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             }
 365:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 366:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #endif            
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             SET_PUMP(LD_WASH_PUMP_IND, LOAD_ON)
 368:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			
 369:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 370:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 371:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  	
 372:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if(SWTC_IsExpired((SWTC_CountersType)MP_ALTCTRL_S_COUNTER)) 
 374:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{
 375:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			 	
 376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if(--uP_AltCtrl_Data.timing) 
 377:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				(void)SWTC_SetSValue ((SWTC_CountersType)MP_ALTCTRL_S_COUNTER,(SWTC_SCounterValue)ALT_CTRL_BLDC
 379:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 380:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			else
 381:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{
 382:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				
 383:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				
 384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if( Could_Alternate_from_Virtual_Sensor()==ALTERNATE_KO)
 385:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				{	/* non posso alternare */
 386:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					nRet=S_OK;
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					uP_AltCtrl_Data.timing=	1;	
 388:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					return nRet;
 389:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				}
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if ((DishRackFunctionValue & DISH_RACK_FVALUE_MSK) && ((highStatement &  ALT_CTRL_TABLE_PPOS)!=
 391:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				{/* con l'alyternato a 6 posizioni non ci sar� mail il mezzo carico attuale. 
 392:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				 anche se ci fosse sarebbe definito come zoneWash con due zone*/
 393:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					/* cesto selezionato */
 394:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					alternatecmd=(DishRackFunctionValue & DISH_RACK_FVALUE_MSK);
 395:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 396:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				} else 
 397:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				{
 398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					alternatecmd=ALT_CTRL_GET_ALT_POS(0,highStatement);
 399:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				}
 400:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			  if(uP_AltCtrl_Data.curr_pos>=PM_ALT_getPosNotDef())
 402:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			    {
 403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			      alternatecmd|=ALT_CTRL_SYNC_MSK;
 404:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			    }
 405:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				
 406:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			  
 407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	 			if (uP_AltCtrl_Data.curr_cmd!=  alternatecmd)
 408:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				{
 409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				  uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				  (void)SWTC_SetSValue((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER, (SWTC_SCounterValu
 411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			      (void)SWTC_Run((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 412:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				} 
 413:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				
 414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				LoadsReq_New[Alt_Pos].b=alternatecmd;
 415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step=ALT_CTRL_WAIT_ALTPOS_EXE;
 416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.curr_cmd=alternatecmd;
 417:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 418:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 419:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		else
 420:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{
 421:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 422:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         (void)SWTC_Run((SWTC_CountersType)MP_ALTCTRL_S_COUNTER);
 424:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     
 425:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       break;
 426:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 427:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     case ALT_CTRL_WAIT_ALTPOS_EXE:
 428:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       /* ribadire il comando alla pompa BLDC e (a)sync */  
 429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if((highStatement & ALT_CTRL_OPTION_TABLE)) 
 430:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 431:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         
 432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if(ALT_CTRL_GET_SPEED(0)) 
 433:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         {                          
 434:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
 435:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /*lint -e572*/
 436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if( HWC_Flags.bit.bldc1  )
 437:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	    {	           
 438:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	          	      
 439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           	    SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****                 SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],ALT_CTRL_GET_SPEED(0)*ALT_CTRL_BLDC
 441:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	    }
 442:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 443:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #endif  
 444:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             SET_PUMP(LD_WASH_PUMP_IND, LOAD_ON)			
 446:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         }    
 447:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }
 448:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 449:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if(PM_ALT_posReached())
 451:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 452:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	 uP_AltCtrl_Data.curr_pos=PM_ALT_getPos();
 453:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         
 454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         switch((highStatement & ALT_CTRL_OPTION)) 
 455:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		{
 456:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			case ALT_CTRL_TABLE:
 457:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			case ALT_CTRL_TABLE_PPOS:
 458:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				 /*carica il tempo di mantenimento della posizione*/
 459:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				(void)Set_SmallCounter((SWTC_CountersType)MP_ALTCTRL_S_COUNTER, (SWTC_PrescalerType)COUNTERS2_T
 461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.timing=1+ALT_CTRL_GET_MNT_TIME(0);
 462:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if ( uP_AltCtrl_Data.seq_done_could_esc)
 463:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				{
 464:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					nRet=S_OK;
 465:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				}
 466:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step=ALT_CTRL_MNT_EXE;
 468:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			break;
 469:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 470:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			case ALT_CTRL_RELATIVE_POS:
 471:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			case ALT_CTRL_ABSOLUTE_POS:
 472:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				nRet=S_OK;
 473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step=ALT_CTRL_END;
 474:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			break;
 475:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 476:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			default:
 477:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			
 478:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			break;
 479:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		  }
 480:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }
 481:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       else
 482:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	uP_AltCtrl_Data.curr_pos=PM_ALT_getPosNotDef();
 484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if((highStatement & ALT_CTRL_OPTION)==ALT_CTRL_ABSOLUTE_POS) 
 486:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         {
 487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           LoadsReq_New[Alt_Pos].b=uP_AltCtrl_Data.curr_cmd;
 488:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         }
 489:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }
 490:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       break;
 491:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 492:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     case ALT_CTRL_MNT_EXE:
 493:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       /* ribadire il comando alla pompa BLDC e (a)sync */ 
 494:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  if ( uP_AltCtrl_Data.seq_done_could_esc)
 495:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  {
 496:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			nRet=S_OK;	
 497:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  }
 498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  if(ALT_CTRL_GET_SPEED(0)) 
 499:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 500:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 501:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT
 502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if( HWC_Flags.bit.bldc1  )
 503:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 504:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	    {	      
 505:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	      SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	      SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],ALT_CTRL_GET_SPEED(0)*ALT_CTRL_BLDC_SPEED_MU
 507:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 508:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 509:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #endif
 510:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 511:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 512:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         SET_PUMP(LD_WASH_PUMP_IND, LOAD_ON)
 513:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 514:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 515:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }   
 516:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 517:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if(SWTC_IsExpired((SWTC_CountersType)MP_ALTCTRL_S_COUNTER))       
 518:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if(--uP_AltCtrl_Data.timing) 
 520:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         {
 521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		  (void)SWTC_SetSValue ((SWTC_CountersType)MP_ALTCTRL_S_COUNTER,(SWTC_SCounterValue)ALT_CTRL_MNT_
 522:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         }
 523:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         else 
 524:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         {
 525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           uPAlternateCtrl_setting_data.DataLenght-=sizeof(up_Alt_setting_data_s)/2;
 526:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           
 527:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          if( ( uPAlternateCtrl_setting_data.DataLenght )
 528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	 &&
 529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	 !( (( DishRackFunctionValue & DISH_RACK_FVALUE_MSK ) && ((highStatement &  ALT_CTRL_TABL
 530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	    &&
 531:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****  				( HWC_Flags.bit.bldc1 )
 532:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	  )
 533:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	)
 534:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          {
 535:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             /* sequenza non terminata */
 536:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             uPAlternateCtrl_setting_data.Data+=sizeof(up_Alt_setting_data_s);
 537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             uP_AltCtrl_Data.step=ALT_CTRL_BEGIN;
 538:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             
 539:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           }
 540:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           else           
 541:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           {
 542:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             /* sequenza terminata: ripete la sequenza */
 543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             uP_AltCtrl_Data.step=ALT_CTRL_INIT;
 544:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			uP_AltCtrl_Data.seq_done_could_esc=TRUE;
 545:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             nRet=S_OK;
 546:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           }
 547:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         }	
 548:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 549:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }
 550:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       
 551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       (void)SWTC_Run((SWTC_CountersType)MP_ALTCTRL_S_COUNTER);
 552:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       break;
 553:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     case ALT_CTRL_END:
 554:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       nRet=S_OK;
 555:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       break;
 556:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     default:
 557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       uP_AltCtrl_Data.step=ALT_CTRL_INIT;
 558:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       nRet=S_FALSE;
 559:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     
 560:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   }    
 561:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 562:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   return nRet;
 563:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
 564:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 565:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
 566:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Seleziona la tabella in base al mezzocarico selezionato spostando i puntatori alle tabelle del 
 567:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** up Alternato.
 568:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** La logica di selezione è la seguente:
 569:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -Nel primo tentativo viene ricercata la tabella compatibile con il mezzocarico selezionato.
 570:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -Nel caso in cui la tabella non è presente, si effettua il secondo tentativo che ricerca la 
 571:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** tebella per l'altro mezzocarico.
 572:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** -Nel caso che la tebella non è presente si ricerca la tabella per entrambi i cesti
 573:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 574:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** In tutti i tentativi vengono prese in considerazione le tabelle con velocità e tempo di 
 575:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** mantenimento non nulli, escludendo le tabelle adoperate per la movimentazione dell'alternato.
 576:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 577:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 578:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] dishrackselection
 579:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****  
 580:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \return     none
 581:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \attention  modifica uPAlternateCtrl_setting_data
 582:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version		1.0.0
 583:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date 			11/03/2008
 584:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author			Roberto Fioravanti
 585:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             
 586:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 587:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static void ALT_SelectTableRuleByDishRackSelection(uint8_t dishrackselection,uint8_t highStatement)
 588:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
 589:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t found=FALSE;
 590:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t drdatafound=FALSE;
 591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t i=0,nrows=uPAlternateCtrl_setting_data.DataLenght/(sizeof(up_Alt_setting_data_s)/2), numT
 592:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 593:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   while(!found) 
 594:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   {
 595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     while(((i/sizeof(up_Alt_setting_data_s))<nrows) && (!drdatafound)) 
 596:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     {      
 597:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       /* posizione cesto della riga (i/sizeof(up_Alt_setting_data_s))-esima */
 598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if((ALT_CTRL_GET_ALT_POS(i,highStatement)==dishrackselection) && ( ALT_CTRL_GET_MNT_TIME(i)!=
 599:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {
 600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         drdatafound=TRUE;
 601:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       } else
 602:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       {        
 603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         i+=sizeof(up_Alt_setting_data_s);
 604:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       }
 605:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     }
 606:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     
 607:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     if ( drdatafound )
 609:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{
 610:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			found = TRUE;
 611:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 612:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		else
 613:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{
 614:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			i=0;
 615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			numTentResearch ++;
 616:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			
 617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if ( numTentResearch == 1 )
 618:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{
 619:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if ( dishrackselection == b0 )
 620:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				{
 621:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					dishrackselection = b1;
 622:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				}
 623:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				else
 624:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				{
 625:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					dishrackselection = b0;
 626:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				}
 627:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 628:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			else if ( numTentResearch == 2 )
 629:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{
 630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				dishrackselection = 0;
 631:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 632:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			else
 633:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{
 634:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				/* tutti i tentativi non hanno prodotto un campo dati corretto 
 635:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				   prendo il primo */
 636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				i = 0;
 637:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				found = TRUE;				    			
 638:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 639:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 640:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 641:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   }
 642:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uPAlternateCtrl_setting_data.Data+=i;
 644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uPAlternateCtrl_setting_data.DataLenght-=i/(sizeof(up_Alt_setting_data_s)/2);
 645:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 646:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 647:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   /* modifica uPAlternateCtrl_setting_data.Data */
 648:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
 649:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 650:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
 651:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Verifica lo stato del sensore virtuale , in base al quale si decide di alternare o meno
 652:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 653:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] none
 654:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****  
 655:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \return     none
 656:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version		1.0.0
 657:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date 			01/12/2011
 658:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author			Emanuela Antognoli
 659:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             
 660:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static uint8_t Could_Alternate_from_Virtual_Sensor ( void)
 662:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
   9                             		.loc 1 662 0
 663:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		/* LR la pompa resta attiva, e si aspetta che il riconoscimento sporco/schiuma */
 664:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	if(HWC_Flags.bit.vs_wash_presence)
  10                             		.loc 1 664 0
  11 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
  12 0006 DC E1                   		mov.W	[r14], r1
  13 0008 75 21 10                		and #16, r1
  14 000b 5F 11                   		movu.W	r1, r1
  15 000d 61 01                   		cmp	#0, r1
  16 000f 20 31                   		beq	.L2
 665:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	{
 666:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #if (VIRTUAL_SENSOR_ENABLE == 1)
 667:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if ( dirty_foam_Data.filter_foam_on )
  17                             		.loc 1 667 0
  18 0011 FB E2 00 00 00 00       		mov.L	#_dirty_foam_Data, r14
  19 0017 CD EE 01                		mov.B 1[r14], r14
  20 001a 64 8E                   		and #8, r14
  21 001c 21 22                   		bne	.L4
 668:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{/* se entro qui il riconoscimento sporco e schiuma sta intervenendo e 
 669:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		quindi l'alternato è in pausa*/
 670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			return ALTERNATE_KO;		            	            
 671:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 672:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** #endif
 673:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	
 674:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	    if (  TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)) )
  22                             		.loc 1 674 0
  23 001e FB E2 00 00 00 00       		mov.L	#_GIValid, r14
  24 0024 DC E1                   		mov.W	[r14], r1
  25 0026 76 21 00 04             		and #0x400, r1
  26 002a 5F 11                   		movu.W	r1, r1
  27 002c 61 01                   		cmp	#0, r1
  28 002e 20 12                   		beq	.L2
  29                             	.LBB6:
  30                             	.LBB7:
 675:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{	
 676:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			switch(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH])
  31                             		.loc 1 676 0
  32 0030 FB E2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r14
  33                             	.LBE7:
  34                             	.LBE6:
 661:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static uint8_t Could_Alternate_from_Virtual_Sensor ( void)
  35                             		.loc 1 661 0
  36 0036 58 E1                   		movu.B	[r14], r1
  37 0038 61 21                   		cmp	#2, r1
  38 003a FC DB 11                		scne.L	r1
  39 003d 0B                      		bra	.L2
  40                             	.L4:
 670:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			return ALTERNATE_KO;		            	            
  41                             		.loc 1 670 0
  42 003e 66 11                   		mov	#1, r1
  43                             		.balign 2,3,2
  44                             	.L2:
 677:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{ 
 678:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				case 2:
 679:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					return ALTERNATE_OK  ;
 680:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 681:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				  break;
 682:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 683:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				case 0:
 684:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				case 3:
 685:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				case 1:
 686:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				default:/* comprende anche lo stato 5*/
 687:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				return ALTERNATE_KO;				    					
 688:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}	            
 689:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 690:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 691:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	}	
 692:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	/* se il valore del sensore non è ready comunque provo ad alternare oppure non ci sono i sensori*
 693:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	return ALTERNATE_OK;
 694:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
  45                             		.loc 1 694 0
  46 0040 75 21 11                		and #17, r1
  47 0043 02                      		rts
  48                             	.LFE4:
  50                             		.section	.text.ALT_uP_AlternateControl_Exe,"ax",@progbits
  51                             		.global	_ALT_uP_AlternateControl_Exe
  53                             	_ALT_uP_AlternateControl_Exe:
  54                             	.LFB0:
 121:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
  55                             		.loc 1 121 0
  56                             	.LVL0:
  57 0000 6E 7D                   		pushm	r7-r13
  58                             	.LCFI0:
  59                             	.LVL1:
 125:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   if ( (FALSE == Interpreter_Data[0].stepInitialized) || (FALSE == Interpreter_Data[0].optionalStep
  60                             		.loc 1 125 0
  61 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
  62 0008 89 77                   		mov.B	4[r7], r7
  63 000a 64 67                   		and #6, r7
  64 000c 61 67                   		cmp	#6, r7
  65 000e 12                      		beq	.L7
  66                             	.LBB16:
  67                             	.LBB17:
 175:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uP_AltCtrl_Data.step = ALT_CTRL_INIT;
  68                             		.loc 1 175 0
  69 000f FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
  70 0015 38 73 06                		bra	.L12
  71                             	.L7:
  72                             	.LBE17:
  73                             	.LBE16:
 138:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     if ( uPDoorStatus == UP_DOOR_WAIT )
  74                             		.loc 1 138 0
  75 0018 FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
  76 001e 58 77                   		movu.B	[r7], r7
  77 0020 61 07                   		cmp	#0, r7
  78 0022 21 27                   		bne	.L9
 141:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  (void)SWTC_Stop((SWTC_CountersType)MP_ALTCTRL_S_COUNTER);
  79                             		.loc 1 141 0
  80 0024 66 A1                   		mov	#10, r1
  81                             	.LVL2:
  82 0026 05 00 00 00             		bsr	_SWTC_Stop
  83                             	.LVL3:
 143:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  if (uP_AltCtrl_Data.step == ALT_CTRL_WAIT_ALTPOS_EXE)
  84                             		.loc 1 143 0
  85 002a FB A2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r10
  86 0030 CD A7 04                		mov.B	4[r10], r7
  87 0033 EF 7B                   		mov.L	r7, r11
  88 0035 76 2B FC 00             		and #0xfc, r11
  89 0039 75 5B 10                		cmp	#16, r11
  90 003c 3B 58 06                		bne	.L70
 148:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	uP_AltCtrl_Data.step= ALT_CTRL_BEGIN;
  91                             		.loc 1 148 0
  92 003f 64 37                   		and #3, r7
  93 0041 78 27                   		bset #2, r7
  94 0043 C7 A7 04                		mov.B	r7, 4[r10]
  95 0046 38 4E 06                		bra	.L70
  96                             	.LVL4:
  97                             	.L9:
  98 0049 CF 1A                   		mov.B	r1, r10
  99 004b CF 2C                   		mov.B	r2, r12
 100                             	.LVL5:
 101                             	.LBB18:
 102                             	.LBB19:
 233:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   if(SWTC_IsExpired(MP_ALTERNATE_UP_VS_FILTER_S_TIMER)|| (HWC_Flags.bit.vs_wash_presence==0))
 103                             		.loc 1 233 0
 104 004d 66 B1                   		mov	#11, r1
 105                             	.LVL6:
 106 004f 05 00 00 00             		bsr	_SWTC_IsExpired
 107                             	.LVL7:
 108 0053 61 01                   		cmp	#0, r1
 109 0055 21 13                   		bne	.L10
 110 0057 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 111 005d DC 77                   		mov.W	[r7], r7
 112 005f 75 27 10                		and #16, r7
 113 0062 5F 77                   		movu.W	r7, r7
 114 0064 61 07                   		cmp	#0, r7
 115 0066 21 16                   		bne	.L11
 116                             		.balign 2,3,5
 117                             	.L10:
 235:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     uP_AltCtrl_Data.SV_invalid_4alt=FALSE;
 118                             		.loc 1 235 0
 119 0068 FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 120 006e CD 7B 04                		mov.B	4[r7], r11
 121 0071 7A 0B                   		bclr	#0, r11
 122 0073 C7 7B 04                		mov.B	r11, 4[r7]
 236:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     (void)SWTC_Stop((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 123                             		.loc 1 236 0
 124 0076 66 B1                   		mov	#11, r1
 125 0078 05 00 00 00             		bsr	_SWTC_Stop
 126                             	.LVL8:
 127                             		.balign 2,3,5
 128                             	.L11:
 239:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   switch(uP_AltCtrl_Data.step) 
 129                             		.loc 1 239 0
 130 007c FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 131 0082 59 7B 04                		movu.B	4[r7], r11
 132 0085 68 2B                   		shlr	#2, r11
 133 0087 EF 7E                   		mov.L	r7, r14
 134 0089 61 6B                   		cmp	#6, r11
 135 008b 25 05 38 FB 05          		bgtu	.L12
 136 0090 FB 72 00 00 00 00       		mov.L	#.L20, r7
 137 0096 FE 6B 77                		mov.L	[r11,r7], r7
 138                             		
 139 0099 7F 07                   	1:jmp	r7
 140                             		.section	.rodata.ALT_uP_AlternateControl_Exe,"a",@progbits
 141                             		.balign 4
 142                             		.balign 4
 143                             	.L20:
 144 0000 00 00 00 9B             		.long .L13
 145 0004 00 00 01 24             		.long .L14
 146 0008 00 00 02 4D             		.long .L15
 147 000c 00 00 03 12             		.long .L16
 148 0010 00 00 04 63             		.long .L17
 149 0014 00 00 05 7F             		.long .L18
 150 0018 00 00 06 91             		.long .L74
 151                             		.section	.text.ALT_uP_AlternateControl_Exe
 152                             	.L13:
 243:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       	if (BasicLoader(PTR_UP_ALTERNATECONTROL, lowStatement, &uPAlternateCtrl_setting_data) != S_O
 153                             		.loc 1 243 0
 154 009b 5B C2                   		movu.B	r12, r2
 155 009d 75 41 15                		mov	#21, r1
 156 00a0 FB 32 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r3
 157 00a6 05 00 00 00             		bsr	_BasicLoader
 158                             	.LVL9:
 159 00aa 5B 11                   		movu.B	r1, r1
 160 00ac 61 01                   		cmp	#0, r1
 161 00ae 13                      		beq	.L21
 162 00af 2E 53                   		bra	.L157
 163                             	.L21:
 249:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if ( (highStatement & ALT_CTRL_OPTION) == ALT_CTRL_TABLE_PPOS)
 164                             		.loc 1 249 0
 165 00b1 EF A7                   		mov.L	r10, r7
 166 00b3 75 27 30                		and #48, r7
 167 00b6 75 57 30                		cmp	#48, r7
 168 00b9 21 5A                   		bne	.L22
 169                             	.LVL10:
 170                             	.LBB20:
 171                             	.LBB21:
 695:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 696:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 697:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 698:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
 699:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Seleziona la tabeRestituisce il displacement del up Alternato dela tabella della zone wash selezion
 700:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 701:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 702:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] ZoneWashFunctionValue 
 703:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in] uPAlCTRL_setting_preview tabella dei displacement
 704:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 705:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \return     displacement
 706:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 707:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version		1.0.0
 708:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date 			26/03/2012
 709:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author			Emanuela Antongoli
 710:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             
 711:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 712:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** static uint8_t ALT_SelectTableRuleByZoneWashSelection(uint8_t regulation_value) 
 713:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
 714:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	uint8_t found=FALSE;
 715:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	uint8_t drdatafound=FALSE;
 716:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	struct
 717:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	{
 718:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		uint8_t reg_val : 4;  
 719:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		uint8_t free    : 4;
 720:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		uint8_t displacement;
 721:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 722:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	}up_reg_displ_setting_s;
 723:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 724:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****  	uint8_t i=0,nrows=uPAlternateCtrl_setting_data.DataLenght/(sizeof(up_reg_displ_setting_s)/2);
 172                             		.loc 1 724 0
 173 00bb FB B2 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r11
 174                             	.LVL11:
 725:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 726:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   
 727:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	while(!found) 
 728:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	{/* il numero di byte per ogni informazione  dacercare � pari a 2*/
 729:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		while(((i/sizeof(up_reg_displ_setting_s))<nrows) && (!drdatafound)) 
 730:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{      
 731:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		  /* posizione cesto della riga (i/sizeof(up_Alt_setting_data_s))-esima */
 732:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if ( regulation_value <=( OFFS_B(uPAlternateCtrl_setting_data.Data,i)& 0x0F) )
 175                             		.loc 1 733 0
 176 00c1 EC B7                   		mov.L	[r11], r7
 729:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		while(((i/sizeof(up_reg_displ_setting_s))<nrows) && (!drdatafound)) 
 177                             		.loc 1 729 0
 178 00c3 59 BC 05                		movu.B	5[r11], r12
 179                             	.LVL12:
 180                             		.loc 1 733 0
 181 00c6 FB B2 00 00 00 00       		mov.L	#_ZoneWashFunctionValue, r11
 182                             	.LVL13:
 183 00cc 58 BE                   		movu.B	[r11], r14
 184 00ce 2E 0C                   		bra	.L23
 185                             	.LVL14:
 186                             	.L25:
 187                             	.LBE21:
 188 00d0 CC DB                   		mov.B	[r13], r11
 189                             	.LBB22:
 190 00d2 64 FB                   		and #15, r11
 191 00d4 47 BE                   		cmp	r11, r14
 192 00d6 2B 12                   		ble	.L24
 734:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{
 735:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				drdatafound=TRUE;
 736:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}else 
 737:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			{        
 738:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				i+=sizeof(up_reg_displ_setting_s);
 193                             		.loc 1 738 0
 194 00d8 62 21                   		add	#2, r1
 195                             	.LVL15:
 196                             		.balign 2,3,1
 197                             	.L23:
 733:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if ( regulation_value <=( OFFS_B(uPAlternateCtrl_setting_data.Data,i)& 0x0F) )
 198                             		.loc 1 733 0
 199 00da 5B 1B                   		movu.B	r1, r11
 200 00dc FF 2D B7                		add	r11, r7, r13
 201                             	.LVL16:
 729:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		while(((i/sizeof(up_reg_displ_setting_s))<nrows) && (!drdatafound)) 
 202                             		.loc 1 729 0
 203 00df 68 1B                   		shlr	#1, r11
 204 00e1 47 BC                   		cmp	r11, r12
 205 00e3 24 ED                   		bgtu	.L25
 739:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			}
 740:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 741:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 742:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 743:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if (! drdatafound )
 744:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		{/* tutti i tentativi non hanno prodotto un campo dati corretto 
 745:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			   prendo il primo */
 746:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			i=0;
 206                             		.loc 1 746 0
 207 00e5 66 01                   		mov	#0, r1
 208                             	.LVL17:
 209 00e7 03                      		.balign 2,3,1
 210                             	.L24:
 747:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		}
 748:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 749:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		found = TRUE;				    			
 750:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		
 751:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 752:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	}
 753:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	return (OFFS_B(uPAlternateCtrl_setting_data.Data,i+1));
 211                             		.loc 1 753 0
 212 00e8 5B 11                   		movu.B	r1, r1
 213 00ea 4B 17                   		add	r1, r7
 214                             	.LBE22:
 215                             	.LBE20:
 252:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if (BasicLoader(PTR_UP_ALTERNATECONTROL, table_displacement, &uPAlternateCtrl_setting_data) != S
 216                             		.loc 1 252 0
 217 00ec B0 7A                   		movu.B	1[r7], r2
 218 00ee 75 41 15                		mov	#21, r1
 219                             	.LVL18:
 220 00f1 FB 32 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r3
 221                             	.LVL19:
 222 00f7 05 00 00 00             		bsr	_BasicLoader
 223                             	.LVL20:
 224 00fb 76 21 FF 00             		and #0xff, r1
 225 00ff 20 14                   		beq	.L22
 226                             	.LVL21:
 227 0101 03                      		.balign 2,3,5
 228                             	.L157:
 254:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step = ALT_CTRL_ERROR;
 229                             		.loc 1 254 0
 230 0102 FB A2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r10
 231                             	.LVL22:
 232 0108 CD A7 04                		mov.B	4[r10], r7
 233 010b 64 37                   		and #3, r7
 234 010d 75 37 1C                		or	#28, r7
 235 0110 38 3C 04                		bra	.L156
 236                             	.LVL23:
 237                             	.L22:
 260:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		uP_AltCtrl_Data.step=ALT_CTRL_BEGIN;
 238                             		.loc 1 260 0
 239 0113 FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 240 0119 CD B7 04                		mov.B	4[r11], r7
 241 011c 64 37                   		and #3, r7
 242 011e 78 27                   		bset #2, r7
 243 0120 C7 B7 04                		mov.B	r7, 4[r11]
 244 0123 03                      		.balign 2,3,1
 245                             	.L14:
 264:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		switch((highStatement & ALT_CTRL_OPTION)) 
 246                             		.loc 1 264 0
 247 0124 EF A7                   		mov.L	r10, r7
 248 0126 75 27 30                		and #48, r7
 249 0129 75 57 10                		cmp	#16, r7
 250 012c 3A 98 00                		beq	.L28
 251 012f 24 09                   		bgtu	.L30
 252 0131 61 07                   		cmp	#0, r7
 253 0133 20 14                   		beq	.L27
 254 0135 38 FC 00                		bra	.L26
 255                             	.L30:
 256 0138 75 57 20                		cmp	#32, r7
 257 013b 3A E7 00                		beq	.L29
 258 013e 75 57 30                		cmp	#48, r7
 259 0141 3B F0 00                		bne	.L26
 260 0144 38 DE 00                		bra	.L29
 261                             	.L27:
 267:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		 	if( Could_Alternate_from_Virtual_Sensor()==ALTERNATE_KO)
 262                             		.loc 1 267 0
 263 0147 05 00 00 00             		bsr	_Could_Alternate_from_Virtual_Sensor
 264                             	.LVL24:
 265 014b 5B 11                   		movu.B	r1, r1
 266 014d 61 11                   		cmp	#1, r1
 267 014f 3A 47 05                		beq	.L8
 268                             	.LVL25:
 275:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    altpos=uP_AltCtrl_Data.curr_pos;
 269                             		.loc 1 275 0
 270 0152 FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 271 0158 89 F7                   		mov.B	6[r7], r7
 272                             	.LVL26:
 277:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    if(altpos>=PM_ALT_getPosNotDef( ))
 273                             		.loc 1 277 0
 274 015a 05 00 00 00             		bsr	_PM_ALT_getPosNotDef
 275                             	.LVL27:
 276 015e 5B 7B                   		movu.B	r7, r11
 277 0160 5B 11                   		movu.B	r1, r1
 278 0162 47 1B                   		cmp	r1, r11
 279 0164 22 17                   		bgeu	.L73
 282:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		      alternatecmd=altpos+1;
 280                             		.loc 1 282 0
 281 0166 62 17                   		add	#1, r7
 282                             	.LVL28:
 283:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		      alternatecmd%=PM_ALT_getNumPos();
 283                             		.loc 1 283 0
 284 0168 05 00 00 00             		bsr	_PM_ALT_getNumPos
 285                             	.LVL29:
 286 016c 5B 77                   		movu.B	r7, r7
 287                             	.LVL30:
 288 016e 5B 11                   		movu.B	r1, r1
 289 0170 EF 7B                   		mov.L	r7, r11
 290                             	.LVL31:
 291 0172 FC 27 1B                		divu	r1, r11
 292 0175 4F 1B                   		mul	r1, r11
 293 0177 FF 0B B7                		sub	r11, r7, r11
 294                             	.LVL32:
 295 017a 0C                      		bra	.L31
 296                             	.LVL33:
 297                             	.L73:
 279:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		      alternatecmd=ALT_CTRL_SYNC_MSK;
 298                             		.loc 1 279 0
 299 017b 75 4B 10                		mov	#16, r11
 300                             	.LVL34:
 301                             		.balign 2,3,5
 302                             	.L31:
 286:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			 uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 303                             		.loc 1 286 0
 304 017e FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 305 0184 CD 7E 04                		mov.B	4[r7], r14
 306 0187 78 0E                   		bset	#0, r14
 307 0189 C7 7E 04                		mov.B	r14, 4[r7]
 287:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			(void)SWTC_SetSValue((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER, (SWTC_SCounterValue)O
 308                             		.loc 1 287 0
 309 018c FB C2 00 00 00 00       		mov.L	#_Tab_SFT_MotorWash, r12
 310 0192 EC CC                   		mov.L	[r12], r12
 311 0194 66 B1                   		mov	#11, r1
 312 0196 CD C2 01                		mov.B	1[r12], r2
 313 0199 05 00 00 00             		bsr	_SWTC_SetSValue
 314                             	.LVL35:
 288:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		    (void)SWTC_Run((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 315                             		.loc 1 288 0
 316 019d 66 B1                   		mov	#11, r1
 317 019f 05 00 00 00             		bsr	_SWTC_Run
 318                             	.LVL36:
 289:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    LoadsReq_New[Alt_Pos].b=alternatecmd;
 319                             		.loc 1 289 0
 320 01a3 FB C2 00 00 00 00       		mov.L	#_Alt_Pos, r12
 321 01a9 58 CC                   		movu.B	[r12], r12
 322 01ab FB D2 00 00 00 00       		mov.L	#_LoadsReq_New, r13
 323 01b1 FE 0C DB                		mov.B	r11, [r12,r13]
 290:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.step=ALT_CTRL_WAIT_ALTPOS_EXE;
 324                             		.loc 1 290 0
 325 01b4 CD 7E 04                		mov.B	4[r7], r14
 326 01b7 64 3E                   		and #3, r14
 327 01b9 78 4E                   		bset #4, r14
 328 01bb C7 7E 04                		mov.B	r14, 4[r7]
 291:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			 uP_AltCtrl_Data.curr_cmd=alternatecmd;
 329                             		.loc 1 291 0
 330 01be C7 7B 07                		mov.B	r11, 7[r7]
 331 01c1 38 83 00                		bra	.L32
 332                             	.LVL37:
 333                             	.L28:
 296:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		  	if( Could_Alternate_from_Virtual_Sensor()==ALTERNATE_KO)
 334                             		.loc 1 296 0
 335 01c4 05 00 00 00             		bsr	_Could_Alternate_from_Virtual_Sensor
 336                             	.LVL38:
 337 01c8 5B 11                   		movu.B	r1, r1
 338 01ca 61 11                   		cmp	#1, r1
 339 01cc 3A C5 04                		beq	.L74
 340                             	.LVL39:
 301:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    alternatecmd=ALT_CTRL_GET_ALT_POS(0,highStatement);
 341                             		.loc 1 301 0
 342 01cf FB 72 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r7
 343                             	.LVL40:
 344 01d5 EC 77                   		mov.L	[r7], r7
 345                             	.LVL41:
 346 01d7 CC 7E                   		mov.B	[r7], r14
 347 01d9 64 3E                   		and #3, r14
 302:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    alternatecmd|=ALT_CTRL_SYNC_MSK;  		    
 348                             		.loc 1 302 0
 349 01db 78 4E                   		bset #4, r14
 350                             	.LVL42:
 304:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    LoadsReq_New[Alt_Pos].b=alternatecmd;
 351                             		.loc 1 304 0
 352 01dd FB 72 00 00 00 00       		mov.L	#_Alt_Pos, r7
 353 01e3 58 77                   		movu.B	[r7], r7
 354 01e5 FB B2 00 00 00 00       		mov.L	#_LoadsReq_New, r11
 355 01eb FE 07 BE                		mov.B	r14, [r7,r11]
 305:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.curr_cmd=alternatecmd;
 356                             		.loc 1 305 0
 357 01ee FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 358 01f4 C7 7E 07                		mov.B	r14, 7[r7]
 307:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 359                             		.loc 1 307 0
 360 01f7 CD 7B 04                		mov.B	4[r7], r11
 361 01fa 78 0B                   		bset	#0, r11
 362 01fc C7 7B 04                		mov.B	r11, 4[r7]
 308:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			(void)SWTC_SetSValue((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER, (SWTC_SCounterValue)O
 363                             		.loc 1 308 0
 364 01ff FB B2 00 00 00 00       		mov.L	#_Tab_SFT_MotorWash, r11
 365 0205 EC BB                   		mov.L	[r11], r11
 366 0207 66 B1                   		mov	#11, r1
 367 0209 CD B2 01                		mov.B	1[r11], r2
 368 020c 05 00 00 00             		bsr	_SWTC_SetSValue
 369                             	.LVL43:
 309:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		    (void)SWTC_Run((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 370                             		.loc 1 309 0
 371 0210 66 B1                   		mov	#11, r1
 372 0212 05 00 00 00             		bsr	_SWTC_Run
 373                             	.LVL44:
 310:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			uP_AltCtrl_Data.step=ALT_CTRL_WAIT_ALTPOS_EXE;
 374                             		.loc 1 310 0
 375 0216 CD 7B 04                		mov.B	4[r7], r11
 376 0219 64 3B                   		and #3, r11
 377 021b 78 4B                   		bset #4, r11
 378 021d C7 7B 04                		mov.B	r11, 4[r7]
 379 0220 2E 24                   		bra	.L32
 380                             	.L29:
 318:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.step=ALT_CTRL_SELECT_TABLE_EXE;
 381                             		.loc 1 318 0
 382 0222 FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 383 0228 CD B7 04                		mov.B	4[r11], r7
 384 022b 64 37                   		and #3, r7
 385 022d 78 37                   		bset #3, r7
 386 022f 2E 11                   		bra	.L155
 387                             	.L26:
 323:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   		    uP_AltCtrl_Data.step=ALT_CTRL_ERROR;
 388                             		.loc 1 323 0
 389 0231 FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 390 0237 CD B7 04                		mov.B	4[r11], r7
 391 023a 64 37                   		and #3, r7
 392 023c 75 37 1C                		or	#28, r7
 393 023f 03                      		.balign 2,3,5
 394                             	.L155:
 395 0240 C7 B7 04                		mov.B	r7, 4[r11]
 396 0243 03                      		.balign 2,3,1
 397                             	.L32:
 326:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if((highStatement &  ALT_CTRL_OPTION_TABLE) != ALT_CTRL_TABLE)
 398                             		.loc 1 326 0
 399 0244 EF A7                   		mov.L	r10, r7
 400 0246 75 27 20                		and #32, r7
 401 0249 1C                      		bne	.L15
 402 024a 38 4A 04                		bra	.L70
 403                             	.L15:
 333:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if ((DishRackFunctionValue & DISH_RACK_FVALUE_MSK)&& ((highStatement &  ALT_CTRL_TABLE_PPOS)!
 404                             		.loc 1 333 0
 405 024d FB 72 00 00 00 00       		mov.L	#_DishRackFunctionValue, r7
 406 0253 CC 7E                   		mov.B	[r7], r14
 407 0255 FD 74 CE 0F             		tst	#15, r14
 408 0259 20 73                   		beq	.L33
 409 025b EF A7                   		mov.L	r10, r7
 410 025d 75 27 30                		and #48, r7
 411 0260 75 57 30                		cmp	#48, r7
 412 0263 20 69                   		beq	.L33
 413                             	.LVL45:
 414                             	.LBB23:
 415                             	.LBB24:
 591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t i=0,nrows=uPAlternateCtrl_setting_data.DataLenght/(sizeof(up_Alt_setting_data_s)/2), numT
 416                             		.loc 1 591 0
 417 0265 FB 72 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r7
 418 026b 98 F3                   		mov.W	4[r7], r3
 419 026d 5F 3C                   		movu.W	r3, r12
 420 026f 68 1C                   		shlr	#1, r12
 421                             	.LVL46:
 598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if((ALT_CTRL_GET_ALT_POS(i,highStatement)==dishrackselection) && ( ALT_CTRL_GET_MNT_TIME(i)!=
 422                             		.loc 1 598 0
 423 0271 EC 72                   		mov.L	[r7], r2
 591:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uint8_t i=0,nrows=uPAlternateCtrl_setting_data.DataLenght/(sizeof(up_Alt_setting_data_s)/2), numT
 424                             		.loc 1 591 0
 425 0273 66 0B                   		mov	#0, r11
 595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     while(((i/sizeof(up_Alt_setting_data_s))<nrows) && (!drdatafound)) 
 426                             		.loc 1 595 0
 427 0275 5B CC                   		movu.B	r12, r12
 428 0277 2E 4D                   		bra	.L151
 429                             	.LVL47:
 430                             	.L38:
 598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if((ALT_CTRL_GET_ALT_POS(i,highStatement)==dishrackselection) && ( ALT_CTRL_GET_MNT_TIME(i)!=
 431                             		.loc 1 598 0
 432 0279 FE 45 24                		mov.B	[r5,r2], r4
 433 027c EF 4D                   		mov.L	r4, r13
 434 027e 64 3D                   		and #3, r13
 435 0280 47 FD                   		cmp	r15, r13
 436 0282 18                      		bne	.L35
 437 0283 FD 78 C4 FC 00          		tst	#0xfc, r4
 438 0288 1D                      		bne	.L75
 439 0289 03                      		.balign 2,3,1
 440                             	.L35:
 603:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         i+=sizeof(up_Alt_setting_data_s);
 441                             		.loc 1 603 0
 442 028a 62 47                   		add	#4, r7
 443                             	.LVL48:
 444 028c 0C                      		bra	.L152
 445                             	.L75:
 600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         drdatafound=TRUE;
 446                             		.loc 1 600 0
 447 028d 66 11                   		mov	#1, r1
 448                             	.LVL49:
 449 028f 03                      		.balign 2,3,1
 450                             	.L152:
 595:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     while(((i/sizeof(up_Alt_setting_data_s))<nrows) && (!drdatafound)) 
 451                             		.loc 1 595 0
 452 0290 5B 75                   		movu.B	r7, r5
 453 0292 FD 82 5D                		shlr	#2, r5, r13
 454 0295 5B 14                   		movu.B	r1, r4
 455 0297 47 DC                   		cmp	r13, r12
 456 0299 25 09                   		bleu	.L37
 457 029b 61 04                   		cmp	#0, r4
 458 029d 20 DC                   		beq	.L38
 459 029f 38 FB 03                		bra	.L39
 460                             	.L37:
 608:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     if ( drdatafound )
 461                             		.loc 1 608 0
 462 02a2 61 04                   		cmp	#0, r4
 463 02a4 3B F6 03                		bne	.L39
 464                             	.LVL50:
 615:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			numTentResearch ++;
 465                             		.loc 1 615 0
 466 02a7 62 1B                   		add	#1, r11
 467                             	.LVL51:
 617:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if ( numTentResearch == 1 )
 468                             		.loc 1 617 0
 469 02a9 5B B7                   		movu.B	r11, r7
 470 02ab 61 17                   		cmp	#1, r7
 471 02ad 21 0D                   		bne	.L40
 619:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if ( dishrackselection == b0 )
 472                             		.loc 1 619 0
 473 02af 5B EE                   		movu.B	r14, r14
 625:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					dishrackselection = b0;
 474                             		.loc 1 625 0
 475 02b1 61 1E                   		cmp	#1, r14
 476 02b3 FC DB E0                		sceq.L	r14
 477 02b6 62 1E                   		add	#1, r14
 478 02b8 2E 0C                   		bra	.L151
 479                             	.L40:
 628:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			else if ( numTentResearch == 2 )
 480                             		.loc 1 628 0
 481 02ba 61 27                   		cmp	#2, r7
 482 02bc 3A F4 03                		beq	.L77
 636:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				i = 0;
 483                             		.loc 1 636 0
 484 02bf CF 47                   		mov.B	r4, r7
 485 02c1 38 D9 03                		bra	.L39
 486                             	.LVL52:
 487                             	.L151:
 600:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         drdatafound=TRUE;
 488                             		.loc 1 600 0
 489 02c4 66 07                   		mov	#0, r7
 490 02c6 CF 71                   		mov.B	r7, r1
 598:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if((ALT_CTRL_GET_ALT_POS(i,highStatement)==dishrackselection) && ( ALT_CTRL_GET_MNT_TIME(i)!=
 491                             		.loc 1 598 0
 492 02c8 5B EF                   		movu.B	r14, r15
 493 02ca 2E C6                   		bra	.L152
 494                             	.LVL53:
 495                             	.L33:
 496                             	.LBE24:
 497                             	.LBE23:
 339:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       uP_AltCtrl_Data.timing=1;
 498                             		.loc 1 339 0
 499 02cc FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 500 02d2 3C 75 01                		mov.B	#1, 5[r7]
 342:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if(  HWC_Flags.bit.bldc1 )
 501                             		.loc 1 342 0
 502 02d5 FB B2 00 00 00 00       		mov.L	#_HWC_Flags, r11
 503 02db DC BB                   		mov.W	[r11], r11
 504 02dd 76 2B 00 40             		and #0x4000, r11
 505 02e1 5F BB                   		movu.W	r11, r11
 506 02e3 61 0B                   		cmp	#0, r11
 507 02e5 20 13                   		beq	.L44
 345:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	      uP_AltCtrl_Data.timing+=ALT_CTRL_GET_RAMPTIME(0);
 508                             		.loc 1 345 0
 509 02e7 FB B2 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r11
 510 02ed EC BB                   		mov.L	[r11], r11
 511 02ef CD BB 02                		mov.B	2[r11], r11
 512 02f2 62 1B                   		add	#1, r11
 513 02f4 C7 7B 05                		mov.B	r11, 5[r7]
 514 02f7 03                      		.balign 2,3,1
 515                             	.L44:
 348:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_ALTCTRL_S_COUNTER, (SWTC_PrescalerType)COUNTERS2_TBA
 516                             		.loc 1 348 0
 517 02f8 66 A1                   		mov	#10, r1
 518 02fa 66 12                   		mov	#1, r2
 519 02fc 66 03                   		mov	#0, r3
 520 02fe 05 00 00 00             		bsr	_Set_SmallCounter
 521                             	.LVL54:
 351:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		uP_AltCtrl_Data.step=ALT_CTRL_WAIT_RAMP_EXE;
 522                             		.loc 1 351 0
 523 0302 FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 524 0308 CD B7 04                		mov.B	4[r11], r7
 525 030b 64 37                   		and #3, r7
 526 030d 65 C7                   		or	#12, r7
 527 030f C7 B7 04                		mov.B	r7, 4[r11]
 528                             		.balign 2,3,5
 529                             	.L16:
 356:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if(ALT_CTRL_GET_SPEED(0))
 530                             		.loc 1 356 0
 531 0312 FB 72 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r7
 532 0318 EC 77                   		mov.L	[r7], r7
 533 031a 59 7B 01                		movu.B	1[r7], r11
 534 031d 61 0B                   		cmp	#0, r11
 535 031f 20 5F                   		beq	.L45
 360:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if( HWC_Flags.bit.bldc1  )
 536                             		.loc 1 360 0
 537 0321 FB B2 00 00 00 00       		mov.L	#_HWC_Flags, r11
 538 0327 DC BB                   		mov.W	[r11], r11
 539 0329 76 2B 00 40             		and #0x4000, r11
 540 032d 5F BB                   		movu.W	r11, r11
 541 032f 61 0B                   		cmp	#0, r11
 542 0331 20 39                   		beq	.L46
 362:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****                 SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], ALT_CTRL_GET_RAMPTIME(0)*ALT_CTRL_B
 543                             		.loc 1 362 0
 544 0333 FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 545 0339 59 7B 02                		movu.B	2[r7], r11
 546 033c 63 5B                   		mul	#5, r11
 547 033e 68 8B                   		shlr	#8, r11
 548 0340 C7 EB 04                		mov.B	r11, 4[r14]
 549 0343 CD 7B 02                		mov.B	2[r7], r11
 550 0346 63 5B                   		mul	#5, r11
 551 0348 C7 EB 05                		mov.B	r11, 5[r14]
 363:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	        SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],ALT_CTRL_GET_SPEED(0)*ALT_CTRL_BLDC_SP
 552                             		.loc 1 363 0
 553 034b 59 7B 01                		movu.B	1[r7], r11
 554 034e 75 1B 19                		mul	#25, r11
 555 0351 68 8B                   		shlr	#8, r11
 556 0353 C7 EB 02                		mov.B	r11, 2[r14]
 557 0356 CD 7B 01                		mov.B	1[r7], r11
 558 0359 75 1B 19                		mul	#25, r11
 559 035c C7 EB 03                		mov.B	r11, 3[r14]
 560 035f B0 7F                   		movu.B	1[r7], r7
 561 0361 61 07                   		cmp	#0, r7
 562 0363 FC DB 71                		scne.L	r7
 563 0366 C7 E7 01                		mov.B	r7, 1[r14]
 564 0369 03                      		.balign 2,3,5
 565                             	.L46:
 367:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             SET_PUMP(LD_WASH_PUMP_IND, LOAD_ON)
 566                             		.loc 1 367 0
 567 036a FB 72 00 00 00 00       		mov.L	#_Pump_Pos, r7
 568 0370 58 77                   		movu.B	[r7], r7
 569 0372 FB B2 00 00 00 00       		mov.L	#_LoadsReq_New, r11
 570 0378 66 1C                   		mov	#1, r12
 571 037a FE 07 BC                		mov.B	r12, [r7,r11]
 572 037d 03                      		.balign 2,3,1
 573                             	.L45:
 373:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if(SWTC_IsExpired((SWTC_CountersType)MP_ALTCTRL_S_COUNTER)) 
 574                             		.loc 1 373 0
 575 037e 66 A1                   		mov	#10, r1
 576 0380 05 00 00 00             		bsr	_SWTC_IsExpired
 577                             	.LVL55:
 578 0384 61 01                   		cmp	#0, r1
 579 0386 3A D4 00                		beq	.L47
 376:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if(--uP_AltCtrl_Data.timing) 
 580                             		.loc 1 376 0
 581 0389 FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 582 038f CD B7 05                		mov.B	5[r11], r7
 583 0392 60 17                   		sub	#1, r7
 584 0394 C7 B7 05                		mov.B	r7, 5[r11]
 585 0397 5B 77                   		movu.B	r7, r7
 586 0399 61 07                   		cmp	#0, r7
 587 039b 20 0D                   		beq	.L48
 378:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				(void)SWTC_SetSValue ((SWTC_CountersType)MP_ALTCTRL_S_COUNTER,(SWTC_SCounterValue)ALT_CTRL_BLDC
 588                             		.loc 1 378 0
 589 039d 66 A1                   		mov	#10, r1
 590 039f 66 52                   		mov	#5, r2
 591 03a1 05 00 00 00             		bsr	_SWTC_SetSValue
 592                             	.LVL56:
 593 03a5 38 B5 00                		bra	.L47
 594                             	.L48:
 384:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if( Could_Alternate_from_Virtual_Sensor()==ALTERNATE_KO)
 595                             		.loc 1 384 0
 596 03a8 05 00 00 00             		bsr	_Could_Alternate_from_Virtual_Sensor
 597                             	.LVL57:
 598 03ac 61 11                   		cmp	#1, r1
 599 03ae 1F                      		bne	.L49
 600                             	.LVL58:
 387:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					uP_AltCtrl_Data.timing=	1;	
 601                             		.loc 1 387 0
 602 03af C7 B1 05                		mov.B	r1, 5[r11]
 603 03b2 38 E4 02                		bra	.L8
 604                             	.LVL59:
 605                             	.L49:
 606                             	.LBE19:
 390:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if ((DishRackFunctionValue & DISH_RACK_FVALUE_MSK) && ((highStatement &  ALT_CTRL_TABLE_PPOS)!=
 607                             		.loc 1 390 0
 608 03b5 FB 72 00 00 00 00       		mov.L	#_DishRackFunctionValue, r7
 609 03bb CC 77                   		mov.B	[r7], r7
 610 03bd 64 F7                   		and #15, r7
 611                             	.LBB27:
 612 03bf 5B 7B                   		movu.B	r7, r11
 613 03c1 61 0B                   		cmp	#0, r11
 614 03c3 20 0D                   		beq	.L50
 615 03c5 EF AB                   		mov.L	r10, r11
 616 03c7 75 2B 30                		and #48, r11
 617 03ca 75 5B 30                		cmp	#48, r11
 618 03cd 21 25                   		bne	.L51
 619 03cf 03                      		.balign 2,3,5
 620                             	.L50:
 398:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 					alternatecmd=ALT_CTRL_GET_ALT_POS(0,highStatement);
 621                             		.loc 1 398 0
 622 03d0 FB 72 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r7
 623 03d6 EC 7B                   		mov.L	[r7], r11
 624 03d8 75 2A 30                		and #48, r10
 625                             	.LVL60:
 626 03db 75 5A 30                		cmp	#48, r10
 627 03de 1C                      		bne	.L78
 628 03df 66 37                   		mov.L	#3, r7
 629 03e1 0B                      		bra	.L52
 630                             	.L78:
 631 03e2 66 07                   		mov.L	#0, r7
 632                             		.balign 2,3,5
 633                             	.L52:
 634 03e4 FE 47 BB                		mov.B	[r7,r11], r11
 635 03e7 75 5A 30                		cmp	#48, r10
 636 03ea 1C                      		bne	.L79
 637 03eb 66 F7                   		mov	#15, r7
 638 03ed 0B                      		bra	.L53
 639                             	.L79:
 640 03ee 66 37                   		mov	#3, r7
 641                             		.balign 2,3,1
 642                             	.L53:
 643 03f0 53 B7                   		and	r11, r7
 644                             	.LVL61:
 645                             		.balign 2,3,5
 646                             	.L51:
 401:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			  if(uP_AltCtrl_Data.curr_pos>=PM_ALT_getPosNotDef())
 647                             		.loc 1 401 0
 648 03f2 FB A2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r10
 649 03f8 59 AB 06                		movu.B	6[r10], r11
 650 03fb 05 00 00 00             		bsr	_PM_ALT_getPosNotDef
 651                             	.LVL62:
 652 03ff 5B 11                   		movu.B	r1, r1
 653 0401 47 1B                   		cmp	r1, r11
 654 0403 23 05                   		bltu	.L54
 403:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			      alternatecmd|=ALT_CTRL_SYNC_MSK;
 655                             		.loc 1 403 0
 656 0405 78 47                   		bset #4, r7
 657                             	.LVL63:
 658 0407 03                      		.balign 2,3,5
 659                             	.L54:
 407:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	 			if (uP_AltCtrl_Data.curr_cmd!=  alternatecmd)
 660                             		.loc 1 407 0
 661 0408 FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 662 040e 59 AC 07                		movu.B	7[r10], r12
 663 0411 5B 7A                   		movu.B	r7, r10
 664 0413 47 AC                   		cmp	r10, r12
 665 0415 20 21                   		beq	.L55
 409:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				  uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 666                             		.loc 1 409 0
 667 0417 CD BA 04                		mov.B	4[r11], r10
 668 041a 78 0A                   		bset	#0, r10
 669 041c C7 BA 04                		mov.B	r10, 4[r11]
 410:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				  (void)SWTC_SetSValue((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER, (SWTC_SCounterValu
 670                             		.loc 1 410 0
 671 041f FB A2 00 00 00 00       		mov.L	#_Tab_SFT_MotorWash, r10
 672 0425 EC AA                   		mov.L	[r10], r10
 673 0427 66 B1                   		mov	#11, r1
 674 0429 CD A2 01                		mov.B	1[r10], r2
 675 042c 05 00 00 00             		bsr	_SWTC_SetSValue
 676                             	.LVL64:
 411:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			      (void)SWTC_Run((SWTC_CountersType)MP_ALTERNATE_UP_VS_FILTER_S_TIMER);
 677                             		.loc 1 411 0
 678 0430 66 B1                   		mov	#11, r1
 679 0432 05 00 00 00             		bsr	_SWTC_Run
 680                             	.LVL65:
 681                             		.balign 2,3,5
 682                             	.L55:
 414:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				LoadsReq_New[Alt_Pos].b=alternatecmd;
 683                             		.loc 1 414 0
 684 0436 FB A2 00 00 00 00       		mov.L	#_Alt_Pos, r10
 685 043c 58 AA                   		movu.B	[r10], r10
 686 043e FB B2 00 00 00 00       		mov.L	#_LoadsReq_New, r11
 687 0444 FE 0A B7                		mov.B	r7, [r10,r11]
 415:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step=ALT_CTRL_WAIT_ALTPOS_EXE;
 688                             		.loc 1 415 0
 689 0447 FB A2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r10
 690 044d CD AB 04                		mov.B	4[r10], r11
 691 0450 64 3B                   		and #3, r11
 692 0452 78 4B                   		bset #4, r11
 693 0454 C7 AB 04                		mov.B	r11, 4[r10]
 416:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.curr_cmd=alternatecmd;
 694                             		.loc 1 416 0
 695 0457 C7 A7 07                		mov.B	r7, 7[r10]
 696                             	.LVL66:
 697                             		.balign 2,3,1
 698                             	.L47:
 423:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         (void)SWTC_Run((SWTC_CountersType)MP_ALTCTRL_S_COUNTER);
 699                             		.loc 1 423 0
 700 045a 66 A1                   		mov	#10, r1
 701 045c 05 00 00 00             		bsr	_SWTC_Run
 702                             	.LVL67:
 703 0460 38 34 02                		bra	.L70
 704                             	.LVL68:
 705                             	.L17:
 429:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if((highStatement & ALT_CTRL_OPTION_TABLE)) 
 706                             		.loc 1 429 0
 707 0463 EF A7                   		mov.L	r10, r7
 708 0465 75 27 20                		and #32, r7
 709 0468 20 62                   		beq	.L56
 432:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if(ALT_CTRL_GET_SPEED(0)) 
 710                             		.loc 1 432 0
 711 046a FB 72 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r7
 712 0470 EC 7E                   		mov.L	[r7], r14
 713 0472 59 E7 01                		movu.B	1[r14], r7
 714 0475 61 07                   		cmp	#0, r7
 715 0477 20 53                   		beq	.L56
 436:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			if( HWC_Flags.bit.bldc1  )
 716                             		.loc 1 436 0
 717 0479 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 718 047f DC 77                   		mov.W	[r7], r7
 719 0481 76 27 00 40             		and #0x4000, r7
 720 0485 5F 77                   		movu.W	r7, r7
 721 0487 61 07                   		cmp	#0, r7
 722 0489 20 2D                   		beq	.L57
 439:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           	    SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 723                             		.loc 1 439 0
 724 048b FB 72 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r7
 725 0491 3C 74 00                		mov.B	#0, 4[r7]
 726 0494 3C 75 00                		mov.B	#0, 5[r7]
 440:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****                 SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],ALT_CTRL_GET_SPEED(0)*ALT_CTRL_BLDC
 727                             		.loc 1 440 0
 728 0497 59 EB 01                		movu.B	1[r14], r11
 729 049a 75 1B 19                		mul	#25, r11
 730 049d 68 8B                   		shlr	#8, r11
 731 049f C7 7B 02                		mov.B	r11, 2[r7]
 732 04a2 CD EB 01                		mov.B	1[r14], r11
 733 04a5 75 1B 19                		mul	#25, r11
 734 04a8 C7 7B 03                		mov.B	r11, 3[r7]
 735 04ab 59 EB 01                		movu.B	1[r14], r11
 736 04ae 61 0B                   		cmp	#0, r11
 737 04b0 FC DB B1                		scne.L	r11
 738 04b3 C7 7B 01                		mov.B	r11, 1[r7]
 739                             		.balign 2,3,5
 740                             	.L57:
 445:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             SET_PUMP(LD_WASH_PUMP_IND, LOAD_ON)			
 741                             		.loc 1 445 0
 742 04b6 FB 72 00 00 00 00       		mov.L	#_Pump_Pos, r7
 743 04bc 58 77                   		movu.B	[r7], r7
 744 04be FB B2 00 00 00 00       		mov.L	#_LoadsReq_New, r11
 745 04c4 66 1C                   		mov	#1, r12
 746                             	.LVL69:
 747 04c6 FE 07 BC                		mov.B	r12, [r7,r11]
 748 04c9 03                      		.balign 2,3,3
 749                             	.L56:
 450:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if(PM_ALT_posReached())
 750                             		.loc 1 450 0
 751 04ca 05 00 00 00             		bsr	_PM_ALT_posReached
 752                             	.LVL70:
 753 04ce FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 754 04d4 61 01                   		cmp	#0, r1
 755 04d6 20 7C                   		beq	.L58
 452:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	 uP_AltCtrl_Data.curr_pos=PM_ALT_getPos();
 756                             		.loc 1 452 0
 757 04d8 05 00 00 00             		bsr	_PM_ALT_getPos
 758                             	.LVL71:
 759 04dc 81 F1                   		mov.B	r1, 6[r7]
 760                             	.LBE27:
 454:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         switch((highStatement & ALT_CTRL_OPTION)) 
 761                             		.loc 1 454 0
 762 04de 75 2A 30                		and #48, r10
 763                             	.LVL72:
 764                             	.LBB28:
 765 04e1 5B A7                   		movu.B	r10, r7
 766 04e3 75 57 10                		cmp	#16, r7
 767 04e6 20 57                   		beq	.L59
 768 04e8 24 09                   		bgtu	.L61
 769 04ea 61 07                   		cmp	#0, r7
 770 04ec 20 51                   		beq	.L59
 771 04ee 38 A6 01                		bra	.L70
 772                             	.L61:
 773 04f1 75 57 20                		cmp	#32, r7
 774 04f4 10                      		beq	.L60
 775 04f5 75 57 30                		cmp	#48, r7
 776 04f8 3B 9C 01                		bne	.L70
 777 04fb 03                      		.balign 2,3,1
 778                             	.L60:
 460:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				(void)Set_SmallCounter((SWTC_CountersType)MP_ALTCTRL_S_COUNTER, (SWTC_PrescalerType)COUNTERS2_T
 779                             		.loc 1 460 0
 780 04fc 66 A1                   		mov	#10, r1
 781 04fe 66 32                   		mov	#3, r2
 782 0500 66 03                   		mov	#0, r3
 783 0502 05 00 00 00             		bsr	_Set_SmallCounter
 784                             	.LVL73:
 461:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.timing=1+ALT_CTRL_GET_MNT_TIME(0);
 785                             		.loc 1 461 0
 786 0506 FB 72 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r7
 787 050c EC 77                   		mov.L	[r7], r7
 788 050e 58 77                   		movu.B	[r7], r7
 789 0510 5B AA                   		movu.B	r10, r10
 790 0512 75 5A 30                		cmp	#48, r10
 791 0515 FC DB A1                		scne.L	r10
 792 0518 6C 1A                   		shll	#1, r10
 793 051a FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 794 0520 FD 61 A7                		shar	r10, r7
 795 0523 62 17                   		add	#1, r7
 796 0525 C7 B7 05                		mov.B	r7, 5[r11]
 462:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				if ( uP_AltCtrl_Data.seq_done_could_esc)
 797                             		.loc 1 462 0
 798 0528 CD BA 04                		mov.B	4[r11], r10
 799 052b EF A7                   		mov.L	r10, r7
 800 052d 64 27                   		and	#2, r7
 801 052f FC DB 70                		sceq.L	r7
 802                             	.LVL74:
 467:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step=ALT_CTRL_MNT_EXE;
 803                             		.loc 1 467 0
 804 0532 64 3A                   		and #3, r10
 805 0534 75 3A 14                		or	#20, r10
 806 0537 C7 BA 04                		mov.B	r10, 4[r11]
 807 053a 38 5C 01                		bra	.L8
 808                             	.LVL75:
 809                             	.L59:
 473:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				uP_AltCtrl_Data.step=ALT_CTRL_END;
 810                             		.loc 1 473 0
 811 053d FB A2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r10
 812 0543 CD A7 04                		mov.B	4[r10], r7
 813 0546 64 37                   		and #3, r7
 814 0548 75 37 18                		or	#24, r7
 815                             	.LVL76:
 816 054b 03                      		.balign 2,3,5
 817                             	.L156:
 818 054c C7 A7 04                		mov.B	r7, 4[r10]
 819 054f 38 42 01                		bra	.L74
 820                             	.LVL77:
 821                             	.L58:
 483:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	uP_AltCtrl_Data.curr_pos=PM_ALT_getPosNotDef();
 822                             		.loc 1 483 0
 823 0552 05 00 00 00             		bsr	_PM_ALT_getPosNotDef
 824                             	.LVL78:
 825 0556 81 F1                   		mov.B	r1, 6[r7]
 484:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		uP_AltCtrl_Data.SV_invalid_4alt=TRUE;
 826                             		.loc 1 484 0
 827 0558 CD 7B 04                		mov.B	4[r7], r11
 828 055b 78 0B                   		bset	#0, r11
 829 055d C7 7B 04                		mov.B	r11, 4[r7]
 485:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if((highStatement & ALT_CTRL_OPTION)==ALT_CTRL_ABSOLUTE_POS) 
 830                             		.loc 1 485 0
 831 0560 75 2A 30                		and #48, r10
 832                             	.LVL79:
 833 0563 75 5A 10                		cmp	#16, r10
 834 0566 3B 2E 01                		bne	.L70
 487:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           LoadsReq_New[Alt_Pos].b=uP_AltCtrl_Data.curr_cmd;
 835                             		.loc 1 487 0
 836 0569 FB A2 00 00 00 00       		mov.L	#_Alt_Pos, r10
 837 056f 58 AA                   		movu.B	[r10], r10
 838 0571 FB B2 00 00 00 00       		mov.L	#_LoadsReq_New, r11
 839 0577 89 FF                   		mov.B	7[r7], r7
 840 0579 FE 0A B7                		mov.B	r7, [r10,r11]
 841 057c 38 18 01                		bra	.L70
 842                             	.LVL80:
 843                             	.L18:
 494:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  if ( uP_AltCtrl_Data.seq_done_could_esc)
 844                             		.loc 1 494 0
 845 057f CD E7 04                		mov.B	4[r14], r7
 846 0582 64 27                   		and	#2, r7
 847 0584 FC DB 70                		sceq.L	r7
 848                             	.LVL81:
 498:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	  if(ALT_CTRL_GET_SPEED(0)) 
 849                             		.loc 1 498 0
 850 0587 FB B2 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r11
 851 058d EC B4                   		mov.L	[r11], r4
 852 058f 59 4B 01                		movu.B	1[r4], r11
 853 0592 61 0B                   		cmp	#0, r11
 854 0594 20 56                   		beq	.L64
 502:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		if( HWC_Flags.bit.bldc1  )
 855                             		.loc 1 502 0
 856 0596 FB B2 00 00 00 00       		mov.L	#_HWC_Flags, r11
 857 059c DC BB                   		mov.W	[r11], r11
 858 059e 76 2B 00 40             		and #0x4000, r11
 859 05a2 5F BB                   		movu.W	r11, r11
 860 05a4 61 0B                   		cmp	#0, r11
 861 05a6 20 30                   		beq	.L65
 505:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	      SET_BLDC_TIME(BLDC_PumpReq_New[WASH_BLDC_PUMP], 0);
 862                             		.loc 1 505 0
 863 05a8 FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 864 05ae F9 E4 04 00             		mov.B	#0, 4[r14]
 865 05b2 F9 E4 05 00             		mov.B	#0, 5[r14]
 506:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 	      SET_BLDC_SPEED(BLDC_PumpReq_New[WASH_BLDC_PUMP],ALT_CTRL_GET_SPEED(0)*ALT_CTRL_BLDC_SPEED_MU
 866                             		.loc 1 506 0
 867 05b6 59 4B 01                		movu.B	1[r4], r11
 868 05b9 75 1B 19                		mul	#25, r11
 869 05bc 68 8B                   		shlr	#8, r11
 870 05be C7 EB 02                		mov.B	r11, 2[r14]
 871 05c1 CD 4B 01                		mov.B	1[r4], r11
 872 05c4 75 1B 19                		mul	#25, r11
 873 05c7 C7 EB 03                		mov.B	r11, 3[r14]
 874 05ca 59 4B 01                		movu.B	1[r4], r11
 875 05cd 61 0B                   		cmp	#0, r11
 876 05cf FC DB B1                		scne.L	r11
 877 05d2 C7 EB 01                		mov.B	r11, 1[r14]
 878 05d5 03                      		.balign 2,3,5
 879                             	.L65:
 512:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         SET_PUMP(LD_WASH_PUMP_IND, LOAD_ON)
 880                             		.loc 1 512 0
 881 05d6 FB B2 00 00 00 00       		mov.L	#_Pump_Pos, r11
 882 05dc 58 BB                   		movu.B	[r11], r11
 883 05de FB C2 00 00 00 00       		mov.L	#_LoadsReq_New, r12
 884                             	.LVL82:
 885 05e4 66 1D                   		mov	#1, r13
 886 05e6 FE 0B CD                		mov.B	r13, [r11,r12]
 887 05e9 03                      		.balign 2,3,1
 888                             	.L64:
 517:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       if(SWTC_IsExpired((SWTC_CountersType)MP_ALTCTRL_S_COUNTER))       
 889                             		.loc 1 517 0
 890 05ea 66 A1                   		mov	#10, r1
 891 05ec 05 00 00 00             		bsr	_SWTC_IsExpired
 892                             	.LVL83:
 893 05f0 61 01                   		cmp	#0, r1
 894 05f2 3A 8E 00                		beq	.L66
 519:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****         if(--uP_AltCtrl_Data.timing) 
 895                             		.loc 1 519 0
 896 05f5 FB E2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r14
 897 05fb CD EB 05                		mov.B	5[r14], r11
 898 05fe 60 1B                   		sub	#1, r11
 899 0600 C7 EB 05                		mov.B	r11, 5[r14]
 900 0603 76 2B FF 00             		and #0xff, r11
 901 0607 20 0C                   		beq	.L67
 521:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		  (void)SWTC_SetSValue ((SWTC_CountersType)MP_ALTCTRL_S_COUNTER,(SWTC_SCounterValue)ALT_CTRL_MNT_
 902                             		.loc 1 521 0
 903 0609 66 A1                   		mov	#10, r1
 904 060b CF 12                   		mov.B	r1, r2
 905 060d 05 00 00 00             		bsr	_SWTC_SetSValue
 906                             	.LVL84:
 907 0611 2E 6F                   		bra	.L66
 908                             	.L67:
 525:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****           uPAlternateCtrl_setting_data.DataLenght-=sizeof(up_Alt_setting_data_s)/2;
 909                             		.loc 1 525 0
 910 0613 FB E2 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r14
 911 0619 DD EB 02                		mov.W	4[r14], r11
 912 061c 60 2B                   		sub	#2, r11
 913 061e D7 EB 02                		mov.W	r11, 4[r14]
 527:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          if( ( uPAlternateCtrl_setting_data.DataLenght )
 914                             		.loc 1 527 0
 915 0621 5F BB                   		movu.W	r11, r11
 916 0623 61 0B                   		cmp	#0, r11
 917 0625 20 49                   		beq	.L68
 918                             	.LBE28:
 529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	 !( (( DishRackFunctionValue & DISH_RACK_FVALUE_MSK ) && ((highStatement &  ALT_CTRL_TABL
 919                             		.loc 1 529 0
 920 0627 FB B2 00 00 00 00       		mov.L	#_DishRackFunctionValue, r11
 921 062d CC BB                   		mov.B	[r11], r11
 922                             	.LBB29:
 528:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	 &&
 923                             		.loc 1 528 0
 924 062f FD 74 CB 0F             		tst	#15, r11
 925 0633 20 1D                   		beq	.L69
 529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	 !( (( DishRackFunctionValue & DISH_RACK_FVALUE_MSK ) && ((highStatement &  ALT_CTRL_TABL
 926                             		.loc 1 529 0
 927 0635 75 2A 30                		and #48, r10
 928                             	.LVL85:
 929 0638 75 5A 30                		cmp	#48, r10
 930 063b 20 15                   		beq	.L69
 530:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	    &&
 931                             		.loc 1 530 0
 932 063d FB A2 00 00 00 00       		mov.L	#_HWC_Flags, r10
 933 0643 DC AA                   		mov.W	[r10], r10
 529:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****          	 !( (( DishRackFunctionValue & DISH_RACK_FVALUE_MSK ) && ((highStatement &  ALT_CTRL_TABL
 934                             		.loc 1 529 0
 935 0645 76 2A 00 40             		and #0x4000, r10
 936 0649 5F AA                   		movu.W	r10, r10
 937 064b 61 0A                   		cmp	#0, r10
 938 064d 21 21                   		bne	.L68
 939 064f 03                      		.balign 2,3,5
 940                             	.L69:
 536:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             uPAlternateCtrl_setting_data.Data+=sizeof(up_Alt_setting_data_s);
 941                             		.loc 1 536 0
 942 0650 FB A2 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r10
 943 0656 EC AB                   		mov.L	[r10], r11
 944 0658 62 4B                   		add	#4, r11
 945 065a E3 AB                   		mov.L	r11, [r10]
 537:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             uP_AltCtrl_Data.step=ALT_CTRL_BEGIN;
 946                             		.loc 1 537 0
 947 065c FB B2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r11
 948 0662 CD BA 04                		mov.B	4[r11], r10
 949 0665 64 3A                   		and #3, r10
 950 0667 78 2A                   		bset #2, r10
 951 0669 C7 BA 04                		mov.B	r10, 4[r11]
 952 066c 2E 14                   		bra	.L66
 953                             	.L68:
 543:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             uP_AltCtrl_Data.step=ALT_CTRL_INIT;
 954                             		.loc 1 543 0
 955 066e FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 956                             	.LVL86:
 957 0674 CD 7A 04                		mov.B	4[r7], r10
 544:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 			uP_AltCtrl_Data.seq_done_could_esc=TRUE;
 958                             		.loc 1 544 0
 959 0677 64 3A                   		and #3, r10
 960 0679 78 1A                   		bset	#1, r10
 961 067b C7 7A 04                		mov.B	r10, 4[r7]
 962                             	.LVL87:
 545:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****             nRet=S_OK;
 963                             		.loc 1 545 0
 964 067e 66 07                   		mov	#0, r7
 965                             	.LVL88:
 966                             		.balign 2,3,1
 967                             	.L66:
 551:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       (void)SWTC_Run((SWTC_CountersType)MP_ALTCTRL_S_COUNTER);
 968                             		.loc 1 551 0
 969 0680 66 A1                   		mov	#10, r1
 970 0682 05 00 00 00             		bsr	_SWTC_Run
 971                             	.LVL89:
 972 0686 2E 10                   		bra	.L8
 973                             	.LVL90:
 974                             	.L12:
 557:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****       uP_AltCtrl_Data.step=ALT_CTRL_INIT;
 975                             		.loc 1 557 0
 976 0688 CD 7A 04                		mov.B	4[r7], r10
 977 068b 64 3A                   		and #3, r10
 978 068d C7 7A 04                		mov.B	r10, 4[r7]
 979                             	.LVL91:
 980 0690 0C                      		bra	.L70
 981                             	.LVL92:
 982                             	.L74:
 270:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				return nRet;
 983                             		.loc 1 270 0
 984 0691 66 07                   		mov	#0, r7
 985 0693 0B                      		bra	.L8
 986                             	.LVL93:
 987                             	.L70:
 988                             	.LBE29:
 989                             	.LBE18:
 151:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 		return S_FALSE;  				    
 990                             		.loc 1 151 0
 991 0694 66 17                   		mov	#1, r7
 992                             		.balign 2,3,1
 993                             	.L8:
 994 0696 5B 71                   		movu.B	r7, r1
 995 0698 2E 1D                   		bra	.L153
 996                             	.LVL94:
 997                             	.L39:
 998                             	.LBB31:
 999                             	.LBB30:
 1000                             	.LBB26:
 1001                             	.LBB25:
 643:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uPAlternateCtrl_setting_data.Data+=i;
 1002                             		.loc 1 643 0
 1003 069a FB B2 00 00 00 00       		mov.L	#_uPAlternateCtrl_setting_data, r11
 1004 06a0 5B 77                   		movu.B	r7, r7
 1005                             	.LVL95:
 1006 06a2 4B 72                   		add	r7, r2
 1007 06a4 E3 B2                   		mov.L	r2, [r11]
 644:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****   uPAlternateCtrl_setting_data.DataLenght-=i/(sizeof(up_Alt_setting_data_s)/2);
 1008                             		.loc 1 644 0
 1009 06a6 68 17                   		shlr	#1, r7
 1010                             	.LVL96:
 1011 06a8 43 73                   		sub	r7, r3
 1012 06aa D7 B3 02                		mov.W	r3, 4[r11]
 1013 06ad 38 1F FC                		bra	.L33
 1014                             	.LVL97:
 1015                             	.L77:
 630:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 				dishrackselection = 0;
 1016                             		.loc 1 630 0
 1017 06b0 CF 4E                   		mov.B	r4, r14
 1018                             	.LVL98:
 1019 06b2 38 12 FC                		bra	.L151
 1020                             	.LVL99:
 1021                             	.L153:
 1022                             	.LBE25:
 1023                             	.LBE26:
 1024                             	.LBE30:
 1025                             	.LBE31:
 159:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
 1026                             		.loc 1 159 0
 1027 06b5 3F 7D 07                		rtsd	#28, r7-r13
 1028                             	.LFE0:
 1030                             		.section	.text.HIO_SetAltPosition,"ax",@progbits
 1031                             		.global	_HIO_SetAltPosition
 1033                             	_HIO_SetAltPosition:
 1034                             	.LFB6:
 754:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 755:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** }
 756:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 757:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 758:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** /**
 759:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** Imposta la posizione dell'Alternato, se presente nel file di setting
 760:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \param [in]		pos : Posizione
 761:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 762:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \version		1.0.0
 763:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \date 			18/09/2008
 764:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \author			Roberto Fioravanti
 765:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 766:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** \note	        variabili coinvolte
 767:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** uP_AltCtrl_Data
 768:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** LoadsReq_New
 769:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** LoadsReq_Old
 770:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 771:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** */
 772:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** void HIO_SetAltPosition(uint8_t pos)
 773:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** {
 1035                             		.loc 1 773 0
 1036                             	.LVL100:
 774:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 775:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     if( HWC_Flags.bit.alternate )
 1037                             		.loc 1 775 0
 1038 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 1039 0006 DC EE                   		mov.W	[r14], r14
 1040 0008 76 2E 00 10             		and #0x1000, r14
 1041 000c 5F EE                   		movu.W	r14, r14
 1042 000e 61 0E                   		cmp	#0, r14
 1043 0010 20 25                   		beq	.L158
 776:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     {
 777:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	uP_AltCtrl_Data.curr_pos = pos;
 1044                             		.loc 1 777 0
 1045 0012 FB E2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r14
 1046 0018 C7 E1 06                		mov.B	r1, 6[r14]
 778:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c **** 
 779:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	LoadsReq_New[Alt_Pos].b=pos;
 1047                             		.loc 1 779 0
 1048 001b FB E2 00 00 00 00       		mov.L	#_Alt_Pos, r14
 1049 0021 58 EE                   		movu.B	[r14], r14
 1050 0023 FB 42 00 00 00 00       		mov.L	#_LoadsReq_New, r4
 1051 0029 FE 0E 41                		mov.B	r1, [r14,r4]
 780:C:/Workspace/FW_Inertia/branch_indesit/Inertia/Modules\AlternateControl.c ****     	LoadsReq_Old[Alt_Pos].b=pos;
 1052                             		.loc 1 780 0
 1053 002c FB 42 00 00 00 00       		mov.L	#_LoadsReq_Old, r4
 1054 0032 FE 0E 41                		mov.B	r1, [r14,r4]
 1055                             	.L158:
 1056 0035 02                      		rts
 1057                             	.LFE6:
 1059                             		.comm	_up_Alt_setting_data_s,4,1
 1120                             	.Letext0:
 1121                             		.file 2 "C:\\Workspace\\FW_Inertia\\branch_indesit\\HAL\\HAL_General/StandardTypes.h"
 1122                             		.file 3 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_SwTimersCounters/SwTimersCo
 1123                             		.file 4 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Library/LIB_Utilities.h"
 1124                             		.file 5 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/ProductSafety_cfg.
 1125                             		.file 6 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmDefines.h"
 1126                             		.file 7 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Types.h"
 1127                             		.file 8 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_General.h"
 1128                             		.file 9 "C:\\Workspace\\FW_Inertia\\branch_indesit\\CFG_DishWasher\\CFG_Inertia/BusCommPltf_cfg.h"
 1129                             		.file 10 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmTypes.h"
 1130                             		.file 11 "C:\\Workspace\\FW_Inertia\\branch_indesit\\PlatformLibrary\\LIB_IOManager/OutputManagerE
 1131                             		.file 12 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\General/CstmGlobal.h"
 1132                             		.file 13 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Inertia\\Modules/AlternateControl.h"
 1133                             		.file 14 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_BusCOMM/BCP_BusCommMng.h"
 1134                             		.file 15 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_Global.h"
 1135                             		.file 16 "C:\\Workspace\\FW_Inertia\\branch_indesit\\ProductModules\\PM_Alternato/PM_AlternatoExp.
 1136                             		.file 17 "C:\\Workspace\\FW_Inertia\\branch_indesit\\Application_Platform/APP_FuncLib.h"
DEFINED SYMBOLS
                            *ABS*:00000000 AlternateControl.c
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:6      .text.Could_Alternate_from_Virtual_Sensor:00000000 _Could_Alternate_from_Virtual_Sensor
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:11     .text.Could_Alternate_from_Virtual_Sensor:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:53     .text.ALT_uP_AlternateControl_Exe:00000000 _ALT_uP_AlternateControl_Exe
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:57     .text.ALT_uP_AlternateControl_Exe:00000000 L0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1033   .text.HIO_SetAltPosition:00000000 _HIO_SetAltPosition
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1038   .text.HIO_SetAltPosition:00000000 L0
                            *COM*:00000004 _up_Alt_setting_data_s
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:143    .rodata.ALT_uP_AlternateControl_Exe:00000000 .L20
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:152    .text.ALT_uP_AlternateControl_Exe:0000009b .L13
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:245    .text.ALT_uP_AlternateControl_Exe:00000124 .L14
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:403    .text.ALT_uP_AlternateControl_Exe:0000024d .L15
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:529    .text.ALT_uP_AlternateControl_Exe:00000312 .L16
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:705    .text.ALT_uP_AlternateControl_Exe:00000463 .L17
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:843    .text.ALT_uP_AlternateControl_Exe:0000057f .L18
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:982    .text.ALT_uP_AlternateControl_Exe:00000691 .L74
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1061   .debug_frame:00000000 .Lframe0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:7      .text.Could_Alternate_from_Virtual_Sensor:00000000 .LFB4
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:54     .text.ALT_uP_AlternateControl_Exe:00000000 .LFB0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1034   .text.HIO_SetAltPosition:00000000 .LFB6
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:3411   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5147   .debug_str:000003fb .LASF276
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5513   .debug_str:000010b8 .LASF277
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4981   .debug_ranges:00000000 .Ldebug_ranges0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5027   .debug_line:00000000 .Ldebug_line0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5063   .debug_str:00000110 .LASF0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5169   .debug_str:000004fc .LASF2
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5105   .debug_str:0000029c .LASF1
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5495   .debug_str:00001004 .LASF3
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5547   .debug_str:00001202 .LASF4
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5143   .debug_str:000003eb .LASF5
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5475   .debug_str:00000f3d .LASF6
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5415   .debug_str:00000d53 .LASF7
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5175   .debug_str:00000524 .LASF8
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5323   .debug_str:00000a10 .LASF9
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5307   .debug_str:0000099f .LASF10
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5499   .debug_str:00001034 .LASF11
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5145   .debug_str:000003f4 .LASF12
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5541   .debug_str:000011d8 .LASF13
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5237   .debug_str:00000762 .LASF14
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5125   .debug_str:0000034b .LASF94
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5589   .debug_str:0000136b .LASF15
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5327   .debug_str:00000a38 .LASF16
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5435   .debug_str:00000e08 .LASF17
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5471   .debug_str:00000f21 .LASF18
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5089   .debug_str:0000021e .LASF33
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5259   .debug_str:00000823 .LASF19
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5381   .debug_str:00000bfa .LASF20
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5319   .debug_str:000009f4 .LASF21
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5335   .debug_str:00000a81 .LASF22
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5205   .debug_str:00000642 .LASF23
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5451   .debug_str:00000e91 .LASF24
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5247   .debug_str:000007c3 .LASF25
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5283   .debug_str:000008f0 .LASF26
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5573   .debug_str:000012f6 .LASF27
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5439   .debug_str:00000e29 .LASF28
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5421   .debug_str:00000d89 .LASF29
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5219   .debug_str:000006d2 .LASF93
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5531   .debug_str:00001178 .LASF30
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5393   .debug_str:00000c6c .LASF31
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5061   .debug_str:00000102 .LASF32
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5315   .debug_str:000009d3 .LASF34
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5445   .debug_str:00000e5d .LASF35
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5331   .debug_str:00000a50 .LASF36
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5121   .debug_str:0000032f .LASF37
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5077   .debug_str:0000018b .LASF38
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5313   .debug_str:000009be .LASF39
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5507   .debug_str:0000107d .LASF40
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5585   .debug_str:00001342 .LASF41
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5535   .debug_str:000011a3 .LASF42
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5035   .debug_str:0000003c .LASF43
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5079   .debug_str:000001a0 .LASF44
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5139   .debug_str:000003bc .LASF45
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5195   .debug_str:000005ea .LASF46
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5291   .debug_str:0000091f .LASF47
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5131   .debug_str:00000374 .LASF48
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5325   .debug_str:00000a1e .LASF49
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5425   .debug_str:00000db6 .LASF50
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5509   .debug_str:00001093 .LASF51
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5135   .debug_str:0000039a .LASF52
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5337   .debug_str:00000a93 .LASF53
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5357   .debug_str:00000b54 .LASF54
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5075   .debug_str:00000176 .LASF55
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5333   .debug_str:00000a66 .LASF56
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5187   .debug_str:0000059a .LASF57
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5407   .debug_str:00000cfd .LASF58
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5095   .debug_str:00000251 .LASF59
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5523   .debug_str:00001137 .LASF60
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5233   .debug_str:00000749 .LASF61
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5179   .debug_str:00000555 .LASF62
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5029   .debug_str:00000000 .LASF63
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5411   .debug_str:00000d20 .LASF64
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5163   .debug_str:000004cd .LASF65
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5347   .debug_str:00000ae9 .LASF66
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5367   .debug_str:00000ba1 .LASF67
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5477   .debug_str:00000f4f .LASF68
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5185   .debug_str:0000058b .LASF69
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5243   .debug_str:00000797 .LASF70
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5189   .debug_str:000005ab .LASF71
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5389   .debug_str:00000c4e .LASF72
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5193   .debug_str:000005dc .LASF73
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5115   .debug_str:00000301 .LASF74
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5461   .debug_str:00000edf .LASF75
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5517   .debug_str:00001120 .LASF76
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5209   .debug_str:00000671 .LASF77
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5229   .debug_str:00000729 .LASF78
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5483   .debug_str:00000f6c .LASF79
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5489   .debug_str:00000fab .LASF80
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5083   .debug_str:000001cc .LASF81
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5211   .debug_str:0000068c .LASF82
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5431   .debug_str:00000de6 .LASF83
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5455   .debug_str:00000ebc .LASF84
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5529   .debug_str:00001169 .LASF85
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5581   .debug_str:0000132c .LASF86
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5171   .debug_str:00000504 .LASF87
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5087   .debug_str:0000020e .LASF88
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5221   .debug_str:000006da .LASF89
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5449   .debug_str:00000e82 .LASF90
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5525   .debug_str:0000114a .LASF91
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5521   .debug_str:00001131 .LASF92
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5587   .debug_str:00001357 .LASF95
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5299   .debug_str:0000096f .LASF96
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5427   .debug_str:00000dca .LASF97
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5269   .debug_str:0000086e .LASF98
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5561   .debug_str:0000128d .LASF99
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5225   .debug_str:00000701 .LASF100
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5339   .debug_str:00000aa2 .LASF101
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5129   .debug_str:00000368 .LASF102
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5341   .debug_str:00000ab8 .LASF103
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5441   .debug_str:00000e3b .LASF104
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5311   .debug_str:000009ae .LASF105
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5053   .debug_str:000000cf .LASF106
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5571   .debug_str:000012ed .LASF107
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5173   .debug_str:00000511 .LASF108
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5097   .debug_str:00000266 .LASF109
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5031   .debug_str:00000018 .LASF110
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5133   .debug_str:00000381 .LASF111
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5559   .debug_str:00001270 .LASF112
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5365   .debug_str:00000b86 .LASF113
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5033   .debug_str:0000002f .LASF114
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5151   .debug_str:0000042d .LASF115
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5215   .debug_str:000006bf .LASF116
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5575   .debug_str:00001309 .LASF117
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5375   .debug_str:00000bcb .LASF118
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5383   .debug_str:00000c10 .LASF119
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5305   .debug_str:0000098e .LASF120
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5273   .debug_str:00000899 .LASF121
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5113   .debug_str:000002f4 .LASF122
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5251   .debug_str:000007ee .LASF123
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5057   .debug_str:000000ea .LASF124
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5091   .debug_str:0000022d .LASF125
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5059   .debug_str:000000f5 .LASF126
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5577   .debug_str:00001316 .LASF127
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5289   .debug_str:0000090b .LASF128
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5329   .debug_str:00000a43 .LASF129
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5041   .debug_str:00000062 .LASF130
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5417   .debug_str:00000d5c .LASF131
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5549   .debug_str:00001215 .LASF132
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5037   .debug_str:0000004f .LASF133
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5359   .debug_str:00000b60 .LASF134
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5569   .debug_str:000012e4 .LASF135
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5377   .debug_str:00000bd8 .LASF136
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5553   .debug_str:00001235 .LASF137
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5049   .debug_str:000000b7 .LASF138
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5309   .debug_str:000009a7 .LASF139
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5321   .debug_str:00000a02 .LASF140
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5391   .debug_str:00000c5d .LASF141
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5149   .debug_str:00000421 .LASF142
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5469   .debug_str:00000f1c .LASF143
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5241   .debug_str:0000077e .LASF144
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5127   .debug_str:00000352 .LASF145
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5167   .debug_str:000004f0 .LASF146
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5355   .debug_str:00000b47 .LASF147
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5199   .debug_str:00000613 .LASF148
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5275   .debug_str:000008a7 .LASF149
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5213   .debug_str:000006a8 .LASF150
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5403   .debug_str:00000cde .LASF151
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5363   .debug_str:00000b72 .LASF152
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5183   .debug_str:00000586 .LASF153
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5217   .debug_str:000006cc .LASF154
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5519   .debug_str:0000112c .LASF155
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5505   .debug_str:00001073 .LASF156
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5065   .debug_str:0000011d .LASF157
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5409   .debug_str:00000d12 .LASF158
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5511   .debug_str:000010ad .LASF159
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5261   .debug_str:00000834 .LASF160
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5487   .debug_str:00000f99 .LASF161
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5255   .debug_str:0000080a .LASF162
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5295   .debug_str:00000944 .LASF163
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5591   .debug_str:00001370 .LASF164
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5457   .debug_str:00000ecd .LASF165
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5301   .debug_str:0000097d .LASF166
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5253   .debug_str:000007fd .LASF278
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5055   .debug_str:000000e4 .LASF167
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5351   .debug_str:00000b13 .LASF168
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5401   .debug_str:00000cd7 .LASF169
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5303   .debug_str:00000986 .LASF170
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5405   .debug_str:00000cf6 .LASF171
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5443   .debug_str:00000e53 .LASF172
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5373   .debug_str:00000bc6 .LASF173
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5551   .debug_str:00001225 .LASF174
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5565   .debug_str:000012b6 .LASF175
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5385   .debug_str:00000c21 .LASF176
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5279   .debug_str:000008bc .LASF177
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5281   .debug_str:000008d6 .LASF178
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5437   .debug_str:00000e16 .LASF179
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5503   .debug_str:0000104f .LASF180
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5249   .debug_str:000007da .LASF181
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5485   .debug_str:00000f84 .LASF182
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5161   .debug_str:000004ab .LASF183
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5395   .debug_str:00000c8a .LASF184
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5567   .debug_str:000012c4 .LASF185
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5245   .debug_str:000007a8 .LASF186
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5197   .debug_str:000005fb .LASF187
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5201   .debug_str:00000618 .LASF188
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5181   .debug_str:0000056c .LASF189
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5155   .debug_str:0000045e .LASF190
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5177   .debug_str:0000053b .LASF191
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5271   .debug_str:00000874 .LASF192
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5419   .debug_str:00000d6f .LASF193
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5399   .debug_str:00000cbe .LASF194
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5491   .debug_str:00000fc6 .LASF195
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5267   .debug_str:0000084f .LASF196
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5515   .debug_str:00001102 .LASF197
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5349   .debug_str:00000afb .LASF198
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5223   .debug_str:000006e9 .LASF199
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5379   .debug_str:00000bea .LASF200
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5117   .debug_str:00000310 .LASF201
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5555   .debug_str:0000124a .LASF202
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5397   .debug_str:00000ca6 .LASF203
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5387   .debug_str:00000c37 .LASF204
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5141   .debug_str:000003cc .LASF205
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5157   .debug_str:0000047b .LASF206
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5595   .debug_str:0000138f .LASF207
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5101   .debug_str:00000280 .LASF208
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5239   .debug_str:00000769 .LASF209
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5043   .debug_str:00000067 .LASF210
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5191   .debug_str:000005b8 .LASF211
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5109   .debug_str:000002bd .LASF212
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5353   .debug_str:00000b24 .LASF213
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5493   .debug_str:00000fe6 .LASF214
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5081   .debug_str:000001af .LASF215
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5207   .debug_str:00000658 .LASF216
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5047   .debug_str:00000090 .LASF217
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5345   .debug_str:00000adb .LASF218
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5263   .debug_str:00000839 .LASF219
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5423   .debug_str:00000d9c .LASF220
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5539   .debug_str:000011c1 .LASF221
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5563   .debug_str:0000129d .LASF222
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5543   .debug_str:000011e4 .LASF223
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5467   .debug_str:00000f0f .LASF224
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5317   .debug_str:000009e5 .LASF225
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5069   .debug_str:00000136 .LASF226
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5479   .debug_str:00000f5f .LASF227
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5103   .debug_str:00000296 .LASF228
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5119   .debug_str:00000328 .LASF229
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5481   .debug_str:00000f65 .LASF230
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5153   .debug_str:0000043a .LASF279
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5413   .debug_str:00000d36 .LASF280
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:48     .text.Could_Alternate_from_Virtual_Sensor:00000044 .LFE4
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:29     .text.Could_Alternate_from_Virtual_Sensor:00000030 .LBB6
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:34     .text.Could_Alternate_from_Virtual_Sensor:00000036 .LBE6
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5297   .debug_str:0000094e .LASF237
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5433   .debug_str:00000dfa .LASF231
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5231   .debug_str:0000073c .LASF232
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5583   .debug_str:0000133d .LASF233
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5465   .debug_str:00000f02 .LASF234
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5265   .debug_str:00000848 .LASF235
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5137   .debug_str:000003a9 .LASF236
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5497   .debug_str:0000100d .LASF238
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5343   .debug_str:00000aca .LASF239
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5123   .debug_str:00000345 .LASF240
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5039   .debug_str:00000056 .LASF241
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5257   .debug_str:0000081b .LASF242
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5501   .debug_str:00001042 .LASF243
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5107   .debug_str:000002a6 .LASF244
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5235   .debug_str:0000075c .LASF245
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5085   .debug_str:000001e7 .LASF281
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5165   .debug_str:000004de .LASF246
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5557   .debug_str:00001260 .LASF247
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5227   .debug_str:0000070d .LASF282
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1028   .text.ALT_uP_AlternateControl_Exe:000006b8 .LFE0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4379   .debug_loc:00000000 .LLST0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4392   .debug_loc:00000020 .LLST1
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4476   .debug_loc:000000e2 .LLST2
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:66     .text.ALT_uP_AlternateControl_Exe:0000000f .LBB16
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:73     .text.ALT_uP_AlternateControl_Exe:00000018 .LBE16
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:101    .text.ALT_uP_AlternateControl_Exe:0000004d .LBB18
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4527   .debug_loc:00000159 .LLST3
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4577   .debug_loc:000001c8 .LLST4
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4646   .debug_loc:00000266 .LLST5
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4701   .debug_loc:000002ef .LLST6
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4755   .debug_loc:00000369 .LLST7
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4770   .debug_loc:00000392 .LLST8
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:170    .text.ALT_uP_AlternateControl_Exe:000000bb .LBB20
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:215    .text.ALT_uP_AlternateControl_Exe:000000ec .LBE20
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4788   .debug_loc:000003be .LLST9
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4796   .debug_loc:000003d2 .LLST10
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4809   .debug_loc:000003f2 .LLST11
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4817   .debug_loc:00000406 .LLST12
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4833   .debug_loc:00000430 .LLST13
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:414    .text.ALT_uP_AlternateControl_Exe:00000265 .LBB23
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4850   .debug_loc:0000045b .LLST14
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4861   .debug_loc:00000479 .LLST15
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4868   .debug_loc:0000048c .LLST16
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4886   .debug_loc:000004b8 .LLST17
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4907   .debug_loc:000004ee .LLST18
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4937   .debug_loc:0000053b .LLST19
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:4948   .debug_loc:00000559 .LLST20
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:107    .text.ALT_uP_AlternateControl_Exe:00000053 .LVL7
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:126    .text.ALT_uP_AlternateControl_Exe:0000007c .LVL8
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:158    .text.ALT_uP_AlternateControl_Exe:000000aa .LVL9
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:223    .text.ALT_uP_AlternateControl_Exe:000000fb .LVL20
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:264    .text.ALT_uP_AlternateControl_Exe:0000014b .LVL24
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:275    .text.ALT_uP_AlternateControl_Exe:0000015e .LVL27
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:285    .text.ALT_uP_AlternateControl_Exe:0000016c .LVL29
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:314    .text.ALT_uP_AlternateControl_Exe:0000019d .LVL35
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:318    .text.ALT_uP_AlternateControl_Exe:000001a3 .LVL36
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:336    .text.ALT_uP_AlternateControl_Exe:000001c8 .LVL38
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:369    .text.ALT_uP_AlternateControl_Exe:00000210 .LVL43
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:373    .text.ALT_uP_AlternateControl_Exe:00000216 .LVL44
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:521    .text.ALT_uP_AlternateControl_Exe:00000302 .LVL54
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:577    .text.ALT_uP_AlternateControl_Exe:00000384 .LVL55
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:592    .text.ALT_uP_AlternateControl_Exe:000003a5 .LVL56
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:597    .text.ALT_uP_AlternateControl_Exe:000003ac .LVL57
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:651    .text.ALT_uP_AlternateControl_Exe:000003ff .LVL62
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:676    .text.ALT_uP_AlternateControl_Exe:00000430 .LVL64
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:680    .text.ALT_uP_AlternateControl_Exe:00000436 .LVL65
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:702    .text.ALT_uP_AlternateControl_Exe:00000460 .LVL67
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:752    .text.ALT_uP_AlternateControl_Exe:000004ce .LVL70
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:758    .text.ALT_uP_AlternateControl_Exe:000004dc .LVL71
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:784    .text.ALT_uP_AlternateControl_Exe:00000506 .LVL73
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:824    .text.ALT_uP_AlternateControl_Exe:00000556 .LVL78
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:892    .text.ALT_uP_AlternateControl_Exe:000005f0 .LVL83
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:906    .text.ALT_uP_AlternateControl_Exe:00000611 .LVL84
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:971    .text.ALT_uP_AlternateControl_Exe:00000686 .LVL89
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:83     .text.ALT_uP_AlternateControl_Exe:0000002a .LVL3
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5473   .debug_str:00000f2a .LASF283
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1057   .text.HIO_SetAltPosition:00000036 .LFE6
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5537   .debug_str:000011b9 .LASF248
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5071   .debug_str:00000148 .LASF249
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5429   .debug_str:00000dd0 .LASF250
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5453   .debug_str:00000ea6 .LASF251
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5593   .debug_str:0000137e .LASF252
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5099   .debug_str:00000278 .LASF253
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5111   .debug_str:000002df .LASF254
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5361   .debug_str:00000b69 .LASF255
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5371   .debug_str:00000bbe .LASF256
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5067   .debug_str:00000129 .LASF257
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5545   .debug_str:000011f5 .LASF258
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5463   .debug_str:00000ef0 .LASF259
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5073   .debug_str:00000159 .LASF260
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5447   .debug_str:00000e72 .LASF261
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5285   .debug_str:000008f5 .LASF262
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5579   .debug_str:0000131c .LASF263
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5277   .debug_str:000008af .LASF264
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5527   .debug_str:00001153 .LASF265
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5369   .debug_str:00000baf .LASF266
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5051   .debug_str:000000c5 .LASF270
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5287   .debug_str:000008ff .LASF267
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5159   .debug_str:00000497 .LASF268
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5533   .debug_str:00001192 .LASF269
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5203   .debug_str:00000633 .LASF271
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5459   .debug_str:00000ed6 .LASF272
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5093   .debug_str:00000240 .LASF273
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5045   .debug_str:0000007e .LASF274
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:5293   .debug_str:00000936 .LASF275
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:58     .text.ALT_uP_AlternateControl_Exe:00000002 .LCFI0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:56     .text.ALT_uP_AlternateControl_Exe:00000000 .LVL0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:81     .text.ALT_uP_AlternateControl_Exe:00000026 .LVL2
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:96     .text.ALT_uP_AlternateControl_Exe:00000049 .LVL4
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:105    .text.ALT_uP_AlternateControl_Exe:0000004f .LVL6
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:231    .text.ALT_uP_AlternateControl_Exe:00000108 .LVL22
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:236    .text.ALT_uP_AlternateControl_Exe:00000113 .LVL23
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:625    .text.ALT_uP_AlternateControl_Exe:000003db .LVL60
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:704    .text.ALT_uP_AlternateControl_Exe:00000463 .LVL68
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:763    .text.ALT_uP_AlternateControl_Exe:000004e1 .LVL72
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:820    .text.ALT_uP_AlternateControl_Exe:00000552 .LVL77
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:832    .text.ALT_uP_AlternateControl_Exe:00000563 .LVL79
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:842    .text.ALT_uP_AlternateControl_Exe:0000057f .LVL80
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:928    .text.ALT_uP_AlternateControl_Exe:00000638 .LVL85
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:996    .text.ALT_uP_AlternateControl_Exe:0000069a .LVL94
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1020   .text.ALT_uP_AlternateControl_Exe:000006b5 .LVL99
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:179    .text.ALT_uP_AlternateControl_Exe:000000c6 .LVL12
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:746    .text.ALT_uP_AlternateControl_Exe:000004c6 .LVL69
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:884    .text.ALT_uP_AlternateControl_Exe:000005e4 .LVL82
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:100    .text.ALT_uP_AlternateControl_Exe:0000004d .LVL5
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:973    .text.ALT_uP_AlternateControl_Exe:00000688 .LVL90
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:981    .text.ALT_uP_AlternateControl_Exe:00000691 .LVL92
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:986    .text.ALT_uP_AlternateControl_Exe:00000694 .LVL93
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:600    .text.ALT_uP_AlternateControl_Exe:000003af .LVL58
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:604    .text.ALT_uP_AlternateControl_Exe:000003b5 .LVL59
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:802    .text.ALT_uP_AlternateControl_Exe:00000532 .LVL74
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:808    .text.ALT_uP_AlternateControl_Exe:0000053d .LVL75
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:815    .text.ALT_uP_AlternateControl_Exe:0000054b .LVL76
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:848    .text.ALT_uP_AlternateControl_Exe:00000587 .LVL81
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:956    .text.ALT_uP_AlternateControl_Exe:00000674 .LVL86
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:962    .text.ALT_uP_AlternateControl_Exe:0000067e .LVL87
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:965    .text.ALT_uP_AlternateControl_Exe:00000680 .LVL88
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:979    .text.ALT_uP_AlternateControl_Exe:00000690 .LVL91
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:268    .text.ALT_uP_AlternateControl_Exe:00000152 .LVL25
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:282    .text.ALT_uP_AlternateControl_Exe:00000168 .LVL28
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:287    .text.ALT_uP_AlternateControl_Exe:0000016e .LVL30
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:294    .text.ALT_uP_AlternateControl_Exe:0000017a .LVL32
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:296    .text.ALT_uP_AlternateControl_Exe:0000017b .LVL33
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:300    .text.ALT_uP_AlternateControl_Exe:0000017e .LVL34
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:332    .text.ALT_uP_AlternateControl_Exe:000001c4 .LVL37
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:343    .text.ALT_uP_AlternateControl_Exe:000001d5 .LVL40
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:345    .text.ALT_uP_AlternateControl_Exe:000001d7 .LVL41
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:350    .text.ALT_uP_AlternateControl_Exe:000001dd .LVL42
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:644    .text.ALT_uP_AlternateControl_Exe:000003f2 .LVL61
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:696    .text.ALT_uP_AlternateControl_Exe:0000045a .LVL66
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:272    .text.ALT_uP_AlternateControl_Exe:0000015a .LVL26
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:290    .text.ALT_uP_AlternateControl_Exe:00000172 .LVL31
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:208    .text.ALT_uP_AlternateControl_Exe:000000e7 .LVL17
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:182    .text.ALT_uP_AlternateControl_Exe:000000cc .LVL13
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:185    .text.ALT_uP_AlternateControl_Exe:000000d0 .LVL14
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:169    .text.ALT_uP_AlternateControl_Exe:000000bb .LVL10
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:226    .text.ALT_uP_AlternateControl_Exe:00000101 .LVL21
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:195    .text.ALT_uP_AlternateControl_Exe:000000da .LVL15
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:201    .text.ALT_uP_AlternateControl_Exe:000000df .LVL16
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:219    .text.ALT_uP_AlternateControl_Exe:000000f1 .LVL18
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:174    .text.ALT_uP_AlternateControl_Exe:000000c1 .LVL11
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:221    .text.ALT_uP_AlternateControl_Exe:000000f7 .LVL19
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:413    .text.ALT_uP_AlternateControl_Exe:00000265 .LVL45
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:494    .text.ALT_uP_AlternateControl_Exe:000002cc .LVL53
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:429    .text.ALT_uP_AlternateControl_Exe:00000279 .LVL47
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1014   .text.ALT_uP_AlternateControl_Exe:000006b0 .LVL97
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:486    .text.ALT_uP_AlternateControl_Exe:000002c4 .LVL52
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1018   .text.ALT_uP_AlternateControl_Exe:000006b2 .LVL98
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:464    .text.ALT_uP_AlternateControl_Exe:000002a7 .LVL50
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1005   .text.ALT_uP_AlternateControl_Exe:000006a2 .LVL95
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1010   .text.ALT_uP_AlternateControl_Exe:000006a8 .LVL96
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:421    .text.ALT_uP_AlternateControl_Exe:00000271 .LVL46
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:467    .text.ALT_uP_AlternateControl_Exe:000002a9 .LVL51
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1138   .debug_info:00000000 .Ldebug_info0
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:989    .text.ALT_uP_AlternateControl_Exe:00000694 .LBE18
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:998    .text.ALT_uP_AlternateControl_Exe:0000069a .LBB31
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1025   .text.ALT_uP_AlternateControl_Exe:000006b5 .LBE31
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:102    .text.ALT_uP_AlternateControl_Exe:0000004d .LBB19
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:606    .text.ALT_uP_AlternateControl_Exe:000003b5 .LBE19
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:611    .text.ALT_uP_AlternateControl_Exe:000003bf .LBB27
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:760    .text.ALT_uP_AlternateControl_Exe:000004de .LBE27
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:764    .text.ALT_uP_AlternateControl_Exe:000004e1 .LBB28
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:918    .text.ALT_uP_AlternateControl_Exe:00000627 .LBE28
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:922    .text.ALT_uP_AlternateControl_Exe:0000062f .LBB29
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:988    .text.ALT_uP_AlternateControl_Exe:00000694 .LBE29
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:999    .text.ALT_uP_AlternateControl_Exe:0000069a .LBB30
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1024   .text.ALT_uP_AlternateControl_Exe:000006b5 .LBE30
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:171    .text.ALT_uP_AlternateControl_Exe:000000bb .LBB21
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:187    .text.ALT_uP_AlternateControl_Exe:000000d0 .LBE21
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:189    .text.ALT_uP_AlternateControl_Exe:000000d2 .LBB22
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:214    .text.ALT_uP_AlternateControl_Exe:000000ec .LBE22
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:497    .text.ALT_uP_AlternateControl_Exe:000002cc .LBE23
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1000   .text.ALT_uP_AlternateControl_Exe:0000069a .LBB26
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1023   .text.ALT_uP_AlternateControl_Exe:000006b5 .LBE26
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:415    .text.ALT_uP_AlternateControl_Exe:00000265 .LBB24
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:496    .text.ALT_uP_AlternateControl_Exe:000002cc .LBE24
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1001   .text.ALT_uP_AlternateControl_Exe:0000069a .LBB25
C:\Users\Andrea\AppData\Local\Temp\ccJY27jT.s:1022   .text.ALT_uP_AlternateControl_Exe:000006b5 .LBE25

UNDEFINED SYMBOLS
_HWC_Flags
_dirty_foam_Data
_GIValid
_Virtual_Sensor_Value
_Interpreter_Data
_uP_AltCtrl_Data
_uPDoorStatus
_SWTC_Stop
_SWTC_IsExpired
_uPAlternateCtrl_setting_data
_BasicLoader
_ZoneWashFunctionValue
_PM_ALT_getPosNotDef
_PM_ALT_getNumPos
_Tab_SFT_MotorWash
_SWTC_SetSValue
_SWTC_Run
_Alt_Pos
_LoadsReq_New
_DishRackFunctionValue
_Set_SmallCounter
_BLDC_PumpReq_New
_Pump_Pos
_PM_ALT_posReached
_PM_ALT_getPos
_LoadsReq_Old
