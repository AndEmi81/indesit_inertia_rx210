   1                             		.file	"Load.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.LOA_levTOtimeRef_Update,"ax",@progbits
   5                             		.global	_LOA_levTOtimeRef_Update
   7                             	_LOA_levTOtimeRef_Update:
   8                             	.LFB1:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules/Load.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /*
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** ** **************************************************************************
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** ** **************************************************************************
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */ 
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /** 
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Source File
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \file    Load.c
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \ingroup Load
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date    11/03/2008
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author  Valeria Catani
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version 1.0.0
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /*
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Copyright (c) 2004-2008, Indesit Company, IDD.
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Tutti i diritti sono riservati. All rights reserved.
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Old Versions
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version 
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date    
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author  
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ******** */
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Includes */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ******** */
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #include "CstmHeaders.h"
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ****************** */
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Defines and Macros */
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ****************** */
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**DEBUG*/
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /*#define PUMP_CTRL_UP_RUNNING_MSK     1*/  /*E' nel modulo Pump Control*/
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**DEBUG END*/
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* *************************** */
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Typedef, Structs and Unions */
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* *************************** */
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* **************************** */
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Prototype of local functions */
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* **************************** */
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_levTOtimeRef_Update(void);
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_timeLoad_Init(void);
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t LOA_timeLoadEnd_Check(void);
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_waterInDW_defUpdate(void);
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_disableLoadCounters(void);
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ****************** */
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Exported variables */
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ****************** */
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* **************** */
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Global variables */
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* **************** */
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ***************** */
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Exported function */
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ***************** */
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  /**
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Gestisce l'esecuzione del microprogramma Load .
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return S_OK se la condizione di avanzamento passo per il microprogramma � verificata (caricament
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return S_FALSE se non � ancora verificata(caricamento acqua in corso),
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return codice di errore in altri casi
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			11/03/2008
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \note	in sospeso pressostato lineare
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t LOA_uP_Load_Exe (uint8_t HighStatement,uint8_t LowStatement)
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t loadingWater;
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t res;
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** int8_t variation;
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** int16_t delta;
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t loadMode;
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** bool_t isFullRequested;
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE )
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Prima iterazione del passo */
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.status = LOAD_INIT;
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.VS_check=FALSE;
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if(Interpreter_Data[0].optionalStepInitialized == FALSE)
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.VS_check=FALSE;
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* passaggio per uP Load */
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	FltLoadToutData.uP_exe = TRUE;
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/*Analisi modalit� di caricamento richiesta */
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	loadMode = HighStatement & (F1|F0);
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (( loadMode== LOA_PS_CHECK_MODE) && ( HWC_Flags.bit.vs_wash_presence == 0))
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{/* non c'� il sensore virtuale*/
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.status = LOAD_TRUE;
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.pump_act=FALSE;	
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( (uPDoorStatus == UP_DOOR_WAIT)||
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	((loadMode== LOA_PS_CHECK_MODE)&&(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==5)&& uP_Load_Data.
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{/* porta aperta o in attesa di timeout dopo la chiusura o delay MR -> il uP va sospeso */
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	 /* sospensione anche con lo stato 5 del sensore virtuale che non ferma la pompa lavaggio ma solo 
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LOA_disableLoadCounters();  /*disabilitazione contatori*/
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)SWTC_Stop((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER);
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #ifndef _DELETE_REDUNDANT_CALL_
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif /* _DELETE_REDUNDANT_CALL_ */
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.init = TRUE;
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION, (SWTC_PrescalerType)COUNTERS2_
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		return S_FALSE;
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	isFullRequested = ( ( loadMode == LOA_PP_CHECK_MODE )? TRUE : FALSE );
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* ********************************************************* */
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* Aggiornamento stato pressostato per l'iterazione in corso */
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* ********************************************************* */
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* Test validit� stato criteri - solo in caso di calcolo portata o caricamento a PP, condizioni 
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	conoscere lo stato del pressostato */			 
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	                                       
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (( (Flag_levTOtimeRef_update == TRUE) || (uP_Load_Data.status == LOAD_EXE_PP) )&& ( loadMode!=L
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{		
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  	if ( (TESTBIT (GIValid, (GI_FIRST_CRITERION_BIT + GI_PRESS_SENS_CR_FULL_IND) ) == 0) || (TESTBI
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  	{
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  		/*
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  		Uno dei due criteri � in uno stato non valido o non � presente:
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  		stato pressostato indeterminato
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  		*/
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  		LOA_disableLoadCounters();  /*disabilitazione contatori*/
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   		
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  		/* Non eseguo il uP, ma abilito avanzamento passo */
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  		return S_OK;
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  	}
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* Stato valido criteri pressostato */
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* Criterio Overflow */
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	 
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( TESTBIT (GICriteria,GI_CR_OVFL_IND) != 0 )
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Overflow: interrompe caricamento ma non abilita avanzamento passo */
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LOA_disableLoadCounters();  /*disabilitazione contatori*/
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		return S_FALSE;
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ******************************** */
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Inizializzazione dati da setting */
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ******************************** */
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_INIT)
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		CLRBIT(Flags_1, JIF_FLAG1_UP_TERMINATED_KO_POS);
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* default : disabilitazione timeout di caricamento */
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* QI - 26.10.09 - init timer per F06 - sub 1 e F05 - sub 3 : (tout caricamento fino a P.P. in ca
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( isFullRequested  )
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{ /* richiesto controllo su pieno pressostato per eventuale F06 : 
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			configurazione timer per timeout caricamento */
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* END QI - 26.10.09 */
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* nuovo caricamento: reset var per F05 */
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FltFlagsKO.loadPP = FALSE;  
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( TESTBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS)!=0 )
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* � stata completata l'operazione di rigenera -> devo resettare la variabile litri caricati*/
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			clearRegWaterLoaded();
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			CLRBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS);  
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Inizializzazione timer per calcolo tempo raggiungimento p.p. (portata) */
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/*if (Flag_levTOtimeRef_update == TRUE)*/		 /* IL FLAG VIENE SETTATO DAL UP ATTIVA FUNZIONE CHE D
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* la presenza del uP Attiva funzione garantisce anche il vuoto */
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		                  
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Config+init timer calcolo portata, senza test su Flag che ancora non � impostato in questa i
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #ifdef _CORRECT_BUG_UP_COUNTERS_
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER, (SWTC_PrescalerType)COUNTE
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #else
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER, (SWTC_PrescalerType)COUNTE
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif /* _CORRECT_BUG_UP_COUNTERS_ */
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Caricamento dati dalla flash */
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if( BasicLoader (PTR_UP_LOAD, LowStatement, &uPLoad_setting_data) != S_OK )
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* Non eseguo il uP, ma abilito avanzamento passo */
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			return S_OK;
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		loadingWater =  OFFS_B(uPLoad_setting_data.Data,0);
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Gestione modificatori */
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		res = GetModifierValue (OFFS_B(uPLoad_setting_data.Data,1), &variation);
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if( ( MOD_DONT_CARE == res ) || ( S_FALSE == res ) )
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* Se non � attivo nessun modificatore la variazione viene posta a zero */
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			variation=0;
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if( variation )
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* variazione != 0 va applicata*/
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* calcolo delta */                      
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			delta = GetDeltaFromVariation(loadingWater,variation);
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* aggiornamento */
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			loadingWater += (uint8_t)delta;         
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* End Gestione modificatori */    
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.tgWater = ( loadingWater + WaterInDW );
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Init variabili per caricamento a turbina */
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/*uP_Load_Data.waterInDWInit = WaterInDW;*/ /* questa var � utile soprattutto per Debug*/
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/*PulseCounter_SetCount(0);*/               /* init pulse counter per nuovo conteggio */
 268:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /*
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		PulseCounter_Reset_Warning(PULSECOUNTER_RESET_BOTH_WARNING);           Reset di eventuali warning
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 272:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */ /*AE FIXME */
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)FLT_CheckPulseCounterStill(PULSE_COUNTER_STILL_INIT); /* init funzione controllo turbina bl
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		CLRBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS);
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if(loadMode == LOA_PS_CHECK_MODE )
 278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( OFFS_B(uPLoad_setting_data.Data, 2)==0)
 280:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* EA problema rigenere: se la velocit� � 0 non fa il controllo */
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* EA reinizializza conteggio in caso di rigenere*/
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_INIT);	
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_EXE;	
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}else
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.VS_check=FALSE;	
 288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* se non ho ancora eseguito l'accensione della pompa */
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_WAIT_PUMP;	
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}	
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}else
 292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.status = LOAD_EXE;	
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.init = TRUE;		              /* per init della variabile waterInDWInit */
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if (HWC_Flags.bit.vs_wash_presence )		
 297:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			CLRBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS); /* reset flag overflow ripristini */	
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 300:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* Nella prima iterazione non vengono pilotati i carichi */
 301:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		return S_FALSE;
 302:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 303:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/*LOAD_INIT*/
 304:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 305:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* Gestione timer per calcolo portata successiva a LOAD_INIT */
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ((Flag_levTOtimeRef_update == TRUE)&& ( loadMode!=LOA_PS_CHECK_MODE ))
 307:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{/* Richiesto calcolo portata */
 308:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* pieno pressostato -> disabilito counter */
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER);
 313:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		else
 315:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* vuoto pressostato -> abilito counter */
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER);
 317:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 320:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* QI - 26.10.09 - disabilitazione tout statico durante caricamento dinamico 
 321:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	(non ci fidiamo del flag IsFullRequested per identificazione dei caricamenti statici)  */
 322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 323:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* QI 05.11.09 gestione timeout caricamento dinamico */
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) != 0 )
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{/* � in esecuzione il uP Pump Control -> si tratta di un caricamento dinamico */
 326:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    /* il timeout relativo al P.P. in caricamento statico viene disabilitato */
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   		if ( loadMode!=LOA_PS_CHECK_MODE )
 328:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     		FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;		
 330:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 331:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	 
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		 /* QI 05.11.09 gestione timeout caricamento dinamico: vale in Load + Pump Control e in caricamen
 333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_EXE);	
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   	}
 336:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	else
 337:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{/* QI 05.11.09 gestione timeout caricamento dinamico : init al P.P. in statico : vale in EXE e in
 338:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* con i sensori virtuali questo non conta */
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( loadMode!=LOA_PS_CHECK_MODE )
 340:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_INIT);	
 342:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}else
 343:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{ /* modifica brevetti: IL timeout di apertura dell'elettriovalvola diventa comunue al caricament
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_EXE);	
 345:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 346:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}	
 347:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 348:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 349:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( TESTBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS) )
 350:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 351:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* in analogia con la dichiarazione del KO Restore per WaterInDW > maxWater in Load Restore
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		non si prosegue nel caricamento e viene abilitato avanzamento passo 
 353:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		Il Jump su KO Restore verr� processato nel passo successivo 
 354:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		se Load Restore � l'unico uP del passo*/	 
 355:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.status = LOAD_TRUE;
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 358:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 359:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 360:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* *************** */
 361:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Esecuzione uP   */
 362:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* *************** */
 363:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_WAIT_PUMP)
 364:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( !uP_Load_Data.VS_check)
 366:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION, (SWTC_PrescalerType)COUNTERS2
 368:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.VS_check=TRUE;
 369:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}	
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( SWTC_IsExpired((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION))  
 371:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* conteggio concluso */
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0 )
 373:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* si tratta di caricamento statico */
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.pump_act=FALSE;
 375:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* ad ogni caricamento statico azzero questa variabile
 376:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				si presuppone che prima di ogni caricamento dinamico ci sia uno statico */
 377:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.turbina_KO=FALSE;
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_EXE;
 379:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 380:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* EA modifica brevetto_ il calcolo del fault f06 deve essere fatto sia in statico che in dinam
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				solo nello statico , cio� ad ogni fase di lavaggio */
 382:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_INIT);	
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=0) || (!TESTBIT(GIValid, (GI_FIRST_VIRTSENS
 386:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/* corrisponde ad una prima fase di caricamento statico, se non siamo in vuoto sensore il uP t
 388:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					    if (TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)))
 389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						{
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 							SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 391:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #ifdef _STATISTICS_ON_
 392:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 							IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 394:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif	
 395:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 							
 396:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						}	
 397:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					    /*SETBIT(Flags_2,FLAG2_REINIT_DRAIN_FROMFULLTOEMPTY_TIMER);*/
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.status = LOAD_TRUE;
 399:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.pump_act=FALSE;
 400:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}		
 401:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}else
 402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{
 403:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.pump_act=TRUE;	
 404:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* sono in grado di determinare il valore del sensore con acqua in vasca
 405:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				al termine del caricamento statico invece non attivo + la pompa*/
 406:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 407:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* EA : cambuara gestione dell'accension della spia filtro otturato. impostato ad ogni riconosc
 408:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				resettato ad ogni inizio del caricamento dinamico*/
 409:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				CLRBIT(Flags_2, FLAG2_CLOGGED_FILTER);			
 410:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			
 411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( uP_Load_Data.turbina_KO)
 412:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{
 413:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/*uP_Load_Data.pump_act=FALSE;*/ /* aumento velocit� , tramite pump control*/
 414:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_PS_DINAMIC;	
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerType
 416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 417:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 
 418:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					if (((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SEN
 420:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					{/* vedo il pieno */
 421:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.pump_act=FALSE;	
 422:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					}
 423:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 
 424:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 
 425:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}else
 426:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{
 427:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_EXE;
 428:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 429:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.init = TRUE;	
 430:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					
 431:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 432:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION); 
 433:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 434:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 uP_Load_Data.time= OFFS_B(Tab_HWCVS_data.Data, 1)& 0x7F;
 435:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 LOA_timeLoad_Init();  /*Inizializzazione caricamento a tempo*/
 436:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 437:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}else
 438:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{	
 439:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.pump_act=TRUE;
 440:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION);
 441:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			
 442:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		} 
 443:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		return S_FALSE;
 444:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 445:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 446:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 447:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 448:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_EXE) 
 449:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{ /* esecuzione caricamento a turbina */
 450:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****    		
 451:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( loadMode==LOA_PS_CHECK_MODE )
 452:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if (TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0 )
 454:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* si tratta di caricamento statico */
 455:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Run((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER);
 456:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* il contatore di timeout elettrovavola parte lo stesso, cos�, se la turbina funziona non 
 457:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				viene analizzato , ma se la turbina non funziona non carica pi� dei dl impostati da setting 
 458:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				corrispondenti al timeout 
 459:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				considerare anche le tolleranze*/
 460:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}else
 461:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{ 
 462:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* se la turbina funziona in dinamico si carica la quantit� d'acqua voluta a velocit� ridot
 463:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.pump_act=TRUE;
 464:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==0)&&(TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_B
 465:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{/* vedo il vuoto*/
 466:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						
 467:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 468:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #ifdef _STATISTICS_ON_			
 469:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 470:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif	
 471:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			
 472:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_TRUE;
 473:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.pump_act=FALSE;
 474:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					return S_FALSE;			
 475:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 476:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 477:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}			
 478:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 479:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    if ( (PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_PUL
 480:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    {/* Contatore impulsi turbina OK && NO turbina bloccata */
 481:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 482:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        /* controllo turbina bloccata */
 483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        if ( FLT_CheckPulseCounterStill(PULSE_COUNTER_STILL_EXE) == TRUE )
 484:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        {
 485:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				SETBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS); 
 486:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* EA modifica per brevetto. al prefault la visual deve segnalare mancanza acqua */
 487:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if (HWC_Flags.bit.vs_wash_presence)
 488:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{
 489:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					FltWarning.load=TRUE;
 490:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 491:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FLT_preFaultSet(CODE_PULSE_COUNTER,SUBCODE_PULSE_COUNTER);
 492:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 493:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				return S_FALSE; /*alla prox iterazione entra con bit = 1 e cambia modalit� di caricamento*/
 494:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****          
 495:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        }
 496:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 497:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        if (uP_Load_Data.init == TRUE)
 498:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        {
 499:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          uP_Load_Data.waterInDWInit = WaterInDW; 
 500:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           
 501:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          WaterLoadedReset();
 502:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           
 503:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          /* QI 27.10.09 init finestra di buio su controllo turbina. Messo qui per reinizializzare
 504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	#ifdef _CORRECT_BUG_PULSE_COUNTER_
 505:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	         (void)SWTC_SetSValue((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER, (SWTC_SCounterValue)
 506:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	#else
 507:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	         (void)Set_SmallCounter((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER, (SWTC_PrescalerTyp
 508:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	#endif /* _CORRECT_BUG_PULSE_COUNTER_ */
 509:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****              
 510:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          uP_Load_Data.init = FALSE;
 511:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****             
 512:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        }
 513:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 514:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        /* QI 27.10.09 gestione finestra di buio su check turbina */
 515:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 516:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        FLT_PulseCounterCheckDelay_Mgmt();
 517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****          	
 518:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        WaterInDW = ( uP_Load_Data.waterInDWInit + GIWaterLoaded );		 /* aggiornamento acqua in va
 519:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 520:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( WaterInDW >= uP_Load_Data.tgWater )
 521:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* caricamento a turbina concluso - non piloto EV */
 522:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 523:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* Aggiornamento portata storica - se richiesto */
 524:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_levTOtimeRef_Update(); 
 525:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 526:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);
 527:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* Caricamento a turbina concluso : 
 528:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				controllo sul pieno pressostato per F05 se richiesto dal setting */
 529:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 530:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( isFullRequested )
 531:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{ /* richiesto controllo su pieno pressostato per eventuale F05 */
 532:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 533:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					if (TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0)
 534:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					{/* carico statico (verifica, ma dovrebbe essere implicito nel flag) */
 535:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 536:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;		 /* disabilito Tout F05 - sub 3 perch� � 
 537:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* da modificare.*/
 538:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) == 0 )
 539:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						{/* vuoto -> anomalia pressostato : condizione per F05 - sub 1 */
 540:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   		      
 541:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	      		      		FltFlagsKO.loadPP = TRUE;
 542:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****       		         
 543:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****       		    		}
 544:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****       		  		}
 545:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****       			}
 546:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
 547:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           		uP_Load_Data.status = LOAD_TRUE;
 548:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         	}
 549:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			else
 550:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* else caricamento non concluso */
 551:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 552:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 553:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/* QI 29.01.10 ELIMINATO */
 554:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/*QI 07.01.10 - quando � in esecuzione il uP Load � attivo il Tout di caricamento (se non 
 555:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					ribadito lo stato di EXE per assicurare la ripresa dopo PAUSE  */
 556:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/*if (FltLoadToutData.state != FLT_LOAD_TOUT_END)*/
 557:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/* if ( ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0 ) && (FltLoadToutData
 558:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/*{
 559:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						FltLoadToutData.state = FLT_LOAD_TOUT_EXE;
 560:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					}*/
 561:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 562:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 563:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* carico pilotato comunque per continuit� */
 564:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/ 
 565:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	   	} 
 566:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		else
 567:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* Warning Pulse Counter: il conteggio dell'acqua in ingresso non � affidabile 
 568:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         o Turbina bloccata: non leggo impulsi */
 569:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****       		
 570:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****        /*DisableCounter(&PulseCounterStill_timer); eliminato perch� potrei essere qui per turbina
 571:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	   		if (( loadMode==LOA_PS_CHECK_MODE )&& (TESTBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS)))
 572:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{
 573:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* modifica per brevetto : in caso di turbina ko ( NO IMPULSI)  rimane in questo stato fino a f
 574:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				Se la turbina � fuori range, va avanti comunque sensore o a tempo */
 575:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.init == TRUE;
 576:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/ 
 577:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				return S_FALSE;		
 578:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) != 0 )
 580:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* � in esecuzione il uP Pump Control -> si tratta di un caricamento dinamico */
 581:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* il caricamento alternativo alla turbina � a pressostato */
 582:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( loadMode==LOA_PS_CHECK_MODE )
 583:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{/* EA qui non ci dovrei mai andare perch� l'ho discriminato prima */
 584:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerType
 585:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 586:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_PS_DINAMIC;
 587:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}else
 588:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{	
 589:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			      /* config + init Down counter per tempo stabilit� pressostato in pieno */
 590:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				   (void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerTy
 591:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 592:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			   		uP_Load_Data.status = LOAD_EXE_PP; 		
 593:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 594:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			  /*posso proseguire con LOAD_EXE_PP senza effettuare return */
 595:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 596:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			else
 597:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****        		{/* NON � in esecuzione il uP Pump Control -> si tratta di un caricamento statico */
 598:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        	/* il caricamento alternativo alla turbina � a tempo, in base alla portata storica */
 599:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 600:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	         	 /*	 QI - 26.10.09 spostato ad inizio caricamento
 601:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          	if ( isFullRequested )
 602:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	      		{ // richiesto controllo su pieno pressostato per eventuale F06 : 
 603:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	      		   // configurazione timer per timeout caricamento
 604:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           
 605:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	            FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 606:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****        
 607:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	      		}
 608:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	      		*/
 609:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				loadingWater =  (uP_Load_Data.tgWater - WaterInDW);	 /* cos� si tiene conto dell'acqua carica
 610:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           
 611:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          /* Calcolo tempo di caricamento residuo */
 612:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if (  loadMode!=LOA_PS_CHECK_MODE )
 613:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{
 614:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		          /*loadingWater =  OFFS_B(uPLoad_setting_data.Data,0);*/		/*var locale utile per debug*/
 615:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****      
 616:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				    uP_Load_Data.time = LOA_levTOtime_Conv(loadingWater); /* Calcolo tempo totale di caricament
 617:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					LOA_timeLoad_Init();  /*Inizializzazione caricamento a tempo*/	  
 618:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					
 619:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}		  	  
 620:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	            uP_Load_Data.status = LOAD_EXE_TIME;
 621:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           
 622:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****          		 /*posso proseguire con LOAD_EXE_TIME senza effettuare return*/
 623:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 624:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****        		} 
 625:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	}
 626:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  	
 627:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}/* LOAD_EXE */
 628:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
 629:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_EXE_PP)
 630:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{/*caricamento a pressostato (dinamico)*/
 631:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 632:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   		
 633:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )
 634:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	{/* pieno pressostato */
 635:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  
 636:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  (void)SWTC_Run((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 637:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		  
 638:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  if ( SWTC_IsExpired((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER) )
 639:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  { /* caricamento a P.P. concluso (end conteggio per stabilit� pressostato in pieno) */
 640:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	   
 641:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 642:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 643:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* Aggiornamento portata storica - se richiesto */
 644:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_levTOtimeRef_Update(); 
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 646:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				  /* Aggiornamento acqua in vasca */
 647:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_waterInDW_defUpdate();
 648:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 649:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* disabilitazione timeout di caricamento */  /*NON SERVE: Se sono qui nessuno lo ha abilitato*
 650:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		       /*FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;*/
 651:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   	    
 652:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	    	uP_Load_Data.status = LOAD_TRUE;  
 653:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	    
 654:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  }
 655:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  
 656:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	}
 657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	else
 658:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	{/* vuoto - continuo caricamento */
 659:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  
 660:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	 /*LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON;*/ /* pilotaggio EV*/
 661:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	 
 662:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	 /* re-inizializzo counter per tempo stabilit� pressostato in pieno */
 663:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		 
 664:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		  (void) SWTC_SetSValue ((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_SCounterValue)
 665:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	 
 666:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	}
 667:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 668:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* carico pilotato comunque per continuit� */
 669:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/
 670:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   }
 672:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
 673:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_EXE_TIME)
 674:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{/* caricamento a tempo (statico)*/
 675:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    if ( LOA_timeLoadEnd_Check() == S_OK )
 676:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    { /* caricamento a tempo concluso */
 677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.turbina_KO=TRUE;
 678:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* 11.02.10 - controllo sul pieno richiesto */
 679:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if (isFullRequested)
 680:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* EA, variabile mai impostata a 1 se ci sono i sensori virtuali*/
 681:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* pieno richiesto */
 682:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			
 683:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )	
 684:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{/* pieno raggiunto */
 685:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/* Aggiornamento portata storica - se richiesto */
 686:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         			LOA_levTOtimeRef_Update(); 
 687:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 688:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   					/* Aggiornamento acqua in vasca */
 689:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   					LOA_waterInDW_defUpdate();
 690:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   			      
 691:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         			uP_Load_Data.status = LOAD_TRUE;			
 692:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					
 693:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 694:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				else if (FltLoadToutData.state == FLT_LOAD_TOUT_END)
 695:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{/* pieno richiesto e non raggiunto - esaurito timeout di caricamento 
 696:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						(in realt� non dovrebbe verificarsi perch� vado in fault): termina uP e non piloto EV */
 697:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         			uP_Load_Data.status = LOAD_TRUE;
 699:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         
 700:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         			return S_OK; 	
 701:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 702:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				else
 703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{
 704:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					/* Do nothing */
 705:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 706:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 707:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			else
 708:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* pieno non richiesto */
 709:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 710:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* Aggiornamento portata storica - se richiesto */
 711:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         		LOA_levTOtimeRef_Update(); 
 712:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 713:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   				/* Aggiornamento acqua in vasca */
 714:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   				LOA_waterInDW_defUpdate();
 715:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   			      
 716:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         		uP_Load_Data.status = LOAD_TRUE;				
 717:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 718:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			
 719:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
 720:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* else caricamento a tempo non concluso -> pilotaggio EV*/
 721:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 722:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* QI 29.01.10 ELIMINATO */
 723:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/*QI 07.01.10 - quando � in esecuzione il uP Load � attivo il Tout di caricamento (se non sc
 724:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			ribadito lo stato di EXE per assicurare la ripresa dopo PAUSE  */
 725:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/*FltLoadToutData.state = FLT_LOAD_TOUT_EXE;*/
 726:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 727:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* carico pilotato comunque per continuit� */
 728:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/
 729:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 730:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 731:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
 732:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
 733:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
 734:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_PS_DINAMIC)
 735:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 736:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/*uP_Load_Data.pump_act=FALSE;*/
 737:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* la velocit� qui dovrebbe essere quella di lavaggio*/
 738:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/*EA: rivedere la logica dell'ativazione del motore*/
 739:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 740:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 741:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if (TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)) )
 742:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{/* se lo stato del sensore non � valido aspetta che torni tale*/
 743:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==0) )
 744:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* vedo il vuoto*/
 745:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( !uP_Load_Data.pump_act)
 746:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{/* esce dal uP */	
 747:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 748:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #ifdef _STATISTICS_ON_
 749:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						
 750:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 751:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif	
 752:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 753:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				  	/* Aggiornamento acqua in vasca */
 754:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					LOA_waterInDW_defUpdate();
 755:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 756:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_TRUE;
 757:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					return S_FALSE;
 758:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					
 759:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}
 760:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 761:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR
 762:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* vedo il pieno */
 763:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( uP_Load_Data.pump_act)
 764:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{
 765:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.pump_act=FALSE;
 766:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}else
 767:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				{				
 768:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					(void)SWTC_Run((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 769:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				}	
 770:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 771:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER) )
 772:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{ /* caricamento a P.P. concluso (end conteggio per stabilit� pressostato in pieno) */
 773:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 774:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 775:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* Aggiornamento acqua in vasca */
 776:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_waterInDW_defUpdate();
 777:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 778:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_TRUE;
 779:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 780:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			
 781:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* carico pilotato comunque per continuit� */
 782:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/
 783:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}else
 784:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
 785:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 786:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		 }	 
 787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			
 788:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 789:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}		
 790:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   if (uP_Load_Data.status == LOAD_TRUE)
 791:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   {    
 792:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     /*
 793:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		Lo stato LOAD_TRUE corrisponde a return S_OK
 794:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(OK avanzamento passo) e impedisce di riprendere il caricamento
 795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		*/
 796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		Flag_levTOtimeRef_update = FALSE;
 797:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LOA_disableLoadCounters();  /* disabilitazione contatori */
 799:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 800:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     return S_OK; 
 801:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     
 802:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   } /* LOAD_TRUE */
 803:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 804:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   return S_FALSE;
 805:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 806:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 807:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
 808:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**/
 809:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 810:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 811:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 812:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ************** */
 813:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Local Function */
 814:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* ************** */
 815:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 816:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 817:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**
 818:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Gestisce aggiornamento fattore di conversione tra livello acqua e tempo ("portata") .
 819:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
 820:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \note :	Aggiorna direttamente variabili globali. viene chiamata solo una volta in un caso specifico
 821:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		Fondamentale inizializzare (WM_Hound?) la var globale uP_Load_Data.levTOtimeRef al LEV_TO_TIME_MI
 822:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
 823:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
 824:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			12/03/2008
 825:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
 826:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 827:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
 828:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 829:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #if defined (BUILD_FREESCALE_GB60)
 830:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma INLINE
 831:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #elif defined (BUILD_RENESAS_36079)
 832:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma inline(LOA_levTOtimeRef_Update)
 833:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif
 834:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_levTOtimeRef_Update(void)
 835:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
  10                             		.loc 1 835 0
 836:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t levTOtime_tmp;
 837:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 838:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (Flag_levTOtimeRef_update == TRUE)	
  11                             		.loc 1 838 0
  12 0000 FB E2 00 00 00 00       		mov.L	#_Flag_levTOtimeRef_update, r14
  13 0006 EC EE                   		mov.L	[r14], r14
  14 0008 61 1E                   		cmp	#1, r14
  15 000a 21 5F                   		bne	.L1
  16                             	.LBB4:
 839:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 840:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  
 841:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  	if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )
  17                             		.loc 1 841 0
  18 000c FB E2 00 00 00 00       		mov.L	#_GICriteria, r14
  19 0012 CC EE                   		mov.B	[r14], r14
  20                             	.LBB5:
  21 0014 FD 74 CE 01             		tst	#1, r14
  22 0018 20 48                   		beq	.L3
 842:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  	{/* pieno pressostato */
 843:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   	     	(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER);
  23                             		.loc 1 843 0
  24 001a 66 31                   		mov	#3, r1
  25 001c 05 00 00 00             		bsr	_SWTC_Stop
  26                             	.LVL0:
 844:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 845:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     		levTOtime_tmp = ( (SWTC_TimeType)SWTC_GetElapsedTime((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_C
  27                             		.loc 1 845 0
  28 0020 66 31                   		mov	#3, r1
  29 0022 05 00 00 00             		bsr	_SWTC_GetElapsedTime
  30                             	.LVL1:
 846:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
 847:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****       		/* QI - 13.10.09 */
 848:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****       
 849:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if (levTOtime_tmp < LEV_TO_TIME_MIN )
  31                             		.loc 1 849 0
  32 0026 FB E2 00 00 00 00       		mov.L	#_Tab_HWCPressSensorData, r14
  33 002c EC E3                   		mov.L	[r14], r3
  34 002e EF 14                   		mov.L	r1, r4
  35                             	.LBE5:
  36 0030 CD 3E 01                		mov.B	1[r3], r14
  37                             	.LBB6:
  38 0033 76 24 FF 00             		and	#0xff, r4
  39                             	.LBE6:
  40 0037 75 2E 7F                		and	#0x7f, r14
  41                             	.LBB7:
  42 003a 5B E2                   		movu.B	r14, r2
  43 003c 47 24                   		cmp	r2, r4
  44 003e 29 10                   		blt	.L4
  45                             	.LBE7:
 850:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* valore inferiore al minimo -> uso il minimo */
 851:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 852:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				levTOtime_tmp = LEV_TO_TIME_MIN;
 853:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 854:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			else if (levTOtime_tmp > LEV_TO_TIME_MAX) 
  46                             		.loc 1 854 0
  47 0040 CD 3E 02                		mov.B	2[r3], r14
  48 0043 75 2E 7F                		and	#0x7f, r14
  49                             	.LBB8:
  50 0046 5B E3                   		movu.B	r14, r3
  51 0048 47 34                   		cmp	r3, r4
  52 004a 2A 04                   		bgt	.L4
 845:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     		levTOtime_tmp = ( (SWTC_TimeType)SWTC_GetElapsedTime((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_C
  53                             		.loc 1 845 0
  54 004c CF 1E                   		mov.B	r1, r14
  55                             		.balign 2,3,5
  56                             	.L4:
  57                             	.LVL2:
 855:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{/* valore superiore al max -> uso il max */
 856:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 857:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				levTOtime_tmp = LEV_TO_TIME_MAX;   
 858:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 859:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			else
 860:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			{
 861:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				/* Do nothing */
 862:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			}
 863:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 864:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	/* aggiornamento portata storica con il nuovo valore calcolato (o con min/max se out of range
 865:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	uP_Load_Data.levTOtimeRef = ( (((uint16_t)uP_Load_Data.levTOtimeRef*7) + levTOtime_tmp)/8 );
  58                             		.loc 1 865 0
  59 004e FB 32 00 00 00 00       		mov.L	#_uP_Load_Data, r3
  60 0054 58 34                   		movu.B	[r3], r4
  61 0056 5B EE                   		movu.B	r14, r14
  62 0058 63 74                   		mul	#7, r4
  63 005a 4B E4                   		add	r14, r4
  64 005c 6A 34                   		shar	#3, r4
  65 005e C3 34                   		mov.B	r4, [r3]
  66                             	.LVL3:
  67                             		.balign 2,3,5
  68                             	.L3:
 866:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	
 867:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 868:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /*	    	if ( (levTOtime_tmp > LEV_TO_TIME_MIN) && (levTOtime_tmp < LEV_TO_TIME_MAX) )
 869:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	{  entro i limiti
 870:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    		uP_Load_Data.levTOtimeRef = ( (((uint16_t)uP_Load_Data.levTOtimeRef*7) + levTOtime_tmp)/8 );
 871:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	}
 872:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	else
 873:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	{  fuori dei limiti min-max -> prendo default
 874:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  
 875:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	  uP_Load_Data.levTOtimeRef = LEV_TO_TIME_DEF; 
 876:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  
 877:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    	}*/
 878:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 879:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	
 880:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   		}
 881:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   	
 882:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   		Flag_levTOtimeRef_update = FALSE;
  69                             		.loc 1 882 0
  70 0060 FB E2 00 00 00 00       		mov.L	#_Flag_levTOtimeRef_update, r14
  71 0066 F8 E6 00                		mov.L	#0, [r14]
  72                             	.L1:
  73 0069 02                      		rts
  74                             	.LBE8:
  75                             	.LBE4:
  76                             	.LFE1:
  78                             		.section	.text.LOA_levTOtime_Conv,"ax",@progbits
  79                             		.global	_LOA_levTOtime_Conv
  81                             	_LOA_levTOtime_Conv:
  82                             	.LFB2:
 883:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   	
 884:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
 885:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 886:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
 887:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**/
 888:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 889:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**
 890:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Gestisce conversione da livello d'acqua in dl a tempo in secondi in base alla portata
 891:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 892:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in]		level : livello acqua in dl
 893:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return 		tempo in secondi corrispondente ad un caricamento da vuoto a pieno pressostato
 894:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(dato aggiornato o default)
 895:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
 896:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
 897:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			12/03/2008
 898:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
 899:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 900:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
 901:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #if defined (BUILD_FREESCALE_GB60)
 902:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma INLINE
 903:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #elif defined (BUILD_RENESAS_36079)
 904:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma inline(LOA_levTOtime_Conv)
 905:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif
 906:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint16_t LOA_levTOtime_Conv(uint8_t level)
 907:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
  83                             		.loc 1 907 0
  84                             	.LVL4:
 908:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 909:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* EA mettere qui l'impostazione del tempo in fuznione del nuovo parametro in Editor*/
 910:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	
 911:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	return ((uint16_t)(((uint32_t)level * uP_Load_Data.levTOtimeRef)/(FULL_REF_LEVEL)));
  85                             		.loc 1 911 0
  86 0000 FB E2 00 00 00 00       		mov.L	#_uP_Load_Data, r14
  87 0006 5B 11                   		movu.B	r1, r1
  88 0008 4C E1                   		mul	[r14].UB, r1
  89                             	.LVL5:
  90 000a FB E2 00 00 00 00       		mov.L	#_Tab_HWCPressSensorData, r14
  91 0010 EC EE                   		mov.L	[r14], r14
 912:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
  92                             		.loc 1 912 0
  93 0012 FC 25 E1 05             		divu	5[r14].UB, r1
  94 0016 02                      		rts
  95                             	.LFE2:
  97                             		.section	.text.LOA_timeTOlev_Conv,"ax",@progbits
  98                             		.global	_LOA_timeTOlev_Conv
 100                             	_LOA_timeTOlev_Conv:
 101                             	.LFB3:
 913:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**/
 914:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 915:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**
 916:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Gestisce conversione da tempo in secondi a livello d'acqua in dl in base alla portata
 917:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 918:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in]	  tempo in secondi corrispondente ad un caricamento da vuoto a pieno pressostato
 919:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(dato aggiornato o default)
 920:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 921:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return       level : livello acqua in dl	
 922:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  
 923:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
 924:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			28/08/2008
 925:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
 926:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				
 927:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
 928:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #if defined (BUILD_FREESCALE_GB60)
 929:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma INLINE
 930:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #elif defined (BUILD_RENESAS_36079)
 931:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma inline(LOA_timeTOlev_Conv)
 932:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif
 933:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t LOA_timeTOlev_Conv(uint16_t time)
 934:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 102                             		.loc 1 934 0
 103                             	.LVL6:
 935:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	return ((uint8_t)(((uint32_t)time * (FULL_REF_LEVEL)) / uP_Load_Data.levTOtimeRef));
 104                             		.loc 1 935 0
 105 0000 FB E2 00 00 00 00       		mov.L	#_Tab_HWCPressSensorData, r14
 106 0006 EC EE                   		mov.L	[r14], r14
 107 0008 5F 11                   		movu.W	r1, r1
 108 000a 4D E1 05                		mul	5[r14].UB, r1
 109                             	.LVL7:
 110 000d FB E2 00 00 00 00       		mov.L	#_uP_Load_Data, r14
 111 0013 FC 24 E1                		divu	[r14].UB, r1
 936:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
 112                             		.loc 1 936 0
 113 0016 5B 11                   		movu.B	r1, r1
 114 0018 02                      		rts
 115                             	.LFE3:
 117                             		.section	.text.LOA_timeLoad_Init,"ax",@progbits
 118                             		.global	_LOA_timeLoad_Init
 120                             	_LOA_timeLoad_Init:
 121                             	.LFB4:
 937:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**/
 938:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 939:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 940:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 941:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**
 942:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Inizializza up counter per caricamento a tempo
 943:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 944:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in]		
 945:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 946:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \note: devo utilizzare un contatore diverso (timeLoad_counter) da quello 
 947:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \       del cacolo portata per la modalit� con cui l'aggiornamento della portata viene gestita
 948:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
 949:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			15/02/2006
 950:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
 951:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 952:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
 953:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #if defined (BUILD_FREESCALE_GB60)
 954:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma INLINE
 955:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #elif defined (BUILD_RENESAS_36079)
 956:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma inline(LOA_timeLoad_Init)
 957:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif
 958:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_timeLoad_Init(void)
 959:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 122                             		.loc 1 959 0
 960:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	uP_Load_Data.timeAcc = 0;
 123                             		.loc 1 960 0
 124 0000 FB E2 00 00 00 00       		mov.L	#_uP_Load_Data, r14
 961:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 962:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* config + init UP counter per conteggio caricamento a tempo */
 963:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #ifdef _CORRECT_BUG_UP_COUNTERS_
 964:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER, (SWTC_PrescalerType)COUNTERS
 125                             		.loc 1 964 0
 126 0006 66 51                   		mov	#5, r1
 127 0008 66 32                   		mov	#3, r2
 128 000a 75 43 7F                		mov	#0x7f, r3
 960:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	uP_Load_Data.timeAcc = 0;
 129                             		.loc 1 960 0
 130 000d F9 E5 07 00             		mov.W	#0, 14[r14]
 131                             		.loc 1 964 0
 132 0011 04 00 00 00             		bra	_Set_SmallCounter
 133                             	.LVL8:
 134                             	.LFE4:
 136                             		.section	.text.LOA_timeLoadEnd_Check,"ax",@progbits
 137                             		.global	_LOA_timeLoadEnd_Check
 139                             	_LOA_timeLoadEnd_Check:
 140                             	.LFB5:
 965:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #else
 966:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER, (SWTC_PrescalerType)COUNTERS
 967:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif /* _CORRECT_BUG_UP_COUNTERS_ */
 968:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
 969:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**/
 970:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 971:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 972:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**
 973:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Valuta se il target per il caricamento a tempo � stato raggiunto
 974:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 975:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in]		
 976:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return 		S_OK se il target � stato raggiunto
 977:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				S_FALSE se il target non � ancora raggiunto
 978:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				 
 979:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
 980:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			14/03/2008
 981:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
 982:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 983:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
 984:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #if defined (BUILD_FREESCALE_GB60)
 985:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma INLINE
 986:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #elif defined (BUILD_RENESAS_36079)
 987:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma inline(LOA_timeLoadEnd_Check)
 988:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif
 989:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t LOA_timeLoadEnd_Check(void)
 990:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 141                             		.loc 1 990 0
 142 0000 6E 7A                   		pushm	r7-r10
 143                             	.LCFI0:
 991:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint16_t timeElapsed_tmp;
 992:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 993:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	/* Caricamento in base alla portata (a tempo) */
 994:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 995:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	timeElapsed_tmp = (uP_Load_Data.timeAcc + (SWTC_TimeType)SWTC_GetElapsedTime((SWTC_CountersType)MP
 144                             		.loc 1 995 0
 145 0002 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 146 0008 DD 7A 07                		mov.W	14[r7], r10
 147 000b 66 51                   		mov	#5, r1
 148 000d 05 00 00 00             		bsr	_SWTC_GetElapsedTime
 149                             	.LVL9:
 150 0011 4B A1                   		add	r10, r1
 151                             	.LVL10:
 996:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
 997:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (timeElapsed_tmp >= uP_Load_Data.time)
 152                             		.loc 1 997 0
 153 0013 5D 7E 06                		movu.W	12[r7], r14
 154 0016 5F 1A                   		movu.W	r1, r10
 155 0018 47 AE                   		cmp	r10, r14
 998:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
 999:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		/* End counting */
1000:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1001:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER);
 156                             		.loc 1 1001 0
 157 001a 66 51                   		mov	#5, r1
 997:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (timeElapsed_tmp >= uP_Load_Data.time)
 158                             		.loc 1 997 0
 159 001c 24 0A                   		bgtu	.L12
 160                             		.loc 1 1001 0
 161 001e 05 00 00 00             		bsr	_SWTC_Stop
 162                             	.LVL11:
1002:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1003:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		return S_OK;
 163                             		.loc 1 1003 0
 164 0022 66 01                   		mov	#0, r1
 165 0024 2E 24                   		bra	.L13
 166                             	.L12:
1004:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
1005:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	else
1006:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	{
1007:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( SWTC_IsExpired((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER) )
 167                             		.loc 1 1007 0
 168 0026 05 00 00 00             		bsr	_SWTC_IsExpired
 169                             	.LVL12:
 170 002a 61 01                   		cmp	#0, r1
 171 002c 20 14                   		beq	.L14
1008:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		{
1009:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* Restart counter */
1010:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1011:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* Update timeAcc */
1012:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.timeAcc += TOUT_MAX_COUNTER;
 172                             		.loc 1 1012 0
 173 002e DD 7A 07                		mov.W	14[r7], r10
1013:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1014:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			/* Restart timer */
1015:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #ifdef _CORRECT_BUG_UP_COUNTERS_
1016:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_SetSValue ((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER,(SWTC_SCounterValue)TOUT_MAX
 174                             		.loc 1 1016 0
 175 0031 66 51                   		mov	#5, r1
1012:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.timeAcc += TOUT_MAX_COUNTER;
 176                             		.loc 1 1012 0
 177 0033 71 AA 7F                		add	#0x7f, r10
 178                             		.loc 1 1016 0
 179 0036 75 42 7F                		mov	#0x7f, r2
1012:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.timeAcc += TOUT_MAX_COUNTER;
 180                             		.loc 1 1012 0
 181 0039 D7 7A 07                		mov.W	r10, 14[r7]
 182                             		.loc 1 1016 0
 183 003c 05 00 00 00             		bsr	_SWTC_SetSValue
 184                             	.LVL13:
 185                             		.balign 2,3,1
 186                             	.L14:
1017:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #else
1018:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_SetSValue ((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER,(SWTC_SCounterValue)0);
1019:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif /* _CORRECT_BUG_UP_COUNTERS_ */
1020:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1021:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		}
1022:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****  		(void)SWTC_Run((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER);
 187                             		.loc 1 1022 0
 188 0040 66 51                   		mov	#5, r1
 189 0042 05 00 00 00             		bsr	_SWTC_Run
 190                             	.LVL14:
1023:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		
1024:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	}
1025:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1026:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	return S_FALSE;
 191                             		.loc 1 1026 0
 192 0046 66 11                   		mov	#1, r1
 193                             		.balign 2,3,1
 194                             	.L13:
1027:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
 195                             		.loc 1 1027 0
 196 0048 64 11                   		and	#1, r1
 197 004a 3F 7A 04                		rtsd	#16, r7-r10
 198                             	.LFE5:
 200 004d 03                      		.section	.text.LOA_waterInDW_defUpdate,"ax",@progbits
 201                             		.global	_LOA_waterInDW_defUpdate
 203                             	_LOA_waterInDW_defUpdate:
 204                             	.LFB6:
1028:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**/
1029:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1030:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**
1031:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Aggiorna la quantit� di acqua in vasca con la quantit� che � stato
1032:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** richiesto di caricare nel dato del uP.
1033:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Viene fatto anche in caso di caricamento a pressostato perch�, pur commettendo un errore,
1034:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** � la scelta pi� prudente in caso di un ripristino successivo.
1035:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1036:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in]		
1037:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return 		
1038:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 								 
1039:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
1040:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			17/03/2008
1041:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
1042:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1043:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
1044:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1045:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1046:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_waterInDW_defUpdate(void)
1047:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 205                             		.loc 1 1047 0
1048:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /*
1049:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1050:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** uint8_t loadingWater;
1051:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
1052:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   loadingWater =  OFFS_B(uPLoad_setting_data.Data,0);		/*var locale utile per debug*/
1053:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           
1054:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   /*WaterInDW += loadingWater;*/
1055:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
1056:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1057:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /* Aggiornamento acqua in vasca con la quantit� che avrei dovuto caricare a turbina */
1058:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1059:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	 WaterInDW =  uP_Load_Data.tgWater; 			/* QI - 13.10.09*/
 206                             		.loc 1 1059 0
 207 0000 FB 42 00 00 00 00       		mov.L	#_uP_Load_Data, r4
 208 0006 89 44                   		mov.B	4[r4], r4
 209 0008 FB E2 00 00 00 00       		mov.L	#_WaterInDW, r14
 210 000e C3 E4                   		mov.B	r4, [r14]
 211 0010 02                      		rts
 212                             	.LFE6:
 214                             		.section	.text.LOA_disableLoadCounters,"ax",@progbits
 215                             		.global	_LOA_disableLoadCounters
 217                             	_LOA_disableLoadCounters:
 218                             	.LFB7:
1060:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   
1061:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
1062:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**/
1063:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1064:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** /**
1065:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** Disabilita i contatori utilizzati nel uP
1066:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \param [in]		
1067:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \return 		
1068:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 								 
1069:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \version		1.0.0
1070:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \date 			03/04/2008
1071:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** \author			Valeria Catani
1072:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 
1073:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** */
1074:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #if defined (BUILD_FREESCALE_GB60)
1075:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma INLINE
1076:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #elif defined (BUILD_RENESAS_36079)
1077:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #pragma inline(LOA_disableLoadCounters)
1078:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** #endif
1079:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** void LOA_disableLoadCounters(void)
1080:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 219                             		.loc 1 1080 0
1081:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****    (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER);
 220                             		.loc 1 1081 0
 221 0000 66 31                   		mov	#3, r1
 222 0002 05 00 00 00             		bsr	_SWTC_Stop
 223                             	.LVL15:
1082:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****    (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 224                             		.loc 1 1082 0
 225 0006 66 41                   		mov	#4, r1
 226 0008 05 00 00 00             		bsr	_SWTC_Stop
 227                             	.LVL16:
1083:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****    (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER);
 228                             		.loc 1 1083 0
 229 000c 66 51                   		mov	#5, r1
 230 000e 05 00 00 00             		bsr	_SWTC_Stop
 231                             	.LVL17:
1084:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****    
1085:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****    (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION); 
 232                             		.loc 1 1085 0
 233 0012 75 41 23                		mov	#35, r1
 234 0015 05 00 00 00             		bsr	_SWTC_Stop
 235                             	.LVL18:
1086:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****    (void)SWTC_Stop((SWTC_CountersType)MP_PUMP_LOAD_M_COUNTER);	
 236                             		.loc 1 1086 0
 237 0019 75 41 20                		mov	#32, r1
 238 001c 04 00 00 00             		bra	_SWTC_Stop
 239                             	.LVL19:
 240                             	.LFE7:
 242                             		.section	.text.LOA_uP_Load_Exe,"ax",@progbits
 243                             		.global	_LOA_uP_Load_Exe
 245                             	_LOA_uP_Load_Exe:
 246                             	.LFB0:
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 247                             		.loc 1 88 0
 248                             	.LVL20:
 249 0000 6E 7C                   		pushm	r7-r12
 250                             	.LCFI1:
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE )
 251                             		.loc 1 99 0
 252 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 253 0008 CD 7B 04                		mov.B	4[r7], r11
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 254                             		.loc 1 88 0
 255 000b 60 40                   		sub	#4, r0
 256                             	.LCFI2:
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE )
 257                             		.loc 1 99 0
 258 000d EF BE                   		mov.L	r11, r14
 259 000f 64 2E                   		and	#2, r14
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** {
 260                             		.loc 1 88 0
 261 0011 CF 2C                   		mov.B	r2, r12
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE )
 262                             		.loc 1 99 0
 263 0013 21 13                   		bne	.L22
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.status = LOAD_INIT;
 264                             		.loc 1 103 0
 265 0015 FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 266 001b C7 AE 01                		mov.B	r14, 1[r10]
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.VS_check=FALSE;
 267                             		.loc 1 104 0
 268 001e CD AE 03                		mov.B	3[r10], r14
 269 0021 7A 5E                   		bclr	#5, r14
 270 0023 C7 AE 03                		mov.B	r14, 3[r10]
 271                             		.balign 2,3,1
 272                             	.L22:
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if(Interpreter_Data[0].optionalStepInitialized == FALSE)
 273                             		.loc 1 107 0
 274 0026 64 4B                   		and	#4, r11
 275 0028 5B BB                   		movu.B	r11, r11
 276 002a 61 0B                   		cmp	#0, r11
 277 002c 21 10                   		bne	.L23
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.VS_check=FALSE;
 278                             		.loc 1 109 0
 279 002e FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 280 0034 CD AB 03                		mov.B	3[r10], r11
 281 0037 7A 5B                   		bclr	#5, r11
 282 0039 C7 AB 03                		mov.B	r11, 3[r10]
 283                             		.balign 2,3,5
 284                             	.L23:
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	FltLoadToutData.uP_exe = TRUE;
 285                             		.loc 1 113 0
 286 003c FB A2 00 00 00 00       		mov.L	#_FltLoadToutData, r10
 287 0042 CC AB                   		mov.B	[r10], r11
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	loadMode = HighStatement & (F1|F0);
 288                             		.loc 1 116 0
 289 0044 EF 17                   		mov.L	r1, r7
 290 0046 75 27 30                		and	#48, r7
 291                             	.LVL21:
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	FltLoadToutData.uP_exe = TRUE;
 292                             		.loc 1 113 0
 293 0049 78 0B                   		bset	#0, r11
 294 004b C3 AB                   		mov.B	r11, [r10]
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (( loadMode== LOA_PS_CHECK_MODE) && ( HWC_Flags.bit.vs_wash_presence == 0))
 295                             		.loc 1 118 0
 296 004d 5B 7A                   		movu.B	r7, r10
 297 004f 75 5A 20                		cmp	#32, r10
 298 0052 21 26                   		bne	.L24
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (( loadMode== LOA_PS_CHECK_MODE) && ( HWC_Flags.bit.vs_wash_presence == 0))
 299                             		.loc 1 118 0 is_stmt 0 discriminator 1
 300 0054 FB A2 00 00 00 00       		mov.L	#_HWC_Flags, r10
 301 005a DC AA                   		mov.W	[r10], r10
 302 005c 76 2A 00 08             		and	#0x800, r10
 303 0060 5F AA                   		movu.W	r10, r10
 304 0062 61 0A                   		cmp	#0, r10
 305 0064 21 14                   		bne	.L24
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.status = LOAD_TRUE;
 306                             		.loc 1 120 0 is_stmt 1
 307 0066 FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.pump_act=FALSE;	
 308                             		.loc 1 121 0
 309 006c CD AB 03                		mov.B	3[r10], r11
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.status = LOAD_TRUE;
 310                             		.loc 1 120 0
 311 006f F9 A4 01 04             		mov.B	#4, 1[r10]
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.pump_act=FALSE;	
 312                             		.loc 1 121 0
 313 0073 7A 6B                   		bclr	#6, r11
 314 0075 C7 AB 03                		mov.B	r11, 3[r10]
 315                             		.balign 2,3,5
 316                             	.L24:
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( (uPDoorStatus == UP_DOOR_WAIT)||
 317                             		.loc 1 124 0
 318 0078 FB A2 00 00 00 00       		mov.L	#_uPDoorStatus, r10
 319 007e 58 AA                   		movu.B	[r10], r10
 320 0080 61 0A                   		cmp	#0, r10
 321 0082 20 28                   		beq	.L25
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( (uPDoorStatus == UP_DOOR_WAIT)||
 322                             		.loc 1 124 0 is_stmt 0 discriminator 1
 323 0084 5B 7A                   		movu.B	r7, r10
 324 0086 75 5A 20                		cmp	#32, r10
 325 0089 21 59                   		bne	.L26
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	((loadMode== LOA_PS_CHECK_MODE)&&(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==5)&& uP_Load_Data.
 326                             		.loc 1 125 0 is_stmt 1
 327 008b FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 328 0091 58 AA                   		movu.B	[r10], r10
 329 0093 61 5A                   		cmp	#5, r10
 330 0095 21 4D                   		bne	.L26
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	((loadMode== LOA_PS_CHECK_MODE)&&(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==5)&& uP_Load_Data.
 331                             		.loc 1 125 0 is_stmt 0 discriminator 1
 332 0097 FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 333 009d DD AA 01                		mov.W	2[r10], r10
 334 00a0 75 2A 20                		and	#32, r10
 335 00a3 5F AA                   		movu.W	r10, r10
 336 00a5 61 0A                   		cmp	#0, r10
 337 00a7 20 3B                   		beq	.L26
 338 00a9 03                      		.balign 2,3,3
 339                             	.L25:
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LOA_disableLoadCounters();  /*disabilitazione contatori*/
 340                             		.loc 1 129 0 is_stmt 1
 341 00aa 05 00 00 00             		bsr	_LOA_disableLoadCounters
 342                             	.LVL22:
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)SWTC_Stop((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER);
 343                             		.loc 1 131 0
 344 00ae 66 61                   		mov	#6, r1
 345 00b0 05 00 00 00             		bsr	_SWTC_Stop
 346                             	.LVL23:
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.init = TRUE;
 347                             		.loc 1 137 0
 348 00b4 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 349                             	.LVL24:
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);
 350                             		.loc 1 132 0
 351 00ba 75 41 1F                		mov	#31, r1
 352 00bd 05 00 00 00             		bsr	_SWTC_Stop
 353                             	.LVL25:
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.init = TRUE;
 354                             		.loc 1 137 0
 355 00c1 CD 7A 03                		mov.B	3[r7], r10
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION, (SWTC_PrescalerType)COUNTERS2_
 356                             		.loc 1 138 0
 357 00c4 75 41 23                		mov	#35, r1
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.init = TRUE;
 358                             		.loc 1 137 0
 359 00c7 78 7A                   		bset	#7, r10
 360 00c9 C7 7A 03                		mov.B	r10, 3[r7]
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION, (SWTC_PrescalerType)COUNTERS2_
 361                             		.loc 1 138 0
 362 00cc FB 72 00 00 00 00       		mov.L	#_uPLoad_setting_data, r7
 363 00d2 EC 77                   		mov.L	[r7], r7
 364 00d4 66 32                   		mov	#3, r2
 365 00d6 89 7B                   		mov.B	5[r7], r3
 366 00d8 75 23 7F                		and	#0x7f, r3
 367 00db 05 00 00 00             		bsr	_Set_SmallCounter
 368                             	.LVL26:
 369 00df 38 DD 06                		bra	.L157
 370                             	.LVL27:
 371                             	.L26:
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (( (Flag_levTOtimeRef_update == TRUE) || (uP_Load_Data.status == LOAD_EXE_PP) )&& ( loadMode!=L
 372                             		.loc 1 156 0
 373 00e2 FB A2 00 00 00 00       		mov.L	#_Flag_levTOtimeRef_update, r10
 374 00e8 EC A4                   		mov.L	[r10], r4
 375 00ea 61 14                   		cmp	#1, r4
 376 00ec 20 10                   		beq	.L28
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (( (Flag_levTOtimeRef_update == TRUE) || (uP_Load_Data.status == LOAD_EXE_PP) )&& ( loadMode!=L
 377                             		.loc 1 156 0 is_stmt 0 discriminator 2
 378 00ee FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 379 00f4 59 AA 01                		movu.B	1[r10], r10
 380 00f7 61 3A                   		cmp	#3, r10
 381 00f9 21 1B                   		bne	.L29
 382 00fb 03                      		.balign 2,3,1
 383                             	.L28:
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (( (Flag_levTOtimeRef_update == TRUE) || (uP_Load_Data.status == LOAD_EXE_PP) )&& ( loadMode!=L
 384                             		.loc 1 156 0 discriminator 1
 385 00fc 5B 7A                   		movu.B	r7, r10
 386 00fe 75 5A 20                		cmp	#32, r10
 387 0101 20 13                   		beq	.L29
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	  	if ( (TESTBIT (GIValid, (GI_FIRST_CRITERION_BIT + GI_PRESS_SENS_CR_FULL_IND) ) == 0) || (TESTBI
 388                             		.loc 1 158 0 is_stmt 1
 389 0103 FB A2 00 00 00 00       		mov.L	#_GIValid, r10
 390 0109 DC AA                   		mov.W	[r10], r10
 391 010b 64 3A                   		and	#3, r10
 392 010d 61 3A                   		cmp	#3, r10
 393 010f 20 05                   		beq	.L29
 394 0111 38 2B 07                		bra	.L158
 395                             	.L29:
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( TESTBIT (GICriteria,GI_CR_OVFL_IND) != 0 )
 396                             		.loc 1 176 0
 397 0114 FB A2 00 00 00 00       		mov.L	#_GICriteria, r10
 398 011a CC AA                   		mov.B	[r10], r10
 399 011c EF AB                   		mov.L	r10, r11
 400 011e 64 2B                   		and	#2, r11
 401 0120 5B BB                   		movu.B	r11, r11
 402 0122 61 0B                   		cmp	#0, r11
 403 0124 20 09                   		beq	.L30
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LOA_disableLoadCounters();  /*disabilitazione contatori*/
 404                             		.loc 1 180 0
 405 0126 05 00 00 00             		bsr	_LOA_disableLoadCounters
 406                             	.LVL28:
 407 012a 38 92 06                		bra	.L157
 408                             	.LVL29:
 409                             	.L30:
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_INIT)
 410                             		.loc 1 190 0
 411 012d FB 32 00 00 00 00       		mov.L	#_uP_Load_Data, r3
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	isFullRequested = ( ( loadMode == LOA_PP_CHECK_MODE )? TRUE : FALSE );
 412                             		.loc 1 146 0
 413 0133 5B 7E                   		movu.B	r7, r14
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_INIT)
 414                             		.loc 1 190 0
 415 0135 B0 3B                   		movu.B	1[r3], r3
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	isFullRequested = ( ( loadMode == LOA_PP_CHECK_MODE )? TRUE : FALSE );
 416                             		.loc 1 146 0
 417 0137 75 5E 10                		cmp	#16, r14
 418 013a FC DB B0                		sceq.L	r11
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_INIT)
 419                             		.loc 1 190 0
 420 013d 61 03                   		cmp	#0, r3
 421 013f 3B 36 01                		bne	.L31
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		CLRBIT(Flags_1, JIF_FLAG1_UP_TERMINATED_KO_POS);
 422                             		.loc 1 192 0
 423 0142 FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 424 0148 CC AE                   		mov.B	[r10], r14
 425 014a EF E4                   		mov.L	r14, r4
 426 014c 75 24 EF                		and	#-17, r4
 427 014f C3 A4                   		mov.B	r4, [r10]
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( isFullRequested  )
 428                             		.loc 1 199 0
 429 0151 61 0B                   		cmp	#0, r11
 430 0153 FB A2 00 00 00 00       		mov.L	#_FltLoadToutData, r10
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 431                             		.loc 1 203 0
 432 0159 CC AB                   		mov.B	[r10], r11
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( isFullRequested  )
 433                             		.loc 1 199 0
 434 015b 21 06                   		bne	.L32
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;
 435                             		.loc 1 195 0
 436 015d 64 1B                   		and	#1, r11
 437 015f 2E 07                   		bra	.L154
 438                             	.L32:
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 439                             		.loc 1 203 0
 440 0161 64 1B                   		and	#1, r11
 441 0163 65 2B                   		or	#2, r11
 442 0165 03                      		.balign 2,3,1
 443                             	.L154:
 444 0166 C3 AB                   		mov.B	r11, [r10]
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FltFlagsKO.loadPP = FALSE;  
 445                             		.loc 1 208 0
 446 0168 FB A2 00 00 00 00       		mov.L	#_FltFlagsKO, r10
 447 016e CC AB                   		mov.B	[r10], r11
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( TESTBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS)!=0 )
 448                             		.loc 1 210 0
 449 0170 64 2E                   		and	#2, r14
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FltFlagsKO.loadPP = FALSE;  
 450                             		.loc 1 208 0
 451 0172 7A 5B                   		bclr	#5, r11
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( TESTBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS)!=0 )
 452                             		.loc 1 210 0
 453 0174 5B EE                   		movu.B	r14, r14
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FltFlagsKO.loadPP = FALSE;  
 454                             		.loc 1 208 0
 455 0176 C3 AB                   		mov.B	r11, [r10]
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( TESTBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS)!=0 )
 456                             		.loc 1 210 0
 457 0178 61 0E                   		cmp	#0, r14
 458 017a 20 14                   		beq	.L34
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			CLRBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS);  
 459                             		.loc 1 215 0
 460 017c FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			clearRegWaterLoaded();
 461                             		.loc 1 213 0
 462 0182 05 00 00 00             		bsr	_clearRegWaterLoaded
 463                             	.LVL30:
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			CLRBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS);  
 464                             		.loc 1 215 0
 465 0186 CC AB                   		mov.B	[r10], r11
 466 0188 75 2B FD                		and	#-3, r11
 467 018b C3 AB                   		mov.B	r11, [r10]
 468 018d 03                      		.balign 2,3,1
 469                             	.L34:
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER, (SWTC_PrescalerType)COUNTE
 470                             		.loc 1 226 0
 471 018e 66 31                   		mov	#3, r1
 472 0190 CF 12                   		mov.B	r1, r2
 473 0192 75 43 7F                		mov	#0x7f, r3
 474 0195 05 00 00 00             		bsr	_Set_SmallCounter
 475                             	.LVL31:
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if( BasicLoader (PTR_UP_LOAD, LowStatement, &uPLoad_setting_data) != S_OK )
 476                             		.loc 1 232 0
 477 0199 75 41 11                		mov	#17, r1
 478 019c CF C2                   		mov.B	r12, r2
 479 019e FB 32 00 00 00 00       		mov.L	#_uPLoad_setting_data, r3
 480 01a4 05 00 00 00             		bsr	_BasicLoader
 481                             	.LVL32:
 482 01a8 5B 11                   		movu.B	r1, r1
 483 01aa 61 01                   		cmp	#0, r1
 484 01ac 3B 94 06                		bne	.L89
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		loadingWater =  OFFS_B(uPLoad_setting_data.Data,0);
 485                             		.loc 1 238 0
 486 01af FB A2 00 00 00 00       		mov.L	#_uPLoad_setting_data, r10
 487 01b5 EC AA                   		mov.L	[r10], r10
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		res = GetModifierValue (OFFS_B(uPLoad_setting_data.Data,1), &variation);
 488                             		.loc 1 242 0
 489 01b7 EF 02                   		mov.L	r0, r2
 490 01b9 CD A1 01                		mov.B	1[r10], r1
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		loadingWater =  OFFS_B(uPLoad_setting_data.Data,0);
 491                             		.loc 1 238 0
 492 01bc CC AB                   		mov.B	[r10], r11
 493                             	.LVL33:
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		res = GetModifierValue (OFFS_B(uPLoad_setting_data.Data,1), &variation);
 494                             		.loc 1 242 0
 495 01be 05 00 00 00             		bsr	_GetModifierValue
 496                             	.LVL34:
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if( ( MOD_DONT_CARE == res ) || ( S_FALSE == res ) )
 497                             		.loc 1 244 0
 498 01c2 5B 11                   		movu.B	r1, r1
 499 01c4 75 51 7F                		cmp	#0x7f, r1
 500 01c7 20 07                   		beq	.L35
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if( ( MOD_DONT_CARE == res ) || ( S_FALSE == res ) )
 501                             		.loc 1 244 0 is_stmt 0 discriminator 1
 502 01c9 61 11                   		cmp	#1, r1
 503 01cb 21 07                   		bne	.L36
 504 01cd 03                      		.balign 2,3,4
 505                             	.L35:
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			variation=0;
 506                             		.loc 1 247 0 is_stmt 1
 507 01ce 3C 00 00                		mov.B	#0, [r0]
 508                             	.LVL35:
 509 01d1 03                      		.balign 2,3,5
 510                             	.L36:
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if( variation )
 511                             		.loc 1 250 0
 512 01d2 CC 02                   		mov.B	[r0], r2
 513 01d4 CF 2A                   		mov.B	r2, r10
 514 01d6 61 0A                   		cmp	#0, r10
 515 01d8 20 0A                   		beq	.L37
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			delta = GetDeltaFromVariation(loadingWater,variation);
 516                             		.loc 1 254 0
 517 01da 5B B1                   		movu.B	r11, r1
 518                             	.LVL36:
 519 01dc 05 00 00 00             		bsr	_GetDeltaFromVariation
 520                             	.LVL37:
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			loadingWater += (uint8_t)delta;         
 521                             		.loc 1 257 0
 522 01e0 4B 1B                   		add	r1, r11
 523                             	.LVL38:
 524                             		.balign 2,3,5
 525                             	.L37:
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.tgWater = ( loadingWater + WaterInDW );
 526                             		.loc 1 262 0
 527 01e2 FB C2 00 00 00 00       		mov.L	#_WaterInDW, r12
 528                             	.LVL39:
 529 01e8 06 08 CB                		add	[r12].B, r11
 530                             	.LVL40:
 531 01eb FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 532 01f1 C7 AB 04                		mov.B	r11, 4[r10]
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)FLT_CheckPulseCounterStill(PULSE_COUNTER_STILL_INIT); /* init funzione controllo turbina bl
 533                             		.loc 1 274 0
 534 01f4 66 01                   		mov	#0, r1
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		CLRBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS);
 535                             		.loc 1 275 0
 536 01f6 FB B2 00 00 00 00       		mov.L	#_Flags_1, r11
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		(void)FLT_CheckPulseCounterStill(PULSE_COUNTER_STILL_INIT); /* init funzione controllo turbina bl
 537                             		.loc 1 274 0
 538 01fc 05 00 00 00             		bsr	_FLT_CheckPulseCounterStill
 539                             	.LVL41:
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		CLRBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS);
 540                             		.loc 1 275 0
 541 0200 CC BC                   		mov.B	[r11], r12
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if(loadMode == LOA_PS_CHECK_MODE )
 542                             		.loc 1 277 0
 543 0202 5B 77                   		movu.B	r7, r7
 544                             	.LVL42:
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		CLRBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS);
 545                             		.loc 1 275 0
 546 0204 75 2C FB                		and	#-5, r12
 547 0207 C3 BC                   		mov.B	r12, [r11]
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if(loadMode == LOA_PS_CHECK_MODE )
 548                             		.loc 1 277 0
 549 0209 75 57 20                		cmp	#32, r7
 550 020c 21 32                   		bne	.L38
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( OFFS_B(uPLoad_setting_data.Data, 2)==0)
 551                             		.loc 1 279 0
 552 020e FB 72 00 00 00 00       		mov.L	#_uPLoad_setting_data, r7
 553                             	.LVL43:
 554 0214 EC 77                   		mov.L	[r7], r7
 555 0216 B0 F1                   		movu.B	2[r7], r1
 556 0218 61 01                   		cmp	#0, r1
 557 021a 21 16                   		bne	.L39
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 558                             		.loc 1 282 0
 559 021c FB B2 00 00 00 00       		mov.L	#_FltLoadToutData, r11
 560 0222 CC B7                   		mov.B	[r11], r7
 561 0224 64 17                   		and	#1, r7
 562 0226 65 27                   		or	#2, r7
 563 0228 C3 B7                   		mov.B	r7, [r11]
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_INIT);	
 564                             		.loc 1 283 0
 565 022a 05 00 00 00             		bsr	_FLT_Pump_Load_Mgmt
 566                             	.LVL44:
 567 022e 2E 10                   		bra	.L38
 568                             	.L39:
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.VS_check=FALSE;	
 569                             		.loc 1 287 0
 570 0230 CD A7 03                		mov.B	3[r10], r7
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_WAIT_PUMP;	
 571                             		.loc 1 289 0
 572 0233 F9 A4 01 06             		mov.B	#6, 1[r10]
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.VS_check=FALSE;	
 573                             		.loc 1 287 0
 574 0237 7A 57                   		bclr	#5, r7
 575 0239 C7 A7 03                		mov.B	r7, 3[r10]
 576 023c 2E 06                   		bra	.L40
 577                             	.L38:
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.status = LOAD_EXE;	
 578                             		.loc 1 293 0
 579 023e F9 A4 01 01             		mov.B	#1, 1[r10]
 580                             		.balign 2,3,5
 581                             	.L40:
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.init = TRUE;		              /* per init della variabile waterInDWInit */
 582                             		.loc 1 295 0
 583 0242 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 584 0248 CD 7A 03                		mov.B	3[r7], r10
 585 024b 78 7A                   		bset	#7, r10
 586 024d C7 7A 03                		mov.B	r10, 3[r7]
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if (HWC_Flags.bit.vs_wash_presence )		
 587                             		.loc 1 296 0
 588 0250 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 589 0256 DC 77                   		mov.W	[r7], r7
 590 0258 76 27 00 08             		and	#0x800, r7
 591 025c 5F 77                   		movu.W	r7, r7
 592 025e 61 07                   		cmp	#0, r7
 593 0260 21 05                   		bne	.L41
 594 0262 38 5A 05                		bra	.L157
 595                             	.L41:
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			CLRBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS); /* reset flag overflow ripristini */	
 596                             		.loc 1 298 0
 597 0265 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 598 026b CC 7A                   		mov.B	[r7], r10
 599 026d 75 2A FE                		and	#-2, r10
 600 0270 C3 7A                   		mov.B	r10, [r7]
 601 0272 38 4A 05                		bra	.L157
 602                             	.LVL45:
 603                             	.L31:
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ((Flag_levTOtimeRef_update == TRUE)&& ( loadMode!=LOA_PS_CHECK_MODE ))
 604                             		.loc 1 306 0
 605 0275 61 14                   		cmp	#1, r4
 606 0277 21 19                   		bne	.L42
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ((Flag_levTOtimeRef_update == TRUE)&& ( loadMode!=LOA_PS_CHECK_MODE ))
 607                             		.loc 1 306 0 is_stmt 0 discriminator 1
 608 0279 75 5E 20                		cmp	#32, r14
 609 027c 20 14                   		beq	.L42
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )
 610                             		.loc 1 309 0 is_stmt 1
 611 027e FD 74 CA 01             		tst	#1, r10
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER);
 612                             		.loc 1 312 0
 613 0282 66 31                   		mov	#3, r1
 614                             	.LVL46:
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )
 615                             		.loc 1 309 0
 616 0284 20 08                   		beq	.L43
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER);
 617                             		.loc 1 312 0
 618 0286 05 00 00 00             		bsr	_SWTC_Stop
 619                             	.LVL47:
 620 028a 2E 06                   		bra	.L42
 621                             	.LVL48:
 622                             	.L43:
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_LOAD_LEVTOTIME_S_COUNTER);
 623                             		.loc 1 316 0
 624 028c 05 00 00 00             		bsr	_SWTC_Run
 625                             	.LVL49:
 626                             		.balign 2,3,5
 627                             	.L42:
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) != 0 )
 628                             		.loc 1 324 0
 629 0290 FB A2 00 00 00 00       		mov.L	#_uP_PumpCtrl_Data, r10
 630 0296 CD A1 01                		mov.B	1[r10], r1
 631 0299 5B 7A                   		movu.B	r7, r10
 632 029b 64 21                   		and	#2, r1
 633 029d 5B 11                   		movu.B	r1, r1
 634 029f 61 01                   		cmp	#0, r1
 635 02a1 20 17                   		beq	.L44
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   		if ( loadMode!=LOA_PS_CHECK_MODE )
 636                             		.loc 1 327 0
 637 02a3 75 5A 20                		cmp	#32, r10
 638 02a6 20 0E                   		beq	.L45
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     		FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;		
 639                             		.loc 1 329 0
 640 02a8 FB A2 00 00 00 00       		mov.L	#_FltLoadToutData, r10
 641 02ae CC AC                   		mov.B	[r10], r12
 642                             	.LVL50:
 643 02b0 64 1C                   		and	#1, r12
 644 02b2 C3 AC                   		mov.B	r12, [r10]
 645                             		.balign 2,3,1
 646                             	.L45:
 333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_EXE);	
 647                             		.loc 1 333 0
 648 02b4 66 11                   		mov	#1, r1
 649 02b6 2E 08                   		bra	.L155
 650                             	.LVL51:
 651                             	.L44:
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( loadMode!=LOA_PS_CHECK_MODE )
 652                             		.loc 1 339 0
 653 02b8 75 5A 20                		cmp	#32, r10
 654 02bb 20 F9                   		beq	.L45
 655                             	.LVL52:
 656 02bd 03                      		.balign 2,3,3
 657                             	.L155:
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_INIT);	
 658                             		.loc 1 341 0
 659 02be 05 00 00 00             		bsr	_FLT_Pump_Load_Mgmt
 660                             	.LVL53:
 349:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if ( TESTBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS) )
 661                             		.loc 1 349 0
 662 02c2 FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 663 02c8 CC AE                   		mov.B	[r10], r14
 664 02ca FB C2 00 00 00 00       		mov.L	#_uP_Load_Data, r12
 665 02d0 FD 74 CE 01             		tst	#1, r14
 666 02d4 20 06                   		beq	.L47
 356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		uP_Load_Data.status = LOAD_TRUE;
 667                             		.loc 1 356 0
 668 02d6 F9 C4 01 04             		mov.B	#4, 1[r12]
 669                             		.balign 2,3,3
 670                             	.L47:
 363:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_WAIT_PUMP)
 671                             		.loc 1 363 0
 672 02da 59 CC 01                		movu.B	1[r12], r12
 673 02dd FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 674 02e3 61 6C                   		cmp	#6, r12
 675 02e5 3B 80 01                		bne	.L48
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( !uP_Load_Data.VS_check)
 676                             		.loc 1 365 0
 677 02e8 DD A7 01                		mov.W	2[r10], r7
 678                             	.LVL54:
 679 02eb 75 27 20                		and	#32, r7
 680 02ee 5F 77                   		movu.W	r7, r7
 681 02f0 61 07                   		cmp	#0, r7
 682 02f2 21 20                   		bne	.L49
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION, (SWTC_PrescalerType)COUNTERS2
 683                             		.loc 1 367 0
 684 02f4 FB 72 00 00 00 00       		mov.L	#_uPLoad_setting_data, r7
 685 02fa EC 77                   		mov.L	[r7], r7
 686 02fc 75 41 23                		mov	#35, r1
 687 02ff 89 7B                   		mov.B	5[r7], r3
 688 0301 66 32                   		mov	#3, r2
 689 0303 75 23 7F                		and	#0x7f, r3
 690 0306 05 00 00 00             		bsr	_Set_SmallCounter
 691                             	.LVL55:
 368:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.VS_check=TRUE;
 692                             		.loc 1 368 0
 693 030a CD A7 03                		mov.B	3[r10], r7
 694 030d 78 57                   		bset	#5, r7
 695 030f C7 A7 03                		mov.B	r7, 3[r10]
 696                             		.balign 2,3,2
 697                             	.L49:
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( SWTC_IsExpired((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION))  
 698                             		.loc 1 370 0
 699 0312 75 41 23                		mov	#35, r1
 700 0315 05 00 00 00             		bsr	_SWTC_IsExpired
 701                             	.LVL56:
 702 0319 61 01                   		cmp	#0, r1
 703 031b 3A 32 01                		beq	.L50
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0 )
 704                             		.loc 1 372 0
 705 031e FB 72 00 00 00 00       		mov.L	#_uP_PumpCtrl_Data, r7
 706 0324 88 79                   		mov.B	1[r7], r1
 707 0326 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 708 032c 64 21                   		and	#2, r1
 709 032e 5B 11                   		movu.B	r1, r1
 710 0330 61 01                   		cmp	#0, r1
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.pump_act=FALSE;
 711                             		.loc 1 374 0
 712 0332 CD 7A 03                		mov.B	3[r7], r10
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0 )
 713                             		.loc 1 372 0
 714 0335 21 69                   		bne	.L51
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.pump_act=FALSE;
 715                             		.loc 1 374 0
 716 0337 7A 6A                   		bclr	#6, r10
 377:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.turbina_KO=FALSE;
 717                             		.loc 1 377 0
 718 0339 7A 4A                   		bclr	#4, r10
 719 033b C7 7A 03                		mov.B	r10, 3[r7]
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_EXE;
 720                             		.loc 1 378 0
 721 033e 3C 71 01                		mov.B	#1, 1[r7]
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=0) || (!TESTBIT(GIValid, (GI_FIRST_VIRTSENS
 722                             		.loc 1 385 0
 723 0341 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r7
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_INIT);	
 724                             		.loc 1 383 0
 725 0347 05 00 00 00             		bsr	_FLT_Pump_Load_Mgmt
 726                             	.LVL57:
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=0) || (!TESTBIT(GIValid, (GI_FIRST_VIRTSENS
 727                             		.loc 1 385 0
 728 034b 58 77                   		movu.B	[r7], r7
 729 034d 61 07                   		cmp	#0, r7
 730 034f 21 15                   		bne	.L52
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=0) || (!TESTBIT(GIValid, (GI_FIRST_VIRTSENS
 731                             		.loc 1 385 0 is_stmt 0 discriminator 1
 732 0351 FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 733 0357 DC 77                   		mov.W	[r7], r7
 734 0359 76 27 00 04             		and	#0x400, r7
 735 035d 5F 77                   		movu.W	r7, r7
 736 035f 61 07                   		cmp	#0, r7
 737 0361 3B B9 00                		bne	.L53
 738                             		.balign 2,3,5
 739                             	.L52:
 388:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					    if (TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)))
 740                             		.loc 1 388 0 is_stmt 1
 741 0364 FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 742 036a DC 77                   		mov.W	[r7], r7
 743 036c 76 27 00 04             		and	#0x400, r7
 744 0370 5F 77                   		movu.W	r7, r7
 745 0372 61 07                   		cmp	#0, r7
 746 0374 20 1A                   		beq	.L54
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 							SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 747                             		.loc 1 390 0
 748 0376 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 749 037c CC 7A                   		mov.B	[r7], r10
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 							IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 750                             		.loc 1 393 0
 751 037e FB 12 00 00 00 00       		mov.L	#_MachineStatistics+118, r1
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 							SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 752                             		.loc 1 390 0
 753 0384 75 3A 10                		or	#16, r10
 754 0387 C3 7A                   		mov.B	r10, [r7]
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 							IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 755                             		.loc 1 393 0
 756 0389 05 00 00 00             		bsr	_IncByteWithCheck
 757                             	.LVL58:
 758 038d 03                      		.balign 2,3,5
 759                             	.L54:
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.status = LOAD_TRUE;
 760                             		.loc 1 398 0
 761 038e FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 399:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.pump_act=FALSE;
 762                             		.loc 1 399 0
 763 0394 CD 7A 03                		mov.B	3[r7], r10
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.status = LOAD_TRUE;
 764                             		.loc 1 398 0
 765 0397 3C 71 04                		mov.B	#4, 1[r7]
 399:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.pump_act=FALSE;
 766                             		.loc 1 399 0
 767 039a 7A 6A                   		bclr	#6, r10
 768 039c 2E 7A                   		bra	.L156
 769                             	.L51:
 403:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.pump_act=TRUE;	
 770                             		.loc 1 403 0
 771 039e 78 6A                   		bset	#6, r10
 772 03a0 C7 7A 03                		mov.B	r10, 3[r7]
 409:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				CLRBIT(Flags_2, FLAG2_CLOGGED_FILTER);			
 773                             		.loc 1 409 0
 774 03a3 FB A2 00 00 00 00       		mov.L	#_Flags_2, r10
 775 03a9 CC AB                   		mov.B	[r10], r11
 776 03ab 75 2B DF                		and	#-33, r11
 777 03ae C3 AB                   		mov.B	r11, [r10]
 411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( uP_Load_Data.turbina_KO)
 778                             		.loc 1 411 0
 779 03b0 DD 7A 01                		mov.W	2[r7], r10
 780 03b3 75 2A 10                		and	#16, r10
 781 03b6 5F AA                   		movu.W	r10, r10
 782 03b8 61 0A                   		cmp	#0, r10
 783 03ba 20 4D                   		beq	.L55
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerType
 784                             		.loc 1 415 0
 785 03bc FB A2 00 00 00 00       		mov.L	#_uPLoad_setting_data, r10
 786 03c2 EC AA                   		mov.L	[r10], r10
 787 03c4 66 41                   		mov	#4, r1
 788 03c6 CD A3 04                		mov.B	4[r10], r3
 789 03c9 66 32                   		mov	#3, r2
 790 03cb 75 23 7F                		and	#0x7f, r3
 414:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_PS_DINAMIC;	
 791                             		.loc 1 414 0
 792 03ce 3C 71 05                		mov.B	#5, 1[r7]
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerType
 793                             		.loc 1 415 0
 794 03d1 05 00 00 00             		bsr	_Set_SmallCounter
 795                             	.LVL59:
 416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 796                             		.loc 1 416 0
 797 03d5 66 41                   		mov	#4, r1
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					if (((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SEN
 798                             		.loc 1 419 0
 799 03d7 FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 800                             		.loc 1 416 0
 801 03dd 05 00 00 00             		bsr	_SWTC_Stop
 802                             	.LVL60:
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					if (((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SEN
 803                             		.loc 1 419 0
 804 03e1 CC AA                   		mov.B	[r10], r10
 805 03e3 60 1A                   		sub	#1, r10
 806 03e5 5B AA                   		movu.B	r10, r10
 807 03e7 61 1A                   		cmp	#1, r10
 808 03e9 24 21                   		bgtu	.L56
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					if (((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SEN
 809                             		.loc 1 419 0 is_stmt 0 discriminator 1
 810 03eb FB A2 00 00 00 00       		mov.L	#_GIValid, r10
 811 03f1 DC AA                   		mov.W	[r10], r10
 812 03f3 76 2A 00 04             		and	#0x400, r10
 813 03f7 5F AA                   		movu.W	r10, r10
 814 03f9 61 0A                   		cmp	#0, r10
 815 03fb 20 0F                   		beq	.L56
 421:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						uP_Load_Data.pump_act=FALSE;	
 816                             		.loc 1 421 0 is_stmt 1
 817 03fd CD 7A 03                		mov.B	3[r7], r10
 818 0400 7A 6A                   		bclr	#6, r10
 819 0402 C7 7A 03                		mov.B	r10, 3[r7]
 820 0405 2E 05                   		bra	.L56
 821                             	.L55:
 427:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_EXE;
 822                             		.loc 1 427 0
 823 0407 3C 71 01                		mov.B	#1, 1[r7]
 824                             		.balign 2,3,5
 825                             	.L56:
 429:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.init = TRUE;	
 826                             		.loc 1 429 0
 827 040a FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 828 0410 CD 7A 03                		mov.B	3[r7], r10
 829 0413 78 7A                   		bset	#7, r10
 830 0415 03                      		.balign 2,3,5
 831                             	.L156:
 832 0416 C7 7A 03                		mov.B	r10, 3[r7]
 833 0419 03                      		.balign 2,3,5
 834                             	.L53:
 433:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 835                             		.loc 1 433 0
 836 041a FB A2 00 00 00 00       		mov.L	#_FltLoadToutData, r10
 432:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION); 
 837                             		.loc 1 432 0
 838 0420 75 41 23                		mov	#35, r1
 839 0423 05 00 00 00             		bsr	_SWTC_Stop
 840                             	.LVL61:
 433:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 FltLoadToutData.state = FLT_LOAD_TOUT_INIT;
 841                             		.loc 1 433 0
 842 0427 CC A7                   		mov.B	[r10], r7
 843 0429 64 17                   		and	#1, r7
 844 042b 65 27                   		or	#2, r7
 845 042d C3 A7                   		mov.B	r7, [r10]
 434:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 uP_Load_Data.time= OFFS_B(Tab_HWCVS_data.Data, 1)& 0x7F;
 846                             		.loc 1 434 0
 847 042f FB 72 00 00 00 00       		mov.L	#_Tab_HWCVS_data, r7
 848 0435 EC 77                   		mov.L	[r7], r7
 849 0437 CD 7A 01                		mov.B	1[r7], r10
 850 043a FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 851 0440 75 2A 7F                		and	#0x7f, r10
 852 0443 D7 7A 06                		mov.W	r10, 12[r7]
 435:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 LOA_timeLoad_Init();  /*Inizializzazione caricamento a tempo*/
 853                             		.loc 1 435 0
 854 0446 05 00 00 00             		bsr	_LOA_timeLoad_Init
 855                             	.LVL62:
 856 044a 38 72 03                		bra	.L157
 857                             	.L50:
 439:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.pump_act=TRUE;
 858                             		.loc 1 439 0
 859 044d FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 860 0453 CD 7A 03                		mov.B	3[r7], r10
 440:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION);
 861                             		.loc 1 440 0
 862 0456 75 41 23                		mov	#35, r1
 439:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.pump_act=TRUE;
 863                             		.loc 1 439 0
 864 0459 78 6A                   		bset	#6, r10
 865 045b C7 7A 03                		mov.B	r10, 3[r7]
 440:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_LOAD_PUMP_ACTIVATION);
 866                             		.loc 1 440 0
 867 045e 05 00 00 00             		bsr	_SWTC_Run
 868                             	.LVL63:
 869 0462 38 5A 03                		bra	.L157
 870                             	.LVL64:
 871                             	.L48:
 448:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_EXE) 
 872                             		.loc 1 448 0
 873 0465 61 1C                   		cmp	#1, r12
 874 0467 3B 37 02                		bne	.L57
 875                             	.LBB9:
 451:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if ( loadMode==LOA_PS_CHECK_MODE )
 876                             		.loc 1 451 0
 877 046a 5B 74                   		movu.B	r7, r4
 878 046c 75 54 20                		cmp	#32, r4
 879 046f 21 64                   		bne	.L60
 453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if (TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0 )
 880                             		.loc 1 453 0
 881 0471 FB 42 00 00 00 00       		mov.L	#_uP_PumpCtrl_Data, r4
 882 0477 88 4C                   		mov.B	1[r4], r4
 883 0479 64 24                   		and	#2, r4
 884 047b 5B 44                   		movu.B	r4, r4
 885 047d 61 04                   		cmp	#0, r4
 886 047f 21 0A                   		bne	.L59
 455:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Run((SWTC_CountersType)MP_LOAD_TIMELOAD_S_COUNTER);
 887                             		.loc 1 455 0
 888 0481 66 51                   		mov	#5, r1
 889 0483 05 00 00 00             		bsr	_SWTC_Run
 890                             	.LVL65:
 891 0487 2E 4C                   		bra	.L60
 892                             	.L59:
 463:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.pump_act=TRUE;
 893                             		.loc 1 463 0
 894 0489 CD A4 03                		mov.B	3[r10], r4
 895 048c 78 64                   		bset	#6, r4
 896 048e C7 A4 03                		mov.B	r4, 3[r10]
 464:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==0)&&(TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_B
 897                             		.loc 1 464 0
 898 0491 FB 42 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r4
 899 0497 58 44                   		movu.B	[r4], r4
 900 0499 61 04                   		cmp	#0, r4
 901 049b 21 38                   		bne	.L60
 464:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==0)&&(TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_B
 902                             		.loc 1 464 0 is_stmt 0 discriminator 1
 903 049d FB 42 00 00 00 00       		mov.L	#_GIValid, r4
 904 04a3 DC 44                   		mov.W	[r4], r4
 905 04a5 76 24 00 04             		and	#0x400, r4
 906 04a9 5F 44                   		movu.W	r4, r4
 907 04ab 61 04                   		cmp	#0, r4
 908 04ad 20 26                   		beq	.L60
 467:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 909                             		.loc 1 467 0 is_stmt 1
 910 04af 75 3E 10                		or	#16, r14
 911 04b2 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 912                             	.LVL66:
 469:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 913                             		.loc 1 469 0
 914 04b8 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+118, r1
 467:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 915                             		.loc 1 467 0
 916 04be C3 7E                   		mov.B	r14, [r7]
 469:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 917                             		.loc 1 469 0
 918 04c0 05 00 00 00             		bsr	_IncByteWithCheck
 919                             	.LVL67:
 473:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.pump_act=FALSE;
 920                             		.loc 1 473 0
 921 04c4 CD A7 03                		mov.B	3[r10], r7
 472:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_TRUE;
 922                             		.loc 1 472 0
 923 04c7 F9 A4 01 04             		mov.B	#4, 1[r10]
 473:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.pump_act=FALSE;
 924                             		.loc 1 473 0
 925 04cb 7A 67                   		bclr	#6, r7
 926 04cd C7 A7 03                		mov.B	r7, 3[r10]
 927 04d0 38 EC 02                		bra	.L157
 928                             	.LVL68:
 929                             	.L60:
 479:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    if ( (PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_PUL
 930                             		.loc 1 479 0
 931 04d3 05 00 00 00             		bsr	_PulseCounter_GetWarning
 932                             	.LVL69:
 933 04d7 61 01                   		cmp	#0, r1
 934 04d9 3B 15 01                		bne	.L61
 479:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    if ( (PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_PUL
 935                             		.loc 1 479 0 is_stmt 0 discriminator 1
 936 04dc FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 937 04e2 CC AC                   		mov.B	[r10], r12
 938 04e4 64 4C                   		and	#4, r12
 939 04e6 5B CC                   		movu.B	r12, r12
 940 04e8 61 0C                   		cmp	#0, r12
 941 04ea 3B 04 01                		bne	.L61
 483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        if ( FLT_CheckPulseCounterStill(PULSE_COUNTER_STILL_EXE) == TRUE )
 942                             		.loc 1 483 0 is_stmt 1
 943 04ed 66 11                   		mov	#1, r1
 944 04ef 05 00 00 00             		bsr	_FLT_CheckPulseCounterStill
 945                             	.LVL70:
 946 04f3 5B 11                   		movu.B	r1, r1
 947 04f5 61 11                   		cmp	#1, r1
 948 04f7 21 32                   		bne	.L62
 485:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				SETBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS); 
 949                             		.loc 1 485 0
 950 04f9 CC A7                   		mov.B	[r10], r7
 951                             	.LVL71:
 952 04fb 65 47                   		or	#4, r7
 953 04fd C3 A7                   		mov.B	r7, [r10]
 487:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if (HWC_Flags.bit.vs_wash_presence)
 954                             		.loc 1 487 0
 955 04ff FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 956 0505 DC 77                   		mov.W	[r7], r7
 957 0507 76 27 00 08             		and	#0x800, r7
 958 050b 5F 77                   		movu.W	r7, r7
 959 050d 61 07                   		cmp	#0, r7
 960 050f 20 0F                   		beq	.L63
 489:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					FltWarning.load=TRUE;
 961                             		.loc 1 489 0
 962 0511 FB 72 00 00 00 00       		mov.L	#_FltWarning, r7
 963 0517 CC 7A                   		mov.B	[r7], r10
 964 0519 78 7A                   		bset	#7, r10
 965 051b C3 7A                   		mov.B	r10, [r7]
 966 051d 03                      		.balign 2,3,1
 967                             	.L63:
 491:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				FLT_preFaultSet(CODE_PULSE_COUNTER,SUBCODE_PULSE_COUNTER);
 968                             		.loc 1 491 0
 969 051e 66 71                   		mov	#7, r1
 970 0520 66 12                   		mov	#1, r2
 971 0522 05 00 00 00             		bsr	_FLT_preFaultSet
 972                             	.LVL72:
 973 0526 38 96 02                		bra	.L157
 974                             	.LVL73:
 975                             	.L62:
 497:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        if (uP_Load_Data.init == TRUE)
 976                             		.loc 1 497 0
 977 0529 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 978                             	.LVL74:
 979 052f DD 7A 01                		mov.W	2[r7], r10
 980 0532 76 2A 80 00             		and	#0x80, r10
 981 0536 5F AA                   		movu.W	r10, r10
 982 0538 61 0A                   		cmp	#0, r10
 983 053a 20 28                   		beq	.L64
 499:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          uP_Load_Data.waterInDWInit = WaterInDW; 
 984                             		.loc 1 499 0
 985 053c FB A2 00 00 00 00       		mov.L	#_WaterInDW, r10
 986 0542 CC AA                   		mov.B	[r10], r10
 987 0544 C7 7A 02                		mov.B	r10, 2[r7]
 501:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          WaterLoadedReset();
 988                             		.loc 1 501 0
 989 0547 05 00 00 00             		bsr	_WaterLoadedReset
 990                             	.LVL75:
 505:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	         (void)SWTC_SetSValue((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER, (SWTC_SCounterValue)
 991                             		.loc 1 505 0
 992 054b FB A2 00 00 00 00       		mov.L	#_ToutPulseCounterCheckDelay, r10
 993 0551 CC A2                   		mov.B	[r10], r2
 994 0553 66 61                   		mov	#6, r1
 995 0555 05 00 00 00             		bsr	_SWTC_SetSValue
 996                             	.LVL76:
 510:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	          uP_Load_Data.init = FALSE;
 997                             		.loc 1 510 0
 998 0559 CD 7A 03                		mov.B	3[r7], r10
 999 055c 7A 7A                   		bclr	#7, r10
 1000 055e C7 7A 03                		mov.B	r10, 3[r7]
 1001 0561 03                      		.balign 2,3,5
 1002                             	.L64:
 518:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        WaterInDW = ( uP_Load_Data.waterInDWInit + GIWaterLoaded );		 /* aggiornamento acqua in va
 1003                             		.loc 1 518 0
 1004 0562 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1005 0568 FB A2 00 00 00 00       		mov.L	#_GIWaterLoaded, r10
 516:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        FLT_PulseCounterCheckDelay_Mgmt();
 1006                             		.loc 1 516 0
 1007 056e 05 00 00 00             		bsr	_FLT_PulseCounterCheckDelay_Mgmt
 1008                             	.LVL77:
 518:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        WaterInDW = ( uP_Load_Data.waterInDWInit + GIWaterLoaded );		 /* aggiornamento acqua in va
 1009                             		.loc 1 518 0
 1010 0572 CD AC 01                		mov.B	1[r10], r12
 1011 0575 CD 7A 02                		mov.B	2[r7], r10
 1012 0578 4B CA                   		add	r12, r10
 1013 057a FB C2 00 00 00 00       		mov.L	#_WaterInDW, r12
 1014 0580 C3 CA                   		mov.B	r10, [r12]
 520:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( WaterInDW >= uP_Load_Data.tgWater )
 1015                             		.loc 1 520 0
 1016 0582 5B AA                   		movu.B	r10, r10
 1017                             	.LVL78:
 1018 0584 45 7A 04                		cmp	4[r7].UB, r10
 1019                             	.LVL79:
 1020 0587 23 51                   		bltu	.L65
 524:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_levTOtimeRef_Update(); 
 1021                             		.loc 1 524 0
 1022 0589 05 00 00 00             		bsr	_LOA_levTOtimeRef_Update
 1023                             	.LVL80:
 526:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);
 1024                             		.loc 1 526 0
 1025 058d 75 41 1F                		mov	#31, r1
 1026 0590 05 00 00 00             		bsr	_SWTC_Stop
 1027                             	.LVL81:
 530:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( isFullRequested )
 1028                             		.loc 1 530 0
 1029 0594 61 0B                   		cmp	#0, r11
 1030 0596 20 38                   		beq	.L67
 533:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					if (TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) == 0)
 1031                             		.loc 1 533 0
 1032 0598 FB 72 00 00 00 00       		mov.L	#_uP_PumpCtrl_Data, r7
 1033 059e 88 7F                   		mov.B	1[r7], r7
 1034 05a0 64 27                   		and	#2, r7
 1035 05a2 5B 77                   		movu.B	r7, r7
 1036 05a4 61 07                   		cmp	#0, r7
 1037 05a6 21 28                   		bne	.L67
 536:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;		 /* disabilito Tout F05 - sub 3 perch� � 
 1038                             		.loc 1 536 0
 1039 05a8 FB 72 00 00 00 00       		mov.L	#_FltLoadToutData, r7
 1040 05ae CC 7A                   		mov.B	[r7], r10
 1041                             	.LVL82:
 1042 05b0 64 1A                   		and	#1, r10
 1043 05b2 C3 7A                   		mov.B	r10, [r7]
 538:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 						if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) == 0 )
 1044                             		.loc 1 538 0
 1045 05b4 FB 72 00 00 00 00       		mov.L	#_GICriteria, r7
 1046 05ba CC 77                   		mov.B	[r7], r7
 1047 05bc FD 74 C7 01             		tst	#1, r7
 1048 05c0 21 0E                   		bne	.L67
 541:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	      		      		FltFlagsKO.loadPP = TRUE;
 1049                             		.loc 1 541 0
 1050 05c2 FB 72 00 00 00 00       		mov.L	#_FltFlagsKO, r7
 1051 05c8 CC 7A                   		mov.B	[r7], r10
 1052 05ca 78 5A                   		bset	#5, r10
 1053 05cc C3 7A                   		mov.B	r10, [r7]
 1054                             	.LVL83:
 1055                             		.balign 2,3,5
 1056                             	.L67:
 547:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****           		uP_Load_Data.status = LOAD_TRUE;
 1057                             		.loc 1 547 0
 1058 05ce FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1059 05d4 3C 71 04                		mov.B	#4, 1[r7]
 1060 05d7 03                      		.balign 2,3,5
 1061                             	.L65:
 564:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	        LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/ 
 1062                             		.loc 1 564 0
 1063 05d8 FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 1064 05de 58 77                   		movu.B	[r7], r7
 1065 05e0 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 1066                             	.LVL84:
 1067 05e6 66 1C                   		mov	#1, r12
 1068 05e8 FE 07 AC                		mov.B	r12, [r7,r10]
 1069 05eb 38 B3 00                		bra	.L57
 1070                             	.LVL85:
 1071                             	.L61:
 571:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	   		if (( loadMode==LOA_PS_CHECK_MODE )&& (TESTBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS)))
 1072                             		.loc 1 571 0
 1073 05ee 5B 7A                   		movu.B	r7, r10
 1074 05f0 75 5A 20                		cmp	#32, r10
 1075 05f3 21 28                   		bne	.L69
 571:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	   		if (( loadMode==LOA_PS_CHECK_MODE )&& (TESTBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS)))
 1076                             		.loc 1 571 0 is_stmt 0 discriminator 1
 1077 05f5 FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 1078 05fb CC AA                   		mov.B	[r10], r10
 1079 05fd 64 4A                   		and	#4, r10
 1080 05ff 5B AA                   		movu.B	r10, r10
 1081 0601 61 0A                   		cmp	#0, r10
 1082 0603 20 18                   		beq	.L69
 576:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/ 
 1083                             		.loc 1 576 0 is_stmt 1
 1084 0605 FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 1085                             	.LVL86:
 1086 060b 58 77                   		movu.B	[r7], r7
 1087 060d FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 1088 0613 66 1B                   		mov	#1, r11
 1089 0615 FE 07 AB                		mov.B	r11, [r7,r10]
 1090 0618 38 A4 01                		bra	.L157
 1091                             	.LVL87:
 1092                             	.L69:
 579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( TESTBIT (uP_PumpCtrl_Data.flags,PUMP_CTRL_UP_RUNNING_BIT) != 0 )
 1093                             		.loc 1 579 0
 1094 061b FB A2 00 00 00 00       		mov.L	#_uP_PumpCtrl_Data, r10
 1095 0621 CD AA 01                		mov.B	1[r10], r10
 1096 0624 64 2A                   		and	#2, r10
 1097 0626 5B AA                   		movu.B	r10, r10
 1098 0628 61 0A                   		cmp	#0, r10
 1099 062a 20 45                   		beq	.L70
 582:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( loadMode==LOA_PS_CHECK_MODE )
 1100                             		.loc 1 582 0
 1101 062c 5B 77                   		movu.B	r7, r7
 1102                             	.LVL88:
 1103 062e 75 57 20                		cmp	#32, r7
 1104 0631 21 28                   		bne	.L71
 584:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					(void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerType
 1105                             		.loc 1 584 0
 1106 0633 FB 72 00 00 00 00       		mov.L	#_uPLoad_setting_data, r7
 1107                             	.LVL89:
 1108 0639 EC 77                   		mov.L	[r7], r7
 1109 063b 66 41                   		mov	#4, r1
 1110 063d 89 73                   		mov.B	4[r7], r3
 1111 063f 66 32                   		mov	#3, r2
 1112 0641 75 23 7F                		and	#0x7f, r3
 1113 0644 05 00 00 00             		bsr	_Set_SmallCounter
 1114                             	.LVL90:
 585:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1115                             		.loc 1 585 0
 1116 0648 66 41                   		mov	#4, r1
 586:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_PS_DINAMIC;
 1117                             		.loc 1 586 0
 1118 064a FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 585:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1119                             		.loc 1 585 0
 1120 0650 05 00 00 00             		bsr	_SWTC_Stop
 1121                             	.LVL91:
 586:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_PS_DINAMIC;
 1122                             		.loc 1 586 0
 1123 0654 3C 71 05                		mov.B	#5, 1[r7]
 1124 0657 2E 47                   		bra	.L57
 1125                             	.LVL92:
 1126                             	.L71:
 590:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				   (void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerTy
 1127                             		.loc 1 590 0
 1128 0659 66 41                   		mov	#4, r1
 1129 065b 66 12                   		mov	#1, r2
 1130 065d 75 43 28                		mov	#40, r3
 592:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			   		uP_Load_Data.status = LOAD_EXE_PP; 		
 1131                             		.loc 1 592 0
 1132 0660 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1133                             	.LVL93:
 590:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				   (void)Set_SmallCounter((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_PrescalerTy
 1134                             		.loc 1 590 0
 1135 0666 05 00 00 00             		bsr	_Set_SmallCounter
 1136                             	.LVL94:
 592:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			   		uP_Load_Data.status = LOAD_EXE_PP; 		
 1137                             		.loc 1 592 0
 1138 066a 3C 71 03                		mov.B	#3, 1[r7]
 1139 066d 2E 31                   		bra	.L57
 1140                             	.LVL95:
 1141                             	.L70:
 612:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if (  loadMode!=LOA_PS_CHECK_MODE )
 1142                             		.loc 1 612 0
 1143 066f 5B 77                   		movu.B	r7, r7
 1144                             	.LVL96:
 609:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				loadingWater =  (uP_Load_Data.tgWater - WaterInDW);	 /* cos� si tiene conto dell'acqua carica
 1145                             		.loc 1 609 0
 1146 0671 FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 1147 0677 FB C2 00 00 00 00       		mov.L	#_WaterInDW, r12
 612:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if (  loadMode!=LOA_PS_CHECK_MODE )
 1148                             		.loc 1 612 0
 1149 067d 75 57 20                		cmp	#32, r7
 609:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				loadingWater =  (uP_Load_Data.tgWater - WaterInDW);	 /* cos� si tiene conto dell'acqua carica
 1150                             		.loc 1 609 0
 1151 0680 CD A1 04                		mov.B	4[r10], r1
 1152 0683 CC CC                   		mov.B	[r12], r12
 1153                             	.LVL97:
 612:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if (  loadMode!=LOA_PS_CHECK_MODE )
 1154                             		.loc 1 612 0
 1155 0685 20 0F                   		beq	.L72
 616:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				    uP_Load_Data.time = LOA_levTOtime_Conv(loadingWater); /* Calcolo tempo totale di caricament
 1156                             		.loc 1 616 0
 1157 0687 43 C1                   		sub	r12, r1
 1158                             	.LVL98:
 1159 0689 05 00 00 00             		bsr	_LOA_levTOtime_Conv
 1160                             	.LVL99:
 1161 068d D7 A1 06                		mov.W	r1, 12[r10]
 617:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					LOA_timeLoad_Init();  /*Inizializzazione caricamento a tempo*/	  
 1162                             		.loc 1 617 0
 1163 0690 05 00 00 00             		bsr	_LOA_timeLoad_Init
 1164                             	.LVL100:
 1165                             		.balign 2,3,5
 1166                             	.L72:
 620:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	            uP_Load_Data.status = LOAD_EXE_TIME;
 1167                             		.loc 1 620 0
 1168 0694 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1169                             	.LVL101:
 1170 069a 3C 71 02                		mov.B	#2, 1[r7]
 1171 069d 03                      		.balign 2,3,5
 1172                             	.L57:
 1173                             	.LBE9:
 629:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_EXE_PP)
 1174                             		.loc 1 629 0
 1175 069e FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1176 06a4 59 7A 01                		movu.B	1[r7], r10
 1177 06a7 61 3A                   		cmp	#3, r10
 1178 06a9 21 4F                   		bne	.L73
 633:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )
 1179                             		.loc 1 633 0
 1180 06ab FB A2 00 00 00 00       		mov.L	#_GICriteria, r10
 1181 06b1 CC AA                   		mov.B	[r10], r10
 636:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  (void)SWTC_Run((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1182                             		.loc 1 636 0
 1183 06b3 66 41                   		mov	#4, r1
 633:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )
 1184                             		.loc 1 633 0
 1185 06b5 FD 74 CA 01             		tst	#1, r10
 1186 06b9 20 23                   		beq	.L74
 636:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  (void)SWTC_Run((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1187                             		.loc 1 636 0
 1188 06bb 05 00 00 00             		bsr	_SWTC_Run
 1189                             	.LVL102:
 638:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	  if ( SWTC_IsExpired((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER) )
 1190                             		.loc 1 638 0
 1191 06bf 66 41                   		mov	#4, r1
 1192 06c1 05 00 00 00             		bsr	_SWTC_IsExpired
 1193                             	.LVL103:
 1194 06c5 61 01                   		cmp	#0, r1
 1195 06c7 20 1D                   		beq	.L75
 641:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1196                             		.loc 1 641 0
 1197 06c9 66 41                   		mov	#4, r1
 1198 06cb 05 00 00 00             		bsr	_SWTC_Stop
 1199                             	.LVL104:
 644:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_levTOtimeRef_Update(); 
 1200                             		.loc 1 644 0
 1201 06cf 05 00 00 00             		bsr	_LOA_levTOtimeRef_Update
 1202                             	.LVL105:
 647:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_waterInDW_defUpdate();
 1203                             		.loc 1 647 0
 1204 06d3 05 00 00 00             		bsr	_LOA_waterInDW_defUpdate
 1205                             	.LVL106:
 652:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****     	    	uP_Load_Data.status = LOAD_TRUE;  
 1206                             		.loc 1 652 0
 1207 06d7 3C 71 04                		mov.B	#4, 1[r7]
 1208 06da 2E 0A                   		bra	.L75
 1209                             	.L74:
 664:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		  (void) SWTC_SetSValue ((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER, (SWTC_SCounterValue)
 1210                             		.loc 1 664 0
 1211 06dc 75 42 28                		mov	#40, r2
 1212 06df 05 00 00 00             		bsr	_SWTC_SetSValue
 1213                             	.LVL107:
 1214 06e3 03                      		.balign 2,3,5
 1215                             	.L75:
 669:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/
 1216                             		.loc 1 669 0
 1217 06e4 FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 1218 06ea 58 77                   		movu.B	[r7], r7
 1219 06ec FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 1220 06f2 66 1C                   		mov	#1, r12
 1221 06f4 FE 07 AC                		mov.B	r12, [r7,r10]
 1222 06f7 03                      		.balign 2,3,5
 1223                             	.L73:
 673:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_EXE_TIME)
 1224                             		.loc 1 673 0
 1225 06f8 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1226 06fe 59 7A 01                		movu.B	1[r7], r10
 1227 0701 61 2A                   		cmp	#2, r10
 1228 0703 21 5F                   		bne	.L76
 675:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	    if ( LOA_timeLoadEnd_Check() == S_OK )
 1229                             		.loc 1 675 0
 1230 0705 05 00 00 00             		bsr	_LOA_timeLoadEnd_Check
 1231                             	.LVL108:
 1232 0709 5B 11                   		movu.B	r1, r1
 1233 070b 61 01                   		cmp	#0, r1
 1234 070d 21 41                   		bne	.L78
 677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.turbina_KO=TRUE;
 1235                             		.loc 1 677 0
 1236 070f CD 7A 03                		mov.B	3[r7], r10
 679:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if (isFullRequested)
 1237                             		.loc 1 679 0
 1238 0712 61 0B                   		cmp	#0, r11
 677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			uP_Load_Data.turbina_KO=TRUE;
 1239                             		.loc 1 677 0
 1240 0714 78 4A                   		bset	#4, r10
 1241 0716 C7 7A 03                		mov.B	r10, 3[r7]
 679:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if (isFullRequested)
 1242                             		.loc 1 679 0
 1243 0719 20 29                   		beq	.L79
 683:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( TESTBIT (GICriteria,GI_PRESS_SENS_CR_FULL_IND) != 0 )	
 1244                             		.loc 1 683 0
 1245 071b FB A2 00 00 00 00       		mov.L	#_GICriteria, r10
 1246 0721 CC A1                   		mov.B	[r10], r1
 1247 0723 64 11                   		and	#1, r1
 1248 0725 20 04                   		beq	.L80
 1249 0727 2E 1B                   		bra	.L79
 1250                             	.L80:
 694:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				else if (FltLoadToutData.state == FLT_LOAD_TOUT_END)
 1251                             		.loc 1 694 0
 1252 0729 FB A2 00 00 00 00       		mov.L	#_FltLoadToutData, r10
 1253 072f DC AA                   		mov.W	[r10], r10
 1254 0731 77 2A 00 FE 00          		and	#0xfe00, r10
 1255 0736 76 0A 00 06             		cmp	#0x600, r10
 1256 073a 21 14                   		bne	.L78
 698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         			uP_Load_Data.status = LOAD_TRUE;
 1257                             		.loc 1 698 0
 1258 073c 3C 71 04                		mov.B	#4, 1[r7]
 1259 073f 38 03 01                		bra	.L27
 1260                             	.L79:
 711:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         		LOA_levTOtimeRef_Update(); 
 1261                             		.loc 1 711 0
 1262 0742 05 00 00 00             		bsr	_LOA_levTOtimeRef_Update
 1263                             	.LVL109:
 714:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   				LOA_waterInDW_defUpdate();
 1264                             		.loc 1 714 0
 1265 0746 05 00 00 00             		bsr	_LOA_waterInDW_defUpdate
 1266                             	.LVL110:
 716:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****         		uP_Load_Data.status = LOAD_TRUE;				
 1267                             		.loc 1 716 0
 1268 074a 3C 71 04                		mov.B	#4, 1[r7]
 1269 074d 03                      		.balign 2,3,5
 1270                             	.L78:
 728:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/
 1271                             		.loc 1 728 0
 1272 074e FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 1273 0754 58 77                   		movu.B	[r7], r7
 1274 0756 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 1275 075c 66 1B                   		mov	#1, r11
 1276 075e FE 07 AB                		mov.B	r11, [r7,r10]
 1277 0761 03                      		.balign 2,3,5
 1278                             	.L76:
 734:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 	if (uP_Load_Data.status == LOAD_PS_DINAMIC)
 1279                             		.loc 1 734 0
 1280 0762 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1281 0768 59 7A 01                		movu.B	1[r7], r10
 1282 076b 61 5A                   		cmp	#5, r10
 1283 076d 3B B9 00                		bne	.L82
 741:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		if (TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)) )
 1284                             		.loc 1 741 0
 1285 0770 FB A2 00 00 00 00       		mov.L	#_GIValid, r10
 1286 0776 DC AA                   		mov.W	[r10], r10
 1287 0778 76 2A 00 04             		and	#0x400, r10
 1288 077c 5F AA                   		movu.W	r10, r10
 1289 077e 61 0A                   		cmp	#0, r10
 1290 0780 3A 9F 00                		beq	.L83
 743:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==0) )
 1291                             		.loc 1 743 0
 1292 0783 FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 1293 0789 CC AA                   		mov.B	[r10], r10
 1294 078b 5B AB                   		movu.B	r10, r11
 1295 078d 61 0B                   		cmp	#0, r11
 1296 078f 21 32                   		bne	.L84
 745:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( !uP_Load_Data.pump_act)
 1297                             		.loc 1 745 0
 1298 0791 DD 7B 01                		mov.W	2[r7], r11
 1299 0794 75 2B 40                		and	#64, r11
 1300 0797 5F BB                   		movu.W	r11, r11
 1301 0799 61 0B                   		cmp	#0, r11
 1302 079b 21 26                   		bne	.L84
 747:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 1303                             		.loc 1 747 0
 1304 079d FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 1305 07a3 CC AB                   		mov.B	[r10], r11
 750:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 1306                             		.loc 1 750 0
 1307 07a5 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+118, r1
 747:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					SETBIT(Flags_1,JIF_FLAG1_UP_TERMINATED_KO_POS);
 1308                             		.loc 1 747 0
 1309 07ab 75 3B 10                		or	#16, r11
 1310 07ae C3 AB                   		mov.B	r11, [r10]
 750:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].load_ko);
 1311                             		.loc 1 750 0
 1312 07b0 05 00 00 00             		bsr	_IncByteWithCheck
 1313                             	.LVL111:
 754:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					LOA_waterInDW_defUpdate();
 1314                             		.loc 1 754 0
 1315 07b4 05 00 00 00             		bsr	_LOA_waterInDW_defUpdate
 1316                             	.LVL112:
 756:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.status = LOAD_TRUE;
 1317                             		.loc 1 756 0
 1318 07b8 3C 71 04                		mov.B	#4, 1[r7]
 1319                             	.LVL113:
 1320 07bb 03                      		.balign 2,3,1
 1321                             	.L157:
 757:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					return S_FALSE;
 1322                             		.loc 1 757 0
 1323 07bc 66 11                   		mov	#1, r1
 1324 07be 38 84 00                		bra	.L27
 1325                             	.LVL114:
 1326                             	.L84:
 761:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR
 1327                             		.loc 1 761 0
 1328 07c1 60 1A                   		sub	#1, r10
 1329 07c3 5B AA                   		movu.B	r10, r10
 1330 07c5 61 1A                   		cmp	#1, r10
 1331 07c7 24 25                   		bgtu	.L85
 763:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				if ( uP_Load_Data.pump_act)
 1332                             		.loc 1 763 0
 1333 07c9 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1334 07cf DD 7A 01                		mov.W	2[r7], r10
 1335 07d2 75 2A 40                		and	#64, r10
 1336 07d5 5F AA                   		movu.W	r10, r10
 1337 07d7 61 0A                   		cmp	#0, r10
 1338 07d9 20 0C                   		beq	.L86
 765:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					uP_Load_Data.pump_act=FALSE;
 1339                             		.loc 1 765 0
 1340 07db CD 7A 03                		mov.B	3[r7], r10
 1341 07de 7A 6A                   		bclr	#6, r10
 1342 07e0 C7 7A 03                		mov.B	r10, 3[r7]
 1343 07e3 2E 09                   		bra	.L85
 1344                             	.L86:
 768:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 					(void)SWTC_Run((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1345                             		.loc 1 768 0
 1346 07e5 66 41                   		mov	#4, r1
 1347 07e7 05 00 00 00             		bsr	_SWTC_Run
 1348                             	.LVL115:
 1349 07eb 03                      		.balign 2,3,1
 1350                             	.L85:
 771:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER) )
 1351                             		.loc 1 771 0
 1352 07ec 66 41                   		mov	#4, r1
 1353 07ee 05 00 00 00             		bsr	_SWTC_IsExpired
 1354                             	.LVL116:
 1355 07f2 61 01                   		cmp	#0, r1
 1356 07f4 20 16                   		beq	.L87
 774:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1357                             		.loc 1 774 0
 1358 07f6 66 41                   		mov	#4, r1
 778:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_TRUE;
 1359                             		.loc 1 778 0
 1360 07f8 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 774:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				(void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1361                             		.loc 1 774 0
 1362 07fe 05 00 00 00             		bsr	_SWTC_Stop
 1363                             	.LVL117:
 776:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				LOA_waterInDW_defUpdate();
 1364                             		.loc 1 776 0
 1365 0802 05 00 00 00             		bsr	_LOA_waterInDW_defUpdate
 1366                             	.LVL118:
 778:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 				uP_Load_Data.status = LOAD_TRUE;
 1367                             		.loc 1 778 0
 1368 0806 3C 71 04                		mov.B	#4, 1[r7]
 1369 0809 03                      		.balign 2,3,5
 1370                             	.L87:
 782:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/
 1371                             		.loc 1 782 0
 1372 080a FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 1373 0810 58 77                   		movu.B	[r7], r7
 1374 0812 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 1375 0818 66 1C                   		mov	#1, r12
 1376 081a FE 07 AC                		mov.B	r12, [r7,r10]
 1377 081d 2E 09                   		bra	.L82
 1378                             	.L83:
 785:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			 (void)SWTC_Stop((SWTC_CountersType)MP_LOAD_FULLSTABILITY_S_COUNTER);
 1379                             		.loc 1 785 0
 1380 081f 66 41                   		mov	#4, r1
 1381 0821 05 00 00 00             		bsr	_SWTC_Stop
 1382                             	.LVL119:
 1383 0825 03                      		.balign 2,3,5
 1384                             	.L82:
 790:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c ****   if (uP_Load_Data.status == LOAD_TRUE)
 1385                             		.loc 1 790 0
 1386 0826 FB 72 00 00 00 00       		mov.L	#_uP_Load_Data, r7
 1387 082c B0 7F                   		movu.B	1[r7], r7
 1388 082e 61 47                   		cmp	#4, r7
 1389 0830 21 8C                   		bne	.L157
 796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		Flag_levTOtimeRef_update = FALSE;
 1390                             		.loc 1 796 0
 1391 0832 FB 72 00 00 00 00       		mov.L	#_Flag_levTOtimeRef_update, r7
 1392 0838 3E 70 00                		mov.L	#0, [r7]
 1393 083b 03                      		.balign 2,3,3
 1394                             	.L158:
 798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 		LOA_disableLoadCounters();  /* disabilitazione contatori */
 1395                             		.loc 1 798 0
 1396 083c 05 00 00 00             		bsr	_LOA_disableLoadCounters
 1397                             	.LVL120:
 1398                             		.balign 2,3,1
 1399                             	.L89:
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** 			return S_OK;
 1400                             		.loc 1 235 0
 1401 0840 66 01                   		mov	#0, r1
 1402                             	.LVL121:
 1403                             		.balign 2,3,1
 1404                             	.L27:
 807:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Load.c **** }
 1405                             		.loc 1 807 0
 1406 0842 5B 11                   		movu.B	r1, r1
 1407 0844 3F 7C 07                		rtsd	#28, r7-r12
 1408                             	.LFE0:
 1524                             	.Letext0:
 1525                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 1526                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 1527                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 1528                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmDefines.h"
 1529                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 1530                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 1531                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\PlatformLibrary\\LIB_IOManager/OutputManagerExp.h"
 1532                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 1533                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 1534                             		.file 11 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_FuncLib.h"
 1535                             		.file 12 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Control/DW_Fault.h"
 1536                             		.file 13 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmFuncLib.h"
