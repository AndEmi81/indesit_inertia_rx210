   1                             		.file	"Regenerate.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.RGN_checkCondReg,"ax",@progbits
   5                             		.global	_RGN_checkCondReg
   7                             	_RGN_checkCondReg:
   8                             	.LFB1:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules/Regenerate.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /**
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** Source File 
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \file    Regenerate.c
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \ingroup Regenerate
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \date    26/06/2008
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \author  Valeria Catani
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \version 1.0.0
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** */
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /*
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** Copyright (c) 2004-2008, Indesit Company, IDD.
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** Tutti i diritti sono riservati. All rights reserved.
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** */
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Old Versions
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \version 
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \date    
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \author  
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** */
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ******** */
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Includes */
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ******** */
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** #include "CstmHeaders.h"
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ****************** */
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Defines and Macros */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ****************** */
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* *************************** */
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Typedef, Structs and Unions */
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* *************************** */
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* **************************** */
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Prototype of local functions */
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* **************************** */
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** uint8_t RGN_checkCondReg (void);
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ****************** */
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Exported variables */
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ****************** */
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* **************** */
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Global variables */
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* **************** */
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ***************** */
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Exported function */
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ***************** */
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /**
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** Gestisce l'esecuzione del microprogramma Regenerate.
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \return S_OK se la condizione di avanzamento passo per il microprogramma � verificata (rigenera c
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \return S_FALSE se non � ancora verificata(rigenera non ancora completata),
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \return codice di errore in altri casi
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \version		1.0.0
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \date 			26/06/2008
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \author			Valeria Catani
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** */
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** uint8_t RGN_uP_Regenerate_Exe (uint8_t HighStatement,uint8_t LowStatement)
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** {
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	Loader_Struct uPRegenerate_setting_data;
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE)
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{	/* Prima iterazione del passo */
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_INIT;
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (uPDoorStatus == UP_DOOR_WAIT)
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{/* porta aperta -> il uP va sospeso */
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****    
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     /*COMPLETARE!!!!!!!!!!!!!!!!!!!*/
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     /*VEDERE QUALI CONTATORI DISABILITARE!!!*/
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     /*ANCHE EV RIG SOTTOPOSTA A PORTA E MR*/
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     	(void)SWTC_Stop((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);;
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		return S_FALSE;
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			    
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_INIT )
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{/* Init uP */
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  /* caricamento dati dalla flash */
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( BasicLoader( PTR_UP_REGENERATE, LowStatement, &uPRegenerate_setting_data ) != S_OK )
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		{
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			return S_OK;	/*non eseguo il uP, ma abilito avanzamento passo*/
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		}
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		/* inizializzazione dati uP */
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseRegReq = OFFS_B(uPRegenerate_setting_data.Data,1); /*acqua da impieg
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		                                                                               espressa in impuls
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.resetAfterRegReq = FALSE;
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( TESTBIT ( OFFS_B(uPRegenerate_setting_data.Data,0), 7 ) )
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		{ 
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.resetAfterRegReq = TRUE;
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		}
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		/* init var conteggio impulsi per rigenera */
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = 0;
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  /* verifica condizioni per eseguire o meno rigenera */	
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( uP_Regenerate_Data.resetAfterRegReq == FALSE)
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		{ /* non richiesto reset after reg -> primo passaggio di rigenera */
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    if ( RGN_checkCondReg() == TRUE )	
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    {/* la rigenera va eseguita */
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      SETBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  /* per il passaggio di rigenera successivo */
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      /*uP_Regenerate_Data.status = REGENERATE_EXE_0;*/
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	       
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    }
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    else
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    {/* la rigenera non va eseguita */
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      uP_Regenerate_Data.status = REGENERATE_TRUE;
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      return S_OK;   
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    }
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		}
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		else
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		{ /* richiesto reset after reg -> secondo passaggio di rigenera */
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		 
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  if ( TESTBIT(Flags_2,FLAG2_REGENERATE_ON_POS) == 0 )
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  {/*in base al test effettuato al passaggio precedente la rigenera non va eseguita */
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    uP_Regenerate_Data.status = REGENERATE_TRUE;
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      return S_OK;   
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  }
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  CLRBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		}
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		/*init counter per delay attivazione EVR - attivazione EVC*/
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( HWC_Flags.bit.vs_wash_presence != 0)
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		{ /* l'unit� di misura in setting � 500 ms*/
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			uP_Regenerate_Data.tout_cnt =(uint16_t)(OFFS_B(uPRegenerate_setting_data.Data,0) & 0x7F )* 5;
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		}
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_EXE_0;
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		return S_FALSE;	/* nella prima iterazione non vengono pilotati i carichi */
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}/*REGENERATE_INIT END*/
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_EXE_0 )
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	{/* conteggio ritardo EVR ON - EVC ON concluso */
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    /*Set Timeout di sicurezza caricamento acqua per rigenera */
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.waterPulseRegReq != 0)
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    {/* richiesta quantit� acqua per rigenera non nulla */
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			    if ( HWC_Flags.bit.vs_wash_presence == 0)				
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				{
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				  /* init timeout di attivazione EV in base a portata storica, impulsi da caricare e margine di
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 					uP_Regenerate_Data.tout_cnt =  ((uP_Regenerate_Data.waterPulseRegReq - uP_Regenerate_Data.wate
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 								                    (FlowMeterDivider * (FULL_REF_LEVEL)) ;
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				}
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				if ( (PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_PULS
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				{/* Pulse counter OK && non bloccata */
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	         		uP_Regenerate_Data.tout_cnt += MARGIN; 		/* aggiungo margine di sicurezza al tout di ca
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	}
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  		if ( HWC_Flags.bit.vs_wash_presence != 0)	
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				{
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      			PulseLoaded=0;
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				}
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	PulseCounter_SetCount(uP_Regenerate_Data.waterPulseReg);  /* init Pulse Counter */
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /*AE FIXME PULSE COUNTER */
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	/*
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	PulseCounter_Reset_Warning(PULSECOUNTER_RESET_HIGH_WARNING);  reset warning alta frequenza
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		                                                                      potrebbe dipendere dall'att
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      		uP_Regenerate_Data.status = REGENERATE_EXE_1;
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	       						
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    	}
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    else
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    {/* non deve essere caricata acqua */
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****       
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	/*init counter per delay disattivazione EVC - disattivazione EVR*/
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			  	(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerTyp
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			    
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    }
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	}
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	/* in ogni caso */	   
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	(void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	   
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}/* REGENERATE_EXE_0 END*/
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_1)
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{		
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		/* aggiornamento impulsi caricati */
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = (uint8_t)PulseLoaded;
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		/* aggiornamento timeout di sicurezza */
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.tout_cnt--;
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  /* controllo termine caricamento */
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  if ( (uP_Regenerate_Data.waterPulseReg >= uP_Regenerate_Data.waterPulseRegReq) || 
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	       (uP_Regenerate_Data.tout_cnt == 0) )
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  {
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    /*init counter per delay disattivazione EVC - disattivazione EVR*/
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	     uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  }
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  /* pilotaggio EVR - EVC */
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON;
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}/* REGENERATE_EXE_1 END*/
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_2)
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  {/* conteggio ritardo EVC OFF - EVR OFF concluso */
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  if ( uP_Regenerate_Data.resetAfterRegReq == TRUE)
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  {/* richiesto reset quantit� acqua : processo di rigenera in 2 step concluso */
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		     
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    /* aggiornamento numero di rigenere eseguite */
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    RGN_updateRegNumber();
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    		    		  
 268:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    /* Flag rigenera eseguita (anche per JumpIF)*/
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    SETBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS);
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.forceReg_cnt != 0)
 272:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    {
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      Reg_WaterLoaded.l = WaterForRegenerate;
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      uP_Regenerate_Data.forceReg_cnt --;   
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    }
 278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  }
 280:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.status = REGENERATE_TRUE;
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  }
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  /* in ogni caso */	   
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	 (void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}/*REGENERATE_EXE_2 END*/
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_TRUE )
 292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	   return S_OK;
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}/*REGENERATE_TRUE END*/
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 297:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	return S_FALSE;
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** }
 300:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 301:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 302:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 303:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 304:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 305:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ************** */
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* Local Function */
 307:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* ************** */
 308:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /**
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** Controlla le condizioni per effettuare la rigenera
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
 313:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \return S_OK se la condizione per la rigenera � verificata 
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \return S_FALSE se non � verificata
 315:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \return codice di errore in altri casi
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
 317:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \version		1.0.0
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \date 			27/06/2008
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \author			Valeria Catani
 320:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 321:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** */
 322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** uint8_t RGN_checkCondReg (void)
 323:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** {
  10                             		.loc 1 323 0
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** uint16_t waterForReg;
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 326:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   if (uP_Regenerate_Data.forceReg_cnt != 0)
  11                             		.loc 1 326 0
  12 0000 FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
  13 0006 59 E1 06                		movu.B	6[r14], r1
  14 0009 61 01                   		cmp	#0, r1
  15 000b 21 2C                   		bne	.L3
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   {/* rigenera forzata (con contatore) */
 328:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     return TRUE; 
 330:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   }
 331:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   if ( WaterForRegenerate == 0xFF )
  16                             		.loc 1 332 0
  17 000d FB E2 00 00 00 00       		mov.L	#_WaterForRegenerate, r14
  18 0013 58 E4                   		movu.B	[r14], r4
  19 0015 75 54 FF                		cmp	#0xff, r4
  20 0018 20 22                   		beq	.L2
  21                             	.LVL0:
 333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{/* Non ho dato di confronto per stabilire se eseguire rigenera */  /*CASO REALE?????*/
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		return FALSE;
 336:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}
 337:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 338:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /* rigenera abilitata anche dopo segnalazione sale assente */
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /*	
 340:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if ( TESTBIT(ApplicationFlags, AF_NO_SALT_BIT) )	
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	{// E' stata comunicata mancanza sale alla UI
 342:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	
 343:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  return FALSE; 
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	}
 345:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** */	
 346:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 347:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   waterForReg = ( (uint16_t)Reg_WaterLoaded.l + (WaterInDW/10) );
  22                             		.loc 1 347 0
  23 001a FB E2 00 00 00 00       		mov.L	#_WaterInDW, r14
  24                             	.LVL1:
  25 0020 58 EE                   		movu.B	[r14], r14
  26                             	.LVL2:
  27 0022 FB 32 00 00 00 00       		mov.L	#_Reg_WaterLoaded, r3
  28                             	.LVL3:
  29 0028 58 31                   		movu.B	[r3], r1
  30 002a FD 74 9E 0A             		divu	#10, r14
 348:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 349:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   if ( waterForReg >= WaterForRegenerate  )
  31                             		.loc 1 349 0
  32 002e 4B E1                   		add	r14, r1
  33 0030 47 14                   		cmp	r1, r4
  34 0032 FC DB 15                		scleu.L	r1
  35 0035 2E 05                   		bra	.L2
  36                             	.LVL4:
  37                             	.L3:
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     return TRUE; 
  38                             		.loc 1 329 0
  39 0037 66 11                   		mov	#1, r1
  40 0039 03                      		.balign 2,3,1
  41                             	.L2:
 350:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   {
 351:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     return TRUE;  
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   }
 353:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 354:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   return FALSE;
 355:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     
 356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** }
  42                             		.loc 1 356 0
  43 003a 5B 11                   		movu.B	r1, r1
  44 003c 02                      		rts
  45                             	.LFE1:
  47 003d 03                      		.section	.text.RGN_updateRegNumber,"ax",@progbits
  48                             		.global	_RGN_updateRegNumber
  50                             	_RGN_updateRegNumber:
  51                             	.LFB2:
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 358:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** /**
 359:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** Aggiorna il numero di rigenere eseguite
 360:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
 361:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****  
 362:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \return 
 363:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 364:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \version		1.0.0
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \date 			30/06/2008
 366:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** \author			Valeria Catani
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 368:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** */
 369:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** void RGN_updateRegNumber (void)
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** {
  52                             		.loc 1 370 0
 371:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** uint8_t nMaxReg;
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 373:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   nMaxReg = OFFS_B(Tab_HWCRegenerateData.Data,2);
  53                             		.loc 1 374 0
  54 0000 FB E2 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r14
  55 0006 EC EE                   		mov.L	[r14], r14
  56 0008 CD E4 02                		mov.B	2[r14], r4
  57                             	.LVL5:
 375:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 
 376:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   if (HWC_Flags.bit.saltreed)
  58                             		.loc 1 376 0
  59 000b FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
  60 0011 DC EE                   		mov.W	[r14], r14
  61 0013 76 2E 00 40             		and	#0x4000, r14
  62 0017 5F EE                   		movu.W	r14, r14
  63 0019 61 0E                   		cmp	#0, r14
  64 001b 20 22                   		beq	.L6
 377:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   {/* reed sale presente */
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 379:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     if ( NoSalt_Reg == TRUE )
  65                             		.loc 1 379 0
  66 001d FB E2 00 00 00 00       		mov.L	#_NoSalt_Reg, r14
  67 0023 58 EE                   		movu.B	[r14], r14
  68 0025 61 1E                   		cmp	#1, r14
  69 0027 21 20                   		bne	.L5
 380:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     {/* richiesto aggiornamento num rigenere poich� sale assente */
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     
 382:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****             if ( uP_Regenerate_Data.nReg < 0xFF )
  70                             		.loc 1 382 0
  71 0029 FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
  72 002f CD E4 07                		mov.B	7[r14], r4
  73                             	.LVL6:
  74 0032 5B 43                   		movu.B	r4, r3
  75 0034 75 53 FF                		cmp	#0xff, r3
  76 0037 20 10                   		beq	.L5
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			{				
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				uP_Regenerate_Data.nReg++;
  77                             		.loc 1 384 0
  78 0039 62 14                   		add	#1, r4
  79 003b 2E 09                   		bra	.L11
  80                             	.LVL7:
  81                             	.L6:
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			}
 386:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****       
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     }
 388:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   }
 389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   else
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   {/* reed sale assente */
 391:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****   
 392:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     /* per compatibilit� con vecchia piattaforma, forse inutile! */
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     
 394:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     uP_Regenerate_Data.nReg = nMaxReg;   
  82                             		.loc 1 394 0
  83 003d FB E2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r14
  84                             	.LVL8:
  85 0043 03                      		.balign 2,3,5
  86                             	.L11:
  87 0044 C7 E4 07                		mov.B	r4, 7[r14]
  88                             	.L5:
  89 0047 02                      		rts
  90                             	.LFE2:
  92                             		.section	.text.RGN_uP_Regenerate_Exe,"ax",@progbits
  93                             		.global	_RGN_uP_Regenerate_Exe
  95                             	_RGN_uP_Regenerate_Exe:
  96                             	.LFB0:
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** {
  97                             		.loc 1 71 0
  98                             	.LVL9:
  99 0000 6E 7B                   		pushm	r7-r11
 100                             	.LCFI0:
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE)
 101                             		.loc 1 75 0
 102 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 103 0008 89 77                   		mov.B	4[r7], r7
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** {
 104                             		.loc 1 71 0
 105 000a 60 80                   		sub	#8, r0
 106                             	.LCFI1:
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE)
 107                             		.loc 1 75 0
 108 000c 64 27                   		and	#2, r7
 109 000e 21 0C                   		bne	.L13
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_INIT;
 110                             		.loc 1 78 0
 111 0010 FB A2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r10
 112 0016 C7 A7 05                		mov.B	r7, 5[r10]
 113 0019 03                      		.balign 2,3,5
 114                             	.L13:
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (uPDoorStatus == UP_DOOR_WAIT)
 115                             		.loc 1 82 0
 116 001a FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
 117 0020 58 77                   		movu.B	[r7], r7
 118 0022 61 07                   		cmp	#0, r7
 119 0024 21 0B                   		bne	.L14
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c ****     	(void)SWTC_Stop((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);;
 120                             		.loc 1 89 0
 121 0026 66 81                   		mov	#8, r1
 122                             	.LVL10:
 123 0028 05 00 00 00             		bsr	_SWTC_Stop
 124                             	.LVL11:
 125 002c 38 D4 00                		bra	.L54
 126                             	.LVL12:
 127                             	.L14:
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_INIT )
 128                             		.loc 1 96 0
 129 002f FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 130 0035 59 7A 05                		movu.B	5[r7], r10
 131 0038 61 0A                   		cmp	#0, r10
 132 003a 3B CB 00                		bne	.L16
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( BasicLoader( PTR_UP_REGENERATE, LowStatement, &uPRegenerate_setting_data ) != S_OK )
 133                             		.loc 1 101 0
 134 003d 75 41 1D                		mov	#29, r1
 135                             	.LVL13:
 136 0040 EF 03                   		mov.L	r0, r3
 137 0042 05 00 00 00             		bsr	_BasicLoader
 138                             	.LVL14:
 139 0046 5B 11                   		movu.B	r1, r1
 140 0048 61 01                   		cmp	#0, r1
 141 004a 3B 89 02                		bne	.L37
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseRegReq = OFFS_B(uPRegenerate_setting_data.Data,1); /*acqua da impieg
 142                             		.loc 1 108 0
 143 004d EC 0E                   		mov.L	[r0], r14
 144 004f 8A 74                   		mov.B	8[r7], r4
 145 0051 CD EA 01                		mov.B	1[r14], r10
 146 0054 64 14                   		and	#1, r4
 147 0056 4B AA                   		add	r10, r10
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.resetAfterRegReq = FALSE;
 148                             		.loc 1 111 0
 149 0058 57 4A                   		or	r4, r10
 150 005a 7A 0A                   		bclr	#0, r10
 151 005c C7 7A 08                		mov.B	r10, 8[r7]
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( TESTBIT ( OFFS_B(uPRegenerate_setting_data.Data,0), 7 ) )
 152                             		.loc 1 113 0
 153 005f CC EE                   		mov.B	[r14], r14
 154 0061 61 0E                   		cmp	#0, r14
 155 0063 28 07                   		bge	.L17
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.resetAfterRegReq = TRUE;
 156                             		.loc 1 115 0
 157 0065 78 0A                   		bset	#0, r10
 158 0067 C7 7A 08                		mov.B	r10, 8[r7]
 159                             		.balign 2,3,5
 160                             	.L17:
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = 0;
 161                             		.loc 1 119 0
 162 006a FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( uP_Regenerate_Data.resetAfterRegReq == FALSE)
 163                             		.loc 1 123 0
 164 0070 DD 7A 04                		mov.W	8[r7], r10
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = 0;
 165                             		.loc 1 119 0
 166 0073 3C 74 00                		mov.B	#0, 4[r7]
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( uP_Regenerate_Data.resetAfterRegReq == FALSE)
 167                             		.loc 1 123 0
 168 0076 76 2A 00 01             		and	#0x100, r10
 169 007a 5F AA                   		movu.W	r10, r10
 170 007c 61 0A                   		cmp	#0, r10
 171 007e 21 20                   		bne	.L18
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	    if ( RGN_checkCondReg() == TRUE )	
 172                             		.loc 1 126 0
 173 0080 05 00 00 00             		bsr	_RGN_checkCondReg
 174                             	.LVL15:
 175 0084 5B 11                   		movu.B	r1, r1
 176 0086 61 11                   		cmp	#1, r1
 177 0088 21 10                   		bne	.L19
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      SETBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  /* per il passaggio di rigenera successivo */
 178                             		.loc 1 129 0
 179 008a FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 180 0090 CC 7A                   		mov.B	[r7], r10
 181 0092 65 4A                   		or	#4, r10
 182 0094 C3 7A                   		mov.B	r10, [r7]
 183 0096 2E 26                   		bra	.L20
 184                             	.L19:
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      uP_Regenerate_Data.status = REGENERATE_TRUE;
 185                             		.loc 1 137 0
 186 0098 3C 75 04                		mov.B	#4, 5[r7]
 187 009b 38 38 02                		bra	.L37
 188                             	.L18:
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  if ( TESTBIT(Flags_2,FLAG2_REGENERATE_ON_POS) == 0 )
 189                             		.loc 1 147 0
 190 009e FB A2 00 00 00 00       		mov.L	#_Flags_2, r10
 191 00a4 CC AE                   		mov.B	[r10], r14
 192 00a6 EF E1                   		mov.L	r14, r1
 193 00a8 64 41                   		and	#4, r1
 194 00aa 5B 11                   		movu.B	r1, r1
 195 00ac 61 01                   		cmp	#0, r1
 196 00ae 21 08                   		bne	.L21
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    uP_Regenerate_Data.status = REGENERATE_TRUE;
 197                             		.loc 1 150 0
 198 00b0 3C 75 04                		mov.B	#4, 5[r7]
 199 00b3 38 23 02                		bra	.L15
 200                             	.L21:
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  CLRBIT(Flags_2,FLAG2_REGENERATE_ON_POS);  
 201                             		.loc 1 156 0
 202 00b6 75 2E FB                		and	#-5, r14
 203 00b9 C3 AE                   		mov.B	r14, [r10]
 204 00bb 03                      		.balign 2,3,5
 205                             	.L20:
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 206                             		.loc 1 160 0
 207 00bc FB 72 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r7
 208 00c2 EC 77                   		mov.L	[r7], r7
 209 00c4 66 81                   		mov	#8, r1
 210 00c6 CC 73                   		mov.B	[r7], r3
 211 00c8 66 22                   		mov	#2, r2
 212 00ca 75 23 7F                		and	#0x7f, r3
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( HWC_Flags.bit.vs_wash_presence != 0)
 213                             		.loc 1 161 0
 214 00cd FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 215                             		.loc 1 160 0
 216 00d3 05 00 00 00             		bsr	_Set_SmallCounter
 217                             	.LVL16:
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		if ( HWC_Flags.bit.vs_wash_presence != 0)
 218                             		.loc 1 161 0
 219 00d7 DC 77                   		mov.W	[r7], r7
 220 00d9 76 27 00 08             		and	#0x800, r7
 221 00dd 5F 77                   		movu.W	r7, r7
 222 00df 61 07                   		cmp	#0, r7
 223 00e1 20 15                   		beq	.L22
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			uP_Regenerate_Data.tout_cnt =(uint16_t)(OFFS_B(uPRegenerate_setting_data.Data,0) & 0x7F )* 5;
 224                             		.loc 1 163 0
 225 00e3 EC 07                   		mov.L	[r0], r7
 226 00e5 FB A2 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r10
 227 00eb CC 77                   		mov.B	[r7], r7
 228 00ed 75 27 7F                		and	#0x7f, r7
 229 00f0 63 57                   		mul	#5, r7
 230 00f2 D7 A7 01                		mov.W	r7, 2[r10]
 231 00f5 03                      		.balign 2,3,5
 232                             	.L22:
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.status = REGENERATE_EXE_0;
 233                             		.loc 1 166 0
 234 00f6 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 235 00fc 3C 75 01                		mov.B	#1, 5[r7]
 236 00ff 03                      		.balign 2,3,1
 237                             	.L54:
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		return S_FALSE;	/* nella prima iterazione non vengono pilotati i carichi */
 238                             		.loc 1 169 0
 239 0100 66 11                   		mov	#1, r1
 240 0102 38 D4 01                		bra	.L15
 241                             	.LVL17:
 242                             	.L16:
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_EXE_0 )
 243                             		.loc 1 173 0
 244 0105 61 1A                   		cmp	#1, r10
 245 0107 3B DF 00                		bne	.L23
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 246                             		.loc 1 175 0
 247 010a 66 81                   		mov	#8, r1
 248                             	.LVL18:
 249 010c 05 00 00 00             		bsr	_SWTC_IsExpired
 250                             	.LVL19:
 251 0110 61 01                   		cmp	#0, r1
 252 0112 3A BA 00                		beq	.L24
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.waterPulseRegReq != 0)
 253                             		.loc 1 179 0
 254 0115 DD 7A 04                		mov.W	8[r7], r10
 255 0118 77 2A 00 FE 00          		and	#0xfe00, r10
 256 011d 3A 96 00                		beq	.L25
 257                             	.LBB2:
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			    if ( HWC_Flags.bit.vs_wash_presence == 0)				
 258                             		.loc 1 182 0
 259 0120 FB A2 00 00 00 00       		mov.L	#_HWC_Flags, r10
 260 0126 DC AA                   		mov.W	[r10], r10
 261 0128 76 2A 00 08             		and	#0x800, r10
 262 012c 5F AA                   		movu.W	r10, r10
 263 012e 61 0A                   		cmp	#0, r10
 264 0130 21 30                   		bne	.L26
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 					uP_Regenerate_Data.tout_cnt =  ((uP_Regenerate_Data.waterPulseRegReq - uP_Regenerate_Data.wate
 265                             		.loc 1 186 0
 266 0132 5D 7E 04                		movu.W	8[r7], r14
 267 0135 FB A2 00 00 00 00       		mov.L	#_uP_Load_Data, r10
 268 013b 68 9E                   		shlr	#9, r14
 269 013d 41 7E 04                		sub	4[r7].UB, r14
 270 0140 4C AE                   		mul	[r10].UB, r14
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 								                    (FlowMeterDivider * (FULL_REF_LEVEL)) ;
 271                             		.loc 1 187 0
 272 0142 FB A2 00 00 00 00       		mov.L	#_FlowMeterDivider, r10
 273 0148 58 A4                   		movu.B	[r10], r4
 274 014a FB A2 00 00 00 00       		mov.L	#_Tab_HWCPressSensorData, r10
 275 0150 EC AA                   		mov.L	[r10], r10
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 					uP_Regenerate_Data.tout_cnt =  ((uP_Regenerate_Data.waterPulseRegReq - uP_Regenerate_Data.wate
 276                             		.loc 1 186 0
 277 0152 63 5E                   		mul	#5, r14
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 								                    (FlowMeterDivider * (FULL_REF_LEVEL)) ;
 278                             		.loc 1 187 0
 279 0154 59 AA 05                		movu.B	5[r10], r10
 280 0157 4F 4A                   		mul	r4, r10
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 					uP_Regenerate_Data.tout_cnt =  ((uP_Regenerate_Data.waterPulseRegReq - uP_Regenerate_Data.wate
 281                             		.loc 1 186 0
 282 0159 FC 23 AE                		div	r10, r14
 283 015c D7 7E 01                		mov.W	r14, 2[r7]
 284 015f 03                      		.balign 2,3,3
 285                             	.L26:
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				if ( (PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_PULS
 286                             		.loc 1 190 0
 287 0160 05 00 00 00             		bsr	_PulseCounter_GetWarning
 288                             	.LVL20:
 289 0164 61 01                   		cmp	#0, r1
 290 0166 21 20                   		bne	.L27
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 				if ( (PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_PULS
 291                             		.loc 1 190 0 is_stmt 0 discriminator 1
 292 0168 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 293 016e CC 77                   		mov.B	[r7], r7
 294 0170 64 47                   		and	#4, r7
 295 0172 5B 77                   		movu.B	r7, r7
 296 0174 61 07                   		cmp	#0, r7
 297 0176 21 10                   		bne	.L27
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	         		uP_Regenerate_Data.tout_cnt += MARGIN; 		/* aggiungo margine di sicurezza al tout di ca
 298                             		.loc 1 193 0 is_stmt 1
 299 0178 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 300 017e DD 7A 01                		mov.W	2[r7], r10
 301 0181 62 AA                   		add	#10, r10
 302 0183 D7 7A 01                		mov.W	r10, 2[r7]
 303                             		.balign 2,3,5
 304                             	.L27:
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  		if ( HWC_Flags.bit.vs_wash_presence != 0)	
 305                             		.loc 1 195 0
 306 0186 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 307 018c DC 77                   		mov.W	[r7], r7
 308 018e 76 27 00 08             		and	#0x800, r7
 309 0192 5F 77                   		movu.W	r7, r7
 310 0194 61 07                   		cmp	#0, r7
 311 0196 20 0C                   		beq	.L28
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      			PulseLoaded=0;
 312                             		.loc 1 197 0
 313 0198 FB 72 00 00 00 00       		mov.L	#_PulseLoaded, r7
 314 019e 3D 70 00                		mov.W	#0, [r7]
 315 01a1 03                      		.balign 2,3,5
 316                             	.L28:
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	PulseCounter_SetCount(uP_Regenerate_Data.waterPulseReg);  /* init Pulse Counter */
 317                             		.loc 1 199 0
 318 01a2 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 319 01a8 B1 71                   		movu.B	4[r7], r1
 320 01aa 05 00 00 00             		bsr	_PulseCounter_SetCount
 321                             	.LVL21:
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	      		uP_Regenerate_Data.status = REGENERATE_EXE_1;
 322                             		.loc 1 205 0
 323 01ae 3C 75 02                		mov.B	#2, 5[r7]
 324 01b1 2E 1B                   		bra	.L24
 325                             	.L25:
 326                             	.LBE2:
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			  	(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerTyp
 327                             		.loc 1 212 0
 328 01b3 FB A2 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r10
 329 01b9 EC AA                   		mov.L	[r10], r10
 330 01bb 66 81                   		mov	#8, r1
 331 01bd CD A3 01                		mov.B	1[r10], r3
 332 01c0 66 22                   		mov	#2, r2
 333 01c2 75 23 7F                		and	#0x7f, r3
 334 01c5 05 00 00 00             		bsr	_Set_SmallCounter
 335                             	.LVL22:
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      	uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 336                             		.loc 1 215 0
 337 01c9 3C 75 03                		mov.B	#3, 5[r7]
 338                             		.balign 2,3,1
 339                             	.L24:
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	(void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 340                             		.loc 1 221 0
 341 01cc 66 81                   		mov	#8, r1
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 342                             		.loc 1 223 0
 343 01ce FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	(void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 344                             		.loc 1 221 0
 345 01d4 05 00 00 00             		bsr	_SWTC_Run
 346                             	.LVL23:
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  	LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 347                             		.loc 1 223 0
 348 01d8 B0 7F                   		movu.B	1[r7], r7
 349 01da FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 350 01e0 66 1B                   		mov	#1, r11
 351 01e2 FE 07 AB                		mov.B	r11, [r7,r10]
 352 01e5 03                      		.balign 2,3,5
 353                             	.L23:
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_1)
 354                             		.loc 1 227 0
 355 01e6 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 356 01ec 59 7A 05                		movu.B	5[r7], r10
 357 01ef 61 2A                   		cmp	#2, r10
 358 01f1 21 5D                   		bne	.L29
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.tout_cnt--;
 359                             		.loc 1 236 0
 360 01f3 DD 7E 01                		mov.W	2[r7], r14
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = (uint8_t)PulseLoaded;
 361                             		.loc 1 231 0
 362 01f6 FB A2 00 00 00 00       		mov.L	#_PulseLoaded, r10
 363 01fc DC AA                   		mov.W	[r10], r10
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.tout_cnt--;
 364                             		.loc 1 236 0
 365 01fe 60 1E                   		sub	#1, r14
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.waterPulseReg = (uint8_t)PulseLoaded;
 366                             		.loc 1 231 0
 367 0200 C7 7A 04                		mov.B	r10, 4[r7]
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		uP_Regenerate_Data.tout_cnt--;
 368                             		.loc 1 236 0
 369 0203 D7 7E 01                		mov.W	r14, 2[r7]
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  if ( (uP_Regenerate_Data.waterPulseReg >= uP_Regenerate_Data.waterPulseRegReq) || 
 370                             		.loc 1 240 0
 371 0206 B9 77                   		movu.W	8[r7], r7
 372 0208 5B AA                   		movu.B	r10, r10
 373 020a 68 97                   		shlr	#9, r7
 374 020c 47 7A                   		cmp	r7, r10
 375 020e 28 08                   		bge	.L30
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  if ( (uP_Regenerate_Data.waterPulseReg >= uP_Regenerate_Data.waterPulseRegReq) || 
 376                             		.loc 1 240 0 is_stmt 0 discriminator 1
 377 0210 5F E7                   		movu.W	r14, r7
 378 0212 61 07                   		cmp	#0, r7
 379 0214 21 20                   		bne	.L31
 380                             		.balign 2,3,5
 381                             	.L30:
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 382                             		.loc 1 244 0 is_stmt 1
 383 0216 FB 72 00 00 00 00       		mov.L	#_Tab_HWCRegenerateData, r7
 384 021c EC 77                   		mov.L	[r7], r7
 385 021e 66 81                   		mov	#8, r1
 386 0220 88 7B                   		mov.B	1[r7], r3
 387 0222 66 22                   		mov	#2, r2
 388 0224 75 23 7F                		and	#0x7f, r3
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	     uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 389                             		.loc 1 246 0
 390 0227 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER, (SWTC_PrescalerType)CO
 391                             		.loc 1 244 0
 392 022d 05 00 00 00             		bsr	_Set_SmallCounter
 393                             	.LVL24:
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	     uP_Regenerate_Data.status = REGENERATE_EXE_2;  
 394                             		.loc 1 246 0
 395 0231 3C 75 03                		mov.B	#3, 5[r7]
 396                             		.balign 2,3,5
 397                             	.L31:
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 398                             		.loc 1 251 0
 399 0234 FB A2 00 00 00 00       		mov.L	#_EV_Pos, r10
 400 023a 59 AE 01                		movu.B	1[r10], r14
 401 023d FB 72 00 00 00 00       		mov.L	#_LoadsReq_New, r7
 402 0243 66 1B                   		mov	#1, r11
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON;
 403                             		.loc 1 252 0
 404 0245 58 AA                   		movu.B	[r10], r10
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 405                             		.loc 1 251 0
 406 0247 FE 0E 7B                		mov.B	r11, [r14,r7]
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON;
 407                             		.loc 1 252 0
 408 024a FE 0A 7B                		mov.B	r11, [r10,r7]
 409 024d 03                      		.balign 2,3,5
 410                             	.L29:
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if (uP_Regenerate_Data.status == REGENERATE_EXE_2)
 411                             		.loc 1 256 0
 412 024e FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 413 0254 59 7A 05                		movu.B	5[r7], r10
 414 0257 61 3A                   		cmp	#3, r10
 415 0259 21 6B                   		bne	.L32
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  if (SWTC_IsExpired((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER) )
 416                             		.loc 1 259 0
 417 025b 66 81                   		mov	#8, r1
 418 025d 05 00 00 00             		bsr	_SWTC_IsExpired
 419                             	.LVL25:
 420 0261 61 01                   		cmp	#0, r1
 421 0263 20 47                   		beq	.L33
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  if ( uP_Regenerate_Data.resetAfterRegReq == TRUE)
 422                             		.loc 1 262 0
 423 0265 DD 7A 04                		mov.W	8[r7], r10
 424 0268 76 2A 00 01             		and	#0x100, r10
 425 026c 5F AA                   		movu.W	r10, r10
 426 026e 61 0A                   		cmp	#0, r10
 427 0270 20 30                   		beq	.L35
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    RGN_updateRegNumber();
 428                             		.loc 1 266 0
 429 0272 05 00 00 00             		bsr	_RGN_updateRegNumber
 430                             	.LVL26:
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    SETBIT(Flags_1, JIF_FLAG1_REGENERATE_OK_POS);
 431                             		.loc 1 269 0
 432 0276 FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 433 027c CC AE                   		mov.B	[r10], r14
 434 027e 65 2E                   		or	#2, r14
 435 0280 C3 AE                   		mov.B	r14, [r10]
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		    if (uP_Regenerate_Data.forceReg_cnt != 0)
 436                             		.loc 1 271 0
 437 0282 CD 7A 06                		mov.B	6[r7], r10
 438 0285 5B AE                   		movu.B	r10, r14
 439 0287 61 0E                   		cmp	#0, r14
 440 0289 20 17                   		beq	.L35
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      Reg_WaterLoaded.l = WaterForRegenerate;
 441                             		.loc 1 273 0
 442 028b FB 42 00 00 00 00       		mov.L	#_WaterForRegenerate, r4
 443 0291 CC 44                   		mov.B	[r4], r4
 444 0293 FB E2 00 00 00 00       		mov.L	#_Reg_WaterLoaded, r14
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      uP_Regenerate_Data.forceReg_cnt --;   
 445                             		.loc 1 275 0
 446 0299 60 1A                   		sub	#1, r10
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      Reg_WaterLoaded.l = WaterForRegenerate;
 447                             		.loc 1 273 0
 448 029b C3 E4                   		mov.B	r4, [r14]
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		      uP_Regenerate_Data.forceReg_cnt --;   
 449                             		.loc 1 275 0
 450 029d C7 7A 06                		mov.B	r10, 6[r7]
 451                             		.balign 2,3,5
 452                             	.L35:
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 		  uP_Regenerate_Data.status = REGENERATE_TRUE;
 453                             		.loc 1 281 0
 454 02a0 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 455 02a6 3C 75 04                		mov.B	#4, 5[r7]
 456 02a9 03                      		.balign 2,3,1
 457                             	.L33:
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	 (void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 458                             		.loc 1 285 0
 459 02aa 66 81                   		mov	#8, r1
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 460                             		.loc 1 287 0
 461 02ac FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	 (void)SWTC_Run((SWTC_CountersType)MP_REGENERATE_EVDELAY_S_COUNTER);
 462                             		.loc 1 285 0
 463 02b2 05 00 00 00             		bsr	_SWTC_Run
 464                             	.LVL27:
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	  LoadsReq_New[EV_Pos[LD_RIG_EV_IND]].b = EV_ON;
 465                             		.loc 1 287 0
 466 02b6 B0 7F                   		movu.B	1[r7], r7
 467 02b8 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 468 02be 66 1B                   		mov	#1, r11
 469 02c0 FE 07 AB                		mov.B	r11, [r7,r10]
 470 02c3 03                      		.balign 2,3,5
 471                             	.L32:
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 	if ( uP_Regenerate_Data.status == REGENERATE_TRUE )
 472                             		.loc 1 291 0
 473 02c4 FB 72 00 00 00 00       		mov.L	#_uP_Regenerate_Data, r7
 474 02ca B1 79                   		movu.B	5[r7], r1
 475 02cc 61 41                   		cmp	#4, r1
 476 02ce FC DB 11                		scne.L	r1
 477 02d1 2E 05                   		bra	.L15
 478                             	.L37:
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** 			return S_OK;	/*non eseguo il uP, ma abilito avanzamento passo*/
 479                             		.loc 1 103 0
 480 02d3 CF A1                   		mov.B	r10, r1
 481 02d5 03                      		.balign 2,3,1
 482                             	.L15:
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Regenerate.c **** }
 483                             		.loc 1 299 0
 484 02d6 5B 11                   		movu.B	r1, r1
 485 02d8 3F 7B 07                		rtsd	#28, r7-r11
 486                             	.LFE0:
 548                             	.Letext0:
 549                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 550                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 551                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 552                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 553                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 554                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\PlatformLibrary\\LIB_IOManager/OutputManagerExp.h"
 555                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmDefines.h"
 556                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 557                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 558                             		.file 11 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_FuncLib.h"
