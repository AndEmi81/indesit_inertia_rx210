   1                             		.file	"Maintain.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.MTN_uP_Maintain_Exe,"ax",@progbits
   5                             		.global	_MTN_uP_Maintain_Exe
   7                             	_MTN_uP_Maintain_Exe:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules/Maintain.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /**
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** Source File 
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \file    Maintain.c
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \ingroup Maintain
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \date    13/02/2008
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \author  Roberto Fioravanti
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \version 1.0.0
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** */
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /*
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** Copyright (c) 2004-2008, Indesit Company, IDD.
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** Tutti i diritti sono riservati. All rights reserved.
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** */
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Old Versions
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \version 
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \date    
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \author
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** */
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /** 
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \todo :  gestione modificatori da implementare e provare		
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** */ 
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ******** */
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Includes */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ******** */
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #include "CstmHeaders.h"
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /*#include "TrashExp.h"*/
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ****************** */
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Defines and Macros */
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ****************** */
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* *************************** */
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Typedef, Structs and Unions */
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* *************************** */
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* **************************** */
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Prototype of local functions */
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* **************************** */
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ****************** */
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Exported variables */
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ****************** */
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* **************** */
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Global variables */
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* **************** */
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ******************* */
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* External variables  */
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ******************* */
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ***************** */
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* Exported function */
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /* ***************** */
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /**
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** Gestisce l'esecuzione del microprogramma Maintain.
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c ****  
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c ****  
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \retvalue S_OK se la condizione di avanzamento passo per il microprogramma � verificata (termine 
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \retvalue S_FALSE se non � ancora verificata(conteggio in corso),
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c ****  
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \version		1.0.0
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \date 			1/2/2008
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \author			Roberto Fioravanti
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \versione 1.1.0
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \date	27/9/2010
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \author Emanuela Antognoli
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \note: cambiata la gestione dei timers per la piattaforma 2.0: se il timer � a 15 bit la gestione
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** \non serve pi� quindi il conteggio massimo � 0x3FFF secondi.
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** */
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** uint8_t MTN_uP_Maintain_Exe (uint8_t HighStatement,uint8_t LowStatement)
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** {
  10                             		.loc 1 86 0
  11                             	.LVL0:
  12 0000 6E 7A                   		pushm	r7-r10
  13                             	.LCFI0:
  14 0002 60 40                   		sub	#4, r0
  15                             	.LCFI1:
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** uint8_t res;
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** int8_t perc=0;
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** int16_t delta;
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #if (CALIBRATION_ENABLE == 1)
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /*extern struct Loader CalibrationDataPtr_ElectSupp;*/
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** struct Loader CalibrationDataPtr_Factory;	
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #endif /*(CALIBRATION_ENABLE == 1)*/
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	if (Interpreter_Data[0].stepInitialized== FALSE)
  16                             		.loc 1 95 0
  17 0004 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** int8_t perc=0;
  18                             		.loc 1 88 0
  19 000a 3C 00 00                		mov.B	#0, [r0]
  20                             	.LVL1:
  21                             		.loc 1 95 0
  22 000d CD 7E 04                		mov.B	4[r7], r14
  23 0010 FB 72 00 00 00 00       		mov.L	#_uP_Maintain_Data, r7
  24 0016 64 2E                   		and	#2, r14
  25 0018 21 04                   		bne	.L2
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	{	/*prima iterazione del passo*/
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		uP_Maintain_Data.status = MAINTAIN_INIT;
  26                             		.loc 1 98 0
  27 001a C3 7E                   		mov.B	r14, [r7]
  28                             		.balign 2,3,3
  29                             	.L2:
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	}
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c ****   
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** /*	if (CurrentFault.faultCodes.code == CODE_NO_FAULT)
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	{ non sono in fault - controllo lo stato della porta
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		In caso di Fault il uP pu� agire anche a porta aperta, non eseguo controllo
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if ( uPDoorStatus == UP_DOOR_WAIT ) 
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{  porta aperta -> il uP va sospeso
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_MAINTAIN_M_COUNTER);
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			return S_FALSE;
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	}*/ /*AE FIXME Emanuela dovrebbe lavorare a questa parte */
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	if (uP_Maintain_Data.status == MAINTAIN_INIT) 
  30                             		.loc 1 115 0
  31 001c 58 77                   		movu.B	[r7], r7
  32 001e 61 07                   		cmp	#0, r7
  33 0020 21 78                   		bne	.L3
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	{
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		/* caricamento dati dal setting */
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if ( BasicLoader ( PTR_UP_MAINTAIN, LowStatement, &uPMaintain_setting_data ) != S_OK )
  34                             		.loc 1 119 0
  35 0022 75 41 19                		mov	#25, r1
  36                             	.LVL2:
  37 0025 FB 32 00 00 00 00       		mov.L	#_uPMaintain_setting_data, r3
  38 002b 05 00 00 00             		bsr	_BasicLoader
  39                             	.LVL3:
  40 002f 5B 11                   		movu.B	r1, r1
  41 0031 61 01                   		cmp	#0, r1
  42 0033 3B A7 00                		bne	.L11
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{			
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			return S_OK;			
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #if (CALIBRATION_ENABLE == 1)		
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		uP_Maintain_Data.time_target = ( (*(uint16_t*)uPMaintain_setting_data.Data) & MTN_TIME_MASK );
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #else /*(CALIBRATION_ENABLE == 0)*/
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		uP_Maintain_Data.time_target = *(uint16_t*)uPMaintain_setting_data.Data;
  43                             		.loc 1 131 0
  44 0036 FB 72 00 00 00 00       		mov.L	#_uPMaintain_setting_data, r7
  45 003c EC 77                   		mov.L	[r7], r7
  46 003e FB E2 00 00 00 00       		mov.L	#_uP_Maintain_Data, r14
  47 0044 DC 7A                   		mov.W	[r7], r10
  48 0046 D7 EA 02                		mov.W	r10, 4[r14]
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #endif /*(CALIBRATION_ENABLE == 1)*/		
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if(MTN_MOD_TAB == 0x7F)
  49                             		.loc 1 134 0
  50 0049 88 F9                   		mov.B	3[r7], r1
  51 004b 75 21 7F                		and	#0x7f, r1
  52 004e 75 51 7F                		cmp	#0x7f, r1
  53 0051 21 08                   		bne	.L5
  54 0053 03                      		.balign 2,3,4
  55                             	.L7:
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			res=S_FALSE;
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		else
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		    /* Gestione modificatori */
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		    res=GetModifierValue(MTN_MOD_TAB, &perc);
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if( ( MOD_DONT_CARE == res ) || ( S_FALSE == res ) )
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			perc=0;
  56                             		.loc 1 145 0
  57 0054 3C 00 00                		mov.B	#0, [r0]
  58 0057 2E 13                   		bra	.L6
  59                             	.L5:
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		    res=GetModifierValue(MTN_MOD_TAB, &perc);
  60                             		.loc 1 141 0
  61 0059 EF 02                   		mov.L	r0, r2
  62 005b 05 00 00 00             		bsr	_GetModifierValue
  63                             	.LVL4:
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if( ( MOD_DONT_CARE == res ) || ( S_FALSE == res ) )
  64                             		.loc 1 143 0
  65 005f 5B 11                   		movu.B	r1, r1
  66 0061 75 51 7F                		cmp	#0x7f, r1
  67 0064 20 F0                   		beq	.L7
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if( ( MOD_DONT_CARE == res ) || ( S_FALSE == res ) )
  68                             		.loc 1 143 0 is_stmt 0 discriminator 1
  69 0066 61 11                   		cmp	#1, r1
  70 0068 20 EC                   		beq	.L7
  71                             	.LVL5:
  72                             		.balign 2,3,5
  73                             	.L6:
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		/* aggiornamento target conteggio */
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if(perc)
  74                             		.loc 1 149 0 is_stmt 1
  75 006a CC 02                   		mov.B	[r0], r2
  76 006c CF 27                   		mov.B	r2, r7
  77 006e 61 07                   		cmp	#0, r7
  78 0070 20 14                   		beq	.L8
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{		    
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			delta = GetDeltaFromVariation(uP_Maintain_Data.time_target,perc);
  79                             		.loc 1 151 0
  80 0072 FB 72 00 00 00 00       		mov.L	#_uP_Maintain_Data, r7
  81 0078 98 F1                   		mov.W	4[r7], r1
  82 007a 05 00 00 00             		bsr	_GetDeltaFromVariation
  83                             	.LVL6:
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			uP_Maintain_Data.time_target += delta;
  84                             		.loc 1 152 0
  85 007e 06 49 71 02             		add	4[r7].W, r1
  86                             	.LVL7:
  87 0082 90 F1                   		mov.W	r1, 4[r7]
  88                             		.balign 2,3,5
  89                             	.L8:
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		/* Gestione fattore correttivo */ 
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #if (CALIBRATION_ENABLE == 1)
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		CalibrationDataPtr_Factory = GetCalibrationPointers(ID_CAL_PNTR_FACTORY);
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if ( TESTBIT((*(uint16_t*)uPMaintain_setting_data.Data),MTN_CORR_FLAG_BIT) && (CalibrationDataPtr
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{	/* richiesta applicazione fattore correttivo */
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			/* aggiornamento target conteggio */
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			delta = 0;
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			if ( ( OFFS_B(uPMaintain_setting_data.Data,3) & MNT_RES_FOR_CORR_MASK ) == 0 )
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			{/* indica di quale resistenza fare applicare il fattore di correzione*/
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 				/* RESISTENZA LAVAGGIO*/
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 				if((uint8_t)CalibrationDataPtr_Factory.Data[WASH_RESISTOR_CAL_OFFSET] != 0xFF)
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 				{				
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 					delta = ((int8_t)CalibrationDataPtr_Factory.Data[WASH_RESISTOR_CAL_OFFSET]*(int32_t)uP_Maintai
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 				}
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			}
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			else
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			{	/* RESISTENZA ASCIUGATURA */
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 				if((uint8_t)CalibrationDataPtr_Factory.Data[DRY_RESISTOR_CAL_OFFSET] != 0xFF)
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 				{
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 					delta = ((int8_t)CalibrationDataPtr_Factory.Data[DRY_RESISTOR_CAL_OFFSET]*(int32_t)uP_Maintain
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 				}
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			}
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			uP_Maintain_Data.time_target += delta;
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** #endif /*(CALIBRATION_ENABLE == 1)*/
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		/**/		
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		/* Config + init downcounter */
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		/*
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		Attenzione: a differenza di DEA602 il contatore � un down counter, quindi
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		l'inizializzazione deve essere fatta dopo tutte le potenziali modifiche
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		(modificatori e/o calibrazione) a uP_Maintain_Data.time_target
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		*/
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		(void)Set_MediumCounter((SWTC_CountersType)MP_MAINTAIN_M_COUNTER, (SWTC_PrescalerType)COUNTERS2_T
  90                             		.loc 1 190 0
  91 0084 FB 72 00 00 00 00       		mov.L	#_uP_Maintain_Data, r7
  92 008a 98 F3                   		mov.W	4[r7], r3
  93 008c 66 21                   		mov	#2, r1
  94 008e 66 32                   		mov	#3, r2
  95 0090 05 00 00 00             		bsr	_Set_MediumCounter
  96                             	.LVL8:
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 						
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		uP_Maintain_Data.status = MAINTAIN_EXE;
  97                             		.loc 1 193 0
  98 0094 3C 70 01                		mov.B	#1, [r7]
  99 0097 03                      		.balign 2,3,5
 100                             	.L3:
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	} /* MAINTAIN_INIT */
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	if (uP_Maintain_Data.status == MAINTAIN_EXE) 
 101                             		.loc 1 197 0
 102 0098 FB 72 00 00 00 00       		mov.L	#_uP_Maintain_Data, r7
 103 009e 58 7E                   		movu.B	[r7], r14
 104 00a0 61 1E                   		cmp	#1, r14
 105 00a2 21 24                   		bne	.L9
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	{
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		/*CHECK COUNTER*/
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		if ( (( SWTC_IsExpired((SWTC_CountersType)MP_MAINTAIN_M_COUNTER) ) ))
 106                             		.loc 1 201 0
 107 00a4 66 21                   		mov	#2, r1
 108 00a6 05 00 00 00             		bsr	_SWTC_IsExpired
 109                             	.LVL9:
 110 00aa 61 01                   		cmp	#0, r1
 111 00ac 20 14                   		beq	.L10
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{/*End counting*/
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			uP_Maintain_Data.status = MAINTAIN_END;	
 112                             		.loc 1 204 0
 113 00ae 3C 70 02                		mov.B	#2, [r7]
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			SETBIT(Flags_1,JIF_FLAG1_MAINTAIN_TARGET_OK_POS);	
 114                             		.loc 1 206 0
 115 00b1 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 116 00b7 CC 7E                   		mov.B	[r7], r14
 117 00b9 75 3E 80                		or	#0xffffff80, r14
 118 00bc C3 7E                   		mov.B	r14, [r7]
 119 00be 2E 08                   		bra	.L9
 120                             	.L10:
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			/*
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			conteggio concluso-> flag utile per JumpIF
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			Mantieni utilizzato come Timeout per uscita
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			dal passo corrente
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			*/
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		else
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		{
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_MAINTAIN_M_COUNTER);
 121                             		.loc 1 215 0
 122 00c0 66 21                   		mov	#2, r1
 123 00c2 05 00 00 00             		bsr	_SWTC_Run
 124                             	.LVL10:
 125                             		.balign 2,3,5
 126                             	.L9:
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		}
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	}/*MAINTAIN_EXE*/
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	if (uP_Maintain_Data.status == MAINTAIN_END)
 127                             		.loc 1 220 0
 128 00c6 FB 72 00 00 00 00       		mov.L	#_uP_Maintain_Data, r7
 129 00cc 58 71                   		movu.B	[r7], r1
 130 00ce 61 21                   		cmp	#2, r1
 131 00d0 21 0E                   		bne	.L12
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	{
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		(void)SWTC_Stop((SWTC_CountersType)MP_MAINTAIN_M_COUNTER);
 132                             		.loc 1 222 0
 133 00d2 05 00 00 00             		bsr	_SWTC_Stop
 134                             	.LVL11:
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 		return S_OK;
 135                             		.loc 1 224 0
 136 00d6 66 01                   		mov	#0, r1
 137 00d8 2E 08                   		bra	.L4
 138                             	.L11:
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 			return S_OK;			
 139                             		.loc 1 121 0
 140 00da CF 71                   		mov.B	r7, r1
 141 00dc 2E 04                   		bra	.L4
 142                             	.L12:
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	}/*MAINTAIN_TRUE*/
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** 	return S_FALSE;
 143                             		.loc 1 228 0
 144 00de 66 11                   		mov	#1, r1
 145                             		.balign 2,3,1
 146                             	.L4:
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Maintain.c **** }
 147                             		.loc 1 229 0
 148 00e0 5B 11                   		movu.B	r1, r1
 149 00e2 3F 7A 05                		rtsd	#20, r7-r10
 150                             	.LFE0:
 194                             	.Letext0:
 195                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 196                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 197                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 198                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 199                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 200                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmDefines.h"
 201                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 202                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 203                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmFuncLib.h"
 204                             		.file 11 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_FuncLib.h"
 205                             		.file 12 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Modules/Maintain.h"
