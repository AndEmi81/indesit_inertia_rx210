   1                             		.file	"DW_Regulations.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.REG_getBufFunctionsIDs,"ax",@progbits
   5                             		.global	_REG_getBufFunctionsIDs
   7                             	_REG_getBufFunctionsIDs:
   8                             	.LFB0:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface/DW_Regulations.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /*
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Copyright (c) 2004-2008, Indesit Company, EDT.
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \Par	G
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \Header file.
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \file    DW_Regulations.c
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \ingroup DW_Regulations
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date    12/02/2008
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author  Valeria Catani
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version 1.0.0
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  Old Versions
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version 1.0.0
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date    24/01/2006
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author  Simone Costantini - Valeria Catani - Marco Quintini
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ******** */
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* Includes */
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ******** */
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** #include "CstmHeaders.h"
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* Defines and Macros */
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* *************************** */
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* Typedef, Structs and Unions */
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* *************************** */
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* **************************** */
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* Prototype of local functions */
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* **************************** */
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* Exported variables */
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ****************** */
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* **************** */
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* Global variables */
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* **************** */
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ***************** */
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* Exported function */
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /* ***************** */
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Inizializza il vettore BufFunctionsIDs[] con gli ID delle funzioni definite nel file di setting
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** e utilizzate dall'applicazione main.
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	none
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [out]	BufFunctionsIDs[] (global) è il vettore con gli ID delle funzioni della main
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \return 		none
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \notes:			se ci sono problemi di caricamento BufFunctionsIDs[i] viene forzato a FUNC_ID_GENERIC.
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** void REG_getBufFunctionsIDs(void)
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
  10                             		.loc 1 69 0
  11                             	.LVL0:
  12 0000 6E 7D                   		pushm	r7-r13
  13                             	.LCFI0:
  14 0002 60 80                   		sub	#8, r0
  15                             	.LCFI1:
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t i;   
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Loader_Struct funcHeader;
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  16                             		.loc 1 73 0
  17 0004 66 07                   		mov	#0, r7
  18 0006 FB C2 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r12
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{	
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		BufFunctionsIDs[i] = FUNC_ID_GENERIC; 	
  19                             		.loc 1 75 0
  20 000c FB B2 00 00 00 00       		mov.L	#_BufFunctionsIDs, r11
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  21                             		.loc 1 73 0
  22 0012 2E 24                   		bra	.L2
  23                             	.LVL1:
  24                             	.L4:
  25                             		.loc 1 75 0
  26 0014 66 0D                   		mov	#0, r13
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		if( BasicLoader((uint16_t)PTR_FUNCTION_HEADING, i, &funcHeader ) == S_OK )
  27                             		.loc 1 76 0
  28 0016 75 41 52                		mov	#0x52, r1
  29 0019 CF 72                   		mov.B	r7, r2
  30 001b EF 03                   		mov.L	r0, r3
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		BufFunctionsIDs[i] = FUNC_ID_GENERIC; 	
  31                             		.loc 1 75 0
  32 001d FE 0A BD                		mov.B	r13, [r10,r11]
  33                             		.loc 1 76 0
  34 0020 05 00 00 00             		bsr	_BasicLoader
  35                             	.LVL2:
  36 0024 5B 11                   		movu.B	r1, r1
  37 0026 61 01                   		cmp	#0, r1
  38 0028 21 0C                   		bne	.L3
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		{
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		   	BufFunctionsIDs[i] = ( OFFS_B(funcHeader.Data, FUNCTION_ID_OFFSET) & FUNCTION_ID_MASK );
  39                             		.loc 1 78 0
  40 002a EC 0E                   		mov.L	[r0], r14
  41 002c CC EE                   		mov.B	[r14], r14
  42 002e 75 2E 7F                		and	#0x7f, r14
  43 0031 FE 0A BE                		mov.B	r14, [r10,r11]
  44                             		.balign 2,3,1
  45                             	.L3:
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  46                             		.loc 1 73 0
  47 0034 62 17                   		add	#1, r7
  48                             	.LVL3:
  49                             		.balign 2,3,1
  50                             	.L2:
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
  51                             		.loc 1 73 0 is_stmt 0 discriminator 1
  52 0036 EC CE                   		mov.L	[r12], r14
  53 0038 5B 7A                   		movu.B	r7, r10
  54 003a 44 EA                   		cmp	[r14].UB, r10
  55 003c 23 D8                   		bltu	.L4
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		}
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}	    
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** }
  56                             		.loc 1 81 0 is_stmt 1
  57 003e 3F 7D 09                		rtsd	#36, r7-r13
  58                             	.LFE0:
  60 0041 03                      		.section	.text.REG_getFuncPosition,"ax",@progbits
  61                             		.global	_REG_getFuncPosition
  63                             	_REG_getFuncPosition:
  64                             	.LFB1:
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**/
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Restituisce la posizione della funzione nell'elenco delle funzioni definite nel file di setting e
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** utilizzate dall'applicazione main, effettuando la ricerca all'interno di BufFunctionsIDs[].
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in]		BufFunctionsIDs[] (global) è il vettore con gli ID delle funzioni della main
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	functionID è il codice identificativo della funzione
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [out]	*pFuncPos è la posizione della funzione nella lista e nel buffer delle regolazioni.
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				E' anche il displacement, all'interno del campo dati individuato da PTR_FUNCTION_HEADING,
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				della funzione functionID.
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	 
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \return 		S_OK se la funzione è stata eseguita correttamente, un codice d'errore altrimenti.
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \notes:			questa routine può essere utilizzata solo dopo che BufFunctionsIDs[] è stato
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				inizializzato
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFuncPosition( uint8_t functionID, uint8_t *pFuncPos )
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
  65                             		.loc 1 106 0
  66                             	.LVL4:
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t i;
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ ){
  67                             		.loc 1 109 0
  68 0000 FB E2 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r14
  69 0006 EC E4                   		mov.L	[r14], r4
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		if( BufFunctionsIDs[i] == functionID )
  70                             		.loc 1 111 0
  71 0008 5B 11                   		movu.B	r1, r1
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ ){
  72                             		.loc 1 109 0
  73 000a 66 0E                   		mov.L	#0, r14
  74 000c 58 43                   		movu.B	[r4], r3
  75 000e 2E 16                   		bra	.L7
  76                             	.LVL5:
  77                             	.L9:
  78 0010 62 1E                   		add	#1, r14
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFuncPosition( uint8_t functionID, uint8_t *pFuncPos )
  79                             		.loc 1 105 0
  80 0012 70 E5 00 00 00 00       		add	#_BufFunctionsIDs-1, r14, r5
  81                             		.loc 1 111 0
  82 0018 58 55                   		movu.B	[r5], r5
  83 001a 47 15                   		cmp	r1, r5
  84 001c 21 08                   		bne	.L7
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		{
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			*pFuncPos = i;
  85                             		.loc 1 113 0
  86 001e C3 24                   		mov.B	r4, [r2]
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			return S_OK;
  87                             		.loc 1 115 0
  88 0020 66 01                   		mov	#0, r1
  89                             	.LVL6:
  90 0022 2E 0E                   		bra	.L8
  91                             	.LVL7:
  92                             	.L7:
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ ){
  93                             		.loc 1 109 0 discriminator 1
  94 0024 5B E5                   		movu.B	r14, r5
  95 0026 47 35                   		cmp	r3, r5
  96 0028 CF E4                   		mov.B	r14, r4
  97                             	.LVL8:
  98 002a 23 E6                   		bltu	.L9
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		}			 
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	return REG_ERR_FUNC_NOT_FOUND;
  99                             		.loc 1 119 0
 100 002c FB 16 C9                		mov	#-55, r1
 101 002f 03                      		.balign 2,3,3
 102                             	.L8:
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** }
 103                             		.loc 1 120 0
 104 0030 76 21 C9 00             		and	#0xc9, r1
 105 0034 02                      		rts
 106                             	.LFE1:
 108 0035 03                      		.section	.text.REG_getFunctionValueByPos,"ax",@progbits
 109                             		.global	_REG_getFunctionValueByPos
 111                             	_REG_getFunctionValueByPos:
 112                             	.LFB2:
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**/
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Per la funzione individuata da funcPos, restituisce il valore corrispondente all'indice di 
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** regolazione contenuto in BufNewReg[], noto l'indice della tabella di regolazione.
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in]		funcPos è la posizione della funzione nell'elenco delle funzioni definite nel 
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				file di setting
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [out]	*pFunctionVal è il valore della funzione
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \					 
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	 
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \return 		S_OK se la funzione è stata eseguita correttamente, un codice d'errore altrimenti.
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \warning		REG_WRN_OUT_OF_RANGE_INDEX se l'indice di regolazione è >= del numero massimo di
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				regolazioni specificato nella tabella di regolazione
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \notes:			nel caso si voglia utilizzare la routine per ricavare il valore della funzione
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				rispetto ad un indice di regolazione che non sia quello in BufNewReg[], occorre
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				passare come parametro il buffer delle regolazioni da considerare.
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date   		05/06/2006
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFunctionValueByPos( uint8_t funcPos, uint16_t *pFunctionVal )
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
 113                             		.loc 1 146 0
 114                             	.LVL9:
 115 0000 6E 7B                   		pushm	r7-r11
 116                             	.LCFI2:
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Loader_Struct funcHeader;
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Loader_Struct mainRegTable;
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t regTableDispl; 		/* Displacement tabella regolazione rispetto PTR_UI_MAIN_REG_PARAM_TABLE *
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t dataFormat;
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t stepReg; 
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t valStep;	
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint16_t stepPerReg;
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t indexReg;
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	indexReg = (BufNewReg[funcPos] - 1);	/* L'indice di regolazione ha un offset di 1 */
 117                             		.loc 1 158 0
 118 0002 5B 1A                   		movu.B	r1, r10
 119 0004 FB B2 00 00 00 00       		mov.L	#_BufNewReg, r11
 120 000a FE 4A BB                		mov.B	[r10,r11], r11
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
 121                             		.loc 1 146 0
 122 000d 71 00 F0                		add	#-16, r0
 123                             	.LCFI3:
 124                             		.loc 1 158 0
 125 0010 60 1B                   		sub	#1, r11
 126                             	.LVL10:
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****       
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	/** Se (BufNewReg[funcPos] == 0) si è in presenza di un caso particolare in cui comunque non
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		si deve ricavare il valore della funzione dalla tabella */
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	if( indexReg == 0xFF )
 127                             		.loc 1 162 0
 128 0012 5B BA                   		movu.B	r11, r10
 129 0014 75 5A FF                		cmp	#0xff, r10
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
 130                             		.loc 1 146 0
 131 0017 CF 1E                   		mov.B	r1, r14
 132                             		.loc 1 162 0
 133 0019 3A B9 00                		beq	.L27
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		return REG_NULL_INDEX;
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  	
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  	if( BasicLoader((uint16_t)PTR_FUNCTION_HEADING, funcPos, &funcHeader) != S_OK )
 134                             		.loc 1 167 0
 135 001c 71 03 08                		add	#8, r0, r3
 136 001f EF 27                   		mov.L	r2, r7
 137 0021 75 41 52                		mov	#0x52, r1
 138                             	.LVL11:
 139 0024 CF E2                   		mov.B	r14, r2
 140                             	.LVL12:
 141 0026 05 00 00 00             		bsr	_BasicLoader
 142                             	.LVL13:
 143 002a 5B 11                   		movu.B	r1, r1
 144 002c 61 01                   		cmp	#0, r1
 145 002e 20 08                   		beq	.L13
 146                             		.balign 2,3,2
 147                             	.L14:
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		return REG_ERR_BASIC_LOADER;
 148                             		.loc 1 169 0
 149 0030 FB 16 C8                		mov	#-56, r1
 150 0033 38 AB 00                		bra	.L12
 151                             	.L13:
 152                             	.LVL14:
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	regTableDispl = OFFS_B(funcHeader.Data, (uint8_t)((NUM_WORDS_FUNC_DESCR*2) + MAIN_REG_TAB_OFFSET))
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	if( BasicLoader((uint16_t)PTR_UI_MAIN_REG_PARAM_TABLE, regTableDispl, &mainRegTable) != S_OK )
 153                             		.loc 1 174 0
 154 0036 ED 0E 02                		mov.L	8[r0], r14
 155 0039 75 41 23                		mov	#35, r1
 156 003c CD E2 0A                		mov.B	10[r14], r2
 157 003f EF 03                   		mov.L	r0, r3
 158 0041 05 00 00 00             		bsr	_BasicLoader
 159                             	.LVL15:
 160 0045 5B 11                   		movu.B	r1, r1
 161 0047 61 01                   		cmp	#0, r1
 162 0049 21 E7                   		bne	.L14
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		return REG_ERR_BASIC_LOADER;	
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****     
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	dataFormat = (OFFS_B(mainRegTable.Data, DATA_FORMAT_OFFSET) & DATA_FORMAT_MASK);
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	stepReg = (OFFS_B(funcHeader.Data, (uint8_t)(NUM_WORDS_FUNC_DESCR*2)) & STEP_REG_MASK);
 163                             		.loc 1 181 0
 164 004b A8 82                   		mov.L	8[r0], r2
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	dataFormat = (OFFS_B(mainRegTable.Data, DATA_FORMAT_OFFSET) & DATA_FORMAT_MASK);
 165                             		.loc 1 179 0
 166 004d EC 0E                   		mov.L	[r0], r14
 167                             		.loc 1 181 0
 168 004f 89 A3                   		mov.B	6[r2], r3
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	dataFormat = (OFFS_B(mainRegTable.Data, DATA_FORMAT_OFFSET) & DATA_FORMAT_MASK);
 169                             		.loc 1 179 0
 170 0051 CC E4                   		mov.B	[r14], r4
 171                             	.LVL16:
 172                             		.loc 1 181 0
 173 0053 75 23 20                		and	#32, r3
 174                             	.LVL17:
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	if( stepReg )
 175                             		.loc 1 183 0
 176 0056 5B 31                   		movu.B	r3, r1
 177 0058 76 24 C0 00             		and	#0xc0, r4
 178                             	.LVL18:
 179 005c 61 01                   		cmp	#0, r1
 180 005e 20 30                   		beq	.L15
 181                             	.LVL19:
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		valStep = OFFS_B(mainRegTable.Data, STEP_OFFSET);
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		stepPerReg = (valStep * (uint16_t)(indexReg));	/*	Attenzione: se l'ozione -Cni è
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 															settata è necessario castare uno dei
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 															due operandia uint16_t,	altrimenti il
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 															compilatore tronca il prodotto a uint8_t */
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		switch( dataFormat )
 182                             		.loc 1 190 0
 183 0060 75 54 40                		cmp	#64, r4
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		stepPerReg = (valStep * (uint16_t)(indexReg));	/*	Attenzione: se l'ozione -Cni è
 184                             		.loc 1 186 0
 185 0063 4D EA 01                		mul	1[r14].UB, r10
 186                             	.LVL20:
 187                             		.loc 1 190 0
 188 0066 20 1B                   		beq	.L18
 189 0068 24 08                   		bgtu	.L21
 190 006a 61 04                   		cmp	#0, r4
 191 006c 20 10                   		beq	.L17
 192 006e 2E 52                   		bra	.L16
 193                             	.L21:
 194 0070 75 54 80                		cmp	#0x80, r4
 195 0073 20 13                   		beq	.L20
 196 0075 75 54 C0                		cmp	#0xc0, r4
 197 0078 21 48                   		bne	.L16
 198 007a 2E 0C                   		bra	.L20
 199                             	.L17:
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		{
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_UCHAR:
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(uint8_t*)(mainRegTable.Data + CHAR_INIT_VAL_OFFSET)) + stepPerReg);
 200                             		.loc 1 193 0
 201 007c 59 EE 03                		movu.B	3[r14], r14
 202                             	.LVL21:
 203 007f 2E 0B                   		bra	.L32
 204                             	.LVL22:
 205                             	.L18:
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SCHAR:	
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(int8_t*)(mainRegTable.Data + CHAR_INIT_VAL_OFFSET)) + stepPerReg);
 206                             		.loc 1 197 0
 207 0081 CD EE 03                		mov.B	3[r14], r14
 208                             	.LVL23:
 209 0084 2E 06                   		bra	.L32
 210                             	.LVL24:
 211                             	.L20:
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_USHORT:
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(uint16_t*)(mainRegTable.Data + WORD_INIT_VAL_OFFSET)) + stepPerReg );
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SSHORT:
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				*pFunctionVal = ((*(int16_t*)(mainRegTable.Data + WORD_INIT_VAL_OFFSET)) + stepPerReg );
 212                             		.loc 1 205 0
 213 0086 DD EE 01                		mov.W	2[r14], r14
 214                             	.LVL25:
 215 0089 03                      		.balign 2,3,1
 216                             	.L32:
 217 008a 4B EA                   		add	r14, r10
 218                             	.LVL26:
 219 008c 2E 20                   		bra	.L31
 220                             	.LVL27:
 221                             	.L15:
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			default:
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		}
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	else
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		switch( dataFormat )
 222                             		.loc 1 214 0
 223 008e 75 54 40                		cmp	#64, r4
 224 0091 20 1F                   		beq	.L23
 225 0093 24 08                   		bgtu	.L26
 226 0095 61 04                   		cmp	#0, r4
 227 0097 20 10                   		beq	.L22
 228 0099 2E 27                   		bra	.L16
 229                             	.L26:
 230 009b 75 54 80                		cmp	#0x80, r4
 231 009e 20 19                   		beq	.L25
 232 00a0 75 54 C0                		cmp	#0xc0, r4
 233 00a3 21 1D                   		bne	.L16
 234 00a5 2E 12                   		bra	.L25
 235                             	.L22:
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		{
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_UCHAR:
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(uint8_t*)(mainRegTable.Data + INIT_VAL_OFFSET + indexReg);
 236                             		.loc 1 217 0
 237 00a7 4B AE                   		add	r10, r14
 238                             	.LVL28:
 239 00a9 59 EA 02                		movu.B	2[r14], r10
 240                             		.balign 2,3,1
 241                             	.L31:
 242 00ac D3 7A                   		mov.W	r10, [r7]
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 243                             		.loc 1 218 0
 244 00ae 2E 12                   		bra	.L16
 245                             	.LVL29:
 246                             	.L23:
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SCHAR:
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(int8_t*)(mainRegTable.Data + INIT_VAL_OFFSET + indexReg);
 247                             		.loc 1 220 0
 248 00b0 4B AE                   		add	r10, r14
 249                             	.LVL30:
 250 00b2 CD EA 02                		mov.B	2[r14], r10
 251 00b5 2E F7                   		bra	.L31
 252                             	.LVL31:
 253                             	.L25:
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_USHORT:
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(uint16_t*)(mainRegTable.Data + INIT_VAL_OFFSET + (2*indexReg));	 
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case DATA_FORMAT_SSHORT:			
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				 *pFunctionVal = *(int16_t*)(mainRegTable.Data + INIT_VAL_OFFSET + (2*indexReg));	 
 254                             		.loc 1 226 0
 255 00b7 4B AA                   		add	r10, r10
 256 00b9 4B AE                   		add	r10, r14
 257                             	.LVL32:
 258 00bb DD EE 01                		mov.W	2[r14], r14
 259 00be D3 7E                   		mov.W	r14, [r7]
 260                             		.balign 2,3,1
 261                             	.L16:
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			default:
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		} 
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	/* Controllo se l'indice di regolazione è >= numero massimo di regolazioni */
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	if (indexReg >= OFFS_B(funcHeader.Data, (uint8_t)((NUM_WORDS_FUNC_DESCR*2) + NUM_REG_OFFSET)))
 262                             		.loc 1 237 0
 263 00c0 5B BB                   		movu.B	r11, r11
 264 00c2 45 2B 08                		cmp	8[r2].UB, r11
 265 00c5 23 12                   		bltu	.L28
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		if(stepReg)
 266                             		.loc 1 239 0
 267 00c7 5B 33                   		movu.B	r3, r3
 268 00c9 61 03                   		cmp	#0, r3
 269 00cb 20 10                   		beq	.L29
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		{
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			/* Per regolazioni a step il warning potrebbe anche essere ignorato per alcune funzioni */
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			return REG_WRN_OUT_OF_RANGE_INDEX;
 270                             		.loc 1 242 0
 271 00cd 75 41 48                		mov	#0x48, r1
 272 00d0 2E 0E                   		bra	.L12
 273                             	.LVL33:
 274                             	.L27:
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		return REG_NULL_INDEX;
 275                             		.loc 1 164 0
 276 00d2 FB 16 CB                		mov	#-53, r1
 277                             	.LVL34:
 278 00d5 2E 09                   		bra	.L12
 279                             	.LVL35:
 280                             	.L28:
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		}
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		else
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		{
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			return REG_ERR_OUT_OF_RANGE_INDEX;
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		}
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	return S_OK; 	
 281                             		.loc 1 250 0
 282 00d7 66 01                   		mov	#0, r1
 283 00d9 2E 05                   		bra	.L12
 284                             	.L29:
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			return REG_ERR_OUT_OF_RANGE_INDEX;
 285                             		.loc 1 246 0
 286 00db FB 16 CC                		mov	#-52, r1
 287                             	.LVL36:
 288                             		.balign 2,3,3
 289                             	.L12:
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** }
 290                             		.loc 1 251 0
 291 00de 76 21 CF 00             		and	#0xcf, r1
 292 00e2 3F 7B 09                		rtsd	#36, r7-r11
 293                             	.LFE2:
 295 00e5 03                      		.section	.text.REG_getFunctionValueByID,"ax",@progbits
 296                             		.global	_REG_getFunctionValueByID
 298                             	_REG_getFunctionValueByID:
 299                             	.LFB3:
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Per la funzione individuata da functionID, restituisce il valore corrispondente all'indice di 
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** regolazione contenuto in BufNewReg[].
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in]		functionID è il codice identificativo della funzione
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [out]	*pFunctionVal è il valore della funzione
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \					 
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	 
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \return 		S_OK se la funzione è stata eseguita correttamente, un codice d'errore altrimenti.
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date   		05/06/2006
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
 268:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_getFunctionValueByID( uint8_t functionID, uint16_t *pFunctionVal )
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
 300                             		.loc 1 269 0
 301                             	.LVL37:
 302 0000 7E A7                   		push.l	r7
 303                             	.LCFI4:
 304 0002 60 40                   		sub	#4, r0
 305                             	.LCFI5:
 306                             		.loc 1 269 0
 307 0004 EF 27                   		mov.L	r2, r7
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t funcPos;
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 272:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	if(REG_getFuncPosition(functionID, &funcPos) != S_OK)
 308                             		.loc 1 273 0
 309 0006 EF 02                   		mov.L	r0, r2
 310                             	.LVL38:
 311 0008 05 00 00 00             		bsr	_REG_getFuncPosition
 312                             	.LVL39:
 313 000c 5B 11                   		movu.B	r1, r1
 314 000e 61 01                   		cmp	#0, r1
 315 0010 21 0C                   		bne	.L35
 316                             	.LVL40:
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****     	return REG_ERR_FUNC_NOT_FOUND;
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****     
 278:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	return ( REG_getFunctionValueByPos(funcPos, pFunctionVal) );
 317                             		.loc 1 278 0
 318 0012 CC 01                   		mov.B	[r0], r1
 319 0014 EF 72                   		mov.L	r7, r2
 320 0016 05 00 00 00             		bsr	_REG_getFunctionValueByPos
 321                             	.LVL41:
 322 001a 2E 06                   		bra	.L34
 323                             	.LVL42:
 324                             	.L35:
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****     	return REG_ERR_FUNC_NOT_FOUND;
 325                             		.loc 1 275 0
 326 001c FB 16 C9                		mov	#-55, r1
 327                             	.LVL43:
 328 001f 03                      		.balign 2,3,1
 329                             	.L34:
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** }
 330                             		.loc 1 279 0
 331 0020 5B 11                   		movu.B	r1, r1
 332 0022 3F 77 02                		rtsd	#8, r7-r7
 333                             	.LFE3:
 335 0025 03                      		.section	.text.REG_checkIfChanged,"ax",@progbits
 336                             		.global	_REG_checkIfChanged
 338                             	_REG_checkIfChanged:
 339                             	.LFB4:
 280:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**/
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Controlla se l'indice di regolazione della funzione (avente per ID functionID) è diverso in 
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** BufNewReg[] e BufOldReg[].
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****  
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	functionID è il codice identificativo della funzione
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufNewReg[] (global) è il buffer delle nuove regolazioni dalla scheda Visual 
 288:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufOldReg[] (global) è il buffer delle vecchie regolazioni Main
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [out]	none
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \return 		TRUE se l'indice è diverso
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				FALSE se l'indice è uguale o se non è stato possibile determinare la posizione
 292:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				della funzione nell'elenco delle funzioni.
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \notes:
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 297:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 300:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
 301:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t REG_checkIfChanged(uint8_t functionID)
 302:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
 340                             		.loc 1 302 0
 341                             	.LVL44:
 342 0000 60 40                   		sub	#4, r0
 343                             	.LCFI6:
 303:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t regPosition;
 304:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 305:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	if( REG_getFuncPosition(functionID, &regPosition) == S_OK )
 344                             		.loc 1 305 0
 345 0002 EF 02                   		mov.L	r0, r2
 346 0004 05 00 00 00             		bsr	_REG_getFuncPosition
 347                             	.LVL45:
 348 0008 5B 11                   		movu.B	r1, r1
 349 000a 61 01                   		cmp	#0, r1
 350 000c 21 1F                   		bne	.L39
 351                             	.LVL46:
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 307:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    if( BufNewReg[regPosition] != BufOldReg[regPosition] )
 352                             		.loc 1 307 0
 353 000e 58 0E                   		movu.B	[r0], r14
 354 0010 FB 42 00 00 00 00       		mov.L	#_BufNewReg, r4
 355 0016 FE CE 41                		movu.B	[r14,r4], r1
 356 0019 FB 42 00 00 00 00       		mov.L	#_BufOldReg, r4
 357 001f FE CE 4E                		movu.B	[r14,r4], r14
 308:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    {
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    	return REG_CHANGED;
 358                             		.loc 1 309 0
 359 0022 47 E1                   		cmp	r14, r1
 360 0024 FC DB 10                		sceq.L	r1
 361 0027 62 11                   		add	#1, r1
 362 0029 2E 05                   		bra	.L38
 363                             	.LVL47:
 364                             	.L39:
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    }
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    else
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    {
 313:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    	return REG_UNCHANGED;
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    }
 315:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	else
 317:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****     	return REG_NOT_EXIST;
 365                             		.loc 1 318 0
 366 002b 66 01                   		mov	#0, r1
 367                             	.LVL48:
 368 002d 03                      		.balign 2,3,1
 369                             	.L38:
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c ****     }
 320:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** }
 370                             		.loc 1 320 0
 371 002e 5B 11                   		movu.B	r1, r1
 372 0030 67 01                   		rtsd	#4
 373                             	.LFE4:
 375                             		.section	.text.REG_updateOldReg,"ax",@progbits
 376                             		.global	_REG_updateOldReg
 378                             	_REG_updateOldReg:
 379                             	.LFB5:
 321:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**/
 322:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 323:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Pone BufOldReg[] della funzione avente per ID functionID uguale a BufNewReg[].
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 326:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	functionID è il codice identificativo della funzione
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufNewReg[] (global) è il buffer delle nuove regolazioni (dalla scheda Visual)
 328:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [out] 	BufOldReg[] (global) è il buffer delle vecchie regolazioni Main
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 330:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \return 		none
 331:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \notes:
 333:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date   		01/06/2006
 336:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version    	0.0.1
 337:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 338:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** void REG_updateOldReg(uint8_t functionID)
 340:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
 380                             		.loc 1 340 0
 381                             	.LVL49:
 382 0000 60 40                   		sub	#4, r0
 383                             	.LCFI7:
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t regPosition;
 342:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 343:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	if( REG_getFuncPosition(functionID, &regPosition) == S_OK )
 384                             		.loc 1 343 0
 385 0002 EF 02                   		mov.L	r0, r2
 386 0004 05 00 00 00             		bsr	_REG_getFuncPosition
 387                             	.LVL50:
 388 0008 5B 11                   		movu.B	r1, r1
 389 000a 61 01                   		cmp	#0, r1
 390 000c 21 16                   		bne	.L42
 391                             	.LVL51:
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{
 345:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	    BufOldReg[regPosition] = BufNewReg[regPosition];
 392                             		.loc 1 345 0
 393 000e 58 0E                   		movu.B	[r0], r14
 394 0010 FB 32 00 00 00 00       		mov.L	#_BufNewReg, r3
 395 0016 FE 4E 33                		mov.B	[r14,r3], r3
 396 0019 FB 42 00 00 00 00       		mov.L	#_BufOldReg, r4
 397 001f FE 0E 43                		mov.B	r3, [r14,r4]
 398                             		.balign 2,3,1
 399                             	.L42:
 346:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}
 347:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** }
 400                             		.loc 1 347 0
 401 0022 67 01                   		rtsd	#4
 402                             	.LFE5:
 404                             		.section	.text.REG_updateFuncToMainOldReg,"ax",@progbits
 405                             		.global	_REG_updateFuncToMainOldReg
 407                             	_REG_updateFuncToMainOldReg:
 408                             	.LFB6:
 348:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**/
 349:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 350:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** /**
 351:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** Pone BufOldReg[] delle funzioni 'To Main' non esplicitamente processate in SPV_superVisor()
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uguale a BufNewReg[].
 353:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 354:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [in] 	BufNewReg[] (global) è il buffer delle nuove regolazioni (dalla scheda Visual)
 355:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \param [out] 	BufOldReg[] (global) è il buffer delle vecchie regolazioni Main
 356:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \return 		none
 358:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 359:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \notes:
 360:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 361:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \author			Marco Quintini
 362:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \date   		25/07/2006
 363:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** \version    	1.0.0
 364:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** */
 366:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** void REG_updateFuncToMainOldReg(void)
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** {
 409                             		.loc 1 367 0
 410                             	.LVL52:
 411 0000 7E A7                   		push.l	r7
 412                             	.LCFI8:
 368:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** uint8_t i;   
 369:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 413                             		.loc 1 370 0
 414 0002 FB E2 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r14
 415 0008 EC E2                   		mov.L	[r14], r2
 416 000a 66 04                   		mov	#0, r4
 371:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	{	
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		switch(BufFunctionsIDs[i])
 417                             		.loc 1 372 0
 418 000c FB 12 00 00 00 00       		mov.L	#_BufFunctionsIDs, r1
 373:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		{
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_SELECTOR:
 375:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_START:
 376:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			/*			 //Arkadia
 377:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			case FUNC_ID_DELAY_MM:
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			*/
 379:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 380:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			/* Aggiungere le altre funzioni processate esplicitamente in SPV_superVisor §_§ */
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 382:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			/* Do nothing, processed separately */ 
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			
 386:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			default:
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			
 388:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 				BufOldReg[i] = BufNewReg[i];
 419                             		.loc 1 388 0
 420 0012 FB 52 00 00 00 00       		mov.L	#_BufOldReg, r5
 421 0018 FB F2 00 00 00 00       		mov.L	#_BufNewReg, r15
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 422                             		.loc 1 370 0
 423 001e 2E 14                   		bra	.L46
 424                             	.LVL53:
 425                             	.L49:
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		switch(BufFunctionsIDs[i])
 426                             		.loc 1 372 0
 427 0020 FE CE 13                		movu.B	[r14,r1], r3
 428 0023 60 13                   		sub	#1, r3
 429 0025 61 13                   		cmp	#1, r3
 430 0027 25 09                   		bleu	.L48
 431                             		.loc 1 388 0
 432 0029 FE 4E F7                		mov.B	[r14,r15], r7
 433 002c FE 0E 57                		mov.B	r7, [r14,r5]
 434 002f 03                      		.balign 2,3,1
 435                             	.L48:
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 436                             		.loc 1 370 0
 437 0030 62 14                   		add	#1, r4
 438                             	.LVL54:
 439                             		.balign 2,3,1
 440                             	.L46:
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	for( i = 0; i < FUNC_NUM_TO_MAIN; i++ )	
 441                             		.loc 1 370 0 is_stmt 0 discriminator 1
 442 0032 5B 4E                   		movu.B	r4, r14
 443 0034 44 2E                   		cmp	[r2].UB, r14
 444 0036 23 EA                   		bltu	.L49
 389:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 			break;
 391:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 		}
 392:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 	}	    
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 394:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** 
 395:C:/Workspace/FW_Platform2_5/trunk/Inertia/UserInterface\DW_Regulations.c **** }
 445                             		.loc 1 395 0 is_stmt 1
 446 0038 3F 77 01                		rtsd	#4, r7-r7
 447                             	.LFE6:
 587                             	.Letext0:
 588                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 589                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 590                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 591                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 592                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 593                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
