   1                             		.file	"SetProfile.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.SPF_InitSeg,"ax",@progbits
   5                             		.global	_SPF_InitSeg
   7                             	_SPF_InitSeg:
   8                             	.LFB1:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules/SetProfile.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /*
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** ** **************************************************************************
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** ** **************************************************************************
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** */ 
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /** 
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Gestisce il microprogramma Set profile , consentendo l'esecuzione di un profilo di carichi.
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Source File
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \file    	SetProfile.c
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c ****  
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \version 	1.0.0
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \date    	21/10/2009
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \authors	Lorenzo Morbidelli
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \note : 
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** uP ripreso da Hottima e riadattato per Dea700. il 29/07/10 
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Alcuni parametri presenti in Hottima qui non servono.
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \authors 	Emanuela Antognoli
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** */ 
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /*
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** ** **************************************************************************
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** ** **************************************************************************
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** */
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /*
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Copyright (c) 2004-2007, Indesit Company, IDD.
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Tutti i diritti sono riservati. All rights reserved.
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Old Versions
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \version
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \date
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \author
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** */
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ******** */
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Includes */
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ******** */
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #include "CstmHeaders.h"
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /*#include "TrashExp.h"*/
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ****************** */
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Defines and Macros */
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ****************** */
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* *************************** */
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Typedef, Structs and Unions */
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* *************************** */
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* **************************** */
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Prototype of local functions */
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* **************************** */
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ****************** */
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Exported variables */
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ****************** */
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* **************** */
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Global variables */
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* **************** */
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ******************* */
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* External variables  */
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ******************* */
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ***************** */
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* Exported function */
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /* ***************** */
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /**
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Gestisce l'esecuzione del microprogramma Set PRofile.
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c ****  
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \param [in] compartment specifica la cavit� per il controllo della temperatura.
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c ****  
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \return S_OK se la condizione di avanzamento passo per il microprogramma � verificata (raggiungim
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \return S_FALSE se non � ancora verificata(conteggio in corso),
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \return codice di errore in altri casi
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \note \version		1.0.0
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \date 			20/10/2009
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \author			L. Morbidelli
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \note \version		1.2.0
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \date 			23/08/2010
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \author			Emanuela Antognoli
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \note   tolte parti di codice non necessarie in dea 700 rispetto a Hottima.
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** - aggiunta calibrazione.
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** */
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** uint8_t	SPF_SetProfile_Exe(uint8_t highStatement, uint8_t LowStatement)
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** {
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Interpreter_Struct *pItpData = Interpreter_Data;
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Loader_Struct uPSetProfile_setting_data_tmp;
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** uP_SetProfile_Struct *uP_CmpSetProfile_Data = &uP_SetProfile_Data;
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** uint16_t mask_load_sel;
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** uint8_t nr_load_profile,nr_profiles;
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** uint8_t activation_value;
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** uint16_t mask_seg_sel=0x0001;
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** int8_t delta;
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #if (CALIBRATION_ENABLE == 1)
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /*extern struct Loader CalibrationDataPtr_ElectSupp;*/
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** struct Loader CalibrationDataPtr_Factory;	
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /*(CALIBRATION_ENABLE == 1)*/
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** int16_t tempMulResult;
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (pItpData->stepInitialized == FALSE)
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		/* Prima iterazione del passo */
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->status = SETPROFILE_INIT;
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->end_profile=FALSE;
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if ( uPDoorStatus == UP_DOOR_WAIT ) 
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{ /* porta aperta -> il uP va sospeso */
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		(void)SWTC_Stop((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER);
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		return S_FALSE;
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		/* Caricamento dati dalla flash */	
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (BasicLoader( PTR_UP_SET_PROFILE, LowStatement, &uPSetProfile_setting_data_tmp ) != S_OK)
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _SETPROFILE_CHECKERRORS_
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		/*
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			DBG_CheckErr(UP_SETPROFILE_ERR_BASIC_LOADER);
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		*/ /*AE FIXME Chiedere in merito*/
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif				 
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		return S_OK;
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}	
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (uP_CmpSetProfile_Data->status == SETPROFILE_INIT) 
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{	
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->loadMap_profile = OFFS_W(uPSetProfile_setting_data_tmp.Data,0);		
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		/*!Init timer per durata segmento*/	
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->nSeg_counter = 0;
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #if (CALIBRATION_ENABLE == 1)
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->corr_factor = ( ( OFFS_B(uPSetProfile_setting_data_tmp.Data,4) & PROFILE_C
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #else
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->corr_factor= OFFS_B(uPSetProfile_setting_data_tmp.Data,4) & PROFILE_CF_MAS
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* (CALIBRATION_ENABLE == 1) */
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		SPF_InitSeg(uP_CmpSetProfile_Data);
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		/* di default il profilo � on per consentire l'uso del SPF anche senza cooking control o prehea
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		Su dea non viene modificato da nessuno ma lo lasciamo per uguaglianza*/		
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->cntrl_profile=PROFILE_ON;
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->status = SETPROFILE_EXE;
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}/*PREHEAT_INIT*/
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (uP_CmpSetProfile_Data->status == SETPROFILE_EXE) 
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		if (uP_CmpSetProfile_Data->cntrl_profile==PROFILE_OFF)
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		{	/* profilo off */
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER);
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			/* per dea 700*/			
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b = ((OFFS_B(uPSetProfile_setting_data_tmp.Data,2))&VEL_FA
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		}
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		else
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		{	
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			/* management carichi */
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			mask_load_sel=0x0001;
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			mask_seg_sel=0x0001;
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			nr_load_profile=0;
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			nr_profiles=0;
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			while (mask_load_sel)
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			{
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				if ((uP_CmpSetProfile_Data->loadMap_profile) & (mask_load_sel))
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				{
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					if ((OFFS_W(uPSetProfile_setting_data_tmp.Data,(3+(nr_profiles))))&(mask_seg_sel<<(((uint8_t)(
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					{				
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 						activation_value = TRUE;
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					}
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					else
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					{
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 						activation_value = FALSE;
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					}
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					SPF_SetProfileLoadMng (nr_load_profile,activation_value,uPSetProfile_setting_data_tmp);	
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					nr_profiles++;
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				}
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				mask_load_sel<<=1;
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				nr_load_profile++;
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			}
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			/* scorrimento profilo e set contatori segmenti */
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			delta = 0;
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #if (CALIBRATION_ENABLE == 1)
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			CalibrationDataPtr_Factory = GetCalibrationPointers(ID_CAL_PNTR_FACTORY);
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			if ( ( uP_CmpSetProfile_Data->corr_factor != 0 ) &&
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				 ( CalibrationDataPtr_Factory.Data != NULL ) && 
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				 ( LoadsReq_New[Res_Pos[LD_DRY_RES_IND]].b ==LOAD_ON )
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				)		
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			{/* richiesta applicazione fattore correttivo RESISTENZA ASCIUGATURA*/
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				if((uint8_t)CalibrationDataPtr_Factory.Data[DRY_RESISTOR_CAL_OFFSET] != 0xFF)
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				{				
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					/* Formula:  aggiornamento target periodo */
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					tempMulResult = (int8_t)CalibrationDataPtr_Factory.Data[DRY_RESISTOR_CAL_OFFSET] * SEG_TIME_BA
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /*lint -e734 (-32640 <= tempMulResult <= 32385) => (-25 <= delta <= 23) */
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					delta = tempMulResult / MNT_CALIBRATION_UP_MANTAIN_CST;
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /*lint +e734 */
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #else
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					delta = ((int8_t)CalibrationDataPtr_Factory.Data[DRY_RESISTOR_CAL_OFFSET]*(int32_t)SEG_TIME_BA
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				}
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			}
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /*(CALIBRATION_ENABLE == 1)*/
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			if( SWTC_GetElapsedTime((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER) >= (SWTC_TimeType)(SEG_TI
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #else
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			if (SWTC_IsExpired((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER) )
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			{
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				if (uP_CmpSetProfile_Data->c_counter == (OFFS_B(uPSetProfile_setting_data_tmp.Data,3)&PROFILE_C
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				{
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					if (uP_CmpSetProfile_Data->nSeg_counter < ((OFFS_B(uPSetProfile_setting_data_tmp.Data,3)&PROFI
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					{	
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 						uP_CmpSetProfile_Data->nSeg_counter++;		
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					}
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					else
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					{							
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 						uP_CmpSetProfile_Data->nSeg_counter = 0;
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 						uP_CmpSetProfile_Data->end_profile= TRUE;
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					}		
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					uP_CmpSetProfile_Data->c_counter = 0;				
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				}	
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				else
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				{				
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					uP_CmpSetProfile_Data->c_counter++;			
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				}
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				(void)Set_MediumCounter((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER, (SWTC_PrescalerType)COUN
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #else
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				(void)Set_SmallCounter((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER, (SWTC_PrescalerType)COUNT
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			}	
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		 	(void)SWTC_Run((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER);
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		}
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}/*SETPROFILE_EXE*/
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	
 268:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (uP_CmpSetProfile_Data->end_profile==TRUE)
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		return S_OK;
 272:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	else
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		return S_FALSE;
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** }
 278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** void SPF_InitSeg(uP_SetProfile_Struct *uP_CmpSetProfile_Data_struct)
 280:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** {
  10                             		.loc 1 280 0
  11                             	.LVL0:
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data_struct->c_counter = 0;
  12                             		.loc 1 281 0
  13 0000 DC 1E                   		mov.W	[r1], r14
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		(void)Set_MediumCounter((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER, (SWTC_PrescalerType)COUNTE
  14                             		.loc 1 284 0
  15 0002 66 12                   		mov	#1, r2
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data_struct->c_counter = 0;
  16                             		.loc 1 281 0
  17 0004 75 2E F0                		and	#-16, r14
  18 0007 D3 1E                   		mov.W	r14, [r1]
  19                             		.loc 1 284 0
  20 0009 FB 3A FF 7F             		mov	#0x7fff, r3
  21 000d 66 91                   		mov	#9, r1
  22                             	.LVL1:
  23 000f 05 00 00 00             		bsr	_Set_MediumCounter
  24                             	.LVL2:
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #else
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		(void)Set_SmallCounter((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER, (SWTC_PrescalerType)COUNTER
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		(void)SWTC_Run((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER);
  25                             		.loc 1 288 0
  26 0013 66 91                   		mov	#9, r1
  27 0015 04 00 00 00             		bra	_SWTC_Run
  28                             	.LVL3:
  29                             	.LFE1:
  31                             		.section	.text.SPF_SetProfileLoadMng,"ax",@progbits
  32                             		.global	_SPF_SetProfileLoadMng
  34                             	_SPF_SetProfileLoadMng:
  35                             	.LFB2:
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** }
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** /**
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** Gestisce  attivazione carichi per Dea 700: resistenza asciugatura e ventola asciugatura
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \param [in]		
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \return 		
 297:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c ****  
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \version		1.1.0
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \date 			23/08/2010
 300:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \author			Emanuela Antognoli
 301:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 302:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** \note			
 303:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				  
 304:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** */
 305:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #ifdef _CORRECT_SETPROFILE_BUGS_
 307:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** void SPF_SetProfileLoadMng (uint8_t nr_load_profile_temp,uint8_t activation_value_temp, Loader_Stru
 308:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #else
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** void SPF_SetProfileLoadMng (uint8_t nr_load_profile_temp,uint16_t activation_value_temp, Loader_Str
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** #endif /* _CORRECT_SETPROFILE_BUGS_ */
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** {
  36                             		.loc 1 311 0
  37                             	.LVL4:
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if ( nr_load_profile_temp == Fan_Pos[LD_DRY_FAN_IND])
  38                             		.loc 1 312 0
  39 0000 FB E2 00 00 00 00       		mov.L	#_Fan_Pos, r14
  40 0006 58 E4                   		movu.B	[r14], r4
  41 0008 5B 11                   		movu.B	r1, r1
  42 000a 47 41                   		cmp	r4, r1
  43 000c FB E2 00 00 00 00       		mov.L	#_LoadsReq_New, r14
  44 0012 21 16                   		bne	.L3
 313:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	/*stato motoventilatore asciugatura */
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{	
 315:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		if (activation_value_temp)
  45                             		.loc 1 315 0
  46 0014 5B 22                   		movu.B	r2, r2
  47 0016 61 02                   		cmp	#0, r2
  48 0018 88 B4                   		mov.B	2[r3], r4
  49 001a 20 08                   		beq	.L4
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		{
 317:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b =((OFFS_B(uPSetProfile_setting_data_tmp_loc.Data,2)&VEL_
  50                             		.loc 1 317 0
  51 001c 64 C4                   		and	#12, r4
  52 001e 6A 24                   		shar	#2, r4
  53 0020 2E 04                   		bra	.L6
  54                             	.L4:
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		}
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		else
 320:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		{
 321:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b =((OFFS_B(uPSetProfile_setting_data_tmp_loc.Data,2)&VEL_
  55                             		.loc 1 321 0
  56 0022 64 34                   		and	#3, r4
  57                             		.balign 2,3,5
  58                             	.L6:
  59 0024 FE 01 E4                		mov.B	r4, [r1,r14]
  60 0027 02                      		rts
  61                             	.L3:
 322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		}
 323:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	}
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	else 
 326:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	{ /* se � la resistenza gli associo semplicemente il valore di attivazione ( ON-OFF)*/
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		LoadsReq_New[nr_load_profile_temp].b = activation_value_temp;
  62                             		.loc 1 327 0
  63 0028 FE 01 E2                		mov.B	r2, [r1,r14]
  64 002b 02                      		rts
  65                             	.LFE2:
  67                             		.section	.text.SPF_SetProfile_Exe,"ax",@progbits
  68                             		.global	_SPF_SetProfile_Exe
  70                             	_SPF_SetProfile_Exe:
  71                             	.LFB0:
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** {
  72                             		.loc 1 99 0
  73                             	.LVL5:
  74 0000 6E 7D                   		pushm	r7-r13
  75                             	.LCFI0:
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (pItpData->stepInitialized == FALSE)
  76                             		.loc 1 116 0
  77 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
  78 0008 89 77                   		mov.B	4[r7], r7
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** {
  79                             		.loc 1 99 0
  80 000a 60 80                   		sub	#8, r0
  81                             	.LCFI1:
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (pItpData->stepInitialized == FALSE)
  82                             		.loc 1 116 0
  83 000c 64 27                   		and	#2, r7
  84 000e 5B 77                   		movu.B	r7, r7
  85 0010 61 07                   		cmp	#0, r7
  86 0012 21 14                   		bne	.L8
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->status = SETPROFILE_INIT;
  87                             		.loc 1 119 0
  88 0014 FB 72 00 00 00 00       		mov.L	#_uP_SetProfile_Data, r7
  89 001a DC 7A                   		mov.W	[r7], r10
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->end_profile=FALSE;
  90                             		.loc 1 120 0
  91 001c 77 2A FF E0 00          		and	#0xe0ff, r10
  92 0021 7A FA                   		bclr	#15, r10
  93 0023 D3 7A                   		mov.W	r10, [r7]
  94 0025 03                      		.balign 2,3,5
  95                             	.L8:
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if ( uPDoorStatus == UP_DOOR_WAIT ) 
  96                             		.loc 1 125 0
  97 0026 FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
  98 002c 58 77                   		movu.B	[r7], r7
  99 002e 61 07                   		cmp	#0, r7
 100 0030 21 0D                   		bne	.L9
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		(void)SWTC_Stop((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER);
 101                             		.loc 1 128 0
 102 0032 66 91                   		mov	#9, r1
 103                             	.LVL6:
 104 0034 05 00 00 00             		bsr	_SWTC_Stop
 105                             	.LVL7:
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		return S_FALSE;
 106                             		.loc 1 130 0
 107 0038 66 11                   		mov	#1, r1
 108 003a 38 5A 01                		bra	.L10
 109                             	.LVL8:
 110                             	.L9:
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (BasicLoader( PTR_UP_SET_PROFILE, LowStatement, &uPSetProfile_setting_data_tmp ) != S_OK)
 111                             		.loc 1 136 0
 112 003d 75 41 1E                		mov	#30, r1
 113                             	.LVL9:
 114 0040 EF 03                   		mov.L	r0, r3
 115 0042 05 00 00 00             		bsr	_BasicLoader
 116                             	.LVL10:
 117 0046 5B 11                   		movu.B	r1, r1
 118 0048 61 01                   		cmp	#0, r1
 119 004a 3B 48 01                		bne	.L20
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (uP_CmpSetProfile_Data->status == SETPROFILE_INIT) 
 120                             		.loc 1 146 0
 121 004d FB 72 00 00 00 00       		mov.L	#_uP_SetProfile_Data, r7
 122 0053 DC 7A                   		mov.W	[r7], r10
 123 0055 EF AB                   		mov.L	r10, r11
 124 0057 76 2B 00 1F             		and	#0x1f00, r11
 125 005b 21 23                   		bne	.L11
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->loadMap_profile = OFFS_W(uPSetProfile_setting_data_tmp.Data,0);		
 126                             		.loc 1 148 0
 127 005d EC 0B                   		mov.L	[r0], r11
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->nSeg_counter = 0;
 128                             		.loc 1 150 0
 129 005f 76 2A 0F FF             		and	#0xffffff0f, r10
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->loadMap_profile = OFFS_W(uPSetProfile_setting_data_tmp.Data,0);		
 130                             		.loc 1 148 0
 131 0063 DC BB                   		mov.W	[r11], r11
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		SPF_InitSeg(uP_CmpSetProfile_Data);
 132                             		.loc 1 162 0
 133 0065 EF 71                   		mov.L	r7, r1
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->nSeg_counter = 0;
 134                             		.loc 1 150 0
 135 0067 D3 7A                   		mov.W	r10, [r7]
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->loadMap_profile = OFFS_W(uPSetProfile_setting_data_tmp.Data,0);		
 136                             		.loc 1 148 0
 137 0069 D7 7B 01                		mov.W	r11, 2[r7]
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		SPF_InitSeg(uP_CmpSetProfile_Data);
 138                             		.loc 1 162 0
 139 006c 05 00 00 00             		bsr	_SPF_InitSeg
 140                             	.LVL11:
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->cntrl_profile=PROFILE_ON;
 141                             		.loc 1 166 0
 142 0070 DC 7A                   		mov.W	[r7], r10
 143 0072 78 EA                   		bset	#14, r10
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		uP_CmpSetProfile_Data->status = SETPROFILE_EXE;
 144                             		.loc 1 168 0
 145 0074 76 2A FF E0             		and	#0xffffe0ff, r10
 146 0078 76 3A 00 01             		or	#0x100, r10
 147 007c D3 7A                   		mov.W	r10, [r7]
 148                             		.balign 2,3,5
 149                             	.L11:
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (uP_CmpSetProfile_Data->status == SETPROFILE_EXE) 
 150                             		.loc 1 171 0
 151 007e FB C2 00 00 00 00       		mov.L	#_uP_SetProfile_Data, r12
 152 0084 DC C7                   		mov.W	[r12], r7
 153 0086 EF 7A                   		mov.L	r7, r10
 154 0088 76 2A 00 1F             		and	#0x1f00, r10
 155 008c 76 0A 00 01             		cmp	#0x100, r10
 156 0090 3B F2 00                		bne	.L12
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		if (uP_CmpSetProfile_Data->cntrl_profile==PROFILE_OFF)
 157                             		.loc 1 173 0
 158 0093 76 27 00 40             		and	#0x4000, r7
 159 0097 5F 77                   		movu.W	r7, r7
 160 0099 61 07                   		cmp	#0, r7
 161 009b 21 23                   		bne	.L21
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER);
 162                             		.loc 1 175 0
 163 009d 66 91                   		mov	#9, r1
 164 009f 05 00 00 00             		bsr	_SWTC_Stop
 165                             	.LVL12:
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			LoadsReq_New[Fan_Pos[LD_DRY_FAN_IND]].b = ((OFFS_B(uPSetProfile_setting_data_tmp.Data,2))&VEL_FA
 166                             		.loc 1 177 0
 167 00a3 EC 0A                   		mov.L	[r0], r10
 168 00a5 FB 72 00 00 00 00       		mov.L	#_Fan_Pos, r7
 169 00ab CD AB 02                		mov.B	2[r10], r11
 170 00ae 58 77                   		movu.B	[r7], r7
 171 00b0 64 3B                   		and	#3, r11
 172 00b2 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 173 00b8 FE 07 AB                		mov.B	r11, [r7,r10]
 174 00bb 38 C7 00                		bra	.L12
 175                             	.L21:
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		if (uP_CmpSetProfile_Data->cntrl_profile==PROFILE_OFF)
 176                             		.loc 1 173 0
 177 00be 66 0B                   		mov	#0, r11
 178 00c0 CF B7                   		mov.B	r11, r7
 179 00c2 66 1A                   		mov	#1, r10
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					if ((OFFS_W(uPSetProfile_setting_data_tmp.Data,(3+(nr_profiles))))&(mask_seg_sel<<(((uint8_t)(
 180                             		.loc 1 190 0
 181 00c4 66 1D                   		mov.L	#1, r13
 182                             		.balign 2,3,5
 183                             	.L13:
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				if ((uP_CmpSetProfile_Data->loadMap_profile) & (mask_load_sel))
 184                             		.loc 1 188 0
 185 00c6 DD CE 01                		mov.W	2[r12], r14
 186 00c9 53 AE                   		and	r10, r14
 187 00cb 5F EE                   		movu.W	r14, r14
 188 00cd 61 0E                   		cmp	#0, r14
 189 00cf 20 29                   		beq	.L14
 190                             	.LVL13:
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					if ((OFFS_W(uPSetProfile_setting_data_tmp.Data,(3+(nr_profiles))))&(mask_seg_sel<<(((uint8_t)(
 191                             		.loc 1 190 0
 192 00d1 5B BE                   		movu.B	r11, r14
 193 00d3 62 3E                   		add	#3, r14
 194 00d5 EC 03                   		mov.L	[r0], r3
 195 00d7 4B EE                   		add	r14, r14
 196 00d9 4B 3E                   		add	r3, r14
 197 00db 5C E2                   		movu.W	[r14], r2
 198 00dd 5C CE                   		movu.W	[r12], r14
 199 00df EF D4                   		mov.L	r13, r4
 200 00e1 68 4E                   		shlr	#4, r14
 201 00e3 64 FE                   		and	#15, r14
 202 00e5 FD 62 E4                		shll	r14, r4
 203 00e8 53 42                   		and	r4, r2
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					SPF_SetProfileLoadMng (nr_load_profile,activation_value,uPSetProfile_setting_data_tmp);	
 204                             		.loc 1 198 0
 205 00ea A8 0C                   		mov.L	4[r0], r4
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					if ((OFFS_W(uPSetProfile_setting_data_tmp.Data,(3+(nr_profiles))))&(mask_seg_sel<<(((uint8_t)(
 206                             		.loc 1 190 0
 207 00ec FC DB 21                		scne.L	r2
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					SPF_SetProfileLoadMng (nr_load_profile,activation_value,uPSetProfile_setting_data_tmp);	
 208                             		.loc 1 198 0
 209 00ef CF 71                   		mov.B	r7, r1
 210 00f1 05 00 00 00             		bsr	_SPF_SetProfileLoadMng
 211                             	.LVL14:
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					nr_profiles++;
 212                             		.loc 1 199 0
 213 00f5 62 1B                   		add	#1, r11
 214                             	.LVL15:
 215 00f7 03                      		.balign 2,3,1
 216                             	.L14:
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				nr_load_profile++;
 217                             		.loc 1 202 0
 218 00f8 62 17                   		add	#1, r7
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				mask_load_sel<<=1;
 219                             		.loc 1 201 0
 220 00fa 4B AA                   		add	r10, r10
 221                             	.LVL16:
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			while (mask_load_sel)
 222                             		.loc 1 186 0
 223 00fc 5B 7E                   		movu.B	r7, r14
 224 00fe 75 5E 10                		cmp	#16, r14
 225 0101 21 C5                   		bne	.L13
 226                             	.LVL17:
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 			if( SWTC_GetElapsedTime((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER) >= (SWTC_TimeType)(SEG_TI
 227                             		.loc 1 232 0
 228 0103 66 91                   		mov	#9, r1
 229 0105 FB 72 00 00 00 00       		mov.L	#_Tab_HWCSPR_TimeBase, r7
 230                             	.LVL18:
 231 010b 05 00 00 00             		bsr	_SWTC_GetElapsedTime
 232                             	.LVL19:
 233 010f EC 77                   		mov.L	[r7], r7
 234 0111 45 71 01                		cmp	1[r7].UB, r1
 235 0114 29 68                   		blt	.L15
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				if (uP_CmpSetProfile_Data->c_counter == (OFFS_B(uPSetProfile_setting_data_tmp.Data,3)&PROFILE_C
 236                             		.loc 1 238 0
 237 0116 EC 0C                   		mov.L	[r0], r12
 238 0118 FB 72 00 00 00 00       		mov.L	#_uP_SetProfile_Data, r7
 239 011e DC 7A                   		mov.W	[r7], r10
 240                             	.LVL20:
 241 0120 CD CC 03                		mov.B	3[r12], r12
 242 0123 EF AB                   		mov.L	r10, r11
 243                             	.LVL21:
 244 0125 EF CD                   		mov.L	r12, r13
 245 0127 64 FB                   		and	#15, r11
 246 0129 64 FD                   		and	#15, r13
 247 012b 47 DB                   		cmp	r13, r11
 248 012d 21 38                   		bne	.L16
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					if (uP_CmpSetProfile_Data->nSeg_counter < ((OFFS_B(uPSetProfile_setting_data_tmp.Data,3)&PROFI
 249                             		.loc 1 240 0
 250 012f 5C 7B                   		movu.W	[r7], r11
 251 0131 5B CC                   		movu.B	r12, r12
 252 0133 68 4B                   		shlr	#4, r11
 253 0135 64 FB                   		and	#15, r11
 254 0137 68 4C                   		shlr	#4, r12
 255 0139 47 CB                   		cmp	r12, r11
 256 013b 28 12                   		bge	.L17
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 						uP_CmpSetProfile_Data->nSeg_counter++;		
 257                             		.loc 1 242 0
 258 013d 62 1B                   		add	#1, r11
 259 013f 64 FB                   		and	#15, r11
 260 0141 6C 4B                   		shll	#4, r11
 261 0143 76 2A 0F FF             		and	#0xffffff0f, r10
 262 0147 57 AB                   		or	r10, r11
 263 0149 D3 7B                   		mov.W	r11, [r7]
 264 014b 2E 0B                   		bra	.L18
 265                             	.L17:
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 						uP_CmpSetProfile_Data->end_profile= TRUE;
 266                             		.loc 1 247 0
 267 014d 77 2A 0F FF 00          		and	#0xff0f, r10
 268 0152 78 FA                   		bset	#15, r10
 269 0154 D3 7A                   		mov.W	r10, [r7]
 270                             		.balign 2,3,5
 271                             	.L18:
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					uP_CmpSetProfile_Data->c_counter = 0;				
 272                             		.loc 1 249 0
 273 0156 FB 72 00 00 00 00       		mov.L	#_uP_SetProfile_Data, r7
 274 015c DC 7A                   		mov.W	[r7], r10
 275 015e 75 2A F0                		and	#-16, r10
 276 0161 D3 7A                   		mov.W	r10, [r7]
 277 0163 2E 0D                   		bra	.L19
 278                             	.L16:
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 					uP_CmpSetProfile_Data->c_counter++;			
 279                             		.loc 1 253 0
 280 0165 62 1B                   		add	#1, r11
 281 0167 64 FB                   		and	#15, r11
 282 0169 75 2A F0                		and	#-16, r10
 283 016c 57 AB                   		or	r10, r11
 284 016e D3 7B                   		mov.W	r11, [r7]
 285                             		.balign 2,3,1
 286                             	.L19:
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 				(void)Set_MediumCounter((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER, (SWTC_PrescalerType)COUN
 287                             		.loc 1 256 0
 288 0170 66 91                   		mov	#9, r1
 289 0172 66 12                   		mov	#1, r2
 290 0174 FB 3A FF 7F             		mov	#0x7fff, r3
 291 0178 05 00 00 00             		bsr	_Set_MediumCounter
 292                             	.LVL22:
 293                             		.balign 2,3,1
 294                             	.L15:
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		 	(void)SWTC_Run((SWTC_CountersType)MP_SETDRYPROFILE_M_COUNTER);
 295                             		.loc 1 263 0
 296 017c 66 91                   		mov	#9, r1
 297 017e 05 00 00 00             		bsr	_SWTC_Run
 298                             	.LVL23:
 299                             		.balign 2,3,5
 300                             	.L12:
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 	if (uP_CmpSetProfile_Data->end_profile==TRUE)
 301                             		.loc 1 269 0
 302 0182 FB 72 00 00 00 00       		mov.L	#_uP_SetProfile_Data, r7
 303 0188 DC 71                   		mov.W	[r7], r1
 304 018a 7E 01                   		not	r1
 305 018c 5F 11                   		movu.W	r1, r1
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		return S_FALSE;
 306                             		.loc 1 130 0
 307 018e 68 F1                   		shlr	#15, r1
 308 0190 2E 04                   		bra	.L10
 309                             	.L20:
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** 		return S_OK;
 310                             		.loc 1 143 0
 311 0192 66 01                   		mov	#0, r1
 312                             		.balign 2,3,1
 313                             	.L10:
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\SetProfile.c **** }
 314                             		.loc 1 277 0
 315 0194 64 11                   		and	#1, r1
 316 0196 3F 7D 09                		rtsd	#36, r7-r13
 317                             	.LFE0:
 383                             	.Letext0:
 384                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 385                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 386                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 387                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 388                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 389                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\PlatformLibrary\\LIB_IOManager/OutputManagerExp.h"
 390                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmDefines.h"
 391                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 392                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 393                             		.file 11 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_FuncLib.h"
