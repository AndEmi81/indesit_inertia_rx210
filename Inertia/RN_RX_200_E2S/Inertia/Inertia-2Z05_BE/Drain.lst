   1                             		.file	"Drain.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.DRN_uP_Drain_Init,"ax",@progbits
   5                             		.global	_DRN_uP_Drain_Init
   7                             	_DRN_uP_Drain_Init:
   8                             	.LFB1:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules/Drain.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /**
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Source File 
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \file    Drain.c
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \ingroup Drain
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \date    25/02/2008
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \author  Roberto Fioravanti
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \version 1.0.0
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /*
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Copyright (c) 2004-2008, Indesit Company, IDD.
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Tutti i diritti sono riservati. All rights reserved.
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Old Versions
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \version 
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \date    
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \author Roberto Fioravanti
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /** 
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \note : 
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */ 
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ******** */
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Includes */
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ******** */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #include "CstmHeaders.h"
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ****************** */
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Defines and Macros */
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ****************** */
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* *************************** */
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Typedef, Structs and Unions */
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* *************************** */
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifndef _ENABLE_DRAIN_TIMER_1SEC_
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** struct up_Drn_setting_data_s
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****   uint8_t draintime;
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****   uint8_t unused;
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** };
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !_ENABLE_DRAIN_TIMER_1SEC_ */
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* **************************** */
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Prototype of local functions */
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* **************************** */
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** void DRN_uP_Drain_Init(void);
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t DRN_StepMgmt(uint8_t highStatement, uint8_t lowStatement);
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t Check_Sensor (uint8_t highStatement);
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ****************** */
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Exported variables */
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ****************** */
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* **************** */
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Global variables */
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* **************** */
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifndef _ENABLE_DRAIN_TIMER_1SEC_
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** const struct up_Drn_setting_data_s draintable=
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****   15,0
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** };
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !_ENABLE_DRAIN_TIMER_1SEC_ */
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ***************** */
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Exported function */
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ***************** */
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /**
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Gestisce l'esecuzione del microprogramma Drain.
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****  
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \retvalue S_OK se la condizione di avanzamento passo per il microprogramma � verificata (nel caso
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** almeno una volta)
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \retvalue S_FALSE se non � ancora verificata
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \version		1.0.0
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \date 			26/02/2008
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \author			Roberto Fioravanti
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \todo       -gestione della sospensione del micorprogramma in presenza di faults
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** La condizione sulla porta viene testata solo se non ci sono faults
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****             
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t DRN_uP_Drain_Exe( uint8_t highStatement, uint8_t lowStatement)
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t nRet=S_FALSE;
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	if ( (FALSE == Interpreter_Data[0].stepInitialized) || (FALSE == Interpreter_Data[0].optionalStepI
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	{
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		/* Init passo o restore from backup */
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		DRN_uP_Drain_Init();
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	} 
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	else 
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	{
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	/* TODO1: condizioni particolari in cui deve essere sospesa l'attivit� del microprogramma */
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		/*    
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		if( !Alarm )
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		{
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		*/	
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		/*Pompa Scarico non sottoposta a MR, neanche alla DOOR ma garantiamo spegnimento di tutti*/
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		/*i carichi a porta aperta*/
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		if(HWC_Flags.bit.bldc_drain == 0)
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		{ /* nel caso vecchio (pompa scarico non bldc), con la porta aperta bisognava interrompere lo sca
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		   /*IN FAULT CONSENTIRE LO SCARICO A PORTA APERTA!!!!!*/
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			/*if (CurrentFault.faultCodes.code == CODE_NO_FAULT)
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{ non sono in fault - controllo lo stato della porta
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			In caso di Fault il uP pu� agire anche a porta aperta, non eseguo controllo
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				if ( uPDoorStatus == UP_DOOR_WAIT )
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				{   porta aperta -> il uP va sospeso
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					(void)SWTC_Stop((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					return S_FALSE;
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				}
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			} */ /*AE FIXME FAULT dovrebbe lavorarci Emanuela*/
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		}
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		/*		
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		}
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		*/
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		nRet= DRN_StepMgmt(highStatement, lowStatement);
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	}
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	return nRet;   
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** }
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ************** */
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* Local Function */
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /* ************** */
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /**
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Inizializza la macchina a stati del microprogramma Drain.
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \param nesssuno
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \return nessuno
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \version		1.0.0
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \date 			26/02/2008
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \author			Roberto Fioravanti
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** void DRN_uP_Drain_Init(void) 
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  10                             		.loc 1 159 0
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	uP_Drain_Data.step = DRAIN_INIT;
  11                             		.loc 1 160 0
  12 0000 FB E2 00 00 00 00       		mov.L	#_uP_Drain_Data, r14
  13 0006 F8 E4 00                		mov.B	#0, [r14]
  14 0009 02                      		rts
  15                             	.LFE1:
  17                             		.section	.text.Check_Sensor,"ax",@progbits
  18                             		.global	_Check_Sensor
  20                             	_Check_Sensor:
  21                             	.LFB3:
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** }
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /**
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Gestisce l'avanzamento della macchina a stati del microprogramma Drain.
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Due sono le opzioni possibili.
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 2 sono le opzioni possibili
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** -F1|F0 = 0|0 -> scarica a vuoto pressostato + x sec.
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** -F1|F0 = 0|1 -> scarica per x sec
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Prima opzione :
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Al termine,  il microprogramma azzera WaterInDW.e aggiorna i dl caricati.
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** La pompa viene attivata per tempo massimo pari al timeout Drain1stTimeoutToEmpty sec.
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Se il vuoto prerssostato viene raggiunto, allora la pompa rimane attivata per x sec.
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Altrimenti, dopo una pausa di DrainPauseToEmpty secondi in cui la pompa � disattivata.
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** si passa ad un secondo tentativo di Drain2ndTimeoutToEmpty secondi.
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Se il vuoto prerssostato viene raggiunto, allora la pompa rimane attivata per x sec, 
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** altrimenti viene venerato un allarme.
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Seconda opzione:
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** la pompa viene attivata per x secondi.
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** terza opzione :
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** viene controllato il  valore del sensore virtuale e non il pressostato
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****  
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \retvalue S_OK se la condizione di avanzamento passo per il microprogramma � verificata (nel caso
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** almeno una volta)
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \retvalue S_FALSE se non � ancora verificata
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \version		1.0.0
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \date 			26/02/2008
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \author			Roberto Fioravanti
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \todo       -La condizione sulla porta viene testata solo se non ci sono faults
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****             
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t DRN_StepMgmt(uint8_t highStatement, uint8_t lowStatement) 
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t time, nRet=S_FALSE;
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t sensorFullCondition;
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****     if(HWC_Flags.bit.vs_drain_presence && IS_VIRTUAL_SENSOR_VERSION(highStatement))
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	{
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		if(HWC_Flags.bit.bldc_drain == 0)
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		{ /* condizione di errore */
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		    return S_OK;
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		}
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	}
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	switch(uP_Drain_Data.step) 
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	{
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		case DRAIN_INIT:
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FltFlagsKO.drain = FALSE;
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FltFlagsKO.drainPreFault = FALSE;
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			/* QI 01.12.09 reset Prefault : la procedura di Fault � confinata 
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			nell'esecuazione del uP*/	
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FLT_preFaultReset(CODE_DRAIN,SUBCODE_DRAIN);
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if (BasicLoader(PTR_UP_DRAIN, lowStatement, &uPDrain_setting_data) != S_OK ) 
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_ERROR;
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				return S_FALSE;
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			}
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			switch( highStatement & DRN_DRAIN_TYPE_MSK )
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****                 case DRN_DRAIN_VP_PLUS_TIME_SENSORI_VIRTUALI:
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			   /* fall through to next case */
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				case DRN_DRAIN_VP_PLUS_TIME:
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					/* 1� timeout pompa scarico */
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					time=DRN_1ST_TOUT_TO_EMPTY; 
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step = DRAIN_1ST_TOUT;
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					break;
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				case DRN_DRAIN_TIME:
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					time=DRN_DRAINTIME;
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step = DRAIN_TIME;
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					break;
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				default:
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step = DRAIN_ERROR;
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					return S_FALSE;
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			}
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef _ENABLE_DRAIN_TIMER_1SEC_
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER, (SWTC_MCounterValue)time);
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #else
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SWTC_SetSValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,time);
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !_ENABLE_DRAIN_TIMER_1SEC_ */
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			break;
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		case DRAIN_1ST_TOUT:
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			/* gestione 1� timeout pompa scarico */
 268:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			/* attiva pompa scarico */
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_PUMP(LD_DRAIN_PUMP_IND,LOAD_ON)
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 272:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP			
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if( Check_Sensor(highStatement))
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #else /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if(TESTBIT(GICriteria, GI_PRESS_SENS_CR_FULL_IND))
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 280:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				if ( SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				{
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					/* 1� timeout scaduto: pompa scarico in pausa */
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					FltFlagsKO.drainPreFault = TRUE;
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef _ENABLE_DRAIN_TIMER_1SEC_
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_PAUSE_TO_EM
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #else
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					SWTC_SetSValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,DRN_PAUSE_TO_EMPTY);
 292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !_ENABLE_DRAIN_TIMER_1SEC_ */
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step=DRAIN_PAUSE;
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				}
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			} 
 297:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			else
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef _ENABLE_DRAIN_TIMER_1SEC_
 300:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_DRAINTIME);
 301:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #else
 302:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				SWTC_SetSValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,DRN_DRAINTIME);
 303:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !_ENABLE_DRAIN_TIMER_1SEC_ */
 304:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 305:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_TIME;
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			}          
 307:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			break;
 308:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		case DRAIN_PAUSE:
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		/* gestione pausa pompa scarico */
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 313:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 315:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				/* pausa terminata: 2� timeout pompa scarico */
 317:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef _ENABLE_DRAIN_TIMER_1SEC_
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_2ND_TOUT_TO_
 320:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #else
 321:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				SWTC_SetSValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,DRN_2ND_TOUT_TO_EMPTY);
 322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !_ENABLE_DRAIN_TIMER_1SEC_ */
 323:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step=DRAIN_2ND_TOUT;
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			}
 326:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			break;
 328:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		case DRAIN_2ND_TOUT:
 330:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			/* attiva pompa scarico */
 331:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_PUMP(LD_DRAIN_PUMP_IND,LOAD_ON)
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****             if( Check_Sensor(highStatement))
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #else /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
 336:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if(TESTBIT(GICriteria, GI_PRESS_SENS_CR_FULL_IND))
 337:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */			
 338:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 340:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				if (SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 342:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				{
 343:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					/* 2� timeout scaduto: notifica allarme */
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					FltFlagsKO.drain=TRUE;                         
 345:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					nRet=S_OK;
 346:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step = DRAIN_END;
 347:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				}
 348:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			} 
 349:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			else
 350:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 351:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef _ENABLE_DRAIN_TIMER_1SEC_
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_DRAINTIME);
 353:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #else
 354:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				SWTC_SetSValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,DRN_DRAINTIME);
 355:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* !_ENABLE_DRAIN_TIMER_1SEC_ */
 356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_TIME;
 358:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			}
 359:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 360:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			break;
 361:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****       
 362:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		case DRAIN_TIME:
 363:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 364:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			/* attiva pompa scarico */
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_PUMP(LD_DRAIN_PUMP_IND,LOAD_ON)
 366:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 368:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 369:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			{
 371:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				/* 2� DrainTime trascorso */
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				nRet=S_OK;
 373:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				if( (highStatement & DRN_DRAIN_TYPE_MSK) != DRN_DRAIN_TIME )
 375:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				{			
 376:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					updateRegWaterLoaded();
 377:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					WaterInDW = 0;
 379:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 380:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					/* restart dati turbina */
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					WaterLoadedReset();
 382:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					/* QI 06.11.09 - reset variabili legate alla gestione del timeout dinamico */
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					FLT_Pump_Load_Reset();
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				}
 386:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_END;
 388:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			}
 389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			break;
 391:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****     
 392:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		case DRAIN_END:                                           
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		case DRAIN_ERROR:
 394:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 395:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 396:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 397:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			nRet=S_OK;
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			break;
 399:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 400:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		default:
 401:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			uP_Drain_Data.step=DRAIN_INIT;
 402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			nRet=S_FALSE;
 403:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	}    
 404:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 405:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP
 406:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	if(HWC_Flags.bit.bldc_drain != 0)
 407:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	{
 408:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	    if(LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b==LOAD_ON)
 409:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		{
 410:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],OFFS_B(uPDrain_setting_data.Data, DRAINPUMP_CTR
 411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],OFFS_B(uPDrain_setting_data.Data, DRAINPUMP_CTRL
 412:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		}
 413:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		else
 414:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		{
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],0);
 416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],0);
 417:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		}
 418:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****     }
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** #endif /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
 420:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 421:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	return nRet;
 422:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** }
 423:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /**/
 424:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 425:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 426:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** /**
 427:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** Gestisce il riconoscimento dello stato del pressostato o dei sensori visrtuali se sono presenti 
 428:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 429:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \param [in] none
 430:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****  
 431:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \retvalue S_OK se il pressostato � in pieno o se il valore del sensore virtuale da il pieno.
 432:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \retvalue S_FALSE altrimenti
 433:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 434:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \version		1.0.0
 435:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \date 			28/11/2011
 436:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** \author			Emanuela Antognoli
 437:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 
 438:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****             
 439:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** */
 440:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** uint8_t Check_Sensor (uint8_t highStatement)
 441:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  22                             		.loc 1 441 0
  23                             	.LVL0:
 442:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	
 443:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	if(IS_VIRTUAL_SENSOR_VERSION(highStatement))
  24                             		.loc 1 443 0
  25 0000 75 21 30                		and	#48, r1
  26                             	.LVL1:
  27 0003 75 51 20                		cmp	#32, r1
  28 0006 21 24                   		bne	.L3
 444:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	{
 445:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	   if(TESTBIT(GIValid, GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_DRAIN))
  29                             		.loc 1 445 0
  30 0008 FB E2 00 00 00 00       		mov.L	#_GIValid, r14
  31 000e DC EE                   		mov.W	[r14], r14
  32 0010 76 2E 00 08             		and	#0x800, r14
  33 0014 5F EE                   		movu.W	r14, r14
  34 0016 61 0E                   		cmp	#0, r14
  35 0018 20 1E                   		beq	.L5
  36                             	.LBB6:
  37                             	.LBB7:
 446:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	   {
 447:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			   
 448:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		   if(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_DRAIN])
  38                             		.loc 1 448 0
  39 001a FB E2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r14
  40                             	.LBE7:
  41                             	.LBE6:
  42 0020 59 E1 01                		movu.B	1[r14], r1
  43 0023 61 01                   		cmp	#0, r1
  44 0025 FC DB 11                		scne.L	r1
  45 0028 2E 10                   		bra	.L4
  46                             	.L3:
 449:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		   {/* NB: 28/11/11 il valore del sensore virtuale della pompa scarico ha valori:0-2-3-5*/
 450:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			     return TRUE;					   
 451:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		   }
 452:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	   }else
 453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	   {/* se il sensore vituale non � ready si comincia a scaricare a sensore, c'� comunque il ti
 454:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		   return TRUE;
 455:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		   
 456:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	   }   
 457:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	}
 458:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	else
 459:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	{/* vecchia gestione col pressostato( anche con la doppia pompa BLAC */
 460:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		return (TESTBIT(GICriteria, GI_PRESS_SENS_CR_FULL_IND) != 0);
  47                             		.loc 1 460 0
  48 002a FB E2 00 00 00 00       		mov.L	#_GICriteria, r14
  49 0030 CC E1                   		mov.B	[r14], r1
  50 0032 64 11                   		and	#1, r1
  51 0034 2E 04                   		bra	.L4
  52                             	.L5:
 454:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		   return TRUE;
  53                             		.loc 1 454 0
  54 0036 66 11                   		mov	#1, r1
  55                             		.balign 2,3,1
  56                             	.L4:
 461:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	}
 462:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	return FALSE;
 463:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** }
  57                             		.loc 1 463 0
  58 0038 64 11                   		and	#1, r1
  59 003a 02                      		rts
  60                             	.LFE3:
  62 003b 03                      		.section	.text.DRN_StepMgmt,"ax",@progbits
  63                             		.global	_DRN_StepMgmt
  65                             	_DRN_StepMgmt:
  66                             	.LFB2:
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  67                             		.loc 1 202 0
  68                             	.LVL2:
  69 0000 6E 7B                   		pushm	r7-r11
  70                             	.LCFI0:
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****     if(HWC_Flags.bit.vs_drain_presence && IS_VIRTUAL_SENSOR_VERSION(highStatement))
  71                             		.loc 1 209 0
  72 0002 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  73                             		.loc 1 202 0
  74 0008 CF 17                   		mov.B	r1, r7
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****     if(HWC_Flags.bit.vs_drain_presence && IS_VIRTUAL_SENSOR_VERSION(highStatement))
  75                             		.loc 1 209 0
  76 000a DC E1                   		mov.W	[r14], r1
  77                             	.LVL3:
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
  78                             		.loc 1 202 0
  79 000c CF 2A                   		mov.B	r2, r10
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****     if(HWC_Flags.bit.vs_drain_presence && IS_VIRTUAL_SENSOR_VERSION(highStatement))
  80                             		.loc 1 209 0
  81 000e EF 1E                   		mov.L	r1, r14
  82 0010 76 2E 00 04             		and	#0x400, r14
  83 0014 5F EE                   		movu.W	r14, r14
  84 0016 61 0E                   		cmp	#0, r14
  85 0018 20 16                   		beq	.L7
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****     if(HWC_Flags.bit.vs_drain_presence && IS_VIRTUAL_SENSOR_VERSION(highStatement))
  86                             		.loc 1 209 0 is_stmt 0 discriminator 1
  87 001a EF 7E                   		mov.L	r7, r14
  88 001c 75 2E 30                		and	#48, r14
  89 001f 75 5E 20                		cmp	#32, r14
  90 0022 21 0C                   		bne	.L7
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		if(HWC_Flags.bit.bldc_drain == 0)
  91                             		.loc 1 211 0 is_stmt 1
  92 0024 75 21 40                		and	#64, r1
  93 0027 5F 11                   		movu.W	r1, r1
  94 0029 61 01                   		cmp	#0, r1
  95 002b 3A 67 02                		beq	.L8
  96                             		.balign 2,3,5
  97                             	.L7:
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	switch(uP_Drain_Data.step) 
  98                             		.loc 1 218 0
  99 002e FB E2 00 00 00 00       		mov.L	#_uP_Drain_Data, r14
 100 0034 58 E4                   		movu.B	[r14], r4
 101 0036 61 64                   		cmp	#6, r4
 102 0038 25 05 38 DA 01          		bgtu	.L9
 103 003d FB E2 00 00 00 00       		mov.L	#.L16, r14
 104 0043 FE 64 EE                		mov.L	[r4,r14], r14
 105                             		
 106 0046 7F 0E                   	1:jmp	r14
 107                             		.section	.rodata.DRN_StepMgmt,"a",@progbits
 108                             		.balign 4
 109                             		.balign 4
 110                             	.L16:
 111 0000 00 00 00 00             		.long .L10
 112 0004 00 00 00 00             		.long .L11
 113 0008 00 00 00 00             		.long .L12
 114 000c 00 00 00 00             		.long .L13
 115 0010 00 00 00 00             		.long .L14
 116 0014 00 00 00 00             		.long .L15
 117 0018 00 00 00 00             		.long .L15
 118                             		.section	.text.DRN_StepMgmt
 119                             	.L10:
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FltFlagsKO.drain = FALSE;
 120                             		.loc 1 222 0
 121 0048 FB E2 00 00 00 00       		mov.L	#_FltFlagsKO, r14
 122 004e CC E4                   		mov.B	[r14], r4
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FLT_preFaultReset(CODE_DRAIN,SUBCODE_DRAIN);
 123                             		.loc 1 227 0
 124 0050 66 31                   		mov	#3, r1
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FltFlagsKO.drain = FALSE;
 125                             		.loc 1 222 0
 126 0052 7A 74                   		bclr	#7, r4
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FltFlagsKO.drainPreFault = FALSE;
 127                             		.loc 1 223 0
 128 0054 7A 64                   		bclr	#6, r4
 129 0056 C3 E4                   		mov.B	r4, [r14]
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			FLT_preFaultReset(CODE_DRAIN,SUBCODE_DRAIN);
 130                             		.loc 1 227 0
 131 0058 66 12                   		mov	#1, r2
 132                             	.LVL4:
 133 005a 05 00 00 00             		bsr	_FLT_preFaultReset
 134                             	.LVL5:
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if (BasicLoader(PTR_UP_DRAIN, lowStatement, &uPDrain_setting_data) != S_OK ) 
 135                             		.loc 1 229 0
 136 005e 75 41 18                		mov	#24, r1
 137 0061 CF A2                   		mov.B	r10, r2
 138 0063 FB 32 00 00 00 00       		mov.L	#_uPDrain_setting_data, r3
 139 0069 05 00 00 00             		bsr	_BasicLoader
 140                             	.LVL6:
 141 006d 5B 11                   		movu.B	r1, r1
 142 006f 61 01                   		cmp	#0, r1
 143 0071 20 0D                   		beq	.L17
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_ERROR;
 144                             		.loc 1 231 0
 145 0073 FB 72 00 00 00 00       		mov.L	#_uP_Drain_Data, r7
 146                             	.LVL7:
 147 0079 3C 70 06                		mov.B	#6, [r7]
 148 007c 2E 42                   		bra	.L58
 149                             	.LVL8:
 150                             	.L17:
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			switch( highStatement & DRN_DRAIN_TYPE_MSK )
 151                             		.loc 1 235 0
 152 007e 75 27 30                		and	#48, r7
 153                             	.LVL9:
 154 0081 75 57 10                		cmp	#16, r7
 155 0084 FB E2 00 00 00 00       		mov.L	#_uP_Drain_Data, r14
 156 008a 20 21                   		beq	.L20
 157 008c 75 57 20                		cmp	#32, r7
 158 008f 20 07                   		beq	.L19
 159 0091 61 07                   		cmp	#0, r7
 160 0093 21 27                   		bne	.L54
 161 0095 03                      		.balign 2,3,5
 162                             	.L19:
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					time=DRN_1ST_TOUT_TO_EMPTY; 
 163                             		.loc 1 244 0
 164 0096 FB 72 00 00 00 00       		mov.L	#_DrainFaultData, r7
 165 009c EC 77                   		mov.L	[r7], r7
 166 009e CC 72                   		mov.B	[r7], r2
 167                             	.LVL10:
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step = DRAIN_1ST_TOUT;
 168                             		.loc 1 245 0
 169 00a0 FB 72 00 00 00 00       		mov.L	#_uP_Drain_Data, r7
 170 00a6 3C 70 01                		mov.B	#1, [r7]
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					break;
 171                             		.loc 1 246 0
 172 00a9 2E 1A                   		bra	.L21
 173                             	.LVL11:
 174                             	.L20:
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					time=DRN_DRAINTIME;
 175                             		.loc 1 249 0
 176 00ab FB 72 00 00 00 00       		mov.L	#_uPDrain_setting_data, r7
 177 00b1 EC 77                   		mov.L	[r7], r7
 178 00b3 CC 72                   		mov.B	[r7], r2
 179                             	.LVL12:
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step = DRAIN_TIME;
 180                             		.loc 1 250 0
 181 00b5 F8 E4 02                		mov.B	#2, [r14]
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					break;
 182                             		.loc 1 251 0
 183 00b8 2E 0B                   		bra	.L21
 184                             	.LVL13:
 185                             	.L54:
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step = DRAIN_ERROR;
 186                             		.loc 1 254 0
 187 00ba F8 E4 06                		mov.B	#6, [r14]
 188 00bd 03                      		.balign 2,3,1
 189                             	.L58:
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					return S_FALSE;
 190                             		.loc 1 255 0
 191 00be 66 11                   		mov	#1, r1
 192 00c0 38 D2 01                		bra	.L8
 193                             	.LVL14:
 194                             	.L21:
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER, (SWTC_MCounterValue)time);
 195                             		.loc 1 259 0
 196 00c3 5B 22                   		movu.B	r2, r2
 197 00c5 75 41 13                		mov	#19, r1
 198 00c8 05 00 00 00             		bsr	_SWTC_SetMValue
 199                             	.LVL15:
 200 00cc 38 4C 01                		bra	.L56
 201                             	.LVL16:
 202                             	.L11:
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_PUMP(LD_DRAIN_PUMP_IND,LOAD_ON)
 203                             		.loc 1 270 0
 204 00cf FB A2 00 00 00 00       		mov.L	#_Pump_Pos, r10
 205 00d5 59 AA 01                		movu.B	1[r10], r10
 206 00d8 FB E2 00 00 00 00       		mov.L	#_LoadsReq_New, r14
 207 00de 66 1B                   		mov	#1, r11
 208 00e0 FE 0A EB                		mov.B	r11, [r10,r14]
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if( Check_Sensor(highStatement))
 209                             		.loc 1 273 0
 210 00e3 CF 71                   		mov.B	r7, r1
 211 00e5 05 00 00 00             		bsr	_Check_Sensor
 212                             	.LVL17:
 213 00e9 5B 11                   		movu.B	r1, r1
 214 00eb 61 01                   		cmp	#0, r1
 215 00ed 3A B2 00                		beq	.L26
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 216                             		.loc 1 279 0
 217 00f0 75 41 13                		mov	#19, r1
 218 00f3 05 00 00 00             		bsr	_SWTC_Run
 219                             	.LVL18:
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				if ( SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 220                             		.loc 1 281 0
 221 00f7 75 41 13                		mov	#19, r1
 222 00fa 05 00 00 00             		bsr	_SWTC_IsExpired
 223                             	.LVL19:
 224 00fe 61 01                   		cmp	#0, r1
 225 0100 21 05                   		bne	.L24
 226 0102 38 16 01                		bra	.L56
 227                             	.L24:
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					FltFlagsKO.drainPreFault = TRUE;
 228                             		.loc 1 285 0
 229 0105 FB 72 00 00 00 00       		mov.L	#_FltFlagsKO, r7
 230                             	.LVL20:
 231 010b CC 7E                   		mov.B	[r7], r14
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_PAUSE_TO_EM
 232                             		.loc 1 289 0
 233 010d 75 41 13                		mov	#19, r1
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					FltFlagsKO.drainPreFault = TRUE;
 234                             		.loc 1 285 0
 235 0110 78 6E                   		bset	#6, r14
 236 0112 C3 7E                   		mov.B	r14, [r7]
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_PAUSE_TO_EM
 237                             		.loc 1 289 0
 238 0114 FB 72 00 00 00 00       		mov.L	#_DrainFaultData, r7
 239 011a EC 77                   		mov.L	[r7], r7
 240 011c B0 7A                   		movu.B	1[r7], r2
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step=DRAIN_PAUSE;
 241                             		.loc 1 294 0
 242 011e FB 72 00 00 00 00       		mov.L	#_uP_Drain_Data, r7
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_PAUSE_TO_EM
 243                             		.loc 1 289 0
 244 0124 05 00 00 00             		bsr	_SWTC_SetMValue
 245                             	.LVL21:
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					uP_Drain_Data.step=DRAIN_PAUSE;
 246                             		.loc 1 294 0
 247 0128 3C 70 03                		mov.B	#3, [r7]
 248 012b 38 ED 00                		bra	.L56
 249                             	.LVL22:
 250                             	.L13:
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 251                             		.loc 1 312 0
 252 012e 75 41 13                		mov	#19, r1
 253 0131 05 00 00 00             		bsr	_SWTC_Run
 254                             	.LVL23:
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 255                             		.loc 1 314 0
 256 0135 75 41 13                		mov	#19, r1
 257 0138 05 00 00 00             		bsr	_SWTC_IsExpired
 258                             	.LVL24:
 259 013c 61 01                   		cmp	#0, r1
 260 013e 3A DA 00                		beq	.L56
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_2ND_TOUT_TO_
 261                             		.loc 1 319 0
 262 0141 FB 72 00 00 00 00       		mov.L	#_DrainFaultData, r7
 263                             	.LVL25:
 264 0147 EC 77                   		mov.L	[r7], r7
 265 0149 75 41 13                		mov	#19, r1
 266 014c B0 F2                   		movu.B	2[r7], r2
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step=DRAIN_2ND_TOUT;
 267                             		.loc 1 324 0
 268 014e FB 72 00 00 00 00       		mov.L	#_uP_Drain_Data, r7
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_2ND_TOUT_TO_
 269                             		.loc 1 319 0
 270 0154 05 00 00 00             		bsr	_SWTC_SetMValue
 271                             	.LVL26:
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step=DRAIN_2ND_TOUT;
 272                             		.loc 1 324 0
 273 0158 3C 70 04                		mov.B	#4, [r7]
 274 015b 38 BD 00                		bra	.L56
 275                             	.LVL27:
 276                             	.L14:
 331:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_PUMP(LD_DRAIN_PUMP_IND,LOAD_ON)
 277                             		.loc 1 331 0
 278 015e FB A2 00 00 00 00       		mov.L	#_Pump_Pos, r10
 279 0164 59 AA 01                		movu.B	1[r10], r10
 280 0167 FB E2 00 00 00 00       		mov.L	#_LoadsReq_New, r14
 281 016d 66 1B                   		mov	#1, r11
 282 016f FE 0A EB                		mov.B	r11, [r10,r14]
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c ****             if( Check_Sensor(highStatement))
 283                             		.loc 1 334 0
 284 0172 CF 71                   		mov.B	r7, r1
 285 0174 05 00 00 00             		bsr	_Check_Sensor
 286                             	.LVL28:
 287 0178 5B 11                   		movu.B	r1, r1
 288 017a 61 01                   		cmp	#0, r1
 289 017c 20 23                   		beq	.L26
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 290                             		.loc 1 339 0
 291 017e 75 41 13                		mov	#19, r1
 292 0181 05 00 00 00             		bsr	_SWTC_Run
 293                             	.LVL29:
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				if (SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 294                             		.loc 1 341 0
 295 0185 75 41 13                		mov	#19, r1
 296 0188 05 00 00 00             		bsr	_SWTC_IsExpired
 297                             	.LVL30:
 298 018c 61 01                   		cmp	#0, r1
 299 018e 3A 8A 00                		beq	.L56
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					FltFlagsKO.drain=TRUE;                         
 300                             		.loc 1 344 0
 301 0191 FB 72 00 00 00 00       		mov.L	#_FltFlagsKO, r7
 302                             	.LVL31:
 303 0197 CC 7E                   		mov.B	[r7], r14
 304 0199 78 7E                   		bset	#7, r14
 305 019b C3 7E                   		mov.B	r14, [r7]
 306                             	.LVL32:
 307 019d 2E 61                   		bra	.L27
 308                             	.LVL33:
 309                             	.L26:
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_DRAINTIME);
 310                             		.loc 1 352 0
 311 019f FB 72 00 00 00 00       		mov.L	#_uPDrain_setting_data, r7
 312                             	.LVL34:
 313 01a5 EC 77                   		mov.L	[r7], r7
 314 01a7 75 41 13                		mov	#19, r1
 315 01aa 58 72                   		movu.B	[r7], r2
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_TIME;
 316                             		.loc 1 357 0
 317 01ac FB 72 00 00 00 00       		mov.L	#_uP_Drain_Data, r7
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				(void)SWTC_SetMValue((SWTC_CountersType)MP_DRAIN_M_COUNTER,(SWTC_MCounterValue)DRN_DRAINTIME);
 318                             		.loc 1 352 0
 319 01b2 05 00 00 00             		bsr	_SWTC_SetMValue
 320                             	.LVL35:
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_TIME;
 321                             		.loc 1 357 0
 322 01b6 3C 70 02                		mov.B	#2, [r7]
 323 01b9 2E 5F                   		bra	.L56
 324                             	.LVL36:
 325                             	.L12:
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_PUMP(LD_DRAIN_PUMP_IND,LOAD_ON)
 326                             		.loc 1 365 0
 327 01bb FB A2 00 00 00 00       		mov.L	#_Pump_Pos, r10
 328 01c1 59 AA 01                		movu.B	1[r10], r10
 329 01c4 FB E2 00 00 00 00       		mov.L	#_LoadsReq_New, r14
 330 01ca 66 1B                   		mov	#1, r11
 331 01cc FE 0A EB                		mov.B	r11, [r10,r14]
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_Run((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 332                             		.loc 1 367 0
 333 01cf 75 41 13                		mov	#19, r1
 334 01d2 05 00 00 00             		bsr	_SWTC_Run
 335                             	.LVL37:
 369:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			if ( SWTC_IsExpired((SWTC_CountersType)MP_DRAIN_M_COUNTER)) 
 336                             		.loc 1 369 0
 337 01d6 75 41 13                		mov	#19, r1
 338 01d9 05 00 00 00             		bsr	_SWTC_IsExpired
 339                             	.LVL38:
 340 01dd 61 01                   		cmp	#0, r1
 341 01df 20 39                   		beq	.L56
 342                             	.LVL39:
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				if( (highStatement & DRN_DRAIN_TYPE_MSK) != DRN_DRAIN_TIME )
 343                             		.loc 1 374 0
 344 01e1 75 27 30                		and	#48, r7
 345                             	.LVL40:
 346 01e4 75 57 10                		cmp	#16, r7
 347 01e7 20 17                   		beq	.L27
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					WaterInDW = 0;
 348                             		.loc 1 378 0
 349 01e9 FB 72 00 00 00 00       		mov.L	#_WaterInDW, r7
 376:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					updateRegWaterLoaded();
 350                             		.loc 1 376 0
 351 01ef 05 00 00 00             		bsr	_updateRegWaterLoaded
 352                             	.LVL41:
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					WaterInDW = 0;
 353                             		.loc 1 378 0
 354 01f3 3C 70 00                		mov.B	#0, [r7]
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					WaterLoadedReset();
 355                             		.loc 1 381 0
 356 01f6 05 00 00 00             		bsr	_WaterLoadedReset
 357                             	.LVL42:
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 					FLT_Pump_Load_Reset();
 358                             		.loc 1 384 0
 359 01fa 05 00 00 00             		bsr	_FLT_Pump_Load_Reset
 360                             	.LVL43:
 361                             		.balign 2,3,5
 362                             	.L27:
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 				uP_Drain_Data.step = DRAIN_END;
 363                             		.loc 1 387 0
 364 01fe FB 72 00 00 00 00       		mov.L	#_uP_Drain_Data, r7
 365 0204 3C 70 05                		mov.B	#5, [r7]
 366 0207 2E 09                   		bra	.L57
 367                             	.LVL44:
 368                             	.L15:
 395:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			(void)SWTC_Stop((SWTC_CountersType)MP_DRAIN_M_COUNTER);
 369                             		.loc 1 395 0
 370 0209 75 41 13                		mov	#19, r1
 371 020c 05 00 00 00             		bsr	_SWTC_Stop
 372                             	.LVL45:
 373                             		.balign 2,3,1
 374                             	.L57:
 397:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			nRet=S_OK;
 375                             		.loc 1 397 0
 376 0210 66 01                   		mov	#0, r1
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			break;
 377                             		.loc 1 398 0
 378 0212 2E 08                   		bra	.L22
 379                             	.LVL46:
 380                             	.L9:
 401:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			uP_Drain_Data.step=DRAIN_INIT;
 381                             		.loc 1 401 0
 382 0214 F8 E4 00                		mov.B	#0, [r14]
 383                             	.LVL47:
 384 0217 03                      		.balign 2,3,1
 385                             	.L56:
 402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			nRet=S_FALSE;
 386                             		.loc 1 402 0
 387 0218 66 11                   		mov	#1, r1
 388                             	.LVL48:
 389                             		.balign 2,3,5
 390                             	.L22:
 406:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	if(HWC_Flags.bit.bldc_drain != 0)
 391                             		.loc 1 406 0
 392 021a FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 393 0220 DC 77                   		mov.W	[r7], r7
 394 0222 75 27 40                		and	#64, r7
 395 0225 5F 77                   		movu.W	r7, r7
 396 0227 61 07                   		cmp	#0, r7
 397 0229 20 69                   		beq	.L8
 408:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	    if(LoadsReq_New[Pump_Pos[LD_DRAIN_PUMP_IND]].b==LOAD_ON)
 398                             		.loc 1 408 0
 399 022b FB 72 00 00 00 00       		mov.L	#_Pump_Pos, r7
 400 0231 B0 7F                   		movu.B	1[r7], r7
 401 0233 FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 402 0239 FE C7 A7                		movu.B	[r7,r10], r7
 403 023c FB E2 00 00 00 00       		mov.L	#_BLDC_PumpReq_New, r14
 404 0242 61 17                   		cmp	#1, r7
 405 0244 21 3A                   		bne	.L28
 410:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],OFFS_B(uPDrain_setting_data.Data, DRAINPUMP_CTR
 406                             		.loc 1 410 0
 407 0246 FB 72 00 00 00 00       		mov.L	#_uPDrain_setting_data, r7
 408 024c EC 77                   		mov.L	[r7], r7
 409 024e B0 F4                   		movu.B	2[r7], r4
 410 0250 75 14 19                		mul	#25, r4
 411 0253 68 84                   		shlr	#8, r4
 412 0255 C7 E4 0E                		mov.B	r4, 14[r14]
 413 0258 CD 7A 02                		mov.B	2[r7], r10
 414 025b 75 1A 19                		mul	#25, r10
 415 025e C7 EA 0F                		mov.B	r10, 15[r14]
 416 0261 59 7A 02                		movu.B	2[r7], r10
 417 0264 61 0A                   		cmp	#0, r10
 418 0266 FC DB A1                		scne.L	r10
 419 0269 C7 EA 0D                		mov.B	r10, 13[r14]
 411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],OFFS_B(uPDrain_setting_data.Data, DRAINPUMP_CTRL
 420                             		.loc 1 411 0
 421 026c B0 FC                   		movu.B	3[r7], r4
 422 026e 63 54                   		mul	#5, r4
 423 0270 68 84                   		shlr	#8, r4
 424 0272 C7 E4 10                		mov.B	r4, 16[r14]
 425 0275 88 FF                   		mov.B	3[r7], r7
 426 0277 63 57                   		mul	#5, r7
 427 0279 C7 E7 11                		mov.B	r7, 17[r14]
 428 027c 2E 16                   		bra	.L8
 429                             	.L28:
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_SPEED(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],0);
 430                             		.loc 1 415 0
 431 027e F9 E4 0E 00             		mov.B	#0, 14[r14]
 432 0282 F9 E4 0F 00             		mov.B	#0, 15[r14]
 433 0286 F9 E4 0D 00             		mov.B	#0, 13[r14]
 416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 			SET_BLDC_TIME(BLDC_PumpReq_New[DRAIN_BLDC_PUMP],0);
 434                             		.loc 1 416 0
 435 028a F9 E4 10 00             		mov.B	#0, 16[r14]
 436 028e F9 E4 11 00             		mov.B	#0, 17[r14]
 437                             	.LVL49:
 438                             		.balign 2,3,2
 439                             	.L8:
 422:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** }
 440                             		.loc 1 422 0
 441 0292 75 21 41                		and	#0x41, r1
 442 0295 3F 7B 05                		rtsd	#20, r7-r11
 443                             	.LFE2:
 445                             		.section	.text.DRN_uP_Drain_Exe,"ax",@progbits
 446                             		.global	_DRN_uP_Drain_Exe
 448                             	_DRN_uP_Drain_Exe:
 449                             	.LFB0:
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** {
 450                             		.loc 1 96 0
 451                             	.LVL50:
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	if ( (FALSE == Interpreter_Data[0].stepInitialized) || (FALSE == Interpreter_Data[0].optionalStepI
 452                             		.loc 1 100 0
 453 0000 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 454 0006 CD EE 04                		mov.B	4[r14], r14
 455 0009 64 6E                   		and	#6, r14
 456 000b 61 6E                   		cmp	#6, r14
 457 000d 21 06                   		bne	.L63
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 		nRet= DRN_StepMgmt(highStatement, lowStatement);
 458                             		.loc 1 137 0
 459 000f 04 00 00 00             		bra	_DRN_StepMgmt
 460                             	.LVL51:
 461                             	.L63:
 462                             	.LBB8:
 463                             	.LBB9:
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** 	uP_Drain_Data.step = DRAIN_INIT;
 464                             		.loc 1 160 0
 465 0013 FB E2 00 00 00 00       		mov.L	#_uP_Drain_Data, r14
 466 0019 F8 E4 00                		mov.B	#0, [r14]
 467                             	.LVL52:
 468                             	.LBE9:
 469                             	.LBE8:
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Drain.c **** }
 470                             		.loc 1 141 0
 471 001c 66 11                   		mov.L	#1, r1
 472                             	.LVL53:
 473 001e 02                      		rts
 474                             	.LFE0:
 540                             	.Letext0:
 541                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 542                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 543                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 544                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmDefines.h"
 545                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 546                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 547                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\PlatformLibrary\\LIB_IOManager/OutputManagerExp.h"
 548                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 549                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Modules/Drain.h"
 550                             		.file 11 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 551                             		.file 12 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Control/DW_Fault.h"
 552                             		.file 13 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmFuncLib.h"
