   1                             		.file	"ActivateAlgorithm.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.AAL_LevToTimeRefUpdate,"ax",@progbits
   5                             		.global	_AAL_LevToTimeRefUpdate
   7                             	_AAL_LevToTimeRefUpdate:
   8                             	.LFB2:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules/ActivateAlgorithm.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Source File 
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \file    ActivateAlgorithm.c
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \ingroup ActivateAlgorithm
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date    17/03/2008
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author  Valeria Catani
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version 1.0.0
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /*
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Copyright (c) 2004-2008, Indesit Company, EDT.
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Tutti i diritti sono riservati. All rights reserved.
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Old Versions
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version 
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date    
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author  
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ******** */
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Includes */
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ******** */
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #include "CstmHeaders.h"
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ****************** */
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Defines and Macros */
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ****************** */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #define AAL_GET_ALG_CODE(p)		OFFS_B((p), 0)
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #define AAL_GET_ALG_DATA(p)		OFFS_B((p), 1)
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #define TOUT_STAB_SENS_FILTER 	(OFFS_B(dirty_foam_setting_data.Data,3) & 0x7F)/*2sec*/
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #define TOUT_STAB_STATO3_FILTER  (OFFS_B(Tab_HWCVS_data.Data, 0)& 0x7F)/* def 5 sec */
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #define TOUT_END_ALYS3 			 ((dirty_foam_setting_data.DataLenght>2)?(OFFS_W(dirty_foam_setting_data.
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** enum
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	WASH_PUMP_ALG=0,
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	DRAIN_PUMP_ALG
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** };
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** enum AAL_TURBIDITY_ID_INDX
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     AAL_TURBIDITY_ONE_SHOT_R_ID=0,
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     AAL_TURBIDITY_CONT_R_ID,
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     AAL_TURBIDITY_VALIDATION_ID,
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     AAL_TURBIDITY_ID_NUM
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** };
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* *************************** */
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Typedef, Structs and Unions */
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* *************************** */
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** struct _Aal_TurbidityRead_s
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     uint8_t idReading[AAL_TURBIDITY_ID_NUM];   /*  0: one shot;  
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                                 1: continuous   
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                                 2: validation */
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** };
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** typedef struct _Aal_TurbidityRead_s Aal_TurbidityRead_t;
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* **************************** */
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Prototype of local functions */
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* **************************** */
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Algoritmi */
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_TurbiditySensorCalibration(uint8_t cmd);
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_LevToTimeRefUpdate(uint8_t cmd);
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ReadTurbidityContinuous(uint8_t cmd);
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ReadTurbidityOneShot(uint8_t cmd);
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ValidateTurbidityCalibration(uint8_t cmd);
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ReadVirtualSensor(uint8_t cmd);
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_Dirty_Foam_identify(uint8_t cmd);
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_Load_Restore (void);
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_Load_Var_Init (void);	
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Generale */
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** uint8_t ReadTurbidityManager(uint8_t cmd, uint8_t alg);
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ****************** */
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Exported variables */
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ****************** */
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Algorithm Tables */
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** const ALGORITHM_PTR AAL_algList[] = {
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	AAL_TurbiditySensorCalibration,     /* Alg 0 - Calibratione sensore di torbidit� */
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	AAL_LevToTimeRefUpdate,             /* Alg 1 - Calcolo tempo per pieno - portata */
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	AAL_Dirty_Foam_identify,			/* Alg 2 - Riconoscimento sporco /schiuma */
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	NullFunc,			                /* Alg 3 */
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	AAL_ReadVirtualSensor,	            /* EA per provaAlg 4 - Lettura del sensore virtuale */
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	AAL_ReadTurbidityContinuous,        /* Alg 5 - Lettura continua sensore di torbidit� */
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	AAL_ReadTurbidityOneShot,		    /* Alg 6 - Lettura one shot sensore di torbidit� */
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	AAL_ValidateTurbidityCalibration,	/* Alg 7 - Validazione sensore di torbidit� */
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****    
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** };
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* **************** */
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Global variables */
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* **************** */
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**/
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Aal_TurbidityRead_t Aal_TurbidityRead;
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ***************** */
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* Exported function */
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* ***************** */
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ReadVirtualSensor(uint8_t cmd)
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	switch(cmd)
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_ALG_INIT:
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		/* qui parta il timer */
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  {
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			Loader_Struct ReadVSDataLoader;
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			CLRBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS); /* reset flag overflow ripristini */	
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			CLRBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS); /* reset flag vuoto sensore in lavaggio */	
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if(BasicLoader(PTR_ALGORITHM_READ_VS_DATA, AADisplParams[AAL_READVIRTUALSENSOR_ALG][0] , &ReadVS
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        SETBIT(TerminatedAlgorithmBmp[0], AAL_READVIRTUALSENSOR_ALG);
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        CLRBIT(ActiveAlgorithmBmp[0],AAL_READVIRTUALSENSOR_ALG);
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			else
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{ /* OK */
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  (void)SWTC_SetMValue((SWTC_CountersType)READ_VS_M_TIMER, (SWTC_MCounterValue)OFFS_W(ReadVSData
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.pumpType=(OFFS_B(ReadVSDataLoader.Data, 0)&0x80)?DRAIN_PUMP_ALG:WASH_PUMP_ALG;
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.targetSpeed =(uint16_t)OFFS_B(ReadVSDataLoader.Data,2)*PUMP_CTRL_BLDC_SPEED_MUL;
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.targetRamp = OFFS_B(ReadVSDataLoader.Data,3)*PUMP_CTRL_BLDC_RAMP_TIME_MUL;
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.ctrl_active =  (OFFS_B(ReadVSDataLoader.Data,4)& 0x80)>>7;
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		    }
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  }
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  break;
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  case AAL_ALG_MONITOR:
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if (uPDoorStatus == UP_DOOR_WAIT)
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	{/* porta aperta o in attesa di timeout dopo la chiusura o delay MR-> il uP va sospeso */
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****    
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)READ_VS_M_TIMER);
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				return ;
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  (void)SWTC_Run((SWTC_CountersType)READ_VS_M_TIMER);
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****           {
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  uint8_t index = (ReadVS_Data.pumpType==DRAIN_PUMP_ALG)?DRAIN_BLDC_PUMP:WASH_BLDC_PUMP;
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  uint16_t speed, time;
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  if(SWTC_IsExpired((SWTC_CountersType)READ_VS_M_TIMER) && (ReadVS_Data.ctrl_active==0))
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  {
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  speed = 0;
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  time = 0;
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  (void)SWTC_Stop((SWTC_CountersType)READ_VS_M_TIMER);
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		          SETBIT(TerminatedAlgorithmBmp[0], AAL_READVIRTUALSENSOR_ALG);
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		          CLRBIT(ActiveAlgorithmBmp[0],AAL_READVIRTUALSENSOR_ALG);
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  }
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  else
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  {
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  speed = ReadVS_Data.targetSpeed;
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  time = ReadVS_Data.targetRamp;
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  }
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SET_BLDC_SPEED(BLDC_PumpReq_New[index],speed);
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SET_BLDC_TIME(BLDC_PumpReq_New[index],time);
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  }		  
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  break;
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  default:	
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****           case AAL_ALG_DISABLE:
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SETBIT(TerminatedAlgorithmBmp[0], AAL_READVIRTUALSENSOR_ALG);
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	          CLRBIT(ActiveAlgorithmBmp[0],AAL_READVIRTUALSENSOR_ALG);
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  break;
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}	 
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Funzione di richiesta calibrazione del sensore di torbisit�
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 			05/05/2008
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Roberto Fioravanti
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /*lint -e715
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Elimina il warning sul parametro cmd che non viene utilizzato
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_TurbiditySensorCalibration(uint8_t cmd)
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****   
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(!HWC_Flags.bit.turbsens)
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         /*esecuzione istantanea nell'ambito del passo */
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         SETBIT(TerminatedAlgorithmBmp[0], AAL_TURBIDITY_SENSOR_CAL_ALG);
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         CLRBIT(ActiveAlgorithmBmp[0],AAL_TURBIDITY_SENSOR_CAL_ALG);
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         return;
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****   
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if ( cmd == (uint8_t)AAL_ALG_INIT )
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****      /* TurbidityCalibrationCmd();*/ /*AE FIXME manca il modulo di piattaforma*/
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     else
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /*      if ( TurbiditySensorCal.state == (uint8_t)TURBSENS_VALID_CALIBR_VALUE_STATE )
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****       {
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             esecuzione istantanea nell'ambito del passo
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             SETBIT(TerminatedAlgorithmBmp[0], AAL_TURBIDITY_SENSOR_CAL_ALG);
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             CLRBIT(ActiveAlgorithmBmp[0],AAL_TURBIDITY_SENSOR_CAL_ALG);        
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****       }*/ /*AE FIXME Manca il modulo di piattaform */
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****       
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****    
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Funzione di richiesta aggiornamento portata storica, ovvero tempo per 
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** raggiungere il pieno pressostato.
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Il flag deve rimanere abilitato per tutta la durata del passo,
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** viene resettato nell'interpreter (init nuovo passo)
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 			17/03/2008
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Valeria Catani
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /*lint -e715
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Elimina il warning sul parametro cmd che non viene utilizzato
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_LevToTimeRefUpdate(uint8_t cmd)
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
  10                             		.loc 1 238 0
  11                             	.LVL0:
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	if ( HWC_Flags.bit.vs_wash_presence==0)
  12                             		.loc 1 239 0
  13 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
  14 0006 DC EE                   		mov.W	[r14], r14
  15 0008 76 2E 00 08             		and	#0x800, r14
  16 000c 5F EE                   		movu.W	r14, r14
  17 000e 61 0E                   		cmp	#0, r14
  18 0010 21 0B                   		bne	.L1
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	{/* EA con i sensori virtuali la portata storica non ha + senso,q uindi neanche l'agoritmo che non
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dovrebbe mai essere impostato da setting*/
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     	Flag_levTOtimeRef_update = TRUE;  
  19                             		.loc 1 243 0
  20 0012 FB E2 00 00 00 00       		mov.L	#_Flag_levTOtimeRef_update, r14
  21 0018 F8 E6 01                		mov.L	#1, [r14]
  22                             	.L1:
  23 001b 02                      		rts
  24                             	.LFE2:
  26                             		.section	.text.AAL_ReadVirtualSensor,"ax",@progbits
  27                             		.global	_AAL_ReadVirtualSensor
  29                             	_AAL_ReadVirtualSensor:
  30                             	.LFB0:
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
  31                             		.loc 1 117 0
  32                             	.LVL1:
  33 0000 6E 7B                   		pushm	r7-r11
  34                             	.LCFI0:
  35 0002 60 80                   		sub	#8, r0
  36                             	.LCFI1:
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	switch(cmd)
  37                             		.loc 1 119 0
  38 0004 5B 11                   		movu.B	r1, r1
  39 0006 61 01                   		cmp	#0, r1
  40 0008 20 6B                   		beq	.L5
  41 000a 61 11                   		cmp	#1, r1
  42 000c 3B F8 00                		bne	.L16
  43                             	.LBB2:
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			CLRBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS); /* reset flag vuoto sensore in lavaggio */	
  44                             		.loc 1 126 0
  45 000f FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
  46 0015 CC 7A                   		mov.B	[r7], r10
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if(BasicLoader(PTR_ALGORITHM_READ_VS_DATA, AADisplParams[AAL_READVIRTUALSENSOR_ALG][0] , &ReadVS
  47                             		.loc 1 127 0
  48 0017 75 41 2C                		mov	#44, r1
  49                             	.LVL2:
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			CLRBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS); /* reset flag vuoto sensore in lavaggio */	
  50                             		.loc 1 126 0
  51 001a 75 2A DE                		and	#-34, r10
  52 001d C3 7A                   		mov.B	r10, [r7]
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if(BasicLoader(PTR_ALGORITHM_READ_VS_DATA, AADisplParams[AAL_READVIRTUALSENSOR_ALG][0] , &ReadVS
  53                             		.loc 1 127 0
  54 001f FB 72 00 00 00 00       		mov.L	#_AADisplParams, r7
  55 0025 89 72                   		mov.B	4[r7], r2
  56 0027 EF 03                   		mov.L	r0, r3
  57 0029 05 00 00 00             		bsr	_BasicLoader
  58                             	.LVL3:
  59 002d 5B 11                   		movu.B	r1, r1
  60 002f 61 01                   		cmp	#0, r1
  61 0031 20 05                   		beq	.L7
  62 0033 38 D1 00                		bra	.L16
  63                             	.L7:
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  (void)SWTC_SetMValue((SWTC_CountersType)READ_VS_M_TIMER, (SWTC_MCounterValue)OFFS_W(ReadVSData
  64                             		.loc 1 135 0
  65 0036 EC 07                   		mov.L	[r0], r7
  66 0038 75 41 2B                		mov	#43, r1
  67 003b DC 72                   		mov.W	[r7], r2
  68 003d 76 22 FF 7F             		and	#0x7fff, r2
  69 0041 05 00 00 00             		bsr	_SWTC_SetMValue
  70                             	.LVL4:
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.pumpType=(OFFS_B(ReadVSDataLoader.Data, 0)&0x80)?DRAIN_PUMP_ALG:WASH_PUMP_ALG;
  71                             		.loc 1 136 0
  72 0045 EC 04                   		mov.L	[r0], r4
  73 0047 FB E2 00 00 00 00       		mov.L	#_ReadVS_Data, r14
  74 004d CC 47                   		mov.B	[r4], r7
  75 004f CC E3                   		mov.B	[r14], r3
  76 0051 61 07                   		cmp	#0, r7
  77 0053 FD E7 93                		bmlt	#7, r3
  78 0056 C3 E3                   		mov.B	r3, [r14]
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.targetSpeed =(uint16_t)OFFS_B(ReadVSDataLoader.Data,2)*PUMP_CTRL_BLDC_SPEED_MUL;
  79                             		.loc 1 137 0
  80 0058 B0 C2                   		movu.B	2[r4], r2
  81 005a 75 12 19                		mul	#25, r2
  82 005d D7 E2 02                		mov.W	r2, 4[r14]
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.targetRamp = OFFS_B(ReadVSDataLoader.Data,3)*PUMP_CTRL_BLDC_RAMP_TIME_MUL;
  83                             		.loc 1 138 0
  84 0060 B0 CA                   		movu.B	3[r4], r2
  85 0062 63 52                   		mul	#5, r2
  86 0064 D7 E2 03                		mov.W	r2, 6[r14]
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  ReadVS_Data.ctrl_active =  (OFFS_B(ReadVSDataLoader.Data,4)& 0x80)>>7;
  87                             		.loc 1 139 0
  88 0067 89 47                   		mov.B	4[r4], r7
  89 0069 61 07                   		cmp	#0, r7
  90 006b FD E6 93                		bmlt	#6, r3
  91 006e C3 E3                   		mov.B	r3, [r14]
  92                             	.LBE2:
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  break;
  93                             		.loc 1 142 0
  94 0070 38 AE 00                		bra	.L3
  95                             	.L5:
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if (uPDoorStatus == UP_DOOR_WAIT)
  96                             		.loc 1 146 0
  97 0073 FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
  98 0079 58 77                   		movu.B	[r7], r7
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)READ_VS_M_TIMER);
  99                             		.loc 1 149 0
 100 007b 75 41 2B                		mov	#43, r1
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if (uPDoorStatus == UP_DOOR_WAIT)
 101                             		.loc 1 146 0
 102 007e 61 07                   		cmp	#0, r7
 103 0080 21 09                   		bne	.L10
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)READ_VS_M_TIMER);
 104                             		.loc 1 149 0
 105 0082 05 00 00 00             		bsr	_SWTC_Stop
 106                             	.LVL5:
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				return ;
 107                             		.loc 1 150 0
 108 0086 38 98 00                		bra	.L3
 109                             	.L10:
 110                             	.LBB3:
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  uint8_t index = (ReadVS_Data.pumpType==DRAIN_PUMP_ALG)?DRAIN_BLDC_PUMP:WASH_BLDC_PUMP;
 111                             		.loc 1 156 0
 112 0089 FB 72 00 00 00 00       		mov.L	#_ReadVS_Data, r7
 113                             	.LBE3:
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  (void)SWTC_Run((SWTC_CountersType)READ_VS_M_TIMER);
 114                             		.loc 1 154 0
 115 008f 05 00 00 00             		bsr	_SWTC_Run
 116                             	.LVL6:
 117                             	.LBB4:
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  uint8_t index = (ReadVS_Data.pumpType==DRAIN_PUMP_ALG)?DRAIN_BLDC_PUMP:WASH_BLDC_PUMP;
 118                             		.loc 1 156 0
 119 0093 5C 7B                   		movu.W	[r7], r11
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  if(SWTC_IsExpired((SWTC_CountersType)READ_VS_M_TIMER) && (ReadVS_Data.ctrl_active==0))
 120                             		.loc 1 159 0
 121 0095 75 41 2B                		mov	#43, r1
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  uint8_t index = (ReadVS_Data.pumpType==DRAIN_PUMP_ALG)?DRAIN_BLDC_PUMP:WASH_BLDC_PUMP;
 122                             		.loc 1 156 0
 123 0098 68 FB                   		shlr	#15, r11
 124                             	.LVL7:
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  if(SWTC_IsExpired((SWTC_CountersType)READ_VS_M_TIMER) && (ReadVS_Data.ctrl_active==0))
 125                             		.loc 1 159 0
 126 009a 05 00 00 00             		bsr	_SWTC_IsExpired
 127                             	.LVL8:
 128 009e 61 01                   		cmp	#0, r1
 129 00a0 20 31                   		beq	.L11
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  if(SWTC_IsExpired((SWTC_CountersType)READ_VS_M_TIMER) && (ReadVS_Data.ctrl_active==0))
 130                             		.loc 1 159 0 is_stmt 0 discriminator 1
 131 00a2 DC 77                   		mov.W	[r7], r7
 132 00a4 76 27 00 40             		and	#0x4000, r7
 133 00a8 21 29                   		bne	.L11
 134                             	.LVL9:
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  (void)SWTC_Stop((SWTC_CountersType)READ_VS_M_TIMER);
 135                             		.loc 1 163 0 is_stmt 1
 136 00aa 75 41 2B                		mov	#43, r1
 137 00ad 05 00 00 00             		bsr	_SWTC_Stop
 138                             	.LVL10:
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		          SETBIT(TerminatedAlgorithmBmp[0], AAL_READVIRTUALSENSOR_ALG);
 139                             		.loc 1 164 0
 140 00b1 FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
 141 00b7 CC E4                   		mov.B	[r14], r4
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  speed = 0;
 142                             		.loc 1 161 0
 143 00b9 DF 73                   		mov.W	r7, r3
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		          SETBIT(TerminatedAlgorithmBmp[0], AAL_READVIRTUALSENSOR_ALG);
 144                             		.loc 1 164 0
 145 00bb 75 34 10                		or	#16, r4
 146 00be C3 E4                   		mov.B	r4, [r14]
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		          CLRBIT(ActiveAlgorithmBmp[0],AAL_READVIRTUALSENSOR_ALG);
 147                             		.loc 1 165 0
 148 00c0 FB 42 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r4
 149 00c6 CC 4E                   		mov.B	[r4], r14
 150 00c8 75 2E EF                		and	#-17, r14
 151 00cb C3 4E                   		mov.B	r14, [r4]
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  time = 0;
 152                             		.loc 1 162 0
 153 00cd DF 74                   		mov.W	r7, r4
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		          CLRBIT(ActiveAlgorithmBmp[0],AAL_READVIRTUALSENSOR_ALG);
 154                             		.loc 1 165 0
 155 00cf 2E 0D                   		bra	.L12
 156                             	.LVL11:
 157                             	.L11:
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  speed = ReadVS_Data.targetSpeed;
 158                             		.loc 1 169 0
 159 00d1 FB 72 00 00 00 00       		mov.L	#_ReadVS_Data, r7
 160 00d7 98 F3                   		mov.W	4[r7], r3
 161                             	.LVL12:
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				  time = ReadVS_Data.targetRamp;
 162                             		.loc 1 170 0
 163 00d9 98 FC                   		mov.W	6[r7], r4
 164                             	.LVL13:
 165 00db 03                      		.balign 2,3,1
 166                             	.L12:
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SET_BLDC_SPEED(BLDC_PumpReq_New[index],speed);
 167                             		.loc 1 173 0
 168 00dc 5B BE                   		movu.B	r11, r14
 169 00de 5F 37                   		movu.W	r3, r7
 170 00e0 63 CE                   		mul	#12, r14
 171 00e2 70 EE 00 00 00 00       		add	#_BLDC_PumpReq_New, r14
 172 00e8 FD 88 7A                		shlr	#8, r7, r10
 173 00eb 61 07                   		cmp	#0, r7
 174 00ed FC DB 71                		scne.L	r7
 175 00f0 C7 E7 01                		mov.B	r7, 1[r14]
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SET_BLDC_TIME(BLDC_PumpReq_New[index],time);
 176                             		.loc 1 174 0
 177 00f3 FD 88 47                		shlr	#8, r4, r7
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SET_BLDC_SPEED(BLDC_PumpReq_New[index],speed);
 178                             		.loc 1 173 0
 179 00f6 C7 EA 02                		mov.B	r10, 2[r14]
 180 00f9 C7 E3 03                		mov.B	r3, 3[r14]
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SET_BLDC_TIME(BLDC_PumpReq_New[index],time);
 181                             		.loc 1 174 0
 182 00fc C7 E7 04                		mov.B	r7, 4[r14]
 183 00ff C7 E4 05                		mov.B	r4, 5[r14]
 184                             	.LBE4:
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  break;
 185                             		.loc 1 176 0
 186 0102 2E 1C                   		bra	.L3
 187                             	.LVL14:
 188                             	.L16:
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  SETBIT(TerminatedAlgorithmBmp[0], AAL_READVIRTUALSENSOR_ALG);
 189                             		.loc 1 179 0
 190 0104 FB 72 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r7
 191 010a CC 7A                   		mov.B	[r7], r10
 192 010c 75 3A 10                		or	#16, r10
 193 010f C3 7A                   		mov.B	r10, [r7]
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	          CLRBIT(ActiveAlgorithmBmp[0],AAL_READVIRTUALSENSOR_ALG);
 194                             		.loc 1 180 0
 195 0111 FB 72 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r7
 196 0117 CC 7A                   		mov.B	[r7], r10
 197 0119 75 2A EF                		and	#-17, r10
 198 011c C3 7A                   		mov.B	r10, [r7]
 199                             		.balign 2,3,2
 200                             	.L3:
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 201                             		.loc 1 183 0
 202 011e 3F 7B 07                		rtsd	#28, r7-r11
 203                             	.LFE0:
 205 0121 03                      		.section	.text.AAL_TurbiditySensorCalibration,"ax",@progbits
 206                             		.global	_AAL_TurbiditySensorCalibration
 208                             	_AAL_TurbiditySensorCalibration:
 209                             	.LFB1:
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 210                             		.loc 1 197 0
 211                             	.LVL15:
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(!HWC_Flags.bit.turbsens)
 212                             		.loc 1 199 0
 213 0000 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 214 0006 DC EE                   		mov.W	[r14], r14
 215 0008 77 2E 00 80 00          		and	#0x8000, r14
 216 000d 5F EE                   		movu.W	r14, r14
 217 000f 61 0E                   		cmp	#0, r14
 218 0011 21 1B                   		bne	.L18
 219                             	.LBB7:
 220                             	.LBB8:
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         SETBIT(TerminatedAlgorithmBmp[0], AAL_TURBIDITY_SENSOR_CAL_ALG);
 221                             		.loc 1 202 0
 222 0013 FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
 223 0019 CC E4                   		mov.B	[r14], r4
 224 001b 65 14                   		or	#1, r4
 225 001d C3 E4                   		mov.B	r4, [r14]
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         CLRBIT(ActiveAlgorithmBmp[0],AAL_TURBIDITY_SENSOR_CAL_ALG);
 226                             		.loc 1 203 0
 227 001f FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r14
 228 0025 CC E4                   		mov.B	[r14], r4
 229 0027 75 24 FE                		and	#-2, r4
 230 002a C3 E4                   		mov.B	r4, [r14]
 231                             	.L18:
 232 002c 02                      		rts
 233                             	.LBE8:
 234                             	.LBE7:
 235                             	.LFE1:
 237                             		.section	.text.ReadTurbidityManager,"ax",@progbits
 238                             		.global	_ReadTurbidityManager
 240                             	_ReadTurbidityManager:
 241                             	.LFB6:
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     /* reset attiva funzione nell'init nuovo passo (interpreter) */
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     /*SETBIT(TerminatedAlgorithmBmp, AAL_LEV_TO_TIME_REF_UPDATE_ALG);*/
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     /*CLRBIT(ActiveAlgorithmBmp,AAL_LEV_TO_TIME_REF_UPDATE_ALG);*/
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Funzione di richiesta lettura sensore di torbidit� in modo continuo
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     uint8_t cmd
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par \b cmd comando
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     valori supportati:
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     vedi ReadTurbidityManager
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return         none
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 			21/05/2008
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Roberto Fioravanti
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ReadTurbidityContinuous(uint8_t cmd)
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     ReadTurbidityManager(cmd,(uint8_t)AAL_TURBIDITY_READ_CONTINUOUS);
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 268:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
 272:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Funzione di richiesta lettura sensore di torbidit� in modo one-shot
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     uint8_t cmd
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par \b cmd comando
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     valori supportati:
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     vedi ReadTurbidityManager
 278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return         none
 280:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 			21/05/2008
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Roberto Fioravanti
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ReadTurbidityOneShot(uint8_t cmd)
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(TRUE==ReadTurbidityManager(cmd,AAL_TURBIDITY_READ_ONESHOT)) 
 288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {			
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #ifdef _STATISTICS_ON_			    
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         STC_Add_LastCycle_turbPerc_turbCalType();
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #endif        
 292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Funzione di validazione calibrazione del sensore di torbidit�
 297:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     uint8_t cmd
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par \b cmd comando
 300:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     valori supportati:
 301:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     vedi ReadTurbidityManager
 302:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 303:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return         none
 304:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 305:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 		    15/07/2008
 307:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Roberto Fioravanti
 308:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_ValidateTurbidityCalibration(uint8_t cmd)
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(!HWC_Flags.bit.turbsens)
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 313:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         /*esecuzione istantanea nell'ambito del passo */
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         SETBIT(TerminatedAlgorithmBmp[0], AAL_TURBIDITY_VALIDATE_CALIB);
 315:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         CLRBIT(ActiveAlgorithmBmp[0],AAL_TURBIDITY_VALIDATE_CALIB);
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         return;
 317:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(TurbiditySensorCal.val==TURBIDITY_PWM_MIN)
 320:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 321:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         SETBIT(TerminatedAlgorithmBmp[0], AAL_TURBIDITY_VALIDATE_CALIB);
 322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         CLRBIT(ActiveAlgorithmBmp[0],AAL_TURBIDITY_VALIDATE_CALIB);
 323:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         return;
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(TRUE == ReadTurbidityManager(cmd,AAL_TURBIDITY_VALIDATE_CALIB))
 326:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         if((TurbidityReads.ADvalue<TURBIDITY_AIR_MIN_ADVAL))
 328:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         {
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.val=TURBIDITY_PWM_MIN;
 330:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.adH2oRef=TURBIDITY_H2O_DEFAULT_ADVAL;
 331:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         }
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         else if((TurbidityReads.ADvalue>TURBIDITY_AIR_MAX_ADVAL))
 333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         {
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.val=TURBIDITY_PWM_MIN;
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.adH2oRef=TURBIDITY_H2O_DEFAULT_ADVAL;
 336:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         }
 337:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         else
 338:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         {
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             /* lettura in range */
 340:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             /*TurbiditySensorCal.adH2oRef=TurbidityReads.ADvalue;*/
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         }
 342:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 343:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		SETBIT(TerminatedAlgorithmBmp[0], AAL_TURBIDITY_VALIDATE_CALIB);
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         CLRBIT(ActiveAlgorithmBmp[0],AAL_TURBIDITY_VALIDATE_CALIB);
 345:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 346:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 347:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 348:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
 349:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Manager lettura sensore di torbidit� da algoritmo eseguito nell'algoritmo.
 350:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 351:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     uint8_t cmd
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     uint8_t mode
 353:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return         none
 354:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 355:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par \b cmd comando
 356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     valori supportati:
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_ALG_INIT
 358:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Avvia la lettura
 359:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_ALG_MONITOR
 360:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Attende la disponibilit� della lettura
 361:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_ALG_DISABLE
 362:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Disabilita l'algoritmo
 363:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 364:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par alg\b algoritmo
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     valori supportati:
 366:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_TURBIDITY_READ_ONESHOT
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_TURBIDITY_VALIDATE_CALIB
 368:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Attiva la lettura del sensore di torbidit� in due modi possibili:
 369:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     lettura continua (CONTINUOUS) e one-shot (ONE_SHOT_MODE).
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 371:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_TURBIDITY_READ_CONTINUOUS
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Avvia la letttura nella modalit� CONTINUOUS.
 373:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     L'algoritmo pu� essere terminato disattivando l'algoritmo.
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 375:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return     uint8_t
 376:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \retvalue   TRUE        Lettura completata
 377:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \retvalue   FALSE       Lettura in corso
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 379:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 380:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 			21/05/2008
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Roberto Fioravanti
 382:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** uint8_t ReadTurbidityManager(uint8_t cmd, uint8_t alg)
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 242                             		.loc 1 384 0
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     uint8_t ret=FALSE;
 386:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     uint8_t idReading=TurbidityReads.id;
 243                             		.loc 1 386 0
 244 0000 FB E2 00 00 00 00       		mov.L	#_TurbidityReads, r14
 245 0006 CD E3 08                		mov.B	8[r14], r3
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 388:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     /* indice letture */
 389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     uint8_t indexId;
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     switch(alg)
 246                             		.loc 1 390 0
 247 0009 5B 2E                   		movu.B	r2, r14
 248 000b 61 6E                   		cmp	#6, r14
 249 000d 20 14                   		beq	.L30
 250                             		.loc 1 390 0
 251 000f 61 7E                   		cmp	#7, r14
 252 0011 20 08                   		beq	.L24
 253 0013 61 5E                   		cmp	#5, r14
 254 0015 21 6B                   		bne	.L33
 255 0017 2E 06                   		bra	.L22
 256                             	.L24:
 391:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 392:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_TURBIDITY_VALIDATE_CALIB:
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             indexId=(uint8_t)AAL_TURBIDITY_VALIDATION_ID;
 257                             		.loc 1 393 0
 258 0019 66 2E                   		mov	#2, r14
 259 001b 2E 09                   		bra	.L23
 260                             	.L22:
 394:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****            break;
 395:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_TURBIDITY_READ_ONESHOT:
 396:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             indexId=(uint8_t)AAL_TURBIDITY_ONE_SHOT_R_ID;
 397:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****            break;
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_TURBIDITY_READ_CONTINUOUS:
 399:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             indexId=(uint8_t)AAL_TURBIDITY_CONT_R_ID;
 261                             		.loc 1 399 0
 262 001d 66 1E                   		mov	#1, r14
 400:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****            break;
 263                             		.loc 1 400 0
 264 001f 2E 05                   		bra	.L23
 265                             	.L30:
 396:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             indexId=(uint8_t)AAL_TURBIDITY_ONE_SHOT_R_ID;
 266                             		.loc 1 396 0
 267 0021 66 0E                   		mov	#0, r14
 268 0023 03                      		.balign 2,3,5
 269                             	.L23:
 401:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         default:
 402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             return TRUE;
 403:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 404:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 405:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(!HWC_Flags.bit.turbsens)
 270                             		.loc 1 405 0
 271 0024 FB 42 00 00 00 00       		mov.L	#_HWC_Flags, r4
 272 002a DC 44                   		mov.W	[r4], r4
 273 002c 77 24 00 80 00          		and	#0x8000, r4
 274 0031 5F 44                   		movu.W	r4, r4
 275 0033 61 04                   		cmp	#0, r4
 276 0035 21 2A                   		bne	.L25
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 277                             		.loc 1 384 0
 278 0037 7E A7                   		push.l	r7
 279                             	.LCFI2:
 280                             	.LBB11:
 281                             	.LBB12:
 406:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 407:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         /*esecuzione istantanea nell'ambito del passo */
 408:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         SETBIT(TerminatedAlgorithmBmp[0], alg);
 282                             		.loc 1 408 0
 283 0039 FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
 284 003f 66 11                   		mov.L	#1, r1
 285 0041 CC E4                   		mov.B	[r14], r4
 286 0043 5B 22                   		movu.B	r2, r2
 287 0045 EF 17                   		mov.L	r1, r7
 288 0047 FD 62 27                		shll	r2, r7
 289 004a EF 72                   		mov.L	r7, r2
 290 004c 57 74                   		or	r7, r4
 291 004e C3 E4                   		mov.B	r4, [r14]
 409:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         CLRBIT(ActiveAlgorithmBmp[0],alg);
 292                             		.loc 1 409 0
 293 0050 7E 02                   		not	r2
 294 0052 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r14
 295 0058 06 10 E2                		and	[r14].B, r2
 296 005b C3 E2                   		mov.B	r2, [r14]
 297 005d 2E 27                   		bra	.L21
 298                             	.L25:
 299                             	.LCFI3:
 300                             	.LBE12:
 301                             	.LBE11:
 410:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         return TRUE;
 411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 412:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 413:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     switch(cmd)
 302                             		.loc 1 413 0
 303 005f 5B 14                   		movu.B	r1, r4
 304 0061 61 04                   		cmp	#0, r4
 305 0063 20 0A                   		beq	.L26
 414:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_ALG_INIT:
 416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /*            Aal_TurbidityRead.idReading[indexId]=idReading;
 417:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             HIO_trbReadEnable((uint8_t)TURBSENS_READ_al_TRB_OS+indexId);*/
 418:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /*AE FIXME manca il modulo di piattaforma */
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****               
 420:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         break;
 421:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             
 422:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_ALG_MONITOR:
 423:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             switch(alg)
 424:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             {
 425:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                 /* singola lettura */
 426:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                 case AAL_TURBIDITY_VALIDATE_CALIB:
 427:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                 case AAL_TURBIDITY_READ_ONESHOT:
 428:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     
 429:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                    /* if((idReading != Aal_TurbidityRead.idReading[indexId]) && (GIValid & GI_TURB_
 430:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     {
 431:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                          l'algoritmo pu� terminare
 432:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                         Aal_TurbidityRead.idReading[indexId]=idReading;
 433:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                         
 434:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                         SETBIT(TerminatedAlgorithmBmp[0], alg);
 435:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                         CLRBIT(ActiveAlgorithmBmp[0],alg);
 436:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 437:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                         HIO_trbReadDisable((uint8_t)TURBSENS_READ_al_TRB_OS+indexId);
 438:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 439:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 440:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                         ret=TRUE;
 441:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     }*/ /*AE FIXME manca il modulo di piattaforma*/
 442:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     break;
 443:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                 
 444:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                 /* lettura continua */
 445:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                 case AAL_TURBIDITY_READ_CONTINUOUS:
 446:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     Aal_TurbidityRead.idReading[indexId]=idReading;
 447:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     break;
 448:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             }
 449:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			
 450:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		    break;
 451:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 452:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		default:	
 453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_ALG_DISABLE:
 454:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             /* l'algoritmo pu� terminare */            
 455:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****        /*     HIO_trbReadDisable((uint8_t)TURBSENS_READ_al_TRB_OS+indexId);*/ /*AE FIXME manca il m
 456:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             ret=TRUE;        
 306                             		.loc 1 456 0
 307 0065 61 14                   		cmp	#1, r4
 308 0067 FC DB 11                		scne.L	r1
 309                             		.balign 2,3,1
 310                             	.L36:
 457:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     }
 458:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 459:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     return ret;
 460:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 311                             		.loc 1 460 0
 312 006a 5B 11                   		movu.B	r1, r1
 313 006c 02                      		rts
 314                             	.L26:
 423:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             switch(alg)
 315                             		.loc 1 423 0
 316 006d 5B 22                   		movu.B	r2, r2
 317 006f 61 52                   		cmp	#5, r2
 318 0071 21 F9                   		bne	.L36
 446:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     Aal_TurbidityRead.idReading[indexId]=idReading;
 319                             		.loc 1 446 0
 320 0073 5B EE                   		movu.B	r14, r14
 321 0075 FB 42 00 00 00 00       		mov.L	#_Aal_TurbidityRead, r4
 322 007b FE 0E 43                		mov.B	r3, [r14,r4]
 447:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****                     break;
 323                             		.loc 1 447 0
 324 007e 2E EC                   		bra	.L36
 325                             	.L33:
 402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             return TRUE;
 326                             		.loc 1 402 0
 327 0080 66 11                   		mov	#1, r1
 328 0082 2E E8                   		bra	.L36
 329                             	.L21:
 330                             	.LCFI4:
 331                             		.loc 1 460 0
 332 0084 5B 11                   		movu.B	r1, r1
 333 0086 3F 77 01                		rtsd	#4, r7-r7
 334                             	.LFE6:
 336 0089 03                      		.section	.text.AAL_ValidateTurbidityCalibration,"ax",@progbits
 337                             		.global	_AAL_ValidateTurbidityCalibration
 339                             	_AAL_ValidateTurbidityCalibration:
 340                             	.LFB5:
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 341                             		.loc 1 310 0
 342                             	.LVL16:
 343 0000 6E 7A                   		pushm	r7-r10
 344                             	.LCFI5:
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(!HWC_Flags.bit.turbsens)
 345                             		.loc 1 311 0
 346 0002 FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 347 0008 DC 77                   		mov.W	[r7], r7
 348 000a 77 27 00 80 00          		and	#0x8000, r7
 349 000f 5F 77                   		movu.W	r7, r7
 350 0011 61 07                   		cmp	#0, r7
 351 0013 21 04                   		bne	.L38
 352 0015 2E 4B                   		bra	.L42
 353                             	.L38:
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(TurbiditySensorCal.val==TURBIDITY_PWM_MIN)
 354                             		.loc 1 319 0
 355 0017 FB 72 00 00 00 00       		mov.L	#_TurbiditySensorCal, r7
 356 001d FB A2 00 00 00 00       		mov.L	#_Tab_HWCTurbidity, r10
 357 0023 EC AE                   		mov.L	[r10], r14
 358 0025 5C 74                   		movu.W	[r7], r4
 359 0027 06 C5 E4 05             		cmp	10[r14].UW, r4
 360 002b 21 04                   		bne	.L40
 361 002d 2E 33                   		bra	.L42
 362                             	.L40:
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(TRUE == ReadTurbidityManager(cmd,AAL_TURBIDITY_VALIDATE_CALIB))
 363                             		.loc 1 325 0
 364 002f 66 72                   		mov	#7, r2
 365 0031 05 00 00 00             		bsr	_ReadTurbidityManager
 366                             	.LVL17:
 367 0035 5B 11                   		movu.B	r1, r1
 368 0037 61 11                   		cmp	#1, r1
 369 0039 21 41                   		bne	.L37
 370                             	.LBB15:
 371                             	.LBB16:
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         if((TurbidityReads.ADvalue<TURBIDITY_AIR_MIN_ADVAL))
 372                             		.loc 1 327 0
 373 003b EC AE                   		mov.L	[r10], r14
 374 003d FB A2 00 00 00 00       		mov.L	#_TurbidityReads, r10
 375 0043 5D AA 02                		movu.W	4[r10], r10
 376 0046 06 C5 EA 03             		cmp	6[r14].UW, r10
 377 004a 22 04                   		bgeu	.L41
 378 004c 2E 08                   		bra	.L44
 379                             	.L41:
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         else if((TurbidityReads.ADvalue>TURBIDITY_AIR_MAX_ADVAL))
 380                             		.loc 1 332 0
 381 004e 06 C5 EA 04             		cmp	8[r14].UW, r10
 382 0052 25 0E                   		bleu	.L42
 383                             		.balign 2,3,5
 384                             	.L44:
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.val=TURBIDITY_PWM_MIN;
 385                             		.loc 1 334 0
 386 0054 DD EA 05                		mov.W	10[r14], r10
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.adH2oRef=TURBIDITY_H2O_DEFAULT_ADVAL;
 387                             		.loc 1 335 0
 388 0057 DD EE 06                		mov.W	12[r14], r14
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.val=TURBIDITY_PWM_MIN;
 389                             		.loc 1 334 0
 390 005a D3 7A                   		mov.W	r10, [r7]
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****             TurbiditySensorCal.adH2oRef=TURBIDITY_H2O_DEFAULT_ADVAL;
 391                             		.loc 1 335 0
 392 005c D7 7E 01                		mov.W	r14, 2[r7]
 393 005f 03                      		.balign 2,3,5
 394                             	.L42:
 343:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		SETBIT(TerminatedAlgorithmBmp[0], AAL_TURBIDITY_VALIDATE_CALIB);
 395                             		.loc 1 343 0
 396 0060 FB 72 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r7
 397 0066 CC 7A                   		mov.B	[r7], r10
 398 0068 75 3A 80                		or	#0xffffff80, r10
 399 006b C3 7A                   		mov.B	r10, [r7]
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         CLRBIT(ActiveAlgorithmBmp[0],AAL_TURBIDITY_VALIDATE_CALIB);
 400                             		.loc 1 344 0
 401 006d FB 72 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r7
 402 0073 CC 7A                   		mov.B	[r7], r10
 403 0075 75 2A 7F                		and	#0x7f, r10
 404 0078 C3 7A                   		mov.B	r10, [r7]
 405                             		.balign 2,3,2
 406                             	.L37:
 407                             	.LBE16:
 408                             	.LBE15:
 346:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 409                             		.loc 1 346 0
 410 007a 3F 7A 04                		rtsd	#16, r7-r10
 411                             	.LFE5:
 413 007d 03                      		.section	.text.AAL_ReadTurbidityOneShot,"ax",@progbits
 414                             		.global	_AAL_ReadTurbidityOneShot
 416                             	_AAL_ReadTurbidityOneShot:
 417                             	.LFB4:
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 418                             		.loc 1 286 0
 419                             	.LVL18:
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     if(TRUE==ReadTurbidityManager(cmd,AAL_TURBIDITY_READ_ONESHOT)) 
 420                             		.loc 1 287 0
 421 0000 66 62                   		mov	#6, r2
 422 0002 05 00 00 00             		bsr	_ReadTurbidityManager
 423                             	.LVL19:
 424 0006 5B 11                   		movu.B	r1, r1
 425 0008 61 11                   		cmp	#1, r1
 426 000a 21 06                   		bne	.L45
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         STC_Add_LastCycle_turbPerc_turbCalType();
 427                             		.loc 1 290 0
 428 000c 04 00 00 00             		bra	_STC_Add_LastCycle_turbPerc_turbCalType
 429                             	.LVL20:
 430                             	.L45:
 431 0010 02                      		rts
 432                             	.LFE4:
 434                             		.section	.text.AAL_ReadTurbidityContinuous,"ax",@progbits
 435                             		.global	_AAL_ReadTurbidityContinuous
 437                             	_AAL_ReadTurbidityContinuous:
 438                             	.LFB3:
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 439                             		.loc 1 265 0
 440                             	.LVL21:
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     ReadTurbidityManager(cmd,(uint8_t)AAL_TURBIDITY_READ_CONTINUOUS);
 441                             		.loc 1 266 0
 442 0000 66 52                   		mov	#5, r2
 443 0002 04 00 00 00             		bra	_ReadTurbidityManager
 444                             	.LVL22:
 445                             	.LFE3:
 447                             		.section	.text.AAL_Load_Restore,"ax",@progbits
 448                             		.global	_AAL_Load_Restore
 450                             	_AAL_Load_Restore:
 451                             	.LFB8:
 461:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 462:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /**
 463:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Manager algoritmo riconoscimento sporco schiuma.
 464:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 465:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     uint8_t cmd
 466:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     uint8_t 
 467:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return         none
 468:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 469:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par \b cmd comando
 470:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     valori supportati:
 471:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_ALG_INIT
 472:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Avvia la lettura
 473:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_ALG_DISABLE
 474:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Disabilita l'algoritmo
 475:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 476:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par alg\b algoritmo
 477:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     valori supportati:
 478:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b 
 479:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 480:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     \b AAL_TURBIDITY_READ_CONTINUOUS
 481:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     Avvia la letttura nella modalit� CONTINUOUS.
 482:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     L'algoritmo pu� essere terminato disattivando l'algoritmo.
 483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 484:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return     uint8_t
 485:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \retvalue   TRUE        Lettura completata
 486:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \retvalue   FALSE       Lettura in corso
 487:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 488:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 489:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 			11/01/2012
 490:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Emanuela Antognoli
 491:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 492:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_Dirty_Foam_identify(uint8_t cmd)
 493:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 494:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 495:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	switch(cmd)
 496:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {
 497:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         case AAL_ALG_INIT:
 498:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		/* qui parta il timer */
 499:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 500:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if((HWC_Flags.bit.vs_wash_presence == 0) ||(BasicLoader(PTR_ALGORITHM_DATA, DIRTY_FOAM_DISPL , &
 501:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{
 502:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				 
 503:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        SETBIT(TerminatedAlgorithmBmp[0], AAL_DIRTY_FOAM_IDENTIFY_ALG);
 504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        CLRBIT(ActiveAlgorithmBmp[0],AAL_DIRTY_FOAM_IDENTIFY_ALG);
 505:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				dirty_foam_Data.reduc_speed=0;
 506:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}else
 507:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 508:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{ /* OK */
 509:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				 dirty_foam_Data.fullPulseIn = 0;                  /* init var per conteggio impulsi entranti i
 510:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				/* algoritmo di riconoscimento sporco / schiuma */
 511:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				dirty_foam_Data.status = ALGO_SV_WAIT;
 512:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		    }
 513:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 	CLRBIT(Flags_2, FLAG2_CLOGGED_FILTER);
 514:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #ifdef _STATISTICS_ON_	
 515:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			CLRBIT(Statistics_update_flag, STATISTIC_FLAG_DIRTY_UPDATE);
 516:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #endif
 517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 	(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_
 518:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			(void)SWTC_Stop((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);
 519:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			break;
 520:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 521:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		case AAL_ALG_MONITOR:
 522:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 523:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 524:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if (uPDoorStatus == UP_DOOR_WAIT)
 525:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	{/* porta aperta o in attesa di timeout dopo la chiusura o delay MR-> il uP va sospeso */
 526:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****    
 527:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER);
 528:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);
 529:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)AAL_STAB_SENS_S_TIMER);
 530:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				(void)SWTC_Stop((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER);
 531:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				(void)SWTC_Stop((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);
 532:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				return ;
 533:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    
 534:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}
 535:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			 		  
 536:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	if ( dirty_foam_Data.status==ALGO_LOAD_RESTORE)
 537:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{/* deve essere fatto sia se il sensore ha un valore valido che invalido*/
 538:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				AAL_Load_Restore();
 539:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				break;
 540:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}
 541:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	if ((TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)))&& (!uP_AltCtrl_Data.S
 542:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	   		{
 543:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			
 544:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3)
 545:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				{
 546:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Run((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER);	
 547:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					if ( dirty_foam_Data.status == ALGO_SV_WAIT_END)
 548:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					{
 549:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						(void)SWTC_Run((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);	
 550:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					}
 551:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				}else
 552:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				{
 553:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB
 554:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Stop((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER);
 555:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Stop((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);
 556:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				}
 557:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				
 558:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				
 559:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if (!SWTC_IsStopped((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER) && !SWTC_IsExpired((SWTC_Counte
 560:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				{ /* stato 3 del sensore stabile per tempo da setting  */
 561:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					return ; 
 562:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				}
 563:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			
 564:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			
 565:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==0)
 566:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	   			{/* vedo il vuoto esco */				
 567:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****            			SETBIT(TerminatedAlgorithmBmp[0], AAL_DIRTY_FOAM_IDENTIFY_ALG);
 568:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        	CLRBIT(ActiveAlgorithmBmp[0],AAL_DIRTY_FOAM_IDENTIFY_ALG);
 569:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.reduc_speed=0;
 570:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.status = ALGO_SV_END;
 571:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.filter_foam_on=FALSE;
 572:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					SETBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS);
 573:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					return;
 574:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				}
 575:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				switch (dirty_foam_Data.status)
 576:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				{
 577:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_SV_WAIT :
 578:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=0;
 579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 580:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 581:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						{
 582:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_1LIMIT_POWER;	
 583:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.reduc_speed=1;
 584:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;
 585:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						}
 586:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						
 587:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #ifdef _STATISTICS_ON_	
 588:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						CLRBIT(Statistics_update_flag, STATISTIC_FLAG_DIRTY_UPDATE);
 589:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #endif	
 590:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;
 591:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_1LIMIT_POWER:	
 592:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						
 593:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=1;
 594:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 595:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						{/* ho ridotto la velocit� ma continuo a vedere filtro otturato */
 596:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							AAL_Load_Var_Init ();					
 597:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_LOAD_RESTORE;
 598:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.load_exe_time=0;
 599:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;
 600:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							
 601:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 602:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							/*torno alla velocit� di prima */	
 603:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.reduc_speed=0;
 604:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						}else
 605:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SE
 606:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							/* ho gi� ridotto la velocit� una volta, e quindi si mantiene lo stato di riduzione dell
 607:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							{	
 608:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									dirty_foam_Data.status= ALGO_WAIT_1L;
 609:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									dirty_foam_Data.filter_foam_on=FALSE;
 610:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #ifdef _STATISTICS_ON_
 611:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									if ( TESTBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE)==0)
 612:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									{ 
 613:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 										IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].dirty_foa
 614:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 										SETBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE);
 615:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									}
 616:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 617:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #endif
 618:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							}
 619:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;
 620:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_WAIT_1L:
 621:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						/* dovrebbe essere gi� attiva ma ribadisce lo stato */
 622:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=1;
 623:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 624:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3)
 625:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						{ 
 626:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						/* Se sono in questa condizione ho visto il pieno con la prima riduzione, quindi riduco di un
 627:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_2LIMIT_POWER;
 628:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.reduc_speed=2;	
 629:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;	
 630:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						}
 631:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;
 632:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_2LIMIT_POWER:
 633:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 634:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=2;
 635:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 636:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #ifdef _STATISTICS_ON_
 637:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if ( TESTBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE))
 638:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						{ 
 639:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].dirty_foam_r
 640:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							CLRBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE);
 641:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						}	
 642:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #endif
 643:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3)
 644:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						{/*dopo la seconda riduzione , se non vedo mail il pieno il uP termina*/
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							(void)SWTC_SetSValue((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER, (SWTC_MCounterValue)TOUT_EN
 646:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status = ALGO_SV_WAIT_END;
 647:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						}
 648:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;		
 649:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_LOAD_RESTORE:
 650:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						/* sto rabboccando ma ancora il sensore vale 3...*/
 651:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						/* se raggiungo il limite di caricamento allora il uP termina*/
 652:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=TRUE;
 653:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							
 654:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;				
 655:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_LOAD_WAIT:
 656:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 658:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						{/* ho ridotto la velocit� ma continuo a vedere filtro otturato */
 659:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.reduc_speed=0;
 660:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							AAL_Load_Var_Init();
 661:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						 
 662:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.load_exe_time=0;
 663:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 												
 664:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_LOAD_RESTORE;
 665:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 666:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;
 667:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						}
 668:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						
 669:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;
 670:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_SV_WAIT_END:
 671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 672:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (SWTC_IsExpired((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER) )
 673:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						{	 /* vengo da una seconda riduzione di velocit� e ho continuato a vedere 3  */
 674:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status=ALGO_SV_END; 
 675:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							SETBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS);
 676:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							
 677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					 	}
 678:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;
 679:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					case ALGO_SV_END:
 680:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 681:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					default:
 682:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					break;
 683:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				}
 684:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}/*else*/
 685:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{
 686:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			/* algoritmo sospeso: non si fa nulla. rimane lo stato dove era.*/
 687:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_
 688:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}
 689:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 690:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			
 691:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		break;
 692:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		default:	
 693:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		case AAL_ALG_DISABLE:
 694:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  SETBIT(TerminatedAlgorithmBmp[0], AAL_DIRTY_FOAM_IDENTIFY_ALG);
 695:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  CLRBIT(ActiveAlgorithmBmp[0],AAL_DIRTY_FOAM_IDENTIFY_ALG);
 696:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.reduc_speed=0;
 697:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.status= ALGO_SV_END;
 698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.filter_foam_on=FALSE;
 699:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  (void)SWTC_Stop((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);
 700:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  
 701:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		break;
 702:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}
 703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 704:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 705:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /* gestisce il caricamento con la logica del vecchio uP Load restore 
 706:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Il principio di funzionamento per i rabbocchi � quello del load restore.
 707:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** la truttura dirty_foam_Data infatti ne ricalca la struttura e i parametri di ingresso.
 708:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** Se � presente l'algoritmo dirty_foam_Data non deve essere presente il uP load restore.
 709:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 710:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \param [in]     none
 711:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \return         none
 712:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 713:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 714:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \par alg\b funzione per il rabbocco usato nell'algortitmo sporco / schiuma
 715:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \version		1.0.0
 716:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \date 			13/01/2012
 717:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** \author			Emanuela Antognoli
 718:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */
 719:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_Load_Restore (void)
 720:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 452                             		.loc 1 720 0
 453 0000 6E 7B                   		pushm	r7-r11
 454                             	.LCFI6:
 721:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_EXE);
 455                             		.loc 1 721 0
 456 0002 66 11                   		mov	#1, r1
 722:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 723:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	if ( TESTBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS) )
 457                             		.loc 1 723 0
 458 0004 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 721:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	FLT_Pump_Load_Mgmt(FLT_PUMP_LOAD_EXE);
 459                             		.loc 1 721 0
 460 000a 05 00 00 00             		bsr	_FLT_Pump_Load_Mgmt
 461                             		.loc 1 723 0
 462 000e CC 77                   		mov.B	[r7], r7
 463 0010 FD 74 C7 01             		tst	#1, r7
 464 0014 20 33                   		beq	.L49
 724:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	{
 725:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 726:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		/* in analogia con la dichiarazione del KO Restore per WaterInDW > maxWater
 727:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		non si prosegue nel caricamento e viene abilitato avanzalomento passo 
 728:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		Il Jump su KO Restore verr� processato nel passo successivo 
 729:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		se Load Restore � l'unico uP del passo*/
 730:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		WaterInDW = OFFS_B(dirty_foam_setting_data.Data,0);
 465                             		.loc 1 730 0
 466 0016 FB 72 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r7
 467 001c EC 7A                   		mov.L	[r7], r10
 468 001e FB 72 00 00 00 00       		mov.L	#_WaterInDW, r7
 469 0024 CC AA                   		mov.B	[r10], r10
 731:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		dirty_foam_Data.reduc_speed=0;
 732:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		SETBIT(Flags_2, FLAG2_CLOGGED_FILTER);
 470                             		.loc 1 732 0
 471 0026 FB E2 00 00 00 00       		mov.L	#_Flags_2, r14
 730:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		WaterInDW = OFFS_B(dirty_foam_setting_data.Data,0);
 472                             		.loc 1 730 0
 473 002c C3 7A                   		mov.B	r10, [r7]
 731:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		dirty_foam_Data.reduc_speed=0;
 474                             		.loc 1 731 0
 475 002e FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 476 0034 CD 7A 01                		mov.B	1[r7], r10
 477                             		.loc 1 732 0
 478 0037 CC E4                   		mov.B	[r14], r4
 733:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		dirty_foam_Data.status = ALGO_SV_END;
 479                             		.loc 1 733 0
 480 0039 75 2A 98                		and	#0xffffff98, r10
 732:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		SETBIT(Flags_2, FLAG2_CLOGGED_FILTER);
 481                             		.loc 1 732 0
 482 003c 75 34 20                		or	#32, r4
 734:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		dirty_foam_Data.filter_foam_on=FALSE;
 483                             		.loc 1 734 0
 484 003f 65 6A                   		or	#6, r10
 732:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		SETBIT(Flags_2, FLAG2_CLOGGED_FILTER);
 485                             		.loc 1 732 0
 486 0041 C3 E4                   		mov.B	r4, [r14]
 487                             		.loc 1 734 0
 488 0043 7A 4A                   		bclr	#4, r10
 489 0045 2E 67                   		bra	.L86
 490                             	.L49:
 735:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		return;
 736:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}
 737:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 738:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 739:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	if ( ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==1)||(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_W
 491                             		.loc 1 739 0
 492 0047 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r7
 493 004d CC 77                   		mov.B	[r7], r7
 494 004f 60 17                   		sub	#1, r7
 495 0051 5B 77                   		movu.B	r7, r7
 496 0053 61 17                   		cmp	#1, r7
 497 0055 24 1D                   		bgtu	.L51
 498                             		.loc 1 739 0 is_stmt 0 discriminator 1
 499 0057 FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 500 005d DC 77                   		mov.W	[r7], r7
 501 005f 76 27 00 04             		and	#0x400, r7
 502 0063 5F 77                   		movu.W	r7, r7
 503 0065 61 07                   		cmp	#0, r7
 504 0067 20 0B                   		beq	.L51
 740:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     {/* vuoto -> posso ancora caricare acqua, se ho tempo residuo */
 741:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					
 742:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		(void)SWTC_Run((SWTC_CountersType)AAL_STAB_SENS_S_TIMER);
 505                             		.loc 1 742 0 is_stmt 1
 506 0069 75 41 2E                		mov	#46, r1
 507 006c 05 00 00 00             		bsr	_SWTC_Run
 508 0070 2E 1E                   		bra	.L52
 509                             	.L51:
 743:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}else
 744:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	{
 745:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		/* else tempo di ripristino non esaurito */
 746:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_SENS_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_SENS
 510                             		.loc 1 746 0
 511 0072 FB 72 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r7
 512 0078 EC 77                   		mov.L	[r7], r7
 513 007a 75 41 2E                		mov	#46, r1
 514 007d 88 FA                   		mov.B	3[r7], r2
 515 007f 75 22 7F                		and	#0x7f, r2
 516 0082 05 00 00 00             		bsr	_SWTC_SetSValue
 747:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		(void)SWTC_Stop((SWTC_CountersType)AAL_STAB_SENS_S_TIMER);
 517                             		.loc 1 747 0
 518 0086 75 41 2E                		mov	#46, r1
 519 0089 05 00 00 00             		bsr	_SWTC_Stop
 520 008d 03                      		.balign 2,3,2
 521                             	.L52:
 748:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}
 749:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 750:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)AAL_STAB_SENS_S_TIMER) )
 522                             		.loc 1 750 0
 523 008e 75 41 2E                		mov	#46, r1
 524 0091 05 00 00 00             		bsr	_SWTC_IsExpired
 525 0095 61 01                   		cmp	#0, r1
 526 0097 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 527 009d 20 15                   		beq	.L53
 751:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	{ /* caricamento a P.P. concluso (end conteggio per stabilit� pressostato in pieno) */
 752:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		(void)SWTC_Stop((SWTC_CountersType)AAL_STAB_SENS_S_TIMER);
 528                             		.loc 1 752 0
 529 009f 75 41 2E                		mov	#46, r1
 530 00a2 05 00 00 00             		bsr	_SWTC_Stop
 753:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		dirty_foam_Data.status = ALGO_SV_WAIT;
 531                             		.loc 1 753 0
 532 00a6 CD 7A 01                		mov.B	1[r7], r10
 533 00a9 75 2A F8                		and	#-8, r10
 534                             		.balign 2,3,5
 535                             	.L86:
 536 00ac C7 7A 01                		mov.B	r10, 1[r7]
 754:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 755:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		return ; 
 537                             		.loc 1 755 0
 538 00af 38 1B 02                		bra	.L48
 539                             	.L53:
 756:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}
 757:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 758:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	if ( dirty_foam_Data.load_exe_time==0)
 540                             		.loc 1 758 0
 541 00b2 DC 7A                   		mov.W	[r7], r10
 542 00b4 64 8A                   		and	#8, r10
 543 00b6 5F AA                   		movu.W	r10, r10
 544 00b8 61 0A                   		cmp	#0, r10
 545 00ba 3B DF 01                		bne	.L54
 546                             	.LBB17:
 759:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	{/* caricamento a turbina */
 760:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 761:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		if ( (PulseCounter_GetWarning() == NO_PULSE_COUNTER_WARNING) && (TESTBIT(Flags_1,JIF_FLAG1_PULSE_
 547                             		.loc 1 761 0
 548 00bd 05 00 00 00             		bsr	_PulseCounter_GetWarning
 549 00c1 61 01                   		cmp	#0, r1
 550 00c3 3B C6 01                		bne	.L55
 551                             		.loc 1 761 0 is_stmt 0 discriminator 1
 552 00c6 FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 553 00cc CC AE                   		mov.B	[r10], r14
 554 00ce 64 4E                   		and	#4, r14
 555 00d0 5B EE                   		movu.B	r14, r14
 556 00d2 61 0E                   		cmp	#0, r14
 557 00d4 3B B5 01                		bne	.L55
 762:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	    {/* Pulse counter OK && non bloccata */
 763:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 764:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     		if(  WaterInDW >= OFFS_B(dirty_foam_setting_data.Data,0) )			
 558                             		.loc 1 764 0 is_stmt 1
 559 00d7 FB 42 00 00 00 00       		mov.L	#_WaterInDW, r4
 560 00dd CC 44                   		mov.B	[r4], r4
 561 00df FB 32 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r3
 562 00e5 EC 33                   		mov.L	[r3], r3
 563 00e7 5B 41                   		movu.B	r4, r1
 564 00e9 44 31                   		cmp	[r3].UB, r1
 565 00eb 23 71                   		bltu	.L56
 765:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{
 766:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				/* non importa se il criterio non � valido, comunque abbiamo superato il valore massimo conse
 767:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				se non vedo il pieno � ko restore.*/
 768:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				SETBIT(Flags_2, FLAG2_CLOGGED_FILTER);
 566                             		.loc 1 768 0
 567 00ed FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 568 00f3 CC 7E                   		mov.B	[r7], r14
 569 00f5 75 3E 20                		or	#32, r14
 570 00f8 C3 7E                   		mov.B	r14, [r7]
 769:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  	if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=1)&&(Virtual_Sensor_Value[GI_VIRTUAL_SENSO
 571                             		.loc 1 769 0
 572 00fa FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r7
 573 0100 CC 77                   		mov.B	[r7], r7
 574 0102 60 17                   		sub	#1, r7
 575 0104 5B 77                   		movu.B	r7, r7
 576 0106 61 17                   		cmp	#1, r7
 577 0108 25 2E                   		bleu	.L57
 770:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				{
 771:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_SENS_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_S
 578                             		.loc 1 771 0
 579 010a 88 BA                   		mov.B	3[r3], r2
 580 010c 75 41 2E                		mov	#46, r1
 581 010f 75 22 7F                		and	#0x7f, r2
 582 0112 05 00 00 00             		bsr	_SWTC_SetSValue
 772:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					SETBIT(Flags_1,JIF_FLAG1_LOAD_RESTORE_KO_POS); /* set flag overflow ripristini */	
 583                             		.loc 1 772 0
 584 0116 CC A7                   		mov.B	[r10], r7
 585 0118 65 17                   		or	#1, r7
 586 011a C3 A7                   		mov.B	r7, [r10]
 773:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 774:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					/* incremento contatore KO Restore per statistiche
 775:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					posso farlo qui perch� eseguo istruzione una volta soltanto dopo aver messo ad 1 il flag KO 
 776:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					e poi cambio stato in LOAD_RESTORE_TRUE */
 777:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #ifdef _STATISTICS_ON_                        
 778:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].restore_koRestore.b.koRestore++;
 587                             		.loc 1 778 0
 588 011c FB 72 00 00 00 00       		mov.L	#_MachineStatistics, r7
 589 0122 5D 7A 35                		movu.W	106[r7], r10
 590 0125 CD 7E 6A                		mov.B	106[r7], r14
 591 0128 68 8A                   		shlr	#8, r10
 592 012a 62 1A                   		add	#1, r10
 593 012c 64 FA                   		and	#15, r10
 594 012e 75 2E F0                		and	#-16, r14
 595 0131 57 EA                   		or	r14, r10
 596 0133 C7 7A 6A                		mov.B	r10, 106[r7]
 597                             		.balign 2,3,5
 598                             	.L57:
 779:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** #endif      
 780:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					
 781:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				}
 782:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				WaterInDW = OFFS_B(dirty_foam_setting_data.Data,0);
 599                             		.loc 1 782 0
 600 0136 FB 72 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r7
 601 013c EC 7A                   		mov.L	[r7], r10
 602 013e FB 72 00 00 00 00       		mov.L	#_WaterInDW, r7
 603 0144 CC AA                   		mov.B	[r10], r10
 604 0146 C3 7A                   		mov.B	r10, [r7]
 783:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				dirty_foam_Data.status= ALGO_SV_END;
 605                             		.loc 1 783 0
 606 0148 FB A2 00 00 00 00       		mov.L	#_dirty_foam_Data, r10
 607 014e CD A7 01                		mov.B	1[r10], r7
 608 0151 75 27 F8                		and	#-8, r7
 609 0154 65 67                   		or	#6, r7
 610 0156 C7 A7 01                		mov.B	r7, 1[r10]
 611 0159 38 71 01                		bra	.L48
 612                             	.L56:
 784:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}else
 785:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			{
 786:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				
 787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if ( TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH))&&
 613                             		.loc 1 787 0
 614 015c FB A2 00 00 00 00       		mov.L	#_GIValid, r10
 615 0162 DC AA                   		mov.W	[r10], r10
 616 0164 76 2A 00 04             		and	#0x400, r10
 617 0168 5F AA                   		movu.W	r10, r10
 618 016a 61 0A                   		cmp	#0, r10
 619 016c 3A ED 00                		beq	.L58
 788:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			  	(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=5) )
 620                             		.loc 1 788 0 discriminator 1
 621 016f FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if ( TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH))&&
 622                             		.loc 1 787 0 discriminator 1
 623 0175 58 AA                   		movu.B	[r10], r10
 624 0177 61 5A                   		cmp	#5, r10
 625 0179 3A E0 00                		beq	.L58
 789:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				{
 790:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					/* ancora possibile caricare acqua */						
 791:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					if (dirty_foam_Data.init == TRUE)
 626                             		.loc 1 791 0
 627 017c DC 7A                   		mov.W	[r7], r10
 628 017e 76 2A 80 00             		and	#0x80, r10
 629 0182 5F AA                   		movu.W	r10, r10
 630 0184 61 0A                   		cmp	#0, r10
 631 0186 20 34                   		beq	.L59
 632                             	.LBB18:
 792:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					{/* questa init potrebbe avvenire anche dopo un passaggio per il pieno per cui fullPulseIn != 
 793:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 794:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						GIWaterLoaded = 0;
 633                             		.loc 1 794 0
 634 0188 FB A2 00 00 00 00       		mov.L	#_GIWaterLoaded, r10
 795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						PulseLoaded = 0;
 796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.emptyPulseIn = 0;
 797:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.waterInDWInit = WaterInDW; 
 799:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						PulseCounter_SetCount(dirty_foam_Data.fullPulseIn);/* init pulse counter per nuovo conteggio 
 635                             		.loc 1 799 0
 636 018e B8 F1                   		movu.W	4[r7], r1
 794:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						GIWaterLoaded = 0;
 637                             		.loc 1 794 0
 638 0190 D3 AE                   		mov.W	r14, [r10]
 795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						PulseLoaded = 0;
 639                             		.loc 1 795 0
 640 0192 FB A2 00 00 00 00       		mov.L	#_PulseLoaded, r10
 641 0198 D3 AE                   		mov.W	r14, [r10]
 796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.emptyPulseIn = 0;
 642                             		.loc 1 796 0
 643 019a D7 7E 03                		mov.W	r14, 6[r7]
 798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.waterInDWInit = WaterInDW; 
 644                             		.loc 1 798 0
 645 019d C3 74                   		mov.B	r4, [r7]
 800:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 801:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						/* QI 28.10.09 init finestra di buio su controllo turbina. Messo qui per reinizializzare cont
 802:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						(void)SWTC_SetSValue((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER, (SWTC_SCounterValue)Tout
 646                             		.loc 1 802 0
 647 019f FB A2 00 00 00 00       		mov.L	#_ToutPulseCounterCheckDelay, r10
 799:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						PulseCounter_SetCount(dirty_foam_Data.fullPulseIn);/* init pulse counter per nuovo conteggio 
 648                             		.loc 1 799 0
 649 01a5 05 00 00 00             		bsr	_PulseCounter_SetCount
 650                             		.loc 1 802 0
 651 01a9 CC A2                   		mov.B	[r10], r2
 652 01ab 66 61                   		mov	#6, r1
 653 01ad 05 00 00 00             		bsr	_SWTC_SetSValue
 803:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 804:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 805:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.init = FALSE;
 654                             		.loc 1 805 0
 655 01b1 CD 7A 01                		mov.B	1[r7], r10
 656 01b4 7A 7A                   		bclr	#7, r10
 657 01b6 C7 7A 01                		mov.B	r10, 1[r7]
 658 01b9 03                      		.balign 2,3,5
 659                             	.L59:
 660                             	.LBE18:
 806:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 807:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					}
 808:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 809:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					WaterInDW = (dirty_foam_Data.waterInDWInit + GIWaterLoaded);  /* aggiornamento acqua in vasca 
 661                             		.loc 1 809 0
 662 01ba FB 72 00 00 00 00       		mov.L	#_GIWaterLoaded, r7
 663 01c0 CD 7E 01                		mov.B	1[r7], r14
 664 01c3 FB A2 00 00 00 00       		mov.L	#_dirty_foam_Data, r10
 665 01c9 06 08 AE                		add	[r10].B, r14
 666 01cc FB A2 00 00 00 00       		mov.L	#_WaterInDW, r10
 667 01d2 C3 AE                   		mov.B	r14, [r10]
 810:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					/* QI 27.10.09 gestione finestra di buio su check turbina */
 811:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****         
 812:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	       			FLT_PulseCounterCheckDelay_Mgmt();
 668                             		.loc 1 812 0
 669 01d4 05 00 00 00             		bsr	_FLT_PulseCounterCheckDelay_Mgmt
 813:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 814:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	#ifdef _STATISTICS_ON_
 815:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					if((GIWaterLoaded>5) && (TempCycle_Stats.flags.bit.restoreCntEn==1)) 
 670                             		.loc 1 815 0
 671 01d8 DC 7A                   		mov.W	[r7], r10
 672 01da 5F A7                   		movu.W	r10, r7
 673 01dc 61 57                   		cmp	#5, r7
 674 01de 25 2E                   		bleu	.L60
 675                             		.loc 1 815 0 is_stmt 0 discriminator 1
 676 01e0 FB 72 00 00 00 00       		mov.L	#_TempCycle_Stats, r7
 677 01e6 DD 7E 01                		mov.W	2[r7], r14
 678 01e9 77 2E 00 80 00          		and	#0x8000, r14
 679 01ee 5F EE                   		movu.W	r14, r14
 680 01f0 61 0E                   		cmp	#0, r14
 681 01f2 20 1A                   		beq	.L60
 816:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					{                     
 817:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].restore_koRestore.b.restore++;
 682                             		.loc 1 817 0 is_stmt 1
 683 01f4 FB E2 00 00 00 00       		mov.L	#_MachineStatistics, r14
 684 01fa CD E4 6A                		mov.B	106[r14], r4
 685 01fd 71 44 10                		add	#16, r4
 686 0200 C7 E4 6A                		mov.B	r4, 106[r14]
 818:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						TempCycle_Stats.flags.bit.restoreCntEn =0 ;
 687                             		.loc 1 818 0
 688 0203 CD 7E 02                		mov.B	2[r7], r14
 689 0206 7A 7E                   		bclr	#7, r14
 690 0208 C7 7E 02                		mov.B	r14, 2[r7]
 691 020b 03                      		.balign 2,3,5
 692                             	.L60:
 819:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					}
 820:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	#endif
 821:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 822:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.emptyPulseIn = (GIWaterLoaded * FlowMeterDivider);	 /* aggiornamento acqua in 
 693                             		.loc 1 822 0
 694 020c FB E2 00 00 00 00       		mov.L	#_FlowMeterDivider, r14
 695 0212 4C EA                   		mul	[r14].UB, r10
 696 0214 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 697 021a D7 7A 03                		mov.W	r10, 6[r7]
 823:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		                                                                                      rappresenta
 824:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	  				
 825:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/
 698                             		.loc 1 825 0
 699 021d FB A2 00 00 00 00       		mov.L	#_EV_Pos, r10
 700 0223 58 AA                   		movu.B	[r10], r10
 701 0225 FB E2 00 00 00 00       		mov.L	#_LoadsReq_New, r14
 702 022b 66 1B                   		mov	#1, r11
 703 022d FE 0A EB                		mov.B	r11, [r10,r14]
 826:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						      /* controllo turbina bloccata */
 827:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					if ( FLT_CheckPulseCounterStill(PULSE_COUNTER_STILL_EXE) == TRUE )
 704                             		.loc 1 827 0
 705 0230 CF B1                   		mov.B	r11, r1
 706 0232 05 00 00 00             		bsr	_FLT_CheckPulseCounterStill
 707 0236 5B 12                   		movu.B	r1, r2
 708 0238 61 12                   		cmp	#1, r2
 709 023a 3B 90 00                		bne	.L48
 828:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					{
 829:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 830:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						/* entro qui una sola volta,poi cambio modalit� di ripristino */ 
 831:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						FLT_preFaultSet(CODE_PULSE_COUNTER,SUBCODE_PULSE_COUNTER);
 710                             		.loc 1 831 0
 711 023d 66 71                   		mov	#7, r1
 712 023f 05 00 00 00             		bsr	_FLT_preFaultSet
 832:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.load_exe_time=TRUE;
 713                             		.loc 1 832 0
 714 0243 CD 7A 01                		mov.B	1[r7], r10
 715 0246 78 3A                   		bset	#3, r10
 716 0248 C7 7A 01                		mov.B	r10, 1[r7]
 833:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 834:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						SETBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS); 
 717                             		.loc 1 834 0
 718 024b FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 719 0251 CC 7A                   		mov.B	[r7], r10
 720 0253 65 4A                   		or	#4, r10
 721 0255 C3 7A                   		mov.B	r10, [r7]
 722 0257 2E 73                   		bra	.L48
 723                             	.L58:
 835:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 836:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					}
 837:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					
 838:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				}else
 839:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        {/* stato 5  o criterio non valido*/
 840:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****          
 841:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					/* non piloto EV ma tengo conto di eventuali impulsi conteggiati dalla turbina */
 842:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     
 843:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					/*impulsi contati durante la permanenza in pieno */
 844:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					if ( PulseLoaded >= dirty_foam_Data.emptyPulseIn )
 724                             		.loc 1 844 0
 725 0259 FB 72 00 00 00 00       		mov.L	#_PulseLoaded, r7
 726 025f DC 7E                   		mov.W	[r7], r14
 727 0261 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 728 0267 DD 7A 03                		mov.W	6[r7], r10
 729 026a 5F E3                   		movu.W	r14, r3
 730 026c 5F A4                   		movu.W	r10, r4
 731 026e 47 43                   		cmp	r4, r3
 732 0270 23 08                   		bltu	.L62
 845:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					{
 846:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.fullPulseIn = ( PulseLoaded - dirty_foam_Data.emptyPulseIn );
 733                             		.loc 1 846 0
 734 0272 FF 0A AE                		sub	r10, r14, r10
 735 0275 D7 7A 02                		mov.W	r10, 4[r7]
 736                             		.balign 2,3,5
 737                             	.L62:
 847:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					}
 848:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 849:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.init = TRUE;
 738                             		.loc 1 849 0
 739 0278 CD 7A 01                		mov.B	1[r7], r10
 850:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 851:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);	
 740                             		.loc 1 851 0
 741 027b 75 41 1F                		mov	#31, r1
 849:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.init = TRUE;
 742                             		.loc 1 849 0
 743 027e 78 7A                   		bset	#7, r10
 744 0280 C7 7A 01                		mov.B	r10, 1[r7]
 745                             	.LBE17:
 852:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 			
 853:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					/* Rimango in questo stato anche se consento avanzamento passo */
 854:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 855:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					return ;
 856:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 857:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        }
 858:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			}
 859:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		}
 860:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 861:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	    else
 862:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	    {/* Warning Pulse Counter: il conteggio dell'acqua in ingresso non � affidabile ->
 863:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	      non eseguo uP ma abilito avanzamento passo 	 */
 864:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****        	  
 865:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	      dirty_foam_Data.load_exe_time = TRUE;
 866:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.init = TRUE;  /* uso la stessa var perch� sono in uno stato diverso */
 867:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  /* EA brevetto: se la turbina � KO si carica sempre a sensore , tanto al ciclo successivo o a
 868:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	     /* turbina out of range*/
 869:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  
 870:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        
 871:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	    }
 872:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}else
 873:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	{/* if ( dirty_foam_Data.load_exe_time )
 874:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		
 875:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	/* ripristino a tempo */
 876:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****    		
 877:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		if ( TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH))&&
 878:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	  	(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=5) )
 879:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		{ 
 880:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			
 881:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			/* carico pilotato  */
 882:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/  
 883:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 884:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		}	
 885:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	}      
 886:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****    
 887:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 746                             		.loc 1 887 0
 747 0283 6F 7B                   		popm	r7-r11
 748                             	.LBB19:
 851:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);	
 749                             		.loc 1 851 0
 750 0285 04 00 00 00             		bra	_SWTC_Stop
 751                             	.L55:
 865:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	      dirty_foam_Data.load_exe_time = TRUE;
 752                             		.loc 1 865 0
 753 0289 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 754 028f CD 7A 01                		mov.B	1[r7], r10
 755 0292 78 3A                   		bset	#3, r10
 866:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.init = TRUE;  /* uso la stessa var perch� sono in uno stato diverso */
 756                             		.loc 1 866 0
 757 0294 78 7A                   		bset	#7, r10
 758 0296 38 16 FE                		bra	.L86
 759                             	.L54:
 760                             	.LBE19:
 877:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		if ( TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH))&&
 761                             		.loc 1 877 0
 762 0299 FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 763 029f DC 77                   		mov.W	[r7], r7
 764 02a1 76 27 00 04             		and	#0x400, r7
 765 02a5 5F 77                   		movu.W	r7, r7
 766 02a7 61 07                   		cmp	#0, r7
 767 02a9 20 21                   		beq	.L48
 878:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	  	(Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]!=5) )
 768                             		.loc 1 878 0 discriminator 1
 769 02ab FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r7
 877:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		if ( TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH))&&
 770                             		.loc 1 877 0 discriminator 1
 771 02b1 58 77                   		movu.B	[r7], r7
 772 02b3 61 57                   		cmp	#5, r7
 773 02b5 20 15                   		beq	.L48
 882:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			LoadsReq_New[EV_Pos[LD_WASH_EV_IND]].b = EV_ON; /* pilotaggio EV*/  
 774                             		.loc 1 882 0
 775 02b7 FB 72 00 00 00 00       		mov.L	#_EV_Pos, r7
 776 02bd 58 77                   		movu.B	[r7], r7
 777 02bf FB A2 00 00 00 00       		mov.L	#_LoadsReq_New, r10
 778 02c5 66 1B                   		mov	#1, r11
 779 02c7 FE 07 AB                		mov.B	r11, [r7,r10]
 780                             		.balign 2,3,2
 781                             	.L48:
 782                             		.loc 1 887 0
 783 02ca 3F 7B 05                		rtsd	#20, r7-r11
 784                             	.LFE8:
 786 02cd 03                      		.section	.text.AAL_Load_Var_Init,"ax",@progbits
 787                             		.global	_AAL_Load_Var_Init
 789                             	_AAL_Load_Var_Init:
 790                             	.LFB9:
 888:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 889:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 890:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** void AAL_Load_Var_Init (void)
 891:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 791                             		.loc 1 891 0
 792 0000 7E A7                   		push.l	r7
 793                             	.LCFI7:
 892:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	TempCycle_Stats.flags.bit.restoreCntEn=1;
 794                             		.loc 1 892 0
 795 0002 FB 72 00 00 00 00       		mov.L	#_TempCycle_Stats, r7
 796 0008 CD 7E 02                		mov.B	2[r7], r14
 893:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 894:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	/* Init variabili per caricamento a turbina */
 895:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 896:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.init = TRUE;
 897:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** /*
 898:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 899:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	PulseCounter_Reset_Warning(PULSECOUNTER_RESET_BOTH_WARNING);                         Reset di even
 900:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 901:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** */ /*AE FIXME PULSE COUNTER*/
 902:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.fullPulseIn = 0;                  /* init var per conteggio impulsi entranti in pi
 903:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 904:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     GIWaterLoaded = 0;
 905:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	PulseLoaded = 0;
 906:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 907:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.waterInDWInit = WaterInDW; 
 908:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	PulseCounter_SetCount(dirty_foam_Data.fullPulseIn);/* init pulse counter per nuovo conteggio */   
 797                             		.loc 1 908 0
 798 000b 66 01                   		mov.L	#0, r1
 892:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	TempCycle_Stats.flags.bit.restoreCntEn=1;
 799                             		.loc 1 892 0
 800 000d 78 7E                   		bset	#7, r14
 801 000f C7 7E 02                		mov.B	r14, 2[r7]
 896:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.init = TRUE;
 802                             		.loc 1 896 0
 803 0012 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 804 0018 CD 7E 01                		mov.B	1[r7], r14
 902:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.fullPulseIn = 0;                  /* init var per conteggio impulsi entranti in pi
 805                             		.loc 1 902 0
 806 001b 3D 72 00                		mov.W	#0, 4[r7]
 896:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.init = TRUE;
 807                             		.loc 1 896 0
 808 001e 78 7E                   		bset	#7, r14
 809 0020 C7 7E 01                		mov.B	r14, 1[r7]
 904:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****     GIWaterLoaded = 0;
 810                             		.loc 1 904 0
 811 0023 FB E2 00 00 00 00       		mov.L	#_GIWaterLoaded, r14
 812 0029 F8 E5 00                		mov.W	#0, [r14]
 905:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	PulseLoaded = 0;
 813                             		.loc 1 905 0
 814 002c FB E2 00 00 00 00       		mov.L	#_PulseLoaded, r14
 815 0032 F8 E5 00                		mov.W	#0, [r14]
 907:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.waterInDWInit = WaterInDW; 
 816                             		.loc 1 907 0
 817 0035 FB E2 00 00 00 00       		mov.L	#_WaterInDW, r14
 818 003b CC EE                   		mov.B	[r14], r14
 819 003d C3 7E                   		mov.B	r14, [r7]
 820                             		.loc 1 908 0
 821 003f 05 00 00 00             		bsr	_PulseCounter_SetCount
 822                             	.LVL23:
 909:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 
 910:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	(void)FLT_CheckPulseCounterStill(PULSE_COUNTER_STILL_INIT);     /* init funzione controllo turbina
 823                             		.loc 1 910 0
 824 0043 66 01                   		mov	#0, r1
 825 0045 05 00 00 00             		bsr	_FLT_CheckPulseCounterStill
 826                             	.LVL24:
 911:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	CLRBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS);
 827                             		.loc 1 911 0
 828 0049 FB E2 00 00 00 00       		mov.L	#_Flags_1, r14
 829 004f CC E4                   		mov.B	[r14], r4
 912:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.load_exe_time=0;
 913:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						
 914:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	(void)Set_SmallCounter((SWTC_CountersType)AAL_STAB_SENS_S_TIMER, (SWTC_PrescalerType)COUNTERS2_TBA
 830                             		.loc 1 914 0
 831 0051 75 41 2E                		mov	#46, r1
 911:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	CLRBIT(Flags_1,JIF_FLAG1_PULSE_COUNTER_KO_POS);
 832                             		.loc 1 911 0
 833 0054 75 24 FB                		and	#-5, r4
 834 0057 C3 E4                   		mov.B	r4, [r14]
 912:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.load_exe_time=0;
 835                             		.loc 1 912 0
 836 0059 CD 7E 01                		mov.B	1[r7], r14
 837                             		.loc 1 914 0
 838 005c 66 32                   		mov	#3, r2
 912:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	dirty_foam_Data.load_exe_time=0;
 839                             		.loc 1 912 0
 840 005e 7A 3E                   		bclr	#3, r14
 841 0060 C7 7E 01                		mov.B	r14, 1[r7]
 842                             		.loc 1 914 0
 843 0063 FB 72 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r7
 844 0069 EC 77                   		mov.L	[r7], r7
 845 006b 88 FB                   		mov.B	3[r7], r3
 915:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 916:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 917:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	
 918:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 846                             		.loc 1 918 0
 847 006d 7E B7                   		pop	r7
 914:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	(void)Set_SmallCounter((SWTC_CountersType)AAL_STAB_SENS_S_TIMER, (SWTC_PrescalerType)COUNTERS2_TBA
 848                             		.loc 1 914 0
 849 006f 75 23 7F                		and	#0x7f, r3
 850 0072 04 00 00 00             		bra	_Set_SmallCounter
 851                             	.LVL25:
 852                             	.LFE9:
 854                             		.section	.text.AAL_Dirty_Foam_identify,"ax",@progbits
 855                             		.global	_AAL_Dirty_Foam_identify
 857                             	_AAL_Dirty_Foam_identify:
 858                             	.LFB7:
 493:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 859                             		.loc 1 493 0
 495:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	switch(cmd)
 860                             		.loc 1 495 0
 861 0000 5B 11                   		movu.B	r1, r1
 493:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** {
 862                             		.loc 1 493 0
 863 0002 6E 7A                   		pushm	r7-r10
 864                             	.LCFI8:
 495:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 	switch(cmd)
 865                             		.loc 1 495 0
 866 0004 61 01                   		cmp	#0, r1
 867 0006 3A 98 00                		beq	.L91
 868 0009 61 11                   		cmp	#1, r1
 869 000b 3B 57 03                		bne	.L131
 500:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if((HWC_Flags.bit.vs_wash_presence == 0) ||(BasicLoader(PTR_ALGORITHM_DATA, DIRTY_FOAM_DISPL , &
 870                             		.loc 1 500 0
 871 000e FB 72 00 00 00 00       		mov.L	#_HWC_Flags, r7
 872 0014 DC 77                   		mov.W	[r7], r7
 873 0016 76 27 00 08             		and	#0x800, r7
 874 001a 5F 77                   		movu.W	r7, r7
 875 001c 61 07                   		cmp	#0, r7
 876 001e 21 29                   		bne	.L93
 877                             		.balign 2,3,5
 878                             	.L95:
 503:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        SETBIT(TerminatedAlgorithmBmp[0], AAL_DIRTY_FOAM_IDENTIFY_ALG);
 879                             		.loc 1 503 0
 880 0020 FB 72 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r7
 881 0026 CC 7A                   		mov.B	[r7], r10
 882 0028 65 4A                   		or	#4, r10
 883 002a C3 7A                   		mov.B	r10, [r7]
 504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        CLRBIT(ActiveAlgorithmBmp[0],AAL_DIRTY_FOAM_IDENTIFY_ALG);
 884                             		.loc 1 504 0
 885 002c FB 72 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r7
 886 0032 CC 7A                   		mov.B	[r7], r10
 887 0034 75 2A FB                		and	#-5, r10
 888 0037 C3 7A                   		mov.B	r10, [r7]
 505:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				dirty_foam_Data.reduc_speed=0;
 889                             		.loc 1 505 0
 890 0039 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 891 003f CD 7A 01                		mov.B	1[r7], r10
 892 0042 75 2A 9F                		and	#0xffffff9f, r10
 893 0045 2E 25                   		bra	.L134
 894                             	.L93:
 500:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if((HWC_Flags.bit.vs_wash_presence == 0) ||(BasicLoader(PTR_ALGORITHM_DATA, DIRTY_FOAM_DISPL , &
 895                             		.loc 1 500 0 discriminator 1
 896 0047 75 41 2B                		mov	#43, r1
 897 004a 66 02                   		mov	#0, r2
 898 004c FB 32 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r3
 899 0052 05 00 00 00             		bsr	_BasicLoader
 900 0056 5B 11                   		movu.B	r1, r1
 901 0058 61 01                   		cmp	#0, r1
 902 005a 21 C6                   		bne	.L95
 509:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				 dirty_foam_Data.fullPulseIn = 0;                  /* init var per conteggio impulsi entranti i
 903                             		.loc 1 509 0
 904 005c FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 511:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				dirty_foam_Data.status = ALGO_SV_WAIT;
 905                             		.loc 1 511 0
 906 0062 CD 7A 01                		mov.B	1[r7], r10
 509:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				 dirty_foam_Data.fullPulseIn = 0;                  /* init var per conteggio impulsi entranti i
 907                             		.loc 1 509 0
 908 0065 90 F1                   		mov.W	r1, 4[r7]
 511:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				dirty_foam_Data.status = ALGO_SV_WAIT;
 909                             		.loc 1 511 0
 910 0067 75 2A F8                		and	#-8, r10
 911                             		.balign 2,3,5
 912                             	.L134:
 913 006a C7 7A 01                		mov.B	r10, 1[r7]
 513:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 	CLRBIT(Flags_2, FLAG2_CLOGGED_FILTER);
 914                             		.loc 1 513 0
 915 006d FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 916 0073 CC 7A                   		mov.B	[r7], r10
 517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 	(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_
 917                             		.loc 1 517 0
 918 0075 75 41 2F                		mov	#47, r1
 513:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 	CLRBIT(Flags_2, FLAG2_CLOGGED_FILTER);
 919                             		.loc 1 513 0
 920 0078 75 2A DF                		and	#-33, r10
 921 007b C3 7A                   		mov.B	r10, [r7]
 515:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			CLRBIT(Statistics_update_flag, STATISTIC_FLAG_DIRTY_UPDATE);
 922                             		.loc 1 515 0
 923 007d FB 72 00 00 00 00       		mov.L	#_Statistics_update_flag, r7
 924 0083 CC 7A                   		mov.B	[r7], r10
 925 0085 75 2A FE                		and	#-2, r10
 926 0088 C3 7A                   		mov.B	r10, [r7]
 517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		 	(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_
 927                             		.loc 1 517 0
 928 008a FB 72 00 00 00 00       		mov.L	#_Tab_HWCVS_data, r7
 929 0090 EC 77                   		mov.L	[r7], r7
 930 0092 CC 72                   		mov.B	[r7], r2
 931 0094 75 22 7F                		and	#0x7f, r2
 932 0097 05 00 00 00             		bsr	_SWTC_SetSValue
 933 009b 38 F3 02                		bra	.L138
 934                             	.L91:
 524:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			if (uPDoorStatus == UP_DOOR_WAIT)
 935                             		.loc 1 524 0
 936 009e FB 72 00 00 00 00       		mov.L	#_uPDoorStatus, r7
 937 00a4 58 77                   		movu.B	[r7], r7
 938 00a6 61 07                   		cmp	#0, r7
 939 00a8 21 20                   		bne	.L96
 527:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)PULSE_CHECK_DELAY_S_COUNTER);
 940                             		.loc 1 527 0
 941 00aa 66 61                   		mov	#6, r1
 942 00ac 05 00 00 00             		bsr	_SWTC_Stop
 528:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)PULSE_STILL_M_COUNTER);
 943                             		.loc 1 528 0
 944 00b0 75 41 1F                		mov	#31, r1
 945 00b3 05 00 00 00             		bsr	_SWTC_Stop
 529:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 			    (void)SWTC_Stop((SWTC_CountersType)AAL_STAB_SENS_S_TIMER);
 946                             		.loc 1 529 0
 947 00b7 75 41 2E                		mov	#46, r1
 948 00ba 05 00 00 00             		bsr	_SWTC_Stop
 530:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				(void)SWTC_Stop((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER);
 949                             		.loc 1 530 0
 950 00be 75 41 2F                		mov	#47, r1
 951 00c1 05 00 00 00             		bsr	_SWTC_Stop
 952 00c5 38 C9 02                		bra	.L138
 953                             	.L96:
 536:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	if ( dirty_foam_Data.status==ALGO_LOAD_RESTORE)
 954                             		.loc 1 536 0
 955 00c8 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 956 00ce DC 7A                   		mov.W	[r7], r10
 957 00d0 64 7A                   		and	#7, r10
 958 00d2 61 4A                   		cmp	#4, r10
 959 00d4 21 08                   		bne	.L97
 703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 960                             		.loc 1 703 0
 961 00d6 6F 7A                   		popm	r7-r10
 538:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				AAL_Load_Restore();
 962                             		.loc 1 538 0
 963 00d8 04 00 00 00             		bra	_AAL_Load_Restore
 964                             	.L97:
 541:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	if ((TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)))&& (!uP_AltCtrl_Data.S
 965                             		.loc 1 541 0
 966 00dc FB A2 00 00 00 00       		mov.L	#_GIValid, r10
 967 00e2 DC AA                   		mov.W	[r10], r10
 968 00e4 76 2A 00 04             		and	#0x400, r10
 969 00e8 5F AA                   		movu.W	r10, r10
 970 00ea 61 0A                   		cmp	#0, r10
 971 00ec 3A 60 02                		beq	.L99
 541:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  	if ((TESTBIT(GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_WASH)))&& (!uP_AltCtrl_Data.S
 972                             		.loc 1 541 0 is_stmt 0 discriminator 1
 973 00ef FB A2 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r10
 974 00f5 CD AA 04                		mov.B	4[r10], r10
 975 00f8 76 2A 80 00             		and	#0x80, r10
 976 00fc 5B AA                   		movu.B	r10, r10
 977 00fe 61 0A                   		cmp	#0, r10
 978 0100 3B 4C 02                		bne	.L99
 544:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3)
 979                             		.loc 1 544 0 is_stmt 1
 980 0103 FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 981 0109 58 AA                   		movu.B	[r10], r10
 982 010b 61 3A                   		cmp	#3, r10
 983 010d 21 1A                   		bne	.L101
 546:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Run((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER);	
 984                             		.loc 1 546 0
 985 010f 75 41 2F                		mov	#47, r1
 986 0112 05 00 00 00             		bsr	_SWTC_Run
 547:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					if ( dirty_foam_Data.status == ALGO_SV_WAIT_END)
 987                             		.loc 1 547 0
 988 0116 DC 77                   		mov.W	[r7], r7
 989 0118 64 77                   		and	#7, r7
 990 011a 61 77                   		cmp	#7, r7
 991 011c 21 2E                   		bne	.L102
 549:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						(void)SWTC_Run((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);	
 992                             		.loc 1 549 0
 993 011e 75 41 2C                		mov	#44, r1
 994 0121 05 00 00 00             		bsr	_SWTC_Run
 995 0125 2E 25                   		bra	.L102
 996                             	.L101:
 553:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB
 997                             		.loc 1 553 0
 998 0127 FB 72 00 00 00 00       		mov.L	#_Tab_HWCVS_data, r7
 999 012d EC 77                   		mov.L	[r7], r7
 1000 012f 75 41 2F                		mov	#47, r1
 1001 0132 CC 72                   		mov.B	[r7], r2
 1002 0134 75 22 7F                		and	#0x7f, r2
 1003 0137 05 00 00 00             		bsr	_SWTC_SetSValue
 554:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Stop((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER);
 1004                             		.loc 1 554 0
 1005 013b 75 41 2F                		mov	#47, r1
 1006 013e 05 00 00 00             		bsr	_SWTC_Stop
 555:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					(void)SWTC_Stop((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);
 1007                             		.loc 1 555 0
 1008 0142 75 41 2C                		mov	#44, r1
 1009 0145 05 00 00 00             		bsr	_SWTC_Stop
 1010 0149 03                      		.balign 2,3,2
 1011                             	.L102:
 559:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if (!SWTC_IsStopped((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER) && !SWTC_IsExpired((SWTC_Counte
 1012                             		.loc 1 559 0
 1013 014a 75 41 2F                		mov	#47, r1
 1014 014d 05 00 00 00             		bsr	_SWTC_IsStopped
 1015 0151 61 01                   		cmp	#0, r1
 1016 0153 20 13                   		beq	.L103
 1017 0155 03                      		.balign 2,3,5
 1018                             	.L107:
 565:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==0)
 1019                             		.loc 1 565 0
 1020 0156 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r7
 1021 015c CC 74                   		mov.B	[r7], r4
 1022 015e 5B 4A                   		movu.B	r4, r10
 1023 0160 61 0A                   		cmp	#0, r10
 1024 0162 21 4E                   		bne	.L132
 1025 0164 2E 10                   		bra	.L104
 1026                             	.L103:
 559:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				if (!SWTC_IsStopped((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER) && !SWTC_IsExpired((SWTC_Counte
 1027                             		.loc 1 559 0 discriminator 1
 1028 0166 75 41 2F                		mov	#47, r1
 1029 0169 05 00 00 00             		bsr	_SWTC_IsExpired
 1030 016d 61 01                   		cmp	#0, r1
 1031 016f 21 E7                   		bne	.L107
 1032 0171 38 26 02                		bra	.L89
 1033                             	.L104:
 567:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c ****            			SETBIT(TerminatedAlgorithmBmp[0], AAL_DIRTY_FOAM_IDENTIFY_ALG);
 1034                             		.loc 1 567 0
 1035 0174 FB 72 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r7
 1036 017a CC 7A                   		mov.B	[r7], r10
 1037 017c 65 4A                   		or	#4, r10
 1038 017e C3 7A                   		mov.B	r10, [r7]
 568:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		        	CLRBIT(ActiveAlgorithmBmp[0],AAL_DIRTY_FOAM_IDENTIFY_ALG);
 1039                             		.loc 1 568 0
 1040 0180 FB 72 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r7
 1041 0186 CC 7A                   		mov.B	[r7], r10
 1042 0188 75 2A FB                		and	#-5, r10
 1043 018b C3 7A                   		mov.B	r10, [r7]
 569:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.reduc_speed=0;
 1044                             		.loc 1 569 0
 1045 018d FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 1046 0193 CD 7A 01                		mov.B	1[r7], r10
 570:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.status = ALGO_SV_END;
 1047                             		.loc 1 570 0
 1048 0196 75 2A 98                		and	#0xffffff98, r10
 571:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					dirty_foam_Data.filter_foam_on=FALSE;
 1049                             		.loc 1 571 0
 1050 0199 65 6A                   		or	#6, r10
 1051 019b 7A 4A                   		bclr	#4, r10
 1052 019d C7 7A 01                		mov.B	r10, 1[r7]
 572:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					SETBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS);
 1053                             		.loc 1 572 0
 1054 01a0 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 1055 01a6 CC 7A                   		mov.B	[r7], r10
 1056 01a8 75 3A 20                		or	#32, r10
 1057 01ab C3 7A                   		mov.B	r10, [r7]
 573:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 					return;
 1058                             		.loc 1 573 0
 1059 01ad 38 EA 01                		bra	.L89
 1060                             	.L132:
 575:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				switch (dirty_foam_Data.status)
 1061                             		.loc 1 575 0
 1062 01b0 FB 32 00 00 00 00       		mov.L	#_dirty_foam_Data, r3
 1063 01b6 88 3F                   		mov.B	1[r3], r7
 1064 01b8 EF 3E                   		mov.L	r3, r14
 1065 01ba 64 77                   		and	#7, r7
 1066 01bc 60 17                   		sub	#1, r7
 1067 01be 61 67                   		cmp	#6, r7
 1068 01c0 24 0D                   		bgtu	.L108
 1069 01c2 FB A2 00 00 00 00       		mov.L	#.L116, r10
 1070 01c8 FE 67 A7                		mov.L	[r7,r10], r7
 1071                             		
 1072 01cb 7F 07                   	1:jmp	r7
 1073                             		.section	.rodata.AAL_Dirty_Foam_identify,"a",@progbits
 1074                             		.balign 4
 1075                             		.balign 4
 1076                             	.L116:
 1077 0000 00 00 00 00             		.long .L109
 1078 0004 00 00 00 00             		.long .L110
 1079 0008 00 00 00 00             		.long .L111
 1080 000c 00 00 00 00             		.long .L112
 1081 0010 00 00 00 00             		.long .L113
 1082 0014 00 00 00 00             		.long .L114
 1083 0018 00 00 00 00             		.long .L115
 1084                             		.section	.text.AAL_Dirty_Foam_identify
 1085                             	.L108:
 578:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=0;
 1086                             		.loc 1 578 0
 1087 01cd 88 3F                   		mov.B	1[r3], r7
 579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1088                             		.loc 1 579 0
 1089 01cf 76 27 9F 00             		and	#0x9f, r7
 1090 01d3 7A 47                   		bclr	#4, r7
 1091 01d5 80 3F                   		mov.B	r7, 1[r3]
 580:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 1092                             		.loc 1 580 0
 1093 01d7 61 3A                   		cmp	#3, r10
 1094 01d9 21 0D                   		bne	.L117
 582:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_1LIMIT_POWER;	
 1095                             		.loc 1 582 0
 1096 01db 75 27 F8                		and	#-8, r7
 584:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;
 1097                             		.loc 1 584 0
 1098 01de 75 37 21                		or	#33, r7
 1099 01e1 78 47                   		bset	#4, r7
 1100 01e3 80 3F                   		mov.B	r7, 1[r3]
 1101 01e5 03                      		.balign 2,3,5
 1102                             	.L117:
 588:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						CLRBIT(Statistics_update_flag, STATISTIC_FLAG_DIRTY_UPDATE);
 1103                             		.loc 1 588 0
 1104 01e6 FB 72 00 00 00 00       		mov.L	#_Statistics_update_flag, r7
 1105 01ec CC 7A                   		mov.B	[r7], r10
 1106 01ee 75 2A FE                		and	#-2, r10
 1107 01f1 2E 61                   		bra	.L135
 1108                             	.L109:
 593:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=1;
 1109                             		.loc 1 593 0
 1110 01f3 88 3B                   		mov.B	1[r3], r3
 594:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 1111                             		.loc 1 594 0
 1112 01f5 5B 4A                   		movu.B	r4, r10
 593:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=1;
 1113                             		.loc 1 593 0
 1114 01f7 75 23 9F                		and	#0xffffff9f, r3
 1115 01fa 75 33 20                		or	#32, r3
 1116 01fd C7 E3 01                		mov.B	r3, 1[r14]
 594:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 1117                             		.loc 1 594 0
 1118 0200 61 3A                   		cmp	#3, r10
 593:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=1;
 1119                             		.loc 1 593 0
 1120 0202 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 594:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 1121                             		.loc 1 594 0
 1122 0208 21 18                   		bne	.L118
 596:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							AAL_Load_Var_Init ();					
 1123                             		.loc 1 596 0
 1124 020a 05 00 00 00             		bsr	_AAL_Load_Var_Init
 597:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_LOAD_RESTORE;
 1125                             		.loc 1 597 0
 1126 020e CD 7A 01                		mov.B	1[r7], r10
 1127 0211 75 2A F8                		and	#-8, r10
 598:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.load_exe_time=0;
 1128                             		.loc 1 598 0
 1129 0214 65 4A                   		or	#4, r10
 1130 0216 7A 3A                   		bclr	#3, r10
 599:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;
 1131                             		.loc 1 599 0
 1132 0218 78 4A                   		bset	#4, r10
 603:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.reduc_speed=0;
 1133                             		.loc 1 603 0
 1134 021a 75 2A 9F                		and	#0xffffff9f, r10
 1135 021d 38 C1 00                		bra	.L136
 1136                             	.L118:
 605:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							if ((Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==2) || (Virtual_Sensor_Value[GI_VIRTUAL_SE
 1137                             		.loc 1 605 0
 1138 0220 60 14                   		sub	#1, r4
 1139 0222 5B 44                   		movu.B	r4, r4
 1140 0224 61 14                   		cmp	#1, r4
 1141 0226 25 05 38 24 01          		bgtu	.L99
 608:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									dirty_foam_Data.status= ALGO_WAIT_1L;
 1142                             		.loc 1 608 0
 1143 022b 75 23 F8                		and	#-8, r3
 609:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									dirty_foam_Data.filter_foam_on=FALSE;
 1144                             		.loc 1 609 0
 1145 022e 65 23                   		or	#2, r3
 1146 0230 7A 43                   		bclr	#4, r3
 1147 0232 80 7B                   		mov.B	r3, 1[r7]
 611:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 									if ( TESTBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE)==0)
 1148                             		.loc 1 611 0
 1149 0234 FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 1150 023a CC 7A                   		mov.B	[r7], r10
 1151 023c FD 74 CA 01             		tst	#1, r10
 1152 0240 3B 0C 01                		bne	.L99
 613:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 										IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].dirty_foa
 1153                             		.loc 1 613 0
 1154 0243 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+114, r1
 1155 0249 05 00 00 00             		bsr	_IncByteWithCheck
 614:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 										SETBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE);
 1156                             		.loc 1 614 0
 1157 024d CC 7A                   		mov.B	[r7], r10
 1158 024f 65 1A                   		or	#1, r10
 1159 0251 03                      		.balign 2,3,1
 1160                             	.L135:
 1161 0252 C3 7A                   		mov.B	r10, [r7]
 1162 0254 38 F8 00                		bra	.L99
 1163                             	.L110:
 622:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=1;
 1164                             		.loc 1 622 0
 1165 0257 88 3F                   		mov.B	1[r3], r7
 624:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3)
 1166                             		.loc 1 624 0
 1167 0259 5B 44                   		movu.B	r4, r4
 622:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=1;
 1168                             		.loc 1 622 0
 1169 025b 75 27 9F                		and	#0xffffff9f, r7
 623:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1170                             		.loc 1 623 0
 1171 025e 75 37 20                		or	#32, r7
 1172 0261 7A 47                   		bclr	#4, r7
 1173 0263 80 3F                   		mov.B	r7, 1[r3]
 624:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3)
 1174                             		.loc 1 624 0
 1175 0265 61 34                   		cmp	#3, r4
 1176 0267 3B E5 00                		bne	.L99
 627:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_2LIMIT_POWER;
 1177                             		.loc 1 627 0
 1178 026a 75 27 98                		and	#0xffffff98, r7
 629:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;	
 1179                             		.loc 1 629 0
 1180 026d 75 37 43                		or	#0x43, r7
 1181 0270 78 47                   		bset	#4, r7
 1182 0272 FB A2 00 00 00 00       		mov.L	#_dirty_foam_Data, r10
 1183 0278 C7 A7 01                		mov.B	r7, 1[r10]
 1184 027b 38 D1 00                		bra	.L99
 1185                             	.L111:
 634:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.reduc_speed=2;
 1186                             		.loc 1 634 0
 1187 027e 88 3F                   		mov.B	1[r3], r7
 1188 0280 75 27 9F                		and	#0xffffff9f, r7
 635:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1189                             		.loc 1 635 0
 1190 0283 75 37 40                		or	#64, r7
 1191 0286 7A 47                   		bclr	#4, r7
 1192 0288 80 3F                   		mov.B	r7, 1[r3]
 637:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if ( TESTBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE))
 1193                             		.loc 1 637 0
 1194 028a FB 72 00 00 00 00       		mov.L	#_Flags_2, r7
 1195 0290 CC 7A                   		mov.B	[r7], r10
 1196 0292 FD 74 CA 01             		tst	#1, r10
 1197 0296 20 14                   		beq	.L119
 639:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							IncByteWithCheck(&MachineStatistics.lastCyclesStats[MOST_RECENT_STAT_CYCLE_POS].dirty_foam_r
 1198                             		.loc 1 639 0
 1199 0298 FB 12 00 00 00 00       		mov.L	#_MachineStatistics+114, r1
 1200 029e 05 00 00 00             		bsr	_IncByteWithCheck
 640:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							CLRBIT(Flags_2, STATISTIC_FLAG_DIRTY_UPDATE);
 1201                             		.loc 1 640 0
 1202 02a2 CC 7A                   		mov.B	[r7], r10
 1203 02a4 75 2A FE                		and	#-2, r10
 1204 02a7 C3 7A                   		mov.B	r10, [r7]
 1205 02a9 03                      		.balign 2,3,5
 1206                             	.L119:
 643:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3)
 1207                             		.loc 1 643 0
 1208 02aa FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r7
 1209 02b0 58 77                   		movu.B	[r7], r7
 1210 02b2 61 37                   		cmp	#3, r7
 1211 02b4 3B 98 00                		bne	.L99
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							(void)SWTC_SetSValue((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER, (SWTC_MCounterValue)TOUT_EN
 1212                             		.loc 1 645 0
 1213 02b7 FB 72 00 00 00 00       		mov.L	#_dirty_foam_setting_data, r7
 1214 02bd 59 7A 04                		movu.B	4[r7], r10
 1215 02c0 61 2A                   		cmp	#2, r10
 1216 02c2 25 08                   		bleu	.L121
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							(void)SWTC_SetSValue((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER, (SWTC_MCounterValue)TOUT_EN
 1217                             		.loc 1 645 0 is_stmt 0 discriminator 1
 1218 02c4 EC 77                   		mov.L	[r7], r7
 1219 02c6 89 7A                   		mov.B	5[r7], r2
 1220 02c8 2E 04                   		bra	.L120
 1221                             	.L121:
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							(void)SWTC_SetSValue((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER, (SWTC_MCounterValue)TOUT_EN
 1222                             		.loc 1 645 0
 1223 02ca 66 82                   		mov	#8, r2
 1224                             		.balign 2,3,2
 1225                             	.L120:
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							(void)SWTC_SetSValue((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER, (SWTC_MCounterValue)TOUT_EN
 1226                             		.loc 1 645 0 discriminator 3
 1227 02cc 75 41 2C                		mov	#44, r1
 646:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status = ALGO_SV_WAIT_END;
 1228                             		.loc 1 646 0 is_stmt 1 discriminator 3
 1229 02cf FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							(void)SWTC_SetSValue((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER, (SWTC_MCounterValue)TOUT_EN
 1230                             		.loc 1 645 0 discriminator 3
 1231 02d5 05 00 00 00             		bsr	_SWTC_SetSValue
 646:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status = ALGO_SV_WAIT_END;
 1232                             		.loc 1 646 0 discriminator 3
 1233 02d9 CD 7A 01                		mov.B	1[r7], r10
 1234 02dc 65 7A                   		or	#7, r10
 1235                             		.balign 2,3,5
 1236                             	.L136:
 1237 02de C7 7A 01                		mov.B	r10, 1[r7]
 1238 02e1 2E 6B                   		bra	.L99
 1239                             	.L112:
 652:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=TRUE;
 1240                             		.loc 1 652 0
 1241 02e3 88 3F                   		mov.B	1[r3], r7
 1242 02e5 78 47                   		bset	#4, r7
 1243 02e7 2E 61                   		bra	.L137
 1244                             	.L113:
 656:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1245                             		.loc 1 656 0
 1246 02e9 88 3B                   		mov.B	1[r3], r3
 657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 1247                             		.loc 1 657 0
 1248 02eb 5B 44                   		movu.B	r4, r4
 656:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1249                             		.loc 1 656 0
 1250 02ed 7A 43                   		bclr	#4, r3
 1251 02ef C7 E3 01                		mov.B	r3, 1[r14]
 657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 1252                             		.loc 1 657 0
 1253 02f2 61 34                   		cmp	#3, r4
 656:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1254                             		.loc 1 656 0
 1255 02f4 FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WASH]==3) 
 1256                             		.loc 1 657 0
 1257 02fa 21 52                   		bne	.L99
 659:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.reduc_speed=0;
 1258                             		.loc 1 659 0
 1259 02fc 75 23 9F                		and	#0xffffff9f, r3
 1260 02ff 80 7B                   		mov.B	r3, 1[r7]
 660:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							AAL_Load_Var_Init();
 1261                             		.loc 1 660 0
 1262 0301 05 00 00 00             		bsr	_AAL_Load_Var_Init
 662:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.load_exe_time=0;
 1263                             		.loc 1 662 0
 1264 0305 CD 7A 01                		mov.B	1[r7], r10
 1265 0308 7A 3A                   		bclr	#3, r10
 664:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status= ALGO_LOAD_RESTORE;
 1266                             		.loc 1 664 0
 1267 030a 75 2A F8                		and	#-8, r10
 666:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.filter_foam_on=TRUE;
 1268                             		.loc 1 666 0
 1269 030d 65 4A                   		or	#4, r10
 1270 030f 78 4A                   		bset	#4, r10
 1271 0311 2E CD                   		bra	.L136
 1272                             	.L115:
 671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1273                             		.loc 1 671 0
 1274 0313 88 3F                   		mov.B	1[r3], r7
 672:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (SWTC_IsExpired((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER) )
 1275                             		.loc 1 672 0
 1276 0315 75 41 2C                		mov	#44, r1
 671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1277                             		.loc 1 671 0
 1278 0318 7A 47                   		bclr	#4, r7
 1279 031a 80 3F                   		mov.B	r7, 1[r3]
 672:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (SWTC_IsExpired((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER) )
 1280                             		.loc 1 672 0
 1281 031c 05 00 00 00             		bsr	_SWTC_IsExpired
 1282 0320 61 01                   		cmp	#0, r1
 671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1283                             		.loc 1 671 0
 1284 0322 FB A2 00 00 00 00       		mov.L	#_dirty_foam_Data, r10
 672:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						if (SWTC_IsExpired((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER) )
 1285                             		.loc 1 672 0
 1286 0328 20 24                   		beq	.L99
 674:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							dirty_foam_Data.status=ALGO_SV_END; 
 1287                             		.loc 1 674 0
 1288 032a CD A7 01                		mov.B	1[r10], r7
 1289 032d 75 27 F8                		and	#-8, r7
 1290 0330 65 67                   		or	#6, r7
 1291 0332 C7 A7 01                		mov.B	r7, 1[r10]
 675:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 							SETBIT(Flags_1,JIF_FLAG1_ALGO_DIRTY_F_KO_POS);
 1292                             		.loc 1 675 0
 1293 0335 FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 1294 033b CC 7A                   		mov.B	[r7], r10
 1295 033d 75 3A 20                		or	#32, r10
 1296 0340 38 12 FF                		bra	.L135
 1297                             	.L114:
 680:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 						dirty_foam_Data.filter_foam_on=FALSE;
 1298                             		.loc 1 680 0
 1299 0343 88 3F                   		mov.B	1[r3], r7
 1300 0345 7A 47                   		bclr	#4, r7
 1301 0347 03                      		.balign 2,3,5
 1302                             	.L137:
 1303 0348 C7 E7 01                		mov.B	r7, 1[r14]
 1304 034b 03                      		.balign 2,3,5
 1305                             	.L99:
 687:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_
 1306                             		.loc 1 687 0
 1307 034c FB 72 00 00 00 00       		mov.L	#_Tab_HWCVS_data, r7
 1308 0352 EC 77                   		mov.L	[r7], r7
 1309 0354 75 41 2F                		mov	#47, r1
 1310 0357 CC 72                   		mov.B	[r7], r2
 703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 1311                             		.loc 1 703 0
 1312 0359 6F 7A                   		popm	r7-r10
 687:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 				(void)SWTC_SetSValue((SWTC_CountersType)AAL_STAB_STATO3_S_TIMER, (SWTC_SCounterValue)TOUT_STAB_
 1313                             		.loc 1 687 0
 1314 035b 75 22 7F                		and	#0x7f, r2
 1315 035e 04 00 00 00             		bra	_SWTC_SetSValue
 1316                             	.L131:
 694:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  SETBIT(TerminatedAlgorithmBmp[0], AAL_DIRTY_FOAM_IDENTIFY_ALG);
 1317                             		.loc 1 694 0
 1318 0362 FB 72 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r7
 1319 0368 CC 7A                   		mov.B	[r7], r10
 1320 036a 65 4A                   		or	#4, r10
 1321 036c C3 7A                   		mov.B	r10, [r7]
 695:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  CLRBIT(ActiveAlgorithmBmp[0],AAL_DIRTY_FOAM_IDENTIFY_ALG);
 1322                             		.loc 1 695 0
 1323 036e FB 72 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r7
 1324 0374 CC 7A                   		mov.B	[r7], r10
 1325 0376 75 2A FB                		and	#-5, r10
 1326 0379 C3 7A                   		mov.B	r10, [r7]
 696:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.reduc_speed=0;
 1327                             		.loc 1 696 0
 1328 037b FB 72 00 00 00 00       		mov.L	#_dirty_foam_Data, r7
 1329 0381 CD 7A 01                		mov.B	1[r7], r10
 697:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.status= ALGO_SV_END;
 1330                             		.loc 1 697 0
 1331 0384 75 2A 98                		and	#0xffffff98, r10
 698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  dirty_foam_Data.filter_foam_on=FALSE;
 1332                             		.loc 1 698 0
 1333 0387 65 6A                   		or	#6, r10
 1334 0389 7A 4A                   		bclr	#4, r10
 1335 038b C7 7A 01                		mov.B	r10, 1[r7]
 1336                             		.balign 2,3,1
 1337                             	.L138:
 703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 1338                             		.loc 1 703 0
 1339 038e 6F 7A                   		popm	r7-r10
 699:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** 		  (void)SWTC_Stop((SWTC_CountersType)AAL_END_ALWAYS3_M_TIMER);
 1340                             		.loc 1 699 0
 1341 0390 75 41 2C                		mov	#44, r1
 1342 0393 04 00 00 00             		bra	_SWTC_Stop
 1343                             	.L89:
 703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\ActivateAlgorithm.c **** }
 1344                             		.loc 1 703 0
 1345 0397 3F 7A 04                		rtsd	#16, r7-r10
 1346                             	.LFE7:
 1348                             		.comm	_Aal_TurbidityRead,3,1
 1349                             		.global	_AAL_algList
 1350                             		.section	.rodata.AAL_algList,"a",@progbits
 1351                             		.balign 4
 1354                             	_AAL_algList:
 1355 0000 00 00 00 00             		.long	_AAL_TurbiditySensorCalibration
 1356 0004 00 00 00 00             		.long	_AAL_LevToTimeRefUpdate
 1357 0008 00 00 00 00             		.long	_AAL_Dirty_Foam_identify
 1358 000c 00 00 00 00             		.long	_NullFunc
 1359 0010 00 00 00 00             		.long	_AAL_ReadVirtualSensor
 1360 0014 00 00 00 00             		.long	_AAL_ReadTurbidityContinuous
 1361 0018 00 00 00 00             		.long	_AAL_ReadTurbidityOneShot
 1362 001c 00 00 00 00             		.long	_AAL_ValidateTurbidityCalibration
 1540                             	.Letext0:
 1541                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 1542                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 1543                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 1544                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\CFG_DishWasher\\CFG_Inertia/ProductSafety_cfg.h"
 1545                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmDefines.h"
 1546                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 1547                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 1548                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\PlatformLibrary\\LIB_IOManager/OutputManagerExp.h"
 1549                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 1550                             		.file 11 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_ActivateAlgorithm.h"
 1551                             		.file 12 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 1552                             		.file 13 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Control/DW_Fault.h"
 1553                             		.file 14 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_FuncLib.h"
 1554                             		.file 15 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Control/DW_Statistics.h"
