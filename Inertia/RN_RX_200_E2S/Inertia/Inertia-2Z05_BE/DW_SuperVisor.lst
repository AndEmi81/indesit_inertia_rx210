   1                             		.file	"DW_SuperVisor.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.SPV_getCycleHeaderPtr,"ax",@progbits
   5                             		.global	_SPV_getCycleHeaderPtr
   7                             	_SPV_getCycleHeaderPtr:
   8                             	.LFB2:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Control/DW_SuperVisor.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Copyright (c) 2004-2005, Indesit Company, EDT.
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Tutti i diritti sono riservati. All rights reserved.
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \Par	
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \Header file.
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \file    DW_Supervisor.c
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \ingroup DW_Supervisor
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date    08/04/2008
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author  Valeria Catani
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version 1.0.0
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \Par		History (titolo)
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  		
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version old version
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date    
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author Marco Quintini 
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \n		
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ******** */
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Includes */
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ******** */
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #include "CstmHeaders.h"
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #include "LIB_ResetExp.h"
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Defines and Macros */
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /** Bit definition per updateCycleDependentFunctions */
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #define CURRENT_SPV_CALL	0
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #define PREV_SPV_CALL		(CURRENT_SPV_CALL + 1)
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /** Soluzioni alternative per i cicli di riferimento per le funzioni */
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*#define SOLUTION_1_FOR_REF_CYCLE*/	/* Nei cicli DELAY, PAUSE ed END la fase indica sempre il cicl
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   avviato. 
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   Il ciclo di riferimento per le tabelle di regolazione rimane
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   sempre il ciclo avviato, anche se interviene un Jump ad un
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   ciclo diverso */
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*SOLUTION 2 E' COME DEA601 CON UNA PRECISAZIONE SULLA GESTIONE DEL CICLO DI RIFERIMENTO IN PAUSA *
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #define SOLUTION_2_FOR_REF_CYCLE  /* Nei cicli DELAY, PAUSE ed END la fase indica sempre il ciclo
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   avviato. 
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   In caso di Jump ad un ciclo diverso da quello avviato, il 
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   ciclo di riferimento per le funzioni diventa il nuovo ciclo.
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  									   Questo vale anche per il ciclo PAUSE, mentre in END il ciclo
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  									   di riferimento torna ad essere il ciclo avviato (=> possibile
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  									   incoerenza nella transizione RUN->END!!) */
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*#define SOLUTION_3_FOR_REF_CYCLE*/ /* Nei cicli DELAY, PAUSE ed END la fase indica rispettivament
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   il ciclo che partir�, che � stato interrotto, che � terminato.
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   In PAUSE ed END la fase potrebbe differire dal ciclo avviato
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   nel caso di Jump ad un ciclo diverso.
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									   In caso di Jump ad un ciclo diverso da quello avviato, il
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  									   il ciclo di riferimento per le funzioni diventa il nuovo
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  									   ciclo, e questo vale anche per PAUSE ed END */
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* *************************** */
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Typedef, Structs and Unions */
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* *************************** */
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* **************************** */
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Prototype of local functions */
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* **************************** */
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_updateCycleLabel(void);
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_saveIntptState(Interpreter_Struct *pDestinationBuffer);
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_restoreIntptState(const Interpreter_Struct *pSourceBuffer);
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_stopMicroprogVars(void);
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_testCycleLabel(uint8_t cycle, uint8_t completeLabel);
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_testRefCycleLabel(uint8_t completeLabel);
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isCycleWithLabelRunning(uint8_t completeLabel);
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_manageDelayCounters(void);
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_resetSensVariablesButDelay(void);
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_startCycleInit(void);
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_endCycleResetVars(void);
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_startCycle(void);
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_updateFunctionValue(uint8_t funcID, uint8_t *funcValue);
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_generateColdReset(void);
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_updateFaultPointers(void);
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Exported variables */
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ****************** */
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* **************** */
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Global variables */
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* **************** */
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*static uint8_t updateCycleDependentFunctions = 0;*/
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ***************** */
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Exported function */
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* ***************** */
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Gestisce le transizioni di stato della macchina.
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global) � la struttura che contiene ciclo, fase, passo ecc.
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		SelectorFunctionValue (global)
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out]	
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		none
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:		
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			30/05/2006
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_superVisor(void)
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint16_t tempFuncValue;
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t interpreterResult;
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t destinationCycle;
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t startFunctionValue;
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t retCode;
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t delaySync = FALSE;
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t delayHHReg_changed,delayMMReg_changed;
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t started_cycle;
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H)
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t classBCheckTestWD_EndCycle = FALSE;
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H) */
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK SELETTORE PROGRAMMI                                                            
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_SELECTOR)) == REG_CHANGED )
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_SELECTOR), &tempFuncValue);
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if( (uint8_t)(tempFuncValue) < PHASES_PROGRAMMING_NUM )
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SelectorFunctionValue = (uint8_t)(tempFuncValue);
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				{
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase = SelectorFunctionValue;
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));			    
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					/*SETBIT(updateCycleDependentFunctions, CURRENT_SPV_CALL);*/  /*No funzioni dipendenti dal cic
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				}
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				REG_updateOldReg((uint8_t)(FUNC_ID_SELECTOR));
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			else
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/* Do nothing (keep BufOldReg[i] unchanged) */
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Gestire in modo particolare il valore della funzione (es. valore di default)? �_� */
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_SELECTOR));
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (keep BufOldReg[i] unchanged) */
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK START REG
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	started_cycle = FALSE;
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	  	    
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_START)) == REG_CHANGED )
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	bool_t rejectedRegulation = FALSE;		/*CAPIRE SE UTILE IN DW!!!*/
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_START), &tempFuncValue);
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK)
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			startFunctionValue = (uint8_t)(tempFuncValue);
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			switch(startFunctionValue)
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				case FS_START_CONDITION:
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if(Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{/** START CICLO */
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  SPV_startCycle();	
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  /*DW: Se il ciclo in partenza � SAT (AUTOTEST) va aggiornato il contatore corrispondente (
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  /*upDateNumTimesSAT();*/
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  started_cycle = TRUE;
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  		
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}		
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  /** Ripristina lo stato precedente la pausa */
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_restoreIntptState(&Paused_Intpt_Data[0]);
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_PARTIAL_INIT));												    		    					
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					else
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/* do nothing */
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					break;
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				case FS_RESET_CONDITION:
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				case FS_RESET_FAULT:
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					rejectedRegulation = TRUE;	
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_PROGRAMMING, &destinationCycle) == S_OK )
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == FS_RESET_CONDITION )
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						{/* RESET COND : gestita in tutti gli stati (anche in FAULT)*/
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							rejectedRegulation = FALSE;	  
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == CMPLT_LBL_END )
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							{
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H)
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							/* Class B certification */
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								/*
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								Se con la RESET_CONDITION si passa da END a
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								PROGRAMMING viene richiesto il test del Watchdog
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								*/
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								classBCheckTestWD_EndCycle = TRUE;
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H) */
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							}
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							else{
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								IncWordWithCheck(&MachineStatistics.globalStats.user_cycle_reset);
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							}	
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						}
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == FS_RESET_FAULT )
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						{/* Richiesto RESET di un fault */
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							{/* Sono nel ciclo di FAULT  - test superfluo ?*/
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								rejectedRegulation = FALSE;
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*								if( CurrentFault.faultCodes.code != CODE_NO_FAULT )
 268:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								{
 269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									 Se il ciclo � FAULT CurrentFault non dovrebbe mai
 270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									essere uguale da 0, a meno che non sia stata resettata
 271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									in modo accidentale
 272:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									FLT_saveCurrentFault();
 274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								}*/ /*AE FIXME*/
 275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								FLT_currentFaultReset();  
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								FLT_faultMgmtDataReset(); 
 278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							}
 279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						}
 280:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						
 281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						if(rejectedRegulation == FALSE)
 282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						{
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].cycle = destinationCycle;
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase = SelectorFunctionValue;
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/*	SETBIT(updateCycleDependentFunctions, CURRENT_SPV_CALL);*/  /*non serve in dw*/
 288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							
 289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							/* Reset di alcune variabili */
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							SPV_resetSensVariablesButDelay();
 291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						}
 292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					else
 294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/* 
 296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						La presenza del ciclo di PROGRAMMING viene verificata ad ogni reset
 297:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						freddo ed in caso di assenza viene generato il fault file di setting.
 298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						Dunque l'unica possibilit� di rilevare l'assenza del ciclo durante
 299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						l'esecuzione del Supervisore � che il file di setting si sia corrotto
 300:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						dopo l'ultimo reset freddo.Utilizzo la funzione che mi permette 
 301:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						di preservare le statistiche al RESET freddo.					
 302:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						*/
 303:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							
 304:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_generateColdReset(); /*ForceColdReset();*/
 305:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					
 307:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					break;
 308:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				case FS_RESTART_CONDITION:
 310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/* 
 311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				DEA 602 implementa questa regolazione come Arkadia (stesse specifiche) 
 312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				per eventuali nuove interfacce che la potrebbero utilizzare.
 313:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				In DEA 601 non era prevista.
 314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				*/
 315:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					/* Equivale ad una RESET_CONDITION seguita da una START_CONDITION */
 317:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) &&
 319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						(SelectorFunctionValue != StartedCycle) )
 320:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 321:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/*
 322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						La RESTART_CONDITION � accettata solo se si � in RUN e se il ciclo
 323:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						che si vuole avviare � diverso da quello in corso
 324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						*/
 325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						
 326:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/* Operazioni da eseguire al RESET di un ciclo */
 327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					/*	SETBIT(updateCycleDependentFunctions, CURRENT_SPV_CALL);*/ /*non serve in dw*/
 328:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_resetSensVariablesButDelay();
 329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 330:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/** RESTART CICLO */					
 331:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					   	
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_startCycle();
 333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					else
 335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 336:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						rejectedRegulation = TRUE;
 337:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 338:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					
 339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					break;
 340:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				case FS_PAUSE_CONDITION:
 342:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					
 343:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					/* Se il ciclo attivo � di tipo RUN o DELAY si va in PAUSE */
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					(void)SPV_goingToSleepManager();
 345:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 346:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					break;
 347:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 348:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				case FS_DONT_CARE:
 349:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				default:
 350:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					break;					
 351:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
 352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 353:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}		
 354:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 355:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Gestire in modo particolare il valore della funzione (es. valore di default)? �_� */
 357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 358:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
 359:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 360:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (keep BufOldReg[i] unchanged) */
 361:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			rejectedRegulation = TRUE;
 362:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 363:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 364:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if(rejectedRegulation == FALSE)
 365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 366:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_START));
 367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 368:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 369:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
 370:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 371:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**	Aggiorno l'etichetta del ciclo che potrebbe essere cambiata	*/
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 373:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 375:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   /**
 376:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 377:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK DELAY TIMER                                                            
 378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 379:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 380:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   delayHHReg_changed = REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_HH);
 382:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   delayMMReg_changed = REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_MM); 
 384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 386:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Check Delay Hours */
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( delayHHReg_changed == REG_CHANGED )
 388:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_HH), &tempFuncValue);
 390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 391:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 392:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.hours = (uint16_t)(tempFuncValue);  /* aggiornamento delay in ore */
 394:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 395:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Richiesta sincronizzazione del contatore secondi del delay */
 396:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			delaySync = TRUE;
 397:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 399:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 400:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 401:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 403:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 404:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
 405:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 406:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (keep BufOldReg[i] unchanged) */
 407:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 408:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 409:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 410:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Check Delay Minutes */    
 412:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (delayHHReg_changed == REG_CHANGED) || (delayMMReg_changed == REG_CHANGED) )
 413:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* aggiornamento in corrispondenza di cambiamento regolazione minuti o ore */
 414:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_MM), &tempFuncValue);
 416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 417:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 418:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.minutes = (uint16_t)(tempFuncValue);  /* aggiornamento delay in ore */
 420:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 421:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Richiesta sincronizzazione del contatore secondi del delay */
 422:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			delaySync = TRUE;
 423:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 424:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 425:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 426:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if (retCode == REG_ERR_FUNC_NOT_FOUND)
 427:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{/* regolazione minuti non presente */
 428:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		  
 429:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		  if (delayHHReg_changed == REG_CHANGED)
 430:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		  { /* cambiata reg ore, azzero minuti */
 431:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		  
 432:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    	Delay.minutes = 0;  
 433:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		  }
 434:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    
 435:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 436:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 437:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 438:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Gestire in modo particolare il valore della funzione (es. valore di default)? �_� */
 439:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Azzerare DelayInMinutes (in tal caso non � necessario resettare
 440:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			   Delay_Counter: infatti l'unico effetto dell'azzeramento di DelayInMinutes pu�
 441:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			   essere l'uscita da DELAY, ed in tal caso il valore di Delay_Counter �
 442:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			   indifferente)? �_� */
 443:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 444:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 445:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 446:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
 447:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 448:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (keep BufOldReg[i] unchanged) */
 449:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 450:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 451:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 452:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (delaySync == TRUE)
 454:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* regolazione Delay HH o Delay MM cambiata -> richiesta sincronizzazione timer delay */
 455:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	  
 456:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	  /*SPV_setupDelayCounterVal();*/
 457:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 /*nel manager verr� opportunamente inizializzato */
 458:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	  (void)SWTC_SetSValue ((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER,(SWTC_SCounterValue)0);
 459:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 460:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 461:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 462:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 463:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 464:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK TRANSIZIONI DELAY->RUN, RUN->DELAY                                                         
 465:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 466:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 467:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 468:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) 
 469:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 470:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (Delay.hours != 0) || (Delay.minutes != 0) )
 471:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 472:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/** Vai in DELAY */ 
 473:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if( SPV_searchCycleByLabel(CMPLT_LBL_DELAY, &destinationCycle) == S_OK )
 474:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{
 475:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 476:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
 477:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/* Numero di partenze ritardate */
 478:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* #if defined (BUILD_FREESCALE_GB60) */
 479:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 480:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				IncWordWithCheck(&MachineStatistics.globalStats.delayedCycles_Num);
 481:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 482:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*
 483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined (BUILD_RENESAS_36079)
 484:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 485:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			uint16_t pack1CompatibilityTempVar = MachineStatistics.globalStats.delayedCycles_Num;
 486:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 487:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				IncWordWithCheck(&pack1CompatibilityTempVar);
 488:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 489:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				MachineStatistics.globalStats.delayedCycles_Num = pack1CompatibilityTempVar;
 490:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				
 491:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
 492:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
 493:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 494:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* _STATISTICS_ON_ */
 495:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 496:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 497:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 498:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/* Imposta Opcode e valore iniziale per Delay_Counter */
 499:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SPV_setupDelayCounter();
 500:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				
 501:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/** Cambio stato */
 502:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 503:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/*	Interpreter_Data[0].phase = SelectorFunctionValue; OLD */
 504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = StartedCycle;
 505:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));										
 506:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
 507:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			else
 508:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{/* Recovery case */
 509:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.hours = 0;		
 510:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.minutes = 0;		
 511:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}			
 512:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 513:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 514:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_DELAY )
 515:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{		
 516:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (Delay.hours == 0) && (Delay.minutes == 0) )
 517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 518:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/** 
 519:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Si Parte 
 520:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			*/ 
 521:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 522:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/*	Interpreter_Data[0].cycle = SelectorFunctionValue; OLD */
 523:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = Interpreter_Data[0].phase;
 524:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
 525:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));									
 526:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 527:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 528:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
 529:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 530:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* do nothing */ 
 531:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 532:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 533:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 534:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**	Aggiorno l'etichetta del ciclo che potrebbe essere cambiata	*/
 535:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 536:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 537:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/** Conteggio Delay */
 538:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_manageDelayCounters();
 539:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 540:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 541:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 542:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 543:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		IN ARKADIA: GESTIONE INGRESSO IN PAUSE A CAUSA DEL WARNING PORTA APERTA
 544:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		IN DEA602 PORTA APERTA GESTITA IN MODO AUTONOMO DAI UP E ALGORITMI,
 545:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	  ALCUNI DEVONO CONTINUARE A FUNZIONARE, VEDI SCARICO
 546:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 547:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/
 548:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 549:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 550:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 551:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		GESTIONE INGRESSO - PERMANENZA NELLO STATO DI FAULT                                              
 552:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 553:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 554:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*AE FIXME Sul discorso dei fault ci dovrebbe lavorare Emanuela*/
 555:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*	if( CurrentFault.faultCodes.code != CODE_NO_FAULT )
 556:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 557:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 558:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( Interpreter_Data[0].completeLabel.s.label != LBL_FAULT )
 559:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{  sono in uno stato diverso da FAULT : INGRESSO in FAULT
 560:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 561:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			* Ingresso nello stato di FAULT
 562:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 563:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if( SPV_searchCycleByLabel(CMPLT_LBL_FAULT, &destinationCycle) == S_OK )
 564:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{
 565:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						
 566:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
 567:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				 Aggiornamento statistiche di fine ciclo
 568:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				STC_updateLastCycleStat_END(1);
 569:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif 			 _STATISTICS_ON_
 570:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 571:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				* Va in FAULT
 572:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 573:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 574:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				 Fase: codice di allarme
 575:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = CurrentFault.faultCodes.code;
 576:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 577:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));									
 578:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].completeLabel.b = CMPLT_LBL_FAULT;
 580:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 581:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SETBIT(updateCycleDependentFunctions, CURRENT_SPV_CALL);  non serve in dw
 582:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 583:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				* All'ingresso in FAULT viene resettato comunque il valore del delay + altre variabili
 584:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SPV_resetSensVariables();
 585:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
 586:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			else
 587:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{
 588:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 589:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				La presenza del ciclo di FAULT viene verificata ad ogni reset
 590:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				freddo ed in caso di assenza viene generato il fault file di setting.
 591:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Dunque l'unica possibilit� di rilevare l'assenza del ciclo durante
 592:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				l'esecuzione del Supervisore � che il file di setting si sia corrotto
 593:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				dopo l'ultimo reset freddo. Utilizzo la funzione che mi permette di 
 594:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				preservare le statistiche.
 595:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 596:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 597:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SPV_generateColdReset(); 
 598:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}					
 599:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 600:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
 601:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{ sono gi� in fault-> controllo se cambia il fault code per cambiare fase
 602:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 603:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if ( Interpreter_Data[0].phase != CurrentFault.faultCodes.code )
 604:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{ fase diversa dal fault corrente: � cambiato il codice
 605:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 606:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = CurrentFault.faultCodes.code;   aggiornamento fase
 607:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 608:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));	
 609:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 610:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SPV_resetSensVariables();
 611:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
 612:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 613:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 614:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}*/
 615:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 616:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/*
 617:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 618:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		END GESTIONE INGRESSO NELLO STATO DI FAULT                                                       
 619:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 620:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  
 621:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 622:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
 623:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Controllo funzioni utilizzate dall'Interprete 
 624:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */  	
 625:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 626:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 627:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 628:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK CESTO SELEZIONATO                                                             
 629:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 630:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 631:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
 632:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_BASKET), &DishRackFunctionValue) == S_FALSE)
 633:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 634:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		DishRackFunctionValue = DISH_RACK_DFLT_VALUE;
 635:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 636:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 637:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 638:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 639:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 640:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK DUREZZA ACQUA PER QUANTITA' ACQUA RIGENERE                                                 
 641:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 642:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 643:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
 644:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_WATER_HARDNESS), &WaterForRegenerate) == S_FALSE)
 645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 646:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		WaterForRegenerate = REGENERATE_WATER_DFLT_VALUE;
 647:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 648:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 649:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 650:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 651:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK ZONE WASH                                                            
 652:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 653:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 654:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   	/* nota : nel caso di voglia gestire il vecchio tipo di mezzocarico con l'alternato a 6 posizion
 655:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	regolazione e inserire le due tabelle corrispondenti al mezzo carico voluto.*/
 656:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_ZONE_WASH), &ZoneWashFunctionValue) == S_FALSE)
 658:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 659:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ZoneWashFunctionValue = ZONE_WASH_DFLT_VALUE;
 660:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 661:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 662:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 663:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 664:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CHECK ZONE RINSE AID                                                             
 665:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 666:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/  	
 667:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   	/* per rilascio brillantante*/
 668:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 669:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_RINSE_AID), &RinseAidFunctionValue) == S_FALSE)
 670:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		RinseAidFunctionValue = RINSE_AID_DFLT_VALUE;
 672:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 673:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 674:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 675:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Porketta per Renesas compliancy (per garantire allineamento a word) ...
 676:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/
 677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	LastFaultCopy.faultCodes = MachineStatistics.lastFault[0].faultCodes;
 678:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 679:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 680:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 681:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 682:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 683:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CARICAMENTO PUNTATORI PER PARAMETRI FAULT (UTILIZZATI IN UP DRAIN E DW_FAULT)                    
 684:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 685:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/
 686:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 687:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Start ciclo di Autotest - va processato qui perch� ho aggiornato la Label */
 688:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if ( started_cycle == TRUE )
 689:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{  
 690:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    if ( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 691:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    {
 692:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	      /* Reset var Autotest, devono essere applicate i parametri Fault per Autotest */
 693:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	      FLT_faultMgmtDataReset();  
 694:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    }
 695:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 696:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 697:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateFaultPointers();
 699:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 700:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (uP_AltCtrl_Data.SV_invalid_4alt == TRUE) || !(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_V
 701:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 702:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=0xFF;
 703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 704:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
 705:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 706:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WA
 707:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 708:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 709:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
 710:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if(!(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_DRAIN))) )
 711:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 712:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=0xFF;
 713:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 714:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
 715:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 716:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_D
 717:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 718:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 719:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/**
 720:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	=====================
 721:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 CHIAMATA INTERPRETE 
 722:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	=====================	
 723:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/
 724:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	interpreterResult = ITP_programFlowInterpreter();
 725:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 726:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if((interpreterResult & ERR_CODE) == 0)
 727:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 728:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/**	Aggiorno l'etichetta del ciclo che potrebbe essere cambiata	(a causa di un JumpIf) */
 729:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		SPV_updateCycleLabel();
 730:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				
 731:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		switch( interpreterResult )
 732:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 733:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 734:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			case END_PHASE:
 735:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				
 736:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/*In RUN e FAULT non posso reinizializzare la fase. In RUN il ciclo procede con la fase success
 737:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  in FAULT il comportamento viene imposto da setting */
 738:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  
 739:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				if( (Interpreter_Data[0].completeLabel.s.label != LBL_RUN) && (Interpreter_Data[0].completeLabe
 740:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/*if( (Interpreter_Data[0].completeLabel.s.label != LBL_RUN)  )*/ /*DEBUG*/
 741:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				{
 742:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					/** Nei cicli sa
 743:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						fase, che va ogni volta reinizialinon di RUN e non di FAULT l'Interprete deve ciclare sempre 
 744:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							
 745:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase --;
 746:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));									
 747:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				}
 748:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 749:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			break;
 750:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 751:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			case END_CYCLE:
 752:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			case END_CYCLE_RESET:
 753:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/** Ciclo terminato naturalmente (include anche il caso di ultima fase del
 754:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					ciclo terminata) o incontrata una condizione di reset ciclo. */
 755:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label != LBL_RUN )
 756:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				{		
 757:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  if (Interpreter_Data[0].completeLabel.s.label != LBL_FAULT)
 758:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  {
 759:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   					/** Nei cicli non di RUN e non di FAULT l'Interprete deve ciclare sempre sulla stessa
 760:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   						fase, che va ogni volta reinizializzata */
 761:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   					ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));
 762:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  }
 763:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  
 764:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  /* else : nel caso di FAULT non modifico nulla (non si dovrebbe mai verificare) */ 
 765:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				}
 766:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				else
 767:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				{/* RUN -> END */
 768:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					
 769:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_END, &destinationCycle) == S_OK )
 770:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 771:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
 772:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/* Aggiornamento statistiche di fine ciclo */
 773:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						STC_updateLastCycleStat_END(0);
 774:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* _STATISTICS_ON_ */
 775:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****              															 
 776:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			            /* cancellazione Last Fault in END Autotest */  
 777:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			            if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 778:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			            {
 779:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			            	/*
 780:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			                FLT_lastFaultUpdate(No_Fault, &MachineStatistics.lastFault[0]);
 781:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			                */
 782:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			            }
 783:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 784:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_1_FOR_REF_CYCLE) || defined(SOLUTION_2_FOR_REF_CYCLE)
 785:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 786:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					/*	Interpreter_Data[0].phase = SelectorFunctionValue; OLD */
 787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = StartedCycle;
 788:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 789:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_3_FOR_REF_CYCLE)
 790:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 791:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = Interpreter_Data[0].cycle;
 792:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 793:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
 794:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].cycle = destinationCycle;
 796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));										
 797:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_END;
 799:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							    
 800:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			            SPV_endCycleResetVars();
 801:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 802:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_2_FOR_REF_CYCLE)
 803:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/*SETBIT(updateCycleDependentFunctions, CURRENT_SPV_CALL);*/  /*non serve in dw*/
 804:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif						
 805:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 806:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					else
 807:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					{
 808:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						/* 
 809:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						La presenza del ciclo di END viene verificata ad ogni reset
 810:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						freddo ed in caso di assenza viene generato il fault file di setting.
 811:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						Dunque l'unica possibilit� di rilevare l'assenza del ciclo durante
 812:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						l'esecuzione del Supervisore � che il file di setting si sia corrotto
 813:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						dopo l'ultimo reset freddo. Utilizzo la funzione che mi permette di 
 814:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						preservare le statistiche al reset freddo.
 815:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						*/
 816:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  
 817:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_generateColdReset(); /*ForceColdReset();*/
 818:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					}
 819:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						
 820:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				}
 821:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				
 822:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			break;
 823:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 824:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			case PROGRAM_FLOW_BREAK:
 825:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* JumpIf */
 826:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 827:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_2_FOR_REF_CYCLE) || defined(SOLUTION_3_FOR_REF_CYCLE)
 828:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 829:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/*	SETBIT(updateCycleDependentFunctions, CURRENT_SPV_CALL);*/  /*non serve in dw*/
 830:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif				
 831:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 832:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			break;		
 833:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 834:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			case END_STEP:
 835:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/** Nothing to do */
 836:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 837:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			case SAME_STEP:
 838:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Nothing to do */
 839:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
 840:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			default:
 841:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 842:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			break;		
 843:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 844:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 845:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 846:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
 847:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 848:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Resettare o dichiarare il fault file di setting? �_� */
 849:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		SPV_generateColdReset();
 850:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}					
 851:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 852:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 853:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
 854:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/** Aggiornamento statistiche legate allo stato */
 855:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_superVisorUpdateStatistics();
 856:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
 857:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 858:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 859:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/*
 860:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================  	
 861:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		THE LAST BUT NOT THE LEAST
 862:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	======================================================================================
 863:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/
 864:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 865:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     /* Aggiorna BufOldReg[i] per le regolazioni 'To Main' non esplicitamente processate in preceden
 866:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     REG_updateFuncToMainOldReg();
 867:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
 868:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     /* Aggiorna BufOldReg per le regolazioni non 'To Main' */
 869:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/*_memcpy_8bitCount(&BufOldReg[FUNC_NUM_TO_MAIN], &BufNewReg[FUNC_NUM_TO_MAIN], (uint8_t)(FUNC_NUM
 870:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	memcpy(&BufOldReg[FUNC_NUM_TO_MAIN], &BufNewReg[FUNC_NUM_TO_MAIN], (size_t)(FUNC_NUM_ALL - FUNC_NU
 871:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 872:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 873:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*
 874:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 Copia il bit CURRENT_SPV_CALL nel bit PREV_SPV_CALL, per eseguire l'eventuale richiesta di
 875:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	   aggiornamento dei valori delle funzioni alla successiva chiamata del SuperVisor
 876:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	updateCycleDependentFunctions <<= 1;
 877:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 Azzera tutti i bit tranne PREV_SPV_CALL
 878:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	updateCycleDependentFunctions &= ((uint8_t)(1) << (PREV_SPV_CALL));
 879:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */	
 880:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 881:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H)
 882:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 883:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (classBCheckTestWD_EndCycle == TRUE)
 884:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 885:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Set_SkipWD();
 886:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 887:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 888:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* defined (_ENABLE_SUPERVISOR_SKIP_WD_) && defined (__CLASSBCHECK_H) */
 889:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 890:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 891:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 892:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 893:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 894:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 895:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
 896:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Ricerca l'intestazione del ciclo Interpreter_Data[0].cycle e ne memorizza l'etichetta in
 897:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Interpreter_Data[0].completeLabel.
 898:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 899:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in/out] Interpreter_Data[0] (global)
 900:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 901:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		none
 902:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 903:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			le Label sono	-LBL_PROGRAMMING
 904:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								-LBL_RUN
 905:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								-LBL_DELAY
 906:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								-LBL_END
 907:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								-LBL_PAUSE
 908:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								-LBL_FAULT
 909:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				In caso di incoerenza nell'intestazione del ciclo viene autogenerato un 
 910:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				reset freddo
 911:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 912:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.2.0
 913:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			15/05/2007
 914:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
 915:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
 916:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_updateCycleLabel(void)
 917:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 918:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** const uint8_t *pCycleHeader;
 919:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 920:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(Interpreter_Data[0].cycle, &pCycleHeader) == S_OK)
 921:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 922:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Interpreter_Data[0].completeLabel.b = ( OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABE
 923:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 924:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
 925:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 926:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Dati incoerenti nell'intestazione del ciclo, viene autogenerato un reset freddo */
 927:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		SPV_generateColdReset();
 928:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 929:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 930:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 931:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
 932:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Inizializza un puntatore all'intestazione del ciclo Cycle.
 933:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 934:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Cycle � il ciclo di cui si ricerca l'intestazione
 935:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	pCycleHeading punta all'intestazione del ciclo
 936:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 937:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		S_OK se la funzione � stata eseguita correttamente, un codice d'errore altrimenti..
 938:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 939:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:
 940:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 941:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
 942:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			31/05/2006
 943:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
 944:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
 945:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_getCycleHeaderPtr(uint8_t cycle, const uint8_t **pCycleHeading)
 946:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
  10                             		.loc 1 946 0
  11                             	.LVL0:
  12 0000 6E 7A                   		pushm	r7-r10
  13                             	.LCFI0:
  14 0002 60 80                   		sub	#8, r0
  15                             	.LCFI1:
  16                             		.loc 1 946 0
  17 0004 CF 1E                   		mov.B	r1, r14
  18 0006 EF 27                   		mov.L	r2, r7
 947:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Loader_Struct prgHeader;
 948:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 949:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
 950:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( BasicLoader((uint16_t) PTR_PROGRAM_HEADING, cycle, &prgHeader ) != S_OK )
  19                             		.loc 1 950 0
  20 0008 75 41 54                		mov	#0x54, r1
  21                             	.LVL1:
  22 000b CF E2                   		mov.B	r14, r2
  23                             	.LVL2:
  24 000d EF 03                   		mov.L	r0, r3
  25 000f 05 00 00 00             		bsr	_BasicLoader
  26                             	.LVL3:
  27 0013 5B 11                   		movu.B	r1, r1
  28 0015 61 01                   		cmp	#0, r1
  29 0017 21 0F                   		bne	.L3
 951:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 952:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_BASIC_LOADER; 
 953:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 954:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( prgHeader.DataLenght != PROGRAM_HEADING_ITEM_SIZE )
  30                             		.loc 1 954 0
  31 0019 59 0E 04                		movu.B	4[r0], r14
  32 001c 61 2E                   		cmp	#2, r14
  33 001e 21 0D                   		bne	.L4
 955:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
 956:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_PRG_HEADING_SIZE; 
 957:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 958:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 959:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*pCycleHeading = prgHeader.Data;
  34                             		.loc 1 959 0
  35 0020 EC 0A                   		mov.L	[r0], r10
  36 0022 E3 7A                   		mov.L	r10, [r7]
  37 0024 2E 0A                   		bra	.L2
  38                             	.L3:
 952:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_BASIC_LOADER; 
  39                             		.loc 1 952 0
  40 0026 FB 16 F4                		mov	#-12, r1
  41 0029 2E 05                   		bra	.L2
  42                             	.L4:
 956:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return SPV_ERR_PRG_HEADING_SIZE; 
  43                             		.loc 1 956 0
  44 002b FB 16 F5                		mov	#-11, r1
  45                             		.balign 2,3,1
  46                             	.L2:
 960:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 961:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return S_OK; 
 962:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
  47                             		.loc 1 962 0
  48 002e 5B 11                   		movu.B	r1, r1
  49 0030 3F 7A 06                		rtsd	#24, r7-r10
  50                             	.LFE2:
  52 0033 03                      		.section	.text.SPV_updateCycleLabel,"ax",@progbits
  53                             		.global	_SPV_updateCycleLabel
  55                             	_SPV_updateCycleLabel:
  56                             	.LFB1:
 917:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
  57                             		.loc 1 917 0
  58 0000 7E A7                   		push.l	r7
  59                             	.LCFI2:
 920:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(Interpreter_Data[0].cycle, &pCycleHeader) == S_OK)
  60                             		.loc 1 920 0
  61 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 917:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
  62                             		.loc 1 917 0
  63 0008 60 40                   		sub	#4, r0
  64                             	.LCFI3:
 920:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(Interpreter_Data[0].cycle, &pCycleHeader) == S_OK)
  65                             		.loc 1 920 0
  66 000a 88 79                   		mov.B	1[r7], r1
  67 000c EF 02                   		mov.L	r0, r2
  68 000e 05 00 00 00             		bsr	_SPV_getCycleHeaderPtr
  69                             	.LVL4:
  70 0012 5B 11                   		movu.B	r1, r1
  71 0014 61 01                   		cmp	#0, r1
  72 0016 21 0B                   		bne	.L7
  73                             	.LVL5:
 922:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Interpreter_Data[0].completeLabel.b = ( OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABE
  74                             		.loc 1 922 0
  75 0018 EC 0E                   		mov.L	[r0], r14
  76 001a CD EE 01                		mov.B	1[r14], r14
  77 001d C3 7E                   		mov.B	r14, [r7]
  78 001f 2E 07                   		bra	.L6
  79                             	.LVL6:
  80                             	.L7:
  81                             	.LBB11:
  82                             	.LBB12:
 963:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 964:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
 965:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Restituisce il primo ciclo nella cui intestazione compare l'etichetta completeLabel.
 966:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 967:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel � l'etichetta (label+subLabel) che viene cercata nelle intestazioni
 968:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				dei cicli.
 969:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	*pCycle � il ciclo che ha la completeLabel specificata.
 970:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
 971:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		S_OK se il ciclo viene trovato, SPV_WRN_LABEL_NOT_FOUND se la funzione NON
 972:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				� stata eseguita correttamente o se non � presente alcun ciclo con la
 973:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				completeLabel specificata.
 974:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 975:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			non invertire il ciclo for per ottimizzare, non restituirebbe pi� il primo
 976:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				ciclo ma l'ultimo.
 977:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 978:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.1.0
 979:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			15/05/2007
 980:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
 981:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
 982:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_searchCycleByLabel(uint8_t completeLabel, uint8_t *pCycle)
 983:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 984:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t i;
 985:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 986:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 987:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{		
 988:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if(SPV_testCycleLabel(i, completeLabel) == TRUE)
 989:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
 990:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    	*pCycle = i;
 991:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    	return S_OK; 	
 992:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
 993:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
 994:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
 995:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return SPV_WRN_LABEL_NOT_FOUND; 
 996:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 997:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
 998:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
 999:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Restituisce il ciclo di riferimento per il calcolo del valore di una funzione.
1000:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1001:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global)
1002:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1003:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		il ciclo di riferimento.
1004:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1005:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:
1006:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1007:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1008:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			06/06/2006
1009:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1010:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1011:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_getRefCycleForFuncValue(void)
1012:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {		
1013:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_1_FOR_REF_CYCLE)
1014:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1015:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
1016:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1017:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Potrebbe differire dal ciclo in caso di Jump ad un ciclo diverso da quello di partenza. */
1018:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (StartedCycle);
1019:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1020:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
1021:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1022:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
1023:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1024:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1025:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1026:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* PROGRAMMING, DELAY, PAUSE, END. In DELAY, PAUSE ed END coincide con StartedCycle */
1027:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
1028:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1029:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1030:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_2_FOR_REF_CYCLE)		/* come DEA601 con precisazione per PAUSE */
1031:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1032:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
1033:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1034:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* In RUN potrebbe differire dal ciclo di partenza in caso di Jump ad un ciclo diverso. */
1035:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
1036:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1037:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )                                 
1038:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* questa precisazione non � presente in DEA601, ma � corretto farla */
1039:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if(Paused_Intpt_Data[0].completeLabel.s.label == LBL_RUN)
1040:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1041:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Pausa da RUN */
1042:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Potrebbe differire dalla fase se la pausa interviene quando � in esecuzione un ciclo
1043:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			   diverso da quello di partenza (a causa di un Jump a ciclo). */
1044:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			return (Paused_Intpt_Data[0].cycle);
1045:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1046:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
1047:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1048:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Pausa da DELAY */
1049:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			return (Paused_Intpt_Data[0].phase);
1050:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1051:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1052:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1053:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1054:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* PROGRAMMING, DELAY, END */
1055:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* In effetti, nel passaggio RUN->END si potrebbe introdurre una discontinuit� nel ciclo di
1056:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		   riferimento se il ciclo di RUN che termina, a causa di un Jump a ciclo, � diverso da
1057:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		   quello di partenza */
1058:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
1059:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1060:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1061:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_3_FOR_REF_CYCLE)
1062:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1063:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
1064:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1065:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* In RUN potrebbe differire dal ciclo di partenza in caso di Jump ad un ciclo diverso. */
1066:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
1067:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1068:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1069:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1070:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* PROGRAMMING, DELAY, PAUSE, END */
1071:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
1072:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1073:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1074:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif	/* SOLUTION_X_FOR_REF_CYCLE */	
1075:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1076:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1077:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1078:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* *************** */
1079:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* Local Functions */
1080:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /* *************** */
1081:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1082:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1083:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Salva lo stato corrente dell'Interpreter nella struttura specificata.
1084:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1085:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global)
1086:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		*pDestinationBuffer � la struttura destinazione in cui salvare lo stato
1087:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1088:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		none
1089:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1090:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:
1091:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1092:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1093:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			19/06/2006
1094:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1095:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1096:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined (BUILD_FREESCALE_GB60)
1097:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma INLINE
1098:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined (BUILD_RENESAS_36079)
1099:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma inline(SPV_saveIntptState)
1100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
1101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_saveIntptState(Interpreter_Struct *pDestinationBuffer)
1102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*pDestinationBuffer = Interpreter_Data[0];
1104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* salva la struttura del JumpIF valido per Fase del ciclo di provenienza */
1106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Paused_JmpPhase[0] =  JmpPhase[0];
1107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Ripristina lo stato corrente dell'Interpreter copiandolo dalla struttura specificata.
1111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		Interpreter_Data[0] (global)
1113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		*pSourceBuffer � la struttura sorgente da cui copiare lo stato
1114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		none
1116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:
1118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			19/06/2006
1121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined (BUILD_FREESCALE_GB60)
1124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma INLINE
1125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined (BUILD_RENESAS_36079)
1126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma inline(SPV_restoreIntptState)
1127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
1128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_restoreIntptState(const Interpreter_Struct *pSourceBuffer)
1129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0] = *pSourceBuffer;
1131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* ripristina la struttura del JumpIF valido per Fase del ciclo di provenienza */
1133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	JmpPhase[0] = Paused_JmpPhase[0];
1134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* per preservare il JumpIF valido per fase se presente */
1136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].jumpIF_phase_ctrl = 1;
1137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }	
1138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				
1139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Arresta i contatori usati nei microprogrammi in corrispondenza di una PAUSE_CONDITION.
1141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		
1143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****  
1144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		
1145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:
1147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		0.0.1
1149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date 			16/04/2008
1150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
1151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined (BUILD_FREESCALE_GB60)
1153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma INLINE
1154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined (BUILD_RENESAS_36079)
1155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma inline(SPV_stopMicroprogTimers)
1156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
1157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_stopMicroprogVars(void)
1158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   StopMicroprogCounters();
1161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   /*uP Alternato */
1163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   if (uP_AltCtrl_Data.step == ALT_CTRL_WAIT_ALTPOS_EXE)
1164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   {
1165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     /* posizionamento del motorino alternato in corso re-inizializzare la procedura */
1166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     uP_AltCtrl_Data.step= ALT_CTRL_BEGIN;
1167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   }
1168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   /*uP Sparkling Aid*/
1170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   if( (uP_SparklingAid_Data.step== SPRKLING_T1 ) || (uP_SparklingAid_Data.step == SPRKLING_T2) )
1171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   {
1172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     uP_SparklingAid_Data.cmd.RepeatTurbRead = TRUE;
1173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
1174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   }
1175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*
1176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	///////////////////////
1177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	//////COMPLETARE///////
1178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	///////////////////////
1179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Imposta il valore del contatore per il delay, distinguendo i casi di DEMO attiva e no.
1185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	SPV_DELAY_TIMER_S_COUNTER (global)
1187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			none
1189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 	Valeria Catani
1191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			02/07/2008
1192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_setupDelayCounterVal(void)
1195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
1197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		 (void)SWTC_SetSValue ((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER,(SWTC_SCounterValue)1);
1199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)SWTC_SetSValue ((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER,(SWTC_SCounterValue)60);
1203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Imposta il contatore per il delay, distinguendo i casi di DEMO attiva e no.
1208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Il valore del timer viene posto a 0.
1209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	SPV_DELAY_TIMER_S_COUNTER(global)
1211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			none 
1213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 		Valeria Catani
1215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			02/07/2008
1216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_setupDelayCounter(void)
1219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
1221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
1223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
1224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
1228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
1229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Gestisce i contatori utilizzati per il Delay e aggiorna le variabili relative 
1235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** alla gestione del delay
1236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		Delay(global)
1238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in]		SPV_DELAY_TIMER_S_COUNTER (global)
1239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return 		none
1241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \warning		none
1242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
1246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		02/07/2008
1247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined (BUILD_FREESCALE_GB60)
1251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma INLINE
1252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined (BUILD_RENESAS_36079)
1253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #pragma inline(SPV_manageDelayCounters)
1254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
1255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_manageDelayCounters(void)
1256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** { 
1257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
1258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	((Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE) && (Paused_Intpt_Data[0].completeLabel.s
1259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Il delay scorre in DELAY e in PAUSE da DELAY, indipendentemente dallo stato della porta */
1261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)SWTC_Run((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
1263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
1267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1268:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1269:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _CORRECT_DELAY_TIMER_FOR_UI_
1270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( SWTC_IsStopped((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER) == 0 ) &&
1271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		( SWTC_IsExpired((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER) != 0 ) )
1272:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #else
1273:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if ( SWTC_IsExpired((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER))
1274:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* _CORRECT_DELAY_TIMER_FOR_UI_ */
1275:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* One minute elapsed */
1277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( Delay.minutes != 0 )
1279:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{/* conteggio dealy minuti in corso */
1280:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.minutes --;
1282:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			SPV_setupDelayCounterVal();
1284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
1286:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{/* conteggio minuti concluso, controllo ore */
1287:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if (Delay.hours != 0)
1289:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{
1290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.hours--;
1291:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.minutes = 59; 
1293:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SPV_setupDelayCounterVal();
1295:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
1296:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			else
1297:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{/* Hours = 0; Minutes = 0; */
1298:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				(void)SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
1300:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
1301:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1302:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1303:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1304:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1305:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1306:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1307:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1308:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Verifica se la label del ciclo cycle coincide con completeLabel.
1309:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1310:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	cycle � il ciclo di cui si vuole verificare la label.
1311:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel � la label completa (label+sublabel) con cui confrontare
1312:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				quella del ciclo cycle.
1313:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1314:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se la label coincide, FALSE se non coincide o in caso di errore nella
1315:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				ricerca dell'intestazione del ciclo.
1316:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1317:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			15/05/2007
1319:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1320:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1321:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_testCycleLabel(uint8_t cycle, uint8_t completeLabel)
1322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1323:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** const uint8_t *pCycleHeader;
1324:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(cycle, &pCycleHeader) == S_OK )
1326:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABEL_MASK|CYCLE_LABEL_MASK)) == comple
1328:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			return TRUE;
1330:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1331:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return FALSE;
1334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1335:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1336:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1337:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Verifica se la label del ciclo di riferimento (che in generale non � Interpreter_Data[0].cycle,
1338:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** ad esempio in PROGRAMMING, DELAY, PAUSE, END � Interpreter_Data[0].phase) coincide con
1339:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** completeLabel.
1340:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1341:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel � la label completa (label+sublabel) con cui confrontare
1342:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				quella del ciclo di riferimento.
1343:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se la label coincide, FALSE se non coincide o in caso di errore nella
1345:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				ricerca dell'intestazione del ciclo.
1346:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1347:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1348:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			15/05/2007
1349:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.1.0
1350:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1351:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_testRefCycleLabel(uint8_t completeLabel)
1352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1353:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t refCycle;
1354:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /*const uint8_t *pCycleHeader;*/
1355:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	refCycle = SPV_getRefCycleForFuncValue();
1357:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1358:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if(SPV_testCycleLabel(refCycle, completeLabel) == TRUE)
1359:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1360:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
1361:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1362:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1363:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return FALSE;
1364:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1365:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1366:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1367:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Verifica se c'� un ciclo in corso (ovvero se lo stato � RUN, PAUSE o DELAY).
1368:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1369:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1370:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1371:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se c'� un ciclo in corso, FALSE altrimenti
1372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1373:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1374:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			  18/06/2007
1375:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1376:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1377:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isCycleRunning(void)
1378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1379:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) ||
1380:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
1381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE) )
1382:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
1384:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1385:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1386:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return FALSE;
1388:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1390:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1391:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1392:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Verifica se � in corso (ovvero se � in RUN, PAUSE o DELAY) il ciclo che ha come
1393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** etichetta completa completeLabel.
1394:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1395:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	completeLabel � l'etichetta completa (label+sublabel) del ciclo
1396:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				da controllare
1397:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1399:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se c'� il ciclo in corso, FALSE altrimenti
1400:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1401:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			31/07/2007
1403:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1404:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1405:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isCycleWithLabelRunning(uint8_t completeLabel)
1406:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1407:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1408:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (SPV_testRefCycleLabel(completeLabel) == TRUE) && 
1409:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(SPV_isCycleRunning() == TRUE ) )
1410:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
1412:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1413:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1414:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return FALSE;
1416:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1417:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1418:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1420:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1421:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1422:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1423:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Verifica � in corso il ciclo di Autotest (controllando anche se � in DELAY o in PAUSE).
1424:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1425:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1426:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1427:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se � in corso il ciclo di Autotest, FALSE altrimenti
1428:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1429:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 		Marco Quintini
1430:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			16/05/2007
1431:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1432:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1433:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isAutotestRunning(void)
1434:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1435:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return (SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST));
1436:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1437:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1438:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1439:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Verifica � in corso il ciclo di Autotest o di Collaudo 
1440:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** (controllando anche se � in DELAY o in PAUSE -> PER "COMPLETEZZA").
1441:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1442:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1443:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1444:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return			TRUE se � in corso il ciclo di Autotest (o Collaudo), FALSE altrimenti
1445:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1446:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author 		Valeria Catani (Marco Quintini)
1447:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date			  24/09/2008
1448:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version		1.0.0
1449:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1450:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_isAutotestOrTestRunning(void)
1451:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1452:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
1454:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	         SPV_isCycleWithLabelRunning(CMPLT_LBL_COLLAUDO) );        
1455:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1456:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1457:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1458:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1459:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1460:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1461:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Processa i comandi di attivazione dei cicli di COLLAUDO e AUTOTEST da remoto.
1462:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1463:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in,out]	ExternalRequest (global) � la modalit� speciale di funzionamento richiesta
1464:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in,out] InterpreterRefData (global)
1465:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] ApplicationState (global)
1466:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1467:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1468:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1469:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1470:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1471:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini,Roberto Fioravanti
1472:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		23/09/2008
1473:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.1
1474:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1475:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1476:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_manageRequestFromRemote( void )
1477:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1478:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t requestedCycleCompleteLabel;
1479:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t destinationCycle;
1480:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
1481:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1482:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     /* Aggiornamento ApplicationState */
1483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
1484:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{		
1485:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		SETBIT(ApplicationState, AS_AUTOTEST_ON_BIT);	  
1486:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1487:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1488:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1489:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    CLRBIT(ApplicationState, AS_AUTOTEST_ON_BIT);
1490:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1491:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1492:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_COLLAUDO )
1493:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1494:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    SETBIT(ApplicationState, AS_COLLAUDO_ON_BIT);	
1495:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1496:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1497:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1498:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CLRBIT(ApplicationState, AS_COLLAUDO_ON_BIT);		    
1499:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1500:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
1501:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     /* ExternalRequest processing */
1502:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ExternalRequest == SYSTEM_NORMAL_AUTOTEST_MODE )
1503:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_AUTOTEST;
1505:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1506:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( ExternalRequest == SYSTEM_NORMAL_COLLAUDO_MODE )
1507:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1508:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_COLLAUDO;				
1509:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1510:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1511:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{	    
1512:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return;
1513:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1514:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1515:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/** AUTOTEST e COLLAUDO sono avviabili solo da PROGRAMMING e da END. In
1516:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		altre condizioni eventuali richieste di attivazione sono annullate */
1517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if((Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING) || (Interpreter_Data[0].complete
1518:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1519:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(requestedCycleCompleteLabel, &destinationCycle) == S_OK )
1520:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1521:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			StartedCycle = destinationCycle;
1522:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = destinationCycle;
1523:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
1524:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1525:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
1526:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 									  
1527:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			SPV_startCycleInit();
1528:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1529:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Aggiorno la label come ultimo passo, cos� in caso di reset caldo posso
1530:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			   riprocessare la richiesta */
1531:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].completeLabel.b = requestedCycleCompleteLabel;
1532:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1533:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
1534:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1535:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing */
1536:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1537:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1538:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1539:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1540:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Do nothing */
1541:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}			
1542:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1543:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ExternalRequest = 0;
1544:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1545:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1546:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1547:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1548:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Gestisce il passaggio DELAY/RUN --> PAUSE.
1549:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1550:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in,out]	InterpreterRefData (global)
1551:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Paused_Intpt_Data (global)
1552:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1553:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	TRUE se il ciclo di partenza � RUN o DELAY ed il ciclo PAUSE esiste, FALSE altriment
1554:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1555:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1556:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1557:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1558:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		10/10/2006
1559:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1560:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1561:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1562:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** bool_t SPV_goingToSleepManager(void)
1563:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1564:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t destinationCycle;
1565:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1566:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
1567:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1568:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Passa al ciclo PAUSE */
1569:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1570:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(CMPLT_LBL_PAUSE, &destinationCycle) == S_OK )
1571:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{   
1572:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			SPV_stopMicroprogVars();
1573:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
1574:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/** Salva lo stato corrente */
1575:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			SPV_saveIntptState(&Paused_Intpt_Data[0]);
1576:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1577:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #if defined(SOLUTION_1_FOR_REF_CYCLE) || defined(SOLUTION_2_FOR_REF_CYCLE)
1578:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = StartedCycle;
1580:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		                                        
1581:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		  
1582:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #elif defined(SOLUTION_3_FOR_REF_CYCLE)
1583:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1584:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN )
1585:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{	
1586:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/** Interrotto un ciclo RUN */
1587:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = Interpreter_Data[0].cycle;
1588:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
1589:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			else
1590:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			{	
1591:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/** Interrotto un ciclo DELAY */
1592:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				/* Non faccio niente, la fase rimane la stessa */
1593:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			}
1594:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
1595:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].cycle = destinationCycle;
1596:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1597:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));													
1598:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1599:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_PAUSE;
1600:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
1601:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			return (TRUE);
1602:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1603:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1604:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1605:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1606:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return (FALSE);
1607:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1608:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**/
1609:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1610:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1611:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1612:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1613:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Resetta alcune variabili sensibili del Supervisor in coincidenza di una 
1614:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** RESET CONDITION o di una RESTART_CONDITION.
1615:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1616:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Flag_levTOtimeRef_update (global)
1617:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1618:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1619:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1620:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1621:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1622:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1623:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		27/11/2006
1624:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1625:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1626:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1627:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1628:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1629:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_resetSensVariablesButDelay(void)
1630:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1631:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   Flag_levTOtimeRef_update = FALSE;
1632:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1633:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   /* disabilitazione timeout di caricamento */
1634:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;
1635:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1636:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   /* reset warning H2O */
1637:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   FltWarning.load = FALSE; 	 
1638:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1639:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   /* Reset variabili ActivateAlgorithm */
1640:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
1641:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp [0]= 0;
1642:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1643:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
1644:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1645:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****    	/*LoadEVCheck.status_sensor=LOAD_EV_PILOT_INIT;	????*/
1646:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1647:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (HWC_Flags.bit.vs_wash_presence != 0) 
1648:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{	
1649:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		State5.max_speed_value =0xFFFF;
1650:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1651:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1652:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****    
1653:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1654:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1655:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1656:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**/
1657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1658:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1659:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Oltre alle variabili resettate da SPV_resetSensVariablesButDelay, resetta anche le variabili
1660:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** relative al DELAY nel caso si ingresso in FAULT.
1661:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1662:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Delay
1663:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1664:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1665:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1666:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1667:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1668:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
1669:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		07/06/2008
1670:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    1.0.0
1671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1672:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1673:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1674:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_resetSensVariables(void)
1675:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1676:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Delay.hours = 0;
1677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Delay.minutes = 0;
1678:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1679:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_resetSensVariablesButDelay();
1680:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1681:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1682:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**/
1683:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1684:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1685:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1686:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Reset variabili all'avvio di un ciclo.
1687:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1688:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1689:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1690:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1691:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1692:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1693:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		22/03/2007
1694:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1695:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1696:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1697:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_startCycleInit(void)
1698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1699:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Reset eventuali warning attivi */
1700:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/*NON ANCORA PRESENTI IN DW*/
1701:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1702:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Reset variabili ActivateAlgorithm */
1703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
1704:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmpOld[0] = 0;
1705:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp[0] = 0;
1706:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ReadVS_Data.ctrl_active = FALSE;
1707:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ReadVS_Data.control_done =FALSE;
1708:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	dirty_foam_Data.filter_foam_on=FALSE;
1709:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
1710:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Init alternato : pos undef */    
1711:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     HIO_SetAltPosition(ALT_getPosNotDef());
1712:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
1713:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
1714:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     /* QI 29.10.09 gestione warning turbina */
1715:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     FltWarning.pulseCounterKO =  FALSE; /*DA CONFERMARE*/
1716:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltWarning.heatimeout =  FALSE; 
1717:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltWarning.undervoltage =  FALSE; 
1718:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltWarning.overheating =  FALSE; 
1719:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_preFaultReset(CODE_PULSE_COUNTER,SUBCODE_PULSE_COUNTER);
1720:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	LoadEVCheck.status_sensor=LOAD_EV_PILOT_INIT;	
1721:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/*FltWarning.bldc_low_voltage_memo = 0;*/	/*QI- 12.11.09 reset warning in memoria per tout riscal
1722:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
1723:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     /* QI 18.11.09 reset timeout dinamico. Per sicurezza ad inizio ciclo, per essere svincolati dal
1724:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		 scarico a vuoto che generalmente � presente ad inizio ciclo */
1725:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_Pump_Load_Reset(); 
1726:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_VS_FaultReset();
1727:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_preFaultReset(CODE_LOAD_EV_KO,SUBCODE_LOAD_EV_KO);
1728:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1729:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (HWC_Flags.bit.vs_wash_presence != 0) 
1730:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1731:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		State5.max_speed_value =0xFFFF;
1732:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1733:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2, FLAG2_CLOGGED_FILTER);
1734:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
1735:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _STATISTICS_ON_
1736:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1737:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Reset statistiche ciclo */
1738:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_LastCycleStat_Init();
1739:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Aggiornamento array ultimi cicli*/
1740:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_LastCyclesArray_Init();
1741:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* aggiornamento funzioni */
1742:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_functionValueUpdateStatistics();
1743:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* aggiornamento durezza e cesto */
1744:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_userDishRack_H2oHardness_Update();
1745:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* aggiornamento rigenera e billantante */
1746:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_regenerate_spaklingAid_Update();
1747:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
1748:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1749:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Reset bitmap fasi eseguite (per UI) */
1750:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ITP_phaseTrackerReset();
1751:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1752:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1753:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**/
1754:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1755:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1756:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Reset variabili all'END ciclo
1757:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1758:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1759:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1760:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1761:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1762:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Valeria Catani
1763:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		27/05/2008
1764:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1765:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1766:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1767:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_endCycleResetVars(void)
1768:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1769:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1770:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Reset variabili ActivateAlgorithm */
1771:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
1772:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/*ActiveAlgorithmBmpOld = 0;*/
1773:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp[0] = 0;
1774:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1775:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1776:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1777:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1778:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Avvia il ciclo indicato dal selettore a seguito di una START o di una RESTART_CONDITION
1779:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1780:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	SelectorFunctionValue (global)
1781:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	StartedCycle (global)
1782:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	Interpreter_Data[0] (global)
1783:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1784:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1785:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1786:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1788:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1789:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		13/07/2007
1790:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1791:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1792:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1793:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_startCycle(void)
1794:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	StartedCycle = SelectorFunctionValue;
1796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].cycle = StartedCycle;
1797:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].phase = 0;
1798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
1799:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1800:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1801:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/* Inizializzazioni varie */
1802:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_startCycleInit();
1803:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1804:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**/
1805:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1806:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1807:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Aggiorna la variabile globale utilizzata dall'applicazione per conoscere il valore della
1808:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** funzione specificata da funcID, ed eventualmente allinea la regolazione della funzione in
1809:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** BufOldReg a quella in BufNewReg.
1810:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1811:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	funcID � l'ID della funzione
1812:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	Interpreter_Data[0] (global)
1813:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	updateCycleDependentFunctions (global)
1814:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	*funcValue � il valore della funzione
1815:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1816:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	S_FALSE se la funzione non � presente nel file di setting, S_OK altrimenti
1817:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1818:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1819:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1820:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1821:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		23/01/2007
1822:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1823:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1824:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1825:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t SPV_updateFunctionValue(uint8_t funcID, uint8_t *funcValue)
1826:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1827:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t retCode;
1828:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint16_t tempFuncValue;
1829:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1830:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged(funcID);
1831:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( retCode == REG_NOT_EXIST )
1832:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1833:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* La funzione non � presente nel setting */
1834:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return S_FALSE;
1835:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1836:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/*else if( ( retCode == REG_CHANGED ) || (updateCycleDependentFunctions) )*/
1837:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( retCode == REG_CHANGED )
1838:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{		
1839:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID(funcID, &tempFuncValue);
1840:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1841:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
1842:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1843:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			*funcValue = (uint8_t)(tempFuncValue);
1844:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    	REG_updateOldReg(funcID);
1845:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1846:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
1847:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1848:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg(funcID);
1849:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
1850:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Mantiene *funcValue unchanged */
1851:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
1852:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* return S_FALSE; con S_FALSE invece imposterei valore di default */
1853:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			
1854:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1855:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else
1856:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		{
1857:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			/* Do nothing (mantiene *funcValue e BufOldReg[i] unchanged) */
1858:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		}
1859:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1860:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1861:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1862:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Do nothing */
1863:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1864:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1865:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return S_OK;
1866:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1867:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**/
1868:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1869:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1870:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Autogenera un reset freddo in conseguenza di condizioni anomale riscontrate sul file
1871:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** di setting. Nel reset freddo vengono comunque preservate le statistiche.
1872:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1873:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1874:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	
1875:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	
1876:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1877:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1878:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1879:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1880:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1881:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author			Marco Quintini
1882:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		07/05/2007
1883:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    	1.0.0
1884:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1885:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1886:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_generateColdReset(void)
1887:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
1888:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef PARTIAL_BACKUP_ENABLE
1889:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	/*
1890:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Viene richiesto il salvataggio dei dati di backup ed il loro ripristino parziale
1891:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	(solo le statistiche) dopo il reset.
1892:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*/
1893:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BackupSetBackupSource();
1894:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Backup_ForceBackup();
1895:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1896:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* PARTIAL_BACKUP_ENABLE */
1897:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1898:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	LIB_Reset_ForceColdReset();
  83                             		.loc 1 1898 0
  84 0021 05 00 00 00             		bsr	_LIB_Reset_ForceColdReset
  85                             	.LVL7:
  86 0025 03                      		.balign 2,3,2
  87                             	.L6:
  88                             	.LBE12:
  89                             	.LBE11:
 929:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
  90                             		.loc 1 929 0
  91 0026 3F 77 02                		rtsd	#8, r7-r7
  92                             	.LFE1:
  94 0029 03                      		.section	.text.SPV_getRefCycleForFuncValue,"ax",@progbits
  95                             		.global	_SPV_getRefCycleForFuncValue
  97                             	_SPV_getRefCycleForFuncValue:
  98                             	.LFB4:
1012:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {		
  99                             		.loc 1 1012 0
1032:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
 100                             		.loc 1 1032 0
 101 0000 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 102 0006 CC E4                   		mov.B	[r14], r4
 103 0008 EF E3                   		mov.L	r14, r3
 104 000a 64 F4                   		and	#15, r4
 105 000c 61 14                   		cmp	#1, r4
 106 000e 20 06                   		beq	.L11
1032:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
 107                             		.loc 1 1032 0 is_stmt 0 discriminator 1
 108 0010 61 54                   		cmp	#5, r4
 109 0012 21 06                   		bne	.L12
 110                             		.balign 2,3,5
 111                             	.L11:
1035:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].cycle);
 112                             		.loc 1 1035 0 is_stmt 1
 113 0014 88 39                   		mov.B	1[r3], r1
 114 0016 2E 1C                   		bra	.L13
 115                             	.L12:
1037:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )                                 
 116                             		.loc 1 1037 0
 117 0018 61 44                   		cmp	#4, r4
 118 001a 21 15                   		bne	.L14
1039:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if(Paused_Intpt_Data[0].completeLabel.s.label == LBL_RUN)
 119                             		.loc 1 1039 0
 120 001c FB E2 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r14
 121 0022 CC E4                   		mov.B	[r14], r4
 122 0024 64 F4                   		and	#15, r4
 123 0026 61 14                   		cmp	#1, r4
 124 0028 21 07                   		bne	.L14
1044:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			return (Paused_Intpt_Data[0].cycle);
 125                             		.loc 1 1044 0
 126 002a CD E1 01                		mov.B	1[r14], r1
 127 002d 2E 05                   		bra	.L13
 128                             	.L14:
1058:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return (Interpreter_Data[0].phase);
 129                             		.loc 1 1058 0
 130 002f CD E1 02                		mov.B	2[r14], r1
 131                             		.balign 2,3,1
 132                             	.L13:
1075:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 133                             		.loc 1 1075 0
 134 0032 5B 11                   		movu.B	r1, r1
 135 0034 02                      		rts
 136                             	.LFE4:
 138 0035 03                      		.section	.text.SPV_saveIntptState,"ax",@progbits
 139                             		.global	_SPV_saveIntptState
 141                             	_SPV_saveIntptState:
 142                             	.LFB5:
1102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 143                             		.loc 1 1102 0
 144                             	.LVL8:
1103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	*pDestinationBuffer = Interpreter_Data[0];
 145                             		.loc 1 1103 0
 146 0000 FB 22 00 00 00 00       		mov.L	#_Interpreter_Data, r2
 147 0006 66 63                   		mov.L	#6, r3
 148 0008 7F 8F                   		smovf
 149                             	.LVL9:
1106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Paused_JmpPhase[0] =  JmpPhase[0];
 150                             		.loc 1 1106 0
 151 000a FB 12 00 00 00 00       		mov.L	#_Paused_JmpPhase, r1
 152 0010 FB 22 00 00 00 00       		mov.L	#_JmpPhase, r2
 153 0016 66 53                   		mov.L	#5, r3
 154 0018 7F 8F                   		smovf
 155 001a 02                      		rts
 156                             	.LFE5:
 158                             		.section	.text.SPV_restoreIntptState,"ax",@progbits
 159                             		.global	_SPV_restoreIntptState
 161                             	_SPV_restoreIntptState:
 162                             	.LFB6:
1129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 163                             		.loc 1 1129 0
 164                             	.LVL10:
1130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0] = *pSourceBuffer;
 165                             		.loc 1 1130 0
 166 0000 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
1129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 167                             		.loc 1 1129 0
 168 0006 EF 12                   		mov.L	r1, r2
1130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0] = *pSourceBuffer;
 169                             		.loc 1 1130 0
 170 0008 66 63                   		mov.L	#6, r3
 171 000a EF E1                   		mov.L	r14, r1
 172                             	.LVL11:
 173 000c 7F 8F                   		smovf
 174                             	.LVL12:
1133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	JmpPhase[0] = Paused_JmpPhase[0];
 175                             		.loc 1 1133 0
 176 000e FB 12 00 00 00 00       		mov.L	#_JmpPhase, r1
 177 0014 FB 22 00 00 00 00       		mov.L	#_Paused_JmpPhase, r2
 178 001a 66 53                   		mov.L	#5, r3
 179 001c 7F 8F                   		smovf
1136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].jumpIF_phase_ctrl = 1;
 180                             		.loc 1 1136 0
 181 001e CD E4 04                		mov.B	4[r14], r4
 182 0021 78 34                   		bset	#3, r4
 183 0023 C7 E4 04                		mov.B	r4, 4[r14]
 184 0026 02                      		rts
 185                             	.LFE6:
 187                             		.section	.text.SPV_stopMicroprogVars,"ax",@progbits
 188                             		.global	_SPV_stopMicroprogVars
 190                             	_SPV_stopMicroprogVars:
 191                             	.LFB7:
1158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 192                             		.loc 1 1158 0
1160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   StopMicroprogCounters();
 193                             		.loc 1 1160 0
 194 0000 05 00 00 00             		bsr	_StopMicroprogCounters
 195                             	.LVL13:
1163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   if (uP_AltCtrl_Data.step == ALT_CTRL_WAIT_ALTPOS_EXE)
 196                             		.loc 1 1163 0
 197 0004 FB 42 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r4
 198 000a CD 4E 04                		mov.B	4[r4], r14
 199 000d EF E3                   		mov.L	r14, r3
 200 000f 75 23 3F                		and	#63, r3
 201 0012 61 43                   		cmp	#4, r3
 202 0014 21 0A                   		bne	.L22
1166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     uP_AltCtrl_Data.step= ALT_CTRL_BEGIN;
 203                             		.loc 1 1166 0
 204 0016 75 2E C0                		and	#-64, r14
 205 0019 65 1E                   		or	#1, r14
 206 001b C7 4E 04                		mov.B	r14, 4[r4]
 207                             		.balign 2,3,5
 208                             	.L22:
1170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   if( (uP_SparklingAid_Data.step== SPRKLING_T1 ) || (uP_SparklingAid_Data.step == SPRKLING_T2) )
 209                             		.loc 1 1170 0
 210 001e FB E2 00 00 00 00       		mov.L	#_uP_SparklingAid_Data, r14
 211 0024 59 E4 03                		movu.B	3[r14], r4
 212 0027 61 14                   		cmp	#1, r4
 213 0029 20 07                   		beq	.L23
1170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   if( (uP_SparklingAid_Data.step== SPRKLING_T1 ) || (uP_SparklingAid_Data.step == SPRKLING_T2) )
 214                             		.loc 1 1170 0 is_stmt 0 discriminator 1
 215 002b 61 74                   		cmp	#7, r4
 216 002d 21 0B                   		bne	.L21
 217 002f 03                      		.balign 2,3,5
 218                             	.L23:
1172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     uP_SparklingAid_Data.cmd.RepeatTurbRead = TRUE;
 219                             		.loc 1 1172 0 is_stmt 1
 220 0030 CD E4 08                		mov.B	8[r14], r4
 221 0033 78 74                   		bset	#7, r4
 222 0035 C7 E4 08                		mov.B	r4, 8[r14]
 223                             	.L21:
 224 0038 02                      		rts
 225                             	.LFE7:
 227 0039 03                      		.section	.text.SPV_testCycleLabel,"ax",@progbits
 228                             		.global	_SPV_testCycleLabel
 230                             	_SPV_testCycleLabel:
 231                             	.LFB11:
1322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 232                             		.loc 1 1322 0
 233                             	.LVL14:
 234 0000 7E A7                   		push.l	r7
 235                             	.LCFI4:
 236 0002 60 40                   		sub	#4, r0
 237                             	.LCFI5:
1322:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 238                             		.loc 1 1322 0
 239 0004 CF 27                   		mov.B	r2, r7
1325:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_getCycleHeaderPtr(cycle, &pCycleHeader) == S_OK )
 240                             		.loc 1 1325 0
 241 0006 EF 02                   		mov.L	r0, r2
 242                             	.LVL15:
 243 0008 05 00 00 00             		bsr	_SPV_getCycleHeaderPtr
 244                             	.LVL16:
 245 000c 5B 11                   		movu.B	r1, r1
 246 000e 61 01                   		cmp	#0, r1
 247 0010 21 10                   		bne	.L30
 248                             	.LVL17:
1327:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (OFFS_B(pCycleHeader, CYCLE_LABEL_OFFSET) & (CYCLE_SUBLABEL_MASK|CYCLE_LABEL_MASK)) == comple
 249                             		.loc 1 1327 0
 250 0012 EC 0E                   		mov.L	[r0], r14
 251 0014 5B 77                   		movu.B	r7, r7
 252                             	.LVL18:
 253 0016 59 E1 01                		movu.B	1[r14], r1
1329:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			return TRUE;
 254                             		.loc 1 1329 0
 255 0019 47 71                   		cmp	r7, r1
 256 001b FC DB 10                		sceq.L	r1
 257 001e 2E 04                   		bra	.L29
 258                             	.LVL19:
 259                             	.L30:
1333:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return FALSE;
 260                             		.loc 1 1333 0
 261 0020 66 01                   		mov.L	#0, r1
 262                             	.LVL20:
 263                             		.balign 2,3,2
 264                             	.L29:
1334:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 265                             		.loc 1 1334 0
 266 0022 3F 77 02                		rtsd	#8, r7-r7
 267                             	.LFE11:
 269 0025 03                      		.section	.text.SPV_searchCycleByLabel,"ax",@progbits
 270                             		.global	_SPV_searchCycleByLabel
 272                             	_SPV_searchCycleByLabel:
 273                             	.LFB3:
 983:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 274                             		.loc 1 983 0
 275                             	.LVL21:
 276 0000 6E 7C                   		pushm	r7-r12
 277                             	.LCFI6:
 983:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 278                             		.loc 1 983 0
 279 0002 CF 1B                   		mov.B	r1, r11
 280 0004 EF 2C                   		mov.L	r2, r12
 986:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 281                             		.loc 1 986 0
 282 0006 66 07                   		mov	#0, r7
 283 0008 FB A2 00 00 00 00       		mov.L	#_Tab_HWCCyclesNum, r10
 284 000e 2E 16                   		bra	.L33
 285                             	.LVL22:
 286                             	.L36:
 988:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if(SPV_testCycleLabel(i, completeLabel) == TRUE)
 287                             		.loc 1 988 0
 288 0010 CF 71                   		mov.B	r7, r1
 289 0012 CF B2                   		mov.B	r11, r2
 290 0014 05 00 00 00             		bsr	_SPV_testCycleLabel
 291                             	.LVL23:
 292 0018 61 11                   		cmp	#1, r1
 293 001a 21 08                   		bne	.L34
 990:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    	*pCycle = i;
 294                             		.loc 1 990 0
 295 001c C3 C7                   		mov.B	r7, [r12]
 991:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    	return S_OK; 	
 296                             		.loc 1 991 0
 297 001e 66 01                   		mov	#0, r1
 298 0020 2E 10                   		bra	.L35
 299                             	.L34:
 986:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 300                             		.loc 1 986 0
 301 0022 62 17                   		add	#1, r7
 302                             	.LVL24:
 303                             		.balign 2,3,1
 304                             	.L33:
 986:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	for( i=0; i< CYCLES_NUM; i++ )
 305                             		.loc 1 986 0 is_stmt 0 discriminator 1
 306 0024 EC AE                   		mov.L	[r10], r14
 307 0026 5B 74                   		movu.B	r7, r4
 308 0028 44 E4                   		cmp	[r14].UB, r4
 309 002a 23 E6                   		bltu	.L36
 995:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return SPV_WRN_LABEL_NOT_FOUND; 
 310                             		.loc 1 995 0 is_stmt 1
 311 002c 75 41 74                		mov	#0x74, r1
 312 002f 03                      		.balign 2,3,2
 313                             	.L35:
 996:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 314                             		.loc 1 996 0
 315 0030 75 21 74                		and	#0x74, r1
 316 0033 3F 7C 06                		rtsd	#24, r7-r12
 317                             	.LFE3:
 319                             		.section	.text.SPV_testRefCycleLabel,"ax",@progbits
 320                             		.global	_SPV_testRefCycleLabel
 322                             	_SPV_testRefCycleLabel:
 323                             	.LFB12:
1352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 324                             		.loc 1 1352 0
 325                             	.LVL25:
 326 0000 7E A7                   		push.l	r7
 327                             	.LCFI7:
1352:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 328                             		.loc 1 1352 0
 329 0002 CF 17                   		mov.B	r1, r7
1356:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	refCycle = SPV_getRefCycleForFuncValue();
 330                             		.loc 1 1356 0
 331 0004 05 00 00 00             		bsr	_SPV_getRefCycleForFuncValue
 332                             	.LVL26:
1358:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if(SPV_testCycleLabel(refCycle, completeLabel) == TRUE)
 333                             		.loc 1 1358 0
 334 0008 CF 72                   		mov.B	r7, r2
 335 000a 05 00 00 00             		bsr	_SPV_testCycleLabel
 336                             	.LVL27:
1364:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 337                             		.loc 1 1364 0
 338 000e 61 11                   		cmp	#1, r1
 339 0010 FC DB 10                		sceq.L	r1
 340 0013 3F 77 01                		rtsd	#4, r7-r7
 341                             	.LFE12:
 343                             		.section	.text.SPV_setupDelayCounter,"ax",@progbits
 344                             		.global	_SPV_setupDelayCounter
 346                             	_SPV_setupDelayCounter:
 347                             	.LFB9:
1219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 348                             		.loc 1 1219 0
1220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
 349                             		.loc 1 1220 0
 350 0000 75 41 41                		mov	#0x41, r1
 351 0003 05 00 00 00             		bsr	_SPV_testRefCycleLabel
 352                             	.LVL28:
 353 0007 EF 12                   		mov.L	r1, r2
 354 0009 61 12                   		cmp	#1, r2
1223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
 355                             		.loc 1 1223 0
 356 000b 66 F1                   		mov	#15, r1
1220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
 357                             		.loc 1 1220 0
 358 000d 21 04                   		bne	.L41
 359 000f 2E 05                   		bra	.L42
 360                             	.L41:
1228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)Set_SmallCounter((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER, (SWTC_PrescalerType)COUNTERS
 361                             		.loc 1 1228 0
 362 0011 66 32                   		mov	#3, r2
 363 0013 03                      		.balign 2,3,1
 364                             	.L42:
 365 0014 66 03                   		mov	#0, r3
 366 0016 04 00 00 00             		bra	_Set_SmallCounter
 367                             	.LVL29:
 368                             	.LFE9:
 370                             		.section	.text.SPV_setupDelayCounterVal,"ax",@progbits
 371                             		.global	_SPV_setupDelayCounterVal
 373                             	_SPV_setupDelayCounterVal:
 374                             	.LFB8:
1195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 375                             		.loc 1 1195 0
1196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
 376                             		.loc 1 1196 0
 377 0000 75 41 41                		mov	#0x41, r1
 378 0003 05 00 00 00             		bsr	_SPV_testRefCycleLabel
 379                             	.LVL30:
 380 0007 EF 12                   		mov.L	r1, r2
 381 0009 61 12                   		cmp	#1, r2
 382                             	.LBB15:
 383                             	.LBB16:
1198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		 (void)SWTC_SetSValue ((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER,(SWTC_SCounterValue)1);
 384                             		.loc 1 1198 0
 385 000b 66 F1                   		mov	#15, r1
 386                             	.LBE16:
 387                             	.LBE15:
1196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (SPV_testRefCycleLabel(CMPLT_LBL_DEMO) == TRUE)
 388                             		.loc 1 1196 0
 389 000d 21 04                   		bne	.L44
 390 000f 2E 05                   		bra	.L45
 391                             	.L44:
1202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)SWTC_SetSValue ((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER,(SWTC_SCounterValue)60);
 392                             		.loc 1 1202 0
 393 0011 75 42 3C                		mov	#60, r2
 394                             		.balign 2,3,3
 395                             	.L45:
 396 0014 04 00 00 00             		bra	_SWTC_SetSValue
 397                             	.LVL31:
 398                             	.LFE8:
 400                             		.section	.text.SPV_manageDelayCounters,"ax",@progbits
 401                             		.global	_SPV_manageDelayCounters
 403                             	_SPV_manageDelayCounters:
 404                             	.LFB10:
1256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** { 
 405                             		.loc 1 1256 0
1257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
 406                             		.loc 1 1257 0
 407 0000 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 408 0006 CC EE                   		mov.B	[r14], r14
 409 0008 64 FE                   		and	#15, r14
 410 000a 61 2E                   		cmp	#2, r14
 411 000c 20 14                   		beq	.L47
1257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
 412                             		.loc 1 1257 0 is_stmt 0 discriminator 1
 413 000e 61 4E                   		cmp	#4, r14
 414 0010 21 18                   		bne	.L48
1258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	((Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE) && (Paused_Intpt_Data[0].completeLabel.s
 415                             		.loc 1 1258 0 is_stmt 1
 416 0012 FB E2 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r14
 417 0018 CC EE                   		mov.B	[r14], r14
 418 001a 64 FE                   		and	#15, r14
 419 001c 61 2E                   		cmp	#2, r14
 420 001e 21 0A                   		bne	.L48
 421                             		.balign 2,3,1
 422                             	.L47:
1262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)SWTC_Run((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
 423                             		.loc 1 1262 0
 424 0020 66 F1                   		mov	#15, r1
 425 0022 05 00 00 00             		bsr	_SWTC_Run
 426                             	.LVL32:
 427 0026 2E 08                   		bra	.L49
 428                             	.L48:
1266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(void)SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
 429                             		.loc 1 1266 0
 430 0028 66 F1                   		mov	#15, r1
 431 002a 05 00 00 00             		bsr	_SWTC_Stop
 432                             	.LVL33:
 433                             		.balign 2,3,1
 434                             	.L49:
1270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( SWTC_IsStopped((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER) == 0 ) &&
 435                             		.loc 1 1270 0
 436 002e 66 F1                   		mov	#15, r1
 437 0030 05 00 00 00             		bsr	_SWTC_IsStopped
 438                             	.LVL34:
 439 0034 61 01                   		cmp	#0, r1
 440 0036 21 3C                   		bne	.L46
1271:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		( SWTC_IsExpired((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER) != 0 ) )
 441                             		.loc 1 1271 0 discriminator 1
 442 0038 66 F1                   		mov	#15, r1
 443 003a 05 00 00 00             		bsr	_SWTC_IsExpired
 444                             	.LVL35:
1270:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( SWTC_IsStopped((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER) == 0 ) &&
 445                             		.loc 1 1270 0 discriminator 1
 446 003e 61 01                   		cmp	#0, r1
 447 0040 20 32                   		beq	.L46
1278:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( Delay.minutes != 0 )
 448                             		.loc 1 1278 0
 449 0042 FB E2 00 00 00 00       		mov.L	#_Delay, r14
 450 0048 CD E4 01                		mov.B	1[r14], r4
 451 004b 5B 43                   		movu.B	r4, r3
 452 004d 61 03                   		cmp	#0, r3
 453 004f 20 09                   		beq	.L53
1281:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.minutes --;
 454                             		.loc 1 1281 0
 455 0051 60 14                   		sub	#1, r4
 456 0053 C7 E4 01                		mov.B	r4, 1[r14]
 457 0056 2E 12                   		bra	.L61
 458                             	.L53:
1288:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if (Delay.hours != 0)
 459                             		.loc 1 1288 0
 460 0058 CC E4                   		mov.B	[r14], r4
 461 005a 5B 43                   		movu.B	r4, r3
 462 005c 61 03                   		cmp	#0, r3
 463 005e 20 0E                   		beq	.L54
1290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.hours--;
 464                             		.loc 1 1290 0
 465 0060 60 14                   		sub	#1, r4
 466 0062 C3 E4                   		mov.B	r4, [r14]
1292:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.minutes = 59; 
 467                             		.loc 1 1292 0
 468 0064 F9 E4 01 3B             		mov.B	#59, 1[r14]
 469                             		.balign 2,3,3
 470                             	.L61:
1294:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SPV_setupDelayCounterVal();
 471                             		.loc 1 1294 0
 472 0068 04 00 00 00             		bra	_SPV_setupDelayCounterVal
 473                             	.LVL36:
 474                             	.L54:
1299:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				(void)SWTC_Stop((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER);
 475                             		.loc 1 1299 0
 476 006c 66 F1                   		mov	#15, r1
 477 006e 04 00 00 00             		bra	_SWTC_Stop
 478                             	.LVL37:
 479                             	.L46:
 480 0072 02                      		rts
 481                             	.LFE10:
 483 0073 03                      		.section	.text.SPV_isCycleRunning,"ax",@progbits
 484                             		.global	_SPV_isCycleRunning
 486                             	_SPV_isCycleRunning:
 487                             	.LFB13:
1378:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 488                             		.loc 1 1378 0
1379:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) ||
 489                             		.loc 1 1379 0
 490 0000 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 491 0006 CC EE                   		mov.B	[r14], r14
 492 0008 64 FE                   		and	#15, r14
 493 000a CF E1                   		mov.B	r14, r1
 494 000c 60 1E                   		sub	#1, r14
 495 000e 61 1E                   		cmp	#1, r14
 496 0010 25 0A                   		bleu	.L64
1380:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(Interpreter_Data[0].completeLabel.s.label == LBL_DELAY) ||
 497                             		.loc 1 1380 0
 498 0012 5B 11                   		movu.B	r1, r1
1383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
 499                             		.loc 1 1383 0
 500 0014 61 41                   		cmp	#4, r1
 501 0016 FC DB 10                		sceq.L	r1
 502 0019 02                      		rts
 503                             	.L64:
 504 001a 66 11                   		mov.L	#1, r1
1389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 505                             		.loc 1 1389 0
 506 001c 02                      		rts
 507                             	.LFE13:
 509                             		.section	.text.SPV_isCycleWithLabelRunning,"ax",@progbits
 510                             		.global	_SPV_isCycleWithLabelRunning
 512                             	_SPV_isCycleWithLabelRunning:
 513                             	.LFB14:
1406:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 514                             		.loc 1 1406 0
 515                             	.LVL38:
1408:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (SPV_testRefCycleLabel(completeLabel) == TRUE) && 
 516                             		.loc 1 1408 0
 517 0000 05 00 00 00             		bsr	_SPV_testRefCycleLabel
 518                             	.LVL39:
 519 0004 61 11                   		cmp	#1, r1
 520 0006 21 0C                   		bne	.L67
1409:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		(SPV_isCycleRunning() == TRUE ) )
 521                             		.loc 1 1409 0 discriminator 1
 522 0008 05 00 00 00             		bsr	_SPV_isCycleRunning
 523                             	.LVL40:
1411:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return TRUE;
 524                             		.loc 1 1411 0 discriminator 1
 525 000c 61 11                   		cmp	#1, r1
 526 000e FC DB 10                		sceq.L	r1
 527 0011 02                      		rts
 528                             	.L67:
1415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return FALSE;
 529                             		.loc 1 1415 0
 530 0012 66 01                   		mov.L	#0, r1
1417:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 531                             		.loc 1 1417 0
 532 0014 02                      		rts
 533                             	.LFE14:
 535                             		.section	.text.SPV_isAutotestRunning,"ax",@progbits
 536                             		.global	_SPV_isAutotestRunning
 538                             	_SPV_isAutotestRunning:
 539                             	.LFB15:
1434:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 540                             		.loc 1 1434 0
1435:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return (SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST));
 541                             		.loc 1 1435 0
 542 0000 75 41 21                		mov	#33, r1
 543 0003 04 00 00 00             		bra	_SPV_isCycleWithLabelRunning
 544                             	.LVL41:
 545                             	.LFE15:
 547                             		.section	.text.SPV_isAutotestOrTestRunning,"ax",@progbits
 548                             		.global	_SPV_isAutotestOrTestRunning
 550                             	_SPV_isAutotestOrTestRunning:
 551                             	.LFB16:
1451:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 552                             		.loc 1 1451 0
1453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
 553                             		.loc 1 1453 0
 554 0000 75 41 21                		mov	#33, r1
 555 0003 05 00 00 00             		bsr	_SPV_isCycleWithLabelRunning
 556                             	.LVL42:
 557 0007 61 01                   		cmp	#0, r1
 558 0009 21 0F                   		bne	.L71
1454:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	         SPV_isCycleWithLabelRunning(CMPLT_LBL_COLLAUDO) );        
 559                             		.loc 1 1454 0 discriminator 2
 560 000b 75 41 31                		mov	#49, r1
 561 000e 05 00 00 00             		bsr	_SPV_isCycleWithLabelRunning
 562                             	.LVL43:
1453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
 563                             		.loc 1 1453 0 discriminator 2
 564 0012 61 01                   		cmp	#0, r1
 565 0014 FC DB 11                		scne.L	r1
 566 0017 02                      		rts
 567                             	.L71:
1453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return ( SPV_isCycleWithLabelRunning(CMPLT_LBL_AUTOTEST) || 
 568                             		.loc 1 1453 0 is_stmt 0
 569 0018 66 11                   		mov.L	#1, r1
1455:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 570                             		.loc 1 1455 0 is_stmt 1
 571 001a 02                      		rts
 572                             	.LFE16:
 574                             		.section	.text.SPV_goingToSleepManager,"ax",@progbits
 575                             		.global	_SPV_goingToSleepManager
 577                             	_SPV_goingToSleepManager:
 578                             	.LFB18:
1563:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 579                             		.loc 1 1563 0
 580 0000 6E 7B                   		pushm	r7-r11
 581                             	.LCFI8:
1566:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
 582                             		.loc 1 1566 0
 583 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 584 0008 CC 7A                   		mov.B	[r7], r10
1563:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 585                             		.loc 1 1563 0
 586 000a 60 40                   		sub	#4, r0
 587                             	.LCFI9:
1566:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) || ( Interpreter_Data[0].completeLabe
 588                             		.loc 1 1566 0
 589 000c 64 FA                   		and	#15, r10
 590 000e 60 1A                   		sub	#1, r10
 591 0010 61 1A                   		cmp	#1, r10
 592 0012 25 06                   		bleu	.L73
 593                             		.balign 2,3,1
 594                             	.L75:
1606:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return (FALSE);
 595                             		.loc 1 1606 0
 596 0014 66 01                   		mov.L	#0, r1
 597 0016 2E 3A                   		bra	.L74
 598                             	.L73:
1570:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(CMPLT_LBL_PAUSE, &destinationCycle) == S_OK )
 599                             		.loc 1 1570 0
 600 0018 66 41                   		mov	#4, r1
 601 001a EF 02                   		mov.L	r0, r2
 602 001c 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 603                             	.LVL44:
 604 0020 5B 1A                   		movu.B	r1, r10
 605 0022 61 0A                   		cmp	#0, r10
 606 0024 21 F0                   		bne	.L75
1572:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			SPV_stopMicroprogVars();
 607                             		.loc 1 1572 0
 608 0026 05 00 00 00             		bsr	_SPV_stopMicroprogVars
 609                             	.LVL45:
1575:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			SPV_saveIntptState(&Paused_Intpt_Data[0]);
 610                             		.loc 1 1575 0
 611 002a FB 12 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r1
 612 0030 05 00 00 00             		bsr	_SPV_saveIntptState
 613                             	.LVL46:
1579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = StartedCycle;
 614                             		.loc 1 1579 0
 615 0034 FB E2 00 00 00 00       		mov.L	#_StartedCycle, r14
 616 003a CC EE                   		mov.B	[r14], r14
 617                             	.LVL47:
1595:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].cycle = destinationCycle;
 618                             		.loc 1 1595 0
 619 003c CC 0B                   		mov.B	[r0], r11
1597:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));													
 620                             		.loc 1 1597 0
 621 003e CF A1                   		mov.B	r10, r1
1579:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = StartedCycle;
 622                             		.loc 1 1579 0
 623 0040 C7 7E 02                		mov.B	r14, 2[r7]
1595:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].cycle = destinationCycle;
 624                             		.loc 1 1595 0
 625 0043 C7 7B 01                		mov.B	r11, 1[r7]
1597:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));													
 626                             		.loc 1 1597 0
 627 0046 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 628                             	.LVL48:
1601:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			return (TRUE);
 629                             		.loc 1 1601 0
 630 004a 66 11                   		mov.L	#1, r1
1599:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_PAUSE;
 631                             		.loc 1 1599 0
 632 004c 3C 70 04                		mov.B	#4, [r7]
 633 004f 03                      		.balign 2,3,2
 634                             	.L74:
1607:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 635                             		.loc 1 1607 0
 636 0050 3F 7B 06                		rtsd	#24, r7-r11
 637                             	.LFE18:
 639 0053 03                      		.section	.text.SPV_resetSensVariablesButDelay,"ax",@progbits
 640                             		.global	_SPV_resetSensVariablesButDelay
 642                             	_SPV_resetSensVariablesButDelay:
 643                             	.LFB19:
1630:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 644                             		.loc 1 1630 0
1631:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   Flag_levTOtimeRef_update = FALSE;
 645                             		.loc 1 1631 0
 646 0000 FB E2 00 00 00 00       		mov.L	#_Flag_levTOtimeRef_update, r14
 647 0006 F8 E6 00                		mov.L	#0, [r14]
1634:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltLoadToutData.state = FLT_LOAD_TOUT_DISABLE;
 648                             		.loc 1 1634 0
 649 0009 FB E2 00 00 00 00       		mov.L	#_FltLoadToutData, r14
 650 000f CC E4                   		mov.B	[r14], r4
 651 0011 64 14                   		and	#1, r4
 652 0013 C3 E4                   		mov.B	r4, [r14]
1637:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   FltWarning.load = FALSE; 	 
 653                             		.loc 1 1637 0
 654 0015 FB E2 00 00 00 00       		mov.L	#_FltWarning, r14
 655 001b CC E4                   		mov.B	[r14], r4
 656 001d 7A 74                   		bclr	#7, r4
 657 001f C3 E4                   		mov.B	r4, [r14]
1640:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
 658                             		.loc 1 1640 0
 659 0021 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r14
 660 0027 F8 E4 00                		mov.B	#0, [r14]
1641:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp [0]= 0;
 661                             		.loc 1 1641 0
 662 002a FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
 663 0030 F8 E4 00                		mov.B	#0, [r14]
1643:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
 664                             		.loc 1 1643 0
 665 0033 FB E2 00 00 00 00       		mov.L	#_Flags_2, r14
 666 0039 CC E4                   		mov.B	[r14], r4
 667 003b 75 24 7F                		and	#0x7f, r4
 668 003e C3 E4                   		mov.B	r4, [r14]
1647:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (HWC_Flags.bit.vs_wash_presence != 0) 
 669                             		.loc 1 1647 0
 670 0040 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 671 0046 DC EE                   		mov.W	[r14], r14
 672 0048 76 2E 00 08             		and	#0x800, r14
 673 004c 5F EE                   		movu.W	r14, r14
 674 004e 61 0E                   		cmp	#0, r14
 675 0050 20 0B                   		beq	.L77
1649:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		State5.max_speed_value =0xFFFF;
 676                             		.loc 1 1649 0
 677 0052 FB E2 00 00 00 00       		mov.L	#_State5, r14
 678 0058 F8 E5 FF                		mov.W	#-1, [r14]
 679                             	.L77:
 680 005b 02                      		rts
 681                             	.LFE19:
 683                             		.section	.text.SPV_resetSensVariables,"ax",@progbits
 684                             		.global	_SPV_resetSensVariables
 686                             	_SPV_resetSensVariables:
 687                             	.LFB20:
1675:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 688                             		.loc 1 1675 0
1676:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Delay.hours = 0;
 689                             		.loc 1 1676 0
 690 0000 FB E2 00 00 00 00       		mov.L	#_Delay, r14
 691 0006 F8 E4 00                		mov.B	#0, [r14]
1677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Delay.minutes = 0;
 692                             		.loc 1 1677 0
 693 0009 F9 E4 01 00             		mov.B	#0, 1[r14]
1679:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_resetSensVariablesButDelay();
 694                             		.loc 1 1679 0
 695 000d 04 00 00 00             		bra	_SPV_resetSensVariablesButDelay
 696                             	.LVL49:
 697                             	.LFE20:
 699                             		.section	.text.SPV_startCycleInit,"ax",@progbits
 700                             		.global	_SPV_startCycleInit
 702                             	_SPV_startCycleInit:
 703                             	.LFB21:
1698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 704                             		.loc 1 1698 0
1703:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
 705                             		.loc 1 1703 0
 706 0000 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r14
 707 0006 F8 E4 00                		mov.B	#0, [r14]
1704:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmpOld[0] = 0;
 708                             		.loc 1 1704 0
 709 0009 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmpOld, r14
 710 000f F8 E4 00                		mov.B	#0, [r14]
1705:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp[0] = 0;
 711                             		.loc 1 1705 0
 712 0012 FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
 713 0018 F8 E4 00                		mov.B	#0, [r14]
1706:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ReadVS_Data.ctrl_active = FALSE;
 714                             		.loc 1 1706 0
 715 001b FB E2 00 00 00 00       		mov.L	#_ReadVS_Data, r14
 716 0021 CC E4                   		mov.B	[r14], r4
 717 0023 7A 64                   		bclr	#6, r4
1707:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ReadVS_Data.control_done =FALSE;
 718                             		.loc 1 1707 0
 719 0025 7A 54                   		bclr	#5, r4
 720 0027 C3 E4                   		mov.B	r4, [r14]
1708:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	dirty_foam_Data.filter_foam_on=FALSE;
 721                             		.loc 1 1708 0
 722 0029 FB E2 00 00 00 00       		mov.L	#_dirty_foam_Data, r14
 723 002f CD E4 01                		mov.B	1[r14], r4
 724 0032 7A 44                   		bclr	#4, r4
 725 0034 C7 E4 01                		mov.B	r4, 1[r14]
1711:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     HIO_SetAltPosition(ALT_getPosNotDef());
 726                             		.loc 1 1711 0
 727 0037 05 00 00 00             		bsr	_ALT_getPosNotDef
 728                             	.LVL50:
 729 003b 05 00 00 00             		bsr	_HIO_SetAltPosition
 730                             	.LVL51:
1715:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     FltWarning.pulseCounterKO =  FALSE; /*DA CONFERMARE*/
 731                             		.loc 1 1715 0
 732 003f FB E2 00 00 00 00       		mov.L	#_FltWarning, r14
 733 0045 CC E4                   		mov.B	[r14], r4
1719:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_preFaultReset(CODE_PULSE_COUNTER,SUBCODE_PULSE_COUNTER);
 734                             		.loc 1 1719 0
 735 0047 66 71                   		mov	#7, r1
1715:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     FltWarning.pulseCounterKO =  FALSE; /*DA CONFERMARE*/
 736                             		.loc 1 1715 0
 737 0049 7A 54                   		bclr	#5, r4
1716:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltWarning.heatimeout =  FALSE; 
 738                             		.loc 1 1716 0
 739 004b 7A 34                   		bclr	#3, r4
1717:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltWarning.undervoltage =  FALSE; 
 740                             		.loc 1 1717 0
 741 004d 7A 14                   		bclr	#1, r4
1718:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltWarning.overheating =  FALSE; 
 742                             		.loc 1 1718 0
 743 004f 7A 04                   		bclr	#0, r4
1719:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_preFaultReset(CODE_PULSE_COUNTER,SUBCODE_PULSE_COUNTER);
 744                             		.loc 1 1719 0
 745 0051 66 12                   		mov	#1, r2
1718:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FltWarning.overheating =  FALSE; 
 746                             		.loc 1 1718 0
 747 0053 C3 E4                   		mov.B	r4, [r14]
1719:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_preFaultReset(CODE_PULSE_COUNTER,SUBCODE_PULSE_COUNTER);
 748                             		.loc 1 1719 0
 749 0055 05 00 00 00             		bsr	_FLT_preFaultReset
 750                             	.LVL52:
1720:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	LoadEVCheck.status_sensor=LOAD_EV_PILOT_INIT;	
 751                             		.loc 1 1720 0
 752 0059 FB E2 00 00 00 00       		mov.L	#_LoadEVCheck, r14
 753 005f CC E4                   		mov.B	[r14], r4
 754 0061 75 24 F0                		and	#-16, r4
 755 0064 C3 E4                   		mov.B	r4, [r14]
1725:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_Pump_Load_Reset(); 
 756                             		.loc 1 1725 0
 757 0066 05 00 00 00             		bsr	_FLT_Pump_Load_Reset
 758                             	.LVL53:
1726:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_VS_FaultReset();
 759                             		.loc 1 1726 0
 760 006a 05 00 00 00             		bsr	_FLT_VS_FaultReset
 761                             	.LVL54:
1727:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	FLT_preFaultReset(CODE_LOAD_EV_KO,SUBCODE_LOAD_EV_KO);
 762                             		.loc 1 1727 0
 763 006e 66 21                   		mov	#2, r1
 764 0070 66 12                   		mov	#1, r2
 765 0072 05 00 00 00             		bsr	_FLT_preFaultReset
 766                             	.LVL55:
1729:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (HWC_Flags.bit.vs_wash_presence != 0) 
 767                             		.loc 1 1729 0
 768 0076 FB E2 00 00 00 00       		mov.L	#_HWC_Flags, r14
 769 007c DC EE                   		mov.W	[r14], r14
 770 007e 76 2E 00 08             		and	#0x800, r14
 771 0082 5F EE                   		movu.W	r14, r14
 772 0084 61 0E                   		cmp	#0, r14
 773 0086 20 0C                   		beq	.L84
1731:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		State5.max_speed_value =0xFFFF;
 774                             		.loc 1 1731 0
 775 0088 FB E2 00 00 00 00       		mov.L	#_State5, r14
 776 008e F8 E5 FF                		mov.W	#-1, [r14]
 777 0091 03                      		.balign 2,3,5
 778                             	.L84:
1734:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	CLRBIT(Flags_2,FLAG2_HIO_READ_SPARKLING_DONE);
 779                             		.loc 1 1734 0
 780 0092 FB E2 00 00 00 00       		mov.L	#_Flags_2, r14
 781 0098 CC E4                   		mov.B	[r14], r4
 782 009a 75 24 5F                		and	#0x5f, r4
 783 009d C3 E4                   		mov.B	r4, [r14]
1738:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_LastCycleStat_Init();
 784                             		.loc 1 1738 0
 785 009f 05 00 00 00             		bsr	_STC_LastCycleStat_Init
 786                             	.LVL56:
1740:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_LastCyclesArray_Init();
 787                             		.loc 1 1740 0
 788 00a3 05 00 00 00             		bsr	_STC_LastCyclesArray_Init
 789                             	.LVL57:
1742:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_functionValueUpdateStatistics();
 790                             		.loc 1 1742 0
 791 00a7 05 00 00 00             		bsr	_STC_functionValueUpdateStatistics
 792                             	.LVL58:
1744:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_userDishRack_H2oHardness_Update();
 793                             		.loc 1 1744 0
 794 00ab 05 00 00 00             		bsr	_STC_userDishRack_H2oHardness_Update
 795                             	.LVL59:
1746:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_regenerate_spaklingAid_Update();
 796                             		.loc 1 1746 0
 797 00af 05 00 00 00             		bsr	_STC_regenerate_spaklingAid_Update
 798                             	.LVL60:
1750:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ITP_phaseTrackerReset();
 799                             		.loc 1 1750 0
 800 00b3 04 00 00 00             		bra	_ITP_phaseTrackerReset
 801                             	.LVL61:
 802                             	.LFE21:
 804 00b7 03                      		.section	.text.SPV_manageRequestFromRemote,"ax",@progbits
 805                             		.global	_SPV_manageRequestFromRemote
 807                             	_SPV_manageRequestFromRemote:
 808                             	.LFB17:
1477:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 809                             		.loc 1 1477 0
 810 0000 6E 7A                   		pushm	r7-r10
 811                             	.LCFI10:
1483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 812                             		.loc 1 1483 0
 813 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 814 0008 CC 7A                   		mov.B	[r7], r10
1477:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 815                             		.loc 1 1477 0
 816 000a 60 40                   		sub	#4, r0
 817                             	.LCFI11:
1483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 818                             		.loc 1 1483 0
 819 000c EF A4                   		mov.L	r10, r4
 820 000e 76 24 F0 00             		and	#0xf0, r4
 821 0012 FB E2 00 00 00 00       		mov.L	#_ApplicationState, r14
 822 0018 75 54 20                		cmp	#32, r4
1485:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		SETBIT(ApplicationState, AS_AUTOTEST_ON_BIT);	  
 823                             		.loc 1 1485 0
 824 001b CC E7                   		mov.B	[r14], r7
1483:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 825                             		.loc 1 1483 0
 826 001d 21 07                   		bne	.L89
1485:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		SETBIT(ApplicationState, AS_AUTOTEST_ON_BIT);	  
 827                             		.loc 1 1485 0
 828 001f 75 37 10                		or	#16, r7
 829 0022 2E 10                   		bra	.L91
 830                             	.L89:
1489:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    CLRBIT(ApplicationState, AS_AUTOTEST_ON_BIT);
 831                             		.loc 1 1489 0
 832 0024 75 27 EF                		and	#-17, r7
1492:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_COLLAUDO )
 833                             		.loc 1 1492 0
 834 0027 75 54 30                		cmp	#48, r4
 835 002a 21 08                   		bne	.L91
1494:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    SETBIT(ApplicationState, AS_COLLAUDO_ON_BIT);	
 836                             		.loc 1 1494 0
 837 002c 65 87                   		or	#8, r7
 838 002e C3 E7                   		mov.B	r7, [r14]
 839 0030 2E 12                   		bra	.L92
 840                             	.L91:
1489:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    CLRBIT(ApplicationState, AS_AUTOTEST_ON_BIT);
 841                             		.loc 1 1489 0
 842 0032 C3 E7                   		mov.B	r7, [r14]
1498:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		CLRBIT(ApplicationState, AS_COLLAUDO_ON_BIT);		    
 843                             		.loc 1 1498 0
 844 0034 FB 72 00 00 00 00       		mov.L	#_ApplicationState, r7
 845 003a CC 7E                   		mov.B	[r7], r14
 846 003c 75 2E F7                		and	#-9, r14
 847 003f C3 7E                   		mov.B	r14, [r7]
 848 0041 03                      		.balign 2,3,5
 849                             	.L92:
1502:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( ExternalRequest == SYSTEM_NORMAL_AUTOTEST_MODE )
 850                             		.loc 1 1502 0
 851 0042 FB 72 00 00 00 00       		mov.L	#_ExternalRequest, r7
 852 0048 58 77                   		movu.B	[r7], r7
 853 004a 61 17                   		cmp	#1, r7
 854 004c 20 0B                   		beq	.L99
1506:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( ExternalRequest == SYSTEM_NORMAL_COLLAUDO_MODE )
 855                             		.loc 1 1506 0
 856 004e 61 27                   		cmp	#2, r7
 857 0050 21 4C                   		bne	.L88
1508:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_COLLAUDO;				
 858                             		.loc 1 1508 0
 859 0052 75 47 31                		mov	#49, r7
 860 0055 2E 05                   		bra	.L93
 861                             	.L99:
1504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		requestedCycleCompleteLabel = CMPLT_LBL_AUTOTEST;
 862                             		.loc 1 1504 0
 863 0057 75 47 21                		mov	#33, r7
 864                             		.balign 2,3,1
 865                             	.L93:
 866                             	.LVL62:
1517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if((Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING) || (Interpreter_Data[0].complete
 867                             		.loc 1 1517 0
 868 005a 64 FA                   		and	#15, r10
 869 005c 20 06                   		beq	.L95
1517:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if((Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING) || (Interpreter_Data[0].complete
 870                             		.loc 1 1517 0 is_stmt 0 discriminator 1
 871 005e 61 3A                   		cmp	#3, r10
 872 0060 21 32                   		bne	.L96
 873                             		.balign 2,3,1
 874                             	.L95:
1519:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( SPV_searchCycleByLabel(requestedCycleCompleteLabel, &destinationCycle) == S_OK )
 875                             		.loc 1 1519 0 is_stmt 1
 876 0062 CF 71                   		mov.B	r7, r1
 877 0064 EF 02                   		mov.L	r0, r2
 878 0066 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 879                             	.LVL63:
 880 006a 71 1E 00                		add	#0, r1, r14
 881 006d 21 25                   		bne	.L96
 882                             	.LVL64:
1521:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			StartedCycle = destinationCycle;
 883                             		.loc 1 1521 0
 884 006f CC 04                   		mov.B	[r0], r4
 885 0071 FB A2 00 00 00 00       		mov.L	#_StartedCycle, r10
 886                             	.LVL65:
 887 0077 C3 A4                   		mov.B	r4, [r10]
1522:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = destinationCycle;
 888                             		.loc 1 1522 0
 889 0079 FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 890 007f C7 A4 01                		mov.B	r4, 1[r10]
1523:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
 891                             		.loc 1 1523 0
 892 0082 C7 A1 02                		mov.B	r1, 2[r10]
1525:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 893                             		.loc 1 1525 0
 894 0085 CF E1                   		mov.B	r14, r1
 895 0087 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 896                             	.LVL66:
1527:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			SPV_startCycleInit();
 897                             		.loc 1 1527 0
 898 008b 05 00 00 00             		bsr	_SPV_startCycleInit
 899                             	.LVL67:
1531:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].completeLabel.b = requestedCycleCompleteLabel;
 900                             		.loc 1 1531 0
 901 008f C3 A7                   		mov.B	r7, [r10]
 902 0091 03                      		.balign 2,3,5
 903                             	.L96:
1543:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ExternalRequest = 0;
 904                             		.loc 1 1543 0
 905 0092 FB 72 00 00 00 00       		mov.L	#_ExternalRequest, r7
 906                             	.LVL68:
 907 0098 3C 70 00                		mov.B	#0, [r7]
 908 009b 03                      		.balign 2,3,2
 909                             	.L88:
1544:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 910                             		.loc 1 1544 0
 911 009c 3F 7A 05                		rtsd	#20, r7-r10
 912                             	.LFE17:
 914 009f 03                      		.section	.text.SPV_endCycleResetVars,"ax",@progbits
 915                             		.global	_SPV_endCycleResetVars
 917                             	_SPV_endCycleResetVars:
 918                             	.LFB22:
1768:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 919                             		.loc 1 1768 0
1771:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ActiveAlgorithmBmp[0] = 0;
 920                             		.loc 1 1771 0
 921 0000 FB E2 00 00 00 00       		mov.L	#_ActiveAlgorithmBmp, r14
 922 0006 F8 E4 00                		mov.B	#0, [r14]
1773:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	TerminatedAlgorithmBmp[0] = 0;
 923                             		.loc 1 1773 0
 924 0009 FB E2 00 00 00 00       		mov.L	#_TerminatedAlgorithmBmp, r14
 925 000f F8 E4 00                		mov.B	#0, [r14]
 926 0012 02                      		rts
 927                             	.LFE22:
 929                             		.section	.text.SPV_startCycle,"ax",@progbits
 930                             		.global	_SPV_startCycle
 932                             	_SPV_startCycle:
 933                             	.LFB23:
1794:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 934                             		.loc 1 1794 0
1795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	StartedCycle = SelectorFunctionValue;
 935                             		.loc 1 1795 0
 936 0000 FB E2 00 00 00 00       		mov.L	#_SelectorFunctionValue, r14
 937 0006 CC E4                   		mov.B	[r14], r4
 938 0008 FB E2 00 00 00 00       		mov.L	#_StartedCycle, r14
 939                             	.LVL69:
 940 000e C3 E4                   		mov.B	r4, [r14]
1796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].cycle = StartedCycle;
 941                             		.loc 1 1796 0
 942 0010 FB E2 00 00 00 00       		mov.L	#_Interpreter_Data, r14
 943 0016 C7 E4 01                		mov.B	r4, 1[r14]
1797:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	Interpreter_Data[0].phase = 0;
 944                             		.loc 1 1797 0
 945 0019 F9 E4 02 00             		mov.B	#0, 2[r14]
1798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 946                             		.loc 1 1798 0
 947 001d 66 01                   		mov	#0, r1
 948 001f 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 949                             	.LVL70:
1802:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_startCycleInit();
 950                             		.loc 1 1802 0
 951 0023 04 00 00 00             		bra	_SPV_startCycleInit
 952                             	.LVL71:
 953                             	.LFE23:
 955                             		.section	.text.SPV_updateFunctionValue,"ax",@progbits
 956                             		.global	_SPV_updateFunctionValue
 958                             	_SPV_updateFunctionValue:
 959                             	.LFB24:
1826:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 960                             		.loc 1 1826 0
 961                             	.LVL72:
 962 0000 6E 7B                   		pushm	r7-r11
 963                             	.LCFI12:
 964 0002 60 40                   		sub	#4, r0
 965                             	.LCFI13:
1826:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 966                             		.loc 1 1826 0
 967 0004 CF 17                   		mov.B	r1, r7
 968 0006 EF 2A                   		mov.L	r2, r10
1830:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	retCode = REG_checkIfChanged(funcID);
 969                             		.loc 1 1830 0
 970 0008 05 00 00 00             		bsr	_REG_checkIfChanged
 971                             	.LVL73:
1831:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( retCode == REG_NOT_EXIST )
 972                             		.loc 1 1831 0
 973 000c 5B 11                   		movu.B	r1, r1
 974 000e 61 01                   		cmp	#0, r1
 975 0010 20 28                   		beq	.L113
1837:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( retCode == REG_CHANGED )
 976                             		.loc 1 1837 0
 977 0012 61 11                   		cmp	#1, r1
 978 0014 21 28                   		bne	.L114
 979                             	.LVL74:
 980                             	.LBB19:
 981                             	.LBB20:
1839:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID(funcID, &tempFuncValue);
 982                             		.loc 1 1839 0
 983 0016 CF 71                   		mov.B	r7, r1
 984                             	.LVL75:
 985 0018 EF 02                   		mov.L	r0, r2
 986 001a 05 00 00 00             		bsr	_REG_getFunctionValueByID
 987                             	.LVL76:
1841:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 988                             		.loc 1 1841 0
 989 001e 5B 11                   		movu.B	r1, r1
 990 0020 61 01                   		cmp	#0, r1
 991 0022 21 09                   		bne	.L111
 992                             	.LVL77:
1843:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			*funcValue = (uint8_t)(tempFuncValue);
 993                             		.loc 1 1843 0
 994 0024 CD 0B 01                		mov.B	1[r0], r11
 995 0027 C3 AB                   		mov.B	r11, [r10]
 996 0029 2E 07                   		bra	.L116
 997                             	.L111:
1846:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 998                             		.loc 1 1846 0
 999 002b 75 51 CB                		cmp	#0xcb, r1
 1000 002e 21 0E                   		bne	.L114
 1001                             		.balign 2,3,1
 1002                             	.L116:
1848:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg(funcID);
 1003                             		.loc 1 1848 0
 1004 0030 CF 71                   		mov.B	r7, r1
 1005                             	.LVL78:
 1006 0032 05 00 00 00             		bsr	_REG_updateOldReg
 1007                             	.LVL79:
 1008 0036 2E 06                   		bra	.L114
 1009                             	.LVL80:
 1010                             	.L113:
 1011                             	.LBE20:
 1012                             	.LBE19:
1834:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		return S_FALSE;
 1013                             		.loc 1 1834 0
 1014 0038 66 11                   		mov	#1, r1
 1015                             	.LVL81:
 1016 003a 2E 04                   		bra	.L110
 1017                             	.L114:
1865:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	return S_OK;
 1018                             		.loc 1 1865 0
 1019 003c 66 01                   		mov	#0, r1
 1020                             		.balign 2,3,1
 1021                             	.L110:
1866:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 1022                             		.loc 1 1866 0
 1023 003e 64 11                   		and	#1, r1
 1024 0040 3F 7B 06                		rtsd	#24, r7-r11
 1025                             	.LFE24:
 1027 0043 03                      		.section	.text.SPV_generateColdReset,"ax",@progbits
 1028                             		.global	_SPV_generateColdReset
 1030                             	_SPV_generateColdReset:
 1031                             	.LFB25:
1887:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 1032                             		.loc 1 1887 0
 1033                             		.loc 1 1898 0
 1034 0000 04 00 00 00             		bra	_LIB_Reset_ForceColdReset
 1035                             	.LVL82:
 1036                             	.LFE25:
 1038                             		.section	.text.SPV_updateFaultPointers,"ax",@progbits
 1039                             		.global	_SPV_updateFaultPointers
 1041                             	_SPV_updateFaultPointers:
 1042                             	.LFB26:
1899:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1900:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
1901:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**/
1902:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1903:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** /**
1904:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** Aggiorna i puntatori per i parametri di fault a second ache il ciclo in
1905:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** esecuzione sia un ciclo qualunque o il ciclo di Autotest
1906:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1907:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1908:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [in] 	
1909:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \param [out] 	
1910:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
1911:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \return     	none
1912:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1913:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \notes:			
1914:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1915:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \author		  Valeria Catani  
1916:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \date   		23/09/2008
1917:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** \version    1.0.0
1918:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1919:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** */
1920:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** void SPV_updateFaultPointers(void)
1921:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 1043                             		.loc 1 1921 0
 1044 0000 7E A7                   		push.l	r7
 1045                             	.LCFI14:
1922:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if ( SPV_isAutotestOrTestRunning() == TRUE )
 1046                             		.loc 1 1922 0
 1047 0002 05 00 00 00             		bsr	_SPV_isAutotestOrTestRunning
 1048                             	.LVL83:
 1049 0006 61 11                   		cmp	#1, r1
 1050 0008 FB E2 00 00 00 00       		mov.L	#_DrainFaultData, r14
 1051 000e 21 64                   		bne	.L119
1923:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* � in esecuzione il ciclo di Autotest o Collaudo (cicli speciali) */
1924:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1925:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		DrainFaultData = Tab_DrainFault_Special.Data;
 1052                             		.loc 1 1925 0
 1053 0010 FB 42 00 00 00 00       		mov.L	#_Tab_DrainFault_Special, r4
 1054 0016 EC 44                   		mov.L	[r4], r4
 1055 0018 E3 E4                   		mov.L	r4, [r14]
1926:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		LoadFaultData = Tab_LoadFault_Special.Data;
 1056                             		.loc 1 1926 0
 1057 001a FB 42 00 00 00 00       		mov.L	#_Tab_LoadFault_Special, r4
 1058 0020 EC 44                   		mov.L	[r4], r4
 1059 0022 FB E2 00 00 00 00       		mov.L	#_LoadFaultData, r14
 1060 0028 E3 E4                   		mov.L	r4, [r14]
1927:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		HeatFaultData = Tab_HeatFault_Special.Data;
 1061                             		.loc 1 1927 0
 1062 002a FB 42 00 00 00 00       		mov.L	#_Tab_HeatFault_Special, r4
 1063 0030 EC 44                   		mov.L	[r4], r4
 1064 0032 FB E2 00 00 00 00       		mov.L	#_HeatFaultData, r14
 1065 0038 E3 E4                   		mov.L	r4, [r14]
1928:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ExtDevFaultData = Tab_ExtDevFault_Special.Data; 
 1066                             		.loc 1 1928 0
 1067 003a FB 42 00 00 00 00       		mov.L	#_Tab_ExtDevFault_Special, r4
 1068 0040 EC 44                   		mov.L	[r4], r4
 1069 0042 FB E2 00 00 00 00       		mov.L	#_ExtDevFaultData, r14
 1070 0048 E3 E4                   		mov.L	r4, [r14]
1929:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		MainBoardFaultData = Tab_MainBoardFault_Special.Data;
 1071                             		.loc 1 1929 0
 1072 004a FB 42 00 00 00 00       		mov.L	#_Tab_MainBoardFault_Special, r4
 1073 0050 EC 44                   		mov.L	[r4], r4
 1074 0052 FB E2 00 00 00 00       		mov.L	#_MainBoardFaultData, r14
 1075 0058 E3 E4                   		mov.L	r4, [r14]
1930:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****         ExtDevFaultDataDrain = Tab_ExtDevFaultDrainSpecial.Data;
 1076                             		.loc 1 1930 0
 1077 005a FB 42 00 00 00 00       		mov.L	#_Tab_ExtDevFaultDrainSpecial, r4
 1078 0060 EC 44                   		mov.L	[r4], r4
 1079 0062 FB E2 00 00 00 00       		mov.L	#_ExtDevFaultDataDrain, r14
 1080 0068 E3 E4                   		mov.L	r4, [r14]
1931:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		VSFaultData = Tab_VSFaultSpecial.Data;
 1081                             		.loc 1 1931 0
 1082 006a FB 42 00 00 00 00       		mov.L	#_Tab_VSFaultSpecial, r4
 1083 0070 2E 62                   		bra	.L126
 1084                             	.L119:
1932:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1933:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1934:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* � in esecuzione un ciclo qualsiasi o sono in altri stati : es. Programming */
1935:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1936:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		DrainFaultData = Tab_DrainFault.Data;
 1085                             		.loc 1 1936 0
 1086 0072 FB 42 00 00 00 00       		mov.L	#_Tab_DrainFault, r4
 1087 0078 EC 44                   		mov.L	[r4], r4
 1088 007a E3 E4                   		mov.L	r4, [r14]
1937:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		LoadFaultData = Tab_LoadFault.Data;
 1089                             		.loc 1 1937 0
 1090 007c FB 42 00 00 00 00       		mov.L	#_Tab_LoadFault, r4
 1091 0082 EC 44                   		mov.L	[r4], r4
 1092 0084 FB E2 00 00 00 00       		mov.L	#_LoadFaultData, r14
 1093 008a E3 E4                   		mov.L	r4, [r14]
1938:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		HeatFaultData = Tab_HeatFault.Data;
 1094                             		.loc 1 1938 0
 1095 008c FB 42 00 00 00 00       		mov.L	#_Tab_HeatFault, r4
 1096 0092 EC 44                   		mov.L	[r4], r4
 1097 0094 FB E2 00 00 00 00       		mov.L	#_HeatFaultData, r14
 1098 009a E3 E4                   		mov.L	r4, [r14]
1939:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ExtDevFaultData = Tab_ExtDevFault.Data; 
 1099                             		.loc 1 1939 0
 1100 009c FB 42 00 00 00 00       		mov.L	#_Tab_ExtDevFault, r4
 1101 00a2 EC 44                   		mov.L	[r4], r4
 1102 00a4 FB E2 00 00 00 00       		mov.L	#_ExtDevFaultData, r14
 1103 00aa E3 E4                   		mov.L	r4, [r14]
1940:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		MainBoardFaultData = Tab_MainBoardFault.Data;
 1104                             		.loc 1 1940 0
 1105 00ac FB 42 00 00 00 00       		mov.L	#_Tab_MainBoardFault, r4
 1106 00b2 EC 44                   		mov.L	[r4], r4
 1107 00b4 FB E2 00 00 00 00       		mov.L	#_MainBoardFaultData, r14
 1108 00ba E3 E4                   		mov.L	r4, [r14]
1941:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ExtDevFaultDataDrain = Tab_ExtDevFaultDrain.Data;
 1109                             		.loc 1 1941 0
 1110 00bc FB 42 00 00 00 00       		mov.L	#_Tab_ExtDevFaultDrain, r4
 1111 00c2 EC 44                   		mov.L	[r4], r4
 1112 00c4 FB E2 00 00 00 00       		mov.L	#_ExtDevFaultDataDrain, r14
 1113 00ca E3 E4                   		mov.L	r4, [r14]
1942:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		VSFaultData = Tab_VSFault.Data;
 1114                             		.loc 1 1942 0
 1115 00cc FB 42 00 00 00 00       		mov.L	#_Tab_VSFault, r4
 1116                             		.balign 2,3,1
 1117                             	.L126:
 1118 00d2 EC 44                   		mov.L	[r4], r4
 1119 00d4 FB E2 00 00 00 00       		mov.L	#_VSFaultData, r14
 1120 00da E3 E4                   		mov.L	r4, [r14]
1943:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1944:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   
1945:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifndef _CORRECT_BUG_FAULT_PARAMS_
1946:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (Tab_LoadFault.DataLenght == 4 ) 
1947:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* vecchi setting file : carico parametro di Default */
1948:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1949:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ToutPulseCounterCheckDelay = TOUT_PULSE_COUNTER_CHECK_DELAY_DEFAULT;  
1950:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ToutPumpLoad = TOUT_PUMP_LOAD_DEFAULT;
1951:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1952:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1953:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if (Tab_LoadFault.DataLenght == 5 ) 
1954:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* nuovi setting file : carico parametro da setting */
1955:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* !_CORRECT_BUG_FAULT_PARAMS_ */
1956:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     
1957:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef _CORRECT_BUG_FAULT_PARAMS_
1958:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ToutPulseCounterCheckDelay = (OFFS_B(LoadFaultData,9) & 0x7F) ;	/* Introdurre una macro F_F */
 1121                             		.loc 1 1958 0
 1122 00dc FB E2 00 00 00 00       		mov.L	#_LoadFaultData, r14
 1123 00e2 EC EE                   		mov.L	[r14], r14
 1124 00e4 FB 42 00 00 00 00       		mov.L	#_ToutPulseCounterCheckDelay, r4
 1125 00ea CD E3 09                		mov.B	9[r14], r3
 1126 00ed 75 23 7F                		and	#0x7f, r3
 1127 00f0 C3 43                   		mov.B	r3, [r4]
1959:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #else
1960:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	ToutPulseCounterCheckDelay = OFFS_B(LoadFaultData,9) ;
1961:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* !_CORRECT_BUG_FAULT_PARAMS_ */
1962:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if ( HWC_Flags.bit.vs_wash_presence )
 1128                             		.loc 1 1962 0
 1129 00f2 FB 42 00 00 00 00       		mov.L	#_HWC_Flags, r4
 1130 00f8 DC 44                   		mov.W	[r4], r4
 1131 00fa 76 24 00 08             		and	#0x800, r4
 1132 00fe 5F 44                   		movu.W	r4, r4
 1133 0100 61 04                   		cmp	#0, r4
 1134 0102 20 28                   		beq	.L121
1963:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1964:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* EA aggiunto parametro apertura massima elettrovalvola per brevetto bosch*/
1965:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ToutPumpLoad= 	((Tab_HWCVS_data.DataLenght >3)?(OFFS_W(Tab_HWCVS_data.Data,3)& 0x7FFF):240);
 1135                             		.loc 1 1965 0
 1136 0104 FB E2 00 00 00 00       		mov.L	#_Tab_HWCVS_data, r14
 1137 010a 59 E4 04                		movu.B	4[r14], r4
 1138 010d 61 34                   		cmp	#3, r4
 1139 010f 25 0D                   		bleu	.L124
 1140                             		.loc 1 1965 0 is_stmt 0 discriminator 1
 1141 0111 EC EE                   		mov.L	[r14], r14
 1142 0113 DD EE 03                		mov.W	6[r14], r14
 1143 0116 76 2E FF 7F             		and	#0x7fff, r14
 1144                             	.LVL84:
 1145 011a 2E 06                   		bra	.L122
 1146                             	.L124:
 1147                             		.loc 1 1965 0
 1148 011c 75 4E F0                		mov	#0xf0, r14
 1149 011f 03                      		.balign 2,3,5
 1150                             	.L122:
 1151                             		.loc 1 1965 0 discriminator 3
 1152 0120 FB 42 00 00 00 00       		mov.L	#_ToutPumpLoad, r4
 1153                             	.LVL85:
 1154 0126 D3 4E                   		mov.W	r14, [r4]
 1155 0128 2E 0E                   		bra	.L123
 1156                             	.LVL86:
 1157                             	.L121:
1966:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}else
1967:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1968:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ToutPumpLoad = OFFS_B(LoadFaultData,8);
 1158                             		.loc 1 1968 0 is_stmt 1
 1159 012a 59 E4 08                		movu.B	8[r14], r4
 1160 012d FB E2 00 00 00 00       		mov.L	#_ToutPumpLoad, r14
 1161 0133 D3 E4                   		mov.W	r4, [r14]
 1162                             	.LVL87:
 1163 0135 03                      		.balign 2,3,5
 1164                             	.L123:
1969:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}   
1970:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifndef _CORRECT_BUG_FAULT_PARAMS_
1971:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1972:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
1973:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{
1974:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		/* Do nothing */
1975:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
1976:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* !_CORRECT_BUG_FAULT_PARAMS_ */
1977:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
1978:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifndef _CORRECT_BUG_FAULT_PARAMS_
1979:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (Tab_ExtDevFault.DataLenght == 1)
1980:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* vecchi setting file : carico parametro di default */
1981:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1982:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCUnblockMax = BLDC_UNBLOCK_MAX_DEF;	
1983:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1984:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCResetTout = RESET_BLDC_TOUT_DEF;
1985:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					
1986:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCWaitTout	= BLDC_WAIT_TOUT_DEF;	
1987:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1988:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCSpeedNumMax = BLDC_SPEED_NUM_MAX_DEF;
1989:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1990:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCSpeedTh = BLDC_SPEED_TH_DEF; 
1991:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1992:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP
1993:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCUnblockMaxDrain = BLDC_UNBLOCK_MAX_DEF;	
1994:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1995:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCResetToutDrain = RESET_BLDC_TOUT_DEF;
1996:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					
1997:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCWaitToutDrain	= BLDC_WAIT_TOUT_DEF;	
1998:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
1999:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCSpeedNumMaxDrain = BLDC_SPEED_NUM_MAX_DEF;
2000:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2001:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		BLDCSpeedThDrain = BLDC_SPEED_TH_DEF; 
2002:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP */
2003:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
2004:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else
2005:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	{/* nuovi setting file : carico parametri da setting */
2006:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* !_CORRECT_BUG_FAULT_PARAMS_ */
2007:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	
2008:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCUnblockMax = OFFS_B(ExtDevFaultData,2);
 1165                             		.loc 1 2008 0
 1166 0136 FB E2 00 00 00 00       		mov.L	#_ExtDevFaultData, r14
 1167                             	.LVL88:
 1168 013c EC EE                   		mov.L	[r14], r14
 1169 013e FB 42 00 00 00 00       		mov.L	#_BLDCUnblockMax, r4
 1170 0144 CD E7 02                		mov.B	2[r14], r7
2009:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2010:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCResetTout = OFFS_B(ExtDevFaultData,3);
2011:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2012:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCWaitTout	= ( OFFS_B(ExtDevFaultData,4) * 10 );
 1171                             		.loc 1 2012 0
 1172 0147 FB 32 00 00 00 00       		mov.L	#_BLDCWaitTout, r3
2008:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCUnblockMax = OFFS_B(ExtDevFaultData,2);
 1173                             		.loc 1 2008 0
 1174 014d C3 47                   		mov.B	r7, [r4]
2010:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCResetTout = OFFS_B(ExtDevFaultData,3);
 1175                             		.loc 1 2010 0
 1176 014f CD E7 03                		mov.B	3[r14], r7
 1177 0152 FB 42 00 00 00 00       		mov.L	#_BLDCResetTout, r4
 1178 0158 C3 47                   		mov.B	r7, [r4]
 1179                             		.loc 1 2012 0
 1180 015a 59 E4 04                		movu.B	4[r14], r4
2013:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2014:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCSpeedNumMax = HINIBBLE(OFFS_B(ExtDevFaultData,5));
 1181                             		.loc 1 2014 0
 1182 015d CD EE 05                		mov.B	5[r14], r14
2012:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCWaitTout	= ( OFFS_B(ExtDevFaultData,4) * 10 );
 1183                             		.loc 1 2012 0
 1184 0160 63 A4                   		mul	#10, r4
 1185 0162 D3 34                   		mov.W	r4, [r3]
 1186                             		.loc 1 2014 0
 1187 0164 5B E3                   		movu.B	r14, r3
 1188 0166 68 43                   		shlr	#4, r3
 1189 0168 FB 42 00 00 00 00       		mov.L	#_BLDCSpeedNumMax, r4
2015:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2016:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCSpeedTh = ( LONIBBLE(OFFS_B(ExtDevFaultData,5)) * 100 ); /* in setting il dato � in unit� 
 1190                             		.loc 1 2016 0
 1191 016e 64 FE                   		and	#15, r14
2014:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCSpeedNumMax = HINIBBLE(OFFS_B(ExtDevFaultData,5));
 1192                             		.loc 1 2014 0
 1193 0170 C3 43                   		mov.B	r3, [r4]
 1194                             		.loc 1 2016 0
 1195 0172 75 1E 64                		mul	#0x64, r14
 1196 0175 FB 42 00 00 00 00       		mov.L	#_BLDCSpeedTh, r4
 1197 017b D3 4E                   		mov.W	r14, [r4]
2017:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2018:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifdef CONFIG_LIB_EXTERNAL_BOARD_SUPPORT_DRAINPUMP
2019:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCUnblockMaxDrain = OFFS_B(ExtDevFaultDataDrain,2);
 1198                             		.loc 1 2019 0
 1199 017d FB E2 00 00 00 00       		mov.L	#_ExtDevFaultDataDrain, r14
 1200 0183 EC EE                   		mov.L	[r14], r14
 1201 0185 FB 42 00 00 00 00       		mov.L	#_BLDCUnblockMaxDrain, r4
 1202 018b CD E7 02                		mov.B	2[r14], r7
2020:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2021:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCResetToutDrain = OFFS_B(ExtDevFaultDataDrain,3);
2022:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2023:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCWaitToutDrain	= ( OFFS_B(ExtDevFaultDataDrain,4) * 10 );
 1203                             		.loc 1 2023 0
 1204 018e FB 32 00 00 00 00       		mov.L	#_BLDCWaitToutDrain, r3
2019:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCUnblockMaxDrain = OFFS_B(ExtDevFaultDataDrain,2);
 1205                             		.loc 1 2019 0
 1206 0194 C3 47                   		mov.B	r7, [r4]
2021:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCResetToutDrain = OFFS_B(ExtDevFaultDataDrain,3);
 1207                             		.loc 1 2021 0
 1208 0196 CD E7 03                		mov.B	3[r14], r7
 1209 0199 FB 42 00 00 00 00       		mov.L	#_BLDCResetToutDrain, r4
 1210 019f C3 47                   		mov.B	r7, [r4]
 1211                             		.loc 1 2023 0
 1212 01a1 59 E4 04                		movu.B	4[r14], r4
2024:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2025:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCSpeedNumMaxDrain = HINIBBLE(OFFS_B(ExtDevFaultDataDrain,5));
 1213                             		.loc 1 2025 0
 1214 01a4 CD EE 05                		mov.B	5[r14], r14
2023:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCWaitToutDrain	= ( OFFS_B(ExtDevFaultDataDrain,4) * 10 );
 1215                             		.loc 1 2023 0
 1216 01a7 63 A4                   		mul	#10, r4
 1217 01a9 D3 34                   		mov.W	r4, [r3]
 1218                             		.loc 1 2025 0
 1219 01ab 5B E3                   		movu.B	r14, r3
 1220 01ad FB 42 00 00 00 00       		mov.L	#_BLDCSpeedNumMaxDrain, r4
 1221 01b3 68 43                   		shlr	#4, r3
2026:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2027:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCSpeedThDrain = ( LONIBBLE(OFFS_B(ExtDevFaultDataDrain,5)) * 100 ); /* in setting il dato � i
 1222                             		.loc 1 2027 0
 1223 01b5 64 FE                   		and	#15, r14
2025:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	BLDCSpeedNumMaxDrain = HINIBBLE(OFFS_B(ExtDevFaultDataDrain,5));
 1224                             		.loc 1 2025 0
 1225 01b7 C3 43                   		mov.B	r3, [r4]
 1226                             		.loc 1 2027 0
 1227 01b9 75 1E 64                		mul	#0x64, r14
 1228 01bc FB 42 00 00 00 00       		mov.L	#_BLDCSpeedThDrain, r4
 1229 01c2 D3 4E                   		mov.W	r14, [r4]
2028:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif
2029:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 
2030:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #ifndef _CORRECT_BUG_FAULT_PARAMS_
2031:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	}
2032:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** #endif /* !_CORRECT_BUG_FAULT_PARAMS_ */
2033:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	 
2034:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		
2035:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 1230                             		.loc 1 2035 0
 1231 01c4 3F 77 01                		rtsd	#4, r7-r7
 1232                             	.LFE26:
 1234 01c7 03                      		.section	.text.SPV_superVisor,"ax",@progbits
 1235                             		.global	_SPV_superVisor
 1237                             	_SPV_superVisor:
 1238                             	.LFB0:
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** {
 1239                             		.loc 1 117 0
 1240                             	.LVL89:
 1241 0000 6E 7C                   		pushm	r7-r12
 1242                             	.LCFI15:
 1243 0002 60 40                   		sub	#4, r0
 1244                             	.LCFI16:
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_SELECTOR)) == REG_CHANGED )
 1245                             		.loc 1 141 0
 1246 0004 66 11                   		mov	#1, r1
 1247 0006 05 00 00 00             		bsr	_REG_checkIfChanged
 1248                             	.LVL90:
 1249 000a 5B 11                   		movu.B	r1, r1
 1250 000c 61 11                   		cmp	#1, r1
 1251 000e 21 48                   		bne	.L129
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_SELECTOR), &tempFuncValue);
 1252                             		.loc 1 143 0
 1253 0010 EF 02                   		mov.L	r0, r2
 1254 0012 05 00 00 00             		bsr	_REG_getFunctionValueByID
 1255                             	.LVL91:
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 1256                             		.loc 1 145 0
 1257 0016 5B 11                   		movu.B	r1, r1
 1258 0018 61 01                   		cmp	#0, r1
 1259 001a 21 36                   		bne	.L130
 1260                             	.LVL92:
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if( (uint8_t)(tempFuncValue) < PHASES_PROGRAMMING_NUM )
 1261                             		.loc 1 147 0
 1262 001c DC 07                   		mov.W	[r0], r7
 1263 001e FB A2 00 00 00 00       		mov.L	#_Tab_HWCCyclesNum, r10
 1264 0024 EC AA                   		mov.L	[r10], r10
 1265 0026 5B 7B                   		movu.B	r7, r11
 1266 0028 44 AB                   		cmp	[r10].UB, r11
 1267 002a 22 2C                   		bgeu	.L129
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SelectorFunctionValue = (uint8_t)(tempFuncValue);
 1268                             		.loc 1 149 0
 1269 002c FB A2 00 00 00 00       		mov.L	#_SelectorFunctionValue, r10
 1270 0032 C3 A7                   		mov.B	r7, [r10]
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 1271                             		.loc 1 150 0
 1272 0034 FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 1273 003a CC A1                   		mov.B	[r10], r1
 1274                             	.LVL93:
 1275 003c 64 F1                   		and	#15, r1
 1276 003e 21 0A                   		bne	.L132
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase = SelectorFunctionValue;
 1277                             		.loc 1 152 0
 1278 0040 C7 A7 02                		mov.B	r7, 2[r10]
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));			    
 1279                             		.loc 1 153 0
 1280 0043 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1281                             	.LVL94:
 1282 0047 03                      		.balign 2,3,1
 1283                             	.L132:
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				REG_updateOldReg((uint8_t)(FUNC_ID_SELECTOR));
 1284                             		.loc 1 158 0
 1285 0048 66 11                   		mov	#1, r1
 1286 004a 05 00 00 00             		bsr	_REG_updateOldReg
 1287                             	.LVL95:
 1288 004e 2E 08                   		bra	.L129
 1289                             	.LVL96:
 1290                             	.L130:
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 1291                             		.loc 1 165 0
 1292 0050 75 51 CB                		cmp	#0xcb, r1
 1293 0053 20 F5                   		beq	.L132
 1294                             	.LVL97:
 1295 0055 03                      		.balign 2,3,1
 1296                             	.L129:
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( REG_checkIfChanged((uint8_t)(FUNC_ID_START)) == REG_CHANGED )
 1297                             		.loc 1 186 0
 1298 0056 66 21                   		mov	#2, r1
 1299 0058 05 00 00 00             		bsr	_REG_checkIfChanged
 1300                             	.LVL98:
 1301 005c 5B 11                   		movu.B	r1, r1
 1302 005e 61 11                   		cmp	#1, r1
 1303 0060 3B FA 00                		bne	.L177
 1304                             	.LVL99:
 1305                             	.LBB21:
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_START), &tempFuncValue);
 1306                             		.loc 1 191 0
 1307 0063 66 21                   		mov	#2, r1
 1308 0065 EF 02                   		mov.L	r0, r2
 1309 0067 05 00 00 00             		bsr	_REG_getFunctionValueByID
 1310                             	.LVL100:
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK)
 1311                             		.loc 1 193 0
 1312 006b 5B 11                   		movu.B	r1, r1
 1313 006d 61 01                   		cmp	#0, r1
 1314 006f 3B E3 00                		bne	.L134
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			startFunctionValue = (uint8_t)(tempFuncValue);
 1315                             		.loc 1 195 0
 1316 0072 CD 0A 01                		mov.B	1[r0], r10
 1317                             	.LVL101:
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			switch(startFunctionValue)
 1318                             		.loc 1 197 0
 1319 0075 71 AB FF                		add	#-1, r10, r11
 1320 0078 5B BB                   		movu.B	r11, r11
 1321 007a 61 4B                   		cmp	#4, r11
 1322 007c 25 05 38 D1 03          		bgtu	.L180
 1323 0081 FB 72 00 00 00 00       		mov.L	#.L140, r7
 1324 0087 FE 6B 7B                		mov.L	[r11,r7], r11
 1325 008a FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1326                             		
 1327 0090 7F 0B                   	1:jmp	r11
 1328                             		.section	.rodata.SPV_superVisor,"a",@progbits
 1329                             		.balign 4
 1330                             		.balign 4
 1331                             	.L140:
 1332 0000 00 00 00 00             		.long .L136
 1333 0004 00 00 00 00             		.long .L137
 1334 0008 00 00 00 00             		.long .L138
 1335 000c 00 00 00 00             		.long .L137
 1336 0010 00 00 00 00             		.long .L139
 1337                             		.section	.text.SPV_superVisor
 1338                             	.L136:
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if(Interpreter_Data[0].completeLabel.s.label == LBL_PROGRAMMING )
 1339                             		.loc 1 201 0
 1340 0092 CC 77                   		mov.B	[r7], r7
 1341 0094 64 F7                   		and	#15, r7
 1342 0096 21 0B                   		bne	.L141
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  SPV_startCycle();	
 1343                             		.loc 1 204 0
 1344 0098 05 00 00 00             		bsr	_SPV_startCycle
 1345                             	.LVL102:
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					  started_cycle = TRUE;
 1346                             		.loc 1 209 0
 1347 009c 66 17                   		mov.L	#1, r7
 1348 009e 38 B4 03                		bra	.L135
 1349                             	.LVL103:
 1350                             	.L141:
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					else if( Interpreter_Data[0].completeLabel.s.label == LBL_PAUSE )
 1351                             		.loc 1 212 0
 1352 00a1 61 47                   		cmp	#4, r7
 1353 00a3 3B AC 03                		bne	.L180
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_restoreIntptState(&Paused_Intpt_Data[0]);
 1354                             		.loc 1 215 0
 1355 00a6 FB 12 00 00 00 00       		mov.L	#_Paused_Intpt_Data, r1
 1356                             	.LVL104:
 1357 00ac 05 00 00 00             		bsr	_SPV_restoreIntptState
 1358                             	.LVL105:
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_PARTIAL_INIT));												    		    					
 1359                             		.loc 1 216 0
 1360 00b0 66 11                   		mov	#1, r1
 1361 00b2 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1362                             	.LVL106:
 1363 00b6 38 99 03                		bra	.L180
 1364                             	.LVL107:
 1365                             	.L137:
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_PROGRAMMING, &destinationCycle) == S_OK )
 1366                             		.loc 1 230 0
 1367 00b9 71 02 02                		add	#2, r0, r2
 1368 00bc 66 01                   		mov	#0, r1
 1369                             	.LVL108:
 1370 00be 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 1371                             	.LVL109:
 1372 00c2 5B 11                   		movu.B	r1, r1
 1373 00c4 61 01                   		cmp	#0, r1
 1374 00c6 21 5A                   		bne	.L142
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == FS_RESET_CONDITION )
 1375                             		.loc 1 232 0
 1376 00c8 5B AA                   		movu.B	r10, r10
 1377 00ca 61 2A                   		cmp	#2, r10
 1378 00cc FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1379 00d2 21 16                   		bne	.L143
 1380                             	.LVL110:
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == CMPLT_LBL_END )
 1381                             		.loc 1 238 0
 1382 00d4 CC 77                   		mov.B	[r7], r7
 1383 00d6 64 F7                   		and	#15, r7
 1384 00d8 61 37                   		cmp	#3, r7
 1385 00da 20 22                   		beq	.L174
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								IncWordWithCheck(&MachineStatistics.globalStats.user_cycle_reset);
 1386                             		.loc 1 253 0
 1387 00dc FB 12 00 00 00 00       		mov.L	#_MachineStatistics+94, r1
 1388 00e2 05 00 00 00             		bsr	_IncWordWithCheck
 1389                             	.LVL111:
 1390 00e6 2E 16                   		bra	.L174
 1391                             	.LVL112:
 1392                             	.L143:
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						if( startFunctionValue == FS_RESET_FAULT )
 1393                             		.loc 1 259 0
 1394 00e8 61 4A                   		cmp	#4, r10
 1395 00ea 21 70                   		bne	.L177
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							if( Interpreter_Data[0].completeLabel.s.label == LBL_FAULT )
 1396                             		.loc 1 262 0
 1397 00ec CC 77                   		mov.B	[r7], r7
 1398 00ee 64 F7                   		and	#15, r7
 1399 00f0 61 57                   		cmp	#5, r7
 1400 00f2 21 68                   		bne	.L177
 1401                             	.LVL113:
 276:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								FLT_currentFaultReset();  
 1402                             		.loc 1 276 0
 1403 00f4 05 00 00 00             		bsr	_FLT_currentFaultReset
 1404                             	.LVL114:
 277:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 								FLT_faultMgmtDataReset(); 
 1405                             		.loc 1 277 0
 1406 00f8 05 00 00 00             		bsr	_FLT_faultMgmtDataReset
 1407                             	.LVL115:
 1408                             		.balign 2,3,5
 1409                             	.L174:
 283:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].cycle = destinationCycle;
 1410                             		.loc 1 283 0
 1411 00fc CD 0A 02                		mov.B	2[r0], r10
 1412                             	.LVL116:
 1413 00ff FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1414 0105 C7 7A 01                		mov.B	r10, 1[r7]
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase = SelectorFunctionValue;
 1415                             		.loc 1 284 0
 1416 0108 FB A2 00 00 00 00       		mov.L	#_SelectorFunctionValue, r10
 1417 010e CC AA                   		mov.B	[r10], r10
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 1418                             		.loc 1 285 0
 1419 0110 66 01                   		mov	#0, r1
 284:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							Interpreter_Data[0].phase = SelectorFunctionValue;
 1420                             		.loc 1 284 0
 1421 0112 C7 7A 02                		mov.B	r10, 2[r7]
 285:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));
 1422                             		.loc 1 285 0
 1423 0115 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1424                             	.LVL117:
 290:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 							SPV_resetSensVariablesButDelay();
 1425                             		.loc 1 290 0
 1426 0119 05 00 00 00             		bsr	_SPV_resetSensVariablesButDelay
 1427                             	.LVL118:
 1428 011d 38 32 03                		bra	.L180
 1429                             	.LVL119:
 1430                             	.L142:
 1431                             	.LBB22:
 1432                             	.LBB23:
1898:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	LIB_Reset_ForceColdReset();
 1433                             		.loc 1 1898 0
 1434 0120 05 00 00 00             		bsr	_LIB_Reset_ForceColdReset
 1435                             	.LVL120:
 1436 0124 2E 36                   		bra	.L177
 1437                             	.LVL121:
 1438                             	.L139:
 1439                             	.LBE23:
 1440                             	.LBE22:
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) &&
 1441                             		.loc 1 318 0
 1442 0126 CC 77                   		mov.B	[r7], r7
 1443 0128 64 F7                   		and	#15, r7
 1444 012a 61 17                   		cmp	#1, r7
 1445 012c 21 2E                   		bne	.L177
 318:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if( (Interpreter_Data[0].completeLabel.s.label == LBL_RUN) &&
 1446                             		.loc 1 318 0 is_stmt 0 discriminator 1
 1447 012e FB 72 00 00 00 00       		mov.L	#_SelectorFunctionValue, r7
 1448 0134 58 7A                   		movu.B	[r7], r10
 1449                             	.LVL122:
 1450 0136 FB 72 00 00 00 00       		mov.L	#_StartedCycle, r7
 1451 013c 44 7A                   		cmp	[r7].UB, r10
 1452 013e 20 1C                   		beq	.L177
 328:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_resetSensVariablesButDelay();
 1453                             		.loc 1 328 0 is_stmt 1
 1454 0140 05 00 00 00             		bsr	_SPV_resetSensVariablesButDelay
 1455                             	.LVL123:
 332:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						SPV_startCycle();
 1456                             		.loc 1 332 0
 1457 0144 05 00 00 00             		bsr	_SPV_startCycle
 1458                             	.LVL124:
 1459 0148 38 07 03                		bra	.L180
 1460                             	.LVL125:
 1461                             	.L138:
 344:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					(void)SPV_goingToSleepManager();
 1462                             		.loc 1 344 0
 1463 014b 05 00 00 00             		bsr	_SPV_goingToSleepManager
 1464                             	.LVL126:
 1465 014f 38 00 03                		bra	.L180
 1466                             	.LVL127:
 1467                             	.L134:
 354:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 1468                             		.loc 1 354 0
 1469 0152 75 51 CB                		cmp	#0xcb, r1
 1470 0155 21 05                   		bne	.L177
 1471 0157 38 F8 02                		bra	.L180
 1472                             	.LVL128:
 1473                             	.L177:
 1474                             	.LBE21:
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	started_cycle = FALSE;
 1475                             		.loc 1 184 0
 1476 015a 66 07                   		mov.L	#0, r7
 1477                             	.LVL129:
 1478                             		.balign 2,3,3
 1479                             	.L133:
 372:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 1480                             		.loc 1 372 0
 1481 015c 05 00 00 00             		bsr	_SPV_updateCycleLabel
 1482                             	.LVL130:
 381:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   delayHHReg_changed = REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_HH);
 1483                             		.loc 1 381 0
 1484 0160 75 41 13                		mov	#19, r1
 1485 0163 05 00 00 00             		bsr	_REG_checkIfChanged
 1486                             	.LVL131:
 1487 0167 CF 1B                   		mov.B	r1, r11
 1488                             	.LVL132:
 383:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   delayMMReg_changed = REG_checkIfChanged((uint8_t)FUNC_ID_DELAY_MM); 
 1489                             		.loc 1 383 0
 1490 0169 75 41 14                		mov	#20, r1
 1491                             	.LVL133:
 1492 016c 05 00 00 00             		bsr	_REG_checkIfChanged
 1493                             	.LVL134:
 387:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( delayHHReg_changed == REG_CHANGED )
 1494                             		.loc 1 387 0
 1495 0170 5B BA                   		movu.B	r11, r10
 1496 0172 61 1A                   		cmp	#1, r10
 1497 0174 3B E7 02                		bne	.L147
 389:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_HH), &tempFuncValue);
 1498                             		.loc 1 389 0
 1499 0177 75 41 13                		mov	#19, r1
 1500                             	.LVL135:
 1501 017a EF 02                   		mov.L	r0, r2
 1502 017c 05 00 00 00             		bsr	_REG_getFunctionValueByID
 1503                             	.LVL136:
 391:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 1504                             		.loc 1 391 0
 1505 0180 5B 11                   		movu.B	r1, r1
 1506 0182 61 01                   		cmp	#0, r1
 1507 0184 21 16                   		bne	.L148
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.hours = (uint16_t)(tempFuncValue);  /* aggiornamento delay in ore */
 1508                             		.loc 1 393 0
 1509 0186 CD 0C 01                		mov.B	1[r0], r12
 1510 0189 FB E2 00 00 00 00       		mov.L	#_Delay, r14
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 1511                             		.loc 1 398 0
 1512 018f 75 41 13                		mov	#19, r1
 1513                             	.LVL137:
 393:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.hours = (uint16_t)(tempFuncValue);  /* aggiornamento delay in ore */
 1514                             		.loc 1 393 0
 1515 0192 C3 EC                   		mov.B	r12, [r14]
 1516                             	.LVL138:
 398:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 1517                             		.loc 1 398 0
 1518 0194 05 00 00 00             		bsr	_REG_updateOldReg
 1519                             	.LVL139:
 1520 0198 2E 10                   		bra	.L175
 1521                             	.LVL140:
 1522                             	.L148:
 400:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 1523                             		.loc 1 400 0
 1524 019a 75 51 CB                		cmp	#0xcb, r1
 1525 019d 21 09                   		bne	.L182
 402:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_HH));
 1526                             		.loc 1 402 0
 1527 019f 75 41 13                		mov	#19, r1
 1528                             	.LVL141:
 1529 01a2 05 00 00 00             		bsr	_REG_updateOldReg
 1530                             	.LVL142:
 1531                             		.balign 2,3,1
 1532                             	.L182:
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** uint8_t delaySync = FALSE;
 1533                             		.loc 1 126 0
 1534 01a6 66 0A                   		mov	#0, r10
 1535                             	.LVL143:
 1536                             		.balign 2,3,2
 1537                             	.L175:
 415:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		retCode = REG_getFunctionValueByID((uint8_t)(FUNC_ID_DELAY_MM), &tempFuncValue);
 1538                             		.loc 1 415 0
 1539 01a8 75 41 14                		mov	#20, r1
 1540 01ab EF 02                   		mov.L	r0, r2
 1541 01ad 05 00 00 00             		bsr	_REG_getFunctionValueByID
 1542                             	.LVL144:
 417:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( retCode == S_OK )
 1543                             		.loc 1 417 0
 1544 01b1 5B 11                   		movu.B	r1, r1
 1545 01b3 61 01                   		cmp	#0, r1
 1546 01b5 21 17                   		bne	.L150
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.minutes = (uint16_t)(tempFuncValue);  /* aggiornamento delay in ore */
 1547                             		.loc 1 419 0
 1548 01b7 CD 0B 01                		mov.B	1[r0], r11
 1549                             	.LVL145:
 1550 01ba FB A2 00 00 00 00       		mov.L	#_Delay, r10
 424:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 1551                             		.loc 1 424 0
 1552 01c0 75 41 14                		mov	#20, r1
 1553                             	.LVL146:
 419:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Delay.minutes = (uint16_t)(tempFuncValue);  /* aggiornamento delay in ore */
 1554                             		.loc 1 419 0
 1555 01c3 C7 AB 01                		mov.B	r11, 1[r10]
 1556                             	.LVL147:
 424:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 1557                             		.loc 1 424 0
 1558 01c6 05 00 00 00             		bsr	_REG_updateOldReg
 1559                             	.LVL148:
 1560 01ca 2E 2C                   		bra	.L151
 1561                             	.LVL149:
 1562                             	.L150:
 426:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if (retCode == REG_ERR_FUNC_NOT_FOUND)
 1563                             		.loc 1 426 0
 1564 01cc 75 51 C9                		cmp	#0xc9, r1
 1565 01cf 21 14                   		bne	.L152
 429:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		  if (delayHHReg_changed == REG_CHANGED)
 1566                             		.loc 1 429 0
 1567 01d1 5B BB                   		movu.B	r11, r11
 1568 01d3 61 1B                   		cmp	#1, r11
 1569 01d5 21 1B                   		bne	.L153
 432:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		    	Delay.minutes = 0;  
 1570                             		.loc 1 432 0
 1571 01d7 FB B2 00 00 00 00       		mov.L	#_Delay, r11
 1572                             	.LVL150:
 1573 01dd F9 B4 01 00             		mov.B	#0, 1[r11]
 1574 01e1 2E 0F                   		bra	.L153
 1575                             	.LVL151:
 1576                             	.L152:
 436:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		else if( retCode == REG_NULL_INDEX )
 1577                             		.loc 1 436 0
 1578 01e3 75 51 CB                		cmp	#0xcb, r1
 1579 01e6 21 0A                   		bne	.L153
 444:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_DELAY_MM));
 1580                             		.loc 1 444 0
 1581 01e8 75 41 14                		mov	#20, r1
 1582                             	.LVL152:
 1583 01eb 05 00 00 00             		bsr	_REG_updateOldReg
 1584                             	.LVL153:
 1585 01ef 03                      		.balign 2,3,1
 1586                             	.L153:
 453:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if (delaySync == TRUE)
 1587                             		.loc 1 453 0
 1588 01f0 5B AA                   		movu.B	r10, r10
 1589 01f2 61 1A                   		cmp	#1, r10
 1590 01f4 21 0A                   		bne	.L154
 1591                             	.LVL154:
 1592                             		.balign 2,3,1
 1593                             	.L151:
 458:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	  (void)SWTC_SetSValue ((SWTC_CountersType)SPV_DELAY_TIMER_S_COUNTER,(SWTC_SCounterValue)0);
 1594                             		.loc 1 458 0
 1595 01f6 66 F1                   		mov	#15, r1
 1596 01f8 66 02                   		mov	#0, r2
 1597 01fa 05 00 00 00             		bsr	_SWTC_SetSValue
 1598                             	.LVL155:
 1599                             		.balign 2,3,5
 1600                             	.L154:
 468:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( Interpreter_Data[0].completeLabel.s.label == LBL_RUN ) 
 1601                             		.loc 1 468 0
 1602 01fe FB A2 00 00 00 00       		mov.L	#_Interpreter_Data, r10
 1603 0204 CC AB                   		mov.B	[r10], r11
 1604 0206 64 FB                   		and	#15, r11
 1605 0208 61 1B                   		cmp	#1, r11
 1606 020a 21 5D                   		bne	.L155
 470:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (Delay.hours != 0) || (Delay.minutes != 0) )
 1607                             		.loc 1 470 0
 1608 020c FB A2 00 00 00 00       		mov.L	#_Delay, r10
 1609 0212 58 AB                   		movu.B	[r10], r11
 1610 0214 61 0B                   		cmp	#0, r11
 1611 0216 21 0A                   		bne	.L156
 470:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (Delay.hours != 0) || (Delay.minutes != 0) )
 1612                             		.loc 1 470 0 is_stmt 0 discriminator 1
 1613 0218 59 AA 01                		movu.B	1[r10], r10
 1614 021b 61 0A                   		cmp	#0, r10
 1615 021d 20 6F                   		beq	.L157
 1616 021f 03                      		.balign 2,3,2
 1617                             	.L156:
 473:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			if( SPV_searchCycleByLabel(CMPLT_LBL_DELAY, &destinationCycle) == S_OK )
 1618                             		.loc 1 473 0 is_stmt 1
 1619 0220 71 02 02                		add	#2, r0, r2
 1620 0223 66 21                   		mov	#2, r1
 1621 0225 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 1622                             	.LVL156:
 1623 0229 5B 1A                   		movu.B	r1, r10
 1624 022b 61 0A                   		cmp	#0, r10
 1625 022d 21 2B                   		bne	.L158
 480:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				IncWordWithCheck(&MachineStatistics.globalStats.delayedCycles_Num);
 1626                             		.loc 1 480 0
 1627 022f FB 12 00 00 00 00       		mov.L	#_MachineStatistics+66, r1
 1628 0235 05 00 00 00             		bsr	_IncWordWithCheck
 1629                             	.LVL157:
 499:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				SPV_setupDelayCounter();
 1630                             		.loc 1 499 0
 1631 0239 05 00 00 00             		bsr	_SPV_setupDelayCounter
 1632                             	.LVL158:
 504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = StartedCycle;
 1633                             		.loc 1 504 0
 1634 023d FB E2 00 00 00 00       		mov.L	#_StartedCycle, r14
 502:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 1635                             		.loc 1 502 0
 1636 0243 CD 0C 02                		mov.B	2[r0], r12
 504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = StartedCycle;
 1637                             		.loc 1 504 0
 1638 0246 CC EE                   		mov.B	[r14], r14
 502:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].cycle = destinationCycle;
 1639                             		.loc 1 502 0
 1640 0248 FB B2 00 00 00 00       		mov.L	#_Interpreter_Data, r11
 1641 024e C7 BC 01                		mov.B	r12, 1[r11]
 504:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Interpreter_Data[0].phase = StartedCycle;
 1642                             		.loc 1 504 0
 1643 0251 C7 BE 02                		mov.B	r14, 2[r11]
 505:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));										
 1644                             		.loc 1 505 0
 1645 0254 CF A1                   		mov.B	r10, r1
 1646 0256 2E 32                   		bra	.L210
 1647                             	.L158:
 509:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.hours = 0;		
 1648                             		.loc 1 509 0
 1649 0258 FB A2 00 00 00 00       		mov.L	#_Delay, r10
 1650 025e F8 A4 00                		mov.B	#0, [r10]
 510:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				Delay.minutes = 0;		
 1651                             		.loc 1 510 0
 1652 0261 F9 A4 01 00             		mov.B	#0, 1[r10]
 1653 0265 2E 27                   		bra	.L157
 1654                             	.L155:
 514:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	else if( Interpreter_Data[0].completeLabel.s.label == LBL_DELAY )
 1655                             		.loc 1 514 0
 1656 0267 61 2B                   		cmp	#2, r11
 1657 0269 21 23                   		bne	.L157
 516:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (Delay.hours == 0) && (Delay.minutes == 0) )
 1658                             		.loc 1 516 0
 1659 026b FB B2 00 00 00 00       		mov.L	#_Delay, r11
 1660 0271 58 BE                   		movu.B	[r11], r14
 1661 0273 61 0E                   		cmp	#0, r14
 1662 0275 21 17                   		bne	.L157
 516:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		if( (Delay.hours == 0) && (Delay.minutes == 0) )
 1663                             		.loc 1 516 0 is_stmt 0 discriminator 1
 1664 0277 59 B1 01                		movu.B	1[r11], r1
 1665 027a 61 01                   		cmp	#0, r1
 1666 027c 21 10                   		bne	.L157
 523:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = Interpreter_Data[0].phase;
 1667                             		.loc 1 523 0 is_stmt 1
 1668 027e CD AB 02                		mov.B	2[r10], r11
 524:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].phase = 0;
 1669                             		.loc 1 524 0
 1670 0281 C7 A1 02                		mov.B	r1, 2[r10]
 523:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			Interpreter_Data[0].cycle = Interpreter_Data[0].phase;
 1671                             		.loc 1 523 0
 1672 0284 C7 AB 01                		mov.B	r11, 1[r10]
 1673 0287 03                      		.balign 2,3,3
 1674                             	.L210:
 525:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));									
 1675                             		.loc 1 525 0
 1676 0288 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1677                             	.LVL159:
 1678                             		.balign 2,3,3
 1679                             	.L157:
 535:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateCycleLabel();
 1680                             		.loc 1 535 0
 1681 028c 05 00 00 00             		bsr	_SPV_updateCycleLabel
 1682                             	.LVL160:
 538:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_manageDelayCounters();
 1683                             		.loc 1 538 0
 1684 0290 05 00 00 00             		bsr	_SPV_manageDelayCounters
 1685                             	.LVL161:
 632:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_BASKET), &DishRackFunctionValue) == S_FALSE)
 1686                             		.loc 1 632 0
 1687 0294 75 41 1C                		mov	#28, r1
 1688 0297 FB 22 00 00 00 00       		mov.L	#_DishRackFunctionValue, r2
 1689 029d 05 00 00 00             		bsr	_SPV_updateFunctionValue
 1690                             	.LVL162:
 1691 02a1 5B 11                   		movu.B	r1, r1
 1692 02a3 61 11                   		cmp	#1, r1
 1693 02a5 21 0B                   		bne	.L159
 634:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		DishRackFunctionValue = DISH_RACK_DFLT_VALUE;
 1694                             		.loc 1 634 0
 1695 02a7 FB A2 00 00 00 00       		mov.L	#_DishRackFunctionValue, r10
 1696 02ad F8 A4 00                		mov.B	#0, [r10]
 1697                             		.balign 2,3,2
 1698                             	.L159:
 644:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_WATER_HARDNESS), &WaterForRegenerate) == S_FALSE)
 1699                             		.loc 1 644 0
 1700 02b0 75 41 39                		mov	#57, r1
 1701 02b3 FB 22 00 00 00 00       		mov.L	#_WaterForRegenerate, r2
 1702 02b9 05 00 00 00             		bsr	_SPV_updateFunctionValue
 1703                             	.LVL163:
 1704 02bd 5B 11                   		movu.B	r1, r1
 1705 02bf 61 11                   		cmp	#1, r1
 1706 02c1 21 0B                   		bne	.L160
 646:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		WaterForRegenerate = REGENERATE_WATER_DFLT_VALUE;
 1707                             		.loc 1 646 0
 1708 02c3 FB A2 00 00 00 00       		mov.L	#_WaterForRegenerate, r10
 1709 02c9 F8 A4 41                		mov.B	#0x41, [r10]
 1710                             		.balign 2,3,2
 1711                             	.L160:
 657:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_ZONE_WASH), &ZoneWashFunctionValue) == S_FALSE)
 1712                             		.loc 1 657 0
 1713 02cc 75 41 3D                		mov	#61, r1
 1714 02cf FB 22 00 00 00 00       		mov.L	#_ZoneWashFunctionValue, r2
 1715 02d5 05 00 00 00             		bsr	_SPV_updateFunctionValue
 1716                             	.LVL164:
 1717 02d9 5B 11                   		movu.B	r1, r1
 1718 02db 61 11                   		cmp	#1, r1
 1719 02dd 21 0B                   		bne	.L161
 659:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		ZoneWashFunctionValue = ZONE_WASH_DFLT_VALUE;
 1720                             		.loc 1 659 0
 1721 02df FB A2 00 00 00 00       		mov.L	#_ZoneWashFunctionValue, r10
 1722 02e5 F8 A4 00                		mov.B	#0, [r10]
 1723                             		.balign 2,3,2
 1724                             	.L161:
 669:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( SPV_updateFunctionValue((uint8_t)(FUNC_ID_RINSE_AID), &RinseAidFunctionValue) == S_FALSE)
 1725                             		.loc 1 669 0
 1726 02e8 75 41 38                		mov	#56, r1
 1727 02eb FB 22 00 00 00 00       		mov.L	#_RinseAidFunctionValue, r2
 1728 02f1 05 00 00 00             		bsr	_SPV_updateFunctionValue
 1729                             	.LVL165:
 1730 02f5 61 11                   		cmp	#1, r1
 1731 02f7 21 0B                   		bne	.L162
 671:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		RinseAidFunctionValue = RINSE_AID_DFLT_VALUE;
 1732                             		.loc 1 671 0
 1733 02f9 FB A2 00 00 00 00       		mov.L	#_RinseAidFunctionValue, r10
 1734 02ff C3 A1                   		mov.B	r1, [r10]
 1735 0301 03                      		.balign 2,3,5
 1736                             	.L162:
 677:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	LastFaultCopy.faultCodes = MachineStatistics.lastFault[0].faultCodes;
 1737                             		.loc 1 677 0
 1738 0302 FB B2 00 00 00 00       		mov.L	#_MachineStatistics, r11
 1739 0308 DD BB 85                		mov.W	266[r11], r11
 1740 030b FB A2 00 00 00 00       		mov.L	#_LastFaultCopy, r10
 1741 0311 D3 AB                   		mov.W	r11, [r10]
 688:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if ( started_cycle == TRUE )
 1742                             		.loc 1 688 0
 1743 0313 61 17                   		cmp	#1, r7
 1744 0315 21 17                   		bne	.L163
 690:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	    if ( Interpreter_Data[0].completeLabel.s.subLabel == SUBL_AUTOTEST )
 1745                             		.loc 1 690 0
 1746 0317 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1747                             	.LVL166:
 1748 031d CC 77                   		mov.B	[r7], r7
 1749 031f 76 27 F0 00             		and	#0xf0, r7
 1750 0323 75 57 20                		cmp	#32, r7
 1751 0326 21 06                   		bne	.L163
 693:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	      FLT_faultMgmtDataReset();  
 1752                             		.loc 1 693 0
 1753 0328 05 00 00 00             		bsr	_FLT_faultMgmtDataReset
 1754                             	.LVL167:
 1755                             		.balign 2,3,5
 1756                             	.L163:
 700:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (uP_AltCtrl_Data.SV_invalid_4alt == TRUE) || !(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_V
 1757                             		.loc 1 700 0
 1758 032c FB 72 00 00 00 00       		mov.L	#_uP_AltCtrl_Data, r7
 698:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	SPV_updateFaultPointers();
 1759                             		.loc 1 698 0
 1760 0332 05 00 00 00             		bsr	_SPV_updateFaultPointers
 1761                             	.LVL168:
 700:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (uP_AltCtrl_Data.SV_invalid_4alt == TRUE) || !(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_V
 1762                             		.loc 1 700 0
 1763 0336 89 77                   		mov.B	4[r7], r7
 1764 0338 76 27 80 00             		and	#0x80, r7
 1765 033c 5B 77                   		movu.B	r7, r7
 1766 033e 61 07                   		cmp	#0, r7
 1767 0340 21 14                   		bne	.L164
 700:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (uP_AltCtrl_Data.SV_invalid_4alt == TRUE) || !(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_V
 1768                             		.loc 1 700 0 is_stmt 0 discriminator 1
 1769 0342 FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 1770 0348 DC 77                   		mov.W	[r7], r7
 1771 034a 76 27 00 04             		and	#0x400, r7
 1772 034e 5F 77                   		movu.W	r7, r7
 1773 0350 61 07                   		cmp	#0, r7
 1774 0352 21 0D                   		bne	.L165
 1775                             		.balign 2,3,5
 1776                             	.L164:
 702:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=0xFF;
 1777                             		.loc 1 702 0 is_stmt 1
 1778 0354 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value_jumpifcopy, r7
 1779 035a F8 74 FF                		mov.B	#-1, [r7]
 1780 035d 2E 13                   		bra	.L166
 1781                             	.L165:
 706:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_WASH]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_WA
 1782                             		.loc 1 706 0
 1783 035f FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 1784 0365 CC AA                   		mov.B	[r10], r10
 1785 0367 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value_jumpifcopy, r7
 1786 036d C3 7A                   		mov.B	r10, [r7]
 1787 036f 03                      		.balign 2,3,5
 1788                             	.L166:
 710:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if(!(TESTBIT (GIValid, (GI_FIRST_VIRTSENSOR_BIT+GI_VIRTUAL_SENSOR_DRAIN))) )
 1789                             		.loc 1 710 0
 1790 0370 FB 72 00 00 00 00       		mov.L	#_GIValid, r7
 1791 0376 DC 7A                   		mov.W	[r7], r10
 1792 0378 FB 72 00 00 00 00       		mov.L	#_Virtual_Sensor_Value_jumpifcopy, r7
 1793 037e 76 2A 00 08             		and	#0x800, r10
 1794 0382 5F AA                   		movu.W	r10, r10
 1795 0384 61 0A                   		cmp	#0, r10
 1796 0386 21 08                   		bne	.L167
 712:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=0xFF;
 1797                             		.loc 1 712 0
 1798 0388 F9 74 01 FF             		mov.B	#-1, 1[r7]
 1799 038c 2E 0E                   		bra	.L168
 1800                             	.L167:
 716:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		Virtual_Sensor_Value_jumpifcopy[GI_VIRTUAL_SENSOR_DRAIN]=Virtual_Sensor_Value[GI_VIRTUAL_SENSOR_D
 1801                             		.loc 1 716 0
 1802 038e FB A2 00 00 00 00       		mov.L	#_Virtual_Sensor_Value, r10
 1803 0394 CD AA 01                		mov.B	1[r10], r10
 1804 0397 C7 7A 01                		mov.B	r10, 1[r7]
 1805                             		.balign 2,3,3
 1806                             	.L168:
 724:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	interpreterResult = ITP_programFlowInterpreter();
 1807                             		.loc 1 724 0
 1808 039a 05 00 00 00             		bsr	_ITP_programFlowInterpreter
 1809                             	.LVL169:
 726:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if((interpreterResult & ERR_CODE) == 0)
 1810                             		.loc 1 726 0
 1811 039e CF 1A                   		mov.B	r1, r10
 1812 03a0 61 0A                   		cmp	#0, r10
 724:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	interpreterResult = ITP_programFlowInterpreter();
 1813                             		.loc 1 724 0
 1814 03a2 CF 17                   		mov.B	r1, r7
 1815                             	.LVL170:
 726:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if((interpreterResult & ERR_CODE) == 0)
 1816                             		.loc 1 726 0
 1817 03a4 29 7F                   		blt	.L169
 729:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		SPV_updateCycleLabel();
 1818                             		.loc 1 729 0
 1819 03a6 05 00 00 00             		bsr	_SPV_updateCycleLabel
 1820                             	.LVL171:
 731:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 		switch( interpreterResult )
 1821                             		.loc 1 731 0
 1822 03aa 5B 71                   		movu.B	r7, r1
 1823 03ac 61 11                   		cmp	#1, r1
 1824 03ae 20 0C                   		beq	.L171
 1825 03b0 61 01                   		cmp	#0, r1
 1826 03b2 20 76                   		beq	.L170
 1827 03b4 61 31                   		cmp	#3, r1
 1828 03b6 24 72                   		bgtu	.L170
 1829 03b8 2E 1E                   		bra	.L207
 1830                             	.L171:
 739:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				if( (Interpreter_Data[0].completeLabel.s.label != LBL_RUN) && (Interpreter_Data[0].completeLabe
 1831                             		.loc 1 739 0
 1832 03ba FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1833                             	.LVL172:
 1834 03c0 CC 7A                   		mov.B	[r7], r10
 1835 03c2 64 FA                   		and	#15, r10
 1836 03c4 61 1A                   		cmp	#1, r10
 1837 03c6 20 62                   		beq	.L170
 739:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				if( (Interpreter_Data[0].completeLabel.s.label != LBL_RUN) && (Interpreter_Data[0].completeLabe
 1838                             		.loc 1 739 0 is_stmt 0 discriminator 1
 1839 03c8 61 5A                   		cmp	#5, r10
 1840 03ca 20 5E                   		beq	.L170
 745:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					Interpreter_Data[0].phase --;
 1841                             		.loc 1 745 0 is_stmt 1
 1842 03cc CD 7A 02                		mov.B	2[r7], r10
 1843 03cf 60 1A                   		sub	#1, r10
 1844 03d1 C7 7A 02                		mov.B	r10, 2[r7]
 1845 03d4 2E 14                   		bra	.L211
 1846                             	.LVL173:
 1847                             	.L207:
 755:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				if( Interpreter_Data[0].completeLabel.s.label != LBL_RUN )
 1848                             		.loc 1 755 0
 1849 03d6 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
 1850                             	.LVL174:
 1851 03dc CC 7A                   		mov.B	[r7], r10
 1852 03de 64 FA                   		and	#15, r10
 1853 03e0 61 1A                   		cmp	#1, r10
 1854 03e2 20 0E                   		beq	.L173
 757:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 				  if (Interpreter_Data[0].completeLabel.s.label != LBL_FAULT)
 1855                             		.loc 1 757 0
 1856 03e4 61 5A                   		cmp	#5, r10
 1857 03e6 20 42                   		beq	.L170
 1858                             		.balign 2,3,1
 1859                             	.L211:
 761:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****   					ITP_interpreterFlagsInit( (uint8_t)(ITP_FULL_INIT));
 1860                             		.loc 1 761 0
 1861 03e8 66 01                   		mov	#0, r1
 1862                             	.LVL175:
 1863 03ea 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1864                             	.LVL176:
 1865 03ee 2E 3A                   		bra	.L170
 1866                             	.LVL177:
 1867                             	.L173:
 769:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					if( SPV_searchCycleByLabel(CMPLT_LBL_END, &destinationCycle) == S_OK )
 1868                             		.loc 1 769 0
 1869 03f0 71 02 02                		add	#2, r0, r2
 1870 03f3 66 31                   		mov	#3, r1
 1871                             	.LVL178:
 1872 03f5 05 00 00 00             		bsr	_SPV_searchCycleByLabel
 1873                             	.LVL179:
 1874 03f9 EF 1A                   		mov.L	r1, r10
 1875 03fb 62 01                   		add	#0, r1
 1876 03fd 21 26                   		bne	.L169
 787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = StartedCycle;
 1877                             		.loc 1 787 0
 1878 03ff FB B2 00 00 00 00       		mov.L	#_StartedCycle, r11
 773:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						STC_updateLastCycleStat_END(0);
 1879                             		.loc 1 773 0
 1880 0405 05 00 00 00             		bsr	_STC_updateLastCycleStat_END
 1881                             	.LVL180:
 787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = StartedCycle;
 1882                             		.loc 1 787 0
 1883 0409 CC BB                   		mov.B	[r11], r11
 795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].cycle = destinationCycle;
 1884                             		.loc 1 795 0
 1885 040b CD 0C 02                		mov.B	2[r0], r12
 787:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						Interpreter_Data[0].phase = StartedCycle;
 1886                             		.loc 1 787 0
 1887 040e C7 7B 02                		mov.B	r11, 2[r7]
 795:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].cycle = destinationCycle;
 1888                             		.loc 1 795 0
 1889 0411 C7 7C 01                		mov.B	r12, 1[r7]
 796:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 						ITP_interpreterFlagsInit((uint8_t)(ITP_FULL_INIT));										
 1890                             		.loc 1 796 0
 1891 0414 CF A1                   		mov.B	r10, r1
 1892 0416 05 00 00 00             		bsr	_ITP_interpreterFlagsInit
 1893                             	.LVL181:
 798:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 					    Interpreter_Data[0].completeLabel.b = CMPLT_LBL_END;
 1894                             		.loc 1 798 0
 1895 041a 3C 70 03                		mov.B	#3, [r7]
 800:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			            SPV_endCycleResetVars();
 1896                             		.loc 1 800 0
 1897 041d 05 00 00 00             		bsr	_SPV_endCycleResetVars
 1898                             	.LVL182:
 1899 0421 2E 07                   		bra	.L170
 1900                             	.L169:
 1901                             	.LBB24:
 1902                             	.LBB25:
1898:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	LIB_Reset_ForceColdReset();
 1903                             		.loc 1 1898 0
 1904 0423 05 00 00 00             		bsr	_LIB_Reset_ForceColdReset
 1905                             	.LVL183:
 1906 0427 03                      		.balign 2,3,5
 1907                             	.L170:
 1908                             	.LBE25:
 1909                             	.LBE24:
 870:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	memcpy(&BufOldReg[FUNC_NUM_TO_MAIN], &BufNewReg[FUNC_NUM_TO_MAIN], (size_t)(FUNC_NUM_ALL - FUNC_NU
 1910                             		.loc 1 870 0
 1911 0428 FB 72 00 00 00 00       		mov.L	#_Tab_HWCFuncNum, r7
 855:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	STC_superVisorUpdateStatistics();
 1912                             		.loc 1 855 0
 1913 042e 05 00 00 00             		bsr	_STC_superVisorUpdateStatistics
 1914                             	.LVL184:
 866:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c ****     REG_updateFuncToMainOldReg();
 1915                             		.loc 1 866 0
 1916 0432 05 00 00 00             		bsr	_REG_updateFuncToMainOldReg
 1917                             	.LVL185:
 870:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	memcpy(&BufOldReg[FUNC_NUM_TO_MAIN], &BufNewReg[FUNC_NUM_TO_MAIN], (size_t)(FUNC_NUM_ALL - FUNC_NU
 1918                             		.loc 1 870 0
 1919 0436 EC 7A                   		mov.L	[r7], r10
 1920 0438 58 A7                   		movu.B	[r10], r7
 1921 043a 59 A3 01                		movu.B	1[r10], r3
 1922 043d 70 71 00 00 00 00       		add	#_BufOldReg, r7, r1
 1923 0443 70 72 00 00 00 00       		add	#_BufNewReg, r7, r2
 1924 0449 43 73                   		sub	r7, r3
 1925 044b 7F 8F                   		smovf
 1926 044d 2E 18                   		bra	.L208
 1927                             	.LVL186:
 1928                             	.L180:
 1929                             	.LBB26:
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	started_cycle = FALSE;
 1930                             		.loc 1 184 0
 1931 044f 66 07                   		mov.L	#0, r7
 1932                             	.LVL187:
 1933 0451 03                      		.balign 2,3,1
 1934                             	.L135:
 366:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 			REG_updateOldReg((uint8_t)(FUNC_ID_START));
 1935                             		.loc 1 366 0
 1936 0452 66 21                   		mov	#2, r1
 1937 0454 05 00 00 00             		bsr	_REG_updateOldReg
 1938                             	.LVL188:
 1939 0458 38 04 FD                		bra	.L133
 1940                             	.LVL189:
 1941                             	.L147:
 1942                             	.LBE26:
 412:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** 	if( (delayHHReg_changed == REG_CHANGED) || (delayMMReg_changed == REG_CHANGED) )
 1943                             		.loc 1 412 0
 1944 045b 5B 11                   		movu.B	r1, r1
 1945 045d 61 11                   		cmp	#1, r1
 1946 045f 3B 9F FD                		bne	.L154
 1947 0462 38 44 FD                		bra	.L182
 1948                             	.LVL190:
 1949                             	.L208:
 890:C:/Workspace/FW_Platform2_5/trunk/Inertia/Control\DW_SuperVisor.c **** }
 1950                             		.loc 1 890 0
 1951 0465 3F 7C 07                		rtsd	#28, r7-r12
 1952                             	.LFE0:
 2324                             	.Letext0:
 2325                             		.file 2 "C:\\Renesas\\e2studio\\GNURXV~1.03-\\rx-elf/rx-elf/optlibinc/stddef.h"
 2326                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 2327                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 2328                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 2329                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmDefines.h"
 2330                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 2331                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 2332                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 2333                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Modules/AlternateControl.h"
 2334                             		.file 11 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Modules/SparklingAid.h"
 2335                             		.file 12 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 2336                             		.file 13 "C:\\Workspace\\FW_Platform2_5\\trunk\\PlatformLibrary\\LIB_Reset/LIB_ResetExp.h"
 2337                             		.file 14 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmFuncLib.h"
 2338                             		.file 15 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_FuncLib.h"
 2339                             		.file 16 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Interpreter.h"
 2340                             		.file 17 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Control/HighLevel_IO_Manager.h"
 2341                             		.file 18 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Control/DW_Fault.h"
 2342                             		.file 19 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\Control/DW_Statistics.h"
 2343                             		.file 20 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\UserInterface/DW_Regulations.h"
