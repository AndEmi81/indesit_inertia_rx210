   1                             		.file	"Heat.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.HEA_tgTemp_Update,"ax",@progbits
   5                             		.global	_HEA_tgTemp_Update
   7                             	_HEA_tgTemp_Update:
   8                             	.LFB1:
   9                             		.file 1 "C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules/Heat.c"
   1:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /*
   2:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** ** **************************************************************************
   3:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** ** **************************************************************************
   4:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */ 
   5:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /** 
   6:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** Gestisce il microprogramma Heat, 
   7:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** Source File
   8:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
   9:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \file    Heat.c
  10:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \ingroup Heat
  11:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \date    07/02/2008
  12:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \author  Valeria Catani
  13:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \version 1.0.0
  14:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */
  15:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  16:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /*
  17:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** Copyright (c) 2004-2008, Indesit Company, IDD.
  18:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** Tutti i diritti sono riservati. All rights reserved.
  19:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */
  20:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  21:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Old Versions
  22:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \version 
  23:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \date    
  24:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \author  
  25:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */
  26:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  27:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  28:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ******** */
  29:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Includes */
  30:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ******** */
  31:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  32:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  33:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #include "CstmHeaders.h"
  34:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  35:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ****************** */
  36:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Defines and Macros */
  37:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ****************** */
  38:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  39:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /**DEBUG*/
  40:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /**DEBUG END*/
  41:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  42:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* *************************** */
  43:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Typedef, Structs and Unions */
  44:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* *************************** */
  45:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  46:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* **************************** */
  47:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Prototype of local functions */
  48:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* **************************** */
  49:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  50:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** void HEA_tgTemp_Update(void);
  51:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  52:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ****************** */
  53:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Exported variables */
  54:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ****************** */
  55:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  56:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* **************** */
  57:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Global variables */
  58:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* **************** */
  59:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  60:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ***************** */
  61:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* Exported function */
  62:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /* ***************** */
  63:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  64:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  65:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /**
  66:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** Gestisce l'esecuzione del microprogramma Heat.
  67:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c ****  
  68:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \param [in] HighStatement specifica l'high statement (opcode +  modificatori F0-F1 + N flag + T fla
  69:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \param [in] LowStatement specifica il low statement (displacement ai dati) del microprogramma.
  70:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c ****  
  71:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \return S_OK se la condizione di avanzamento passo per il microprogramma � verificata (raggiunta 
  72:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \return S_FALSE se non � ancora verificata(temperatura non ancora raggiunta),
  73:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \return codice di errore in altri casi
  74:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c ****  
  75:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \version		1.0.0
  76:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \date 			07/02/2008
  77:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \author			Valeria Catani
  78:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  79:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */
  80:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** uint8_t HEA_uP_Heat_Exe (uint8_t HighStatement,uint8_t LowStatement)
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** {
  82:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE)
  84:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{	/* Prima iterazione del passo */
  85:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		uP_Heat_Data.status = HEAT_INIT;
  87:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
  88:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}
  89:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if ( Res_Pos[LD_WASH_RES_IND]== NO_LD_POS )
  91:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{/* Res lavaggio non presente */
  92:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
  93:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		return S_OK;
  94:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}
  95:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	
  96:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	
  97:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	/* passaggio per uP Heat */
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	FltHeatToutData.uP_exe = TRUE;
  99:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if ( uPDoorStatus == UP_DOOR_WAIT )
 101:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{/* porta aperta o in attesa di timeout dopo la chiusura -> il uP va sospeso */
 102:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		return S_FALSE;
 104:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}
 105:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /*
 106:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** ////////////////////////////////	
 107:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** //VEDI SE MANTENERE QUESTO!!!///
 108:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** ////////////////////////////////	
 109:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */
 110:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	/* Gestione Warning Res OPEN :  Res ON - No Delta */
 111:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	
 112:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	/*
 113:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if ( TESTBIT (FltWarning,WARNING_RES_OPEN_POS) )
 114:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{/ il uP Heat viene interrotto o non eseguito 
 115:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 116:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		SETBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS);	//flag temperatura target raggiunta 
 117:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 118:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		return S_OK;
 119:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}
 120:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	*/
 121:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /*
 122:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** ////////////////////////////////////	
 123:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** //END VEDI SE MANTENERE QUESTO!!!///
 124:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** ////////////////////////////////////	
 125:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */
 126:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 127:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	
 128:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /*Init uP*/	  
 129:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if (uP_Heat_Data.status == HEAT_INIT)
 131:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{/* caricamento dati dalla flash */
 132:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 133:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		if ( BasicLoader( PTR_UP_HEAT, LowStatement, &uPHeat_setting_data ) != S_OK )
 135:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		{		
 136:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			return S_OK;	/*non eseguo il uP, ma abilito avanzamento passo*/
 137:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		}
 138:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 139:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		/* Init Tout riscaldamento in fault */
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		FltHeatToutData.state = FLT_HEAT_TOUT_INIT;
 141:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	  
 142:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		/* Init flag temperatura raggiunta = FALSE */		
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		CLRBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS);		
 144:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			
 145:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		/*init target temp (stacco)*/
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		uP_Heat_Data.tgTemp =  OFFS_B(uPHeat_setting_data.Data,0) ;	/*uP_Heat_Data.tgTemp = ( OFFS_B(uPHe
 147:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 148:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		/*aggiornamento temperatura target in base a modificatori. 
 149:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		Viene fatto solo in Init, poi non pi� modificabile */
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		HEA_tgTemp_Update();
 151:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 152:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #ifndef _ENABLE_NEW_UNDER_VOLTAGE_MANAGEMENT_
 153:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 154:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		FltWarning.bldc_low_voltage_memo = 0;	/*QI- 30.11.09 reset warning in memoria per tout riscaldame
 155:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 156:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #endif /* _ENABLE_NEW_UNDER_VOLTAGE_MANAGEMENT_ */
 157:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 158:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		uP_Heat_Data.status = HEAT_EXE;
 160:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 161:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		return S_FALSE;	/*nella prima iterazione non vengono pilotati i carichi		?????*/
 162:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		
 163:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}/*END HEAT_INIT*/
 164:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if (uP_Heat_Data.status == HEAT_EXE)
 166:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{
 167:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		/*controllo raggiungimento temperatura*/	
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		if( GITemp < uP_Heat_Data.tgTemp )
 169:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		{/* temperatura target NON raggiunta */
 170:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			if ( TESTBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS)!= 0 )
 172:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			{/*temperatura stacco gi� raggiunta - abilitazione a procedere nel passo*/
 173:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 174:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 				return S_OK;
 175:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			}																						 
 176:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			/*else temperatura non ancora raggiunta*/
 177:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			if (	FltHeatToutData.state == FLT_HEAT_TOUT_END )
 179:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			{/* timeout riscaldamento raggiunto (in teoria non passo pi� qui perch� vado in Fault )*/
 180:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 181:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 				return S_OK; 
 182:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			}
 183:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 184:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			/* QI 29.01.10 ELIMINATO */
 185:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			/*QI 07.01.10 - quando � in esecuzione il uP Heat � attivo il Tout di riscaldamento 
 186:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			ribadito lo stato di EXE per assicurare la ripresa dopo PAUSE e blackout */
 187:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			/*FltHeatToutData.state = FLT_HEAT_TOUT_EXE;*/
 188:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			LoadsReq_New[Res_Pos[LD_WASH_RES_IND]].b = RES_ON;
 190:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		}	
 191:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		else
 192:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		{/* temperatura target raggiunta - resistenza OFF*/
 193:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 194:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			/* 
 195:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			questa istruzione garantisce continuit� tra le fasi se usata con routine continuit� carichi 
 196:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			perch� comunque in Init i carichi non vengono pilotati */
 197:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			if ( (TESTBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS) == 0) && (LoadsReq_Old[Res_Pos[LD_WASH_RES_I
 199:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			{
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 				LoadsReq_New[Res_Pos[LD_WASH_RES_IND]].b = RES_ON;
 201:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			}
 202:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 203:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			/* disabilito gestione fault timeout riscaldamento */
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			FltHeatToutData.state = FLT_HEAT_TOUT_DISABLE;
 205:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 206:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			/* flag temperatura target raggiunta */
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			SETBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS);	
 208:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			return S_OK;
 210:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		}
 211:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 212:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 										
 213:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}/*END HEAT_EXE*/
 214:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 215:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	return S_FALSE;	
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** }
 217:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 218:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 219:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** /**
 220:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** Gestisce aggiornamento della temperatura target per il uP in base alla tabella di modificatori
 221:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 222:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \param [in]		*p : puntatore al campo dati del uP
 223:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \return 		void (la temperatura target (temperatura di stacco) viene aggiornata come var globale)
 224:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c ****  
 225:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \version		1.0.0
 226:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \date 			07/02/2008
 227:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \author			Valeria Catani
 228:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 229:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** \note			in sospeso gestione modificatori
 230:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 				  
 231:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** */
 232:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #if defined (BUILD_FREESCALE_GB60)
 233:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #pragma INLINE
 234:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #elif defined (BUILD_RENESAS_36079)
 235:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #pragma inline(HEA_tgTemp_Update)
 236:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** #endif
 237:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** void HEA_tgTemp_Update(void)
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** {		
  10                             		.loc 1 238 0
  11 0000 7E A7                   		push.l	r7
  12                             	.LCFI0:
 239:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** uint8_t temp;
 240:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** int8_t variation;
 241:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** int16_t delta;
 242:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** uint8_t res;
 243:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	temp = OFFS_B(uPHeat_setting_data.Data,0);	
  13                             		.loc 1 244 0
  14 0002 FB 72 00 00 00 00       		mov.L	#_uPHeat_setting_data, r7
  15 0008 EC 7E                   		mov.L	[r7], r14
 238:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** {		
  16                             		.loc 1 238 0
  17 000a 60 40                   		sub	#4, r0
  18                             	.LCFI1:
 245:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 246:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	/* Gestione modificatori */
 247:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 248:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	res = GetModifierValue (OFFS_B(uPHeat_setting_data.Data,1), &variation);
  19                             		.loc 1 248 0
  20 000c CD E1 01                		mov.B	1[r14], r1
  21 000f EF 02                   		mov.L	r0, r2
 244:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	temp = OFFS_B(uPHeat_setting_data.Data,0);	
  22                             		.loc 1 244 0
  23 0011 CC E7                   		mov.B	[r14], r7
  24                             	.LVL0:
  25                             		.loc 1 248 0
  26 0013 05 00 00 00             		bsr	_GetModifierValue
  27                             	.LVL1:
 249:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 250:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if(MOD_DONT_CARE == res || S_FALSE == res)
  28                             		.loc 1 250 0
  29 0017 5B 11                   		movu.B	r1, r1
  30 0019 75 51 7F                		cmp	#0x7f, r1
  31 001c 20 06                   		beq	.L2
  32                             		.loc 1 250 0 is_stmt 0 discriminator 1
  33 001e 61 11                   		cmp	#1, r1
  34 0020 21 06                   		bne	.L3
  35                             		.balign 2,3,4
  36                             	.L2:
 251:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{/* Se non � attivo nessun modificatore la variazione viene posta a zero */
 252:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 253:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		variation=0;
  37                             		.loc 1 253 0 is_stmt 1
  38 0022 3C 00 00                		mov.B	#0, [r0]
  39                             	.LVL2:
  40 0025 03                      		.balign 2,3,5
  41                             	.L3:
 254:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}
 255:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 256:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if(variation)
  42                             		.loc 1 256 0
  43 0026 CC 02                   		mov.B	[r0], r2
  44 0028 CF 2E                   		mov.B	r2, r14
  45 002a 61 0E                   		cmp	#0, r14
  46 002c 20 0A                   		beq	.L4
 257:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	{/* variazione != 0 va applicata*/
 258:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	 
 259:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		/* calcolo delta */                      
 260:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		delta = GetDeltaFromVariation(temp,variation);
  47                             		.loc 1 260 0
  48 002e 5B 71                   		movu.B	r7, r1
  49                             	.LVL3:
  50 0030 05 00 00 00             		bsr	_GetDeltaFromVariation
  51                             	.LVL4:
 261:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 262:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		/* aggiornamento */     
 263:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		temp += (uint8_t)delta;         
  52                             		.loc 1 263 0
  53 0034 4B 17                   		add	r1, r7
  54                             	.LVL5:
  55                             		.balign 2,3,5
  56                             	.L4:
 264:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	}
 265:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 
 266:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	uP_Heat_Data.tgTemp = temp;
  57                             		.loc 1 266 0
  58 0036 FB E2 00 00 00 00       		mov.L	#_uP_Heat_Data, r14
  59 003c C3 E7                   		mov.B	r7, [r14]
 267:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** }
  60                             		.loc 1 267 0
  61 003e 3F 77 02                		rtsd	#8, r7-r7
  62                             	.LFE1:
  64 0041 03                      		.section	.text.HEA_uP_Heat_Exe,"ax",@progbits
  65                             		.global	_HEA_uP_Heat_Exe
  67                             	_HEA_uP_Heat_Exe:
  68                             	.LFB0:
  81:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** {
  69                             		.loc 1 81 0
  70                             	.LVL6:
  71 0000 6E 7A                   		pushm	r7-r10
  72                             	.LCFI2:
  83:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if (Interpreter_Data[0].stepInitialized == FALSE)
  73                             		.loc 1 83 0
  74 0002 FB 72 00 00 00 00       		mov.L	#_Interpreter_Data, r7
  75 0008 89 77                   		mov.B	4[r7], r7
  76 000a 64 27                   		and	#2, r7
  77 000c 21 0C                   		bne	.L13
  86:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		uP_Heat_Data.status = HEAT_INIT;
  78                             		.loc 1 86 0
  79 000e FB A2 00 00 00 00       		mov.L	#_uP_Heat_Data, r10
  80 0014 C7 A7 01                		mov.B	r7, 1[r10]
  81 0017 03                      		.balign 2,3,5
  82                             	.L13:
  90:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if ( Res_Pos[LD_WASH_RES_IND]== NO_LD_POS )
  83                             		.loc 1 90 0
  84 0018 FB 72 00 00 00 00       		mov.L	#_Res_Pos, r7
  85 001e 58 7E                   		movu.B	[r7], r14
  86 0020 75 5E FF                		cmp	#0xff, r14
  87 0023 21 05                   		bne	.L14
  88 0025 38 E1 00                		bra	.L26
  89                             	.L14:
  98:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	FltHeatToutData.uP_exe = TRUE;
  90                             		.loc 1 98 0
  91 0028 FB 72 00 00 00 00       		mov.L	#_FltHeatToutData, r7
  92 002e CC 7A                   		mov.B	[r7], r10
  93 0030 78 0A                   		bset	#0, r10
  94 0032 C3 7A                   		mov.B	r10, [r7]
 100:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if ( uPDoorStatus == UP_DOOR_WAIT )
  95                             		.loc 1 100 0
  96 0034 FB A2 00 00 00 00       		mov.L	#_uPDoorStatus, r10
  97 003a 58 AA                   		movu.B	[r10], r10
  98 003c 61 0A                   		cmp	#0, r10
  99 003e 3A CC 00                		beq	.L21
 130:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if (uP_Heat_Data.status == HEAT_INIT)
 100                             		.loc 1 130 0
 101 0041 FB A2 00 00 00 00       		mov.L	#_uP_Heat_Data, r10
 102 0047 CD A4 01                		mov.B	1[r10], r4
 103 004a 5B 41                   		movu.B	r4, r1
 104                             	.LVL7:
 105 004c 61 01                   		cmp	#0, r1
 106 004e 21 41                   		bne	.L16
 134:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		if ( BasicLoader( PTR_UP_HEAT, LowStatement, &uPHeat_setting_data ) != S_OK )
 107                             		.loc 1 134 0
 108 0050 75 41 13                		mov	#19, r1
 109 0053 FB 32 00 00 00 00       		mov.L	#_uPHeat_setting_data, r3
 110 0059 05 00 00 00             		bsr	_BasicLoader
 111                             	.LVL8:
 112 005d 5B 11                   		movu.B	r1, r1
 113 005f 61 01                   		cmp	#0, r1
 114 0061 3B A5 00                		bne	.L26
 140:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		FltHeatToutData.state = FLT_HEAT_TOUT_INIT;
 115                             		.loc 1 140 0
 116 0064 CC 7E                   		mov.B	[r7], r14
 117 0066 64 1E                   		and	#1, r14
 118 0068 65 2E                   		or	#2, r14
 119 006a C3 7E                   		mov.B	r14, [r7]
 143:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		CLRBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS);		
 120                             		.loc 1 143 0
 121 006c FB 72 00 00 00 00       		mov.L	#_Flags_1, r7
 122 0072 CC 7E                   		mov.B	[r7], r14
 123 0074 75 2E BF                		and	#0xffffffbf, r14
 124 0077 C3 7E                   		mov.B	r14, [r7]
 146:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		uP_Heat_Data.tgTemp =  OFFS_B(uPHeat_setting_data.Data,0) ;	/*uP_Heat_Data.tgTemp = ( OFFS_B(uPHe
 125                             		.loc 1 146 0
 126 0079 FB 72 00 00 00 00       		mov.L	#_uPHeat_setting_data, r7
 127 007f EC 77                   		mov.L	[r7], r7
 128 0081 CC 77                   		mov.B	[r7], r7
 129 0083 C3 A7                   		mov.B	r7, [r10]
 150:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		HEA_tgTemp_Update();
 130                             		.loc 1 150 0
 131 0085 05 00 00 00             		bsr	_HEA_tgTemp_Update
 132                             	.LVL9:
 159:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		uP_Heat_Data.status = HEAT_EXE;
 133                             		.loc 1 159 0
 134 0089 F9 A4 01 01             		mov.B	#1, 1[r10]
 135 008d 2E 7D                   		bra	.L21
 136                             	.LVL10:
 137                             	.L16:
 165:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 	if (uP_Heat_Data.status == HEAT_EXE)
 138                             		.loc 1 165 0
 139 008f 61 11                   		cmp	#1, r1
 140 0091 21 79                   		bne	.L21
 168:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		if( GITemp < uP_Heat_Data.tgTemp )
 141                             		.loc 1 168 0
 142 0093 FB 32 00 00 00 00       		mov.L	#_GITemp, r3
 143 0099 58 32                   		movu.B	[r3], r2
 144                             	.LVL11:
 145 009b 58 A3                   		movu.B	[r10], r3
 146 009d FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 147 00a3 47 32                   		cmp	r3, r2
 148 00a5 22 25                   		bgeu	.L18
 171:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			if ( TESTBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS)!= 0 )
 149                             		.loc 1 171 0
 150 00a7 CC AA                   		mov.B	[r10], r10
 151 00a9 75 2A 40                		and	#64, r10
 152 00ac 5B AA                   		movu.B	r10, r10
 153 00ae 61 0A                   		cmp	#0, r10
 154 00b0 21 56                   		bne	.L26
 178:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			if (	FltHeatToutData.state == FLT_HEAT_TOUT_END )
 155                             		.loc 1 178 0
 156 00b2 DC 77                   		mov.W	[r7], r7
 157 00b4 77 27 00 FE 00          		and	#0xfe00, r7
 158 00b9 76 07 00 06             		cmp	#0x600, r7
 159 00bd 20 49                   		beq	.L26
 189:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			LoadsReq_New[Res_Pos[LD_WASH_RES_IND]].b = RES_ON;
 160                             		.loc 1 189 0
 161 00bf FB 72 00 00 00 00       		mov.L	#_LoadsReq_New, r7
 162 00c5 FE 0E 74                		mov.B	r4, [r14,r7]
 163 00c8 2E 44                   		bra	.L15
 164                             	.L18:
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			if ( (TESTBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS) == 0) && (LoadsReq_Old[Res_Pos[LD_WASH_RES_I
 165                             		.loc 1 198 0
 166 00ca CC A7                   		mov.B	[r10], r7
 167 00cc EF 7A                   		mov.L	r7, r10
 168 00ce 75 2A 40                		and	#64, r10
 169 00d1 5B AA                   		movu.B	r10, r10
 170 00d3 61 0A                   		cmp	#0, r10
 171 00d5 21 19                   		bne	.L19
 198:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			if ( (TESTBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS) == 0) && (LoadsReq_Old[Res_Pos[LD_WASH_RES_I
 172                             		.loc 1 198 0 is_stmt 0 discriminator 1
 173 00d7 FB A2 00 00 00 00       		mov.L	#_LoadsReq_Old, r10
 174 00dd FE CE AA                		movu.B	[r14,r10], r10
 175 00e0 61 1A                   		cmp	#1, r10
 176 00e2 21 0C                   		bne	.L19
 200:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 				LoadsReq_New[Res_Pos[LD_WASH_RES_IND]].b = RES_ON;
 177                             		.loc 1 200 0 is_stmt 1
 178 00e4 FB 42 00 00 00 00       		mov.L	#_LoadsReq_New, r4
 179 00ea FE 0E 4A                		mov.B	r10, [r14,r4]
 180 00ed 03                      		.balign 2,3,5
 181                             	.L19:
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			FltHeatToutData.state = FLT_HEAT_TOUT_DISABLE;
 182                             		.loc 1 204 0
 183 00ee FB A2 00 00 00 00       		mov.L	#_FltHeatToutData, r10
 184 00f4 CC AE                   		mov.B	[r10], r14
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			SETBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS);	
 185                             		.loc 1 207 0
 186 00f6 75 37 40                		or	#64, r7
 204:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			FltHeatToutData.state = FLT_HEAT_TOUT_DISABLE;
 187                             		.loc 1 204 0
 188 00f9 64 1E                   		and	#1, r14
 189 00fb C3 AE                   		mov.B	r14, [r10]
 207:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			SETBIT(Flags_1,JIF_FLAG1_TARGET_TEMP_OK_POS);	
 190                             		.loc 1 207 0
 191 00fd FB A2 00 00 00 00       		mov.L	#_Flags_1, r10
 192 0103 C3 A7                   		mov.B	r7, [r10]
 193 0105 03                      		.balign 2,3,1
 194                             	.L26:
 209:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 			return S_OK;
 195                             		.loc 1 209 0
 196 0106 66 01                   		mov	#0, r1
 197 0108 2E 04                   		bra	.L15
 198                             	.L21:
 103:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** 		return S_FALSE;
 199                             		.loc 1 103 0
 200 010a 66 11                   		mov	#1, r1
 201                             		.balign 2,3,1
 202                             	.L15:
 216:C:/Workspace/FW_Platform2_5/trunk/Inertia/Modules\Heat.c **** }
 203                             		.loc 1 216 0
 204 010c 5B 11                   		movu.B	r1, r1
 205 010e 3F 7A 04                		rtsd	#16, r7-r10
 206                             	.LFE0:
 264                             	.Letext0:
 265                             		.file 2 "C:\\Workspace\\FW_Platform2_5\\trunk\\HAL\\HAL_General/StandardTypes.h"
 266                             		.file 3 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_SwTimersCounters/SwTimersCounter
 267                             		.file 4 "C:\\Workspace\\FW_Platform2_5\\trunk\\ProductModules\\PM_Library/LIB_Utilities.h"
 268                             		.file 5 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Types.h"
 269                             		.file 6 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmTypes.h"
 270                             		.file 7 "C:\\Workspace\\FW_Platform2_5\\trunk\\PlatformLibrary\\LIB_IOManager/OutputManagerExp.h"
 271                             		.file 8 "C:\\Workspace\\FW_Platform2_5\\trunk\\Application_Platform/APP_Global.h"
 272                             		.file 9 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmGlobal.h"
 273                             		.file 10 "C:\\Workspace\\FW_Platform2_5\\trunk\\Inertia\\General/CstmFuncLib.h"
